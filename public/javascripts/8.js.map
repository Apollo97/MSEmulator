{"version":3,"sources":["webpack:///./src/game/init.js","webpack:///./src/game/IRenderer.js","webpack:///./src/game/math.js","webpack:///./src/game/Animation.js","webpack:///./src/game/Canvas2DRenderer.js","webpack:///./src/game/Engine.js","webpack:///./src/game/Renderer/CharacterRenderer.js","webpack:///./src/game/Renderer/ChatBalloon.js","webpack:///./src/game/Renderer/PanelRenderer.js","webpack:///./src/game/Renderer/NameLabel.js","webpack:///./src/game/Sprite.js","webpack:///./public/javascripts/resource.js","webpack:///./src/game/Physics/PPlayer.js","webpack:///./src/game/SceneObject.js","webpack:///./src/game/Physics/Physics.js","webpack:///./src/game/Physics/Filter.js","webpack:///./src/game/Physics/World.js","webpack:///./src/game/Renderer/MobRenderer.js","webpack:///./src/game/Renderer/NpcRenderer.js","webpack:///./src/game/Renderer/ParticleSystem.js","webpack:///./src/game/Map.js","webpack:///./src/ui/Basic/KeySlot.js","webpack:///./src/game/InputKey.js","webpack:///./src/game/Renderer/Chair.js","webpack:///./src/game/SceneCharacter.js","webpack:///./src/Common/AttackInfo.js","webpack:///./src/game/Renderer/RenderingOption.js","webpack:///./src/Client/PMovePath.js","webpack:///./src/init.js","webpack:///./src/game/Renderer/LifeRenderer.js","webpack:///./src/game/Renderer/Layer.js","webpack:///./src/box2d.ts/build/Common/b2Settings.js","webpack:///./src/box2d.ts/build/Common/b2Math.js","webpack:///./src/box2d.ts/build/Common/b2Draw.js","webpack:///./src/box2d.ts/build/Common/b2Timer.js","webpack:///./src/box2d.ts/build/Common/b2GrowableStack.js","webpack:///./src/box2d.ts/build/Common/b2BlockAllocator.js","webpack:///./src/box2d.ts/build/Common/b2StackAllocator.js","webpack:///./src/box2d.ts/build/Collision/b2Distance.js","webpack:///./src/box2d.ts/build/Collision/b2Collision.js","webpack:///./src/box2d.ts/build/Collision/b2DynamicTree.js","webpack:///./src/box2d.ts/build/Collision/b2BroadPhase.js","webpack:///./src/box2d.ts/build/Collision/b2TimeOfImpact.js","webpack:///./src/box2d.ts/build/Collision/b2CollideCircle.js","webpack:///./src/box2d.ts/build/Collision/b2CollidePolygon.js","webpack:///./src/box2d.ts/build/Collision/b2CollideEdge.js","webpack:///./src/box2d.ts/build/Collision/Shapes/b2Shape.js","webpack:///./src/box2d.ts/build/Dynamics/b2Body.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2Joint.js","webpack:///./src/box2d.ts/build/Collision/Shapes/b2CircleShape.js","webpack:///./src/box2d.ts/build/Collision/Shapes/b2PolygonShape.js","webpack:///./src/box2d.ts/build/Collision/Shapes/b2EdgeShape.js","webpack:///./src/box2d.ts/build/Collision/Shapes/b2ChainShape.js","webpack:///./src/box2d.ts/build/Dynamics/b2Fixture.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2DistanceJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2AreaJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2FrictionJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2GearJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2MotorJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2MouseJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2PrismaticJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2PulleyJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2RevoluteJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2RopeJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2WeldJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2WheelJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2Contact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2CircleContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2PolygonContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2PolygonAndCircleContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2EdgeAndCircleContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2EdgeAndPolygonContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2ChainAndCircleContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2ChainAndPolygonContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2ContactFactory.js","webpack:///./src/box2d.ts/build/Dynamics/b2WorldCallbacks.js","webpack:///./src/box2d.ts/build/Dynamics/b2ContactManager.js","webpack:///./src/box2d.ts/build/Dynamics/b2TimeStep.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2ContactSolver.js","webpack:///./src/box2d.ts/build/Dynamics/b2Island.js","webpack:///./src/box2d.ts/build/Particle/b2Particle.js","webpack:///./src/box2d.ts/build/Particle/b2ParticleGroup.js","webpack:///./src/box2d.ts/build/Particle/b2StackQueue.js","webpack:///./src/box2d.ts/build/Particle/b2VoronoiDiagram.js","webpack:///./src/box2d.ts/build/Particle/b2ParticleSystem.js","webpack:///./src/box2d.ts/build/Dynamics/b2World.js","webpack:///./src/box2d.ts/build/Controllers/b2Controller.js","webpack:///./src/box2d.ts/build/Controllers/b2BuoyancyController.js","webpack:///./src/box2d.ts/build/Controllers/b2ConstantAccelController.js","webpack:///./src/box2d.ts/build/Controllers/b2ConstantForceController.js","webpack:///./src/box2d.ts/build/Controllers/b2GravityController.js","webpack:///./src/box2d.ts/build/Controllers/b2TensorDampingController.js","webpack:///./src/box2d.ts/build/Rope/b2Rope.js","webpack:///./src/box2d.ts/build/Box2D.js","webpack:///./src/game/Physics/Foothold.js","webpack:///./src/game/Physics/Ground.js","webpack:///./src/game/Renderer/CharacterActionAnimation.js","webpack:///./src/game/Item.js","webpack:///./src/Common/PlayerData.js","webpack:///./src/game/Renderer/SceneRenderer.js","webpack:///./src/game/Physics/PBullet.js","webpack:///./src/game/Skill.js","webpack:///./src/game/Physics/DebugDraw.js","webpack:///./src/game/Physics/LadderRope.js","webpack:///./src/game/Physics/PMob.js","webpack:///./src/game/MobSkill/MobSkillBase.js","webpack:///./src/ui/Basic/KeySlotData.js","webpack:///./src/util.js","webpack:///./src/game/MobSkill/238.FairyDust.js","webpack:///./src/Common/Packet/index.js","webpack:///./src/game/Renderer/DamageNumber.js","webpack:///./src/game/MobSkill/238.FlowerTrap.js","webpack:///./src/Common/Packet/LoginPacket.js","webpack:///./src/Common/Packet/ChatPacket.js","webpack:///./src/Common/Packet/CharacterPacket.js","webpack:///./src/Client/Client.js","webpack:///./src/game/GameState.js","webpack:///./src/game/Cursor.js","webpack:///./src/game/main.js"],"names":["GlobalVar","[object Object]","isMobile","test","navigator","userAgent","this","is_mobile","m_is_run","MAX_FPS","FRAME_ELAPSED","CANVAS_SCALE","m_editor_mode","m_display_foothold","m_display_physics_debug","m_display_debug_info","m_debugDraw","_Physics_DebugDraw_js__WEBPACK_IMPORTED_MODULE_4__","m_display_selected_object","m_selected_object","m_hover_object","m_viewRect","_math_js__WEBPACK_IMPORTED_MODULE_3__","m_is_rendering_map","m_display_back","m_display_front","m_display_mapobj","m_display_maptile","m_display_particle_system","m_display_skeletal_anim","m_display_portal","m_display_name_label","m_display_player","m_display_other_player","m_display_life","m_display_npc","m_display_mob","NameLabel_default_style","ChatBalloon_default_style","ChatBalloon_display_duration","input_keyDown","input_keyUp","mouse_move","mouse_x","mouse_y","mouse_dl","mouse_ul","mouse_dm","mouse_um","mouse_dr","mouse_ur","SceneObjectMgr","layeredObjects","i","lo","Object","defineProperty","enumerable","writable","value","Update","stamp","layer","length","uid","update","RenderLayer","engine","render","addToScene","obj","Number","isSafeInteger","TypeError","$layer","$objectid","destroy","$gv","window","ColorRGB","r","g","b","constructor","rgb","s","rgb2","Math","trunc","col","h","max","min","v","d","ColorHSV","floor","f","p","q","t","toHSV","PI","_math_js__WEBPACK_IMPORTED_MODULE_0__","hsv","hsv2","_ImageFilter","hue","sat","bri","contrast","_hue","_sat","_bri","_contrast","reset","fromHsv","ImageFilter","super","arguments","__proto__","prototype","isEmpty","set","IGraph","url","info","width","height","$promise","undefined","_vbo","x","y","configurable","get","_isLoaded_or_doload","__isLoading_or_doload","isLoaded","_url","src","_isLoaded","_gl","alert","deleteTexture","texture","Error","_engine","_ctx","z","_dispose","__loadTexture","image","Image","Promise","resolve","reject","addEventListener","e","target","naturalWidth","naturalHeight","_handleImageLoaded","_graph_rect","console","error","$all_promise","push","$get","imageUrl","cbfunc","tasks","log","all","IRenderer","_GraphType","ctx","_globalAlpha","_globalAlphaStack","screen_size","id","Graph","imageSmoothingEnabled","_canvas","graph","dx","dy","sx","sy","m11","m12","m21","m22","color","f4v","globalAlpha","w","ImageDataHelper","canvas","document","createElement","getContext","clearRect","drawImage","getImageData","imagedata","putImageData","toDataURL","Vec2","empty","v2","floatVar","ang","cos","sin","sqrt","p2","lx","ly","Rectangle","left","top","other","right","bottom","size","center","w2","h23","cx","cy","hwidth","hheight","Randomizer","random","clamp","m_draw_animation_texture_info","IAnimation","raw","_raw","defineProperties","frame","time","delta","textures","is_loop","is_end","reduce","pv","cv","delay","newAnim","AnimationBase","_Sprite_js__WEBPACK_IMPORTED_MODULE_2__","fc","renderer","angle","flip","drawRotaGraph","Animation","draw","_draw_and_preload","_experimental_particle","$mat2d","gl_matrix","$mat4","$quat","_ctx2","_canvas2","that","getElementById","canvas2","_resize_canvas","alpha","innerWidth","innerHeight","onresize","innerHTML","ctx2","setTransform","save","restore","translate","scale","rotate","red","green","blue","toFixed","fillStyle","strokeStyle","pop","c","beginPath","fillRect","swidth","sheight","horizontal","vertical","drawGraph","pushMatrix","_drawRotaGraph","popMatrix","clip","orix","oriy","px","py","_drawImage","_drawRotaClipGraph","filter","toFilter","globalCompositeOperation","toString","rect","fill","scaleX","scaleY","$engine","init","SSAnim","SetRenderingContext","zMap","sMap","FragmentTexture","_Sprite_js__WEBPACK_IMPORTED_MODULE_5__","full_path","origin","_math_js__WEBPACK_IMPORTED_MODULE_6__","map","relative","calcRelative","_calcRelative","_IRenderer_js__WEBPACK_IMPORTED_MODULE_4__","opacity","visible","_slot","_place","classList","not_value","order","brow","neck","navel","hand","handMove","_earBelowHead","earBelowHead","_earOverHead","earOverHead","base","anchor","minus","plus","chara","body","head","_getRelativeFunction","isHasAnchor","isAnchorNeck","_calcRelative_neck","isAnchorBrow","_calcRelative_brow","isAnchorNavel","slots","_getOrigin","_calcRelative_navel","isAnchorHand","_calcRelative_hand","isAnchorHandMove","lastIndexOf","_calcRelative_handMove_lHand","_calcRelative_handMove","_calcRelativeEmpty","_anchor","fragments","arm","getTexture","tamingMob","adj_pos","drawGraph2","BodyFragmentTexture","hideBody","HairFragmentTexture","args","graph2","graph3","_render","ItemEffectAnimation","_Animation__WEBPACK_IMPORTED_MODULE_2__","__getAttr","load","attr","defVal","actionExceptRotation","oy","ItemEffect","animation","action","fixed","enable","itemEffectList","_list","list","clear","forEach","add","parseInt","ex","equipID","has","eff","data","_load","front","__construct","join","Set","CharacterFragmentBase","CharacterBodyFragment","getFrameTexture","action_frame","CharacterFaceFragment","emotion_frame","emotion","CharacterTamingMobFragment","_action_frame","_ride_action","EquipImageFilter","equip","j","k","ft","ICharacterAppearanceBase","CharacterAppearanceBase","effect","_onload","categoryInfo","slot_order","islot","vslot","toJSON","__onload","func","call","cateInfo","use_category","_public_javascripts_resource_js__WEBPACK_IMPORTED_MODULE_0__","isEquipExist","getItem","load_extern_item_data","__load_slot","__load_fragments","then","a","FragmentConstructor","action_list","keys","_raw_textures","_base_path","__load_frame_textures","fragment_textures","place","frag","__load_place_textures","path","FragmentTextureConstructor","slot","islots","match","vslots","icon","getIconUrl","iconRaw","getIconRawUrl","_animation_type","CharacterAppearance","CharacterEquip","CharacterHeadBase","CharacterHair","CharacterFaceBase","face","_info","FragmentType","elfEarFragment","lefEarFragment","highlefEarFragment","ear","lefEar","highlefEar","elfEar","slice","type","actionMap","characterAction","emotionMap","characterEmotion","tm","CharacterSlots","_ordered_slot","hair","_hair2","_hairMix2","_hair3","_hairMix3","cap","accessoryFace","accessoryEyes","accessoryEars","coat","longcoat","pants","shoes","glove","cape","shield","weapon","_hair","hairColor2","hairMix2","hairColor3","hairMix3","getColorHairID","getHairColor","hc2Id","$promise_hair2","__loadColoredHair","hair2","item","ori","hc3Id","$promise_hair3","hair3","loadedEquip","_unload","warn","slotName","ha","enumerate_equip","CharacterChangeLog","useEquip","unuseEquip","weaponType","CharacterAnimationBase","_$dirty","job","subJob","actani","_CharacterActionAnimation_js__WEBPACK_IMPORTED_MODULE_7__","speed","fixed_speed","pause","_action","_emotion","_emotion_frame","_emotion_time","_emotion_frame_sequence","__require_update","__frag_list","$$changeLog","name","nc","count","getFrameCount","act","_act","reload","action_frame_count","emo","circularSequence","emotion_frame_count","next","emotion_time","emotion_delay","getDelay","_stamp","getSpeed","isEnd","loop","_update","__update_frag_list","pushGlobalAlpha","__draw_list","popGlobalAlpha","m_a","__add_equip_to_frag_list","is_back","fts","startsWith","__add_frag_to_list","ae","_calcBoundBox","x0","y0","x1","y1","_boundBox","CharacterRenderer","tx","ty","__load_task","result","Init","reverse","use","initAnimation","waitLoaded","_draw","__forceUpdate","_waitFrameTexturesLoaded","category","getJobWeaponCategory","isCashWeapon","task","_use","_unuse","code","es","split","_clear","indexOf","ss","cate","h2","h3","hc","c2","m2","c3","m3","hairMix4","apply","isFinite","hairColor","faceColor","getFaceColor","getColorFaceID","changeLog","unuse","genCode","_stringify","link","enumerate","animationName","itemList","JSON","stringify","values","transformItemData","encodeURI","Boolean","region","version","__v","m","toUpperCase","itemId","saturation","strNum","brightness","val","open","_outlink","__texture_to_base64","frag_list","file_name","svg","clz","DownloadData","filename","bound","$swapCanvas","c2w","c2h","base64","elem","download","href","appendChild","click","removeChild","$src","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","onerror","ev","readAsDataURL","response","responseType","send","_init_js__WEBPACK_IMPORTED_MODULE_1__","ChatBalloon","style","cache","cb","assign","promise","argb","clr","defCol","str_rgba","padStart","nw","_Sprite_js__WEBPACK_IMPORTED_MODULE_1__","n","ne","sw","se","arrow","text","lines","LINE_HEIGHT","font","textAlign","textBaseline","min_width","_tw","line","measureText","hw","tw","th","draw2","_drawPattern","xw","r_adj","arrow_hw","hw_arrow_hw","fillText","$images_ChatBalloon","PanelRenderer_PanelRenderer","Sprite","_drawPatterncx","NameLabel_NameLabel","label","_load_center","_load_color","labelStyle","$images_NameLabel","SpriteBase","_Engine_js__WEBPACK_IMPORTED_MODULE_2__","__w","__h","isTexture","hasOwnProperty","__isEmpty","group","groupEnd","_order","defaultValue","propertyName","converter","_get","sh","drawPattern","drawHorizontalPattern","drawVerticalPattern","_drawHorizontalPattern","_drawVerticalPattern","$failed_urls","$archive","character_emotion_list","character_action_list","ItemCategoryInfo","id_prefix","imgDir","listPath","categoryName","stringPath","dataDir","stringDir","iconPath","iconRawPath","results","desc","DATA_TAG","DATA_VERSION","_id","$ItemCategoryInfo","Equip","Consume","Etc","Install","Cash","typeName","0","1","2","3","4","typeId","0000","0001","0002","0003","0004","0100","0101","0102","0103","0104","0105","0106","0107","0108","0109","0110","0121","0122","0123","0124","0125","0126","0127","0128","0130","0131","0132","0133","0134","013526","013530","0136","0137","0138","0140","0141","0142","0143","0144","0145","0146","0147","0148","0149","0150","0151","0152","0153","0154","0155","0156","0157","0158","0170","019","0301","_categoryList","info_map","cat","key","ResourceManager","dp","equip_map","$setValue","parse","timeout","status","responseText","ontimeout","onabort","root_path","$ROOT_PATH","archive","failed_urls","endsWith","ps","lastIndex","origin_value","$getValue","$ResourceManager","symbol_isPack","Symbol","url_startsWith_protocol","RegExp","bind","_setValueByPath","is_pack","_getValueFromArchiveByPath","_path","_getDataPathByUrl","$getValueAsync","async","pack","packUrl","jsonText","packSync","dataUrl","dataSync","listUrl","listSync","soundMp3Url","soundWavUrl","assetUrl","asset","ItemAttrNormalize","gender","_equip","regexp_getHairStyleID","regexp_getFaceStyleID","regexp_getHairColor","regexp_getFaceColor","CharacterRenderConfig","id_1","id_2","String","ItemTypeInfo","Hat","Cape","Top","Overall","Glove","Bottom","Shield","Shoes","Eye Decoration","Earrings","Face Accessory","Face","Hair","external","load_external_resource","_external_raw","typeInfo","overallCategory","toLowerCase","subCategory","it","cash","isCash","","external_resource_promise","_concat_external_resource_p","origin_data","_concat_external_resource","concat_external_resource","id_map","Map","ori_item","_name","_desc","$foreign","trigger_update_external_equip_list","default_","frameBooks","default","frames","effects","_frags","frags","_frag","originOrZero","mapOffset","position","metaInfo","DEGTORAD","b2Vec2_temp","_Physics_js__WEBPACK_IMPORTED_MODULE_0__","chara_profile","density","foot_width","foot_j_width","JUMP_FORCE","MOVEMENT_VELOCITY","$LADDER_SPEED","PLAYER_USE_WHEEL_WALKER","FOOT_FRICTION","MOVEMENT_POWER","MOVEMENT_STOP_POWER","PORTAL_COOLDOWN","PPlayerState","_begin_jump","jump","jump_count","_drop","walk","prone","dropDown","_fly","brake","ladder","ladder_move_dir","invincible","freeze","invokeSkill","portal_cooldown","knockback","outOfControl","FootContact","foothold","priority","PCharacterBase","setMovementSpeed","foot_walk","walker","$foothold","prev_$fh","leave_$fh","_foothold","_foot_at","_foothold_priority","_foot_contact_list","portal","_walker_omega","jump_force","state","clearForce","by","fy","SetPositionXY","ConstantVelocity","pos","GetPosition","mapRenderer","mapController","controller","map_id","getMap","exeScript","reg","tn","cmd","fromTn","toPortal","portalMgr","portals","find","pn","_gotoPortal","tpid","tp","doAfterStep","unload","setPosition","m_world","onceUnlock","_useLadder","contactLadder","flag","world","$ladder_pj","ladderBody","GetAngle","GetAngularVelocity","SetAngle","SetFixedRotation","SetAwake","SetLinearVelocity2","m_type","b2_kinematicBody","SetMotorSpeed","calcHeight","getPosition","pjd","bodyA","bodyB","localAxisA","lowerTranslation","upperTranslation","enableLimit","maxMotorForce","_getMass","pj","CreateJoint","b2_dynamicBody","DestroyJoint","$sticky_pj","_isCanMove","up","down","EnableMotor","mass","useLadder","ApplyLinearImpulseToCenter2","_usePortal","GetLocalPoint","wheel_sp","velocity","GetLinearVelocity","actionDropdown","SetMaxMotorTorque","remove_sticky","vx","止滑","sticky","_isCanJump","actionJump","isDrop","increment_percent","isNaN","_setWalkerOmegaFromVelocity","movement_velocity","GetWorld","GetGravity","GetMass","SetGravityScale","_body_category","first_pos","jmp_body_pos_y","bdef","fdef","shape","bullet","userData","CreateBody","$type","Copy","_Filter_js__WEBPACK_IMPORTED_MODULE_7__","SetAsBox","ZERO","friction","restitution","fixture","CreateFixture","circle","m_p","m_radius","_set_foot_listener","jd","Initialize","enableMotor","maxMotorTorque","lowerAngle","upperAngle","referenceAngle","frequencyHz","dampingRatio","addStep","Step","addAfterStep","AfterStep","setjumpForce","DestroyBody","fa","fb","GetBody","GetUserData","contact","_isFromSelfContact","SetEnabled","foot_fixture","beginContact","__beginContact_walker","endContact","__endContact_walker","preSolve","__preSolve_walker","_ignoreSelfContact","targetBody","m_body","_beginContactPortal","m_userData","_endContactPortal","oldManifold","script","foot_at","is_wall","chain","prev","y2","__priority_foothold_contact","Clone","foot_contact","sort","mapBound_body","_endContactFootholdList","fh","_$fallEdge","force","ApplyForceToCenter","upper","GetUpperLimit","lower","GetLowerLimit","translation","GetJointTranslation","m_awakeFlag","PCharacter","moveX","moveY","move","ApplyLinearImpulseToCenter","kbTime","fx","forceMove","md","ground","bodies","maxForce","moveElem","elapsed","ConstantVelocityWorldCenter2","vy","ALPHA","ONE_MINUS_ALPHA","oldVel","pState","setGravityScale","sign","PPlayer","_create","SCREEN_PRINTLN","m_linearVelocity","SetLinearVelocity","_$renderer","PRemoteCharacter","$io","_create_anchor","moveTo","m_targetA","SceneObject","$physics","enablePhysics","damage","_Renderer_NameLabel_js__WEBPACK_IMPORTED_MODULE_2__","crr","__drawName_default","bgColor","_left","_top","_right","_bottom","lineTo","arcTo","box2d","__webpack_require__","FilterHelper","b2Vec2","b2Body","b2Fixture","b2Contact","b2Manifold","b2ContactImpulse","b2ContactListener","$box2d","_on_step","fn","_on_after_step","ApplyForceToCenter2","Acceleration","desiredVel","sourceVel","point","GetWorldCenter","velChange","SubVV","ix","iy","impulse","ApplyLinearImpulse","AccelerationX","desiredVelX","velChangeX","AccelerationY","desiredVelY","velChangeY","ConstantVelocity2","pointX","pointY","ConstantVelocityX","ConstantVelocityY","postSolve","getOwnerID","host","owner","module","exports","FixtureContactListener","filter_preset","next_category","_box2d_ts_build_Box2D_js__WEBPACK_IMPORTED_MODULE_0__","preset","maskBits","categoryBits","debugName","debugCategory","groupIndex","filter_table","filter_list","registerCategory","contactFilter","Fixture","filterName","GetFilterData","GetType","ShouldCollideConnected","ShouldCollide","$gravityAcc","$positionIterations","$velocityIterations","$particleIterations","$particleRadius","GRAVITY","ContactListener","m_fixtureA","m_fixtureB","childIndexA","m_indexA","childIndexB","m_indexB","World","SetDebugDraw","SetContactListener","_Ground_js__WEBPACK_IMPORTED_MODULE_2__","ladderRope","stop","$_mouseJoint","_onceAfterStep","_destryBodyList","_DestroyBody","m_locked","draw_foothold_path_count","particleType","b2_elasticParticle","particleSystemDef","m_particleSystem","CreateParticleSystem","SetRadius","SetDamping","pd","flags","CreateParticleGroup","b2_colorMixingParticle","ColorParticleGroup","$vbo_ps","map_raw_data","_LadderRope_js__WEBPACK_IMPORTED_MODULE_3__","IsLocked","mapMob","mob","_PMob_js__WEBPACK_IMPORTED_MODULE_5__","_destroy","mapNpc","compute_rectangle","_Filter_js__WEBPACK_IMPORTED_MODULE_8__","b2_staticBody","MAP_PORTAL_FULL_SIZE","isSensor","bb","m_vertex1","m_vertex2","player","sceneObject","_PPlayer_js__WEBPACK_IMPORTED_MODULE_4__","aabb","lowerBound","AddVV","upperBound","hit_fixture","QueryAABB","TestPoint","ReportParticle","system","index","ShouldQueryParticleSystem","SetTarget","$_mouseDown","$_mouseUp","$_mouseMove","$_onMouseEvent","GetBodyList","m_next","debugDraw","m_ctx","canvasScale","lineWidth","viewZoom","DrawDebugData","m_display_particleSystem","gl","GetParticleCount","buf","GetPositionBuffer","vertices","Float32Array","bufferData","ARRAY_BUFFER","STATIC_DRAW","vbo","createBuffer","bindBuffer","m_groupList","particleCount","instanceOffset","GetBufferIndex","drawArrays","POINTS","m_positionBuffer","m_colorBuffer","m_weightBuffer","r2","$particle_grd","grd","createRadialGradient","addColorStop","m_firstIndex","m_lastIndex","$ladderRope","$drawDebugInfo","$drawDebugInfo2","footholds","_drawLine","lr","calcWidth","MobAnimationSpeed","$mob_name","MobRenderer_MobRenderer","LifeRenderer","__info","noFlip","level","maxHP","maxMP","PADamage","PDRate","MADamage","MDRate","acc","eva","pushed","fs","summonType","elemAttr","mobType","firstAttack","hideHP","boss","hpTagColor","hpTagBgcolor","showNotRemoteDam","defaultHP","defaultMP","ignoreMoveImpact","_get_desc_base_path","flySpeed","_animations","NpcAnimationSpeed","NpcRenderer_NpcRenderer","rand_r","range","rand_color2i","colorVar","fromInt24","ParticleSystem_Particle","_initParam","life","math","startScale","lifeMax","lifeVar","angleVar","startColor","startColorVar","color_d","endColor","endColorVar","selfSub","sizeX","sizeY","startSize","startSizeVar","endScale","endSize","endSizeVar","scale_d","startX","posX","posVarX","startY","posY","posVarY","emitterMode","emitterType","gravity","speedVar","dir","radialAccel","radialAccelVar","tangentialAccel","tangentialAccelVar","rotationIsDir","dt","radial","tangential","normalize","clone","mul","newy","_radial","_dir","mx","my","drawColoredGraph2","ParticleSystem_ParticleGroupData","duration","totalParticle","ParticleSystem_ParticleGroup","particles","Infinity","pg","totalTime","particle","particle_name","particleName","_particle_path","helper","imageToImagedata","imagedataToDataURL","whiteToRed","encodeURIComponent","URL","_texture_base_path","location","viewRect","blendFuncDst","blendFuncSrc","hh","collide4f2","enable_skeletal_anim","map_sprite","Back","Obj","Tile","map_load_package","$map_sprite","allQuest","Map_MapTexture","texture0","raw_default","a0","a1","movetype","movew","moveh","movep","mover","ratio","loadIdentity","Map_MapObjectBase","quest","qid","_load_object_info","_load_back_info","_load_tile_info","display_aabb","aabb_color","zM","typeb","rx","ry","backTags","flow","_load_texture","_texture_raw","__calc_aabb","compute_max_rectangle","round","hr","$editor_mouse","next_texture","mcx","mcy","$select","$unselect","index_of_texture","collide","setLineDash","lineDashOffset","stroke","__draw_texture","x2","yy","xx","__draw","mrx","mry","MapObject","_update_and_preload","oS","l0","l1","l2","Map_MapParticle","groups","evaluate","mapRawData","sceneMap","particleList","particleRaw","mpp","Map_MapObjectSkeletalAnim","ssanim","_fname","_folder","spineRandomStart","anim_length","setAnimTime","MapTile","tS","u","no","MapPortal","states","skin","_loadTexture","__display_mode","_portals_raw","_type_map","pt","editor","game","_getTexturePath","_script","MapPortalManager","createPortal","MapBackBase","MapBack","bS","MapBackAnimation","MapBackSkeletalAnim","ob","LifeSpawnPoint","spawnId","Map_MapLifeEntity","lifeSpawnPoint","lifeId","is_dead","spawn","hide","Map_MapMob","Map_MapNpc","loadDescription","skills","hp","createMob","_loadAction","actions","_load_skill_by_mob_id","_load_skill_info","attack","skill_map","firstSkillInfo","skill_list","skill","die","_applyState","skill1","sname","anim","skill_info","si","$anim","mob_id","FlowerTrap","FairyDust","5","invoke","6","7","8","9","10","skill_map_action","lev","skill_id","unknow skill","decreaseLife","destroyMob","destroyNpc","MapLifeEntityCapacityRate","MapLifeManager","spawnPoints","entities","loadLifeDesc","entity","increaseLife","destroyLife","Create","npcID","is_dummy","mobID","whereLayer","Map_SceneMap","background","frontground","layeredObject","layeredTile","namedObject","lifeMgr","mapBound","$load_tasks","$loading_status","$_mapString","$mapString","$region","_map_names","$MapNames","_Init","loading_task_map","back","ani","objIsEmpty","objs","__constructLayeredObject_obj","tiles","__constructLayeredObject_tile","tile","ti","spineAni","groupCollapsed","objtb","__compute_top_bottom_border","tiletb","reCalc","VRLeft","VRTop","VRRight","VRBottom","tb","_compute_top_bottom_border","_compute_left_right_border","_window_title","mapName","streetName","_route_load","_get_map_data_url","url2","_loadBgm","_constructBack","_constructLayeredObject","mapobj","__constructMiniMap","construct","_compute_map_bound","viewCenter","setCenter","_createMapBound","spawnMob","bgmPath","bgm","elem_bgm","_getBgmPath","_bgm_path","autoplay","play","miniMap","centerX","centerY","player_spawns","_addChara","isActivated","layerIndex","KeySlot","KeySlot_ActionSlot","KeySlotData","KeySlot_SkillSlot","InputKey","inputCommand","_skip_prev","keyDownMap","keyName","_equals_input","iCmd","command","Chair_ChairEffect","_offset","_host","offset","_player","chair","sceneRenderer","layers","option","Chair_Chair","bodyRelMove","resource","_addToScene","$addItem_repeatEquip","SceneCharacter_ChatController","$outputText","_isDisplay","isDisplay","$displayDuration","displayDuration","chatBalloonStyle","$colon","colon","boundBox","$maxLength","keyboard_map","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","SceneCharacter_PlayerJob","inputKey","_update_command_skill","frontKey","SceneCharacter_PlayerJob_2300","activeSkills","Skill","preload","control","SceneCharacter_BaseSceneCharacter","stat","PlayerData","damageSkin","jobController","skillControllers","chatCtrl","$inPacket","$outPacket","_move","shift","isAwake","equipId","from","to","chairId","SceneRenderer","sitAction","sitEmotion","skillId","__invokeSkill_offline","__invokeSkill_client","isValid","emit","_handleSkill","_player_control","getLayer","__drawName","player_state","fly","isLadder","_is_end","attackInfoList","delete","allAttack","attackInfo","shiftAllAttack","AttackInfo","__handleAttack_client","__handleAttack_offline","targetObject","getTargetObject","allDamage","damVar","getCurrentMaxBaseDamage","getCurrentMinBaseDamage","realDamage","critRate","critDamage","critical","DamageNumber","addDamagePair","SceneCharacter_SceneCharacter","scene","$createPlayer","items","Array","Item","onJobChange","_onJobChange","newJob","$recMove","key_map","ikey","can_use_skill","keySlot","keyDown","ck","noSit","itemSlot","useItem","keyUp","amount","__addItem_offline","props","incDEXr","timeLimited","Date","_addItem","err","itemData","slotType","getSlot","_removeItem","itemInfo","__useItem_client","__useItem_offline","update_renderer","findItem","_consume","isChair","sitChair","addItem","$style","enter","socket","charaMove","Packet","capture","SceneCharacter_SceneRemoteCharacter","$createRemotePlayer","$remote","_remote_control","symbol_targetObject","AttackPair","objectid","scene_map","setTargetObject","DamagePair","RenderingOption","BaseMoveElem","CharacterMoveElem","vue__WEBPACK_IMPORTED_MODULE_14___default","config","productionTip","vuex__WEBPACK_IMPORTED_MODULE_15__","jQuery","jquery__WEBPACK_IMPORTED_MODULE_0___default","$","onwheel","init_tasks","AddInitTask","InitAll","promise_list","stand","_construct_actions","getDefaultAction","$index","eval","_Animation_js__WEBPACK_IMPORTED_MODULE_1__","LayerObject","Layer","objects","rendering_option","_RenderingOption__WEBPACK_IMPORTED_MODULE_2__","opt","b2Assert","condition","b2Maybe","def","b2_maxFloat","b2_epsilon","b2_epsilon_sq","b2_pi","b2_maxManifoldPoints","b2_maxPolygonVertices","b2_aabbExtension","b2_aabbMultiplier","b2_linearSlop","b2_angularSlop","b2_polygonRadius","b2_maxSubSteps","b2_maxTOIContacts","b2_velocityThreshold","b2_maxLinearCorrection","b2_maxAngularCorrection","b2_maxTranslation","b2_maxTranslationSquared","b2_maxRotation","b2_maxRotationSquared","b2_baumgarte","b2_toiBaumgarte","b2_invalidParticleIndex","b2_particleStride","b2_minParticleWeight","b2_maxParticlePressure","b2_maxParticleForce","b2_maxTriadDistanceSquared","b2_minParticleSystemBufferCapacity","b2_barrierCollisionTime","b2_timeToSleep","b2_linearSleepTolerance","b2_angularSleepTolerance","b2Alloc","b2Free","mem","b2Log","message","b2Version","major","minor","revision","b2_version","b2ParseInt","b2ParseUInt","abs","b2MakeArray","b2MakeNullArray","b2MakeNumberArray","b2_pi_over_180","b2_180_over_pi","b2_two_pi","b2Abs","b2Min","b2Max","b2Clamp","hi","b2Swap","tmp","b2IsValid","b2Sq","b2InvSqrt","b2Sqrt","b2Pow","pow","b2DegToRad","degrees","b2RadToDeg","radians","b2Cos","b2Sin","b2Acos","acos","b2Asin","asin","b2Atan2","atan2","b2NextPowerOfTwo","b2IsPowerOfTwo","b2Random","b2RandomRange","b2Math_b2Vec2","Length","inv_length","out","v_x","v_y","c_x","c_y","UNITX","UNITY","s_t0","s_t1","s_t2","s_t3","b2Vec2_zero","b2Vec3","a_x","a_y","a_z","b_x","b_y","b_z","b2Mat22","ey","c1","SetVV","r1c1","r1c2","r2c1","r2c2","SetSSSS","SetZero","det","a11","a12","a21","a22","SelfAbs","GetInverse","M","SelfAdd","SelfSub","M_ex","M_ey","A","B","A_ex","A_ey","B_ex","B_ey","A_ex_x","A_ex_y","A_ey_x","A_ey_y","B_ex_x","B_ex_y","B_ey_x","B_ey_y","IDENTITY","b2Mat33","ez","SetXYZ","a31","a32","a13","a23","a33","DotV3V3","CrossV3V3","v_z","b2Rot","q_c","q_s","r_c","r_s","b2Transform","SetIdentity","rotation","T","T_q_c","T_q_s","p_x","p_y","MulRR","MulRV","MulTRR","MulTRV","b2Sweep","localCenter","c0","alpha0","xf","beta","one_minus_beta","b2Color","rr","gg","aa","SetRGBA","mixColor","strength","MixColors","colorA","colorB","dr","dg","db","da","MakeStyleString","b2DrawFlags","RED","GREEN","BLUE","b2Draw","m_drawFlags","b2Timer","m_start","now","b2Counter","m_count","m_min_count","m_max_count","b2GrowableStack_b2GrowableStack","N","m_stack","element","b2BlockAllocator","b2StackAllocator","b2Distance_b2DistanceProxy","m_buffer","MakeArray","m_vertices","SetupDistanceProxy","radius","bestIndex","bestValue","DotVV","b2SimplexCache","metric","indexA","indexB","b2Distance_b2DistanceInput","proxyA","proxyB","transformA","transformB","useRadii","Reset","b2Distance_b2DistanceOutput","pointA","pointB","distance","iterations","b2Distance_b2ShapeCastInput","translationB","b2Distance_b2ShapeCastOutput","normal","lambda","b2_gjkCalls","b2_gjkIters","b2_gjkMaxIters","b2_gjk_reset","b2Distance_b2SimplexVertex","wA","wB","b2Distance_b2Simplex","m_v1","m_v2","m_v3","wALocal","GetVertex","wBLocal","MulXV","metric1","metric2","GetMetric","NegV","e12","CrossVV","CrossOneV","CrossVOne","pA","pB","DistanceVV","w1","s_e12","d12_2","d12_1","inv_d12","w3","w1e12","e13","s_e13","w1e13","d13_1","d13_2","e23","s_e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","b2Distance_s_simplex","b2Distance_s_saveA","b2Distance_s_saveB","b2Distance_s_p","b2Distance_s_d","b2Distance_s_normal","b2Distance_s_supportA","b2Distance_s_supportB","b2Distance","output","input","simplex","ReadCache","saveA","saveB","saveCount","iter","Solve2","Solve3","GetSearchDirection","LengthSquared","vertex","GetSupport","duplicate","GetWitnessPoints","WriteCache","rA","rB","Normalize","SelfMulAdd","SelfMulSub","MidVV","b2ShapeCast_s_n","b2ShapeCast_s_simplex","b2ShapeCast_s_wA","b2ShapeCast_s_wB","b2ShapeCast_s_v","b2ShapeCast_s_p","b2ShapeCast_s_pointA","b2ShapeCast_s_pointB","b2ShapeCast","xfA","xfB","sigma","tolerance","vp","vr","SelfNeg","GetClosestPoint","b2ContactFeatureType","b2ManifoldType","b2PointState","b2ContactFeature","_key","_key_invalid","_indexA","_indexB","_typeA","_typeB","typeA","typeB","b2ContactID","cf","o","b2Collision_b2ManifoldPoint","localPoint","normalImpulse","tangentImpulse","b2Collision_b2Manifold","points","localNormal","e_unknown","pointCount","b2Collision_b2WorldManifold","separations","manifold","radiusA","radiusB","e_circles","Initialize_s_pointA","Initialize_s_pointB","DistanceSquaredVV","SelfNormalize","cA","AddVMulSV","Initialize_s_cA","cB","SubVMulSV","Initialize_s_cB","e_faceA","planePoint","Initialize_s_planePoint","clipPoint","Initialize_s_clipPoint","e_faceB","b2GetPointStates","state1","state2","manifold1","manifold2","b2_removeState","jct","b2_persistState","b2_nullState","b2_addState","b2Collision_b2ClipVertex","b2Collision_b2RayCastInput","p1","maxFraction","b2Collision_b2RayCastOutput","fraction","b2Collision_b2AABB","m_cache_center","m_cache_extent","d_x","d_y","valid","IsValid","ExtVV","aabb1","aabb2","Combine2","tmin","tmax","absD_x","absD_y","inv_d","t1","t2","t3","d1_x","d1_y","d2_x","d2_y","b2TestOverlapAABB","b2ClipSegmentToLine","vOut","vIn","vertexIndexA","numOut","vIn0","vIn1","distance0","distance1","interp","e_vertex","e_face","b2TestOverlapShape_s_input","b2TestOverlapShape_s_simplexCache","b2TestOverlapShape_s_output","b2TestOverlapShape","shapeA","shapeB","SetShape","simplexCache","verify","b2DynamicTree_b2TreeNode","m_id","parent","child1","child2","b2DynamicTree_b2DynamicTree","m_root","m_freeList","m_path","m_insertionCount","callback","stack","Push","GetCount","node","Pop","TestOverlap","IsLeaf","TestContain","s_r","s_v","abs_v","AbsV","s_abs_v","segmentAABB","s_segmentAABB","t_x","t_y","GetCenter","GetExtents","subInput","s_subInput","s_node_id","AllocateNode","r_x","r_y","InsertLeaf","proxy","RemoveLeaf","FreeNode","displacement","Contains","leaf","leafAABB","area","GetPerimeter","combinedAABB","s_combinedAABB","combinedArea","cost","inheritanceCost","cost1","s_aabb","oldArea","newArea","cost2","sibling","oldParent","newParent","index2","Balance","grandParent","C","balance","F","G","D","E","GetAreaNode","rootArea","height1","ComputeHeightNode","height2","ValidateStructure","ValidateMetrics","maxBalance","GetMaxBalanceNode","Validate","newOrigin","ShiftOriginNode","b2Pair","b2BroadPhase_b2BroadPhase","m_tree","m_proxyCount","m_moveCount","m_moveBuffer","m_pairCount","m_pairBuffer","CreateProxy","BufferMove","UnBufferMove","DestroyProxy","MoveProxy","queryProxy","fatAABB","Query","pair","b2PairLessThan","primaryPair","QueryPoint","RayCast","GetHeight","GetMaxBalance","GetAreaRatio","ShiftOrigin","pair1","pair2","b2_toiTime","b2_toiMaxTime","b2_toiCalls","b2_toiIters","b2_toiMaxIters","b2_toiRootIters","b2_toiMaxRootIters","b2_toi_reset","b2TimeOfImpact_s_xfA","b2TimeOfImpact_s_xfB","b2TimeOfImpact_s_pointA","b2TimeOfImpact_s_pointB","b2TimeOfImpact_s_normal","b2TimeOfImpact_s_axisA","b2TimeOfImpact_s_axisB","b2TimeOfImpact_b2TOIInput","sweepA","sweepB","tMax","b2TOIOutputState","b2SeparationFunctionType","b2TOIOutput","b2TimeOfImpact_b2SeparationFunction","m_sweepA","m_sweepB","m_localPoint","m_axis","m_proxyA","m_proxyB","GetTransform","e_points","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","axisA","axisB","b2TimeOfImpact_s_timer","b2TimeOfImpact_s_cache","b2TimeOfImpact_s_distanceInput","b2TimeOfImpact_s_distanceOutput","b2TimeOfImpact_s_fcn","b2TimeOfImpact_s_indexA","b2TimeOfImpact_s_indexB","b2TimeOfImpact_s_sweepA","b2TimeOfImpact_s_sweepB","b2TimeOfImpact","timer","maxVertices","totalRadius","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","done","pushBackIter","s2","FindMinSeparation","e_separated","s1","Evaluate","e_failed","rootIterCount","a2","GetMilliseconds","b2CollideCircles_s_pA","b2CollideCircles_s_pB","b2CollideCircles","circleA","circleB","distSqr","b2CollidePolygonAndCircle_s_c","b2CollidePolygonAndCircle_s_cLocal","b2CollidePolygonAndCircle_s_faceCenter","b2CollidePolygonAndCircle","polygonA","cLocal","MulTXV","normalIndex","separation","vertexCount","normals","m_normals","vertIndex1","vertIndex2","v1","u1","u2","faceCenter","b2EdgeSeparation_s_normal1World","b2EdgeSeparation_s_normal1","b2EdgeSeparation_s_v1","b2EdgeSeparation_s_v2","b2EdgeSeparation","poly1","xf1","edge1","poly2","xf2","vertices1","normals1","count2","vertices2","normal1World","normal1","minDot","dot","b2FindMaxSeparation_s_d","b2FindMaxSeparation_s_dLocal1","b2FindMaxSeparation","edgeIndex","count1","m_centroid","dLocal1","edge","maxDot","prevEdge","sPrev","nextEdge","sNext","bestEdge","bestSeparation","increment","b2FindIncidentEdge_s_normal1","b2CollidePolygons_s_incidentEdge","b2CollidePolygons_s_clipPoints1","b2CollidePolygons_s_clipPoints2","b2CollidePolygons_s_edgeA","b2CollidePolygons_s_edgeB","b2CollidePolygons_s_localTangent","b2CollidePolygons_s_localNormal","b2CollidePolygons_s_planePoint","b2CollidePolygons_s_normal","b2CollidePolygons_s_tangent","b2CollidePolygons_s_ntangent","b2CollidePolygons_s_v11","b2CollidePolygons_s_v12","b2CollidePolygons","polyA","polyB","edgeA","separationA","edgeB","separationB","incidentEdge","normals2","i1","i2","cf0","cf1","b2FindIncidentEdge","iv1","iv2","local_v11","local_v12","localTangent","tangent","v11","v12","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","np","cp","b2CollideEdgeAndCircle_s_Q","b2CollideEdgeAndCircle_s_e","b2CollideEdgeAndCircle_s_d","b2CollideEdgeAndCircle_s_e1","b2CollideEdgeAndCircle_s_e2","b2CollideEdgeAndCircle_s_P","b2CollideEdgeAndCircle_s_n","b2CollideEdgeAndCircle_s_id","b2CollideEdgeAndCircle","Q","P","m_hasVertex0","A1","m_vertex0","B1","e1","m_hasVertex3","B2","m_vertex3","A2","e2","den","b2EPAxis","b2TempPolygon","b2CollideEdge_b2EPCollider","m_polygonB","m_xf","m_centroidB","m_v0","m_normal0","m_normal1","m_normal2","m_normal","m_type1","m_type2","m_lowerLimit","m_upperLimit","m_front","polygonB","MulTXX","hasVertex0","hasVertex3","s_edge1","offset1","offset0","offset2","convex1","convex2","edge0","s_edge0","edge2","s_edge2","edgeAxis","ComputeEdgeSeparation","s_edgeAxis","polygonAxis","ComputePolygonSeparation","s_polygonAxis","primaryAxis","ie","s_ie","rf","s_rf","ie0","ie1","sideNormal1","sideNormal2","s_clipPoints1","s_clipPoints2","axis","perp","s_perp","s_n","b2CollideEdgeAndPolygon_s_collider","b2CollideEdgeAndPolygon","Collide","b2Shape_b2MassData","I","b2ShapeType","b2BodyType","b2JointType","b2LimitState","b2Shape","b2CircleShape_b2CircleShape","e_circleShape","transform","TestPoint_s_center","TestPoint_s_d","childIndex","ComputeDistance_s_center","RayCast_s_position","RayCast_s_s","RayCast_s_r","ComputeAABB_s_p","massData","radius_sq","l","com","b2PolygonShape_b2PolygonShape","e_polygonShape","start","unique","i0","hull","ih","Set_s_r","Set_s_v","vertexi1","vertexi2","ComputeCentroid","hx","hy","SetPosition","SetRotationAngle","pLocal","TestPoint_s_pLocal","ComputeDistance_s_pLocal","maxDistance","normalForMaxDistance","ComputeDistance_s_normalForMaxDistance","minDistance","ComputeDistance_s_minDistance","minDistance2","ComputeDistance_s_distance","distance2","RayCast_s_p1","RayCast_s_p2","RayCast_s_d","numerator","denominator","ComputeAABB_s_v","MinV","MaxV","SelfSubXY","SelfAddXY","ComputeMass_s_center","ComputeMass_s_s","SelfMul","ComputeMass_s_e1","ComputeMass_s_e2","triangleArea","MulSV","ex1","ey1","ex2","ey2","Validate_s_e","Validate_s_v","normalL","ComputeSubmergedArea_s_normalL","offsetL","depths","diveCount","intoIndex","outoIndex","lastSubmerged","isSubmerged","ComputeSubmergedArea_s_md","ComputeMass","intoIndex2","outoIndex2","intoLamdda","outoLamdda","intoVec","ComputeSubmergedArea_s_intoVec","outoVec","ComputeSubmergedArea_s_outoVec","ComputeSubmergedArea_s_center","p3","vs","pRef","ComputeCentroid_s_pRef","ComputeCentroid_s_e1","ComputeCentroid_s_e2","b2EdgeShape_b2EdgeShape","e_edgeShape","ComputeDistance_s_v1","ComputeDistance_s_v2","ComputeDistance_s_d","ComputeDistance_s_s","ds","RayCast_s_e","RayCast_s_q","ComputeAABB_s_v1","ComputeAABB_s_v2","b2ChainShape_b2ChainShape","e_chainShape","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","prevVertex","nextVertex","CreateChain","ComputeDistance_s_edgeShape","GetChildEdge","ComputeDistance","edgeShape","RayCast_s_edgeShape","b2Filter","DEFAULT","b2FixtureDef","b2Fixture_b2FixtureProxy","b2Fixture_b2Fixture","m_density","m_friction","m_restitution","m_proxies","m_filter","m_isSensor","m_shape","sensor","Refilter","GetContactList","fixtureA","GetFixtureA","fixtureB","GetFixtureB","FlagForFiltering","broadPhase","m_contactManager","m_broadPhase","TouchProxy","treeNode","bodyIndex","Dump","GetChildCount","ComputeAABB","proxyCount","transform1","transform2","Synchronize_s_aabb1","Synchronize_s_aabb2","Synchronize_s_displacement","b2Body_b2BodyDef","linearVelocity","angularVelocity","linearDamping","angularDamping","allowSleep","awake","fixedRotation","active","gravityScale","b2Body_b2Body","bd","m_islandFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_toiFlag","m_islandIndex","m_xf0","m_sweep","m_angularVelocity","m_force","m_torque","m_prev","m_fixtureList","m_fixtureCount","m_jointList","m_contactList","m_mass","m_invMass","m_I","m_invI","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_controllerList","m_controllerCount","CreateFixtureShapeDensity","CreateFixtureDef","CreateProxies","ResetMassData","m_newFixture","CreateFixtureShapeDensity_s_def","ppF","Destroy","DestroyProxies","SetTransformXY","Synchronize","FindNewContacts","SetTransformVec","wake","torque","oldCenter","SetMassData_s_oldCenter","AddVCrossSV","ResetMassData_s_localCenter","GetMassData","ResetMassData_s_massData","ResetMassData_s_oldCenter","localVector","worldPoint","worldVector","GetLinearVelocityFromWorldPoint","GetWorldPoint","SynchronizeFixtures","ce","ce0","TouchProxies","IsActive","type_str","SynchronizeFixtures_s_xf1","jn","joint","m_collideConnected","Advance","b2Joint_b2Jacobian","linear","angularA","angularB","b2JointEdge","b2JointDef","e_unknownJoint","collideConnected","b2Joint_b2Joint","m_index","m_edgeA","m_edgeB","m_bodyA","m_bodyB","b2DistanceJoint_b2DistanceJointDef","e_distanceJoint","localAnchorA","localAnchorB","b1","b2","anchor1","anchor2","b2DistanceJoint_b2DistanceJoint","m_frequencyHz","m_dampingRatio","m_bias","m_localAnchorA","m_localAnchorB","m_gamma","m_impulse","m_length","m_u","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_qA","m_qB","m_lalcA","m_lalcB","inv_dt","hz","positions","aA","vA","velocities","aB","vB","qA","qB","crAu","crBu","invMass","omega","step","warmStarting","dtRatio","InitVelocityConstraints_s_P","vpA","SolveVelocityConstraints_s_vpA","vpB","SolveVelocityConstraints_s_vpB","Cdot","SolveVelocityConstraints_s_P","SolvePositionConstraints_s_P","b2AreaJoint_b2AreaJointDef","e_areaJoint","b2AreaJoint_b2AreaJoint","m_targetArea","m_bodies","m_targetLengths","m_joints","m_deltas","m_delta","djd","body_c","next_c","SetFrequency","SetDampingRatio","prev_c","body_v","dotMassSum","crossMassSum","perimeter","dist","toExtrude","next_i","norm_sq","b2FrictionJoint_b2FrictionJointDef","e_frictionJoint","maxTorque","bA","bB","b2FrictionJoint_b2FrictionJoint","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","m_K","mA","mB","iA","iB","K","oldImpulse","maxImpulse","Cdot_v2","SolveVelocityConstraints_s_Cdot_v2","impulseV","MulMV","SolveVelocityConstraints_s_impulseV","oldImpulseV","SolveVelocityConstraints_s_oldImpulseV","b2GearJoint_b2GearJointDef","e_gearJoint","b2GearJoint_b2GearJoint","coordinateA","coordinateB","m_typeA","m_typeB","m_localAnchorC","m_localAnchorD","m_localAxisC","m_localAxisD","m_referenceAngleA","m_referenceAngleB","m_constant","m_ratio","m_indexC","m_indexD","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","m_qC","m_qD","m_lalcC","m_lalcD","m_joint1","joint1","m_joint2","joint2","m_bodyC","GetBodyA","GetBodyB","xfC","aC","e_revoluteJoint","revolute","m_referenceAngle","prismatic","m_localXAxisA","pC","m_bodyD","xfD","aD","pD","vC","wC","vD","wD","qC","qD","InitVelocityConstraints_s_u","rC","InitVelocityConstraints_s_rC","InitVelocityConstraints_s_rA","rD","InitVelocityConstraints_s_rD","InitVelocityConstraints_s_rB","cC","cD","JvAC","JvBD","JwA","JwB","JwC","JwD","SolvePositionConstraints_s_u","SolvePositionConstraints_s_rC","SolvePositionConstraints_s_rA","SolvePositionConstraints_s_rD","SolvePositionConstraints_s_rB","index1","b2MotorJoint_b2MotorJointDef","e_motorJoint","linearOffset","angularOffset","correctionFactor","angleA","angleB","b2MotorJoint_b2MotorJoint","m_linearOffset","m_angularOffset","m_correctionFactor","m_linearError","m_angularError","IsEqualToV","inv_h","CrossSV","impulse_v2","SolveVelocityConstraints_s_impulse_v2","oldImpulse_v2","SolveVelocityConstraints_s_oldImpulse_v2","b2MouseJoint_b2MouseJointDef","e_mouseJoint","b2MouseJoint_b2MouseJoint","m_beta","m_C","IsAwake","SolveVelocityConstraints_s_Cdot","SolveVelocityConstraints_s_impulse","SolveVelocityConstraints_s_oldImpulse","b2PrismaticJoint_b2PrismaticJointDef","e_prismaticJoint","motorSpeed","GetLocalVector","b2PrismaticJoint_b2PrismaticJoint","m_localYAxisA","m_motorImpulse","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_motorSpeed","m_enableLimit","m_enableMotor","m_limitState","e_inactiveLimit","m_perp","m_s1","m_s2","m_a1","m_a2","m_K3","m_K2","m_motorMass","InitVelocityConstraints_s_d","jointTranslation","e_equalLimits","e_atLowerLimit","e_atUpperLimit","LA","LB","Cdot1_x","Cdot1_y","Cdot2","f1","SolveVelocityConstraints_s_f1","df3","Solve33","SolveVelocityConstraints_s_df3","f2r","Solve22","SolveVelocityConstraints_s_f2r","df2","SolveVelocityConstraints_s_df2","SolvePositionConstraints_s_d","SolvePositionConstraints_s_impulse","C1_x","C1_y","linearError","angularError","C2","k11","k12","k13","k22","k23","k33","K2","impulse1","Solve","SolvePositionConstraints_s_impulse1","GetJointTranslation_s_pA","GetJointTranslation_s_pB","GetJointTranslation_s_d","GetWorldVector","GetJointTranslation_s_axis","b2PulleyJoint_b2PulleyJointDef","e_pulleyJoint","groundAnchorA","groundAnchorB","lengthA","lengthB","groundA","groundB","anchorA","anchorB","b2PulleyJoint_b2PulleyJoint","m_groundAnchorA","m_groundAnchorB","m_lengthA","m_lengthB","m_uA","m_uB","ruA","ruB","PA","InitVelocityConstraints_s_PA","PB","InitVelocityConstraints_s_PB","SolveVelocityConstraints_s_PA","SolveVelocityConstraints_s_PB","uA","uB","SolvePositionConstraints_s_PA","SolvePositionConstraints_s_PB","GetCurrentLengthA_s_p","GetCurrentLengthB_s_p","b2RevoluteJoint_b2RevoluteJointDef","b2RevoluteJoint_b2RevoluteJoint","m_maxMotorTorque","m_lowerAngle","m_upperAngle","jointAngle","Cdot1","SolveVelocityConstraints_s_Cdot1","impulse_v3","SolveVelocityConstraints_s_impulse_v3","rhs_x","rhs_y","reduced_v2","SolveVelocityConstraints_s_reduced_v2","positionError","limitImpulse","C_v2","SolvePositionConstraints_s_C_v2","b2RopeJoint_b2RopeJointDef","e_ropeJoint","maxLength","b2RopeJoint_b2RopeJoint","m_maxLength","m_state","crA","crB","b2WeldJoint_b2WeldJointDef","e_weldJoint","b2WeldJoint_b2WeldJoint","GetInverse22","invM","GetSymInverse33","impulse2","MulM33XY","SolveVelocityConstraints_s_impulse1","MulM33XYZ","C1","SolvePositionConstraints_s_C1","b2WheelJoint_b2WheelJointDef","e_wheelJoint","b2WheelJoint_b2WheelJoint","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","m_springMass","damp","ay","sAy","sBy","GetPrismaticJointTranslation","GetPrismaticJointSpeed","GetRevoluteJointAngle","GetRevoluteJointSpeed","b2MixFriction","friction1","friction2","b2MixRestitution","restitution1","restitution2","b2ContactEdge","b2Contact_b2Contact","m_touchingFlag","m_enabledFlag","m_filterFlag","m_bulletHitFlag","m_manifold","m_toiCount","m_toi","m_tangentSpeed","m_oldManifold","m_nodeA","m_nodeB","worldManifold","GetShape","listener","tManifold","touching","wasTouching","sensorA","IsSensor","sensorB","mp2","id2","mp1","BeginContact","EndContact","PreSolve","ComputeTOI_s_input","ComputeTOI_s_output","b2CircleContact_b2CircleContact","allocator","b2PolygonContact_b2PolygonContact","b2PolygonAndCircleContact_b2PolygonAndCircleContact","b2EdgeAndCircleContact_b2EdgeAndCircleContact","b2EdgeAndPolygonContact_b2EdgeAndPolygonContact","b2ChainAndCircleContact_b2ChainAndCircleContact","Evaluate_s_edge","b2ChainAndPolygonContact_b2ChainAndPolygonContact","b2ContactRegister","createFcn","destroyFcn","primary","b2ContactFactory_b2ContactFactory","m_allocator","InitializeRegisters","type1","type2","pool","poolCreateFcn","poolDestroyFcn","m_registers","e_shapeTypeCount","AddType","b2DestructionListener","b2WorldCallbacks_b2ContactFilter","filter1","filter2","b2_defaultFilter","b2WorldCallbacks_b2ContactImpulse","normalImpulses","tangentImpulses","b2_defaultListener","b2QueryCallback","b2RayCastCallback","b2ContactManager_b2ContactManager","m_contactCount","m_contactFilter","m_contactListener","m_contactFactory","fA","fB","GetChildIndexA","GetChildIndexB","UpdatePairs","AddPair","IsTouching","cNuke","activeA","activeB","b2Profile","solve","solveInit","solveVelocity","solvePosition","broadphase","solveTOI","b2TimeStep","velocityIterations","positionIterations","particleIterations","b2TimeStep_b2Position","b2TimeStep_b2Velocity","b2SolverData","g_blockSolve","b2ContactSolver_b2VelocityConstraintPoint","normalMass","tangentMass","velocityBias","b2ContactSolver_b2ContactVelocityConstraint","invMassA","invMassB","invIA","invIB","tangentSpeed","contactIndex","b2ContactSolver_b2ContactPositionConstraint","localPoints","localCenterA","localCenterB","b2ContactSolver_b2ContactSolverDef","b2ContactSolver_b2PositionSolverManifold","pc","b2ContactSolver_b2ContactSolver","m_step","m_positionConstraints","m_velocityConstraints","new_length","m_positions","m_velocities","m_contacts","contacts","GetManifold","vc","vcp","InitializeVelocityConstraints_s_xfA","InitializeVelocityConstraints_s_xfB","InitializeVelocityConstraints_s_worldManifold","rnA","rnB","kNormal","rtA","rtB","kTangent","vRel","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","WarmStart_s_P","dv","SolveVelocityConstraints_s_dv","dv1","SolveVelocityConstraints_s_dv1","dv2","SolveVelocityConstraints_s_dv2","SolveVelocityConstraints_s_a","SolveVelocityConstraints_s_b","SolveVelocityConstraints_s_x","SolveVelocityConstraints_s_d","P1","SolveVelocityConstraints_s_P1","P2","SolveVelocityConstraints_s_P2","P1P2","SolveVelocityConstraints_s_P1P2","vt","maxFriction","newImpulse","vn","cp1","cp2","vn1","vn2","SolvePositionConstraints_s_xfA","SolvePositionConstraints_s_xfB","psm","SolvePositionConstraints_s_psm","minSeparation","toiIndexA","toiIndexB","SolveTOIPositionConstraints_s_xfA","SolveTOIPositionConstraints_s_xfB","SolveTOIPositionConstraints_s_psm","SolveTOIPositionConstraints_s_rA","SolveTOIPositionConstraints_s_rB","SolveTOIPositionConstraints_s_P","b2Island_b2Island","m_bodyCount","m_jointCount","m_bodyCapacity","m_contactCapacity","m_jointCapacity","bodyCapacity","contactCapacity","jointCapacity","m_listener","profile","s_timer","solverData","s_solverData","contactSolverDef","s_contactSolverDef","contactSolver","s_contactSolver","InitializeVelocityConstraints","WarmStart","InitVelocityConstraints","SolveVelocityConstraints","StoreImpulses","s_translation","positionSolved","contactsOkay","SolvePositionConstraints","jointsOkay","jointOkay","SynchronizeTransform","Report","minSleepTime","linTolSqr","angTolSqr","subStep","SolveTOIPositionConstraints","constraints","s_impulse","PostSolve","b2ParticleFlag","b2ParticleGroupFlag","b2Particle_b2ParticleDef","lifetime","b2CalculateParticleIterations","timeStep","ceil","b2Particle_b2ParticleHandle","b2ParticleGroup_b2ParticleGroupDef","groupFlags","shapeCount","stride","b2ParticleGroup_b2ParticleGroup","m_groupFlags","m_strength","m_timestamp","m_inertia","m_center","m_transform","m_system","m_flagsBuffer","b2_particleGroupInternalMask","SetGroupFlags","UpdateStatistics","GetLinearVelocityFromWorldPoint_s_t0","ApplyForce","callDestructionListener","DestroyParticle","m_velocityBuffer","GetParticleMass","inv_mass","b2StackQueue_b2StackQueue","capacity","m_back","m_capacity","concat","b2VoronoiDiagram_b2VoronoiDiagram","generatorCapacity","m_generatorCapacity","m_generatorCount","m_countX","m_countY","m_diagram","m_generatorBuffer","Generator","tag","necessary","margin","inverseRadius","necessary_count","queue","Task","Empty","Front","m_x","m_y","m_i","m_generator","ax","bx","std_iter_swap","array","default_compare","std_sort","first","len","cmp","pivot","std_stable_sort","std_remove_if","predicate","std_lower_bound","last","std_upper_bound","std_rotate","n_first","b2VoronoiDiagram","b2ParticleSystem_b2GrowableBuffer","Grow","newCapacity","Reserve","newEnd","newCount","pred","std_unique","b2ParticleSystem_b2FixtureParticleQueryCallback","childCount","GetAABB","enumerator","GetInsideBoundsEnumerator","GetNext","ReportFixtureAndParticle","b2ParticleSystem_b2ParticleContact","weight","rhs","IsEqual","b2ParticleSystem_b2ParticleBodyContact","b2ParticlePair","b2ParticleSystem_b2ParticleTriad","indexC","pa","pb","ka","kb","kc","b2ParticleSystemDef","strictContactCheck","maxCount","pressureStrength","dampingStrength","elasticStrength","springStrength","viscousStrength","surfaceTensionPressureStrength","surfaceTensionNormalStrength","repulsiveStrength","powderStrength","ejectionStrength","staticPressureStrength","staticPressureRelaxation","staticPressureIterations","colorMixingStrength","destroyByAge","lifetimeGranularity","b2ParticleSystem_b2ParticleSystem","m_paused","m_allParticleFlags","m_needsUpdateAllParticleFlags","m_allGroupFlags","m_needsUpdateAllGroupFlags","m_hasForce","m_iterationIndex","m_inverseDensity","m_particleDiameter","m_inverseDiameter","m_squaredDiameter","m_internalAllocatedCapacity","m_handleIndexBuffer","UserOverridableBuffer","m_forceBuffer","m_staticPressureBuffer","m_accumulationBuffer","m_accumulation2Buffer","m_depthBuffer","m_groupBuffer","m_userDataBuffer","m_stuckThreshold","m_lastBodyContactStepBuffer","m_bodyContactCountBuffer","m_consecutiveContactStepsBuffer","m_stuckParticleBuffer","m_proxyBuffer","Proxy","m_contactBuffer","m_bodyContactBuffer","m_triadBuffer","m_expirationTimeBuffer","m_indexByExpirationTimeBuffer","m_timeElapsed","m_expirationTimeBufferRequiresSorting","m_groupCount","m_def","SetStrictContactCheck","SetDensity","SetMaxParticleCount","SetDestructionByAge","yOffset","yShift","xScale","xOffset","xShift","DestroyParticleGroup","FreeUserOverridableBuffer","FreeBuffer","ReallocateInternalAllocatedBuffers","DestroyOldestParticle","SolveZombie","IsZero","RequestBuffer","Append","finiteLifetime","SetParticleLifetime","ExpirationTimeToLifetime","GetQuantizedTimeElapsed","RotateBuffer","SetParticleFlags","handle","SetIndex","b2_zombieParticle","b2_destructionListenerParticle","oldestFiniteLifetimeParticle","oldestInfiniteLifetimeParticle","DestroyParticlesInShape_s_aabb","DestroyParticlesInShapeCallback","Destroyed","groupDef","s_transform","CreateParticleGroup_s_transform","SetPositionAngle","firstIndex","CreateParticlesWithShapeForGroup","shapes","CreateParticlesWithShapesForGroup","positionData","CreateParticleForGroup","ConnectionFilter","UpdateContacts","UpdatePairsAndTriads","JoinParticleGroups","groupA","groupB","JoinParticleGroupsFilter","nodeBuffer","ParticleListNode","InitializeParticleLists","MergeParticleListsInContact","survivingList","FindLongestParticleList","MergeZombieParticleListNodes","CreateParticleGroupsFromParticleList","UpdatePairsAndTriadsWithParticleList","paused","damping","newFlags","b2_tensileParticle","buffer","SetUserOverridableBuffer","steps","Data","ComputeCollisionEnergy_s_v","vel_data","sum_v2","enabled","initializeExpirationTimes","quantizedLifetime","newExpirationTime","GetExpirationTimeBuffer","expirationTime","GetParticleLifetime","totalMass","velocityDelta","IsSignificantForce","ForceCanBeApplied","PrepareForceBuffer","distributedForce","endProxy","firstProxy","computeTag","CompareProxyTag","lastProxy","CompareTagProxy","pos_data","QueryShapeAABB_s_aabb","slop","QueryPointAABB_s_aabb","point1","point2","RayCast_s_aabb","s_p","RayCast_s_p","RayCast_s_v","RayCast_s_n","s_point","RayCast_s_point","determinant","sqrtDeterminant","userSuppliedCapacity","oldBuffer","oldCapacity","newBuffer","deferred","ReallocateBuffer3","ReallocateBuffer5","ReallocateBuffer4","LimitCapacity","ReallocateHandleBuffers","stuck","particleDef","CreateParticle","s_edge","CreateParticlesStrokeShapeForGroup_s_edge","s_d","CreateParticlesStrokeShapeForGroup_s_d","CreateParticlesStrokeShapeForGroup_s_p","GetParticleStride","positionOnEdge","edgeLength","CreateParticlesFillShapeForGroup_s_aabb","CreateParticlesFillShapeForGroup_s_p","identity","CreateParticlesStrokeShapeForGroup","CreateParticlesFillShapeForGroup","compositeShape","CompositeShape","oldIndex","newIndex","m_destructionListener","SayGoodbyeParticleGroup","b2_wallParticle","b2_springParticle","GetGroupFlags","b2_rigidParticleGroup","s_dab","UpdatePairsAndTriads_s_dab","s_dbc","UpdatePairsAndTriads_s_dbc","s_dca","UpdatePairsAndTriads_s_dca","particleFlags","k_pairFlags","af","bf","IsNecessary","ParticleCanBeConnected","ShouldCreatePair","ComparePairIndices","Unique","MatchPairIndices","k_triadFlags","diagram","AddGenerator","Generate","ShouldCreateTriad","dab","dbc","dca","maxDistanceSquared","groupC","triad","midPoint_x","midPoint_y","GetNodes","CompareTriadIndices","MatchTriadIndices","ReactiveFilter","b2_reactiveParticle","diffA","diffB","bufferIndex","ContainsParticle","listA","listB","_tmp","MergeParticleLists","nextB","MergeParticleListAndNode","newGroup","CloneParticle","contactGroups","contactGroupsCount","b2_particleGroupNeedsUpdateDepth","groupsToUpdate","groupsToUpdateCount","iterationCount","updated","ap0","bp0","ap1","bp1","lowerTag","upperTag","InsideBoundsEnumerator","AddContact_s_d","distBtParticlesSq","invD","rightTag","computeRelativeTag","AddContact","bottomLeftTag","bottomRightTag","FindContacts_Reference","proxies","inv_diam","UpdateProxies_Reference","CompareProxyProxy","GetParticleContactFilter","RemoveIf","b2_particleContactFilterParticle","ShouldCollideParticleParticle","particlePairs","GetParticleContactListener","contactListener","itemIndex","Invalidate","BeginContactParticleParticle","exceptZombie","UpdateProxies","SortProxies","b2ParticlePairSet","NotifyContactListenerPreContact","FindContacts","FilterContacts","NotifyContactListenerPostContact","b2ParticleContactIsZombie","fixtureSet","GetFixtureContactListener","BeginContactFixtureParticle","UpdateBodyContacts_s_aabb","FixtureParticleSet","NotifyBodyContactListenerPreContact","SetCount","UpdateBodyContactsCallback","GetFixtureContactFilter","RemoveSpuriousBodyContacts","NotifyBodyContactListenerPostContact","s_subStep","Solve_s_subStep","SolveLifetimes","UpdateAllParticleFlags","UpdateAllGroupFlags","UpdateBodyContacts","ComputeWeight","ComputeDepth","UpdatePairsAndTriadsWithReactiveParticles","SolveForce","b2_viscousParticle","SolveViscous","b2_repulsiveParticle","SolveRepulsive","b2_powderParticle","SolvePowder","SolveTensile","b2_solidParticleGroup","SolveSolid","SolveColorMixing","SolveGravity","b2_staticPressureParticle","SolveStaticPressure","SolvePressure","SolveDamping","k_extraDampingFlags","SolveExtraDamping","SolveElastic","SolveSpring","LimitVelocity","SolveRigidDamping","b2_barrierParticle","SolveBarrier","SolveCollision","SolveRigid","SolveWall","SolveCollision_s_aabb","p2_x","p2_y","SolveCollisionCallback","criticalVelocitySquared","GetCriticalVelocitySquared","s_gravity","SolveGravity_s_gravity","SolveBarrier_s_aabb","s_va","SolveBarrier_s_va","s_vb","SolveBarrier_s_vb","s_pba","SolveBarrier_s_pba","s_vba","SolveBarrier_s_vba","s_vc","SolveBarrier_s_vc","s_pca","SolveBarrier_s_pca","s_vca","SolveBarrier_s_vca","s_qba","SolveBarrier_s_qba","s_qca","SolveBarrier_s_qca","s_dv","SolveBarrier_s_dv","s_f","SolveBarrier_s_f","k_barrierWallFlags","aGroup","bGroup","va","vb","pba","vba","cGroup","pca","vca","e0","qba","qca","sqrtDet","IsRigidGroup","inertia","GetInertia","ParticleApplyForce","criticalPressure","GetCriticalPressure","pressurePerWeight","maxPressure","relaxation","SolvePressure_s_f","k_noPressureFlags","velocityPerPressure","GetParticleInvMass","SolveDamping_s_v","SolveDamping_s_f","quadraticDamping","GetCriticalVelocity","SolveRigidDamping_s_t0","SolveRigidDamping_s_t1","SolveRigidDamping_s_p","SolveRigidDamping_s_v","invInertiaA","tangentDistanceA","invInertiaB","tangentDistanceB","InitDampingParameterWithRigidGroupOrParticle","InitDampingParameter","GetLocalCenter","ComputeDampingImpulse","ApplyDamping","aRigid","bRigid","SolveExtraDamping_s_v","SolveExtraDamping_s_f","s_position","SolveRigid_s_position","s_rotation","SolveRigid_s_rotation","SolveRigid_s_transform","s_velocityTransform","SolveRigid_s_velocityTransform","SetPositionRotation","MulXX","velocityTransform","s_pa","SolveElastic_s_pa","s_pb","SolveElastic_s_pb","s_pc","SolveElastic_s_pc","SolveElastic_s_r","SolveElastic_s_t0","oa","oc","invR","SolveSpring_s_pa","SolveSpring_s_pb","SolveSpring_s_d","SolveSpring_s_f","r0","r1","s_weightedNormal","SolveTensile_s_weightedNormal","s_s","SolveTensile_s_s","SolveTensile_s_f","weightedNormal","criticalVelocity","normalStrength","maxVelocityVariation","SolveViscous_s_v","SolveViscous_s_f","SolveRepulsive_s_f","SolvePowder_s_f","minWeight","SolveSolid_s_f","velocityPerForce","colorMixing","newIndices","allParticleFlags","destructionListener","SayGoodbyeParticle","Test","writeOffset","readOffset","modified","b2_particleGroupCanBeEmpty","b2_particleGroupWillBeDestroyed","LifetimeToExpirationTime","quantizedTimeElapsed","expirationTimes","expirationTimeIndices","particleIndexA","particleIndexB","expirationTimeA","expirationTimeB","infiniteExpirationTimeA","particleIndex","mid","end","GetIndex","indexByExpirationTime","inverseStride","b2_fixtureContactFilterParticle","b2_fixtureContactListenerParticle","b2_particleContactListenerParticle","newData","oldFlags","lhs","BodyContactCompare","RemoveSpuriousBodyContacts_s_n","s_pos","RemoveSpuriousBodyContacts_s_pos","s_normal","RemoveSpuriousBodyContacts_s_normal","currentContacts","invInertia","tangentDistance","isRigidGroup","normalVelocity","xTruncBits","yTruncBits","tagBits","yMask","xMask","b2ParticleSystem","m_xLower","m_xUpper","m_yLower","m_yUpper","m_first","m_last","xTag","FixedSetAllocator","itemSize","FixtureParticle","second","bodyContactBuffer","flagsBuffer","ParticlePair","particleA","particleB","contactBuffer","m_callDestructionListener","m_destroyed","particleSystem","threshold","m_threshold","m_shapeCount","m_shapes","s_subaabb","subaabb","Combine1","GetFlagsBuffer","ShouldCollideFixtureParticle","ReportFixtureAndParticle_s_n","s_rp","ReportFixtureAndParticle_s_rp","ap","bp","bm","bI","invBm","invBI","invAm","rp","rpn","DetectStuckParticle","s_p1","ReportFixtureAndParticle_s_p1","s_output","ReportFixtureAndParticle_s_output","s_input","ReportFixtureAndParticle_s_input","ReportFixtureAndParticle_s_p","ReportFixtureAndParticle_s_v","ReportFixtureAndParticle_s_f","av","b2World_b2World","m_clearForces","m_bodyList","m_particleSystemList","m_gravity","m_allowSleep","m_inv_dt0","m_warmStarting","m_continuousPhysics","m_subStepping","m_stepComplete","m_profile","m_island","s_stack","je","je0","SayGoodbyeJoint","coe","coe0","nextController","RemoveBody","f0","SayGoodbyeFixture","_Joint_Create","_Joint_Destroy","smallestRadius","GetParticleSystemList","GetRadius","GetSmallestRadius","CalculateReasonableParticleIterations","stepTimer","Step_s_stepTimer","Step_s_step","Step_s_timer","SolveTOI","ClearForces","positionBuffer","colorBuffer","GetColorBuffer","DrawParticles","GetFlags","DrawDebugData_s_color","SetRGB","e_shapeBit","PushTransform","GetFixtureList","DrawShape","PopTransform","e_particleBit","DrawParticleSystem","e_jointBit","DrawJoint","e_aabbBit","DrawDebugData_s_vs","DrawPolygon","e_centerOfMassBit","DrawDebugData_s_xf","DrawTransform","e_controllerBit","Draw","ReportFixture","QueryPointAABB","QueryFixtureShape_s_aabb","fixture_proxy","QueryFixtureShape","QueryFixturePoint","RayCast_s_input","RayCast_s_output","min_fraction","GetProxyCount","GetTreeHeight","GetTreeBalance","GetTreeQuality","GetAnchorA","DrawJoint_s_p1","GetAnchorB","DrawJoint_s_p2","DrawJoint_s_color","DrawSegment","pulley","GetGroundAnchorA","GetGroundAnchorB","DrawJoint_s_c","DrawPoint","DrawSolidCircle","ghostColor","DrawShape_s_ghostColor","DrawCircle","poly","DrawSolidPolygon","island","seed","Clear","stackCount","AddBody","IsEnabled","AddJoint","minContact","minAlpha","collideA","IsBullet","collideB","SolveTOI_s_toi_input","SolveTOI_s_toi_output","backup1","SolveTOI_s_backup1","backup2","SolveTOI_s_backup2","backup","SolveTOI_s_backup","SolveTOI_s_subStep","b2ControllerEdge","prevBody","nextBody","prevController","b2Controller","b2BuoyancyController_b2BuoyancyController","linearDrag","angularDrag","useDensity","useWorldGravity","areac","massc","sc","sarea","ComputeSubmergedArea","shapeDensity","GetDensity","buoyancyForce","dragForce","ApplyTorque","b2ConstantAccelController_b2ConstantAccelController","dtA","Step_s_dtA","b2ConstantForceController_b2ConstantForceController","b2GravityController_b2GravityController","invSqr","body1","mass1","body2","mass2","Step_s_f","b2TensorDampingController_b2TensorDampingController","maxTimestep","timestep","Step_s_damping","xDamping","yDamping","b2Rope_b2RopeDef","masses","k2","k3","b2Rope_b2Rope","m_ps","m_p0s","m_vs","m_ims","m_Ls","m_as","m_damping","m_k2","m_k3","count3","d1","d2","exp","SolveC2","SolveC3","L","im1","im2","m1","s_d1","s_d2","L1sqr","L2sqr","Jd1","SelfSkew","s_Jd1","Jd2","s_Jd2","J1","s_J1","J2","s_J2","J3","__webpack_exports__","Foothold_FootholdChain","map_footholds","FootholdType","Foothold_FootholdSingle","Foothold_FootholdChainChild","Physics","m_angle","next_a","next_a_deg","$showDebugInfo","body_xf","next_fh","prev_fh","is_empty","is_first","is_last","_is_horizontal_floor","x3","y3","piece","ta","$_text_pos","strokeText","GetVertex1","GetVertex2","MulVS","Foothold","CREATE_SOLID_FOOTHOLD","CREATE_SOLID_AND_EDGE_FOOTHOLD","USE_GHOST_VERTEX","FOOTHOLD_IS_BULLET","Ground_Ground","rectChains","segment","chains","chainId","_create_foothold","_create_chain","_chain","CreateLoop","Filter","endContact_bodyBase_oneway","preSolveGround_bodyBase_oneway","is_solid","create","nx1","ny1","nx2","ny2","hlen","numPoints","playerBody","getFootholdFromContact","$fh","player_pos","SetFriction","p$fh","foot","GetWorldManifold","relative_position","platformFaceY","cpoint","pointVelPlatform","pointVelOther","relativeVel","relativePosition","_which_foothold_contact","normal_contact","splice","beginContact_bodyBase_oneway","lineJoin","lineCap","isShow","isHide","ActionAnimationFrameData","ActionAnimation","Adef","fdat","total","aadef","actName","_fdef","CharacterActionAnimationDefinition","_loadedItem","$loadedItem","TYPE_TO_SLOT_MAP","ItemBase","ItemEquip","ItemConsume","ItemEtc","ItemInstall","ItemCash","$createItem","_itemType","itemPrototype","ItemSlot","_ui_Basic_KeySlotData_js__WEBPACK_IMPORTED_MODULE_2__","itemSN","SN","iSlot","CharacterBaseStat","mp","mhp","mmp","str","luk","dex","int","symbol_onJobChange","$RemotePlayerData","equips_code","CharacterStat","sceneChara","_$sceneChara","symbolStatJob","_getTotalAttack","getNextExp","$PlayerData","mapId","_RenderingOption__WEBPACK_IMPORTED_MODULE_1__","_Layer_js__WEBPACK_IMPORTED_MODULE_0__","$sceneRenderer","PBullet_PBullet","bulletRenderer","bulletMoveFunc","bullet_default_preSolve","linearVelocityX","linearVelocityY","targetPlayer","targetChara","addAttack","Skill_SkillEffectAnimation","targetRenderer","isArray","update_p","update_r","render_p","render_r","SkillHitAnimation","EffectManager","_effects","$EffectManager","Skill_SkillAnimationBase","actType","_owner","_crr","_actani","_$is_end","is_launch","_applyDefaultAction","_owner_player","_applyAction","_getDefaultAction","jobID","exec","_decide_type","_init","skill_anim","proto","effName","_effect_names","arrNd_texture","arrNd","arr2d","hit","tex","arr2d_texture","arr1d","arr1d_texture","_addEffect","common","attackCount","effectName","launch","$BULLET_SPEED","isBullet","AddEffect","rapidAttack","_SkillAnimation_RapidAttack","casterMove","avaliableInJumpingState","_SkillAnimation_N_Jump","_SkillAnimation_Default","_default_update","_state_func","_prepare","current_effect","tick","fadeTotalTime","getTotalTime","_keydown","_keydownend","$FIRE_BULLET_T","$FIRE_BULLET_T2","createBullet","jump_max_count","$NJmpX","$NJmpY","_addDefaultEffect","jump2","_isFinishDefaultAction","Skill_SceneSkill","wait_loading","loaded_skill","__loaded_skill","_assign","__load_failed","$SceneSkill","setFlags","bit","DebugDraw","axis_length","viewRotation","flag_drawShape","flag_drawJoint","flag_drawAabb","flag_drawCenterOfMass","flag_drawController","flag_drawParticle","flag_drawAll","e_all","e_none","flag_drawPair","e_pairBit","flagNames","closePath","arc","centers","colors","cs","hsize","DrawString","format","var_args","string","goog","s_color","DrawStringWorld","cc","s_cc","m_canvas","DrawAABB","strokeRect","MapLadderRope","uf","page","LadderRope","calcHalfWidth","_Filter_js__WEBPACK_IMPORTED_MODULE_3__","leaveLadder","MapLadderRopeLoader","ladderRopes","idx","_$index","$MobAction_Move_Priority","$MobAction_Jump_Priority","MobActionController","_ani","pMob","onEnd","MobAction_Stand","_MobAction_Move","MobAction_MoveLeft","MobAction_MoveRight","MobAction_Jump","PMob","_PPlayer_js__WEBPACK_IMPORTED_MODULE_0__","attackTarget","_enable_rx","isFlyMob","activityRegion","$debugControl","param","act_map","_registerAction","hasBodyDamage","bodyAttack","_speed","_pushed","_fs","_category","_appleMobCategory","__setAsWalkOnlyMob","__setAsJumpDropMob","fhId","isCanMove","_control_basic","isAllowJump","rx0","rx1","limit_action","cbpos","dx1","fwpos","MobSkillBallDefinition","createDelay","collisionDelay","moveSpeed","_speed_x","_speed_y","MobSkillBallBase","_SceneObject_js__WEBPACK_IMPORTED_MODULE_2__","ballDef","animations","_BallDefinition","E_BEFORE_CREATE","E_CREATED","E_BEGIN_COLLISION","E_ENG_COLLISION","pWorld","begin_collision","end_collision","$stop","MobSkillBase","_anima_name_list","anima","fileName","blob","Blob","createObjectURL","revokeObjectURL","SelectText","selection","createTextRange","moveToElementText","select","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","copyToClipboard","$temp","append","execCommand","remove","FairyDustBallDefinition","_MobSkillBase_js__WEBPACK_IMPORTED_MODULE_3__","FairyDustBall","FairyDustBallHit","randInt","nextInt","ball","_FairyDust","MOB_SKILL_RAW","LoginPacket","ChatPacket","CharacterPacket","loaded_skin","DamageNumberTextures","addedCanvasH","font_adv","draw_axis","Miss","guard","shot","DamageNumberRenderer","rand_y","max_display_digit","max_rand_y","_$promise","_default_base_path","_skin_base_path","sPath","loaded","_copy","str_damage","text_width","_display_axis","log10","MAX_SAFE_INTEGER","_Layer_js__WEBPACK_IMPORTED_MODULE_2__","damagePair","move_y","time_tt","recursive","$noRender","catch","move_avy","time_d1","move_avy2","time_d2","DamageNumberTest","damageNumberLayer","_Common_AttackInfo_js__WEBPACK_IMPORTED_MODULE_4__","$damageNumberLayer","$DamageNumber","$DamageNumberTest","$DamageNumberRenderer","FlowerTrapBallDefinition","FlowerTrapBall","patterns","pattern","pats","pat","_invoke","nextBoolean","$RequestPacket_SelectChara","charaId","$ResponsePacket_SelectChara","charaData","remoteCharacters","$Packet_CharacterChat","$Packet_CharacterMove","getTime","phy","_Client_PMovePath__WEBPACK_IMPORTED_MODULE_0__","vel","Client_Client","charaMap","eventName","on","server_href","lib_default","$emit","disconnect","$scene_map","account","password","channel","charID","ackPacket","task1","_CreateMyCharacter","task2","onEnterRemoteChara","store","dispatch","emplace","_$data","guildId","partyId","packet","remote_chara","fnAck","app","vue","$refs","statusBar","pushChatHistory","$move","_addRemoteCharaPacketListener","onRemoteChat","onRemoteCharaMove","onRemoteCharaAnim","onRemoteCharaSkill","onRemoteAvatarModified","login","selectWorld","selectChara","GameState_GameStateManager","history","pushState","title","chara_code","_old_c","_parse","CursorAnimationFrame","CursorAnimationData","addFrame","Cursor","selector","keyword","cssText","tt","createTextNode","addLayerBack","getText","getValue","_SCREEN_PRINTLN","PopState","addFrameFromUrl","createToCSS","createCursor_clickable","onkeydown","onkeyup","onmousedown","contains","which","pageX","pageY","onmouseup","onmousemove","main_Game","timer_","_dTimer","fps_arr","frame_s_arr","PushState","_loop","onchange","checked","requestAnimationFrame","_$moveViewportSpeed","inBound","server","client","connect","_$start_offline","$test","params","sURLVariables","decodeURIComponent","search","substring","sParameter","_parseUrlParameter","DEFAULT_MAP_ID","_isMapReady","waitAllLoaded","avg","FPS","frameCount","setTimeout","Engine","charaList","ch","_render_map_ready","_render_map_loading","beginScene","clearDrawScreen","moveViewport","beginRender","renderBackground","renderLayeredObject","renderLayeredTile","applyCamera","chara_index","renderLife","renderLayer","endRender","Render","_$drawName","_$drawChatBalloon","renderPortal","renderFrontground","renderParticle","_render_debug_info","endScene","scr_hw","scr_hh","lw","_val","__val","timeStamp","_requestNextFrame","_calcFPS","_updateScene","_renderScene"],"mappings":"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","file":"8.js","sourcesContent":["﻿\r\n\r\nimport { } from '../../public/javascripts/resource.js';\r\n\r\nimport { IGraph } from \"./IRenderer.js\";\r\nimport { engine } from './Engine.js';\r\nimport { Vec2, Rectangle } from './math.js';\r\nimport DebugDraw from './Physics/DebugDraw.js';\r\n\r\nexport class GlobalVar {\r\n\tconstructor() {\r\n\t\tlet isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\t\tif (isMobile) {\r\n\t\t\tthis.is_mobile = true;\r\n\t\t}\r\n\r\n\t\tif (isMobile) {\r\n\t\t\tthis.m_is_run = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.m_is_run = true;\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tthis.MAX_FPS = 60;\r\n\t\t\tthis.FRAME_ELAPSED = 1000 / 60;\r\n\t\t\tthis.CANVAS_SCALE = 32;\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\t\tthis.m_editor_mode = false;\r\n\r\n\t\t\t\tthis.m_display_foothold = false;\r\n\r\n\t\t\t\tthis.m_display_physics_debug = false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.m_editor_mode = true;\r\n\r\n\t\t\t\tthis.m_display_foothold = false;\r\n\r\n\t\t\t\tthis.m_display_physics_debug = false;\r\n\t\t\t}\r\n\t\t\tthis.m_display_debug_info = false;\r\n\r\n\t\t\tthis.m_debugDraw = new DebugDraw(/*renderer_ctx2d*/);\r\n\r\n\t\t\tthis.m_display_selected_object = false;\r\n\t\t\tthis.m_selected_object = null;\r\n\t\t\tthis.m_hover_object = null;\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tthis.m_viewRect = new Rectangle(0, -768 / 2, 1366, 768);\r\n\r\n\t\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\t\tthis.m_is_rendering_map = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.m_is_rendering_map = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.m_display_back = true;\r\n\t\t\tthis.m_display_front = true;\r\n\t\t\tthis.m_display_mapobj = true;\r\n\t\t\tthis.m_display_maptile = true;\r\n\t\t\tthis.m_display_particle_system = true;\r\n\r\n\t\t\tthis.m_display_skeletal_anim = true;\r\n\r\n\t\t\tthis.m_display_portal = true;\r\n\r\n\t\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\t\tthis.m_display_name_label = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.m_display_name_label = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.m_display_player = true;\r\n\t\t\tthis.m_display_other_player = true;\r\n\t\t\tthis.m_display_life = true;\r\n\t\t\tthis.m_display_npc = true;//??\r\n\t\t\tthis.m_display_mob = true;//??\r\n\r\n\t\t\t//this.m_display_skill;\r\n\t\t\t//this.m_display_mob_skill;\r\n\t\t\t//this.m_display_mob_effect = true;\r\n\t\t\t//this.m_display_mob_etc = true;\r\n\t\t}\r\n\t\t\r\n\t\t{\r\n\t\t\tthis.NameLabel_default_style = \"214\";\r\n\r\n\t\t\tthis.ChatBalloon_default_style = 212;\r\n\t\t\tthis.ChatBalloon_display_duration = 5000;\r\n\t\t}\r\n\t\t\r\n\t\t{\r\n\t\t\tthis.input_keyDown = {};\r\n\t\t\tthis.input_keyUp = {};\r\n\r\n\t\t\tthis.mouse_move = 0;\r\n\t\t\tthis.mouse_x = 0;\r\n\t\t\tthis.mouse_y = 0;\r\n\t\t\tthis.mouse_dl = 0;\r\n\t\t\tthis.mouse_ul = 0;\r\n\t\t\tthis.mouse_dm = 0;\r\n\t\t\tthis.mouse_um = 0;\r\n\t\t\tthis.mouse_dr = 0;\r\n\t\t\tthis.mouse_ur = 0;\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tlet SceneObjectMgr = {};\r\n\r\n\t\t\tSceneObjectMgr.layeredObjects = [];\r\n\t\t\tfor (let i = 0; i < 12; ++i) {\r\n\t\t\t\tlet lo = SceneObjectMgr.layeredObjects[i] = {};\r\n\t\t\t\tObject.defineProperty(lo, \"length\", {\r\n\t\t\t\t\tenumerable: false,\r\n\t\t\t\t\twritable: true,\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tSceneObjectMgr.Update = function (stamp) {\r\n\t\t\t\tfor (let layer = 0; layer < SceneObjectMgr.layeredObjects.length; ++layer) {\r\n\t\t\t\t\tconst lo = SceneObjectMgr.layeredObjects[layer];\r\n\t\t\t\t\tfor (let uid in lo) {\r\n\t\t\t\t\t\tlet obj = lo[uid];\r\n\t\t\t\t\t\tobj.update(stamp);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tSceneObjectMgr.RenderLayer = function (engine, layer) {\r\n\t\t\t\tconst lo = SceneObjectMgr.layeredObjects[layer];\r\n\t\t\t\tfor (let uid in lo) {\r\n\t\t\t\t\tlet obj = lo[uid];\r\n\t\t\t\t\tobj.render(engine);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tSceneObjectMgr.addToScene = function (layer, obj) {\r\n\t\t\t\tif (Number.isSafeInteger(layer) && layer in SceneObjectMgr.layeredObjects) {\r\n\t\t\t\t\tconst lo = SceneObjectMgr.layeredObjects[layer];\r\n\r\n\t\t\t\t\tobj.$layer = layer;\r\n\t\t\t\t\tobj.$objectid = lo.length;\r\n\r\n\t\t\t\t\tlo[obj.$objectid] = obj;\r\n\r\n\t\t\t\t\tlo.length++;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new TypeError(\"layer\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tSceneObjectMgr.destroy = function (obj) {\r\n\t\t\t\tconst layer = obj.$layer;\r\n\t\t\t\tconst uid = obj.$objectid;\r\n\t\t\t\tconst lo = SceneObjectMgr.layeredObjects[layer];\r\n\r\n\t\t\t\tobj.destroy();\r\n\r\n\t\t\t\tdelete lo[uid];\r\n\t\t\t}\r\n\r\n\t\t\tthis.SceneObjectMgr = SceneObjectMgr;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const $gv = new GlobalVar();\r\n\r\nwindow.$gv = $gv;\r\n","﻿\r\nimport { Vec2, clamp } from './math.js';\r\n\r\nfunction colorInt24Parse2(col) {\r\n\treturn \"#\" + [((col >> 16) & 0xFF), ((col >> 8) & 0xFF), (col & 0xFF)].map(a=>a.toString(16).padStart(2, \"0\")).join(\"\");\r\n}\r\nfunction colorInt24Parse(col) {\r\n\treturn \"#\" + [((col >> 16) & 0xFF), ((col >> 8) & 0xFF), (col & 0xFF)].map(a=>a.toString(16).padStart(2, \"0\")).join(\"\");\r\n}\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nclass IColor {\r\n\ttoFilter() {\r\n\t}\r\n\ttoFilterLimit() {\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IColor}\r\n */\r\nexport class ColorRGB {\r\n\tconstructor(r = 0, g = 0, b = 0) {\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.r = r;\r\n\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.g = g;\r\n\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.b = b;\r\n\t}\r\n\tclone() {\r\n\t\treturn new this.constructor(this.r, this.g, this.b);\r\n\t}\r\n\tselfAdd(rgb) {\r\n\t\tthis.r += rgb.r;\r\n\t\tthis.g += rgb.g;\r\n\t\tthis.b += rgb.b;\r\n\t\treturn this;\r\n\t}\r\n\tselfSub(rgb) {\r\n\t\tthis.r += rgb.r;\r\n\t\tthis.g += rgb.g;\r\n\t\tthis.b += rgb.b;\r\n\t\treturn this;\r\n\t}\r\n\tselfScale(s) {\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\t\treturn this;\r\n\t}\r\n\tstatic add(rgb, rgb2) {\r\n\t\treturn new ColorRGB(rgb.r + rgb2.r, rgb.g + rgb2.g, rgb.b + rgb2.b);\r\n\t}\r\n\tstatic sub(rgb, rgb2) {\r\n\t\treturn new ColorRGB(rgb.r - rgb2.r, rgb.g - rgb2.g, rgb.b - rgb2.b);\r\n\t}\r\n\tstatic scale(rgb, s) {\r\n\t\treturn new ColorRGB(rgb.r * s, rgb.g * s, rgb.b * s);\r\n\t}\r\n\ttoString() {\r\n\t\tconst r = Math.trunc(this.r);\r\n\t\tconst g = Math.trunc(this.g);\r\n\t\tconst b = Math.trunc(this.b);\r\n\t\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n\t}\r\n\tstatic fromInt24(col) {\r\n\t\treturn new ColorRGB((col >> 16) & 0xFF, (col >> 8) & 0xFF, col & 0xFF);\r\n\t}\r\n\t/**\r\n\t * source: https://gist.github.com/mjackson/5311256#file-color-conversion-algorithms-js-L84\r\n\t * Converts an RGB color value to HSV. Conversion formula\r\n\t * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n\t * Assumes r, g, and b are contained in the set [0, 255] and\r\n\t * returns h, s, and v in the set [0, 1].\r\n\t *\r\n\t * @returns {ColorHSV}\r\n\t */\r\n\ttoHSV() {\r\n\t\tlet r = this.r /= 255, g = this.g /= 255, b = this.b /= 255;\r\n\r\n\t\tlet max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n\t\tlet h, s, v = max;\r\n\r\n\t\tlet d = max - min;\r\n\t\ts = max == 0 ? 0 : d / max;\r\n\r\n\t\tif (max == min) {\r\n\t\t\th = 0; // achromatic\r\n\t\t} else {\r\n\t\t\tswitch (max) {\r\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\r\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\r\n\t\t\t}\r\n\r\n\t\t\th /= 6;\r\n\t\t}\r\n\r\n\t\treturn new ColorHSV(h, s, v);\r\n\t}\r\n\t/**\r\n\t * source: https://gist.github.com/mjackson/5311256#file-color-conversion-algorithms-js-L119\r\n\t * Converts an HSV color value to RGB. Conversion formula\r\n\t * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n\t * Assumes h, s, and v are contained in the set [0, 1] and\r\n\t * returns r, g, and b in the set [0, 255].\r\n\t *\r\n\t * @param {number} h The hue\r\n\t * @param {number} s The saturation\r\n\t * @param {number} v The value\r\n\t */\r\n\tfromHsv(h, s, v) {\r\n\t\tlet r, g, b;\r\n\r\n\t\tlet i = Math.floor(h * 6);\r\n\t\tlet f = h * 6 - i;\r\n\t\tlet p = v * (1 - s);\r\n\t\tlet q = v * (1 - f * s);\r\n\t\tlet t = v * (1 - (1 - f) * s);\r\n\r\n\t\tswitch (i % 6) {\r\n\t\t\tcase 0: r = v, g = t, b = p; break;\r\n\t\t\tcase 1: r = q, g = v, b = p; break;\r\n\t\t\tcase 2: r = p, g = v, b = t; break;\r\n\t\t\tcase 3: r = p, g = q, b = v; break;\r\n\t\t\tcase 4: r = t, g = p, b = v; break;\r\n\t\t\tcase 5: r = v, g = p, b = q; break;\r\n\t\t}\r\n\r\n\t\tthis.r = r * 255;\r\n\t\tthis.g = g * 255;\r\n\t\tthis.b = b * 255;\r\n\t}\r\n\tstatic fromHsv(h, s, v) {\r\n\t\tlet r, g, b;\r\n\r\n\t\tlet i = Math.floor(h * 6);\r\n\t\tlet f = h * 6 - i;\r\n\t\tlet p = v * (1 - s);\r\n\t\tlet q = v * (1 - f * s);\r\n\t\tlet t = v * (1 - (1 - f) * s);\r\n\r\n\t\tswitch (i % 6) {\r\n\t\t\tcase 0: r = v, g = t, b = p; break;\r\n\t\t\tcase 1: r = q, g = v, b = p; break;\r\n\t\t\tcase 2: r = p, g = v, b = t; break;\r\n\t\t\tcase 3: r = p, g = q, b = v; break;\r\n\t\t\tcase 4: r = t, g = p, b = v; break;\r\n\t\t\tcase 5: r = v, g = p, b = q; break;\r\n\t\t}\r\n\r\n\t\treturn new ColorRGB(r * 255, g * 255, b * 255);\r\n\t}\r\n\ttoFilter() {\r\n\t\tlet { h, s, v } = this.toHSV();\r\n\t\treturn `hue-rotate(${h*Math.PI*2}rad) saturate(${s}) brightness(${v})`;\r\n\t}\r\n\ttoFilterLimit() {\r\n\t\treturn `hue-rotate(${h * 360}deg) saturate(${clamp(Math.trunc(s * 100), 0, 100)}%) brightness(${clamp(Math.trunc(v * 100), 0, 100)}%)`;\r\n\t}\r\n\ttoFilter_HueRotate() {\r\n\t\tconst { h, s, v } = this;\r\n\t\t//return `hue-rotate(${h*Math.PI*2}rad)`;\r\n\t\treturn `hue-rotate(${h * 360}deg)`;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IColor}\r\n */\r\nexport class ColorHSV {\r\n\tconstructor(h = 0, s = 0, v = 0) {\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.h = h;\r\n\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.s = s;\r\n\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.v = v;\r\n\t}\r\n\tclone() {\r\n\t\treturn new this.constructor(this.h, this.s, this.v);\r\n\t}\r\n\tselfAdd(hsv) {\r\n\t\tthis.h += hsv.h;\r\n\t\tthis.s += hsv.s;\r\n\t\tthis.v += hsv.v;\r\n\t\treturn this;\r\n\t}\r\n\tselfSub(hsv) {\r\n\t\tthis.h += hsv.h;\r\n\t\tthis.s += hsv.s;\r\n\t\tthis.v += hsv.v;\r\n\t\treturn this;\r\n\t}\r\n\tselfScale(s) {\r\n\t\tthis.h *= s;\r\n\t\tthis.s *= s;\r\n\t\tthis.v *= s;\r\n\t\treturn this;\r\n\t}\r\n\tstatic add(hsv, hsv2) {\r\n\t\treturn new ColorHSV(hsv.s + hsv2.s, hsv.s + hsv2.s, hsv.v + hsv2.v);\r\n\t}\r\n\tstatic sub(hsv, hsv2) {\r\n\t\treturn new ColorHSV(hsv.s - hsv2.s, hsv.s - hsv2.s, hsv.v - hsv2.v);\r\n\t}\r\n\tstatic scale(hsv, s) {\r\n\t\treturn new ColorHSV(hsv.h * s, hsv.s * s, hsv.v * s);\r\n\t}\r\n\ttoString() {\r\n\t\tconst { h, s, v } = this;\r\n\t\treturn \"hsv(\" + h + \",\" + s + \",\" + v + \")\";\r\n\t}\r\n\r\n\t//toRgb() {\r\n\t//}\r\n\t//fromRgb(r, g, b) {\r\n\t//}\r\n\r\n\t//static fromRgb(r, g, b) {\r\n\t//}\r\n\r\n\ttoFilter() {\r\n\t\tconst { h, s, v } = this;\r\n\t\treturn `hue-rotate(${h*Math.PI*2}rad) saturate(${s}) brightness(${v})`;\r\n\t}\r\n\ttoFilterLimit() {\r\n\t\treturn `hue-rotate(${h * 360}deg) saturate(${clamp(Math.trunc(s * 100), 0, 100)}%) brightness(${clamp(Math.trunc(v * 100), 0, 100)}%)`;\r\n\t}\r\n\ttoFilter_HueRotate() {\r\n\t\tconst { h, s, v } = this;\r\n\t\t//return `hue-rotate(${h*Math.PI*2}rad)`;\r\n\t\treturn `hue-rotate(${h * 360}deg)`;\r\n\t}\r\n}\r\n\r\nexport class _ImageFilter {\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t * @param {number} contrast 0 ~ 100\r\n\t */\r\n\tconstructor(hue = 0, sat = 100, bri = 100, contrast = 100) {\r\n\t\tthis._hue = hue;\r\n\t\tthis._sat = sat;\r\n\t\tthis._bri = bri;\r\n\t\tthis._contrast = contrast;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hue() {\r\n\t\treturn this._hue;\r\n\t}\r\n\tset hue(value) {\r\n\t\tthis._hue = value % 360;\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget sat() {\r\n\t\treturn this._sat;\r\n\t}\r\n\tset sat(value) {\r\n\t\tthis._sat = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget bri() {\r\n\t\treturn this._bri;\r\n\t}\r\n\tset bri(value) {\r\n\t\tthis._bri = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget contrast() {\r\n\t\treturn this._contrast;\r\n\t}\r\n\tset contrast(value) {\r\n\t\tthis._contrast = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\ttoRgb() {\r\n\t\treturn ColorRGB.fromHsv(this._hue / 360, this._sat / 100, this._bri / 100);\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn `hue-rotate(${this._hue}deg) saturate(${this._sat}%) brightness(${this._bri}%) contrast(${this._contrast}%)`;// + ImageFilter.globalFilter\r\n\t}\r\n}\r\n\r\n/**\r\n * default no filter\r\n */\r\nexport class ImageFilter extends _ImageFilter {\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t * @param {number} contrast 0 ~ 100\r\n\t */\r\n\tconstructor(hue = 0, sat = 100, bri = 100, contrast = 100) {\r\n\t\tsuper(hue, sat, bri, contrast);\r\n\t\tif (arguments.length) {\r\n\t\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hue() {\r\n\t\treturn 0;\r\n\t}\r\n\tset hue(value) {\r\n\t\tthis._hue = value % 360;\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget sat() {\r\n\t\treturn 100;\r\n\t}\r\n\tset sat(value) {\r\n\t\tthis._sat = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget bri() {\r\n\t\treturn 100;\r\n\t}\r\n\tset bri(value) {\r\n\t\tthis._bri = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget contrast() {\r\n\t\treturn 100;\r\n\t}\r\n\tset contrast(value) {\r\n\t\tthis._contrast = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\r\n\ttoRgb() {\r\n\t\treturn new ColorRGB(255, 255, 255);\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn \"none\";//ImageFilter.globalFilter ? ImageFilter.globalFilter : \"none\";\r\n\t}\r\n\r\n\tget isEmpty() {\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n_ImageFilter.prototype.reset = function () {\r\n\tthis._hue = 0;\r\n\tthis._sat = 100;\r\n\tthis._bri = 100;\r\n\tthis._contrast = 100;\r\n\tthis.__proto__ = ImageFilter.prototype;\r\n}\r\n\r\n/**\r\n * @param {number} hue 0 ~ 360\r\n * @param {number} sat 0 ~ 100\r\n * @param {number} bri 0 ~ 100\r\n * @param {number} contrast 0 ~ 100\r\n */\r\n_ImageFilter.prototype.set = function (hue, sat, bri, contrast) {\r\n\tif ((hue % 360 == 0) && sat == 100 && bri == 100 && contrast == 100) {\r\n\t\tthis.reset();\r\n\t}\r\n\telse {\r\n\t\tthis.hue = hue;\r\n\t\tthis.sat = sat;\r\n\t\tthis.bri = bri;\r\n\t\tthis._contrast = contrast;\r\n\t}\r\n}\r\n\r\n/**\r\n * @abstract\r\n */\r\nexport class IGraph {\r\n\tconstructor(url, info) {\r\n\t\t/** @type {number} */\r\n\t\tlet width;\r\n\t\t/** @type {number} */\r\n\t\tlet height;\r\n\t\t\r\n\t\t/** @type {Promise} if loaded will delete */\r\n\t\tthis.$promise = undefined;\r\n\t\t\r\n\t\t/** @type {WebGLBuffer} */\r\n\t\tthis._vbo = undefined;\r\n\r\n\t\t/** @type {number} - origin.x */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} - origin.y */\r\n\t\tthis.y = 0;\r\n\r\n\t\tif (info) {\r\n\t\t\tif (info.width > 0) {\r\n\t\t\t\twidth = Number(info.width);\r\n\t\t\t}\r\n\t\t\tif (info.height > 0) {\r\n\t\t\t\theight = Number(info.height);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\twidth = 0;\r\n\t\t\theight = 0;\r\n\t\t}\r\n\t\t/** @type {number} */\r\n\t\tthis.width = width;\r\n\t\t/** @type {number} */\r\n\t\tthis.height = height;\r\n\t\t//\r\n\t\tObject.defineProperty(this, \"width\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis._isLoaded_or_doload();\r\n\t\t\t\treturn width;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(this, \"height\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis._isLoaded_or_doload();\r\n\t\t\t\treturn height;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/** @type {WebGLTexture} */\r\n\t\t/** this.texture = null; */\r\n\t\tObject.defineProperty(this, \"texture\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis.__isLoading_or_doload();\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.isLoaded = this._isLoaded_or_doload;\r\n\r\n\t\t/** @type {function():void} */\r\n\t\t//this._onload = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = \"\";\r\n\t\tif (url) {\r\n\t\t\tthis.src = url;\r\n\t\t}\r\n\t}\r\n\t_dispose() {\r\n\t\t//only check is loaded\r\n\t\tif (this._isLoaded()) {\r\n\t\t\t//this._engine.deleteGraph(this);\r\n\r\n\t\t\tif (this._gl) {\r\n\t\t\t\talert(\"gl.deleteTexture(this.texture)\");\r\n\t\t\t\tthis._gl.deleteTexture(this.texture);\r\n\t\t\t}\r\n\t\t\tthis.texture = null;\r\n\t\t}\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {IRenderer}\r\n\t */\r\n\tget _engine() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\t/**\r\n\t * @returns {WebGLRenderingContext}\r\n\t */\r\n\tget _gl() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\t/**\r\n\t * @returns {CanvasRenderingContext2D}\r\n\t */\r\n\tget _ctx() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t//get width() { return this.matrix[0]; }\r\n\t//set width(val) { this.matrix[0] = val; }\r\n\r\n\t//get height() { return this.matrix[5]; }\r\n\t//set height(val) { this.matrix[5] = val; }\r\n\r\n\t//get x() { return this.matrix[12]; }\r\n\t//set x(val) { this.matrix[12] = val; }\r\n\r\n\t//get y() { return this.matrix[13]; }\r\n\t//set y(val) { this.matrix[13] = val; }\r\n\r\n\t/** ?? */\r\n\tget z() { return 0; }\r\n\t//get z() { return this.matrix[14]; }\r\n\t//set z(val) { this.matrix[14] = val; }\r\n\r\n\t/** ?? */\r\n\tset src(url) {\r\n\t\tdebugger;//this.src is broken;\r\n\t\t\r\n\t\tthis._dispose();\r\n\t\tthis._url = url;\r\n\t}\r\n\r\n\t_isLoaded() {\r\n\t\treturn this.texture != null;\r\n\t}\r\n\t_isLoaded_or_doload() {\r\n\t\tif (!this.texture) {\r\n\t\t\tthis.__loadTexture();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t__isLoading_or_doload() {\r\n\t\tif (this.$promise === null) {\r\n\t\t\tthis.__loadTexture();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t__loadTexture() {\r\n\t\tif (this.$promise) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._url == \"\") {\r\n\t\t\tdebugger;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet image = new Image();\r\n\r\n\t\tthis.$promise = new Promise((resolve, reject) => {\r\n\t\t\tconst engine = this._engine;\r\n\r\n\t\t\timage.addEventListener(\"load\", e => {\r\n\t\t\t\tif (!e.target.naturalWidth || !e.target.naturalHeight) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.isLoaded = this._isLoaded;//end\r\n\r\n\t\t\t\tdelete this.width;\r\n\t\t\t\tthis.width = e.target.naturalWidth;\r\n\r\n\t\t\t\tdelete this.height;\r\n\t\t\t\tthis.height = e.target.naturalHeight;\r\n\r\n\t\t\t\tdelete this.texture;\r\n\t\t\t\tthis.texture = engine._handleImageLoaded(e.target, this);\r\n\t\t\t\t\t\r\n\t\t\t\tdelete this.$promise;\r\n\r\n\t\t\t\tresolve(this);\r\n\t\t\t}, false);\r\n\r\n\t\t\timage.addEventListener(\"error\", e => {\r\n\t\t\t\tthis.isLoaded = this._isLoaded;//no try again\r\n\r\n\t\t\t\tif (this._graph_rect) {\r\n\t\t\t\t\tdelete this.texture;\r\n\t\t\t\t\tthis.texture = this._graph_rect;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.error(\"404: \" + image.src);\r\n\r\n\t\t\t\tresolve(this);\r\n\t\t\t}, false);\r\n\t\t});\r\n\r\n\t\tIGraph.$all_promise.push(this.$promise);\r\n\r\n\t\timage.src = $get.imageUrl(this._url);\r\n\t}\r\n\r\n\tstatic async waitAllLoaded(cbfunc) {\r\n\t\tlet tasks = IGraph.$all_promise;\r\n\t\tconsole.log(\"image loaded: \" + IGraph.$all_promise.length);\r\n\t\tIGraph.$all_promise = [];\r\n\t\tawait Promise.all(tasks);\r\n\t\tif (cbfunc) {\r\n\t\t\tcbfunc();\r\n\t\t}\r\n\t}\r\n}\r\nIGraph.$all_promise = [];\r\n\r\nexport class IRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {IGraph} */\r\n\t\tthis._GraphType = null;\r\n\r\n\t\t/**\r\n\t\t * @type {CanvasRenderingContext2D}\r\n\t\t */\r\n\t\tthis.ctx = null;\r\n\t\t\r\n\t\tthis._globalAlpha = 1;\r\n\t\tthis._globalAlphaStack = [];\r\n\t\t\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.screen_size = new Vec2(0, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tinit(id) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {IGraph} */\r\n\tget Graph() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\treturn new IGraph();\r\n\t}\r\n\r\n\t/**\r\n\t * swap Canvas and Canvas2\r\n\t * if (imageSmoothingEnabled) this._ctx2.imageSmoothingEnabled = true;\r\n\t * @param {boolean} imageSmoothingEnabled\r\n\t */\r\n\t$swapCanvas(imageSmoothingEnabled) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {HTMLCanvasElement} */\r\n\tget _canvas() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLImageElement} image\r\n\t * @param {IGraph} graph\r\n\t * @param {Object} texture\r\n\t */\r\n\t_handleImageLoaded(image, graph) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} r\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t * @param {number} sx\r\n\t * @param {number} sy\r\n\t */\r\n\tsetRotationTranslationScale(r, dx, dy, sx, sy) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} m11\r\n\t * @param {number} m12\r\n\t * @param {number} m21\r\n\t * @param {number} m22\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t */\r\n\tsetTransform(m11, m12, m21, m22, dx, dy) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tloadIdentity() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\tpushMatrix() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\tpopMatrix() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\ttranslate(x, y) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\ttranslate3d(x, y, z) {\r\n\t\talert(\"'translate3d' is deprecated\");\r\n\t\tthrow new Error(\"'translate3d' is deprecated\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tscale(x, y) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\tscale3d(x, y, z) {\r\n\t\talert(\"'scale3d' is deprecated\");\r\n\t\tthrow new Error(\"'scale3d' is deprecated\");\r\n\t}\r\n\t/**\r\n\t * @param {number} r - rad\r\n\t */\r\n\trotate(r) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {number[]} */\r\n\tget color() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {number[]} - 4fv */\r\n\tset color(f4v) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {vec4} f4v - vec4: array\r\n\t */\r\n\tColor4fv(f4v) {\r\n\t\talert(\"'Color4fv' is deprecated\");\r\n\t\tthrow new Error(\"'Color4fv' is deprecated\");\r\n\t}\r\n\r\n\t/**\r\n\t * @type {number} global alpha\r\n\t */\r\n\tget globalAlpha() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\tset globalAlpha(value) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tpushGlobalAlpha() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tpopGlobalAlpha(value) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tclearDrawScreen() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t */\r\n\tdrawGraph(graph) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\tdrawGraph2(graph, x, y, z) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawRect(x, y, w, h) {\r\n\t\tif (arguments.length != 4) {\r\n\t\t\tconsole.error(\"drawRect(x, y, w, h) need 4 param\");\r\n\t\t}\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {ColorRGB} color\r\n\t */\r\n\tdrawColoredGraph(graph, x, y, color) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nexport class ImageDataHelper {\r\n\tconstructor() {\r\n\t\tthis.canvas = document.createElement('canvas');\r\n\t\tthis.ctx = this.canvas.getContext('2d');\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} width\r\n\t * @param {number} height\r\n\t */\r\n\tresize(width, height) {\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {HTMLImageElement} image\r\n\t * @returns {ImageData}\r\n\t */\r\n\timageToImagedata(image) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = image.width;\r\n\t\tcanvas.height = image.height;\r\n\t\tctx.drawImage(image, 0, 0);\r\n\r\n\t\treturn ctx.getImageData(0, 0, image.width, image.height);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ImageData} imagedata\r\n\t * @returns {string}\r\n\t */\r\n\timagedataToDataURL(imagedata) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = imagedata.width;\r\n\t\tcanvas.height = imagedata.height;\r\n\t\tctx.putImageData(imagedata, 0, 0);\r\n\t\t\r\n\t\treturn canvas.toDataURL();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ImageData} imagedata\r\n\t * @returns {HTMLImageElement}\r\n\t */\r\n\timagedataToImage(imagedata) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = imagedata.width;\r\n\t\tcanvas.height = imagedata.height;\r\n\t\tctx.putImageData(imagedata, 0, 0);\r\n\r\n\t\tlet image = new Image();\r\n\t\timage.src = canvas.toDataURL();\r\n\t\treturn image;\r\n\t}\r\n}\r\n","﻿\r\nexport class Vec2 {\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tconstructor(x, y) {\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\t\telse if (arguments.length == 1 && x != null) {\r\n\t\t\tthis.x = x.x | 0;\r\n\t\t\tthis.y = x.y | 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t}\r\n\t}\r\n\tstatic get() {\r\n\t\treturn new Vec2(...arguments);\r\n\t}\r\n\tstatic get empty() {\r\n\t\treturn new Vec2(0, 0);\r\n\t}\r\n\t/**\r\n\t * @returns {Vec2}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor(this.x, this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {...Vec2} v2\r\n\t * @returns {Vec2}\r\n\t */\r\n\tadd(v2) {\r\n\t\tlet x = this.x, y = this.y;\r\n\t\tfor (let v of arguments) {\r\n\t\t\tif (v == null)\r\n\t\t\t\tcontinue;\r\n\t\t\tx = x + v.x;\r\n\t\t\ty = y + v.y;\r\n\t\t}\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\t/**\r\n\t * @param {...Vec2} v2\r\n\t * @returns {Vec2}\r\n\t */\r\n\tsub(v2) {\r\n\t\tlet x = this.x, y = this.y;\r\n\t\tfor (let v of arguments) {\r\n\t\t\tif (v == null)\r\n\t\t\t\tcontinue;\r\n\t\t\tx = x - v.x;\r\n\t\t\ty = y - v.y;\r\n\t\t}\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\r\n\t/** @param {Vec2} v */\r\n\tplus(v) {\r\n\t\treturn new Vec2(this.x + v.x, this.y + v.y);\r\n\t}\r\n\t/** @param {Vec2} v */\r\n\tminus(v) {\r\n\t\treturn new Vec2(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tplus2(x, y) {\r\n\t\treturn new Vec2(this.x + x, this.y + y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tminus2(x, y) {\r\n\t\treturn new Vec2(this.x - x, this.y - y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} floatVar\r\n\t */\r\n\tmul(floatVar) {\r\n\t\treturn new Vec2(this.x * floatVar, this.y * floatVar);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} s\r\n\t */\r\n\tscale(s) {\r\n\t\treturn new Vec2(this.x * s, this.y * s);\r\n\t}\r\n\r\n\trotate(ang) {\r\n\t\tlet x = Math.cos(ang) * this.x - Math.sin(ang) * this.y;\r\n\t\tlet y = Math.sin(ang) * this.x + Math.cos(ang) * this.y;\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\r\n\tnormalize() {\r\n\t\tlet r = Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t\treturn new Vec2(this.x / r, this.y / r);\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn Math.sqrt(x ** 2 + y ** 2);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} p2\r\n\t */\r\n\tdistance_sq(p2) {\r\n\t\tlet lx = this.x - p2.x;\r\n\t\tlet ly = this.y - p2.y;\r\n\t\treturn lx * lx + ly * ly;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} p2\r\n\t */\r\n\tdistance(p2) {\r\n\t\tlet lx = this.x - p2.x;\r\n\t\tlet ly = this.y - p2.y;\r\n\t\treturn Math.sqrt(lx * lx + ly * ly);\r\n\t}\r\n}\r\n\r\nexport class Rectangle {\r\n\t/**\r\n\t * Rectangle(left: number, top: number, width: number, height: number)\r\n\t * Rectangle(position: Vec2, size: Vec2)\r\n\t * Rectangle(rect: Rectangle)\r\n\t * Rectangle() => Rectangle(0, 0, 0, 0)\r\n\t */\r\n\tconstructor() {\r\n\t\tif (arguments.length == 4) {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = arguments[0];//x\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = arguments[1];//y\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = arguments[2];//w\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = arguments[3];//h\r\n\t\t}\r\n\t\telse if (arguments.length == 2) {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = arguments[0].x;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = arguments[0].y;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = arguments[1].x;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = arguments[1].y;\r\n\t\t}\r\n\t\telse if (arguments[0] instanceof Rectangle) {\r\n\t\t\tconst r = arguments[0];\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = r.left;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = r.top;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = r.width;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = r.height;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Rectangle} other\r\n\t */\r\n\tcopy(other) {\r\n\t\tthis.left = other.left;\r\n\t\tthis.top = other.top;\r\n\t\tthis.width = other.width;\r\n\t\tthis.height = other.height;\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\treturn new Rectangle(this);\r\n\t}\r\n\r\n\tget x() { return this.left; }\r\n\tset x(value) { this.left = value; }\r\n\r\n\tget y() { return this.top; }\r\n\tset y(value) { this.top = value; }\r\n\r\n\tget right() { return this.left + this.width; }\r\n\tset right(value) { this.width = value - this.left; }\r\n\r\n\tget bottom() { return this.top + this.height; }\r\n\tset bottom(value) { this.height = value - this.top; }\r\n\r\n\tget size() {\r\n\t\treturn new Vec2(this.width, this.height);\r\n\t}\r\n\tset size(value) {\r\n\t\tthis.width = value.width || value.x;\r\n\t\tthis.height = value.height || value.y;\r\n\t}\r\n\r\n\tget center() {\r\n\t\treturn new Vec2(this.left + this.width * 0.5, this.top + this.height * 2 / 3);\r\n\t}\r\n\tset center(value) {\r\n\t\tlet w2 = this.width * 0.5;\r\n\t\tlet h23 = this.height * 2 / 3;\r\n\r\n\t\tthis.left = value.x - w2;\r\n\t\tthis.top = value.y - h23;\r\n\t}\r\n\tsetCenter(cx, cy) {\r\n\t\tlet w2 = this.width * 0.5;\r\n\t\tlet h23 = this.height * 2 / 3;\r\n\r\n\t\tthis.left = cx - w2;\r\n\t\tthis.top = cy - h23;\r\n\t}\r\n\t\r\n\tcollide(other) {\r\n\t\treturn (this.left < other.right && this.right > other.left && this.top < other.bottom && this.bottom > other.top);\r\n\t}\r\n\t\r\n\tcollide4f(left, right, top, bottom) {\r\n\t\treturn (this.left < right && this.right > left && this.top < bottom && this.bottom > top);\r\n\t}\r\n\tcollide4f2(x, y, hwidth, hheight) {\r\n\t\tconst left = x - hwidth;\r\n\t\tconst top = y - hheight;\r\n\t\tconst right = x + hwidth;\r\n\t\tconst bottom = y + hheight;\r\n\t\treturn (this.left < right && this.right > left && this.top < bottom && this.bottom > top);\r\n\t}\r\n\tcollide2f2x(x, hwidth) {\r\n\t\tconst left = x - hwidth;\r\n\t\tconst right = x + hwidth;\r\n\t\treturn (this.left < right && this.right > left);\r\n\t}\r\n\tcollide2f2y(y, hheight) {\r\n\t\tconst top = y - hheight;\r\n\t\tconst bottom = y + hheight;\r\n\t\treturn (this.top < bottom && this.bottom > top);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} left\r\n\t * @param {number} top\r\n\t * @param {number} right\r\n\t * @param {number} bottom\r\n\t */\r\n\tparse(left, top, right, bottom) {\r\n\t\tthis.left = left;\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} left\r\n\t * @param {number} top\r\n\t * @param {number} right\r\n\t * @param {number} bottom\r\n\t */\r\n\tstatic parse(left, top, right, bottom) {\r\n\t\treturn new Rectangle(left, top, right - left, bottom - top);\r\n\t}\r\n}\r\n\r\nexport class Randomizer {\r\n\tstatic nextInt(r) {\r\n\t\treturn Math.trunc(Math.random() * 100 % r);\r\n\t}\r\n\tstatic randInt(min, max) {\r\n\t\treturn Math.trunc(min + Math.random() * 100 % (max - min + 1));\r\n\t}\r\n\tstatic nextBoolean() {\r\n\t\treturn !(Math.trunc(Math.random() * 100) & 1);\r\n\t}\r\n}\r\n\r\nexport function clamp(value, min, max) {\r\n\treturn Math.max(min, Math.min(value, max));\r\n}\r\n\r\n","﻿\r\nimport { Vec2 } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\n\r\n\r\nwindow.m_draw_animation_texture_info = false;\r\n\r\nclass IAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tthis._raw = null;\r\n\t\tthis._url = null;\r\n\t\t\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t_raw: {\r\n\t\t\t\tvalue: raw\r\n\t\t\t},\r\n\t\t\t_url: {\r\n\t\t\t\tvalue: url\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** elapsed time */\r\n\t\tthis.delta = 0;\r\n\r\n\t\t/** @type {Sprite[]} */\r\n\t\tthis.textures = [];\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_loop = true;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_end = false;\r\n\r\n\t\tif (!raw && !this._url) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.textures.reduce((pv, cv) => pv + cv.delay, 0);\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet newAnim = new this.constructor(this._raw, this._url);\r\n\t\tnewAnim.textures = this.textures;\r\n\t\treturn newAnim;\r\n\t}\r\n\t\r\n\tload() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** reset frame */\r\n\t_resetFrame() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t}\r\n\r\n\t/** restart */\r\n\treset() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.is_end = false;\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * remove at nextStep\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.is_loop = false;//防止重複\r\n\t\tthis.is_end = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * process animation\r\n */\r\nexport class AnimationBase extends IAnimation {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n\r\n\tload() {\r\n\t\tif (!this._raw) {\r\n\t\t\t//this._raw = await $get.data(this._url);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i in this._raw; ++i) {\r\n\t\t\t//let url = this._url + \"/\" + i;\r\n\r\n\t\t\tlet texture = new Sprite(this._raw[i]);\r\n\r\n\t\t\t//texture._url = url;\r\n\r\n\t\t\tthis.textures[i] = texture;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.textures[0]) {\r\n\t\t\tif (!this.textures[0].isLoaded()) {\r\n\t\t\t\tthis.textures[0].__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * aways loop\r\n\t * @param {number} stamp\r\n\t */\r\n\t_update(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame % fc;\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = this.frame + 1;\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tif (this.is_loop) {\r\n\t\t\t\t\t\tthis.reset();//make loop\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//防止錯誤\r\n\t\t\t\t\t\tthis.frame = fc - 1;//this._resetFrame();\r\n\r\n\t\t\t\t\t\tthis.is_end = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, x, y, angle, flip) {\r\n\t\tlet texture = this.texture;\r\n\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\treturn this.textures[this.frame];\r\n\t}\r\n}\r\n\r\n/**\r\n * animation rendering\r\n */\r\nexport class Animation extends AnimationBase {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tthis.draw = this._draw_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * draw and load next frame\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\t_draw_and_preload(renderer, x, y, angle, flip) {\r\n\t\tlet frame;\r\n\r\n\t\t// if current frame is not loaded then render prev frame\r\n\t\tfor (frame = this.frame; frame >= 0; --frame) {\r\n\t\t\tlet texture = this.textures[frame];\r\n\r\n\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//preload next frame\r\n\t\tlet texture = this.textures[++frame];\r\n\t\tif (texture) {//if frame < this.textures.length\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {//if all testure are loaded\r\n\t\t\tdelete this.draw;\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\nimport { mat2d, vec2, mat4, quat } from 'gl-matrix';\r\nimport { Vec2 } from './math.js';\r\nimport { IGraph, IRenderer, ColorRGB } from './IRenderer.js';\r\n\r\n//import WebGL2D from \"./WebGL2D/WebGL2D.js\";\r\n//window.$WebGL2D = WebGL2D;\r\n\r\nwindow._experimental_particle = true;\r\n\r\nclass MyMatrix2D {\r\n\tconstructor() {\r\n\t\tthis.$temp_vec2 = vec2.create();\r\n\r\n\t\t/** @type {mat2d} */\r\n\t\tthis.$transform = mat2d.create();\r\n\t}\r\n\tloadIdentity() {\r\n\t\tmat2d.identity(this.$transform);\r\n\t}\r\n\t/**\r\n\t * @param {number} m11\r\n\t * @param {number} m12\r\n\t * @param {number} m21\r\n\t * @param {number} m22\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t */\r\n\tsetTransform(m11, m12, m21, m22, dx, dy) {\r\n\t\tthis.$transform[0] = m11;\r\n\t\tthis.$transform[1] = m12;\r\n\t\tthis.$transform[2] = m21;\r\n\t\tthis.$transform[3] = m22;\r\n\t\tthis.$transform[4] = dx;\r\n\t\tthis.$transform[5] = dy;\r\n\t}\r\n\t/**\r\n\t * @param {Canvas2DContextAttributes} ctx\r\n\t */\r\n\tapplyTransform(ctx) {\r\n\t\tconst m11 = this.$transform[0], m12 = this.$transform[1],\r\n\t\t\tm21 = this.$transform[2], m22 = this.$transform[3],\r\n\t\t\tdx = this.$transform[4], dy = this.$transform[5];\r\n\t\tctx.setTransform(m11, m12, m21, m22, dx, dy);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\ttranslate(x, y) {\r\n\t\tthis.$temp_vec2[0] = x;\r\n\t\tthis.$temp_vec2[1] = y;\r\n\t\tmat2d.translate(this.$transform, this.$transform, this.$temp_vec2);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tscale(x, y) {\r\n\t\tthis.$temp_vec2[0] = x;\r\n\t\tthis.$temp_vec2[1] = y;\r\n\t\tmat2d.scale(this.$transform, this.$transform, this.$temp_vec2);\r\n\t}\r\n\t/**\r\n\t * @param {number} r - rad\r\n\t */\r\n\trotate(r) {\r\n\t\tmat2d.rotate(this.$transform, this.$transform, a);\r\n\t}\r\n\r\n\ttoMat4() {\r\n\t\tmat4.fromScaling\r\n\t}\r\n}\r\n\r\nwindow.$mat2d = mat2d;\r\nwindow.$mat4 = mat4;\r\nwindow.$quat = quat;\r\n\r\n/**\r\n * @implements {IRenderer}\r\n */\r\nexport class Engine extends IRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tthis.ctx = null;\r\n\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tthis._ctx2 = null;\r\n\t\t/** @type {HTMLCanvasElement} */\r\n\t\tthis._canvas2 = null;\r\n\r\n\t\t(function (that) {\r\n\t\t\tthat._GraphType = class Graph extends IGraph {\r\n\t\t\t\tget _engine() {\r\n\t\t\t\t\treturn that;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tinit(id) {\r\n\t\tlet canvas = document.getElementById(id);\r\n\t\tlet canvas2 = this._canvas2 = document.getElementById(id + \"2\");\r\n\r\n\t\tthis.ctx = canvas.getContext(\"2d\", { alpha: true });//new WebGL2D(canvas);//\r\n\t\tthis._ctx2 = canvas2.getContext(\"2d\", { alpha: true });\r\n\r\n\t\tthis.ctx.imageSmoothingEnabled = false;\r\n\t\tthis._ctx2.imageSmoothingEnabled = true;\r\n\r\n\t\t_resize_canvas(canvas, window.innerWidth, window.innerHeight);\r\n\t\t_resize_canvas(canvas2, window.innerWidth, window.innerHeight);\r\n\r\n\t\twindow.onresize = e => {\r\n\t\t\tconst width = window.innerWidth;\r\n\t\t\tconst height = window.innerHeight;\r\n\r\n\t\t\t_resize_canvas(canvas, width, height);\r\n\t\t\t_resize_canvas(canvas2, width, height);\r\n\r\n\t\t\tdocument.getElementById(\"screen_width\").innerHTML = width;\r\n\t\t\tdocument.getElementById(\"screen_height\").innerHTML = height;\r\n\r\n\t\t\tthis.screen_size.x = width;\r\n\t\t\tthis.screen_size.y = height;\r\n\t\t}\r\n\t\twindow.onresize();\r\n\r\n\t\tfunction _resize_canvas(canvas, width, height) {\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\t}\r\n\r\n\t\tthis._graph_rect = new this.Graph();\r\n\t\tthis._graph_rect._url = $get.imageUrl(\"/1x1\");\r\n\t}\r\n\r\n\t/** @type {IGraph} */\r\n\tget Graph() {\r\n\t\treturn this._GraphType;\r\n\t}\r\n\r\n\t/** @type {HTMLCanvasElement} */\r\n\tget _canvas() {\r\n\t\treturn this.ctx.canvas;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLImageElement} image\r\n\t * @param {IGraph} graph\r\n\t * @param {HTMLImageElement} texture\r\n\t */\r\n\t_handleImageLoaded(image, graph) {\r\n\t\treturn image;\r\n\t}\r\n\r\n\t/**\r\n\t * swap Canvas and Canvas2\r\n\t * if (imageSmoothingEnabled) this._ctx2.imageSmoothingEnabled = true;\r\n\t * @param {boolean} imageSmoothingEnabled\r\n\t */\r\n\t$swapCanvas(imageSmoothingEnabled) {\r\n\t\tif (imageSmoothingEnabled) {\r\n\t\t\tthis.ctx.imageSmoothingEnabled = false;\r\n\t\t\tthis._ctx2.imageSmoothingEnabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.ctx.imageSmoothingEnabled = false;\r\n\t\t\tthis._ctx2.imageSmoothingEnabled = false;\r\n\t\t}\r\n\r\n\t\t//swap\r\n\t\tconst ctx2 = this._ctx2;\r\n\t\tthis._ctx2 = this.ctx;\r\n\t\tthis.ctx = ctx2;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} m11\r\n\t * @param {number} m12\r\n\t * @param {number} m21\r\n\t * @param {number} m22\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t */\r\n\tsetTransform(m11, m12, m21, m22, dx, dy) {\r\n\t\tthis.ctx.setTransform(m11, m12, m21, m22, dx, dy);\r\n\t}\r\n\r\n\tloadIdentity() {\r\n\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t}\r\n\tpushMatrix() {\r\n\t\tthis.ctx.save();\r\n\t}\r\n\tpopMatrix() {\r\n\t\tthis.ctx.restore();\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\ttranslate(x, y) {\r\n\t\tthis.ctx.translate(x, y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tscale(x, y) {\r\n\t\tthis.ctx.scale(x, y);\r\n\t}\r\n\t/**\r\n\t * @param {number} r - rad\r\n\t */\r\n\trotate(r) {\r\n\t\tthis.ctx.rotate(r);\r\n\t}\r\n\r\n\t///** @type {number[]} */\r\n\t//get color() {\r\n\t//\treturn this._color;\r\n\t//}\r\n\r\n\t/** @type {number[]} - 4fv */\r\n\tset color(f4v) {\r\n\t\t//f4v = [...f4v];\r\n\r\n\t\tconst red = Math.trunc(f4v[0] * 255);\r\n\t\tconst green = Math.trunc(f4v[1] * 255);\r\n\t\tconst blue = Math.trunc(f4v[2] * 255);\r\n\t\tconst alpha = f4v[3].toFixed(3);\r\n\r\n\t\tthis.ctx.fillStyle = `rgba(${red},${green},${blue},${alpha})`;\r\n\t\tthis.ctx.strokeStyle = this.ctx.fillStyle;\r\n\r\n\t\t//f4v.r = red;\r\n\t\t//f4v.g = green;\r\n\t\t//f4v.b = blue;\r\n\t\t//f4v.a = alpha;\r\n\t\t//this._color = f4v;\r\n\t}\r\n\r\n\tget globalAlpha() {\r\n\t\treturn this._globalAlpha;//this.ctx.globalAlpha;\r\n\t}\r\n\tset globalAlpha(value) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (value < 0 || value > 1) {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._globalAlpha != value) {\r\n\t\t\tthis._globalAlpha = value;\r\n\t\t\tthis.ctx.globalAlpha = value;\r\n\t\t}\r\n\t}\r\n\tpushGlobalAlpha() {\r\n\t\tthis._globalAlphaStack.push(this.ctx.globalAlpha);\r\n\t}\r\n\tpopGlobalAlpha(value) {\r\n\t\tthis.ctx.globalAlpha = this._globalAlphaStack.pop();\r\n\t}\r\n\r\n\tbeginScene() {\r\n\t\t// nothing\r\n\t}\r\n\r\n\tendScene() {\r\n\t\t// nothing\r\n\t}\r\n\r\n\tclearDrawScreen() {\r\n\t\tconst c = this.ctx.canvas;\r\n\t\tthis.ctx.clearRect(0, 0, c.width, c.height);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawRect(x, y, w, h) {\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tlet ctx = this.ctx;\r\n\r\n\t\tif (arguments.length == 4) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillRect(x, y, w, h);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t */\r\n\tdrawGraph(graph) {\r\n\t\tif (graph.isLoaded()) {\r\n\t\t\tthis.ctx.drawImage(graph.texture, 0, 0);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\tdrawGraph2(graph, x, y, z) {\r\n\t\tif (graph.isLoaded()) {\r\n\t\t\tthis.ctx.drawImage(graph.texture, x, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} sx - The x coordinate where to start clipping\r\n\t * @param {number} sy - The y coordinate where to start clipping\r\n\t * @param {number} swidth - The width of the clipped image\r\n\t * @param {number} sheight - The height of the clipped image\r\n\t * @param {number} x - The x coordinate where to place the image on the canvas\r\n\t * @param {number} y - The y coordinate where to place the image on the canvas\r\n\t * @param {number} width - The width of the image to use (stretch or reduce the image)\r\n\t * @param {number} height - The height of the image to use (stretch or reduce the image)\r\n\t */\r\n\t_drawImage(graph, sx, sy, swidth, sheight, x, y, width, height) {\r\n\t\tif (graph.isLoaded()) {\r\n\t\t\tthis.ctx.drawImage(graph.texture, sx, sy, swidth, sheight, x, y, width, height);\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * https://stackoverflow.com/a/42856420\r\n\t */\r\n\t__drawMirrorImage(ctx, image, x = 0, y = 0, horizontal = false, vertical = false){\r\n\t\tctx.save();  // save the current canvas state\r\n\t\tctx.setTransform(\r\n\t\t\thorizontal ? -1 : 1, 0, // set the direction of x axis\r\n\t\t\t0, vertical ? -1 : 1,   // set the direction of y axis\r\n\t\t\tx + horizontal ? image.width : 0, // set the x origin\r\n\t\t\ty + vertical ? image.height : 0   // set the y origin\r\n\t\t\t);\r\n\t\tctx.drawImage(image,0,0);\r\n\t\tctx.restore(); // restore the state as it was when this function was called\r\n\t}\r\n\t\r\n\t/**\r\n\t * whitout save/restore canvas\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\t_drawRotaGraph(graph, x, y, angle, flip) {\r\n\t\t// this.ctx.lineWidth = 1;\r\n\t\t\t\r\n\t\t// this.ctx.beginPath();\r\n\t\t// this.ctx.moveTo(0, 0);\r\n\t\t// this.ctx.lineTo(32, 0);\r\n\t\t// this.ctx.strokeStyle = \"darkred\";\r\n\t\t// this.ctx.stroke();\r\n\t\t\r\n\t\t// this.ctx.beginPath();\r\n\t\t// this.ctx.moveTo(0, 0);\r\n\t\t// this.ctx.lineTo(0, 32);\r\n\t\t// this.ctx.strokeStyle = \"darkgreen\";\r\n\t\t// this.ctx.stroke();\r\n\t\t\r\n\t\t// this.ctx.beginPath();\r\n\t\t// this.ctx.rect(0, 0, 32, 32);\r\n\t\t// this.ctx.fillStyle = \"rgba(66,66,66,0.5)\";\r\n\t\t// this.ctx.fill();\r\n\t\t\r\n\t\t//if (flip || angle > 0.001 || angle < -0.001) {\r\n\t\t\tif (1) {\r\n\t\t\t\tthis.translate(x, y);//zorder ? graph.z\r\n\r\n\t\t\t\tthis.rotate(angle);\r\n\r\n\t\t\t\tthis.scale(flip ? -1 : 1, 1);\r\n\r\n\t\t\t\tthis.translate(-graph.x, -graph.y);//reset rotation center\r\n\r\n\t\t\t\tthis.drawGraph(graph);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst px = (x - (flip ? -graph.x + graph.width : graph.x));\r\n\t\t\t\tconst py = (y - graph.y);\r\n\r\n\t\t\t\tconst cx = graph.width * 0.5;\r\n\t\t\t\tconst cy = graph.height * 0.5;\r\n\r\n\t\t\t\tthis.translate(px, py);//zorder ? graph.z\r\n\r\n\t\t\t\tthis.translate(cx, cy);//回転行列の中心 (rotationCenter)\r\n\t\t\t\tthis.rotate(angle);\r\n\r\n\t\t\t\tthis.scale(flip ? -1 : 1, 1);\r\n\r\n\t\t\t\tthis.translate(-cx, -cy);//reset rotation center\r\n\r\n\t\t\t\tthis.drawGraph(graph);\r\n\t\t\t}\r\n\t\t\t// {\r\n\t\t\t\t// this.ctx.beginPath();\r\n\t\t\t\t// this.ctx.moveTo(cx, cy);\r\n\t\t\t\t// this.ctx.lineTo(cx + 32, cy);\r\n\t\t\t\t// this.ctx.strokeStyle = \"red\";\r\n\t\t\t\t// this.ctx.stroke();\r\n\t\t\t\t\r\n\t\t\t\t// this.ctx.beginPath();\r\n\t\t\t\t// this.ctx.moveTo(cx, cy);\r\n\t\t\t\t// this.ctx.lineTo(cx, cy + 32);\r\n\t\t\t\t// this.ctx.strokeStyle = \"#0f0\";\r\n\t\t\t\t// this.ctx.stroke();\r\n\t\t\t// }\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\tthis.drawGraph2(graph, x - graph.x, y - graph.y);\r\n\t\t//}\r\n\t}\r\n\t/**\r\n\t * whit save/restore canvas\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\tdrawRotaGraph(graph, x, y, angle, flip) {\r\n\t\t//if (flip || angle > 0.001 || angle < -0.001) {\r\n\t\t\tthis.pushMatrix();\r\n\t\t\tthis._drawRotaGraph(graph, x, y, angle, flip);\r\n\t\t\tthis.popMatrix();\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\tthis.drawGraph2(graph, x - graph.x, y - graph.y);\r\n\t\t//}\r\n\t}\r\n\t/**\r\n\t * whitout save/restore canvas\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} clip\r\n\t * @param {boolean} flip\r\n\t */\r\n\t_drawRotaClipGraph(graph, x, y, angle, center, clip, flip) {\r\n\t\tconst orix = center.x;\r\n\t\tconst oriy = center.y;\r\n\r\n\t\tconst px = (x - (flip ? -orix + clip.width : orix));\r\n\t\tconst py = (y - oriy);\r\n\r\n\t\tconst cx = clip.width * 0.5;\r\n\t\tconst cy = clip.height * 0.5;\r\n\r\n\t\tthis.translate(px, py);//zorder ? graph.z\r\n\r\n\t\tthis.translate(cx, cy);//回転行列の中心 (rotationCenter)\r\n\t\tthis.rotate(angle);\r\n\r\n\t\tthis.scale(flip ? -1 : 1, 1);\r\n\r\n\t\tthis.translate(-cx, -cy);//reset rotation center\r\n\r\n\t\tthis._drawImage(graph, clip.x, clip.y, clip.width, clip.height, 0, 0, clip.width, clip.height);\r\n\t}\r\n\t/**\r\n\t * whit save/restore canvas\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} clip\r\n\t * @param {boolean} flip\r\n\t */\r\n\tdrawRotaClipGraph(graph, x, y, angle, center, clip, flip) {\r\n\t\tthis.pushMatrix();\r\n\t\tthis._drawRotaClipGraph(graph, x, y, angle, center, clip, flip);\r\n\t\tthis.popMatrix();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {ColorRGB} color\r\n\t */\r\n\tdrawColoredGraph(graph, x, y, color) {//destination\r\n\t\tif (graph.isLoaded()) {\r\n\t\t\tif (_experimental_particle) {\r\n\t\t\t\tthis.ctx.filter = color.toFilter();\r\n\t\t\t\tthis.ctx.drawImage(graph.texture, x - graph.x, y - graph.y);\r\n\t\t\t\tthis.ctx.filter = \"none\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst _ctx = this._ctx2;\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = \"copy\";\r\n\t\t\t\t_ctx.drawImage(graph.texture, 0, 0);\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = \"darken\";\r\n\t\t\t\t_ctx.fillStyle = color.toString();\r\n\t\t\t\t_ctx.beginPath();\r\n\t\t\t\t//_ctx.arc(graph.width / 2, graph.width / 2, graph.width / 2, 0, Math.PI * 2);\r\n\t\t\t\t_ctx.rect(0, 0, graph.width, graph.width);\r\n\t\t\t\t_ctx.fill();\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = \"destination-atop\";\r\n\t\t\t\t_ctx.drawImage(graph.texture, 0, 0);\r\n\r\n\t\t\t\tthis.ctx.drawImage(this._canvas2, x - graph.x, y - graph.y);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} scaleX\r\n\t * @param {number} scaleY\r\n\t * @param {ColorRGB} color\r\n\t */\r\n\tdrawColoredGraph2(graph, x, y, scaleX, scaleY, color) {//destination\r\n\t\tif (graph.isLoaded()) {\r\n\t\t\tconst width = graph.width;\r\n\t\t\tconst height = graph.height;\r\n\t\t\tconst swidth = width * scaleX;\r\n\t\t\tconst sheight = height * scaleY;\r\n\r\n\t\t\tif (_experimental_particle) {\r\n\t\t\t\tthis.ctx.filter = color.toFilter();\r\n\t\t\t\tthis.ctx.drawImage(graph.texture, 0, 0, width, height, x - graph.x, y - graph.y, swidth, sheight);\r\n\t\t\t\tthis.ctx.filter = \"none\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst _ctx = this._ctx2;\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = \"copy\";\r\n\t\t\t\t_ctx.drawImage(graph.texture, 0, 0, swidth, swidth);\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = \"darken\";\r\n\t\t\t\t_ctx.fillStyle = color.toString();\r\n\t\t\t\t_ctx.beginPath();\r\n\t\t\t\t//_ctx.arc(graph.width / 2, graph.height / 2, graph.width / 2, 0, Math.PI * 2);\r\n\t\t\t\t_ctx.rect(0, 0, swidth, swidth);\r\n\t\t\t\t_ctx.fill();\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = \"destination-atop\";\r\n\t\t\t\t_ctx.drawImage(graph.texture, 0, 0, swidth, swidth);\r\n\r\n\t\t\t\tthis.ctx.drawImage(this._canvas2, 0, 0, swidth, sheight, x - graph.x, y - graph.y, swidth, sheight);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { Engine } from \"./Canvas2DRenderer.js\";\r\n//import { Engine } from \"./WebGLRenderer.js\";\r\n\r\nexport const engine = new Engine();\r\n\r\nwindow.$engine = engine;\r\n\r\n/**\r\n * @type {IGraph}\r\n */\r\nexport const Graph = engine.Graph;\r\n\r\n\r\nengine.init(\"glcanvas\");\r\n\r\nif (SSAnim) {\r\n\tif (engine.ctx) {\r\n\t\tSSAnim.SetRenderingContext(engine.ctx);\r\n\t}\r\n}\r\n","﻿\r\nimport { CharacterRenderConfig, ItemCategoryInfo, ResourceManager } from '../../../public/javascripts/resource.js';\r\nimport { AddInitTask } from \"../../init.js\";\r\nimport { Animation } from \"../Animation\";\r\nimport { engine } from '../Engine.js';\r\nimport { IRenderer, ImageFilter } from '../IRenderer.js';\r\nimport { Sprite, SpriteBase } from '../Sprite.js';\r\nimport { Rectangle, Vec2 } from '../math.js';\r\nimport { ActionAnimation } from './CharacterActionAnimation.js';\r\n\r\n\r\nlet zMap = {};\r\nlet sMap = {};\r\n\r\n\r\n/**\r\n * 00026623.blink[1].brow has bug\r\n * 'Weapon/01702694' is Longcoat(islot)\r\n * how to use cash-weapon (ex: 01702504|0152)\r\n */\r\n\r\n/**\r\n * multi-image-sprite\r\n */\r\nclass FragmentTexture extends SpriteBase {\r\n\t/**\r\n\t * @param {wzproperty} raw\r\n\t * @param {string} full_path\r\n\t */\r\n\tconstructor(raw, full_path) {\r\n\t\tsuper(raw, full_path);\r\n\r\n\t\tif (this._raw.origin) {\r\n\t\t\tthis._raw.origin.__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\tfor (let i in this._raw.map) {\r\n\t\t\tthis._raw.map[i].__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * if this.relative == null then remove this\r\n\t\t * @type {Vec2}\r\n\t\t */\r\n\t\tthis.relative = new Vec2(0, 0);\r\n\t\t\r\n\t\tthis.calcRelative = this._calcRelative;//this._getRelativeFunction();//this.__old_calcRelative;//\r\n\r\n\t\tthis.filter = new ImageFilter();\r\n\t\tthis.opacity = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.visible = true;\r\n\r\n\r\n\t\t/** @type {string} - extra property. */\r\n\t\tthis._slot = null;\r\n\r\n\t\t/** @type {string} - extra property. 在哪個部位 */\r\n\t\tthis._place = null;\r\n\r\n\t\t/** @type {string} - extra property: _slot itemId, _place, _raw.z z */\r\n\t\tthis.classList = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget z() {\r\n\t\treturn zMap[this._raw.z] || 1;\r\n\t}\r\n\tset z(not_value) {\r\n\t\tconsole.error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\tdebugger;\r\n\t\treturn this.z;\r\n\t}\r\n\tset order(not_value) {\r\n\t\tdebugger;\r\n\t\tconsole.error(new TypeError(\"Not implement\"));\r\n\t}\r\n\r\n\t/** @returns {Vec2} */\r\n\tget origin() { return this._raw.origin || Vec2.empty; }\r\n\r\n\tisHasAnchor() { return !!this._raw.map; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget brow() { return this._raw.map.brow; }\r\n\tisAnchorBrow() { return !!this._raw.map.brow; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget neck() { return this._raw.map.neck; }\r\n\tisAnchorNeck() { return !!this._raw.map.neck; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget navel() { return this._raw.map.navel; }\r\n\tisAnchorNavel() { return !!this._raw.map.navel; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget hand() { return this._raw.map.hand; }\r\n\tisAnchorHand() { return !!this._raw.map.hand; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget handMove() { return this._raw.map.handMove; }\r\n\tisAnchorHandMove() { return !!this._raw.map.handMove; }\r\n\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earBelowHead() { return this._raw.map.earBelowHead; }\r\n\tisAnchor_EarBelowHead() { return !!this._raw.map.earBelowHead; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earOverHead() { return this._raw.map.earOverHead; }\r\n\tisAnchor_EarOverHead() { return !!this._raw.map.earOverHead; }\r\n\r\n\t/**\r\n\t * @param {FragmentTexture} that - this\r\n\t * @param {FragmentTexture} base - parent\r\n\t * @param {string} anchor - anchor name\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_anchor(that, base, anchor) {\r\n\t\treturn base[anchor].minus(that[anchor]).plus(base.origin.minus(that.origin));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative(chara, body, head) {\r\n\t\tthis.calcRelative = this._getRelativeFunction(chara);\r\n\t\treturn this.calcRelative(chara, body, head);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getRelativeFunction(chara) {\r\n\t\tif (!this.isHasAnchor()) {\r\n\t\t\treturn this._calcRelativeEmpty;\r\n\t\t}\r\n\t\tif (this.isAnchorNeck()) {\r\n\t\t\treturn this._calcRelative_neck;\r\n\t\t}\r\n\t\tif (this.isAnchorBrow()) {\r\n\t\t\treturn this._calcRelative_brow;\r\n\t\t}\r\n\t\tif (this.isAnchorNavel()) {\r\n\t\t\tif (this == chara.slots.body) {\r\n\t\t\t\treturn this._getOrigin;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_navel;\r\n\t\t}\r\n\t\tif (this.isAnchorHand()) {\r\n\t\t\treturn this._calcRelative_hand;\r\n\t\t}\r\n\t\tif (this.isAnchorHandMove()) {\r\n\t\t\tif (this._url.lastIndexOf(\"lHand\") > 0) {\r\n\t\t\t\treturn this._calcRelative_handMove_lHand;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_handMove;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelativeEmpty(chara, body, head) {\r\n\t\treturn Vec2.empty;\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getOrigin(chara, body, head) {\r\n\t\treturn this.origin;\r\n\t}\r\n\t/**\r\n\t * neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_neck(chara, body, head) {\r\n\t\treturn this._anchor(this, body, \"neck\").minus(body.origin);\r\n\t}\r\n\t/**\r\n\t * brow on the head & head on the neck & neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_brow(chara, body, head) {\r\n\t\treturn this._anchor(this, head, \"brow\").plus(this._anchor(head, body, \"neck\")).minus(body.origin);//anchor_brow+(-7,-33)\r\n\t}\r\n\t/**\r\n\t * this is origin point, no anchor\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_navel(chara, body, head) {\r\n\t\treturn body.navel.minus(this.navel).minus(this.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_hand(chara, body, head) {\r\n\t\tconst hand = chara.slots.body.fragments.arm.getTexture(chara);\r\n\t\tif (hand == null) {\r\n\t\t\treturn Vec2.empty.minus(this.hand).minus(this.origin).minus(body.origin);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this._anchor(this, hand, \"hand\").minus(this._anchor(body, hand, \"navel\")).minus(body.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove(chara, body, head) {\r\n\t\treturn Vec2.empty.minus(this.origin).minus(this.handMove);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove_lHand(chara, body, head) {\r\n\t\treturn Vec2.empty.minus(this.origin);\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tif (chara.slots.body && chara.slots.head) {\r\n\t\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\t\tconst head = chara.slots.head.fragments.head.getTexture(chara);\r\n\t\t\tif (body && head) {\r\n\t\t\t\tthis.relative = this.calcRelative(chara, body, head);\r\n\r\n\t\t\t\tconst tamingMob = chara.slots.tamingMob;\r\n\t\t\t\tif (tamingMob) {\r\n\t\t\t\t\tthis.relative = tamingMob.adj_pos(this.relative, body, chara);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!(this.relative && this.visible)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass BodyFragmentTexture extends FragmentTexture {\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tsuper.update(chara);\r\n\t\tthis.visible = !chara.hideBody;\r\n\t}\r\n}\r\n\r\nclass HairFragmentTexture extends FragmentTexture {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph2 = null;\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph3 = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tif (chara.slots.body && chara.slots.head) {\r\n\t\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\t\tconst head = chara.slots.head.fragments.head.getTexture(chara);\r\n\t\t\tif (body && head) {\r\n\t\t\t\tthis.relative = this.calcRelative(chara, body, head);\r\n\r\n\t\t\t\tconst tamingMob = chara.slots.tamingMob;\r\n\t\t\t\tif (tamingMob) {\r\n\t\t\t\t\tthis.relative = tamingMob.adj_pos(this.relative, body, chara);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.graph2) {\r\n\t\t\t\t\tthis.graph2.relative = this.relative;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.graph3) {\r\n\t\t\t\t\tthis.graph3.relative = this.relative;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!this.relative) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\trenderer.globalAlpha = this.opacity || 1;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\tthis._render(renderer);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\tthis._render(renderer);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n\t_render(renderer) {\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.drawGraph2(this, x, y);\r\n\r\n\t\tif (this.graph2 && this.graph2.opacity) {//color2\r\n\t\t\trenderer.globalAlpha = this.graph2.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph2, x, y);\r\n\t\t}\r\n\t\tif (this.graph3 && this.graph3.opacity) {//color3\r\n\t\t\trenderer.globalAlpha = this.graph3.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph3, x, y);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nclass ItemEffectAnimation extends Animation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t\t\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\t//this._url = this._url;\r\n\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"pos\", 1);\r\n\r\n\t\tsuper.load();\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} actionExceptRotation\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\trender(renderer, actionExceptRotation, angle, flip) {\r\n\t\tif (actionExceptRotation) {\r\n\t\t\tthis.draw(renderer, 0, 0, -angle, flip);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst oy = -this.texture.height * 0.25;\r\n\t\t\tthis.draw(renderer, 0, oy, 0, flip);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\t/data/Effect/ItemEff/1102918\r\nclass ItemEffect {\r\n\tconstructor() {\r\n\t\tthis._url = null;\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {{[animationName:string]:ItemEffectAnimation}} */\r\n\t\tthis.animation = {};\r\n\r\n\t\tthis.action = null;\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\r\n\t\tthis.fixed = 0;\r\n\t\tthis.z = -2;\r\n\t\tthis.action = 1;\r\n\t\tthis.actionExceptRotation = 0;\r\n\t\t\r\n\t\tthis.enable = true;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\ttry {\r\n\t\t\t/** @type {Set<string>} */\r\n\t\t\tlet itemEffectList = ItemEffect._list;\r\n\r\n\t\t\t/** @type {string[]} */\r\n\t\t\tlet raw = await $get.list(\"/Effect/ItemEff\");\r\n\r\n\t\t\titemEffectList.clear();\r\n\r\n\t\t\traw.forEach(id => {\r\n\t\t\t\titemEffectList.add(parseInt(id, 10));\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<ItemEffect>}\r\n\t */\r\n\tstatic async load(equipID) {\r\n\t\tconst id = Number(equipID);\r\n\r\n\t\tif (ItemEffect._list.has(id)) {\r\n\t\t\tlet eff = new ItemEffect();\r\n\t\t\tawait eff.load(equipID);\r\n\t\t\treturn eff;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tasync load(equipID) {\r\n\t\tconst id = Number(equipID);\r\n\t\tconst url = `/Effect/ItemEff/${id}/effect`;\r\n\t\tlet raw;\r\n\r\n\t\ttry {\r\n\t\t\traw = await $get.data(url);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\r\n\t\tif (raw) {\r\n\t\t\treturn this._load(equipID, url, raw);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t * @param {string} action\r\n\t */\r\n\tupdate(stamp, action) {\r\n\t\tif (action in this.animation) {\r\n\t\t\tthis.action = action;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.action = \"default\";\r\n\t\t}\r\n\r\n\t\tif (this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterRenderer} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (this.animation && this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].render(renderer, this.actionExceptRotation, chara.angle, chara.front > 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} equipID\r\n\t * @param {object} raw_data\r\n\t */\r\n\t_load(equipID, url, raw) {\r\n\t\tthis.id = equipID;\r\n\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tthis.__construct();\r\n\t}\r\n\t__construct() {\r\n\t\tthis.__getAttr(\"fixed\", 0);\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"action\", 1);\r\n\t\tthis.__getAttr(\"actionExceptRotation\", 0);\r\n\r\n\t\tfor (let i in this._raw) {\r\n\t\t\tif (this._raw[i] && typeof this._raw[i] == \"object\" && '0' in this._raw[i]) {//animation has frames\r\n\t\t\t\tthis.animation[i] = new ItemEffectAnimation(this._raw[i], [this._url, i].join(\"/\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n}\r\n/** @type {Set<string>} */\r\nItemEffect._list = new Set();\r\n\r\nclass CharacterFragmentBase {\r\n\t/**\r\n\t * @param {{[action:string]: FragmentTexture[]}} textures\r\n\t */\r\n\tconstructor(textures) {\r\n\t\t/** @type {{[action:string]: FragmentTexture[]}} - textures[action:string][frame:number] */\r\n\t\tthis.textures = textures;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterBodyFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.action_frame);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.action in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet ft = this.textures[chara.action][frame];//if frame not exist then return undefined\r\n\t\treturn ft;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tif (this.textures[chara.action]) {\r\n\t\t\treturn this.textures[chara.action].length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterFaceFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.emotion_frame);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.emotion in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet ft = this.textures[chara.emotion][frame];\r\n\t\treturn ft;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tif (this.textures[chara.emotion]) {\r\n\t\t\treturn this.textures[chara.emotion].length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterTamingMobFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara._action_frame);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara._ride_action in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet ft = this.textures[chara._ride_action][frame];//if frame not exist then return undefined\r\n\t\treturn ft;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tif (this.textures[chara._ride_action]) {\r\n\t\t\treturn this.textures[chara._ride_action].length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\nclass EquipImageFilter {\r\n\t/**\r\n\t * @param {CharacterAppearanceBase} equip\r\n\t */\r\n\tconstructor(equip) {\r\n\t\tthis.equip = equip;\r\n\t}\r\n\r\n\tget hue() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.hue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset hue(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget sat() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.sat;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset sat(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.sat = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget bri() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset bri(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.bri = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget contrast() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.contrast;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset contrast(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.contrast = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\thue: this.hue,\r\n\t\t\tsat: this.sat,\r\n\t\t\tbri: this.bri,\r\n\t\t\tcontrast: this.contrast,\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * @interface\r\n */\r\nclass ICharacterAppearanceBase {\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tisLoaded() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_unload() {\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\ttoJSON() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\treturn {\r\n\t\t\tid: -1,//invalid ID\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * ??\r\n */\r\nclass _CharacterAppearanceBaseSlotLink extends ICharacterAppearanceBase {\r\n\tconstructor(slot_link) {\r\n\t\tsuper();\r\n\t\tthis.slot_link = slot_link;//??\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: slot_link,//??\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * character loader\r\n */\r\nclass CharacterAppearanceBase extends ICharacterAppearanceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\t\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\t//this._url = null;\r\n\t\t\t\r\n\t\t/** @type {ItemEffect} */\r\n\t\tthis.effect = null;\r\n\r\n\t\t/**\r\n\t\t * @type {{[place:string]:CharacterFragmentBase}}\r\n\t\t */\r\n\t\tthis.fragments = null;\r\n\r\n\t\tthis._onload = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tthis.categoryInfo = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.slot_order = 0;\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.islot = {};\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.vslot = {};\r\n\r\n\t\tthis.filter = new EquipImageFilter(this);\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: this.id,\r\n\t\t\tfilter: this.filter.toJSON(),\r\n\t\t};\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn this.fragments != null;\r\n\t}\r\n\r\n\t/** @type {function(CharacterAppearanceBase):void} */\r\n\tget _onload() {\r\n\t\treturn this.__onload;\r\n\t}\r\n\tset _onload(func) {\r\n\t\tthis.__onload = func;\r\n\t\tif (this.isLoaded()) {\r\n\t\t\tthis.__onload.call(this, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {void} use_category - no use\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tlet raw;\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.categoryInfo = cateInfo;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (ResourceManager.isEquipExist(id, cateInfo)) {\r\n\t\t\t\traw = await ItemCategoryInfo.getItem(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!raw && load_extern_item_data) {\r\n\t\t\t\traw = await load_extern_item_data(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tthis.__load_slot();\r\n\r\n\t\tthis.__load_fragments();\r\n\r\n\t\tif (this._onload) {\r\n\t\t\tthis._onload.call(this, this);\r\n\t\t}\r\n\r\n\t\t//// if not body, head, face, hair then try load effect\r\n\t\t//if (id >= \"00050000\") {\r\n\t\t\t// load if exist\r\n\t\t\tItemEffect.load(this.id).then(a => this.effect = a);//01102918\t//01102915\r\n\t\t//}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tconst FragmentConstructor = this.FragmentConstructor;\r\n\r\n\t\t//Object.keys(this._raw_textures).map(k => { return '0' in this._raw_textures[k]; })\r\n\r\n\t\tlet action_list = Object.keys(this._raw_textures);\r\n\r\n\t\tlet textures = {};\r\n\t\tfor (let action of action_list) {\r\n\t\t\tif (typeof this._raw_textures[action] == \"object\" && \"0\" in this._raw_textures[action]) {\r\n\t\t\t\tlet _url = this._base_path + action;\r\n\r\n\t\t\t\ttextures[action] = this.__load_frame_textures(this._raw_textures[action], _url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragment_textures = {};\r\n\t\tfor (let action in textures) {\r\n\t\t\tfor (let frame in textures[action]) {\r\n\t\t\t\tfor (let place in textures[action][frame]) {\r\n\t\t\t\t\tif (!(place in fragment_textures)) {\r\n\t\t\t\t\t\tfragment_textures[place] = {};\r\n\t\t\t\t\t\t//fragment_textures[place].visible = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!(action in fragment_textures[place])) {\r\n\t\t\t\t\t\tfragment_textures[place][action] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfragment_textures[place][action][frame] = textures[action][frame][place];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragments = {};\r\n\t\tfor (let frag in fragment_textures) {\r\n\t\t\tfragments[frag] = new FragmentConstructor(fragment_textures[frag]);\r\n\t\t}\r\n\t\tthis.fragments = fragments;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {{[place:string]:FragmentTexture}[]} - array - textures[frame][place]\r\n\t */\r\n\t__load_frame_textures(_raw, _url) {\r\n\t\tlet textures = [];\r\n\t\tfor (let frame = 0; frame in _raw; ++frame) {\r\n\t\t\tlet url = `${_url}/${frame}`;\r\n\t\t\ttextures[frame] = this.__load_place_textures(_raw[frame], url);\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {{[place:string]:FragmentTexture}} - object - textures[place]\r\n\t */\r\n\t__load_place_textures(_raw, _url) {\r\n\t\tlet textures = {};\r\n\t\tfor (let place in _raw) {\r\n\t\t\tlet path = `${_url}/${place}`;\r\n\t\t\tlet raw = _raw[place];\r\n\r\n\t\t\tif (raw) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tconst FragmentTextureConstructor = this.FragmentTextureConstructor;\r\n\t\t\t\tlet ft;\r\n\t\t\t\tif (raw[\"\"] == \"\") {\r\n\t\t\t\t\tft._url = path;\r\n\t\t\t\t\t//ft._url = path;\r\n\t\t\t\t\ttextures[place] = ft\r\n\t\t\t\t}\r\n\t\t\t\telse if (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\tft = new FragmentTextureConstructor(raw);\r\n\t\t\t\t\t//ft._url = raw[\"\"];\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\telse if (place == \"hairShade\") {\r\n\t\t\t\t\tft = new FragmentTextureConstructor(raw[0]);\r\n\t\t\t\t\t//ft._url = path + \"/0\";\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tft._slot = this.categoryInfo.slot;\r\n\t\t\t\t\tft._place = place;\r\n\r\n\t\t\t\t\tft.classList = [\r\n\t\t\t\t\t\tft._slot,\r\n\t\t\t\t\t\t\"item\" + this.id,\r\n\t\t\t\t\t\tft._place,\r\n\t\t\t\t\t\tft._raw.z,\r\n\t\t\t\t\t\t'z' + ft.z\r\n\t\t\t\t\t].join(' ');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\t__load_slot() {\r\n\t\tif (!this._raw.info.islot) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet islots = this._raw.info.islot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in islots) {\r\n\t\t\tconst slot = islots[i];\r\n\t\t\tconst slot_order = zMap[slot];\r\n\t\t\tthis.islot[slot] = slot_order;\r\n\t\t\t\t\r\n\t\t\tif (slot_order > this.slot_order) {//this.slot_order = Math.max(this.slot_order, slot_order);\r\n\t\t\t\tthis.slot_order = slot_order;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet vslots = this._raw.info.vslot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in vslots) {\r\n\t\t\tconst slot = vslots[i];\r\n\t\t\tthis.vslot[slot] = slot;\r\n\t\t}\r\n\t}\r\n\r\n\t_unload() {\r\n\t\tthis.fragments = null;\r\n\t\tthis.effect == null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget opacity() {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} opacity\r\n\t */\r\n\tset opacity(opacity) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.opacity = opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t */\r\n\tsetFilter(hue, sat, bri) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = hue;\r\n\t\t\t\t\t\tft.filter.sat = sat;\r\n\t\t\t\t\t\tft.filter.bri = bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get icon url\r\n\t * @see {@link ItemCategoryInfo.getIconUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconUrl() {\r\n\t\tconst icon = this._raw.info.icon;\r\n\t\tif (icon) {\r\n\t\t\treturn icon[\"\"];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t\treturn ItemCategoryInfo.getIconUrl(this.id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get iconRaw url\r\n\t * @see {@link ItemCategoryInfo.getIconRawUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconRawUrl() {\r\n\t\tconst iconRaw = this._raw.info.iconRaw;\r\n\t\tif (iconRaw) {\r\n\t\t\treturn iconRaw[\"\"];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t\treturn ItemCategoryInfo.getIconRawUrl(this.id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @type {string}\r\n\t */\r\n\tget _animation_type() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @returns {typeof CharacterFragmentBase}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @returns {typeof FragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {{[actions:string]:{[\"0\"]:Sprite,[frames:string]:Sprite}}} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw;\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass CharacterAppearance extends CharacterAppearanceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"face\" || k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn chara.slots.body.fragments.body.textures[chara.action].length;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tconst d = this._raw[chara.action][chara.action_frame].delay;\r\n\t\tif (Number.isSafeInteger(d)) {\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 120;\r\n\t}\r\n}\r\n\r\nclass CharacterBody extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof BodyFragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn BodyFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterEquip extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof BodyFragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn BodyFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipCashWeapon extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.use_category = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {string} use_category - cash-weapon as [category]\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tif (!use_category && use_category != \"\") {\r\n\t\t\tthrow new TypeError(\"use_category\");\r\n\t\t}\r\n\r\n\t\tthis.use_category = use_category.slice(2, 4);\r\n\r\n\t\treturn super.load(url, id, cateInfo);\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {object} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw[this.use_category];\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url + this.use_category;\r\n\t}\r\n}\r\n\r\n\r\nclass CharacterHeadBase extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof FragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn FragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterHead extends CharacterHeadBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.elfEarFragment = null;\r\n\t\tthis.lefEarFragment = null;\r\n\t\tthis.highlefEarFragment = null;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tsuper.__load_fragments()\r\n\t\t\r\n\t\tif (this.fragments) {\r\n\t\t\tif (this.fragments.ear) {\r\n\t\t\t\tthis.elfEarFragment = this.fragments.ear;\r\n\t\t\t\tdelete this.fragments.ear;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.lefEar) {\r\n\t\t\t\tthis.lefEarFragment = this.fragments.lefEar;\r\n\t\t\t\tdelete this.fragments.lefEar;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.highlefEar) {\r\n\t\t\t\tthis.highlefEarFragment = this.fragments.highlefEar;\r\n\t\t\t\tdelete this.fragments.highlefEar;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget elfEar() {\r\n\t\treturn this.fragments.ear != null;\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (!this.elfEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.ear = this.elfEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.ear;\r\n\t\t}\r\n\t}\r\n\r\n\tget lefEar() {\r\n\t\treturn this.fragments.lefEar != null;\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (!this.lefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.lefEar = this.lefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.lefEar;\r\n\t\t}\r\n\t}\r\n\r\n\tget highlefEar() {\r\n\t\treturn this.fragments.highlefEar != null;\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (!this.highlefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.highlefEar = this.highlefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.highlefEar;\r\n\t\t}\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterHair extends CharacterHeadBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * hair color mix\r\n\t * @override\r\n\t * @returns {typeof HairFragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn HairFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterFaceBase extends CharacterHeadBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn chara.slots.face.fragments.face.textures[chara.emotion].length;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tconst d = this._raw[chara.emotion][chara.emotion_frame].delay;\r\n\t\tif (d != null) {//!isNaN(d) && isFinite(d)\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n}\r\nclass CharacterFace extends CharacterFaceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"emotion\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterFaceFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterFaceFragment;\r\n\t}\r\n}\r\nclass CharacterFaceAcc extends CharacterFaceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"emotion\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterFaceFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterFaceFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterTamingMob extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget type() {\r\n\t\treturn this._raw.info.tamingMob;\r\n\t}\r\n\r\n\tget actionMap() {\r\n\t\treturn this._raw.characterAction;\r\n\t}\r\n\r\n\tget emotionMap() {\r\n\t\treturn this._raw.characterEmotion;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} relative\r\n\t * @param {FragmentTexture} body\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\tadj_pos(relative, body, chara) {\r\n\t\tconst frag = this.fragments[0];//default\r\n\t\tif (frag) {\r\n\t\t\tconst tm = frag.getTexture(chara);\r\n\t\t\tif (tm) {\r\n\t\t\t\treturn relative.plus(tm.navel.minus(body.navel));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn relative;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn chara.slots.body.fragments.body.textures[chara._ride_action].length;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tconst d = Math.trunc(this._raw[chara._ride_action][chara.action_frame].delay);//?? _ride_action_frame => action_frame\r\n\t\tif (Number.isSafeInteger(d)) {\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 120;\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"_ride_action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterTamingMobFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterTamingMobFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof FragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn FragmentTexture;\r\n\t}\r\n}\r\n\r\n\r\nItemCategoryInfo._info['0000'].FragmentType = CharacterBody;\t\t//\tbody\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0001'].FragmentType = CharacterHead;\t\t//\telfEar\t\t\t-> CharacterHeadBase -> CharacterHead\r\nItemCategoryInfo._info['0002'].FragmentType = CharacterFace;\t\t//\tFace\t\t\t-> CharacterHeadBase -> CharacterFaceBase -> CharacterFace\r\nItemCategoryInfo._info['0003'].FragmentType = CharacterHair;\t\t//\tHair\t\t\t-> CharacterHeadBase -> CharacterHair\r\nItemCategoryInfo._info['0004'].FragmentType = CharacterHair;\t\t//\tHair\t\t\t-> CharacterHeadBase -> CharacterHair\r\n\r\nItemCategoryInfo._info['0100'].FragmentType = CharacterEquip;\t\t//\tCap\t\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0101'].FragmentType = CharacterFaceAcc;\t\t//\taccessoryFace\t-> CharacterHeadBase -> CharacterFaceBase -> CharacterFaceAcc\r\nItemCategoryInfo._info['0102'].FragmentType = CharacterEquip;\t\t//\taccessoryEyes\t-> CharacterEquip\r\nItemCategoryInfo._info['0103'].FragmentType = CharacterEquip;\t\t//\taccessoryEars\t-> CharacterEquip\r\nItemCategoryInfo._info['0104'].FragmentType = CharacterEquip;\t\t//\tCoat\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0105'].FragmentType = CharacterEquip;\t\t//\tLongcoat\t\t-> CharacterBody\r\nItemCategoryInfo._info['0106'].FragmentType = CharacterEquip;\t\t//\tPants\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0107'].FragmentType = CharacterEquip;\t\t//\tShoes\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0108'].FragmentType = CharacterEquip;\t\t//\tGlove\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0109'].FragmentType = CharacterEquip;\t\t//\tShield\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0110'].FragmentType = CharacterEquip;\t\t//\tCape\t\t\t-> CharacterBody\r\n\r\nItemCategoryInfo._info['0170'].FragmentType = CharacterEquipCashWeapon;\t//\tcash-weapon\t-> CharacterEquip\r\n\r\nItemCategoryInfo._info['019'].FragmentType = CharacterTamingMob;\t//\tTamingMob\t\t-> CharacterTamingMob\r\n\r\n\r\nclass CharacterSlots {\r\n\tconstructor() {\r\n\t\t\t\r\n\t\t/** @type {CharacterAppearanceBase[]} */\r\n\t\tthis._ordered_slot = [];\r\n\r\n\r\n\t\t/** @type {CharacterHair} */\r\n\t\tthis.hair = null;\r\n\t\t/** @type {CharacterHair} */\r\n\t\tthis._hair2 = null;\r\n\t\t/** @type {CharacterHair} 0~1.0 */\r\n\t\tthis._hairMix2 = null;\r\n\t\t/** @type {CharacterHair} */\r\n\t\tthis._hair3 = null;\r\n\t\t/** @type {CharacterHair} 0~1.0 */\r\n\t\tthis._hairMix3 = null;\r\n\r\n\r\n\t\t/** @type {CharacterEquipBody} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.head = null;\r\n\r\n\t\t/** @type {CharacterFace} */\r\n\t\tthis.face = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.hair = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 1 */\r\n\t\tthis.cap = null;\r\n\r\n\t\t/** @type {CharacterFace} - 2 */\r\n\t\tthis.accessoryFace = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 3*/\r\n\t\tthis.accessoryEyes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 4 */\r\n\t\tthis.accessoryEars = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.coat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.longcoat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 6 */\r\n\t\tthis.pants = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 7 */\r\n\t\tthis.shoes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 8 */\r\n\t\tthis.glove = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 9 */\r\n\t\tthis.cape = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 10 */\r\n\t\tthis.shield = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 11 */\r\n\t\tthis.weapon = null;\r\n\t\t\r\n\t\t/** @type {CharacterTamingMob} */\r\n\t\tthis.tamingMob = null;\r\n\t\t\r\n\t\t{\r\n\t\t\tObject.defineProperty(this, \"_ordered_slot\", {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: []\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tObject.defineProperty(this, \"_hair\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"hair\", {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this._hair;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tthis._hair = value;\r\n\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\tif (this._hair2 && this._hairMix2) {\r\n\t\t\t\t\t\t\tthis.hairColor2 = this.hairColor2;//force reload\r\n\t\t\t\t\t\t\tthis.hairMix2 = this.hairMix2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this._hair3 && this._hairMix3) {\r\n\t\t\t\t\t\t\tthis.hairColor3 = this.hairColor3;//force reload\r\n\t\t\t\t\t\t\tthis.hairMix3 = this.hairMix3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tObject.defineProperty(this, \"_hair\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair2\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix2\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair3\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix3\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tasync __loadColoredHair(color) {\r\n\t\tconst id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tconst url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\" : \"\") + id}`;\r\n\t\t\tconst use_category = undefined;\r\n\r\n\t\t\tlet hair = new CharacterHair();\r\n\r\n\t\t\tawait hair.load(url, id, cateInfo, use_category);\r\n\r\n\t\t\treturn hair;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget hairColor2() {\r\n\t\tif (this._hair2) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair2.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor2(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc2Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair2 || hc2Id != this._hair2.id) {\r\n\t\t\tif (hc2Id == this._hair.id) {\r\n\t\t\t\tthis._hair2 = null;\r\n\t\t\t\tthis.hairMix2 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair2 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair2.then(hair2 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair2;\r\n\r\n\t\t\t\t\tthis._hair2 = hair2;\r\n\t\t\t\t\tif (this._hair2 && this.hairMix2 != null) {\r\n\t\t\t\t\t\tthis.hairMix2 = this.hairMix2;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix2 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairMix2() {\r\n\t\treturn this._hairMix2;\r\n\t}\r\n\tset hairMix2(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair2).then(() => {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this._hair2;\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph2 = ft;\r\n\t\t\t\t\t\t\tori.graph2.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix2 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairColor3() {\r\n\t\tif (this._hair3) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair3.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor3(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc3Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair3 || this._hair3.id != hc3Id) {\r\n\t\t\tif (this._hair.id == hc3Id || this._hair2.id == hc3Id) {\r\n\t\t\t\tthis._hair3 = null;\r\n\t\t\t\tthis.hairMix3 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair3 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair3.then(hair3 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair3;\r\n\r\n\t\t\t\t\tthis._hair3 = hair3;\r\n\t\t\t\t\tif (this._hair3 && this.hairMix3 != null) {\r\n\t\t\t\t\t\tthis.hairMix3 = this.hairMix3;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix3 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hairMix3() {\r\n\t\treturn this._hairMix3;\r\n\t}\r\n\tset hairMix3(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair3).then(() => {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this._hair3;\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph3 = ft;\r\n\t\t\t\t\t\t\tori.graph3.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix3 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t//__order_slot() {\r\n\t//\tlet slot_map = new Map();\r\n\t//\r\n\t//\tfor (let i in this) {\r\n\t//\t\tlet equip = this[i];\r\n\t//\r\n\t//\t\tequip.cs\r\n\t//\t}\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {CharacterAppearanceBase} loadedEquip\r\n\t * @param {string} use_category - category which used of cash-weapon\r\n\t */\r\n\tasync _use(id, loadedEquip, use_category) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tlet url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\":\"\") + id}`;\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item;\r\n\r\n\t\t\tif (loadedEquip instanceof CharacterAppearanceBase) {\r\n\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\tdebugger;\r\n\t\t\t\titem = loadedEquip;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (loadedEquip) {\r\n\t\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tconst fragmentType = cateInfo.FragmentType || CharacterEquip;\r\n\r\n\t\t\t\titem = new fragmentType();\r\n\t\t\t}\r\n\t\t\t/** _use_loaded_equip */\r\n\t\t\tif (0) {\r\n\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t}\r\n\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t}\r\n\r\n\t\t\tlet is_exist = loadedEquip || await item.load(url, id, cateInfo, use_category);\r\n\t\t\tif (is_exist) {\r\n\t\t\t\t/** _use_loaded_equip */\r\n\t\t\t\tif (1) {\r\n\t\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.warn(\"item(\" + id + \") is not exist\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {boolean}\r\n\t */\r\n\t_unuse(id) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet cateInfo, equip;\r\n\r\n\t\tif (id instanceof CharacterAppearanceBase) {\r\n\t\t\tequip = id;\r\n\t\t\tid = equip.id;\r\n\t\t\tcateInfo = equip.categoryInfo;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcateInfo = ItemCategoryInfo.get(id);\r\n\t\t}\r\n\t\t\r\n\t\tconst slotName = cateInfo.slot;\r\n\r\n\t\tif (slotName != \"head\" && slotName != \"body\") {\r\n\t\t\tif (this[slotName] && this[slotName].id == id) {\r\n\t\t\t\tequip = this[slotName];\r\n\t\t\t\tfor (let slot in equip.islot) {\r\n\t\t\t\t\tlet order = equip.islot[slot];\r\n\t\t\t\t\tif (this._ordered_slot[order]) {\r\n\t\t\t\t\t\tthis._ordered_slot[order]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._ordered_slot[order];\r\n\t\t\t\t}\r\n\t\t\t\tthis[slotName] = null;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t_clear() {\r\n\t\t//this.body = null;\r\n\t\t//this.head = null;\r\n\t\tthis.face = null;\r\n\t\tthis.hair = null;\r\n\t\tthis.cap = null;\r\n\t\tthis.accessoryFace = null;\r\n\t\tthis.accessoryEyes = null;\r\n\t\tthis.accessoryEars = null;\r\n\t\tthis.coat = null;\r\n\t\tthis.longcoat = null;\r\n\t\tthis.pants = null;\r\n\t\tthis.shoes = null;\r\n\t\tthis.glove = null;\r\n\t\tthis.cape = null;\r\n\t\tthis.shield = null;\r\n\r\n\t\t//temp\r\n\t\tlet head = this.head;\r\n\t\tlet body = this.body;\r\n\r\n\t\t//clear\r\n\t\tthis._ordered_slot = [];\r\n\r\n\t\t//restore\r\n\t\tif (head) {\r\n\t\t\tthis._ordered_slot[head.slot_order] = head;\r\n\t\t}\r\n\t\tif (body) {\r\n\t\t\tthis._ordered_slot[body.slot_order] = body;\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify() {\r\n\t\tlet slots = [\"c\"];\r\n\t\t\t\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id + \"|\" + this.face.id);\r\n\t\tif (this.hair) {\r\n\t\t\tlet ha = [];\r\n\t\t\tha.push(this.hair.id);\r\n\t\t\tif (this.hairColor2 && this.hairMix2 > 0) ha.push(this.hairColor2 + \"%\" + Math.trunc(this.hairMix2 * 100));\r\n\t\t\tif (this.hairColor3 && this.hairMix3 > 0) ha.push(this.hairColor3 + \"%\" + Math.trunc(this.hairMix3 * 100));\r\n\t\t\tslots.push(ha.join(\"|\"));\r\n\t\t}\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots.join(\",\");\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\tlet slots = [];\r\n\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id);\r\n\t\tif (this.hair) slots.push(this.hair.id);\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots;\r\n\t}\r\n\r\n\t/**\r\n\t * returns: [face, hair, cap, ..., weapon]\r\n\t */\r\n\t*enumerate() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.hair) yield this.hair;\r\n\r\n\t\tyield* this.enumerate_equip();\r\n\t}\r\n\t*enumerate_equip() {\r\n\t\tif (this.cap) yield this.cap;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t\tif (this.accessoryEyes) yield this.accessoryEyes;\r\n\t\tif (this.accessoryEars) yield this.accessoryEars;\r\n\t\tif (this.coat) yield this.coat;\r\n\t\tif (this.longcoat) yield this.longcoat;\r\n\t\tif (this.pants) yield this.pants;\r\n\t\tif (this.shoes) yield this.shoes;\r\n\t\tif (this.glove) yield this.glove;\r\n\t\tif (this.shield) yield this.shield;\r\n\t\tif (this.cape) yield this.cape;\r\n\t\tif (this.weapon) yield this.weapon;\r\n\t}\r\n\t*enumerate_face() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t}\r\n}\r\n\r\nclass CharacterChangeLog {\r\n\tconstructor() {\r\n\t\t/** @type {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\t\tthis.ear = undefined;\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.useEquip = [];\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.unuseEquip = [];\r\n\t\t\r\n\t\t/** @type {string} - hair2 id */\r\n\t\tthis.hair2 = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.hairMix2 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hair3 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hairMix3 = undefined;\r\n\r\n\t\t/** @type {string} weapon => equip id */\r\n\t\tthis.weapon = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.ear = undefined;\r\n\t\tthis.useEquip = [];\r\n\t\tthis.unuseEquip = [];\r\n\t\tthis.hair2 = undefined;\r\n\t\tthis.hairMix2 = undefined;\r\n\t\t//this.hair3 = undefined;\r\n\t\t//this.hairMix3 = undefined;\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n}\r\n\r\nexport class CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tthis._$dirty = 0;//force update vue\r\n\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.job = null;\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.subJob = null;\r\n\r\n\r\n\t\t/** @type {ActionAnimation} */\r\n\t\tthis.actani = new ActionAnimation();\r\n\r\n\t\t/** @type {number} - animation speed rate */\r\n\t\tthis.speed = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.fixed_speed = false;\r\n\r\n\t\t/** @type {boolean} - pause animation */\r\n\t\tthis.pause = false;\r\n\r\n\r\n\t\tthis.hideBody = false;\r\n\r\n\t\tthis._ride_action = \"stand1\";\r\n\t\t\r\n\t\tthis._action = \"stand1\";\r\n\t\tthis._action_frame = 0;\r\n\r\n\t\tthis._emotion = \"blink\";\r\n\t\tthis._emotion_frame = 0;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis._emotion_frame_sequence = [0, 1, 2, 1];\r\n\r\n\t\t/** @type {CharacterSlots} */\r\n\t\tthis.slots = new CharacterSlots();\r\n\r\n\t\t/**\r\n\t\t * is require update render data\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.__require_update = true;\r\n\r\n\t\t/** @type {FragmentTexture[]} */\r\n\t\tthis.__frag_list = [];\r\n\r\n\t\t/** @type {CharacterChangeLog} **/\r\n\t\tthis.$$changeLog = new CharacterChangeLog();\r\n\t}\r\n\r\n\t_clone() {\r\n\t\talert(this.constructor.name + \"::_clone\");\r\n\r\n\t\t/** @type {CharacterAnimationBase} */\r\n\t\tlet nc = new this.constructor();//not must CharacterRender\r\n\t\tif (!nc) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnc.speed = 0;\r\n\r\n\t\tnc.x = this.x;\r\n\t\tnc.y = this.y;\r\n\t\tnc.angle = this.angle;\r\n\r\n\t\tnc.action = this.action;\r\n\t\tnc.action_frame = this.action_frame;\r\n\r\n\t\tnc.emotion = this._emotion;\r\n\t\tnc.emotion_frame = this.emotion_frame;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tnc.slots[i] = this.slots[i];//not need colne ?\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nc;\r\n\t}\r\n\t\t\r\n\t_waitFrameTexturesLoaded() {\r\n\t\tlet tasks = [];\r\n\t\tfor (let i in this.slots) {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\t\tlet frag = item.fragments[j];\r\n\t\t\t\t\tlet count = frag.getFrameCount(this);\r\n\t\t\t\t\tfor (let k = 0; k < count; ++k) {\r\n\t\t\t\t\t\tlet ft = frag.getFrameTexture(this, k);\r\n\t\t\t\t\t\tif (ft && !ft._isLoaded_or_doload()) {\r\n\t\t\t\t\t\t\ttasks.push(ft.$promise);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * init animation status\r\n\t */\r\n\tinitAnimation() {\r\n\t\t/** @type {string} */\r\n\t\tthis.action = \"stand1\";\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._action_frame = 0;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.emotion = \"blink\";\r\n\t\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_frame = 0;\r\n\t}\r\n\r\n\t/** @type {number} - 0~1 */\r\n\tgetSpeed() {\r\n\t\tif (this.pause) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.fixed_speed ? 1 : this.speed;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget elfEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.elfEar;\r\n\t\t}\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.elfEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget lefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar;\r\n\t\t}\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.lefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget highlefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.highlefEar;\r\n\t\t}\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.highlefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\tget ear() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar ? \"lef\" : (this.slots.head.elfEar ? \"elf\" : (this.slots.head.highlefEar ? \"highlef\" : \"human\"));\r\n\t\t}\r\n\t}\r\n\tset ear(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tif (value == \"elf\") {\r\n\t\t\t\tthis.slots.head.elfEar = true;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"lef\") {\r\n\t\t\t\tthis.slots.head.lefEar = true;\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"highlef\") {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = true;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = \"human\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.$$changeLog.ear = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget action() {\r\n\t\t//if (this.slots.tamingMob) {\r\n\t\t//\tconst actmap = this.slots.tamingMob.actionMap;\r\n\t\t//\tif (actmap) {\r\n\t\t//\t\treturn actmap[this._action];\r\n\t\t//\t}\r\n\t\t//\treturn \"sit\";//default\r\n\t\t//}\r\n\t\treturn this._action;\r\n\t}\r\n\tset action(act) {\r\n\t\tif (this.slots.tamingMob) {\r\n\t\t\tlet _act;\r\n\r\n\t\t\tthis._ride_action = act;\r\n\r\n\t\t\tif (this.slots.tamingMob.actionMap) {\r\n\t\t\t\t_act = this.slots.tamingMob.actionMap[act];\r\n\r\n\t\t\t\tif (_act == \"hideBody\") {\r\n\t\t\t\t\tthis.hideBody = true;\r\n\r\n\t\t\t\t\t//TODO: hideBody act=?\r\n\r\n\t\t\t\t\tthis._action = act;\r\n\t\t\t\t\tif (this.actani._action != act) {\r\n\t\t\t\t\t\tthis.actani.reload(act);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.__require_update |= true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.hideBody = false;\r\n\r\n\t\t\t\t\tthis._action = _act;\r\n\t\t\t\t\tif (this.actani._action != _act) {\r\n\t\t\t\t\t\tthis.actani.reload(_act);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.__require_update |= true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (act == \"rope\") {\r\n\t\t\t\t\tthis._action = \"rope\";//default\r\n\t\t\t\t}\r\n\t\t\t\telse if (act == \"ladder\") {\r\n\t\t\t\t\tthis._action = \"ladder\";//default\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._action = \"sit\";//default\r\n\t\t\t\t}\r\n\t\t\t\tif (this.actani._action != act) {\r\n\t\t\t\t\tthis.actani.reload(act);\r\n\t\t\t\t}\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.hideBody = false;\r\n\t\t\tthis._ride_action = null;\r\n\r\n\t\t\tif (this.actani._action != act && this.slots.body) {\r\n\t\t\t\tthis._action = act;\r\n\t\t\t\tthis.actani.reload(act);\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame() {\r\n\t\treturn this._action_frame;\r\n\t}\r\n\tset action_frame(value) {\r\n\t\tif (value === \"\") {//from $(\"input\")\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._action_frame = Number(value) | 0;\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._action_frame = value;\r\n\t\tthis.__require_update |= true;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.body) {\r\n\t\t\t\treturn this.slots.body.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget emotion() {\r\n\t\treturn this._emotion;\r\n\t}\r\n\tset emotion(emo) {\r\n\t\tif (this._emotion != emo && this.slots.face && this.slots.face.fragments.face.textures[emo]) {\r\n\t\t\tthis._emotion = emo;\r\n\t\t\tthis._emotion_frame = 0;\r\n\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\tthis._emotion_frame_sequence = [...circularSequence(this.emotion_frame_count)];\r\n\r\n\t\t\tthis.__require_update |= true;\r\n\t\t}\r\n\t}\r\n\r\n\t*emotion_frame_sequence_generator(length) {\r\n\t\tfor (; ;) {\r\n\t\t\t//TODO: random blink\r\n\t\t\tyield* circularSequence(length);\r\n\r\n\t\t\tfor (; Math.random() < 0.5;) {\r\n\t\t\t\tyield 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t/** @type {number} */\r\n\tget emotion_frame() {\r\n\t\tlet f = this._emotion_frame_sequence[this._emotion_frame % this._emotion_frame_sequence.length];\r\n\t\treturn f;\r\n\t}\r\n\tset emotion_frame(value) {\r\n\t\tif (value === \"\") {//from $(\"input\")\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._emotion_frame = Number(value) | 0;\r\n\t\t\t\tthis._emotion_time = 0;\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._emotion_frame = value;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis.__require_update |= true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} next\r\n\t */\r\n\t_get_emotion_next_frame(next) {\r\n\t\tlet f = this._emotion_frame + next;\r\n\t\tf = f < 0 ? (this._emotion_frame_sequence.length - 1) : (f % this._emotion_frame_sequence.length);\r\n\t\treturn this._emotion_frame_sequence[f];\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_time() {\r\n\t\treturn this._emotion_time;\r\n\t}\r\n\tset emotion_time(time) {\r\n\t\tif (this.emotion_frame_count) {\r\n\t\t\tif (time < this.emotion_delay) {\r\n\t\t\t\tthis._emotion_time = time;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\t\t++this._emotion_frame;\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget emotion_delay() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn this.slots.face.getDelay(this);\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.face) {\r\n\t\t\t\treturn this.slots.face.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp - 0 <= stamp < Infinity\r\n\t */\r\n\t_update(_stamp) {\r\n\t\tif (this.pause) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet stamp = _stamp * this.getSpeed();\r\n\t\t\r\n\t\tif (this.actani) {\r\n\t\t\tif (this.actani.isEnd() && this.actani.loop) {\r\n\t\t\t\tthis.actani.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.actani.update(stamp, this);\r\n\t\t}\r\n\r\n\t\tthis.emotion_time += _stamp;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet equip = this.slots[i];\r\n\t\t\tif (equip && equip.effect && equip.effect.enable) {\r\n\t\t\t\tequip.effect.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis._update(stamp);\r\n\t}\r\n\r\n\t__forceUpdate(stamp) {\r\n\t\tthis._$dirty = Math.random();\r\n\t\tthis._update(stamp | 0);\r\n\t\tthis.__update_frag_list();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} x\r\n\t * @param {number} y, \r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\t_draw(renderer, x, y, angle, flip) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\tif (this.__require_update) {\r\n\t\t\tthis.__update_frag_list();\r\n\t\t\tthis.__require_update = false;\r\n\t\t}\r\n\r\n\t\t//list.filter(a=>a&&a._raw.map).forEach(a=>{ for (let i in a._raw.map) { if (q[i]) { q[i].push(a); } else { q[i] = [a]; } } })\r\n\t\tthis.__draw_list(renderer, this.__frag_list, x, y, angle, flip);\r\n\r\n\t\trenderer.popGlobalAlpha();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {FragmentTexture[]} list\r\n\t */\r\n\t__draw_list(renderer, list, x, y, angle, flip) {\r\n\t\trenderer.pushMatrix();\r\n\r\n\t\trenderer.translate(x, y);\r\n\t\t\r\n\t\tif (0) {\r\n\t\t\tlet ctx = renderer.ctx;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(100, 0);\r\n\t\t\tctx.strokeStyle = \"#F00\";\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(0, 100);\r\n\t\t\tctx.strokeStyle = \"#0F0\";\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t\trenderer.rotate(window.m_a || angle);\r\n\r\n\t\tif (flip) {\r\n\t\t\trenderer.scale(-1, 1);\r\n\t\t}\r\n\t\t//{\r\n\t\t//\tlet ctx = renderer.ctx;\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(100, 0);\r\n\t\t//\tctx.strokeStyle = \"#F00\";\r\n\t\t//\tctx.stroke();\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(0, 100);\r\n\t\t//\tctx.strokeStyle = \"#0F0\";\r\n\t\t//\tctx.stroke();\r\n\t\t//}\r\n\r\n\t\t{\r\n\t\t\tfor (let i in this.slots) {\r\n\t\t\t\tlet equip = this.slots[i];\r\n\t\t\t\tif (equip && equip.effect) {\r\n\t\t\t\t\tequip.effect.render(renderer, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i in list) {\r\n\t\t\t\tlet ft = list[i];\r\n\t\t\t\tft.render(renderer, this);\r\n\t\t\t}\r\n\t\t}\r\n\t\trenderer.popMatrix();\r\n\t}\r\n\t__update_frag_list() {\r\n\t\tthis.__frag_list = [];\r\n\t\t\r\n\t\t/** @type {Array<CharacterAppearanceBase>[]} */\r\n\t\tlet slots = {};\r\n\t\t\r\n\t\tfor (let i = 2; i <= 3; ++i) {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this.slots[\"_hair\" + i];\r\n\t\t\t\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\t\tfor (let i in this.slots._ordered_slot) {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this.slots._ordered_slot[i];\r\n\t\t\t\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\t\t\r\n\t\t{//back\r\n\t\t\tlet is_back = false;\r\n\t\t\t\r\n\t\t\tfor (let i in slots) {\r\n\t\t\t\t/** @type {FragmentTexture[]} */\r\n\t\t\t\tlet fts = slots[i];\r\n\t\t\t\tfor (let j in fts) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = fts[j];\r\n\t\t\t\t\tif (is_back) {\r\n\t\t\t\t\t\tif (ft._place.startsWith(\"face\")) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ft._place.startsWith(\"backHair\")) {\r\n\t\t\t\t\t\tis_back = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t{\r\n\t\t\tlet ae = this.__frag_list[114];//HACK: Ae\r\n\t\t\tif (ae) {\r\n\t\t\t\tthis.__frag_list.push(ae);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._calcBoundBox();\r\n\t}\r\n\t/**\r\n\t * @param {Array<CharacterAppearanceBase>[]} slots\r\n\t * @param {CharacterAppearanceBase} item\r\n\t */\r\n\t__add_equip_to_frag_list(slots, item) {\r\n\t\t// if equip not use then value is mumber(slot_order) where this.slots._ordered_slot\r\n\t\tif (item == null) {\r\n\t\t\treturn;//debugger;\r\n\t\t}\r\n\t\telse if (item > 0) {// typeof item == 'number'; item != null && (item instanceof CharacterAppearanceBase || item >= 0)\r\n\t\t\treturn;//continue;\r\n\t\t}\r\n\r\n\t\t// init slots\r\n\t\tfor (let j in item.vslot) {\r\n\t\t\tlet slot = item.vslot[j];\r\n\t\t\tslots[slot] = [];\r\n\t\t}\r\n\r\n\t\tfor (let j in item.fragments) {//foreach equip place\r\n\t\t\tlet slot = sMap[j];\r\n\t\t\tif (slot != null) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (j == \"default\") {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tslot = item._raw.info.islot;\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//item.fragments[j].visible = true;\r\n\t\t}\r\n\t}\r\n\t/** @param {FragmentTexture} ft */\r\n\t__add_frag_to_list(ft) {\r\n\t\tft.update(this);\r\n\t\tthis.__frag_list[ft.z] = ft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * calc current frame bound box and restore result\r\n\t * @returns {Rectangle}\r\n\t */\r\n\t_calcBoundBox() {\r\n\t\tlet left = 0, top = 0, right = 0, bottom = 0;\r\n\r\n\t\tfor (let i in this.__frag_list) {\r\n\t\t\tlet ft = this.__frag_list[i];\r\n\t\t\tif (ft.texture && ft.relative) {\r\n\t\t\t\tlet x0 = ft.relative.x;\r\n\t\t\t\tlet y0 = ft.relative.y;\r\n\t\t\t\tlet x1 = x0 + ft.width;\r\n\t\t\t\tlet y1 = y0 + ft.height;\r\n\r\n\t\t\t\tleft = Math.min(left, x0);\r\n\t\t\t\ttop = Math.min(top, y0);\r\n\t\t\t\tright = Math.max(right, x1);\r\n\t\t\t\tbottom = Math.max(bottom, y1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._boundBox = new Rectangle(\r\n\t\t\tMath.trunc(left),\r\n\t\t\tMath.trunc(top),\r\n\t\t\tMath.trunc(right - left),\r\n\t\t\tMath.trunc(bottom - top)\r\n\t\t);\r\n\t\treturn this._boundBox;\r\n\t}\r\n\t\r\n\ttoJSON() {\r\n\t\tlet obj = {\r\n\t\t\thair2: this.slots._hair2.id,\r\n\t\t\thairMix2: this.slots.hairMix2,\r\n\t\t\tslots: this.slots.toJSON(),\r\n\t\t};\r\n\r\n\t\tif (this.slots.head.elfEar) {\r\n\t\t\tobj.ear = \"elf\";\r\n\t\t}\r\n\t\telse if (this.slots.head.lefEar) {\r\n\t\t\tobj.ear = \"lef\";\r\n\t\t}\r\n\t\telse if (this.slots.head.highlefEar) {\r\n\t\t\tobj.ear = \"highlef\";\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nexport class CharacterRenderer extends CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {number} - position x */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} - position y */\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {number} - where layer */\r\n\t\tthis.z = 5;\r\n\r\n\t\t/** @type {number} - translate x once frame */\r\n\t\tthis.tx = 0;\r\n\t\t/** @type {number} - translate y once frame */\r\n\t\tthis.ty = 0;\r\n\t\t\r\n\t\tthis.angle = 0;\r\n\t\tthis.front = -1;\r\n\r\n\t\t/** @type {Promise<void>[]} */\r\n\t\tthis.__load_task = [];\r\n\r\n\t\t/** @type {function(IRenderer)} */\r\n\t\tthis.render = function (renderer) {\r\n\t\t\t//not ready to render\r\n\t\t\t//if load then set load render = _render\r\n\t\t}\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis._boundBox = null;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\tlet result = await Promise.all([\r\n\t\t\t$get.data(\"/zmap\"),\r\n\t\t\t$get.data(\"/smap\"),\r\n\t\t\tItemEffect.Init(),\r\n\t\t\tActionAnimation.Init(),//action definition\r\n\t\t]);\r\n\t\t\r\n\t\tzMap = {};\r\n\t\tObject.keys(result[0]).reverse().forEach((k, i) => zMap[k] = i + 1);\r\n\r\n\t\tsMap = result[1];\r\n\t}\r\n\r\n\tload() {\r\n\t\t//load body and head for calc relative position\r\n\t\tthis.use(\"00002012\");\r\n\t\tthis.use(\"00012012\");\r\n\r\n\t\tlet $promise = Promise.all([...this.__load_task]);\r\n\t\t(function (that, $promise) {\r\n\t\t\t$promise.then(function (result) {\r\n\t\t\t\tthat.initAnimation();\r\n\t\t\t\tthat.render = that._render;\r\n\t\t\t});\r\n\t\t})(this, $promise);\r\n\r\n\t\treturn $promise;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.waitLoaded();\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_render(renderer) {\r\n\t\tconst x = Math.trunc(this.x + this.tx);\r\n\t\tconst y = Math.trunc(this.y + this.ty);\r\n\t\t\r\n\t\tthis._draw(renderer, x, y, this.angle, this.front > 0);\r\n\t\t\r\n\t\t//this.tx = 0;//auto clear\r\n\t\t//this.ty = 0;//auto clear\r\n\t}\r\n\t\r\n\t_setup_test() {\r\n\t\tthis.use(\"00026509\");\r\n\r\n\t\tthis.use(\"00044041\");\r\n\r\n\t\t//this.use(\"01022274\");\r\n\r\n\t\tthis.use(\"01053169\");\r\n\r\n\t\tthis.use(\"01071077\");\r\n\r\n\t\t//this.use(\"01102960\");\r\n\t}\r\n\r\n\t\r\n\tasync __synchronize(stamp) {\r\n\t\tthis.__forceUpdate(stamp);\r\n\t\r\n\t\tawait this.waitLoaded();\r\n\t\tawait this._waitFrameTexturesLoaded();\r\n\t}\r\n\tasync waitLoaded() {\r\n\t\tlet tasks = this.__load_task;\r\n\t\tif (tasks && tasks.length) {\r\n\t\t\tawait Promise.all(tasks).then(() => {\r\n\t\t\t\tthis.__load_task = [];\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t//isLoading() {\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {string} category - category of cash-weapon\r\n\t */\r\n\tasync use(id, category) {\r\n\t\tif (!category) {\r\n\t\t\tcategory = ItemCategoryInfo.getJobWeaponCategory(this.job);\r\n\t\t}\r\n\t\tconst item_type = id[0];\r\n\t\tswitch (item_type) {\r\n\t\t\tcase \"0\"://equip\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ItemCategoryInfo.isCashWeapon(id)) {\r\n\t\t\t\t\t\t//this.$$changeLog.weaponType = ss[1];/??\r\n\t\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\r\n\t\t\t\t\tlet task = this.slots._use(id, null, category);\r\n\t\t\t\t\tthis.__load_task.push(task);\r\n\t\t\t\t\tawait task;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (id.startsWith(\"019\")) {\r\n\t\t\t\t\t\tthis.action = this.action;//force update action\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.__update_frag_list();\r\n\t\t\t\t\tthis._calcBoundBox();\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tunuse(id) {\r\n\t\tdebugger;\r\n\t\tif (id[0] == \"0\") {//equip\r\n\t\t\tlet result = this.slots._unuse(id);\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.$$changeLog.unuseEquip.push(id);\r\n\t\t\t\tthis._calcBoundBox();\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t_parse(code) {\r\n\t\tif (!code) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet es = code.split(\",\");\r\n\t\tthis.slots._clear();\r\n\t\tes.forEach((v, i, a) => {\r\n\t\t\tif (v.indexOf(\"|\") >= 0) {\r\n\t\t\t\tconst ss = v.split(\"|\");\r\n\t\t\t\tconst cate = ItemCategoryInfo.get(ss[0]);\r\n\t\t\t\tlet id;\r\n\t\t\t\tif (cate.slot == \"face\") {\r\n\t\t\t\t\tid = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"hair\") {\r\n\t\t\t\t\tconst slots = this.slots;\r\n\t\t\t\t\tlet h2 = ss[1];\r\n\t\t\t\t\tlet h3 = ss[2];\r\n\t\t\t\t\t//\r\n\t\t\t\t\tid = ss[0];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id).then(() => {\r\n\t\t\t\t\t\tif (h2 && h2.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h2.split(\"%\");\r\n\t\t\t\t\t\t\tconst c2 = hc[0];\r\n\t\t\t\t\t\t\tconst m2 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair2 = c2;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix2 = m2;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor2 = c2;\r\n\t\t\t\t\t\t\tslots.hairMix2 = m2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (h3 && h3.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h3.split(\"%\");\r\n\t\t\t\t\t\t\tconst c3 = hc[0];\r\n\t\t\t\t\t\t\tconst m3 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair3 = c3;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix3 = m3;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor3 = hc[0];\r\n\t\t\t\t\t\t\tslots.hairMix4 = hc[1] / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"weapon\") {\r\n\t\t\t\t\tthis.$$changeLog.weaponType = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t\tthis.use.apply(this, ss, ss[1]);//this.use(ss[0], ss[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (Number.isFinite(parseInt(v, 10))) {\r\n\t\t\t\tthis.use(v);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @type {string} col\r\n\t */\r\n\tget hairColor() {\r\n\t\tif (this.slots.hair) {\r\n\t\t\treturn CharacterRenderConfig.getHairColor(this.slots.hair.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset hairColor(col) {\r\n\t\tif (this.slots.hair && col != this.hairColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorHairID(this.slots.hair.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} col\r\n\t */\r\n\tget faceColor() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn CharacterRenderConfig.getFaceColor(this.slots.face.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset faceColor(col) {\r\n\t\tif (this.slots.face && col != this.faceColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorFaceID(this.slots.face.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterChangeLog} changeLog\r\n\t */\r\n\tcommitChange(changeLog) {\r\n\t\tif (changeLog.ear) {\r\n\t\t\tthis.ear = changeLog.ear;\r\n\t\t}\r\n\r\n\t\tif (this.useEquip) {\r\n\t\t\tfor (let id of this.useEquip) {\r\n\t\t\t\tthis.use(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.unuseEquip) {\r\n\t\t\tfor (let id of this.unuseEquip) {\r\n\t\t\t\tthis.unuse(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair2 && changeLog.hairMix2) {\r\n\t\t\tthis.slots.hairColor2 = changeLog.hair2;\r\n\t\t\tthis.slots.hairMix2 = changeLog.hairMix2;\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair3 && changeLog.hairMix3) {\r\n\t\t\t//this.slots.hairColor3 = changeLog.hair3;\r\n\t\t\t//this.slots.hairMix3 = changeLog.hairMix3;\r\n\t\t}\r\n\t\t\r\n\t\tif (changeLog.weapon && changeLog.weaponType) {\r\n\t\t\tthis.use(changeLog.weapon, changeLog.weaponType);\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify(genCode) {\r\n\t\tlet result = this.slots._stringify();\r\n\t\tif (genCode) {\r\n\t\t\treturn `chara._parse('${result}')`;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_outlink_old() {\r\n\t\tif (this.slots.body && this.slots.body.id && this.slots.face && this.slots.face.id && this.action && this.emotion) {\r\n\t\t\tlet link = \"https://labs.maplestory.io/api/GMS/latest/character/center/\" + this.slots.body.id + \"/\";\r\n\t\t\tlet slots = [...this.slots.enumerate()].map(a => parseInt(a.id, 10));\r\n\r\n\t\t\tslots[0] = this.slots.face.id + \":\" + this.emotion;\r\n\r\n\t\t\tlink += slots.join(\",\");\r\n\r\n\t\t\tlink += \"/\" + this.action + \"?showears=\" + (this.elfEar ? \"true\" : \"false\");\r\n\r\n\t\t\tlink += \"&showLefEars=\" + (this.lefEar ? \"true\" : \"false\");\r\n\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\tconsole.log(\"character need body, face, action, emotion\");\r\n\t}\r\n\t\r\n\t_outlink(name) {\r\n\t\tconst animationName = this.action;\r\n\t\tconst frame = this.action_frame;\r\n\t\tconst slots = this.slots;\r\n\t\tconst itemList = JSON.stringify(makeItemList.call());\r\n\t\treturn encodeURI(\r\n\t\t\t\t\"https://maplestory.io/api/character/\" +\r\n\t\t\t\titemList.slice(1, itemList.length - 1) +    // not array\r\n\t\t\t\t\"/\" + animationName + \"/\" + frame + \"?\" +\r\n\t\t\t\t\"showears=\" + this.elfEar +\r\n\t\t\t\t\"&showLefEars=\" + this.lefEar +\r\n\t\t\t\t\"&resize=1\" +\r\n\t\t\t\t(name ? (\"&name=\" + name) : \"\") +\r\n\t\t\t\t\"&flipX=\" + Boolean(this.front > 0) +\r\n\t\t\t\t\"&bgColor=0,0,0,0\"\r\n\t\t\t\t);\r\n\t\tfunction makeItemList() {\r\n\t\t\treturn Object.values(slots).filter(a => a).map(transformItemData);\r\n\t\t}\r\n\t\tfunction transformItemData(item) {\r\n\t\t\tlet region, version;\r\n\t\t\tif (item._raw.info.__v) {\r\n\t\t\t\tconst m = item._raw.info.__v.toUpperCase().match(/([A-Z]*)([0-9]*)/);\r\n\t\t\t\tregion = m[1] == \"TWMS\" ? \"TMS\" : m[1];\r\n\t\t\t\tversion = \"latest\";//m[2];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tregion =\"TMS\";\r\n\t\t\t\tversion = \"latest\";\r\n\t\t\t}\r\n\t\t\tconst filter = item.filter;\r\n\t\t\treturn {\r\n\t\t\t\titemId:        Number(item.id),\r\n\t\t\t\tregion:        region,\r\n\t\t\t\tversion:       version,\r\n\t\t\t\thue:           filter.hue,\r\n\t\t\t\tsaturation:    strNum(filter.sat),\r\n\t\t\t\tbrightness:    strNum(filter.bri),\r\n\t\t\t\tcontrast:      strNum(filter.contrast),\r\n\t\t\t\talpha:         Number(item.opacity.toFixed(1)),\r\n\t\t\t\tanimationName: animationName,\r\n\t\t\t};\r\n\t\t}\r\n\t\tfunction strNum(val) {\r\n\t\t\treturn (val / 100).toFixed(1);\r\n\t\t}\r\n\t}\r\n\t\r\n\t_download() {\r\n\t\twindow.open(this._outlink());\r\n\t}\r\n\r\n\t_save_as_svg() {\r\n\t\tthis.__texture_to_base64().then(frag_list => {\r\n\t\t\tlet file_name = this.id + \".svg\";\r\n\t\t\t//let frag_list = this.__frag_list;\r\n\t\r\n\t\t\tlet svg = '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" >';\r\n\r\n\t\t\tsvg += '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink= \"http://www.w3.org/1999/xlink\">\\n';// width=\"64\" height=\"96\"\r\n\r\n\t\t\tsvg += '<g transform=\"translate(32, 96)\">';\r\n\t\t\tfrag_list.forEach(function (ft) {\r\n\t\t\t\tif (ft && ft.relative) {\r\n\t\t\t\t\tlet clz = ft.classList;\r\n\t\t\t\t\tsvg += `\\t<image class=\"${clz}\" opacity=\"${ft.visible ? ft.opacity : 0}\" x=\"${ft.relative.x}\" y=\"${ft.relative.y}\" width=\"${ft.width}\" height=\"${ft.height}\" xlink:href=\"${ft._url}\"></image>\\n`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsvg += '</g>';\r\n\r\n\t\t\tsvg += '<text x=\"0\" y=\"122\" fill=\"transparent\">' + this._stringify(false) + '</text>';\r\n\r\n\t\t\tsvg += '</svg>';\r\n\r\n\t\t\t//let url = \"data:text/plain;utf8,\" + svg;\r\n\r\n\t\t\tdebugger;\r\n\r\n\t\t\t//window.open(url);\r\n\t\t\tDownloadData(svg, \"image/svg+xml;utf8\", file_name);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * \"data:image/png;base64,[...]\"\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} filename\r\n\t * @returns {string}\r\n\t */\r\n\t_save_as_png(renderer, filename) {\r\n\t\tlet bound = this._calcBoundBox();\r\n\t\tlet size = bound.size;\r\n\t\tlet x = -bound.left;\r\n\t\tlet y = bound.height;\r\n\t\tlet angle = 0;\r\n\t\tlet front = false;\r\n\r\n\t\t// use Canvas2, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//save Canvas2 size, current ctx is _ctx2\r\n\t\tconst c2w = renderer._ctx2.canvas.width;\r\n\t\tconst c2h = renderer._ctx2.canvas.height;\r\n\t\t//\r\n\t\trenderer.ctx.canvas.width = size.x;\r\n\t\trenderer.ctx.canvas.height = size.y;\r\n\r\n\t\ttry {\r\n\t\t\tthis._draw(renderer, x, y, angle, front);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\tlet base64 = renderer.ctx.canvas.toDataURL(\"image/png\");\r\n\t\t{\r\n\t\t\tlet elem = document.createElement(\"a\");\r\n\r\n\t\t\tlet name = `${filename ? (filename+\".\"):\"\"}${this.action}[${this.action_frame}].${this.emotion}[${this.emotion_frame}].png`;\r\n\r\n\t\t\telem.id = name;\r\n\t\t\telem.download = name;\r\n\t\t\telem.href = base64;\r\n\r\n\t\t\tdocument.body.appendChild(elem);\r\n\t\t\telem.click();\r\n\t\t\tdocument.body.removeChild(elem);\r\n\t\t}\r\n\r\n\t\t//restore Canvas2 size, current ctx is _ctx2\r\n\t\trenderer.ctx.canvas.width = c2w;\r\n\t\trenderer.ctx.canvas.height = c2h;\r\n\r\n\t\t// restore Canvas, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\treturn base64;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {Promise<FragmentTexture[]>}\r\n\t */\r\n\tasync __texture_to_base64() {\r\n\t\tlet frag_list = this.__frag_list;\r\n\t\tlet tasks = [];\r\n\r\n\t\tfrag_list.forEach(function (ft) {\r\n\t\t\tif (!ft) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!ft._url.startsWith(\"data:\")) {\r\n\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\tft._url = await toDataURL(ft._url);\r\n\t\t\t\t\treturn ft;\r\n\t\t\t\t})());\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttasks.push(ft);\r\n\t\t\t}\r\n\t\t\tif (ft.graph2) {\r\n\t\t\t\tlet src = ft.graph2._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph2._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph2;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ft.graph3) {\r\n\t\t\t\tlet src = ft.graph3._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph3._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph3;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n}\r\nAddInitTask(CharacterRenderer.Init);\r\n\r\nfunction* circularSequence(length) {\r\n\tlet i = 0;\r\n\tfor (; i < length; ++i) {//a: 0, 1, 2, 3, ...b\r\n\t\tyield i;\r\n\t}\r\n\tfor (i -= 2; i > 0; --i) {//b: 2, 1, ...a\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction* linearSequence(length) {\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction extract_number(input) {\r\n\treturn String(input).match(/(-?\\d+\\.?\\d*)|(\\.\\d*)/g);\r\n}\r\n\r\n/**\r\n * image href to data url\r\n */\r\nfunction toDataURL(url) {\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tlet xhr = new XMLHttpRequest();\r\n\t\txhr.onload = function () {\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\treader.onloadend = function () {\r\n\t\t\t\tresolve(reader.result);\r\n\t\t\t}\r\n\t\t\treader.onerror = function (ev) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treject(ev);\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(xhr.response);\r\n\t\t};\r\n\t\txhr.open('GET', url);\r\n\t\txhr.responseType = 'blob';\r\n\t\txhr.send();\r\n\t});\r\n}\r\n","﻿\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\n\r\n\r\nexport class ChatBalloon {\r\n\tconstructor() {\r\n\t\tthis._raw = null;\r\n\t\tthis.style = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {any} style\r\n\t */\r\n\tasync load(style) {\r\n\t\tif (style == null) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tif (ChatBalloon.cache[style]) {\r\n\t\t\tlet cb = ChatBalloon.cache[style];\r\n\t\t\tObject.assign(this, cb);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst path = [this._base_path, style].join(\"/\");\r\n\r\n\t\t\tthis.style = style;\r\n\t\t\t\r\n\t\t\tlet promise = $get.data(path);\r\n\t\t\tChatBalloon.cache[style] = this;\r\n\t\t\tthis.$promise = promise;\r\n\t\t\t\r\n\t\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\t\tvalue: await promise,\r\n\t\t\t});\r\n\t\t\tdelete this.$promise;\r\n\r\n\t\t\tconst argb = Number(\"clr\" in this._raw ? this._raw.clr : defCol);\r\n\t\t\tconst rgba = (((argb & 0xFF000000) >>> 24) | ((argb & 0x00FFFFFF) << 8)) >>> 0;\r\n\t\t\tconst str_rgba = rgba.toString(16).padStart(8, \"0\");\r\n\t\t\tthis.color = (this._raw.clr == -1 || !this._raw.clr) ? (\"white\") : (\"#\" + str_rgba);\r\n\r\n\t\t\tthis.nw = new Sprite(this._raw.nw);\r\n\t\t\t//this.nw._url = path + \"/nw\";\r\n\r\n\t\t\tthis.n = new Sprite(this._raw.n);\r\n\t\t\t//this.n._url = path + \"/n\";\r\n\r\n\t\t\tthis.ne = new Sprite(this._raw.ne);\r\n\t\t\t//this.ne._url = path + \"/ne\";\r\n\r\n\t\t\tthis.w = new Sprite(this._raw.w);\r\n\t\t\t//this.w._url = path + \"/w\";\r\n\r\n\t\t\tthis.c = new Sprite(this._raw.c);\r\n\t\t\t//this.c._url = path + \"/c\";\r\n\r\n\t\t\tthis.e = new Sprite(this._raw.e);\r\n\t\t\t//this.e._url = path + \"/e\";\r\n\r\n\t\t\tthis.sw = new Sprite(this._raw.sw);\r\n\t\t\t//this.sw._url = path + \"/sw\";\r\n\r\n\t\t\tthis.s = new Sprite(this._raw.s);\r\n\t\t\t//this.s._url = path + \"/s\";\r\n\r\n\t\t\tthis.se = new Sprite(this._raw.se);\r\n\t\t\t//this.se._url = path + \"/se\";\r\n\r\n\t\t\tthis.arrow = new Sprite(this._raw.arrow);\r\n\t\t\t//this.arrow._url = path + \"/arrow\";\r\n\r\n\t\t\t//this._pat_c = ctx.createPattern(this.c, \"repeat\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/*\r\n\t1 12345 12345 1 : 5\r\n\t2 12345 12345 12345\r\n\t3 12345 12345 12345\r\n\t4 12345 12345 12345\r\n\t5 12345 12345 12345\r\n\t6 xxx12 34512 34\r\n\t */\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} text - length = chat.value.length + \" : \".length + name.length = 70 + 3 + name.length\r\n\t * @param {number} x - chat balloon arrow bottom pos.x\r\n\t * @param {number} y - chat balloon arrow bottom pos.y\r\n\t */\r\n\tdraw(renderer, text, x, y) {\r\n\t\tlet lines = text.match(/(.{1,12})/g);\r\n\t\tif (!lines.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst LINE_HEIGHT = this.c.height;// = fontSize(12) + PADDING_TOP(2)\r\n\t\tconst PADDING_LEFT = 0, PADDING_TOP = 0, PADDING_RIGHT = 0, PADDING_BOTTOM = 0;\r\n\r\n\t\tctx.fillStyle = this.color;\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"hanging\";//top\r\n\t\t\r\n\t\tconst min_width = this.n.width * 3;\r\n\t\tlet _tw = Math.max.apply(null, lines.map(line => ctx.measureText(line).width + PADDING_LEFT + PADDING_RIGHT));\r\n\t\tif (_tw < min_width) {\r\n\t\t\t_tw = min_width;\r\n\t\t}\r\n\t\tconst hw = Math.trunc((_tw / 2) / this.n.width) * this.n.width;\r\n\t\tconst tw = hw * 2;\r\n\t\tconst th = lines.length * LINE_HEIGHT + PADDING_TOP + PADDING_BOTTOM;\r\n\t\r\n\t\tx = (x - hw);\r\n\t\ty = (y - th) - this.arrow.height;\r\n\r\n\t\t{//top\r\n\t\t\tthis.nw.draw2(x, y);\r\n\t\t\tthis.n._drawPattern(x, y, tw, this.n.height);\r\n\t\t\tthis.ne.draw2(x + tw, y);\r\n\t\t}\r\n\t\t{//center\r\n\t\t\tconst xw = this.w.width - this.w.x;\r\n\r\n\t\t\tthis.w._drawPattern(x + xw, y, this.w.width, th);\r\n\t\t\tthis.c._drawPattern(x + xw, y, tw, th);\r\n\t\t\tthis.e._drawPattern(x + xw + tw, y, this.e.width, th);\r\n\t\t}\r\n\t\t{//bottom\r\n\t\t\tconst r_adj = this.arrow.width & 1;\r\n\t\t\tconst arrow_hw = Math.trunc(this.arrow.width / 2);\r\n\t\t\tconst hw_arrow_hw = hw - arrow_hw;\r\n\t\t\r\n\t\t\tthis.sw.draw2(x, y + th);\r\n\t\t\tthis.s._drawPattern(x, y + th, hw_arrow_hw, this.s.height);//clip\r\n\t\t\tthis.s._drawPattern(x + hw + arrow_hw + r_adj, y + th, hw_arrow_hw - r_adj, this.s.height);//clip\r\n\t\t\tthis.se.draw2(x + tw, y + th);\r\n\r\n\t\t\tthis.arrow.draw2(x - arrow_hw + hw, y + th);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0, cy = y; i < lines.length; ++i, cy += LINE_HEIGHT) {\r\n\t\t\tlet line = lines[i];\r\n\r\n\t\t\t//if (this.constructor.DEBUG) {\r\n\t\t\t//\tctx.beginPath();\r\n\t\t\t//\tctx.strokeStyle = \"red\";\r\n\t\t\t//\tctx.strokeRect(x + PADDING_LEFT, cy + PADDING_TOP, tw, LINE_HEIGHT);\r\n\t\t\t//}\r\n\t\t\t//ctx.fillStyle = \"black\";\r\n\r\n\t\t\tctx.fillText(line, x + hw + PADDING_LEFT, cy + PADDING_TOP);\r\n\t\t}\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn \"/UI/ChatBalloon\";\r\n\t}\r\n\r\n\t//static get DEBUG() {\r\n\t//\treturn false;\r\n\t//}\r\n}\r\n\r\n/** @type {{[style:number]:ChatBalloon}} */\r\nChatBalloon.cache = window.$images_ChatBalloon || {};\r\n\r\nwindow.$images_ChatBalloon = ChatBalloon.cache;\r\n\r\nif (module.hot) {\r\n\tObject.values(ChatBalloon.cache).forEach(a => {\r\n\t\ta.__proto__ = ChatBalloon.prototype;\r\n\t\t//a.load(a.style);\r\n\t});\r\n\tmodule.hot.accept();\r\n}\r\n","\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\n\r\n\r\nexport class PanelRenderer {\r\n\tconstructor() {\r\n\t\tthis._raw = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tasync _load(url) {\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: await $get.data(url),\r\n\t\t});\r\n\t}\r\n\t\r\n\t_load_top() {\r\n\t\tthis.nw = new Sprite(this._raw.nw);\r\n\t\t//this.nw._url = url + \"/nw\";\r\n\r\n\t\tthis.n = new Sprite(this._raw.n);\r\n\t\t//this.n._url = url + \"/n\";\r\n\r\n\t\tthis.ne = new Sprite(this._raw.ne);\r\n\t\t//this.ne._url = url + \"/ne\";\r\n\t}\r\n\t\r\n\t_load_center() {\r\n\t\tthis.w = new Sprite(this._raw.w);\r\n\t\t//this.w._url = url + \"/w\";\r\n\r\n\t\tthis.c = new Sprite(this._raw.c);\r\n\t\t//this.c._url = url + \"/c\";\r\n\r\n\t\tthis.e = new Sprite(this._raw.e);\r\n\t\t//this.e._url = url + \"/e\";\r\n\t}\r\n\t\r\n\t_load_bottom() {\r\n\t\tthis.sw = new Sprite(this._raw.sw);\r\n\t\t//this.sw._url = url + \"/sw\";\r\n\r\n\t\tthis.s = new Sprite(this._raw.s);\r\n\t\t//this.s._url = url + \"/s\";\r\n\r\n\t\tthis.se = new Sprite(this._raw.se);\r\n\t\t//this.se._url = url + \"/se\";\r\n\t}\r\n\t\r\n\t_load_arrow() {\r\n\t\tthis.arrow = new Sprite(this._raw.arrow);\r\n\t\t//this.arrow._url = url + \"/arrow\";\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} defCol\r\n\t */\r\n\t_load_color(defCol) {\r\n\t\tconst argb = Number(\"clr\" in this._raw ? this._raw.clr : defCol);\r\n\t\tconst rgba = (((argb & 0xFF000000) >>> 24) | ((argb & 0x00FFFFFF) << 8)) >>> 0;\r\n\t\tconst str_rgba = rgba.toString(16).padStart(8, \"0\");\r\n\t\tthis.color = (this._raw.clr == -1 || !this._raw.clr) ? (\"white\") : (\"#\" + str_rgba);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_top(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tthis.nw.draw2(cx, bottom);\r\n\t\tthis.n._drawPatterncx(x, bottom, tw, this.n.height);\r\n\t\tthis.ne.draw2(cx + tw, bottom);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_center(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tconst xw = this.w.width - this.w.x;\r\n\r\n\t\tthis.w._drawPattern(cx + xw, bottom, this.w.width, height);\r\n\t\tthis.c._drawPattern(cx + xw, bottom, tw, height);\r\n\t\tthis.e._drawPattern(cx + xw + tw, bottom, this.e.width, height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_bottom(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tthis.sw.draw2(cx, bottom + height);\r\n\t\tthis.s._drawPattern(cx, bottom + height, hwidth, this.s.height);\r\n\t\tthis.se.draw2(cx + tw, bottom + height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_bottom_and_arrow(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tconst r_adj = this.arrow.width & 1;\r\n\t\tconst arrow_hw = Math.trunc(this.arrow.width / 2);\r\n\t\tconst hw_arrow_hw = hwidth - arrow_hw;\r\n\t\r\n\t\tthis.sw.draw2(cx, bottom + height);\r\n\t\tthis.s._drawPattern(cx, bottom + height, hw_arrow_hw, this.s.height);\r\n\t\tthis.s._drawPattern(cx + hwidth + arrow_hw + r_adj, bottom + height, hw_arrow_hw - r_adj, this.s.height);\r\n\t\tthis.se.draw2(cx + tw, bottom + height);\r\n\r\n\t\tthis.arrow.draw2(cx - arrow_hw + hwidth, bottom + height);\r\n\t}\r\n}\r\n","\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\nimport { PanelRenderer } from './PanelRenderer.js';\r\n\r\n\r\nexport class NameLabel extends PanelRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.style = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.color = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.w = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.c = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.e = null;\r\n\t}\r\n\t\r\n\tasync load(style) {\r\n\t\tif (style == null) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tif (NameLabel.cache[style]) {\r\n\t\t\tlet label = NameLabel.cache[style];\r\n\t\t\tObject.assign(this, label);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst path = [this._base_path, style].join(\"/\");\r\n\t\t\t\r\n\t\t\tthis.style = style;\r\n\t\t\t\r\n\t\t\tlet promise = this._load(path);\r\n\t\t\tNameLabel.cache[style] = this;\r\n\t\t\tthis.$promise = promise;\r\n\t\t\t\r\n\t\t\tawait promise;\r\n\t\t\tdelete this.$promise;\r\n\t\t\t\r\n\t\t\tthis._load_center();\r\n\t\t\tthis._load_color(\"white\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} text\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, text, x, y) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\t\r\n\t\tctx.fillStyle = this.color;\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"hanging\";//top\r\n\t\t\r\n\t\tlet height = this.c.height;\r\n\t\tlet width = ctx.measureText(text).width;\r\n\t\twidth = Math.max(this.c.width * 2, width);\r\n\t\t\r\n\t\tconst hw = width / 2;\r\n\t\t\r\n\t\tconst cx = x - hw;\r\n\t\tconst cy = y + Math.min(this.w.y, this.e.y);\r\n\t\t\r\n\t\tthis.w.draw2(cx, cy);\r\n\t\tthis.c._drawPattern(cx, cy, width - this.e.x, height);\r\n\t\tthis.e.draw2(cx + width, cy);\r\n\t\t\r\n\t\tctx.fillText(text, x, cy);\r\n\t}\r\n\t\r\n\tget _base_path() {\r\n\t\treturn \"/UI/NameTag\";\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} NameLabel\r\n\t * @returns {NameLabel}\r\n\t */\r\n\tstatic get(labelStyle) {\r\n\t\tlet label = NameLabel.cache[labelStyle];\r\n\t\tif (!label) {\r\n\t\t\tlabel = new NameLabel();\r\n\t\t\tlabel.load(labelStyle);\r\n\t\t}\r\n\t\treturn label;\r\n\t}\r\n}\r\n\r\n/** @type {{[style:number]:NameLabel}} */\r\nNameLabel.cache = window.$images_NameLabel || {};\r\n\r\nwindow.$images_NameLabel = NameLabel.cache;\r\n\r\nif (module.hot) {\r\n\tObject.values(NameLabel.cache).forEach(a => {\r\n\t\ta.__proto__ = NameLabel.prototype;\r\n\t\t//a.load(a.style);\r\n\t});\r\n\tmodule.hot.accept();\r\n}\r\n","﻿\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGrpah, IRenderer, IGraph } from \"./IRenderer.js\";\r\n\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\n\r\n/**\r\n * @extends {IGraph}\r\n */\r\nexport class SpriteBase extends Graph {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tif (raw) {\r\n\t\t\tsuper(url, {\r\n\t\t\t\twidth: raw.__w,\r\n\t\t\t\theight: raw.__h,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\t//this.src is broken;\r\n\r\n\t\tif (url) {\r\n\t\t\tdebugger\r\n\t\t\tthis._url = url;\r\n\t\t\t//this._loadTexture(url);//_loadTexture: undefined\r\n\t\t}\r\n\t\telse if (SpriteBase.isTexture(raw) !== false) {\r\n\t\t\tthis._url = raw[\"\"];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isTexture(raw) {\r\n\t\tif (raw) {\r\n\t\t\tif (raw.hasOwnProperty(\"\")) {\r\n\t\t\t\tif (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!raw.__isEmpty) {\r\n\t\t\t\t\tconsole.group(\"no texture\");\r\n\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\tthrow new Error(\"no texture\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic isTextureHasData(raw) {\r\n\t\treturn raw && typeof raw[\"\"] == 'string' && raw[\"\"].startsWith(\"data:image/\");\r\n\t}\r\n\r\n\tset z(value) {\r\n\t\tthis._order = value;\r\n\t}\r\n\tget z() {\r\n\t\treturn this._order;\r\n\t}\r\n\t\r\n\t/**\r\n\t * try construct value from raw data\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (!this._raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\telse if (propertyName in this._raw) {\r\n\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis._engine.drawGraph(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthis._engine.drawGraph2(this, x - this.x, y - this.y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t */\r\n\tdraw2i(x, y) {\r\n\t\tthis._engine.drawGraph2(this, Math.trunc(x - this.x + 0.5), Math.trunc(y - this.y + 0.5));\r\n\t}\r\n}\r\n\r\n\r\nexport class Sprite extends SpriteBase {\r\n\t/**\r\n\t * sprite = new Sprite(rawData);//不會載入image\r\n\t * sprite._url = img_url;//不會載入image\r\n\t *\r\n\t * 會觸發載入image的method\r\n\t * draw(), isLoaded(), get width(), get height()\r\n\t * \r\n\t * 手動載入image: __loadTexture()\r\n\t * \r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tvar origin = this._get(new Vec2(0, 0), \"origin\", Vec2.get);\r\n\t\tthis.x = origin.x;\r\n\t\tthis.y = origin.y;\r\n\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\tthis.delay = this._get(100, \"delay\", Number);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tctx.rect(x, y, w, h);\r\n\t\t\tctx.clip();\r\n\r\n\t\t\tlet left = x;\r\n\t\t\tlet top = y;\r\n\t\t\tlet right = x + w;\r\n\t\t\tlet bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\tdrawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst left = x;\r\n\t\t\tconst right = x + w;\r\n\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\tdrawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst top = y;\r\n\t\t\tconst bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tthis.draw2(x, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\t_drawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t\r\n\t\tconst sw = Math.trunc(w / this.width) * this.width;\r\n\t\tconst sh = Math.trunc(h / this.height) * this.height;\r\n\t\t\r\n\t\tconst left = x;\r\n\t\tconst top = y;\r\n\t\tconst right = x + sw;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tlet i, j;\r\n\r\n\t\tif (h >= this.height) {\r\n\t\t\tfor (i = top; i < bottom; i += this.height) {\r\n\t\t\t\tif (w >= this.width) {\r\n\t\t\t\t\tfor (j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet sx = w - sw;\r\n\t\t\t\t\tif (sx > 0) {\r\n\t\t\t\t\t\tthis._engine._drawImage(this, 0, 0, sx, this.height, j - this.x, i - this.y, sx, this.height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._engine._drawImage(this, 0, 0, w, this.height, left - this.x, i - this.y, w, this.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet sy = h - sh;\r\n\t\t\tif (sy > 0) {\r\n\t\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\t\tthis._engine._drawImage(this, 0, 0, this.width, sy, left - this.x, i - this.y, this.width, sy);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\tthis._engine._drawImage(this, 0, 0, this.width, h, left - this.x, top - this.y, this.width, h);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\t_drawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst right = x + w;\r\n\r\n\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\tthis.draw2(j, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\t_drawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst top = y;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tthis.draw2(x, i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawPattern4i(x, y, w, h) {\r\n\t\tthis.drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\tdrawHorizontalPattern3i(x, y, w) {\r\n\t\tthis.drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawVerticalPattern3i(x, y, h) {\r\n\t\tthis.drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawPattern4i(x, y, w, h) {\r\n\t\tthis._drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\t_drawHorizontalPattern3i(x, y, w) {\r\n\t\tthis._drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawVerticalPattern3i(x, y, h) {\r\n\t\tthis._drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n}\r\n\r\nexport class _$PatternSprite_Loaded extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._direction = null;\r\n\r\n\t\t/** @type {CanvasPattern} */\r\n\t\tthis._pattern = null;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget direction() {\r\n\t\treturn this._direction;\r\n\t}\r\n\tset direction(value) {\r\n\t\tif (value && this._direction != value) {\r\n\t\t\tthis._direction = value;\r\n\t\r\n\t\t\t//reload;\r\n\t\t\tthis._pattern = null;\r\n\t\t\tthis.__proto__ = $PatternSprite.prototype;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(-this.x, -this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(x - this.x, y - this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"repeat\"} */\r\n\tget e_repeat() {\r\n\t\treturn \"repeat\";\r\n\t}\r\n\t/** @returns {\"repeat-x\"} */\r\n\tget e_repeat_x() {\r\n\t\treturn \"repeat-x\";\r\n\t}\r\n\t/** @returns {\"repeat-y\"} */\r\n\tget e_repeat_y() {\r\n\t\treturn \"repeat-y\";\r\n\t}\r\n\t/** @returns {\"no-repeat\"} */\r\n\tget e_noRepeat() {\r\n\t\treturn \"no-repeat\";\r\n\t}\r\n}\r\n\r\nexport class $PatternSprite extends _$PatternSprite_Loaded {\r\n\tdrawPattern(w, h) {\r\n\t\tthis.drawPattern2(0, 0, w, h);\r\n\t}\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.isLoaded()) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t{\r\n\t\t\t\tctx.rect(x, y, w, h);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tlet left = x;\r\n\t\t\t\tlet top = y;\r\n\t\t\t\tlet right = x + w;\r\n\t\t\t\tlet bottom = y + h;\r\n\r\n\t\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern(w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern2(x, y, w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\nconst $failed_urls = [];\r\n\r\nconst $archive = {};\r\n\r\n\r\nwindow.character_emotion_list = [\"blink\", \"hit\", \"smile\", \"troubled\", \"cry\", \"angry\", \"bewildered\", \"stunned\",\r\n\t\"vomit\", \"oops\", \"cheers\", \"chu\", \"wink\", \"pain\", \"glitter\", \"despair\", \"love\", \"shine\", \"blaze\", \"hum\",\r\n\t\"bowing\", \"hot\", \"dam\", \"qBlue\"];\r\n\r\nwindow.character_action_list = [\"walk1\", \"walk2\", \"stand1\", \"stand2\", \"alert\", \"swingO1\", \"swingO2\", \"swingO3\", \"swingOF\", \"swingT1\",\r\n\t\"swingT2\", \"swingT3\", \"swingTF\", \"swingP1\", \"swingP2\", \"swingPF\", \"stabO1\", \"stabO2\", \"stabOF\", \"stabT1\",\r\n\t\"stabT2\", \"stabTF\", \"shoot1\", \"shoot2\", \"shootF\", \"proneStab\", \"prone\", \"heal\", \"fly\", \"jump\", \"sit\", \"ladder\",\r\n\t\"rope\"/*, \"dead\", \"ghostwalk\", \"ghoststand\", \"ghostjump\", \"ghostproneStab\", \"ghostladder\", \"ghostrope\", \"ghostfly\",\r\n\t\t\"ghostsit\"*/];\r\n\r\nexport class ItemCategoryInfo {\r\n\t/**\r\n\t * @param {string} id_prefix\r\n\t * @param {string} path\r\n\t * @param {boolean} isOnFace\r\n\t * @param {string} slot - property name\r\n\t * @param {string} categoryName\r\n\t * @param {string} type\r\n\t * @param {string} [stringPath]\r\n\t */\r\n\tconstructor(id_prefix, imgDir, listPath, slot, categoryName, type, stringPath) {\r\n\t\tthis.id_prefix = id_prefix;\r\n\r\n\t\t/** data path */\r\n\t\tthis.path = imgDir;\r\n\r\n\t\t/** equip window */\r\n\t\tthis.slot = slot;\r\n\r\n\t\t/** item list file name */\r\n\t\tthis.listPath = listPath;\r\n\r\n\t\t/** display category name */\r\n\t\tthis.categoryName = categoryName;\r\n\r\n\t\t/** renderer */\r\n\t\tthis.FragmentType = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.dataDir = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.stringDir = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconPath = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconRawPath = null;\r\n\t\t{\r\n\t\t\tlet dataDir, stringDir, iconPath, iconRawPath;\r\n\r\n\t\t\tswitch (slot) {\r\n\t\t\t\tcase \"head\":\r\n\t\t\t\t\ticonPath = \"stand1/0/head\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/head\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"body\":\r\n\t\t\t\t\ticonPath = \"stand1/0/body\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/body\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"hair\":\r\n\t\t\t\t\ticonPath = \"stand1/0/hair\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/hair\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"face\":\r\n\t\t\t\t\ticonPath = \"blink/0/face\";\r\n\t\t\t\t\ticonRawPath = \"blink/0/face\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: // typeId: 0|1|2|3|4\r\n\t\t\t\t\ticonPath = \"info/icon\";\r\n\t\t\t\t\ticonRawPath = \"info/iconRaw\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (id_prefix == \"5\") {\r\n\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\tstringDir = \"/String/Pet/\";\r\n\t\t\t\talert(\"Pet\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch (id_prefix[1]) {\r\n\t\t\t\t\tcase \"0\":\r\n\t\t\t\t\t\tif (Math.trunc(id_prefix) <= 1) {\r\n\t\t\t\t\t\t\tdataDir = \"/Character/\";\r\n\t\t\t\t\t\t\tstringDir = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase \"1\":\r\n\t\t\t\t\t\tlet s = imgDir + (imgDir ? \"/\" : \"\");\r\n\t\t\t\t\t\tdataDir = \"/Character/\" + s;\r\n\t\t\t\t\t\tstringDir = \"/String/Eqp/Eqp/\" + (stringPath || s);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"2\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Consume/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"3\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Ins/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"4\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Etc/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"5\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Cash/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new Error(\"unknow item type, param: %o\", [id_prefix, imgDir, listPath, slot, categoryName, type]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.defineProperties(this, {\r\n\t\t\t\t\"type\": {\r\n\t\t\t\t\tvalue: type,\r\n\t\t\t\t},\r\n\t\t\t\t\"dataDir\": {\r\n\t\t\t\t\tvalue: dataDir,\r\n\t\t\t\t},\r\n\t\t\t\t\"stringDir\": {\r\n\t\t\t\t\tvalue: stringDir,\r\n\t\t\t\t},\r\n\t\t\t\t\"iconPath\": {\r\n\t\t\t\t\tvalue: iconPath,\r\n\t\t\t\t},\r\n\t\t\t\t\"iconRawPath\": {\r\n\t\t\t\t\tvalue: iconRawPath,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * load equip or item, name and desc\r\n\t * @param {string} itemId\r\n\t * @returns {{info:{icon:{[\"\"]:string},iconRaw:{[\"\"]:string}},name:string,desc:string,[prop:string]:any}}\r\n\t */\r\n\tstatic async getItem(itemId) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(itemId);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet id = itemId.padStart(8, \"0\");\r\n\t\tif (id[0] != \"0\") {\r\n\t\t\tthrow new Error(\"itemId: \" + itemId);\r\n\t\t}\r\n\r\n\t\tlet results;\r\n\t\ttry {\r\n\t\t\tresults = await Promise.all([\r\n\t\t\t\t$get.data(info.dataDir + itemId),\r\n\t\t\t\tinfo.stringDir ? $get.data(info.stringDir + Number(itemId)).then(\r\n\t\t\t\t\ta => a, // have name or desc\r\n\t\t\t\t\t() => { return { name: \"<\" + itemId + \">\" }; } // no name and desc\r\n\t\t\t\t) : { name: \"<\" + itemId + \">\" } // no name and desc\r\n\t\t\t]);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow new ex;\r\n\t\t}\r\n\r\n\t\tlet data = Object.assign(results[0], results[1]);\r\n\t\t\r\n\t\tdata.id = itemId;\r\n\r\n\t\tif (data.info) {\r\n\t\t\t{//editor mode data\r\n\t\t\t\tdata.info.id = itemId;\r\n\t\t\t\tdata.info.name = data.name;\r\n\t\t\t\tif (data.desc) {\r\n\t\t\t\t\tdata.info.desc = data.desc;\r\n\t\t\t\t}\r\n\t\t\t\tdata.info.__v = window.DATA_TAG + window.DATA_VERSION;\r\n\t\t\t}\r\n\r\n\t\t\tif (!data.info.icon) {\r\n\t\t\t\tdata.info.icon = {};\r\n\t\t\t}\r\n\t\t\tif (!data.info.iconRaw) {\r\n\t\t\t\tdata.info.iconRaw = {};\r\n\t\t\t}\r\n\t\t\tif (!data.info.icon[\"\"]) {\r\n\t\t\t\tdata.info.icon[\"\"] = ItemCategoryInfo.getIconUrl(itemId);\r\n\t\t\t}\r\n\t\t\tif (data.info.iconRaw[\"\"]) {\r\n\t\t\t\tdata.info.iconRaw[\"\"] = ItemCategoryInfo.getIconRawUrl(itemId);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconRawUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\t//TODO: return path, not url\r\n\t\t\treturn info.dataDir + id + \"/\" + info.iconRawPath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\t//TODO: return path, not url\r\n\t\t\treturn info.dataDir + id + \"/\" + info.iconPath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - 4+ digit string\r\n\t * @returns {ItemCategoryInfo}\r\n\t */\r\n\tstatic get(id) {\r\n\t\tlet info;\r\n\r\n\t\tif (id == null || id == \"\") {\r\n\t\t\tdebugger;\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\tif (id.length == 4) {\r\n\t\t\t\tinfo = ItemCategoryInfo._info[id];\r\n\t\t\t\tif (info) {\r\n\t\t\t\t\treturn info;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (id.length == 6) {\r\n\t\t\t\treturn ItemCategoryInfo._info[id];\r\n\t\t\t}\r\n\t\t\telse if (id.length == 3) {\r\n\t\t\t\treturn ItemCategoryInfo._info[id];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 4)];\r\n\t\t\t\tif (info) {\r\n\t\t\t\t\treturn info;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 6)];\r\n\t\t\t\t\tif (info) {\r\n\t\t\t\t\t\treturn info;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 3)];//019\r\n\t\t\t\t\t\tif (info) {\r\n\t\t\t\t\t\t\treturn info;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.warn(\"unknow item type, itemId: \" + id);\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getTypeId() {\r\n\t\treturn Math.trunc(_id / 1000000);\r\n\t}\r\n\r\n\tstatic getCategory() {\r\n\t\treturn Math.trunc(_id / 10000);// % 100;// 0105 // 01 + 05 // type + category\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isItem(id) {\r\n\t\tlet type = Math.trunc(id / 1000000);//id.startsWith(\"00\");\r\n\t\treturn type != 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isEquip(id) {\r\n\t\tif (!id) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\t\tlet _id = Number(id);\r\n\r\n\t\tif (!Number.isSafeInteger(_id)) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\r\n\t\t//let cate = Number(id.length == 4 ? id : id.slice(0, 4));\r\n\t\t//return (cate >= \"0100\" && cate < \"0180\");\r\n\r\n\t\t//let cate = Math.trunc(_id / 10000);\r\n\t\t//if (cate >= 180 && cate < 2000) {\r\n\t\t//\tconsole.warn(\"?? equip: \" + id);\r\n\t\t//\tdebugger;\r\n\t\t//}\r\n\r\n\t\tlet type = Math.trunc(_id / 1000000);\r\n\r\n\t\treturn type == 1;\r\n\t}\r\n\r\n\tstatic isChair(id) {\r\n\t\tif (!id) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\t\tlet _id = Number(id);\r\n\r\n\t\tif (!Number.isSafeInteger(_id)) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\r\n\t\tlet cate = Math.trunc(_id / 10000);\r\n\r\n\t\treturn cate == 301;//0301xxxx\r\n\t}\r\n\r\n\t/**\r\n\t * 1~4 digit number\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic getSubCategory(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic isCashWeapon(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000) == 170;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} job\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getJobWeaponCategory(job) {\r\n\t\t//TODO: getJobWeaponCategory\r\n\t\tconsole.warn(\"getJobWeaponCategory: 未完成\");\r\n\t}\r\n}\r\nwindow.$ItemCategoryInfo = ItemCategoryInfo;\r\nItemCategoryInfo.type = {\r\n\tEquip: \"Equip\",\r\n\tConsume: \"Consume\",\r\n\tEtc: \"Etc\",\r\n\tInstall: \"Install\",\r\n\tCash: \"Cash\"\r\n};\r\nItemCategoryInfo.typeName = {\r\n\t0: \"Equip\",\r\n\t1: \"Consume\",\r\n\t2: \"Etc\",\r\n\t3: \"Install\",\r\n\t4: \"Cash\"\r\n};\r\nItemCategoryInfo.typeId = {\r\n\tEquip: 0,\r\n\tConsume: 1,\r\n\tEtc: 2,\r\n\tInstall: 3,\r\n\tCash: 4,\r\n};\r\nItemCategoryInfo._info = {\r\n\t\"0000\": new ItemCategoryInfo(\"0000\", \"\",\t\t\t\"body\",\t\t\t\t\"body\",\t\t\t\"<body>\", \"Equip\"),\r\n\t\"0001\": new ItemCategoryInfo(\"0001\", \"\",\t\t\t\"head\",\t\t\t\t\"head\",\t\t\t\"<head>\", \"Equip\"),\r\n\r\n\t\"0002\": new ItemCategoryInfo(\"0002\", \"Face\",\t\t\"Face\",\t\t\t\t\"face\",\t\t\t\"臉型\", \"Equip\"),\r\n\t\"0003\": new ItemCategoryInfo(\"0003\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\", \"Equip\"),\r\n\t\"0004\": new ItemCategoryInfo(\"0004\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\", \"Equip\"),\r\n\r\n\t\"0100\": new ItemCategoryInfo(\"0100\", \"Cap\",\t\t\t\"Cap\",\t\t\t\t\"cap\",\t\t\t\"帽子\", \"Equip\"),\r\n\t\"0101\": new ItemCategoryInfo(\"0101\", \"Accessory\",\t\"accessoryFace\",\t\"accessoryFace\", \"臉飾\", \"Equip\"),\r\n\t\"0102\": new ItemCategoryInfo(\"0102\", \"Accessory\",\t\"accessoryEyes\",\t\"accessoryEyes\", \"眼飾\", \"Equip\"),\r\n\t\"0103\": new ItemCategoryInfo(\"0103\", \"Accessory\",\t\"accessoryEars\",\t\"accessoryEars\", \"耳環\", \"Equip\"),\r\n\t\"0104\": new ItemCategoryInfo(\"0104\", \"Coat\",\t\t\"Coat\",\t\t\t\t\"coat\",\t\t\t\"上衣\", \"Equip\"),\r\n\t\"0105\": new ItemCategoryInfo(\"0105\", \"Longcoat\",\t\"Longcoat\",\t\t\t\"longcoat\",\t\t\"套服\", \"Equip\"),\r\n\t\"0106\": new ItemCategoryInfo(\"0106\", \"Pants\",\t\t\"Pants\",\t\t\t\"pants\",\t\t\"褲子\", \"Equip\"),\r\n\t\"0107\": new ItemCategoryInfo(\"0107\", \"Shoes\",\t\t\"Shoes\",\t\t\t\"shoes\",\t\t\"鞋子\", \"Equip\"),\r\n\t\"0108\": new ItemCategoryInfo(\"0108\", \"Glove\",\t\t\"Glove\",\t\t\t\"glove\",\t\t\"手套\", \"Equip\"),\r\n\t\"0109\": new ItemCategoryInfo(\"0109\", \"Shield\",\t\t\"Shield\",\t\t\t\"shield\",\t\t\"盾牌\", \"Equip\"),\r\n\t\"0110\": new ItemCategoryInfo(\"0110\", \"Cape\",\t\t\"Cape\",\t\t\t\t\"cape\",\t\t\t\"披風\", \"Equip\"),\r\n\r\n\t\"0121\": new ItemCategoryInfo(\"0121\", \"Weapon\", \"閃亮克魯\", \"weapon\", \"閃亮克魯\", \"Equip\"),\r\n\t\"0122\": new ItemCategoryInfo(\"0122\", \"Weapon\", \"靈魂射手\", \"weapon\", \"靈魂射手\", \"Equip\"),\r\n\t\"0123\": new ItemCategoryInfo(\"0123\", \"Weapon\", \"魔劍\", \"weapon\", \"魔劍\", \"Equip\"),\r\n\t\"0124\": new ItemCategoryInfo(\"0124\", \"Weapon\", \"能量劍\", \"weapon\", \"能量劍\", \"Equip\"),\r\n\t\"0125\": new ItemCategoryInfo(\"0125\", \"Weapon\", \"幻獸棒\", \"weapon\", \"幻獸棒\", \"Equip\"),\r\n\t\"0126\": new ItemCategoryInfo(\"0126\", \"Weapon\", \"ESP限制器\", \"weapon\", \"ESP限制器\", \"Equip\"),\r\n\t\"0127\": new ItemCategoryInfo(\"0127\", \"Weapon\", \"鎖鏈\", \"weapon\", \"鎖鏈\", \"Equip\"),\r\n\t\"0128\": new ItemCategoryInfo(\"0128\", \"Weapon\", \"魔力護腕\", \"weapon\", \"魔力護腕\", \"Equip\"),\r\n\r\n\t\"0130\": new ItemCategoryInfo(\"0130\", \"Weapon\", \"單手劍\", \"weapon\", \"單手劍\", \"Equip\"),\r\n\t\"0131\": new ItemCategoryInfo(\"0131\", \"Weapon\", \"單手斧\", \"weapon\", \"單手斧\", \"Equip\"),\r\n\t\"0132\": new ItemCategoryInfo(\"0132\", \"Weapon\", \"單手錘\", \"weapon\", \"單手錘\", \"Equip\"),\r\n\t\"0133\": new ItemCategoryInfo(\"0133\", \"Weapon\", \"短劍\", \"weapon\", \"短劍\", \"Equip\"),\r\n\t\"0134\": new ItemCategoryInfo(\"0134\", \"Weapon\", \"雙刀\", \"weapon\", \"雙刀\", \"Equip\"),\r\n\t\"013526\": new ItemCategoryInfo(\"013526\", \"Weapon\", \"靈魂之環\", \"weapon\", \"靈魂之環\", \"Equip\"),\r\n\t\"013530\": new ItemCategoryInfo(\"013530\", \"Weapon\", \"控制器\", \"weapon\", \"控制器\", \"Equip\"),\r\n\t\"0136\": new ItemCategoryInfo(\"0136\", \"Weapon\", \"手杖\", \"weapon\", \"手杖\", \"Equip\"),\r\n\t\"0137\": new ItemCategoryInfo(\"0137\", \"Weapon\", \"短杖\", \"weapon\", \"短杖\", \"Equip\"),\r\n\t\"0138\": new ItemCategoryInfo(\"0138\", \"Weapon\", \"長杖\", \"weapon\", \"長杖\", \"Equip\"),\r\n\t\r\n\t\"0140\": new ItemCategoryInfo(\"0140\", \"Weapon\", \"雙手劍\", \"weapon\", \"雙手劍\", \"Equip\"),\r\n\t\"0141\": new ItemCategoryInfo(\"0141\", \"Weapon\", \"雙手斧\", \"weapon\", \"雙手斧\", \"Equip\"),\r\n\t\"0142\": new ItemCategoryInfo(\"0142\", \"Weapon\", \"雙手棍\", \"weapon\", \"雙手棍\", \"Equip\"),\r\n\t\"0143\": new ItemCategoryInfo(\"0143\", \"Weapon\", \"槍\", \"weapon\", \"槍\", \"Equip\"),\r\n\t\"0144\": new ItemCategoryInfo(\"0144\", \"Weapon\", \"矛\", \"weapon\", \"矛\", \"Equip\"),\r\n\t\"0145\": new ItemCategoryInfo(\"0145\", \"Weapon\", \"弓\", \"weapon\", \"弓\", \"Equip\"),\r\n\t\"0146\": new ItemCategoryInfo(\"0146\", \"Weapon\", \"弩\", \"weapon\", \"弩\", \"Equip\"),\r\n\t\"0147\": new ItemCategoryInfo(\"0147\", \"Weapon\", \"拳套\", \"weapon\", \"拳套\", \"Equip\"),\r\n\t\"0148\": new ItemCategoryInfo(\"0148\", \"Weapon\", \"指虎\", \"weapon\", \"指虎\", \"Equip\"),\r\n\t\"0149\": new ItemCategoryInfo(\"0149\", \"Weapon\", \"火槍\", \"weapon\", \"火槍\", \"Equip\"),\r\n\t\"0150\": new ItemCategoryInfo(\"0150\", \"Weapon\", \"鏟\", \"weapon\", \"鏟\", \"Equip\"),\r\n\t\"0151\": new ItemCategoryInfo(\"0151\", \"Weapon\", \"鎬\", \"weapon\", \"鎬\", \"Equip\"),\r\n\t\"0152\": new ItemCategoryInfo(\"0152\", \"Weapon\", \"雙弩槍\", \"weapon\", \"雙弩槍\", \"Equip\"),\r\n\t\"0153\": new ItemCategoryInfo(\"0153\", \"Weapon\", \"加農砲\", \"weapon\", \"加農砲\", \"Equip\"),\r\n\t\"0154\": new ItemCategoryInfo(\"0154\", \"Weapon\", \"太刀\", \"weapon\", \"太刀\", \"Equip\"),\r\n\t\"0155\": new ItemCategoryInfo(\"0155\", \"Weapon\", \"扇子\", \"weapon\", \"扇子\", \"Equip\"),\r\n\t\"0156\": new ItemCategoryInfo(\"0156\", \"Weapon\", \"琉\", \"weapon\", \"琉\", \"Equip\"),\r\n\t\"0157\": new ItemCategoryInfo(\"0157\", \"Weapon\", \"璃\", \"weapon\", \"璃\", \"Equip\"),\r\n\t\"0158\": new ItemCategoryInfo(\"0158\", \"Weapon\", \"重拳槍\", \"weapon\", \"重拳槍\", \"Equip\"),\r\n\t\"0170\": new ItemCategoryInfo(\"0170\", \"Weapon\", \"0170\", \"weapon\", \"點裝武器\", \"Equip\"),\r\n\t\"019\": new ItemCategoryInfo(\"019\", \"TamingMob\", \"TamingMob\", \"tamingMob\", \"騎寵\", \"Equip\", \"Taming/\"),\r\n\r\n\t\"0301\": new ItemCategoryInfo(\"0301\", \"Install\", \"Chair\", \"install\", \"椅子\", \"Item\"),\r\n};\r\n\r\nItemCategoryInfo._categoryList = (function (info_map) {\r\n\tlet list = [];\r\n\tlet set = new Set();\r\n\tfor (let i in info_map) {\r\n\t\tlet cat = info_map[i];\r\n\t\tlet key = cat.categoryName || cat.listPath;\r\n\r\n\t\tif (!set.has(key)) {\r\n\t\t\tset.add(key);\r\n\r\n\t\t\tlist.push({\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalue: i,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn list;\r\n})(ItemCategoryInfo._info);\r\n\r\nexport class ResourceManager {\r\n\tstatic isEquipExist(id, cateInfo) {\r\n\t\tconst dp = cateInfo.listPath;\r\n\t\tconst es = ResourceManager.equip_map[dp];\r\n\t\treturn !es || es.has(id);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic async loadArchive(url) {\r\n\t\t$setValue($archive, \"/\", JSON.parse(await ResourceManager.get(url)));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic get(url) {\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\txhr.open(\"GET\", url, true);\r\n\r\n\t\t\txhr.timeout = 10 * 60 * 1000;//20000;\r\n\r\n\t\t\txhr.onload = function () {\r\n\t\t\t\tif (this.status == 404 || this.status == 500) {\r\n\t\t\t\t\t$failed_urls.push(url);\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\t//resolve(null);\r\n\t\t\t\t\treject(this.status + \": \" + url);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 200) {\r\n\t\t\t\t\tresolve(this.responseText);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 304) {\r\n\t\t\t\t\tdebugger\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\txhr.ontimeout = function (e) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\t// XMLHttpRequest 超时。在此做某事。\r\n\t\t\t\t//resolve(null);\r\n\t\t\t\treject(\"timeout: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.onabort = function (e) {\r\n\t\t\t\treject(\"abort: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.send();\r\n\t\t});\r\n\t}\r\n\r\n\tstatic get root_path() {\r\n\t\treturn window.$ROOT_PATH;\r\n\t}\r\n\r\n\tstatic get archive() {\r\n\t\treturn $archive;\r\n\t}\r\n\r\n\tstatic get failed_urls() {\r\n\t\treturn $failed_urls;\r\n\t}\r\n}\r\nwindow.$ResourceManager = ResourceManager;\r\n\r\n/**\r\n * @param {{}} obj\r\n * @param {string} path\r\n * @param {any} value\r\n */\r\nfunction $setValue(obj, path, value) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key] == null) {\r\n\t\t\ttarget[key] = {};\r\n\t\t}\r\n\t\ttarget = target[key];\r\n\t}\r\n\tlet origin_value = target[ps[lastIndex]];\r\n\tif (origin_value instanceof Promise) {\r\n\t\tdelete target[ps[lastIndex]];\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n\telse if (origin_value && typeof origin_value == \"object\") {\r\n\t\t//if (value instanceof Promise) {\r\n\t\t//\tdebugger;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t\tfor (let key in value) {\r\n\t\t\t\torigin_value[key] = value[key] || origin_value[key];\r\n\t\t\t}\r\n\t\t//}\r\n\t}\r\n\telse if (typeof value != \"undefined\") {\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n}\r\nfunction $getValue(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key]) {\r\n\t\t\t\ttarget = target[key];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\treturn target[ps[lastIndex]];\r\n}\r\n\r\nconst symbol_isPack = Symbol(\"$pack\");\r\n\r\nconst url_startsWith_protocol = RegExp.prototype.test.bind(/^(([a-zA-Z^\\:]+)(\\:.*)$|\\/\\/)/);\r\nfunction _setValueByPath(path, value, is_pack) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn;\r\n\t}\r\n\telse if (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\tif (is_pack) {\r\n\t\t\tvalue[symbol_isPack] = true;\r\n\t\t}\r\n\t\tpath = path.slice(window.$ROOT_PATH.length);\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n\telse {\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n}\r\nfunction _getValueFromArchiveByPath(path, value) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tif (_path) {\r\n\t\treturn $getValue($archive, _path);\r\n\t}\r\n\treturn undefined;\r\n}\r\nfunction _getDataPathByUrl(path) {\r\n\tif (!url_startsWith_protocol(path)) {\r\n\t\tif (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\t\treturn path.slice(window.$ROOT_PATH.length);\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @returns {Promise<any>|any}\r\n */\r\nfunction $getValueAsync(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\t\r\n\t// try get value sync\r\n\tlet value = $getValue(obj, path);\r\n\t\r\n\t// if value exist\r\n\tif (value) {\r\n\t\tif (value instanceof Promise) {\r\n\t\t\t// ??\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait value;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\telse {// if value not exist, try await parent node\r\n\t\tlet ps = path.split(\"/\");\r\n\t\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\t\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\t\tlet key = ps[i];\r\n\t\t\tif (target[key] instanceof Promise) {\r\n\t\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\t\tawait target[key];\r\n\t\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (target[key]) {\r\n\t\t\t\t\ttarget = target[key];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet result = target[ps[lastIndex]];\r\n\t\tif (result instanceof Promise) {\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait result;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} url\r\n * @returns {Promise<any>}\r\n */\r\nexport let $get = function $get(url) {\r\n\treturn ResourceManager.get(url);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.pack = async function $get_pack(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj && obj[symbol_isPack]) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tif (process.env.NODE_ENV !== \"production\") {\r\n\t\t\tif (obj && !obj[symbol_isPack]) {\r\n\t\t\t\tthrow new TypeError(\"data: \" + path);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst url = $get.packUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, true);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, true);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.packSync = function get_packSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.data = async function $get_data(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.dataUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {any}\r\n */\r\n$get.dataSync = function get_dataSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.list = async function $get_list(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.listUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.listSync = function $get_listSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn Object.keys(obj);\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.dataUrl = function $get_dataUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"data\")) {\r\n\t\treturn `${window.$ROOT_PATH}data${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game data: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.packUrl = function $get_packUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"pack\")) {\r\n\t\treturn `${window.$ROOT_PATH}pack${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game pack: \" + path);\r\n}\r\n$get.listUrl = function $get_listUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"ls\")) {\r\n\t\treturn `${window.$ROOT_PATH}ls${path}.json`;\r\n\t}\r\n\tthrow new Error(path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.imageUrl = function $get_imagesUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"images\")) {\r\n\t\treturn `${window.$ROOT_PATH}images${path}.png`;\r\n\t}\r\n\tthrow new Error(\"Not game images: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundMp3Url = function $get_soundMp3Url(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.mp3`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundWavUrl = function $get_soundWavUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.wav`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.assetUrl = function $get_assetUrl(path) {\r\n\treturn `${window.$ROOT_PATH}${path}`;\r\n}\r\n$get.asset = function $get_asset(path) {\r\n\treturn $get($get.assetUrl(path));\r\n}\r\n\r\nwindow.$get = $get;\r\n\r\n\r\nexport class ItemAttrNormalize {\r\n\tstatic head(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic body(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic Face(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 4 ? 1 : 0;\r\n\t}\r\n\tstatic Hair(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 2 || g == 4 || g == 7 ? 1 : 0;\r\n\t}\r\n\tstatic Cap(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryFace(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEyes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEars(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Coat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Longcoat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Pants(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shoes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Glove(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shield(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Cape(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic _equip(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 0 ? 0 : (g == 1 ? 1 : 2);\r\n\t}\r\n}\r\n\r\nconst regexp_getHairStyleID = /(\\d{4,7})\\d$/;\r\nconst regexp_getFaceStyleID = /(\\d{2,5})\\d(\\d{2})$/;\r\n\r\nconst regexp_getHairColor = /\\d{4,7}(\\d)$/;\r\nconst regexp_getFaceColor = /\\d{2,5}(\\d)\\d{2}$/;\r\n\r\nexport class CharacterRenderConfig {\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumHairColor(style) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i;\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumFaceColor(style) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i + m[2];\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorHairID(style, color) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tlet id = m[1] + (color % 10);\r\n\t\treturn id;\r\n\t}\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorFaceID(style, color) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tlet id = m[1] + (color % 10) + m[2];\r\n\t\treturn id;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHairStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorHairID(id_1, 0) == CharacterRenderConfig.getColorHairID(id_2, 0);\r\n\t}\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFaceStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorFaceID(id_1, 0) == CharacterRenderConfig.getColorFaceID(id_2, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getHairColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getHairColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getFaceColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getFaceColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar _external_data = {\r\n\t\"requiredJobs\": [\r\n\t\t\"Beginner\"\r\n\t],\r\n\t\"requiredLevel\": 0,\r\n\t\"isCash\": true,\r\n\t\"name\": \"Blue Beanie\",\r\n\t\"desc\": null,\r\n\t\"id\": 1000000,\r\n\t\"requiredGender\": 0,\r\n\t\"typeInfo\": {\r\n\t\t\"overallCategory\": \"Equip\",\r\n\t\t\"category\": \"Armor\",\r\n\t\t\"subCategory\": \"Hat\"\r\n\t}\r\n};\r\n\r\nvar ItemTypeInfo = {\r\n\t\"Equip\": {\r\n\t\t\"Hat\": \"Cap\",\r\n\t\t\"Cape\": \"Cape\",\r\n\t\t\"Top\": \"Coat\",\r\n\t\t\"Overall\": \"Longcoat\",\r\n\t\t\"Glove\": \"Glove\",\r\n\t\t\"Bottom\": \"Pants\",\r\n\r\n\t\t\"Shield\": \"Shield\",\r\n\t\t\"Shoes\": \"Shoes\",\r\n\t\t\"Eye Decoration\": \"accessoryEyes\",\r\n\t\t\"Earrings\": \"accessoryEars\",\r\n\t\t//\"Ring\": \"\",\r\n\r\n\t\t//\"Pendant\": \"\",\r\n\t\t\"Face Accessory\": \"accessoryFace\",\r\n\t\t//\"Belt\": \"\",\r\n\t\t//\"Medal\": \"\",\r\n\t\t//\"Shoulder Accessory\": \"\",\r\n\t\t//\"Badge\": \"\",\r\n\r\n\t\t//\"Dragon Equipment\": \"\",\r\n\t\t//\"Mechanic Equipment\": \"\",\r\n\t\t//\"Pet Equipment\": \"\",\r\n\t\t//\"Android\": \"\",\r\n\t\t//\"Mechanical Heart\": \"\",\r\n\t\t//\"Bits\": \"\",\r\n\r\n\t\t\"Face\": \"Face\",\r\n\t\t\"Hair\": \"Hair\",\r\n\t},\r\n};\r\n\r\nResourceManager.external = {\r\n\tequip: {\r\n\t},\r\n};\r\n\r\nResourceManager.equip_map = {\r\n};\r\n\r\nfor (let i in ItemTypeInfo.Equip) {\r\n\tlet cate = ItemTypeInfo.Equip[i];\r\n\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 9; ++i) {\r\n\tlet cate = \"Face\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 8; ++i) {\r\n\tlet cate = \"Hair\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\n\r\nasync function load_external_resource(url) {\r\n\turl = url || \"/items.json\";\r\n\tlet raw;\r\n\r\n\ttry {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get.asset(\"equip.json\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\tthrow Error(\"'/equip' is empty\");\r\n\t\t}\r\n\t}\r\n\tcatch (ex) {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get(\"//labs.maplestory.io/api/gms/latest/item/category/equip\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < raw.length; ++i) {\r\n\t\tconst item = raw[i];\r\n\t\tconst id = String(item.id).padStart(8, \"0\");\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!(item.typeInfo && ItemTypeInfo[item.typeInfo.overallCategory])) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet clz = item.typeInfo.overallCategory.toLowerCase();\r\n\t\t\tlet cate = ItemTypeInfo[item.typeInfo.overallCategory][item.typeInfo.subCategory];\r\n\t\t\tif (!cate) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Face\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getFaceColor(id);\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Hair\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getHairColor(id);\r\n\t\t\t}\r\n\r\n\t\t\tlet it = {\r\n\t\t\t\tid: id,\r\n\t\t\t\tname: item.name,\r\n\t\t\t\tdesc: item.desc,\r\n\t\t\t\tcash: item.isCash ? 1 : 0,\r\n\t\t\t\ticon: {\r\n\t\t\t\t\t\"\": `//labs.maplestory.io/api/gms/latest/item/${item.id}/icon`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tResourceManager.external[clz][cate].push(it);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(\"external resource: id(\" + id + \")\");\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction update_external_equip_list() {\r\n\tconst url = \"https://labs.maplestory.io/api/gms/latest/item/category/equip\";\r\n\tload_external_resource(url).then(() => {\r\n\t\t_concat_external_resource(category, origin_data);\r\n\t\tconcat_external_resource = _concat_external_resource;\r\n\t\tconsole.log(\"done: update_external_equip_list\");\r\n\t});\r\n}\r\n\r\nlet external_resource_promise = load_external_resource();\r\n\r\nwindow.concat_external_resource = _concat_external_resource_p;\r\n\r\nwindow.trigger_update_external_equip_list = function () {\r\n\texternal_resource_promise = load_external_resource();\r\n\twindow.concat_external_resource = _concat_external_resource_p;\r\n}\r\n\r\nasync function _concat_external_resource_p(category, origin_data) {\r\n\tawait external_resource_promise;\r\n\t_concat_external_resource(category, origin_data);\r\n\tconcat_external_resource = _concat_external_resource;\r\n}\r\n\r\nfunction _concat_external_resource(category, origin_data) {\r\n\ttry {\r\n\t\tconst list = ResourceManager.external.equip[category];\r\n\t\tif (!list) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet id_map = ResourceManager.equip_map[category];\r\n\r\n\t\tif (!id_map) {\r\n\t\t\tid_map = new Map();\r\n\t\t\t\r\n\t\t\torigin_data.forEach(item => {\r\n\t\t\t\tid_map.set(item.id, item);\r\n\t\t\t});\r\n\r\n\t\t\tResourceManager.equip_map[category] = id_map;\r\n\t\t}\r\n\r\n\t\tlist.forEach((item) => {\r\n\t\t\tlet id = item.id;\r\n\t\t\tif (!id_map.has(id)) {\r\n\t\t\t\titem.$foreign = true;\r\n\t\t\t\torigin_data.push(item);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet ori_item = id_map.get(id);\r\n\t\t\t\tori_item._name = item.name || \"\";\r\n\t\t\t\tori_item._desc = item.desc || \"\";\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcatch (ex) {\r\n\t\tconsole.error(ex);\r\n\t\tdebugger;\r\n\t}\r\n}\r\n\r\nwindow.load_extern_item_data = async function (id) {\r\n\tlet _raw = JSON.parse(await $get(`//labs.maplestory.io/api/gms/latest/item/${id}`));\r\n\tlet raw = {};\r\n\r\n\tlet default_ = _raw.frameBooks.default ? _raw.frameBooks.default.frames[0]:null;\r\n\r\n\tfor (let i in _raw.frameBooks) {\r\n\t\tlet _act = _raw.frameBooks[i];\r\n\t\tlet act = [];\r\n\r\n\t\tfor (let j = 0; j < _act.frames.length; ++j) {\r\n\t\t\tlet frame = _act.frames[j] || default_;\r\n\t\t\tif (!frame || !frame.effects) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet _frags = frame.effects;\r\n\t\t\tlet frags = {};\r\n\t\t\tfor (let k in _frags) {\r\n\t\t\t\tlet _frag = _frags[k];\r\n\t\t\t\tif (_frag.image) {\r\n\t\t\t\t\tfrags[k] = {\r\n\t\t\t\t\t\t\"\": \"data:image/png;base64,\" + _frag.image,\r\n\t\t\t\t\t\t\"origin\": _frag.originOrZero || _frag.origin || _frag.center,\r\n\t\t\t\t\t\t\"map\": _frag.mapOffset,\r\n\t\t\t\t\t\t\"z\": _frag.position\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tact[j] = frags;\r\n\t\t}\r\n\r\n\t\traw[i] = act;\r\n\t}\r\n\r\n\traw.info = {\r\n\t\tislot: _raw.metaInfo.equip.islot,\r\n\t\tvslot: _raw.metaInfo.equip.vslot,\r\n\t\ticon: _raw.metaInfo.icon ? (\"data:image/png;base64,\" + _raw.metaInfo.icon.iconRaw) : \"\",\r\n\t\tcash: (_raw.metaInfo.cash && _raw.metaInfo.cash.cash) ? 1 : 0,\r\n\t};\r\n\r\n\treturn raw;\r\n}\r\n","﻿\r\nimport {\r\n\tb2_linearSlop,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2Body, b2Fixture,\r\n\tb2PolygonShape, b2CircleShape,\r\n\tb2WheelJointDef, b2RevoluteJointDef, b2PrismaticJointDef, b2MouseJointDef,\r\n\tb2Joint, b2RevoluteJoint, b2PrismaticJoint, b2MouseJoint,\r\n\tb2Contact,\r\n} from \"./Physics.js\";\r\n\r\nimport { Foothold } from \"./Ground.js\";\r\n\r\nimport { World } from \"./World.js\";\r\n\r\nimport { CharacterMoveElem } from \"../../Client/PMovePath.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { SceneMap } from \"../Map.js\";\r\nimport { LadderRope } from \"./LadderRope.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nconst DEGTORAD = Math.PI / 180;\r\n\r\nlet b2Vec2_temp = new b2Vec2();\r\n\r\n/**\r\n * physics profile\r\n */\r\nconst chara_profile = {\r\n\twidth: 25 / $gv.CANVAS_SCALE,\r\n\theight: 48 / $gv.CANVAS_SCALE,\r\n\tdensity: 1,\r\n\t/** radius */\r\n\tget foot_width() {\r\n\t\treturn (chara_profile.width * 0.5);\r\n\t},\r\n\t/** radius */\r\n\tget foot_j_width() {\r\n\t\treturn (chara_profile.width * 0.4);\r\n\t},\r\n};\r\n\r\n(function () {\r\n\tconst jumpSpeed = 555;//??\r\n\tconst fallSpeed = 670;//px/s\r\n\tconst walkSpeed = 125;//px/s\r\n\t\r\n\twindow.JUMP_FORCE = jumpSpeed;\r\n\r\n\twindow.MOVEMENT_VELOCITY = walkSpeed / $gv.CANVAS_SCALE;\r\n\twindow.$LADDER_SPEED = walkSpeed / $gv.CANVAS_SCALE;\r\n\r\n\twindow.PLAYER_USE_WHEEL_WALKER = false;\r\n\r\n\twindow.FOOT_FRICTION = 1;\r\n\r\n\twindow.MOVEMENT_POWER = 140000;\r\n\twindow.MOVEMENT_STOP_POWER = 140000;\r\n\r\n\twindow.PORTAL_COOLDOWN = 1000;\r\n})();\r\n\r\n\r\nexport class PPlayerState {\r\n\tconstructor() {\r\n\t\t/** @type {boolean} - ApplyForce(jump_force) until leave foothold */\r\n\t\tthis._begin_jump = false;\r\n\r\n\t\t/** jump_count = jump ? jump_count : 0 */\r\n\t\tthis.jump = true;\r\n\r\n\t\t/** jump_count = jump ? jump_count : 0 */\r\n\t\tthis.jump_count = 0;\r\n\r\n\t\t/** ?? */\r\n\t\tthis._drop = true;\r\n\r\n\t\tthis.walk = false;\r\n\r\n\t\tthis.prone = false;\r\n\r\n\t\t/** TODO: fallDown */\r\n\t\tthis.dropDown = false;\r\n\r\n\t\tthis._fly = false;//not jump \r\n\t\t\r\n\t\tthis.brake = true;//??\r\n\t\t\r\n\t\t/** @type {-1|1} */\r\n\t\tthis.front = -1;\r\n\r\n\t\t/** @type {boolean} - is use ladder */\r\n\t\tthis.ladder = false;\r\n\r\n\t\t/**\r\n\t\t * action animation\r\n\t\t * @type {-1|0|1} - up: -1, down: 1, stop: 0\r\n\t\t */\r\n\t\tthis.ladder_move_dir = 0;\r\n\r\n\t\t/** @type {number} - 無敵時間，unit is millisecond */\r\n\t\tthis.invincible = 0;\r\n\t\t\r\n\t\t/** @type {boolean} - can not move or jump */\r\n\t\tthis.freeze = false;\r\n\r\n\t\t/** @type {boolean} - can not move or jump */\r\n\t\tthis.invokeSkill = false;\r\n\r\n\t\t/** @type {number} - use portal cooldown time，unit is millisecond */\r\n\t\tthis.portal_cooldown = 0;\r\n\t\t\r\n\t\t//\r\n\r\n\t\t/** @type {number} - knockback time，unit is millisecond */\r\n\t\tthis.knockback = 0;\r\n\r\n\t\t/** @type {boolean} - off walker power */\r\n\t\tthis.outOfControl = false;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {number} jump_height\r\n * @param {b2Vec2} gravity\r\n */\r\nfunction _CalcJumpImpulse(jump_height, gravity) {\r\n\tlet impulse = Math.sqrt(jump_height * 2.0 * Math.abs(gravity.y));\r\n\t//(impulse = m * v) => (F = ∫ Mass * dVel)\r\n\treturn impulse;\r\n}\r\n\r\n\r\nclass ControlKeys {\r\n\tconstructor() {\r\n\t\tthis.up = 0;\r\n\t\tthis.left = 0;\r\n\t\tthis.down = 0;\r\n\t\tthis.right = 0;\r\n\t\tthis.jump = 0;\r\n\t\tthis.enterPortal = 0;//TODO: key: enterPortal\r\n\t}\r\n}\r\n\r\nexport class FootContact {\r\n\t/**\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} position\r\n\t * @param {number} priority\r\n\t */\r\n\tconstructor(foothold, position, priority) {\r\n\t\t/** @type {Foothold} */\r\n\t\tthis.foothold = foothold;\r\n\r\n\t\t/** @type {b2Vec2} */\r\n\t\tthis.position = position;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.priority = priority;\r\n\t}\r\n}\r\n\r\nclass PCharacterBase {\r\n\tconstructor() {\r\n\t\t/** @type {boolean} */\r\n\t\tthis.enable = true;\r\n\r\n\t\tthis.chara_profile = Object.assign({}, chara_profile);\r\n\t\t\r\n\t\tthis.setMovementSpeed(100);\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.foot_walk = null;\r\n\r\n\t\t/** @type {b2Joint|b2RevoluteJoint} */\r\n\t\tthis.walker = null;\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tthis.$foothold = null;\r\n\r\n\t\t/**\r\n\t\t * this.$foothold old value\r\n\t\t * @type {Foothold}\r\n\t\t */\r\n\t\tthis.prev_$fh = null;\r\n\r\n\t\t/**\r\n\t\t * no contact leave_$fh\r\n\t\t * where foothold chara dropDown\r\n\t\t * @type {Foothold}\r\n\t\t */\r\n\t\tthis.leave_$fh = null;\r\n\r\n\r\n\t\t/** @type {Foothold} - in World::Setp */\r\n\t\tthis._foothold = null;\r\n\r\n\t\t/** @type {b2Vec2} - contact foothold point */\r\n\t\tthis._foot_at = new b2Vec2();\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._foothold_priority = 0;\r\n\t\t\r\n\t\t/** @type {FootContact[]} */\r\n\t\tthis._foot_contact_list = [];\r\n\r\n\r\n\t\t/** @type {MapPortal} */\r\n\t\tthis.portal = null;\r\n\r\n\r\n\t\t/** @type {LadderRope} */\r\n\t\tthis.ladder = null;\r\n\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._walker_omega = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.jump_force = JUMP_FORCE;\r\n\r\n\t\tthis.state = new PPlayerState();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {boolean} clearForce\r\n\t */\r\n\tsetPosition(x, y, clearForce) {\r\n\t\tconst by = y - this.chara_profile.foot_width - this.chara_profile.height * 0.75 * 0.5;\r\n\t\tconst fy = y - this.chara_profile.foot_width;\r\n\r\n\t\tthis.body.SetPositionXY(x, by);\r\n\r\n\t\ttry {\r\n\t\t\tif (this.foot_walk)\r\n\t\t\t\tthis.foot_walk.SetPositionXY(x, fy);\r\n\r\n\t\t\tif (clearForce) {\r\n\t\t\t\tconst speed = new b2Vec2(0, 0);\r\n\t\t\t\tthis.body.ConstantVelocity(speed);\r\n\t\t\t\tif (this.foot_walk)\r\n\t\t\t\t\tthis.foot_walk.ConstantVelocity(speed);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * get bottom position\r\n\t * @returns {{x: number, y: number}}\r\n\t */\r\n\tgetPosition() {\r\n\t\tconst pos = this.foot_walk.GetPosition();\r\n\t\treturn new b2Vec2(pos.x, pos.y + this.chara_profile.foot_width);\r\n\t}\r\n\r\n\t/**\r\n\t * from.tn(hp00_1) == to.pn(hp00_1) && from.pn(hp00) == to.tn(hp00)\r\n\t * @param {MapPortal} portal\r\n\t * @returns {boolean} true if enter portal\r\n\t */\r\n\t_usePortal(portal) {\r\n\t\tif (!portal.enable || this.state.portal_cooldown > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t/** @type {SceneMap} */\r\n\t\tconst mapRenderer = portal.mapRenderer;\r\n\r\n\t\tconst mapController = mapRenderer.controller;\r\n\t\t\r\n\t\tconst map_id = portal.getMap();\r\n\t\t\r\n\t\tif (portal.exeScript) {//TODO: portal script\r\n\t\t\tportal.exeScript(this);\r\n\t\t}\r\n\t\telse if (map_id) {\r\n\t\t\tif (map_id == mapRenderer.map_id) {\r\n\t\t\t\tconst reg = portal.tn.match(/(^[a-z_]+)(\\d+$)/) || portal.tn.match(/(^[a-z]+)\\d+_\\d+$/);//pn?tn?\r\n\t\t\t\tconst cmd = reg[1];\r\n\r\n\t\t\t\tif (cmd == \"hp\") {\r\n\t\t\t\t\tlet fromTn = portal.tn;\r\n\t\t\t\t\tlet toPortal = mapRenderer.portalMgr.portals.find(function (toPortal) {\r\n\t\t\t\t\t\treturn fromTn == toPortal.pn;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._gotoPortal(toPortal);\r\n\t\t\t\t}\r\n\t\t\t\telse if (cmd == \"pt_go\") {\r\n\t\t\t\t\tdebugger;//??\r\n\r\n\t\t\t\t\tconst tpid = parseInt(reg[2], 10);\r\n\t\t\t\t\tconst tp = mapRenderer.portalMgr.portals[tpid];\r\n\r\n\t\t\t\t\tthis._gotoPortal(tp);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(`portal.pn: ${portal.pn}, portal.tn: ${portal.tn}, %o`, portal);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmapController.doAfterStep(function () {\r\n\t\t\t\t\tmapRenderer.unload();\r\n\t\t\t\t\tmapRenderer.load(map_id);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"portal: $o\", portal);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.state.portal_cooldown = PORTAL_COOLDOWN;//防止重複\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * @param {MapPortal} portal\r\n\t */\r\n\t_gotoPortal(portal) {\r\n\t\t/** @type {SceneMap} */\r\n\t\tconst mapRenderer = portal.mapRenderer;\r\n\t\tconst mapController = mapRenderer.controller;\r\n\r\n\t\t//not in world.Step\r\n\t\tmapController.doAfterStep(() => {\r\n\t\t\tconst x = portal.x / $gv.CANVAS_SCALE;\r\n\t\t\tconst y = (portal.y - 3) / $gv.CANVAS_SCALE;//adj portal pos\r\n\t\t\tthis.setPosition(x, y, true);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * set ladder, not use\r\n\t * @param {LadderRope} ladder\r\n\t */\r\n\tcontactLadder(ladder) {\r\n\t\tif (ladder) {\r\n\t\t\tthis.ladder = ladder;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.ladder = null;\r\n\t\t}\r\n\t}\r\n\tleaveLadder() {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tthis._useLadder(false);\r\n\t\t\tthis.contactLadder(null, null);//set no contact\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {boolean} flag - true: use, false: no use\r\n\t */\r\n\tuseLadder(flag) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tthis._useLadder(flag);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {boolean} flag - true: use, false: no use\r\n\t */\r\n\t_useLadder(flag) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tif (flag) {\r\n\t\t\tif (this.ladder && !this.$ladder_pj) {\r\n\t\t\t\tconst ladderBody = this.ladder.body;\r\n\r\n\t\t\t\tif (ladderBody.GetAngle() || ladderBody.GetAngularVelocity()) {\r\n\t\t\t\t\tthis.body.SetAngle(ladderBody.GetAngle());\r\n\t\t\t\t\tthis.body.SetFixedRotation(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state.ladder = true;\r\n\t\t\t\tthis.state.jump = false;\r\n\t\t\t\tthis.state.jump_count = 0;\r\n\r\n\t\t\t\tthis.body.SetAwake(true);\r\n\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\tthis.body.m_type = b2BodyType.b2_kinematicBody;\r\n\t\t\t\t//\r\n\t\t\t\tthis.foot_walk.SetAwake(true);\r\n\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t\tthis.foot_walk.m_type = b2BodyType.b2_kinematicBody;\r\n\r\n\t\t\t\tthis.walker.SetMotorSpeed(0);\r\n\r\n\t\t\t\t// create joint\r\n\r\n\t\t\t\tlet height = this.ladder.calcHeight() / $gv.CANVAS_SCALE;\r\n\r\n\t\t\t\t//let ground = world.ground.bodies[0];\r\n\r\n\t\t\t\tthis.setPosition(ladderBody.GetPosition().x, this.getPosition().y);\r\n\r\n\t\t\t\tlet pjd = new b2PrismaticJointDef();\r\n\t\t\t\t//pjd.Initialize(ladderBody, this.body, anchor, new b2Vec2(0, 1));\r\n\t\t\t\t{\r\n\t\t\t\t\tpjd.bodyA = ladderBody;\r\n\t\t\t\t\tpjd.bodyB = this.foot_walk;//this.body;\r\n\t\t\t\t\t//pjd.localAnchorA.Set(0, 0);\r\n\t\t\t\t\t//pjd.localAnchorB.Set(0, 0);\r\n\t\t\t\t\tpjd.localAxisA.Set(0, 1);\r\n\t\t\t\t\t//pjd.referenceAngle = 0;\r\n\t\t\t\t}\r\n\t\t\t\tpjd.lowerTranslation = -this.chara_profile.foot_width;\r\n\t\t\t\tpjd.upperTranslation = height + this.chara_profile.foot_width;\r\n\t\t\t\tpjd.enableLimit = true;\r\n\t\t\t\tpjd.maxMotorForce = this._getMass() * 1000;\r\n\r\n\t\t\t\t/** @type {b2PrismaticJoint} */\r\n\t\t\t\tlet pj = world.CreateJoint(pjd);\r\n\r\n\t\t\t\tthis.$ladder_pj = pj;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.ladder) {\r\n\t\t\t\t//this.ladder = null;\r\n\r\n\t\t\t\tif (this.state.ladder) {\r\n\t\t\t\t\tthis.state.ladder = false;\r\n\r\n\t\t\t\t\tthis.body.SetAwake(true);\r\n\t\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\t\tthis.body.m_type = b2BodyType.b2_dynamicBody;\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.foot_walk.SetAwake(true);\r\n\t\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t\t\tthis.foot_walk.m_type = b2BodyType.b2_dynamicBody;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.$ladder_pj) {\r\n\t\t\t\tworld.DestroyJoint(this.$ladder_pj);\r\n\t\t\t\tdelete this.$ladder_pj;\r\n\r\n\t\t\t\tthis.body.SetAngle(0);\r\n\t\t\t\tthis.body.SetFixedRotation(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremove_sticky() {\r\n\t\tif (this.$sticky_pj) {\r\n\t\t\tthis.body.m_world.DestroyJoint(this.$sticky_pj);\r\n\t\t\tthis.$sticky_pj = null;\r\n\t\t}\r\n\t}\r\n\r\n\tactionJump() {\r\n\t\tthis.state._begin_jump = true;\r\n\t\t++this.state.jump_count;\r\n\t}\r\n\t//actionWalk(front) {\r\n\t//}\r\n\tactionDropdown() {\r\n\t\tthis.leave_$fh = this.$foothold;\r\n\t\tthis.$foothold = null;\r\n\t\tthis.state.dropDown = true;\r\n\t\tthis.body.SetAwake(true);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Partial<ControlKeys>} keys\r\n\t */\r\n\tcontrol(keys) {\r\n\t\tif (!this._isCanMove()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.state.ladder && this.$ladder_pj) {\r\n\t\t\tconst ladderBody = this.ladder.body;\r\n\t\t\tconst speed = (window.$LADDER_SPEED || 1);\r\n\r\n\t\t\tif (ladderBody) {\r\n\t\t\t\tif (ladderBody.GetAngle() || ladderBody.GetAngularVelocity()) {\r\n\t\t\t\t\tthis.body.SetAngle(ladderBody.GetAngle());\r\n\t\t\t\t\tthis.body.SetFixedRotation(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//else {\r\n\t\t\t//\tdebugger;\r\n\t\t\t//}\r\n\r\n\t\t\tif (keys.up && !keys.down) {\r\n\t\t\t\tthis.state.ladder_move_dir = -1;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(true);\r\n\t\t\t\tthis.$ladder_pj.SetMotorSpeed(-speed);\r\n\t\t\t}\r\n\t\t\telse if (keys.down && !keys.up) {\r\n\t\t\t\tthis.state.ladder_move_dir = 1;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(true);\r\n\t\t\t\tthis.$ladder_pj.SetMotorSpeed(speed);\r\n\t\t\t}\r\n\t\t\telse {//stop\r\n\t\t\t\tthis.state.ladder_move_dir = 0;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(false);\r\n\r\n\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\t//\r\n\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t}\r\n\t\t\tif (keys.jump) {\r\n\t\t\t\tconst world = this.body.m_world;\r\n\t\t\t\tconst mass = this._getMass();\r\n\r\n\t\t\t\tif (keys.left && keys.right) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t\telse if (keys.left) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t\tworld.doAfterStep(() => {\r\n\t\t\t\t\t\t//const f = new b2Vec2(0, -world.m_gravity.y * mass);\r\n\t\t\t\t\t\t//this.body.ApplyForceToCenter(f, true);\r\n\t\t\t\t\t\tthis.body.ApplyLinearImpulseToCenter2(-speed * mass, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if (keys.right) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t\tworld.doAfterStep(() => {\r\n\t\t\t\t\t\t//const f = new b2Vec2(0, -world.m_gravity.y * mass);\r\n\t\t\t\t\t\t//this.body.ApplyForceToCenter(f, true);\r\n\t\t\t\t\t\tthis.body.ApplyLinearImpulseToCenter2(speed * mass, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.$ladder_pj) {\r\n\t\t\tdebugger\r\n\t\t\tthis.useLadder(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state.outOfControl) {\r\n\t\t\t\tthis.walker.EnableMotor(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.walker.EnableMotor(true);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.portal && keys.up) {\r\n\t\t\t\t//TODO: enter portal key: keys.enterPortal\r\n\t\t\t\tlet portal = this.portal;\r\n\t\t\t\tif (this._usePortal(portal)) {\r\n\t\t\t\t\tthis.portal = null;//使用完畢\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.ladder && (\r\n\t\t\t\t(keys.down && this.$foothold && this.ladder.body.GetLocalPoint(this.getPosition(), b2Vec2_temp).y <= 0) ||\r\n\t\t\t\t(keys.up && !this.$foothold && this.ladder.body.GetLocalPoint(this.getPosition(), b2Vec2_temp).y > 0))\r\n\t\t\t) {\r\n\t\t\t\tthis.state.ladder_move_dir = 0;//reset\r\n\t\t\t\tthis.useLadder(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst wheel_sp = this._walker_omega;\r\n\t\t\tconst velocity = this.body.GetLinearVelocity();//foot_walk\r\n\r\n\t\t\tif (!this.state.jump && !this.state.dropDown) {\r\n\t\t\t\t//dropDown\r\n\t\t\t\tif (keys.down && keys.jump) {\r\n\t\t\t\t\tthis.actionDropdown();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//趴下\r\n\t\t\t\tif (keys.down) {\r\n\t\t\t\t\tthis.state.prone = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.prone = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.state.prone = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (keys.left && !keys.right) {\r\n\t\t\t\tthis.state.walk = true;\r\n\t\t\t\tthis.state.front = -1;\r\n\t\t\t\tthis.walker.SetMotorSpeed(-wheel_sp);\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(true);//power on\r\n\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t}\r\n\t\t\telse if (keys.right && !keys.left) {\r\n\t\t\t\tthis.state.walk = true;\r\n\t\t\t\tthis.state.front = 1;\r\n\t\t\t\tthis.walker.SetMotorSpeed(wheel_sp);\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(true);//power on\r\n\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.state.walk = false;\r\n\r\n\t\t\t\tif (!this.state.jump) {\r\n\t\t\t\t\tlet vx = velocity.x;\r\n\t\t\t\t\tif (vx > 50 * b2_linearSlop) {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(-vx * Math.PI / 2 / Math.PI / this.chara_profile.width / 2);//煞車但無法止滑\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (vx < -50 * b2_linearSlop) {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(-vx * Math.PI / 2 / Math.PI / this.chara_profile.width / 2);//煞車但無法止滑\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(0);//stop motor\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.walker.SetMotorSpeed(0);//stop motor\r\n\t\t\t\t}\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_STOP_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(false);//power off\r\n\r\n\t\t\t\tif (this.state.止滑) {\r\n\t\t\t\t\tthis.sticky(this.getPosition());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (keys.jump && this._isCanJump()) {\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t\tthis.actionJump();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_isCanJump() {\r\n\t\treturn !this.state.jump && !this.isDrop();\r\n\t}\r\n\r\n\t_isCanMove() {\r\n\t\treturn !this.state.freeze && !this.state.knockback;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} increment_percent - increment_percent >= -100\r\n\t */\r\n\tsetMovementSpeed(increment_percent) {\r\n\t\tif (!(Number.isSafeInteger(increment_percent) || (!Number.isNaN(increment_percent) && Number.isFinite(increment_percent)))) {\r\n\t\t\tdebugger\r\n\t\t\tif (process.env.NODE_ENV !== '') {\r\n\t\t\t\tthrow new TypeError(\"increment_percent must is number\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet scale = (100 + increment_percent) / 100;\r\n\t\tif (scale > 0) {\r\n\t\t\tthis._setWalkerOmegaFromVelocity(MOVEMENT_VELOCITY * scale);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._setWalkerOmegaFromVelocity(0);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} speed - speed = pixel / second\r\n\t */\r\n\tsetMovementSpeedPixel(speed) {\r\n\t\tlet v = speed / $gv.CANVAS_SCALE;\r\n\t\tif (v > 0) {\r\n\t\t\tthis._walker_omega = v;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._walker_omega = 0;\r\n\t\t}\r\n\t}\r\n\t_setWalkerOmegaFromVelocity(movement_velocity) {\r\n\t\tthis._walker_omega = movement_velocity / (Math.PI * this.chara_profile.width) * Math.PI;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} increment_percent - increment_percent >= -100\r\n\t */\r\n\tsetjumpForce(increment_percent) {\r\n\t\tif (!(Number.isSafeInteger(increment_percent) || (!Number.isNaN(increment_percent) && Number.isFinite(increment_percent)))) {\r\n\t\t\tdebugger\r\n\t\t\tthrow new TypeError(\"increment_percent must is number\");\r\n\t\t}\r\n\r\n\t\tlet scale = (100 + increment_percent) / 100;\r\n\t\tif (scale <= 0) {\r\n\t\t\tthis.jump_force = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst gravity = this.body.GetWorld().GetGravity();\r\n\t\t\tthis.jump_force = JUMP_FORCE * scale;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\t_getMass() {\r\n\t\treturn this.body.GetMass() + this.foot_walk.GetMass();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} s\r\n\t */\r\n\tsetGravityScale(s) {\r\n\t\tthis.body.SetGravityScale(s);\r\n\t\tthis.foot_walk.SetGravityScale(s);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @returns {string}\r\n\t */\r\n\tget _body_category() {\r\n\t\treturn \"body\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tlet first_pos = new b2Vec2(1 / $gv.CANVAS_SCALE, -2 / $gv.CANVAS_SCALE);\r\n\t\tlet jmp_body_pos_y = first_pos.y + this.chara_profile.height * 0.75 * 0.5;\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tbdef.type = b2BodyType.b2_dynamicBody;\r\n\t\tbdef.bullet = true;//get real contact point\r\n\t\tbdef.position.Set(first_pos.x, first_pos.y);\r\n\t\tbdef.userData = this;\r\n\r\n\t\tfdef.userData = this;\r\n\r\n\t\t//create body\r\n\t\t{\r\n\t\t\tthis.body = world.CreateBody(bdef);\r\n\t\t\tthis.body.SetFixedRotation(true);\r\n\t\t}\r\n\t\tthis.body.$type = \"player\";\r\n\r\n\t\tfdef.filter.Copy(FilterHelper.get(this._body_category));\r\n\r\n\t\t//head\r\n\t\t{\r\n\t\t\tshape.SetAsBox(\r\n\t\t\t\tthis.chara_profile.width * 0.5,\r\n\t\t\t\tthis.chara_profile.height * 0.75 * 0.5,\r\n\t\t\t\tb2Vec2.ZERO,//new b2Vec2(0, 0),//\r\n\t\t\t\t0);\r\n\r\n\t\t\tfdef.density = this.chara_profile.density;\r\n\t\t\tfdef.friction = 0;\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tfdef.shape = shape;\r\n\t\t\t//\r\n\t\t\tthis.fixture = this.body.CreateFixture(fdef);\r\n\t\t\tthis.fixture.$type = \"player\";\r\n\t\t}\r\n\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"foot\"));\r\n\t\t//\r\n\t\t//create walker\r\n\t\t{\r\n\t\t\tbdef.type = b2BodyType.b2_dynamicBody;\r\n\t\t\tbdef.position.Set(first_pos.x, jmp_body_pos_y);\r\n\t\t\tthis.foot_walk = world.CreateBody(bdef);\r\n\r\n\t\t\tlet circle = new b2CircleShape();\r\n\t\t\tcircle.m_p.Set(0, 0);\r\n\t\t\tcircle.m_radius = this.chara_profile.foot_width;\r\n\t\t\tfdef.shape = circle;\r\n\t\t\tfdef.density = this.chara_profile.density;\r\n\t\t\t//fdef.filter = world.getFilterDefine(\"pl_ft_walk\");\r\n\t\t\tfdef.friction = FOOT_FRICTION;//walk\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tlet fixture = this.foot_walk.CreateFixture(fdef);\r\n\t\t\tfixture.$type = \"pl_ft_walk\";\r\n\r\n\t\t\tthis._set_foot_listener(fixture);\r\n\t\t}\r\n\t\tthis.foot_walk.$type = \"pl_ft_walk\";\r\n\r\n\t\t//j2\r\n\t\t{\r\n\t\t\tlet jd;\r\n\r\n\t\t\tif (PLAYER_USE_WHEEL_WALKER) {\r\n\t\t\t\tjd = new b2WheelJointDef();//b2WheelJointDef//b2RevoluteJointDef\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tjd = new b2RevoluteJointDef();//b2WheelJointDef//b2RevoluteJointDef\r\n\t\t\t}\r\n\r\n\t\t\tif (jd instanceof b2RevoluteJointDef) {\r\n\t\t\t\tjd.Initialize(this.body, this.foot_walk, new b2Vec2(first_pos.x, jmp_body_pos_y));\r\n\t\t\t}\r\n\t\t\tif (jd instanceof b2WheelJointDef) {\r\n\t\t\t\tjd.Initialize(this.body, this.foot_walk, new b2Vec2(first_pos.x, jmp_body_pos_y), new b2Vec2(0, -1));\r\n\t\t\t}\r\n\t\t\tjd.enableMotor = true;\r\n\t\t\tjd.maxMotorTorque = MOVEMENT_POWER;\r\n\t\t\t//jd.motorSpeed = 40;\r\n\t\t\tif (jd instanceof b2RevoluteJointDef) {\r\n\t\t\t\tjd.enableLimit = false;\r\n\t\t\t\tjd.lowerAngle = 0 * DEGTORAD;\r\n\t\t\t\tjd.upperAngle = -0 * DEGTORAD;\r\n\t\t\t\tjd.referenceAngle = 0;\r\n\t\t\t}\r\n\t\t\tif (jd instanceof b2WheelJointDef) {\r\n\t\t\t\tjd.frequencyHz = 10;//springs\r\n\t\t\t\tjd.dampingRatio = 1;//springs\r\n\t\t\t}\r\n\t\t\tthis.walker = world.CreateJoint(jd);\r\n\t\t}\r\n\t\t\r\n\t\tthis.body.addStep(this.Step.bind(this));\r\n\t\tthis.body.addAfterStep(this.AfterStep.bind(this));\r\n\t\t\r\n\t\tthis.setMovementSpeed(0);\r\n\t\tthis.setjumpForce(0);\r\n\t}\r\n\t\r\n\t/**\r\n\t * destroy this\r\n\t * @returns {void}\r\n\t */\r\n\t_destroy() {\r\n\t\t/** @type {World} world */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tif (this.body) {\r\n\t\t\tworld.DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"this already dead\");\r\n\t\t}\r\n\t\tif (this.foot_walk) {\r\n\t\t\tworld.DestroyBody(this.foot_walk);\r\n\t\t\tthis.foot_walk = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Fixture} fa - self\r\n\t * @param {b2Fixture} fb - other\r\n\t * @returns {boolean}\r\n\t */\r\n\t_isFromSelfContact(fa, fb) {\r\n\t\tlet a = fa.GetBody().GetUserData();\t// A data\r\n\t\tlet b = fb.GetBody().GetUserData();\t// B data\r\n\r\n\t\tif (a && b && a.body && b.body && a.body == b.body) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa - self\r\n\t * @param {b2Fixture} fb - other\r\n\t * @returns {boolean} - return true if from self and disable this contact\r\n\t */\r\n\t_ignoreSelfContact(contact, fa, fb) {\r\n\t\tif (this._isFromSelfContact(fa, fb)) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t_set_foot_listener(foot_fixture) {\r\n\t\tfoot_fixture.beginContact = this.__beginContact_walker;\r\n\t\tfoot_fixture.endContact = this.__endContact_walker;\r\n\t\tfoot_fixture.preSolve = this.__preSolve_walker;\r\n\t}\r\n\t\r\n\t__beginContact_walker(contact, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet targetBody = fb.m_body;\r\n\t\tif (targetBody) {\r\n\t\t\tswitch (targetBody.$type) {\r\n\t\t\t\tcase \"portal\":\r\n\t\t\t\t\tthis._beginContactPortal(fb.m_userData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__endContact_walker(contact, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet targetBody = fb.m_body;\r\n\t\tif (targetBody) {\r\n\t\t\tswitch (targetBody.$type) {\r\n\t\t\t\tcase \"portal\":\r\n\t\t\t\t\tthis._endContactPortal(fb.m_userData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__preSolve_walker(contact, oldManifold, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (fa.$type == \"pl_ft_walk\" && fb.$type == \"pl_ft_walk\") {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {MapPortal} portal */\r\n\t_beginContactPortal(portal) {\r\n\t\tthis.portal = portal;\r\n\r\n\t\tif (portal.enable) {\r\n\t\t\tif (portal.script) {\r\n\t\t\t\tconsole.log(\"goto map: \" + portal.getMap() + \"; \" + portal.script);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"goto map: \" + portal.getMap());\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"contact portal: %o\", portal);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {MapPortal} portal */\r\n\t_endContactPortal(portal) {\r\n\t\tif (this.portal == portal) {\r\n\t\t\tthis.portal = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 決定接觸哪一個foothold，忽略牆壁\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} foot_at\r\n\t * @returns {number}\r\n\t */\r\n\t__priority_foothold_contact(foothold, foot_at) {\r\n\t\tif (foothold.is_wall) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif (this.$foothold && this.$foothold.chain != foothold.chain) {\r\n\t\t\tif (this.$foothold != foothold && !this.state.dropDown) {\r\n\t\t\t\t// 接觸多個 foothold 以 \"下面\" 的為主，上坡時以 \"下(上)一個\" 為主\r\n\t\t\t\t// 忽略連續 foothold 重疊的點\r\n\t\t\t\tif (this._foot_at && foot_at.y < this._foot_at.y) {\r\n\t\t\t\t\tif ((!this.$foothold.prev || (this.$foothold.prev == foothold.id && foothold.y1 < this.$foothold.y1)) ||\r\n\t\t\t\t\t\t(!this.$foothold.next || (this.$foothold.next == foothold.id && foothold.y2 < this.$foothold.y2))\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//新的接觸\r\n\t\treturn 2;\r\n\t}\r\n\r\n\t/**\r\n\t * 決定接觸哪一個foothold，忽略牆壁\r\n\t * if foothold is wall then return true\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} foot_at\r\n\t */\r\n\t_which_foothold_contact(foothold, foot_at) {\r\n\t\tif (foothold.is_wall) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet priority = this.__priority_foothold_contact(foothold, foot_at);\r\n\t\tif (priority > 0) {\r\n\t\t\tif (!this._foothold_priority || priority >= this._foothold_priority) {\r\n\t\t\t\tthis._foothold = foothold;\r\n\t\t\t\tthis._foot_at = foot_at.Clone();\r\n\t\t\t\tthis._foothold_priority = priority;\r\n\t\t\t\t//this.sticky(foot_at);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor (let fc of this._foot_contact_list) {\r\n\t\t\t\t\tif (foothold == fc.foothold) {\r\n\t\t\t\t\t\tfc.priority = priority;\r\n\t\t\t\t\t\tfc.position = foot_at;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet foot_contact = new FootContact(foothold, foot_at, priority);\r\n\t\t\t\tthis._foot_contact_list.push(foot_contact);\r\n\t\t\t\tthis._foot_contact_list.sort((a, b) => a.priority - b.priority);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Vec2} anchor\r\n\t */\r\n\tsticky(anchor) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tif (this.$sticky_pj) {\r\n\t\t\t\treturn;\r\n\r\n\t\t\t\tworld.DestroyJoint(this.$sticky_pj);\r\n\t\t\t}\r\n\r\n\t\t\t//this.setPosition(anchor.x, anchor.y);\r\n\r\n\t\t\tlet pjd = new b2PrismaticJointDef();\r\n\t\t\tpjd.Initialize(world.mapBound_body, this.body, anchor, new b2Vec2(0, 1));\r\n\t\t\tif (0) {\r\n\t\t\t\tpjd.bodyA = world.mapBound_body;\r\n\t\t\t\tpjd.bodyB = this.foot_walk;//this.body;\r\n\t\t\t\t//pjd.localAnchorA.Set(0, 0);\r\n\t\t\t\t//pjd.localAnchorB.Set(0, 0);\r\n\t\t\t\tpjd.localAxisA.Set(0, 1);\r\n\t\t\t\t//pjd.referenceAngle = 0;\r\n\t\t\t}\r\n\t\t\tpjd.lowerTranslation = 0;\r\n\t\t\tpjd.upperTranslation = 0;\r\n\t\t\tpjd.enableLimit = true;\r\n\t\t\tpjd.maxMotorForce = this._getMass() * 1000;\r\n\r\n\t\t\t/** @type {b2PrismaticJoint} */\r\n\t\t\tlet pj = world.CreateJoint(pjd);\r\n\r\n\t\t\tthis.$sticky_pj = pj;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {boolean}\r\n\t */\r\n\tisDrop() {\r\n\t\treturn this.state.dropDown || this.state._drop;\r\n\t}\r\n\r\n\t_endContactFoothold() {\r\n\t\tfor (let i = 0; i < this._endContactFootholdList.length; ++i) {\r\n\t\t\tlet fh = this._endContactFootholdList[i];\r\n\r\n\t\t\tif (fh == this._$fallEdge) {\r\n\t\t\t\tthis._$fallEdge = null;\r\n\t\t\t}\r\n\t\t\telse if (fh == this._foothold) {\r\n\t\t\t\tthis._foothold = null;\r\n\t\t\t\tthis._foot_at = null;\r\n\t\t\t}\r\n\t\t\t//else if (fh.id == this._foothold.id) {\r\n\t\t\t//\tthis._foothold = null;\r\n\t\t\t//\tthis._foot_at = null;\r\n\t\t\t//}\r\n\r\n\t\t\tif (this.$foothold && fh == this.$foothold) {\r\n\t\t\t\tthis.prev_$fh = this.$foothold;\r\n\t\t\t\tthis.$foothold = null;\r\n\t\t\t}\r\n\t\t\tif (this.leave_$fh && this.leave_$fh == fh) {\r\n\t\t\t\tthis.leave_$fh = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._endContactFootholdList.length = 0;//clear\r\n\t}\r\n\r\n\t/**\r\n\t * before world::step\r\n\t * @param {number} stamp\r\n\t */\r\n\tStep(stamp) {\r\n\t\t// prepare contact\r\n\t\tthis.state._drop = false;\r\n\t\tthis._foothold = null;\r\n\t\tthis._foot_at = null;\r\n\r\n\t\t// apply state\r\n\t\tif (this.state.ladder) {\r\n\t\t\tthis.state.jump = false;\r\n\t\t\tthis.state.jump_count = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state._begin_jump) {\r\n\t\t\t\tconst mass = this._getMass();\r\n\t\t\t\tconst force = new b2Vec2(0, -mass * this.jump_force);\r\n\t\t\t\tthis.body.ApplyForceToCenter(force);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.knockback > 0) {\r\n\t\t\t\tthis.state.knockback -= stamp;\r\n\r\n\t\t\t\tif (this.state.knockback > 0) {\r\n\t\t\t\t\tthis.state.outOfControl = true;\r\n\t\t\t\t\tthis.walker.EnableMotor(false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.knockback = 0;\r\n\t\t\t\t\tthis.state.outOfControl = false;\r\n\t\t\t\t\tthis.walker.EnableMotor(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.state.invincible > 0) {\r\n\t\t\t\tthis.state.invincible -= stamp;\r\n\t\t\t\tif (this.state.invincible > 0) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.invincible = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.state.portal_cooldown) {\r\n\t\t\t\tthis.state.portal_cooldown -= stamp;\r\n\t\t\t\tif (this.state.portal_cooldown > 0) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.portal_cooldown = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * after world::step\r\n\t */\r\n\tAfterStep() {\r\n\t\t//this._endContactFoothold();\r\n\r\n\t\tif (this.state.ladder) {\r\n\t\t\tif (this.$ladder_pj) {\r\n\t\t\t\tconst upper = this.$ladder_pj.GetUpperLimit();\r\n\t\t\t\tconst lower =this.$ladder_pj.GetLowerLimit();\r\n\t\t\t\tconst translation = this.$ladder_pj.GetJointTranslation();\r\n\r\n\t\t\t\tif (this.state.ladder_move_dir > 0 && translation > upper) {//down\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.state.ladder_move_dir < 0 && translation < lower) {//up\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this.state.dropDown) {\r\n\t\t\t\tif (this.body.m_awakeFlag && this.foot_walk.m_awakeFlag) {\r\n\t\t\t\t\tthis.$foothold = this._foothold;//set or clear\r\n\t\t\t\t}\r\n\t\t\t\tif (!this._foothold && this._foot_contact_list.length) {//目前沒用，永遠不會被執行 ??\r\n\t\t\t\t\tlet max = this._foot_contact_list.pop();\r\n\t\t\t\t\tthis.$foothold = max.foothold;\r\n\t\t\t\t\tthis._foothold = max.foothold;\r\n\t\t\t\t\tthis._foot_at = max.position;\r\n\t\t\t\t\tthis._foothold_priority = max.priority;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.$foothold) {\r\n\t\t\t\t//this.body.SetAwake(false);\r\n\t\t\t\t//this.foot_walk.SetAwake(false);\r\n\r\n\t\t\t\tthis.state.jump = false;\r\n\t\t\t\tthis.state.jump_count = 0;\r\n\t\t\t\tif (this.$foothold == this._foothold) {\r\n\t\t\t\t\t//console.log(\"stable contact\");\r\n\t\t\t\t\t//debugger;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._foot_contact_list.length = 0;\r\n\r\n\t\t\t\tthis.state.jump = true;\r\n\t\t\t\tthis.state._begin_jump = false;\r\n\t\t\t\t\r\n\t\t\t\tif (!this._foothold) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//console.log(\"no stable contact\");\r\n\t\t\t\t\t//debugger;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tgetLayer() {\r\n\t\tlet layer = this.$foothold ? this.$foothold.layer : (this.prev_$fh ? this.prev_$fh.layer : (this.leave_$fh ? this.leave_$fh.layer : 5));\r\n\t\treturn this.state.ladder ? (layer + 1) : layer;\r\n\t}\r\n}\r\n\r\nclass PCharacter extends PCharacterBase {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tthis.chara = null;\r\n\t}\r\n\r\n\t/**\r\n\t * need set this.state.outOfControl = true\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tforceMove(moveX, moveY) {\r\n\t\t//TODO: calc move\r\n\t\tconst mass = this._getMass();\r\n\t\tconst move = new b2Vec2(moveX * mass, moveY * mass);\r\n\t\tthis.body.ApplyLinearImpulseToCenter(move);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t * @param {number} [kbTime=1000] - knockback time, unit is millisecond\r\n\t */\r\n\tknockback(moveX, moveY, kbTime = 1000) {\r\n\t\tconst front = this.state.front;\r\n\t\tlet fx, fy;\r\n\t\t\r\n\t\tfx = -moveX * front;\r\n\t\t//fy = this.state.jump ? moveY : -moveY;\r\n\t\tfy = -moveY;\r\n\r\n\t\tthis.forceMove(fx, fy);\r\n\t\tthis.state.knockback = kbTime;\r\n\t\tthis.state.outOfControl = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\t_create_anchor(world) {\r\n\t\tlet md = new b2MouseJointDef();\r\n\t\tmd.bodyA = world.ground.bodies[0];\r\n\t\tmd.bodyB = this.body;\r\n\t\tmd.target.Copy(this.getPosition());\r\n\t\tmd.maxForce = 1000 * this._getMass();\r\n\t\treturn world.CreateJoint(md);\r\n\t}\r\n\r\n\t/**\r\n\t * no anchor\r\n\t * experimental\r\n\t * @param {CharacterMoveElem} moveElem\r\n\t */\r\n\tmoveTo(moveElem) {\r\n\t\tconst body = this.body;\r\n\t\t\r\n\t\tthis.body.SetAwake(true);\r\n\t\tthis.foot_walk.SetAwake(true);\r\n\r\n\t\tif (moveElem.elapsed == 0) {\r\n\t\t\tbody.ConstantVelocityWorldCenter2(vx, vy);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst ALPHA = 0.7;\r\n\t\t\tconst ONE_MINUS_ALPHA = 1 - ALPHA;\r\n\t\t\tlet dx = moveElem.x - pos.x;\r\n\t\t\tlet dy = moveElem.y - pos.y;\r\n\t\t\tlet sx = dx / (moveElem.elapsed / $gv.FRAME_ELAPSED);//speed = pixel / second\r\n\t\t\tlet sy = dy / (moveElem.elapsed / $gv.FRAME_ELAPSED);\r\n\t\t\tlet oldVel = body.GetLinearVelocity();\r\n\r\n\t\t\tlet vx, vy;\r\n\r\n\t\t\tif (moveElem.pState.jump) {\r\n\t\t\t\tthis.setGravityScale(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setGravityScale(1);\r\n\t\t\t\t\r\n\t\t\t\tif (moveElem.pState.walk || sx) {\r\n\t\t\t\t\tthis.walker.EnableMotor(false);//this.$physics.walker.IsMotorEnabled() == true\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.walker.EnableMotor(true);//keep stop\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (sx) {\r\n\t\t\t\tif (moveElem.vx) {\r\n\t\t\t\t\tif (Math.sign(moveElem.vx) == Math.sign(sx)) {\r\n\t\t\t\t\t\tvx = oldVel.x * ONE_MINUS_ALPHA + moveElem.vx * ALPHA;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvx = oldVel.x * ONE_MINUS_ALPHA + sx * ALPHA;//修正座標\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvx = sx;//修正座標\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvx = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (sy) {\r\n\t\t\t\tif (moveElem.vy) {\r\n\t\t\t\t\tif (Math.sign(moveElem.vy) == Math.sign(sy)) {\r\n\t\t\t\t\t\tvy = oldVel.y * ONE_MINUS_ALPHA + moveElem.vy * ALPHA;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvy = oldVel.y * ONE_MINUS_ALPHA + sy * ALPHA;//修正座標\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvy = sy;//修正座標\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvy = 0;\r\n\t\t\t}\r\n\r\n\t\t\tbody.ConstantVelocityWorldCenter2(vx, vy);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\t/** @type {PPlayer[]} */\r\n\tvar PPlayer_instance_list = window.PPlayer_instance_list || [];\r\n\r\n\tif (PPlayer_instance_list) {\r\n\t\tfor (let pl of PPlayer_instance_list) {\r\n\t\t\tpl.__proto__ = PPlayer.prototype;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PPlayer extends PCharacter {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\tif (module.hot) {\r\n\t\t\tPPlayer_instance_list.push(this);\r\n\r\n\t\t\tconst super_destroy = super._destroy;\r\n\r\n\t\t\tthis._destroy = function () {\r\n\t\t\t\tsuper_destroy.call(this);\r\n\t\t\t\tPPlayer_instance_list.splice(PPlayer_instance_list.indexOf(this), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"x\", () => this.getPosition().x.toFixed(3) + \" * \" + $gv.CANVAS_SCALE + \" = \" + (this.getPosition().x * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"y\", () => this.getPosition().y.toFixed(3) + \" * \" + $gv.CANVAS_SCALE + \" = \" + (this.getPosition().y * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"jump\", () => this.state.jump);\r\n\t\twindow.SCREEN_PRINTLN(() => \"_drop\", () => this.state._drop);\r\n\t\twindow.SCREEN_PRINTLN(() => \"ddrop\", () => this.state.dropDown);\r\n\t\twindow.SCREEN_PRINTLN(() => \"$fh\", () => this.$foothold ? this.$foothold.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"$fh->c\", () => this.$foothold ? this.$foothold.chain.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"_fh\", () => this._foothold ? this._foothold.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"p$fh\", () => this.prev_$fh ? this.prev_$fh.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"leave_$fh\", () => this.leave_$fh ? this.leave_$fh.id : null);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"(jump && !$fh)\", () => this.state.jump && !this.$foothold);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"vel.x\", () => (this.body.m_linearVelocity.x * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"vel.y\", () => (this.body.m_linearVelocity.y * $gv.CANVAS_SCALE).toFixed(0));\r\n\t}\r\n\r\n\t/**\r\n\t * before world::step\r\n\t * @param {number} stamp\r\n\t */\r\n\tStep(stamp) {\r\n\t\tsuper.Step(stamp);\r\n\t\t\r\n\t\tif ($gv.input_keyDown['B'] == 1 && !$gv.mouse_dl) {\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y;\r\n\r\n\t\t\tthis.setPosition(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE, true);\r\n\t\t}\r\n\t\telse if ($gv.input_keyDown['B'] > 0 && $gv.mouse_dl) {\r\n\t\t\tconst center = $gv.m_viewRect.center;\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x - center.x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y - center.y;\r\n\r\n\t\t\tthis.body.SetLinearVelocity(new b2Vec2(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE));\r\n\t\t\tthis.foot_walk.SetLinearVelocity(new b2Vec2(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE));\r\n\t\t}\r\n\t\telse if ($gv.mouse_dm && $gv.mouse_dm % 12 == 1) {\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y;\r\n\t\t\tthis.setPosition(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE, true);\r\n\t\t}\r\n\t}\r\n\r\n\tget renderer() {\r\n\t\tdebugger\r\n\t\treturn this._$renderer;\r\n\t}\r\n\tset renderer(value) {\r\n\t\tthis._$renderer = value;\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\t/** @type {PRemoteCharacter[]} */\r\n\tvar PRemoteCharacter_instance_list = window.PRemoteCharacter_instance_list || [];\r\n\r\n\tif (PRemoteCharacter_instance_list) {\r\n\t\tfor (let pl of PRemoteCharacter_instance_list) {\r\n\t\t\tpl.__proto__ = PRemoteCharacter.prototype;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PRemoteCharacter extends PCharacter {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/** @type {b2MouseJoint} */\r\n\t\tthis._anchor = null;\r\n\r\n\t\tif (module.hot) {\r\n\t\t\tPRemoteCharacter_instance_list.push(this);\r\n\r\n\t\t\tconst super_destroy = super._destroy;\r\n\r\n\t\t\tthis._destroy = function () {\r\n\t\t\t\tsuper_destroy.call(this);\r\n\t\t\t\tPRemoteCharacter_instance_list.splice(PRemoteCharacter_instance_list.indexOf(this), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\r\n\t\tif (window.$io) {\r\n\t\t\tthis._anchor = this._create_anchor(world);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.moveTo = super.moveTo;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterMoveElem} moveElem\r\n\t */\r\n\tmoveTo(moveElem) {\r\n\t\tthis.body.SetAwake(true);\r\n\t\tthis.foot_walk.SetAwake(true);\r\n\t\t\r\n\t\t//if (this._anchor) {\r\n\t\t\tthis._anchor.m_targetA.x = moveElem.x;\r\n\t\t\tthis._anchor.m_targetA.y = moveElem.y;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\tsuper.moveTo(moveElem);\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\tmodule.hot.accept();\r\n}\r\n","﻿\r\nimport { IRenderer } from './IRenderer.js';\r\nimport { PPlayer } from './Physics/PPlayer.js';\r\nimport { NameLabel } from './Renderer/NameLabel.js';\r\n\r\n/**\r\n * Game object\r\n */\r\nexport class SceneObject {\r\n\tconstructor() {\r\n\t\t/** @type {string|number} */\r\n\t\tthis.$objectid = null;\t// playerName or objectID; ?? null if not in scene\r\n\r\n\t\t/** @type {number} - layer id */\r\n\t\tthis.$layer = null;\t//maybe override\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = null;\r\n\t\tObject.defineProperty(this, \"$physics\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: false,\r\n\t\t\twritable: true,\r\n\t\t\tvalue: null,\r\n\t\t});\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\t\r\n\t/** create physics, load resource, ... */\r\n\tcreate() {\r\n\t}\r\n\t/** destroy physics, ... */\r\n\tdestroy() {\r\n\t}\r\n\t\r\n\tset enablePhysics(value) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.$physics.enable = value;\r\n\t\t\tthis.$physics.state.freeze = !value;\r\n\t\t}\r\n\t}\r\n\tget enablePhysics() {\r\n\t\tif (this.$physics) {\r\n\t\t\treturn this.$physics.enable;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t_applyState() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tthis.renderer.render(renderer);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tconsole.log(this.$objectid + \" 被 \" + chara.$objectid + \" 攻擊，減少 \" + damage + \" HP\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * if (chara == null) ??\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} name\r\n\t * @param {string} labelStyle\r\n\t */\r\n\t__drawName(renderer, name, labelStyle) {\r\n\t\tif (!$gv.m_display_name_label) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (labelStyle && labelStyle != \"0\") {\r\n\t\t\tlet label = NameLabel.get(labelStyle);\r\n\t\t\tif (label && !label.$promise) {\r\n\t\t\t\tconst crr = this.renderer;\r\n\t\t\t\tlabel.draw(renderer, name, crr.x, crr.y);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.__drawName_default(renderer, name);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} name\r\n\t * @param {string} color\r\n\t * @param {string} bgColor\r\n\t */\r\n\t__drawName_default(renderer, name, color=\"#FFF\", bgColor=\"#000B\") {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst crr = this.renderer;\r\n\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\tctx.textAlign = \"start\";\r\n\r\n\t\tconst r = 2, h = 12;\r\n\t\tconst w = ctx.measureText(name).width + 3;\r\n\t\tconst x = Math.trunc(crr.x/* + crr.tx*/) - w * 0.5;//TODO: crr.tx and crr.ty ??\r\n\t\tconst y = Math.trunc(crr.y/* + crr.ty*/);\r\n\r\n\t\tconst left = x + r;\r\n\t\tconst _left = x;\r\n\t\tconst top = y;\r\n\t\tconst _top = y + r;\r\n\t\tconst _right = x + w;\r\n\t\tconst right = _right + r;\r\n\t\tconst bottom = y + r + h + r;\r\n\t\tconst _bottom = y + r + h;\r\n\r\n\t\tctx.beginPath();\r\n\t\t{\r\n\t\t\tctx.moveTo(left, top);\r\n\r\n\t\t\tctx.lineTo(_right, top);\r\n\t\t\tctx.arcTo(right, top, right, _top, r);\r\n\r\n\t\t\tctx.lineTo(right, _bottom);\r\n\t\t\tctx.arcTo(right, bottom, _right, bottom, r);\r\n\r\n\t\t\tctx.lineTo(left, bottom);\r\n\t\t\tctx.arcTo(_left, bottom, _left, _bottom, r);\r\n\r\n\t\t\tctx.lineTo(_left, _top);\r\n\t\t\tctx.arcTo(_left, top, left, top, r);\r\n\t\t}\r\n\t\tctx.fillStyle = bgColor;\r\n\t\tctx.fill();\r\n\t\t//ctx.strokeStyle = \"#000F\";\r\n\t\t//ctx.stroke();\r\n\r\n\t\tif (0) {//inner\r\n\t\t\tctx.fillStyle = \"yellow\";\r\n\t\t\tctx.strokeStyle = \"yellow\";\r\n\t\t\tctx.beginPath();\r\n\t\t\t{\r\n\t\t\t\tctx.moveTo(left, _top);\r\n\r\n\t\t\t\tctx.lineTo(_right, _top);\r\n\r\n\t\t\t\tctx.lineTo(_right, _bottom);\r\n\r\n\t\t\t\tctx.lineTo(left, _bottom);\r\n\r\n\t\t\t\tctx.closePath();\r\n\t\t\t}\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t\t\r\n\t\tctx.fillStyle = color;\r\n\t\tctx.fillText(name, left, (top + bottom) * 0.5);\r\n\t}\r\n}\r\n\r\n\r\n","﻿\r\nconst box2d = require(\"../../box2d.ts/build/Box2D.js\");\r\n\r\nconst { FilterHelper } = require(\"./Filter.js\");\r\n\r\nconst {\r\n\tb2Vec2,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact, b2Manifold, b2ContactImpulse,\r\n\tb2ContactListener\r\n} = box2d;\r\n\r\n\r\nwindow.$box2d = box2d;\r\n\r\nlet b2Vec2_temp = new b2Vec2();\r\n\r\n/** @type {string} */\r\nb2Body.prototype.$type = null;\r\n\r\nb2Body.prototype.Step = function (stamp) {\r\n\tif (this._on_step) {\r\n\t\tfor (let fn of this._on_step) {\r\n\t\t\tfn(stamp);\r\n\t\t}\r\n\t}\r\n}\r\nb2Body.prototype.AfterStep = function (stamp) {\r\n\tif (this._on_after_step) {\r\n\t\tfor (let fn of this._on_after_step) {\r\n\t\t\tfn(stamp);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {function():void} func\r\n */\r\nb2Body.prototype.addStep = function (func) {\r\n\tthis._on_step = this._on_step || [];\r\n\tthis._on_step.push(func);\r\n}\r\n\r\n/**\r\n * @param {function():void} func\r\n */\r\nb2Body.prototype.addAfterStep = function (func) {\r\n\tthis._on_after_step = this._on_after_step || [];\r\n\tthis._on_after_step.push(func);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.SetLinearVelocity2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.SetLinearVelocity(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.ApplyForceToCenter2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.ApplyForceToCenter(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.ApplyLinearImpulseToCenter2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.ApplyLinearImpulseToCenter(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVel)快速加速到'指定速度'(desiredVel)\r\n * @param {b2Vec2} desiredVel\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.Acceleration = function (desiredVel, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, b2Vec2_temp);\r\n\tlet m = this.GetMass();\r\n\tlet ix = m * velChange.x;\r\n\tlet iy = m * velChange.y;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(ix, iy);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVelX)快速加速到'指定速度'(desiredVel)\r\n * @param {number} desiredVelX\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.AccelerationX = function (desiredVelX, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChangeX = desiredVelX - sourceVel.x;\r\n\tlet m = this.GetMass();\r\n\tlet ix = m * velChangeX;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(ix, 0);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVelY)快速加速到'指定速度'(desiredVel)\r\n * @param {number} desiredVelY\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.AccelerationY = function (desiredVelY, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChangeY = desiredVelY - sourceVel.y;\r\n\tlet m = this.GetMass();\r\n\tlet iy = m * velChangeY;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(0, iy);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * 等速度運動\r\n * @param {b2Vec2} desiredVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocity = function (desiredVel, point) {\r\n\tthis.Acceleration(desiredVel, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * @param {number} desiredVelX\r\n * @param {number} desiredVelY\r\n * @param {number} pointX\r\n * @param {number} pointY\r\n */\r\nb2Body.prototype.ConstantVelocity2 = function (desiredVelX, desiredVelY, pointX, pointY) {\r\n\tconst desiredVel = new b2Vec2(desiredVelX, desiredVelY);\r\n\tconst point = new b2Vec2(pointX, pointY);\r\n\r\n\tconst sourceVel = this.GetLinearVelocity();\r\n\tconst m = this.GetMass();\r\n\r\n\tlet impulse = new b2Vec2();\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, impulse);\r\n\timpulse.x = m * velChange.x;\r\n\timpulse.y = m * velChange.y;\r\n\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * @param {number} desiredVelX\r\n * @param {number} desiredVelY\r\n */\r\nb2Body.prototype.ConstantVelocityWorldCenter2 = function (desiredVelX, desiredVelY) {\r\n\tconst desiredVel = new b2Vec2(desiredVelX, desiredVelY);\r\n\r\n\tconst sourceVel = this.GetLinearVelocity();\r\n\tconst m = this.GetMass();\r\n\r\n\tlet impulse = new b2Vec2();\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, impulse);\r\n\timpulse.x = m * velChange.x;\r\n\timpulse.y = m * velChange.y;\r\n\r\n\tthis.ApplyLinearImpulseToCenter(impulse, true);\r\n}\r\n\r\n/**\r\n * 等速度運動 X\r\n * @param{number} desiredVelX\r\n * @param{b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocityX = function (desiredVelX, point) {\r\n\tthis.AccelerationX(desiredVelX, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * 等速度運動 Y\r\n * @param {number} desiredVelY\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocityY = function (desiredVelY, point) {\r\n\tthis.AccelerationY(desiredVelY, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.beginContact = function (contact, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.endContact = function (contact, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Manifold} oldManifold\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.preSolve = function (contact, oldManifold, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2ContactImpulse} impulse\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.postSolve = function (contact, impulse, fa, fb) {\r\n}\r\n\r\n/** @returns {string} */\r\nb2Fixture.prototype.getOwnerID = function () {\r\n\tlet host = this.GetUserData();\r\n\tif (host && host.owner) {\r\n\t\treturn host.owner.id;\r\n\t}\r\n}\r\n\r\nclass FixtureContactListener {\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tbeginContact (contact, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tendContact (contact, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tpreSolve (contact, oldManifold, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2ContactImpulse} impulse\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tpostSolve (contact, impulse, fa, fb) {\r\n\t}\r\n}\r\n\r\n\r\n\r\nmodule.exports = Object.assign(box2d, {\r\n\tFixtureContactListener, FilterHelper\r\n});\r\n","﻿\r\nimport { b2Filter, b2ContactFilter } from \"../../box2d.ts/build/Box2D.js\";\r\n\r\n\r\n/** @type {{[string]:FilterHelper}} */\r\nlet filter_preset = {\r\n};\r\n\r\nlet next_category = 1;\r\n\r\nexport class FilterHelper extends b2Filter {\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\tignore(categoryName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.maskBits = (this.maskBits & ~preset.categoryBits) >>> 0;\r\n\r\n\t\tpreset.maskBits = (preset.maskBits & ~this.categoryBits) >>> 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\taddCategory(categoryName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.categoryBits = this.categoryBits | preset.categoryBits;\r\n\t}\r\n\r\n\t/**\r\n\t * @template T\r\n\t * @param {T extends keyof filter_preset} categoryName\r\n\t * @param {string} debugName\r\n\t */\r\n\tstatic get(categoryName, debugName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\treturn filter_preset.s_default;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (debugName) {\r\n\t\t\tlet debugCategory = filter_preset[\"s_\" + debugName];\r\n\t\t\tconsole.warn(\"filter: \" + debugName + \"%o\", debugCategory);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn preset;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\tstatic registerCategory(categoryName) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (filter_preset[\"s_\" + categoryName]) {\r\n\t\t\t\tlet msg = \"exist filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (next_category > 0x80000000) {\r\n\t\t\t\tlet msg = \"no empty filter preset\";\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName] = new FilterHelper();\r\n\r\n\t\tpreset.groupIndex = 0;\r\n\t\tpreset.categoryBits = next_category;\r\n\t\tpreset.maskBits = 0xFFFFFFFF;//all\r\n\r\n\t\tpreset.name = categoryName;\r\n\r\n\t\tnext_category = next_category << 1;\r\n\r\n\t\treturn preset;\r\n\t}\r\n\r\n\tstatic get next_category() {\r\n\t\treturn filter_preset;\r\n\t}\r\n\tstatic get filter_preset() {\r\n\t\treturn filter_preset;\r\n\t}\r\n}\r\n\r\nconst filter_table = [\r\n/*                 default  body  foothold  foot  bullet  pvp_bullet  mob  mob_bullet  portal  ladder  map_obj  map_border */\r\n/* default */    [ 1,       1,    1,        1,    1,      1,          1,   1,          1,      1,      1,       1,     ],\r\n/* body */       [ 1,       0,    0,        0,    0,      1,          1,   1,          0,      1,      1,       1,     ],\r\n/* foothold */   [ 1,       0,    0,        1,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* foot */       [ 1,       0,    1,        0,    0,      0,          0,   0,          1,      0,      0,       1,     ],\r\n/* bullet */     [ 1,       0,    0,        0,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/* pvp_bullet */ [ 1,       1,    0,        0,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/* mob */        [ 1,       1,    0,        0,    1,      1,          0,   0,          0,      0,      0,       0,     ],\r\n/* mob_bullet */ [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* portal */     [ 1,       0,    0,        1,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* ladder */     [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* map_obj */    [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* map_border */ [ 1,       1,    0,        1,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/*  */\r\n];\r\n\r\n(function init() {\r\n\tlet filter_list = [\r\n\t\tFilterHelper.registerCategory(\"default\"),\r\n\t\tFilterHelper.registerCategory(\"body\"),\r\n\t\tFilterHelper.registerCategory(\"foothold\"),\r\n\t\tFilterHelper.registerCategory(\"foot\"),\r\n\t\tFilterHelper.registerCategory(\"bullet\"),\r\n\t\tFilterHelper.registerCategory(\"pvp_bullet\"),\r\n\t\tFilterHelper.registerCategory(\"mob\"),\r\n\t\tFilterHelper.registerCategory(\"mob_bullet\"),\r\n\t\tFilterHelper.registerCategory(\"portal\"),\r\n\t\tFilterHelper.registerCategory(\"ladder\"),\r\n\t\tFilterHelper.registerCategory(\"map_obj\"),\r\n\t\tFilterHelper.registerCategory(\"map_border\"),\r\n\t];\r\n\r\n\tfor (let i = 0; i < filter_table.length; ++i) {\r\n\t\tfor (let j = 0; j < filter_table[i].length; ++j) {\r\n\t\t\tif (!filter_table[i][j]) {\r\n\t\t\t\tfilter_list[i].maskBits = (filter_list[i].maskBits & ~(1 << j)) >>> 0;//uint32\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n\r\n(function test() {\r\n\tlet contactFilter = new b2ContactFilter();\r\n\t\r\n\tfunction Fixture(filterName) {\r\n\t\treturn {\r\n\t\t\tGetFilterData: () => FilterHelper.get(filterName),\r\n\t\t\tGetBody: () => { return {\r\n\t\t\t\tGetType: () => 2,\r\n\t\t\t\tShouldCollideConnected: () => true,\r\n\t\t\t} },\r\n\t\t};\r\n\t}\r\n\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"body\"), Fixture(\"ladder\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"ladder\"), Fixture(\"body\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"foot\"), Fixture(\"portal\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"portal\"), Fixture(\"foot\"))) {\r\n\t\tdebugger;\r\n\t}\r\n})();\r\n\r\n","﻿\r\nimport {\r\n\tb2Vec2, b2AABB,\r\n\tb2World,\r\n\tb2Body,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2EdgeShape, b2PolygonShape, b2CircleShape,\r\n\tb2MouseJointDef,\r\n\tb2ContactListener, b2Contact,\r\n\tb2ParticleSystemDef, b2ParticleSystem, b2ParticleFlag, b2ParticleGroupDef\r\n} from \"./Physics.js\";\r\n\r\nimport DebugDraw from \"./DebugDraw.js\";\r\nimport { Ground } from \"./Ground.js\";\r\nimport { LadderRope, MapLadderRopeLoader } from \"./LadderRope.js\";\r\nimport { PPlayer, PRemoteCharacter } from \"./PPlayer.js\";\r\nimport { PMob } from \"./PMob.js\";\r\n\r\nimport { CharacterAnimationBase } from \"../Renderer/CharacterRenderer\";\r\n\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nwindow.$gravityAcc = 2000;\r\n\r\nwindow.$positionIterations = 3;\r\nwindow.$velocityIterations = 8;\r\nwindow.$particleIterations = 1;\r\n\r\nwindow.$particleRadius = 10;//unit is pixel\r\n\r\nexport const GRAVITY = new b2Vec2(0, window.$gravityAcc / $gv.CANVAS_SCALE);\r\n\r\n\r\nclass ContactListener extends b2ContactListener {\r\n\t/** @param {b2Contact} contact */\r\n\tBeginContact(contact) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.beginContact.call(fa.m_userData, contact, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.beginContact.call(fb.m_userData, contact, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/** @param {b2Contact} contact */\r\n\tEndContact(contact) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.endContact.call(fa.m_userData, contact, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.endContact.call(fb.m_userData, contact, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t */\r\n\tPreSolve(contact, oldManifold) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.preSolve.call(fa.m_userData, contact, oldManifold, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.preSolve.call(fb.m_userData, contact, oldManifold, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2ContactImpulse} impulse\r\n\t */\r\n\tPostSolve(contact, impulse) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.postSolve.call(fa.m_userData, contact, impulse, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.postSolve.call(fb.m_userData, contact, impulse, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n}\r\n\r\nexport class World extends b2World {\r\n\tconstructor() {\r\n\t\tsuper(GRAVITY);\r\n\r\n\t\t/** @type {DebugDraw} */\r\n\t\tthis.m_debugDraw = $gv.m_debugDraw;\r\n\t\tthis.SetDebugDraw(this.m_debugDraw);\r\n\r\n\t\tthis.SetContactListener(new ContactListener());\r\n\r\n\t\t//if (!window.$io) {\r\n\t\t//\tthis.player = null;\r\n\t\t//\tthis._player_rebirth();\r\n\t\t//\tthis.player.setPosition(0, 0, true);\r\n\t\t//}\r\n\r\n\t\tthis.ground = new Ground();\r\n\r\n\t\t/** @type {LadderRope[]} */\r\n\t\tthis.ladderRope = [];\r\n\t\t\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.mapBound_body = null;\r\n\t\t\r\n\t\tthis.stop = false;\r\n\t\t\r\n\t\tthis.$_mouseJoint = null;\r\n\r\n\t\t/** @type {(function():void)[]} */\r\n\t\tthis._onceAfterStep = [];\r\n\r\n\t\t/** @type {b2Body[]} */\r\n\t\tthis._destryBodyList = [];\r\n\r\n\t\tthis._DestroyBody = this.DestroyBody;\r\n\r\n\t\t/**\r\n\t\t * @param {b2Body} b\r\n\t\t */\r\n\t\tthis.DestroyBody = b => {\r\n\t\t\tif (this.m_locked) {\r\n\t\t\t\tthis._destryBodyList.push(b);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._DestroyBody(b);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.draw_foothold_path_count = 1;\r\n\t}\r\n\r\n\t$test_b2ParticleSystem() {\r\n\t\tconst particleType = b2ParticleFlag.b2_elasticParticle;//b2_waterParticle;\r\n\t\tconst particleSystemDef = new b2ParticleSystemDef();\r\n\t\t\r\n\t\t/** @type {b2ParticleSystem} */\r\n\t\tthis.m_particleSystem = this.CreateParticleSystem(particleSystemDef);\r\n\t\t\r\n\t\tthis.m_particleSystem.SetGravityScale(0);\r\n\t\tthis.m_particleSystem.SetRadius(10 / $gv.CANVAS_SCALE);\r\n\t\tthis.m_particleSystem.SetDamping(0.2);\r\n\t\t{\r\n\t\t\tconst shape = new b2CircleShape();\r\n\t\t\tshape.m_p.Set(0, 2);\r\n\t\t\tshape.m_radius = 3;\r\n\t\t\tconst pd = new b2ParticleGroupDef();\r\n\t\t\tpd.flags = particleType;\r\n\t\t\tpd.shape = shape;\r\n\t\t\tconst group = this.m_particleSystem.CreateParticleGroup(pd);\r\n\t\t\tif (pd.flags & b2ParticleFlag.b2_colorMixingParticle) {\r\n\t\t\t\tthis.ColorParticleGroup(group, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow.m_particleSystem = this.m_particleSystem;\r\n\t\t\r\n\t\tthis.$vbo_ps = null;\r\n\t}\r\n\r\n\t/**\r\n\t * after load map\r\n\t */\r\n\tasync load(map_raw_data) {\r\n\t\tthis.ground.load(map_raw_data, this);\r\n\t\tthis.ladderRope = MapLadderRopeLoader.load(map_raw_data, this);\r\n\t}\r\n\tunload() {\r\n\t\tif (this.IsLocked()) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.error(\"world is locked, world can not unload\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.ground.unload(this);\r\n\t\t\tthis.ladderRope.length = 0;\r\n\t\t\tthis.DestroyBody(this.mapBound_body);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {MapMob} mapMob\r\n\t */\r\n\tcreateMob(mapMob) {\r\n\t\tlet mob = new PMob(mapMob);\r\n\t\tmob._create(this);\r\n\t\treturn mob;\r\n\t}\r\n\tdestroyMob(mapMob) {\r\n\t\t//if (this != mapMob.$physics) {\r\n\t\t//\tdebugger;\r\n\t\t//\treturn false;\r\n\t\t//}\r\n\t\t\r\n\t\tmapMob.$physics._destroy(this);\r\n\t\tmapMob.$physics = null;\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tcreateNpc(mapNpc) {\r\n\t\treturn null;\r\n\t}\r\n\tdestroyNpc(mapNpc) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tcreatePortal(portal) {\r\n\t\tconst rect = portal.compute_rectangle(0);\r\n\t\tif (rect) {\r\n\t\t\tconst width = rect.width / 2 / $gv.CANVAS_SCALE * 0.4;\r\n\t\t\tconst height = rect.height / 2 / $gv.CANVAS_SCALE * 0.2;\r\n\r\n\t\t\tlet bdef = new b2BodyDef();\r\n\t\t\tlet fdef = new b2FixtureDef();\r\n\t\t\tlet shape;\r\n\r\n\t\t\tfdef.filter.Copy(FilterHelper.get(\"portal\"));\r\n\r\n\t\t\tbdef.userData = portal;\r\n\t\t\tbdef.type = b2BodyType.b2_staticBody;//b2_staticBody//b2_kinematicBody//b2_dynamicBody\r\n\t\t\tbdef.position.Set(\r\n\t\t\t\tportal.x / $gv.CANVAS_SCALE,\r\n\t\t\t\tportal.y / $gv.CANVAS_SCALE);\r\n\r\n\t\t\tlet body = this.CreateBody(bdef);\r\n\t\t\tbody.$type = \"portal\";\r\n\r\n\t\t\tshape = new b2PolygonShape();\r\n\r\n\t\t\tif (window.MAP_PORTAL_FULL_SIZE) {\r\n\t\t\t\tshape.SetAsBox(\r\n\t\t\t\t\trect.width / 2 / $gv.CANVAS_SCALE,\r\n\t\t\t\t\trect.height / 2 / $gv.CANVAS_SCALE,\r\n\t\t\t\t\tnew b2Vec2(-portal.textures[0].x / $gv.CANVAS_SCALE, -portal.textures[0].y / $gv.CANVAS_SCALE),\r\n\t\t\t\t\t0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.SetAsBox(\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\theight,\r\n\t\t\t\t\tnew b2Vec2(0, -height),\r\n\t\t\t\t\t0);\r\n\t\t\t}\r\n\r\n\t\t\tfdef.isSensor = true;\r\n\t\t\tfdef.shape = shape;\r\n\t\t\tfdef.filter = FilterHelper.get(\"portal\");\r\n\t\t\tfdef.userData = portal;\r\n\t\t\tfdef.$type = \"portal\";\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\tportal.body = body;\r\n\r\n\t\t\treturn body;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Rectangle} rect\r\n\t */\r\n\t_createMapBound(rect) {\r\n\t\tlet { left, top, right, bottom } = rect;\r\n\t\t\r\n\t\tleft /= $gv.CANVAS_SCALE;\r\n\t\tright /= $gv.CANVAS_SCALE;\r\n\t\ttop /= $gv.CANVAS_SCALE;\r\n\t\tbottom /= $gv.CANVAS_SCALE;\r\n\t\t\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\t//bdef.type = b2BodyType.b2_dynamicBody;\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2EdgeShape();\r\n\r\n\t\tfdef.$type = \"MapBorder\";\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"map_border\"));\r\n\r\n\t\tlet bb = this.CreateBody(bdef);\r\n\t\tbb.$type = \"MapBorder\";\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, top);\r\n\t\tshape.m_vertex2.Set(right, top);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, bottom);\r\n\t\tshape.m_vertex2.Set(right, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, top);\r\n\t\tshape.m_vertex2.Set(left, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\r\n\t\tshape.m_vertex1.Set(right, top);\r\n\t\tshape.m_vertex2.Set(right, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tif (this.player) {\r\n\t\t\tthis.player.setPosition((right + left) * 0.5, (bottom + top) * 0.5, true);\r\n\t\t}\r\n\r\n\t\tthis.mapBound_body = bb;\r\n\t}\r\n\r\n\t//_player_rebirth() {\r\n\t//\twindow.$player = this.player = new PPlayer(window.chara ? window.chara.renderer:null);\r\n\t//\tthis.player._create(this);\r\n\t//\r\n\t//\tdelete this.player.renderer;\r\n\t//\tObject.defineProperty(this.player, \"renderer\", {\r\n\t//\t\tget: function () {\r\n\t//\t\t\treturn window.chara ? window.chara.renderer : null;\r\n\t//\t\t}\r\n\t//\t});\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {SceneObject} sceneObject\r\n\t * @param {CharacterAnimationBase} renderer\r\n\t */\r\n\t$createPlayer(sceneObject, renderer) {\r\n\t\tif (!sceneObject || !renderer) {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"$createPlayer(sceneObject, renderer)\");\r\n\t\t}\r\n\t\tlet player = new PPlayer();\r\n\r\n\t\tplayer._create(this);\r\n\r\n\t\t//init ?\r\n\t\tplayer.chara = sceneObject;\r\n\t\tplayer.renderer = renderer;//??\r\n\r\n\t\tthis.player = player;\r\n\r\n\t\treturn player;\r\n\t}\r\n\t/**\r\n\t * @param {SceneObject} sceneObject\r\n\t * @param {CharacterAnimationBase} renderer\r\n\t */\r\n\t$createRemotePlayer(sceneObject, renderer) {\r\n\t\tif (!sceneObject || !renderer) {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"$createRemotePlayer(sceneObject, renderer)\");\r\n\t\t}\r\n\t\tlet player = new PRemoteCharacter();\r\n\r\n\t\tplayer._create(this);\r\n\r\n\t\t//init ?\r\n\t\tplayer.renderer = renderer;\r\n\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {function():void} func\r\n\t */\r\n\tonceUnlock(func) {\r\n\t\tif (this.m_locked) {\r\n\t\t\tthis._onceAfterStep.push(func);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfunc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * do once AfterStep\r\n\t * @param {function():void} func\r\n\t */\r\n\tdoAfterStep(func) {\r\n\t\tthis._onceAfterStep.push(func);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseDown(p) {\r\n\t\tif (this.$_mouseJoint != null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make a small box.\r\n\t\tlet aabb = new b2AABB();\r\n\t\tlet d = new b2Vec2();\r\n\t\td.Set(0.001, 0.001);\r\n\t\tb2Vec2.SubVV(p, d, aabb.lowerBound);\r\n\t\tb2Vec2.AddVV(p, d, aabb.upperBound);\r\n\r\n\t\tlet that = this;\r\n\t\tlet hit_fixture = null;\r\n\t\t\r\n\t\t// Query the world for overlapping shapes.\r\n\t\tthis.QueryAABB({\r\n\t\t\t/**\r\n\t\t\t * Called for each fixture found in the query AABB.\r\n\t\t\t * @param {b2Fixture} fixture\r\n\t\t\t * @returns false to terminate the query.\r\n\t\t\t */\r\n\t\t\tReportFixture(fixture) {\r\n\t\t\t\tlet body = fixture.GetBody();\r\n\t\t\t\tif (body.GetType() != b2BodyType.b2_staticBody) {\r\n\t\t\t\t\tlet inside = fixture.TestPoint(p);\r\n\t\t\t\t\tif (inside) {\r\n\t\t\t\t\t\thit_fixture = fixture;\r\n\r\n\t\t\t\t\t\t// We are done, terminate the query.\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Continue the query.\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Called for each fixture found in the query AABB.\r\n\t\t\t * @param {b2ParticleSystem} system\r\n\t\t\t * @param {number} index\r\n\t\t\t * @returns false to terminate the query.\r\n\t\t\t */\r\n\t\t\tReportParticle(system, index) {\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Called for each fixture found in the query AABB.\r\n\t\t\t * @param {b2ParticleSystem} system\r\n\t\t\t * @returns false to terminate the query.\r\n\t\t\t */\r\n\t\t\tShouldQueryParticleSystem(system) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}, aabb);\r\n\r\n\t\tif (hit_fixture) {\r\n\t\t\tlet body = hit_fixture.GetBody();\r\n\t\t\tlet md = new b2MouseJointDef();\r\n\t\t\tmd.bodyA = this.ground.bodies[0];\r\n\t\t\tmd.bodyB = body;\r\n\t\t\tmd.target.Copy(p);\r\n\t\t\tmd.maxForce = 1000 * body.GetMass();\r\n\t\t\tthis.$_mouseJoint = this.CreateJoint(md);\r\n\t\t\tbody.SetAwake(true);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseUp(p) {\r\n\t\tif (this.$_mouseJoint) {\r\n\t\t\tthis.DestroyJoint(this.$_mouseJoint);\r\n\t\t\tthis.$_mouseJoint = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseMove(p) {\r\n\t\tif (this.$_mouseJoint) {\r\n\t\t\tthis.$_mouseJoint.SetTarget(p);\r\n\t\t}\r\n\t}\r\n\t\r\n\t$_onMouseEvent() {\r\n\t\tconst x = ($gv.m_viewRect.left + $gv.mouse_x) / $gv.CANVAS_SCALE;\r\n\t\tconst y = ($gv.m_viewRect.top + $gv.mouse_y) / $gv.CANVAS_SCALE;\r\n\t\tconst p = new b2Vec2(x, y);\r\n\t\t\r\n\t\tif ($gv.mouse_dl) {\r\n\t\t\tthis.$_mouseDown(p);\r\n\t\t}\r\n\t\tif ($gv.mouse_ul) {\r\n\t\t\t$gv.mouse_ul = 0;\r\n\t\t\tthis.$_mouseUp(p);\r\n\t\t}\r\n\t\tif ($gv.mouse_move) {\r\n\t\t\t$gv.mouse_move = 0;\r\n\t\t\tthis.$_mouseMove(p);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.stop) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.$_onMouseEvent();\r\n\t\t\r\n\t\tfor (let body = this.GetBodyList(); body; body = body.m_next) {\r\n\t\t\tbody.Step(stamp);\r\n\t\t}\r\n\r\n\t\tsuper.Step(1 / $gv.MAX_FPS, window.$velocityIterations, window.$positionIterations, window.$particleIterations);\r\n\t\tfor (let body = this.GetBodyList(); body; body = body.m_next) {\r\n\t\t\tbody.AfterStep(stamp);\r\n\t\t}\r\n\t\tif (this._onceAfterStep) {\r\n\t\t\tthis._onceAfterStep.forEach(f => f());\r\n\t\t\tthis._onceAfterStep.length = 0;\r\n\t\t}\r\n\t\tif (this._destryBodyList) {\r\n\t\t\tthis._destryBodyList.forEach(b => this._DestroyBody(b));\r\n\t\t\tthis._destryBodyList.length = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = window.chara ? window.chara.$physics : this.player;\r\n\r\n\t\tif ($gv.m_display_physics_debug) {\r\n\t\t\tconst debugDraw = this.m_debugDraw;\r\n\t\t\tthis.m_debugDraw.m_ctx = ctx;\r\n\r\n\t\t\tconst w = ctx.canvas.width;\r\n\t\t\tconst h = ctx.canvas.height;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t\r\n\t\t\tctx.scale(debugDraw.canvasScale, debugDraw.canvasScale);\r\n\t\t\tctx.lineWidth /= debugDraw.canvasScale;\r\n\r\n\t\t\t// apply camera\r\n\t\t\tctx.scale(debugDraw.viewZoom, debugDraw.viewZoom);\r\n\t\t\tctx.lineWidth /= debugDraw.viewZoom;\r\n\r\n\t\t\tthis.DrawDebugData();\r\n\r\n\t\t\t//display player's front\r\n\t\t\tif (player && player.body) {\r\n\t\t\t\tconst pos = player.getPosition();\r\n\t\t\t\tctx.fillStyle = \"#F00A\";\r\n\t\t\t\t\r\n\t\t\t\t//test debugDraw.canvasScale\r\n\t\t\t\tif (player.state.front > 0) {\r\n\t\t\t\t\tctx.fillRect(pos.x, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse if (player.state.front < 0) {\r\n\t\t\t\t\tctx.fillRect(pos.x - 1, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tctx.fillRect(pos.x - 0.5, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\r\n\t\tif ($gv.m_display_particleSystem) {\r\n\t\t\tif (renderer.gl) {\r\n\t\t\t\t/** @type {WebGLRenderingContext} */\r\n\t\t\t\tconst gl = this.gl;\r\n\r\n\t\t\t\tif (!this.$vbo_ps) {\r\n\t\t\t\t\tlet vbo = gl.createBuffer();\r\n\r\n\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbo);\r\n\r\n\t\t\t\t\tconst count = this.m_particleSystem.GetParticleCount();\r\n\t\t\t\t\tconst buf = this.m_particleSystem.GetPositionBuffer();\r\n\r\n\t\t\t\t\tlet vertices = new Float32Array(count * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < count; i += 2) {\r\n\t\t\t\t\t\tvertices[i + 0] = buf[i].x;\r\n\t\t\t\t\t\tvertices[i + 1] = buf[i].y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n\r\n\t\t\t\t\tthis.$vbo_ps = vbo;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst count = this.m_particleSystem.GetParticleCount();\r\n\t\t\t\t\tconst buf = this.m_particleSystem.GetPositionBuffer();\r\n\r\n\t\t\t\t\tlet vertices = new Float32Array(count * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < count; i += 2) {\r\n\t\t\t\t\t\tvertices[i + 0] = buf[i].x;\r\n\t\t\t\t\t\tvertices[i + 1] = buf[i].y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let group = this.m_particleSystem.m_groupList; group; group = group.m_next) {\r\n\t\t\t\t\tlet particleCount = group.GetParticleCount();\r\n\t\t\t\t\tlet instanceOffset = group.GetBufferIndex();\r\n\t\t\t\t\tgl.drawArrays(gl.POINTS, instanceOffset, particleCount);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (ctx) {\r\n\t\t\t\tif ($gv.func) {\r\n\t\t\t\t\t$gv.func.call(this, ctx, renderer);\r\n\t\t\t\t\t//$gv.func = function (ctx) {\r\n\t\t\t\t\t//\tctx = ctx || $engine.ctx;\r\n\t\t\t\t\t//\tconst vertices = this.m_particleSystem.m_positionBuffer.data;\r\n\t\t\t\t\t//\tconst colorBuffer = this.m_particleSystem.m_colorBuffer.data;\r\n\t\t\t\t\t//\tconst weightBuffer = this.m_particleSystem.m_weightBuffer;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\tlet minWeight = Math.min.apply(this, weightBuffer.slice(0, 128));\r\n\t\t\t\t\t//\tlet maxWeight = Math.max.apply(this, weightBuffer.slice(0, 128)) - minWeight;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\tif (vertices.length > 2) {\r\n\t\t\t\t\t//\t\tlet length = vertices.length / 2;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\t\tctx.fillStyle = \"#0747\";\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\t\tfor (let i = 0; i < length - 2; i += 1) {\r\n\t\t\t\t\t//\t\t\tctx.beginPath();\r\n\t\t\t\t\t//\t\t\tctx.moveTo(vertices[i + 0].x * $gv.CANVAS_SCALE, vertices[i + 0].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.lineTo(vertices[i + 1].x * $gv.CANVAS_SCALE, vertices[i + 1].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.lineTo(vertices[i + 2].x * $gv.CANVAS_SCALE, vertices[i + 2].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.fillStyle = `hsla(87deg,${(weightBuffer[i] / maxWeight * 100).toFixed(0)}%,${(weightBuffer[i] / maxWeight * 50).toFixed(0)}%,${(weightBuffer[i] / maxWeight / 2).toFixed(2)})`\r\n\t\t\t\t\t//\t\t\t//ctx.fillStyle = colorBuffer[i].MakeStyleString();\r\n\t\t\t\t\t//\t\t\tctx.fill();\r\n\t\t\t\t\t//\t\t}\r\n\t\t\t\t\t//\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst vertices = this.m_particleSystem.m_positionBuffer.data;\r\n\t\t\t\t\tconst colorBuffer = this.m_particleSystem.m_colorBuffer.data;\r\n\t\t\t\t\tconst weightBuffer = this.m_particleSystem.m_weightBuffer.data;\r\n\r\n\t\t\t\t\trenderer.pushMatrix();\r\n\r\n\t\t\t\t\tconst r = window.$particleRadius;\r\n\t\t\t\t\tconst r2 = r * 2;\r\n\r\n\t\t\t\t\tif (!this.$particle_grd) {\r\n\t\t\t\t\t\tlet grd = ctx.createRadialGradient(r, r, 0, r, r, r2);\r\n\t\t\t\t\t\tgrd.addColorStop(0, \"#0744\");\r\n\t\t\t\t\t\tgrd.addColorStop(1, \"#07440\");\r\n\t\t\t\t\t\tthis.$particle_grd = grd;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let group = this.m_particleSystem.m_groupList; group; group = group.m_next) {\r\n\t\t\t\t\t\tfor (let i = group.m_firstIndex; i < group.m_lastIndex; ++i) {\r\n\t\t\t\t\t\t\tlet x1 = vertices[i].x * $gv.CANVAS_SCALE - r;\r\n\t\t\t\t\t\t\tlet y1 = vertices[i].y * $gv.CANVAS_SCALE - r;\r\n\r\n\t\t\t\t\t\t\trenderer.setTransform(1, 0, 0, 1, $gv.m_viewRect.left + x1, $gv.m_viewRect.top + y1);\r\n\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t\t\t\t//texture\r\n\r\n\t\t\t\t\t\t\t//ctx.arc(0, 0, r2, 0, 2 * Math.PI);\r\n\t\t\t\t\t\t\t//ctx.fillStyle = this.$particle_grd;\r\n\t\t\t\t\t\t\t//ctx.fill();\r\n\r\n\t\t\t\t\t\t\tctx.fillStyle = this.$particle_grd;\r\n\t\t\t\t\t\t\tctx.fillRect(r, r, r2 * 2, r2 * 2);\r\n\r\n\t\t\t\t\t\t\t//center\r\n\t\t\t\t\t\t\t//ctx.fillStyle = \"red\";\r\n\t\t\t\t\t\t\t//ctx.fillRect(0, 0, 1, 1);\r\n\r\n\t\t\t\t\t\t\t//border\r\n\t\t\t\t\t\t\t//ctx.strokeRect(-r, -r, r2, r2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.popMatrix();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($gv.m_display_foothold) {\r\n\t\t\tctx.save();\r\n\t\t\tthis.ground.$drawDebugInfo(renderer);\r\n\t\t\tif (player && player._foothold) {\r\n\t\t\t\tplayer._foothold.$drawDebugInfo2(renderer, \"#FF0\");\r\n\t\t\t}\r\n\r\n\t\t\tlet $foothold, $ladderRope;\r\n\t\t\tif (player) {\r\n\t\t\t\t$foothold = player.$foothold;\r\n\t\t\t\t$ladderRope = player.ladder;\r\n\t\t\t}\r\n\t\t\tif ($foothold && this.draw_foothold_path_count) {\r\n\t\t\t\t$foothold.$drawDebugInfo2(renderer, \"#F00\");\r\n\r\n\t\t\t\t//draw path\r\n\t\t\t\tlet count = this.draw_foothold_path_count;\r\n\t\t\t\tctx.lineWidth = 2.5;\r\n\t\t\t\tctx.strokeStyle = \"#00FE\";\r\n\t\t\t\tif (player.state.front > 0) {\r\n\t\t\t\t\t$foothold = this.ground.footholds[$foothold.next];\r\n\t\t\t\t\tfor (; $foothold; $foothold = this.ground.footholds[$foothold.next]) {\r\n\t\t\t\t\t\t$foothold._drawLine(ctx);\r\n\t\t\t\t\t\tif ((--count) <= 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (player.state.front < 0) {\r\n\t\t\t\t\t$foothold = this.ground.footholds[$foothold.prev];\r\n\t\t\t\t\tfor (; $foothold; $foothold = this.ground.footholds[$foothold.prev]) {\r\n\t\t\t\t\t\t$foothold._drawLine(ctx);\r\n\t\t\t\t\t\tif ((--count) <= 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ladderRope.forEach(lr => {\r\n\t\t\t\tconst width = lr.calcWidth();\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(lr.x - width * 0.5, lr.y1, width, lr.y2 - lr.y1);\r\n\t\t\t\tctx.fillStyle = lr == $ladderRope ? \"#E117\":\"#EB17\";\r\n\t\t\t\tctx.fill();\r\n\t\t\t});\r\n\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * https://github.com/google/LiquidFunPaint/blob/develop/src/com/google/fpl/liquidfunpaint/ParticleRenderer.java#L43\r\n * Renderer to draw particle water, objects, and wall. It draws particles as\r\n * fluid (or objects) by following three steps:\r\n * 1) Draws particles to a texture\r\n * 2) Blurs it out\r\n * 3) Applies threshold.\r\n */\r\n\r\n","﻿\r\nimport { LifeRenderer } from \"./LifeRenderer.js\";\r\n\r\n\r\nwindow.MobAnimationSpeed = 1;\r\n\r\nwindow.$mob_name = {};\r\n\r\n/**\r\n * Mob basic infomation\r\n * Mob antion(animation) collection\r\n */\r\nexport class MobRenderer extends LifeRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t//[\"info\",\"stand\",\"hit1\",\"die1\",\"skill1\",\"skill2\",\"skill3\",\"skill4\",\"skill5\",\"attack1\",\"attack2\",\"attack3\",\"attack4\",\"attack5\"]\r\n\t}\r\n\r\n\tstatic get __info() {\r\n\t\treturn {\r\n\t\t\t\"noFlip\": 1,\r\n\t\t\t\"level\": 230,\r\n\t\t\t\"maxHP\": \"??????\",\r\n\t\t\t\"maxMP\": 100000,\r\n\t\t\t\"speed\": 0,\r\n\t\t\t\"PADamage\": 22000,\r\n\t\t\t\"PDRate\": 300,\r\n\t\t\t\"MADamage\": 24000,\r\n\t\t\t\"MDRate\": 30,\r\n\t\t\t\"acc\": 9999,\r\n\t\t\t\"eva\": 750,\r\n\t\t\t\"pushed\": 1000000000,\r\n\t\t\t\"fs\": 10,\r\n\t\t\t\"summonType\": 1,\r\n\t\t\t\"category\": 1,\r\n\t\t\t\"elemAttr\": \"P2H2F2I2S2L2D2\",\r\n\t\t\t\"mobType\": \"3N\",\r\n\t\t\t\"firstAttack\": 1,\r\n\t\t\t\"hideHP\": 1,\r\n\t\t\t\"boss\": 1,\r\n\t\t\t\"hpTagColor\": 1,\r\n\t\t\t\"hpTagBgcolor\": 5,\r\n\t\t\t\"showNotRemoteDam\": 1,\r\n\t\t\t\"defaultHP\": \"측정불가\",\r\n\t\t\t\"defaultMP\": \"측정불가\",\r\n\t\t\t\"ignoreMoveImpact\": 1\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\tif (!MobRenderer._desc[id]) {\r\n\t\t\tlet base = MobRenderer._get_desc_base_path();\r\n\t\t\tlet url = [base, Number(id)].join(\"/\");\r\n\t\t\tlet desc = await $get.data(url);\r\n\t\t\tMobRenderer._desc[id] = desc;\r\n\t\t\treturn desc;\r\n\t\t}\r\n\t\treturn MobRenderer._desc[id];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t * @param {!string} id\r\n\t */\r\n\tasync load(id) {\r\n\t\tlet result = await super.load.apply(this, arguments);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tisFlyMob() {\r\n\t\treturn !!this._raw.flySpeed;\r\n\t}\r\n\t//get info() {\r\n\t//\treturn this._raw.info;\r\n\t//}\r\n\t\r\n\t_getFirstAttackName() {\r\n\t\tconst firstAttack = this._raw.info.firstAttack;\r\n\t\treturn \"skill\" + firstAttack;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tstamp *= window.MobAnimationSpeed;\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\t\r\n\tstatic get _animations() {\r\n\t\treturn ['\"stand\"', '\"fly\"', '\"move\"', '\"jump\"', \"`hit${$index}`\", \"`die${$index}`\", \"`skill${$index}`\"/*, \"`attack${$index}`\"*/];\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\treturn \"/String/Mob\";\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Mob\";\r\n\t}\r\n}\r\nMobRenderer._desc = {};\r\n\r\n","﻿\r\nimport { LifeRenderer } from './LifeRenderer.js';\r\n\r\nwindow.NpcAnimationSpeed = 1;\r\n\r\n//Npc: 9090004 => ad-tv\r\n\r\nexport class NpcRenderer extends LifeRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\tif (!NpcRenderer._desc[id]) {\r\n\t\t\tlet base = NpcRenderer._get_desc_base_path();\r\n\t\t\tlet url = [base, Number(id)].join(\"/\");\r\n\t\t\tlet desc = await $get.data(url);\r\n\t\t\tNpcRenderer._desc[id] = desc;\r\n\t\t\treturn desc;\r\n\t\t}\r\n\t\treturn NpcRenderer._desc[id];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tstamp *= window.NpcAnimationSpeed;\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\tstatic get _animations() {\r\n\t\treturn ['\"stand\"'/*, \"`condition${$index}`\"*/];\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\treturn \"/String/Npc\";\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Npc\";\r\n\t}\r\n};\r\nNpcRenderer._desc = {};\r\n","\r\nimport { ColorRGB, ImageDataHelper } from \"../IRenderer.js\";\r\nimport { Vec2, Rectangle } from \"../math.js\";\r\nimport { Sprite } from \"../Sprite.js\";\r\n\r\n\r\n/**\r\n * @param {HTMLImageElement} image\r\n */\r\nfunction whiteToRed(image) {\r\n\tlet helper = new ImageDataHelper();\r\n\tlet imagedata = helper.imageToImagedata(image);\r\n\r\n\tfor (let y = 0; y < imagedata.height; ++y) {\r\n\t\tfor (let x = 0; x < imagedata.width * 4; ++x) {\r\n\t\t\t//imagedata.data[y * imagedata.width * 4 + x * 4 + 0] = 0;\r\n\t\t\timagedata.data[y * imagedata.width * 4 + x * 4 + 1] = 0;\r\n\t\t\timagedata.data[y * imagedata.width * 4 + x * 4 + 2] = 0;\r\n\t\t\t//imagedata.data[y * imagedata.width * 4 + x * 4 + 3] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\treturn helper.imagedataToDataURL(imagedata);\r\n}\r\n\r\n/**\r\n * @param {number} min\r\n * @param {number} range\r\n * @returns {number} min + Random(-1, 1) * range\r\n */\r\nfunction rand_r(min, range) {\r\n\treturn min - range + Math.random() * range * 2;\r\n}\r\n\r\n/**\r\n * @param {ColorRGB} color\r\n * @param {ColorRGB} colorVar\r\n * @returns {ColorRGB}\r\n */\r\nfunction rand_color2i(color, colorVar) {\r\n\tconst col = ColorRGB.fromInt24(color);\r\n\tconst cv = ColorRGB.fromInt24(colorVar);\r\n\tconst r = Math.max(0, Math.min(rand_r(col.r, cv.r), 255));\r\n\tconst g = Math.max(0, Math.min(rand_r(col.g, cv.g), 255));\r\n\tconst b = Math.max(0, Math.min(rand_r(col.b, cv.b), 255));\r\n\t\r\n\treturn new ColorRGB(r, g, b);\r\n}\r\nfunction _rand_color2i(color, colorVar) {\r\n\treturn ColorRGB.fromInt24(Math.max(0, Math.min(rand_r(color, colorVar), 255)));\r\n}\r\n\r\nexport class Particle {\r\n\t/** @param {ParticleSystem} ps */\r\n\tconstructor(ps) {\r\n\t\tthis._initParam(ps);\r\n\r\n\t\tthis.life = 0;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.pos = new Vec2(0, 0);\r\n\t\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.scale = this.startScale;\r\n\t\tthis.color = new ColorRGB(255, 255, 255);\r\n\t}\r\n\t\r\n\t/** @param {ParticleSystem} ps */\r\n\t_initParam(ps) {\r\n\t\tthis.lifeMax = rand_r(ps.life, ps.lifeVar);\r\n\r\n\t\tconst angle = rand_r(ps.angle, ps.angleVar) * Math.PI / 180;//?rand_r\r\n\r\n\t\tif (1) {\r\n\t\t\tthis.startColor = rand_color2i(ps.startColor, ps.startColorVar);\r\n\t\t\tthis.color_d = rand_color2i(ps.endColor, ps.endColorVar).selfSub(this.startColor);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.startColor = _rand_color2i(ps.startColor, ps.startColorVar);\r\n\t\t\tthis.color_d = _rand_color2i(ps.endColor, ps.endColorVar).selfSub(this.startColor);\r\n\t\t}\r\n\r\n\t\t//unit: px\r\n\t\tconst sizeX = Math.max(1, ps.texture.width);\r\n\t\tconst sizeY = Math.max(1, ps.texture.height);\r\n\t\t//const size = Math.sqrt(sizeX ** 2 + sizeY ** 2);\r\n\t\tconst size = sizeX == 1 ? sizeY:(sizeY == 1 ? 1 : Math.min(sizeX, sizeY));\r\n\r\n\t\tthis.startScale = rand_r(ps.startSize, ps.startSizeVar) / size;\r\n\t\tconst endScale = rand_r(ps.endSize, ps.endSizeVar) / size;\r\n\t\tthis.scale_d = endScale - this.startScale;\r\n\r\n\t\tthis.startX = rand_r(ps.posX, ps.posVarX);\r\n\t\tthis.startY = rand_r(ps.posY, ps.posVarY);\r\n\r\n\t\tthis.emitterMode = ps.emitterType ? 1 : 0;\r\n\r\n\t\t// Mode A: Gravity + tangential accel + radial accel\r\n\t\tif (!this.emitterMode) {//Particle.EMITTER_MODE.GRAVITY\r\n\t\t\t// gravity\r\n\t\t\tthis.gravity = new Vec2(ps.GRAVITY.x, ps.GRAVITY.y);\r\n\r\n\t\t\t// speed\r\n\t\t\tconst speed = rand_r(ps.GRAVITY.speed, ps.GRAVITY.speedVar);\r\n\t\t\t\r\n\t\t\t/** @type {Vec2} - velocity */\r\n\t\t\tthis.dir = new Vec2(Math.cos(angle) * speed, -Math.sin(angle) * speed);\r\n\r\n\t\t\t// radial acceleration\r\n\t\t\tthis.radialAccel = rand_r(ps.GRAVITY.radialAccel || 0, ps.GRAVITY.radialAccelVar || 0);\r\n\r\n\t\t\t// tangential acceleration\r\n\t\t\tthis.tangentialAccel = rand_r(ps.GRAVITY.tangentialAccel || 0, ps.GRAVITY.tangentialAccelVar || 0);\r\n\r\n\t\t\t// rotation is dir\r\n\t\t\tthis.rotationIsDir = ps.GRAVITY.rotationIsDir ? true : false;\r\n\t\t}\r\n\t\telse if (this.emitterMode == 1) {\r\n\t\t\talert(\"Particle.EMITTER_MODE.RADIUS\");\r\n\t\t}\r\n\t}\r\n\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tconst dt = stamp / 1000;\r\n\t\tconst tp = Math.max(0, Math.min(this.life / this.lifeMax, 1));\r\n\r\n\t\t// update position\r\n\t\t{\r\n\t\t\tlet radial;\r\n\r\n\t\t\t// radial acceleration\r\n\t\t\tif (this.pos.x || this.pos.y) {\r\n\t\t\t\tradial = (new Vec2(this.pos.x, this.pos.y)).normalize();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tradial = new Vec2(0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tlet tangential = radial.clone();\r\n\t\t\tradial = radial.mul(this.radialAccel);\r\n\r\n\t\t\t// tangential acceleration\r\n\t\t\tlet newy = tangential.x;\r\n\t\t\ttangential.x = -tangential.y;\r\n\t\t\ttangential.y = newy;\r\n\r\n\t\t\ttangential = tangential.mul(this.tangentialAccel);\r\n\r\n\t\t\tlet _radial = radial.add(tangential);\r\n\t\t\t_radial = _radial.add(this.gravity);\r\n\t\t\t_radial = _radial.mul(dt);\r\n\t\t\t\r\n\t\t\tthis.dir = this.dir.add(_radial);\r\n\r\n\t\t\tlet _dir = this.dir.mul(dt);\r\n\t\t\tthis.pos = this.pos.add(_dir);\r\n\t\t}\r\n\r\n\t\tthis.scale = Math.max(0, this.startScale + this.scale_d * tp);\r\n\t\tthis.color = ColorRGB.add(this.startColor, ColorRGB.scale(this.color_d, tp));\r\n\t\tthis.opacity = 1 - tp;\r\n\t\t\r\n\t\tthis.life += stamp;\r\n\t}\r\n\tisEnd() {\r\n\t\treturn this.life >= this.lifeMax;\r\n\t}\r\n\tdraw(renderer, texture, mx, my) {\r\n\t\tconst scale = this.scale;\r\n\t\tconst x = (this.startX + this.pos.x + mx);\r\n\t\tconst y = (this.startY + this.pos.y + my);\r\n\t\t\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\r\n\t\tlet color = this.color.toHSV();\r\n\t\trenderer.drawColoredGraph2(texture, x, y, scale, scale, color);\r\n\t}\r\n}\r\n\r\nclass _ParticleGroupData {\r\n\tconstructor() {\r\n\t\tthis.GRAVITY = new Vec2();\r\n\t\tthis.life = 0;\r\n\t\tthis.lifeVar = 0;\r\n\t\tthis.duration = 0;\r\n\t\tthis.totalParticle = 0;\r\n\t}\r\n}\r\n\r\nexport class ParticleGroup extends _ParticleGroupData {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {Particle[]} */\r\n\t\tthis.particles = [];\r\n\r\n\t\t/** @type {number} time_in_ms:float */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} timeElapsed_in_ms:float */\r\n\t\tthis.delta = 0;\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = Infinity;\r\n\t\t\r\n\t\tthis.duration = -1;//Infinity\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet pg = new ParticleGroup();\r\n\t\tObject.assign(pg, this);\r\n\t\tpg.particles = [];\r\n\t\tpg.time = 0;\r\n\t\tpg.delta = 0;\r\n\t\treturn pg;\r\n\t}\r\n\r\n\tevaluate() {\r\n\t\tlet totalTime = this.totalParticle * this.delay;\r\n\r\n\t\tfor (let i = 0; i < this.totalParticle; ++i) {\r\n\t\t\tconst particle = new Particle(this);\r\n\t\t\tconst t = totalTime - i * this.delay;\r\n\t\t\tparticle.life += t;\r\n\t\t\tparticle.update(t);\r\n\t\t\tparticle.life = t;\r\n\t\t\tthis.particles.push(particle);\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync load(particle_name) {\r\n\t\tthis.particleName = particle_name;\r\n\r\n\t\t/** @type ParticleGroupData */\r\n\t\tlet data = await $get.data(this._particle_path);\r\n\t\t\r\n\t\tObject.assign(this, data);\r\n\r\n\t\tthis.GRAVITY.x = data.GRAVITY.x;\r\n\t\tthis.GRAVITY.y = data.GRAVITY.y;\r\n\r\n\t\tthis.life = data.life * 1000;\r\n\t\tthis.lifeVar = data.lifeVar * 1000;\r\n\t\tthis.duration = data.duration * 1000;\r\n\r\n\t\t//this.totalParticle = 2;//debug\r\n\t\tthis.delay = this.life / this.totalParticle;\r\n\r\n\t\tif (_experimental_particle) {\r\n\t\t\tconst that = this;\r\n\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\tlet image = new Image();\r\n\t\t\t\timage.onload = function () {\r\n\t\t\t\t\tlet texture = new Sprite(data.texture);\r\n\t\t\t\t\tif (_experimental_particle === true) {\r\n\t\t\t\t\t\ttexture._url = whiteToRed(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttexture._url = \"data:image/svg+xml;utf-8,\" + encodeURIComponent(`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${this.naturalWidth}\" height=\"${this.naturalHeight}\">\r\n\t<defs>\r\n\t\t<mask id=\"Mask\">\r\n\t\t\t<image xlink:href=\"${new URL(\"images\" + that._texture_base_path, window.location).href}\"/>\r\n\t\t</mask>\r\n\t</defs>\r\n\t<g>\r\n\t\t<rect width=\"${this.naturalWidth}\" height=\"${this.naturalHeight}\" fill=\"red\" mask=\"url(#Mask)\"/>\r\n\t</g>\r\n</svg>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.texture = texture;\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t\timage.src = \"images\" + that._texture_base_path;\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.texture = new Sprite(data.texture);\r\n\t\t\tthis.texture._url = \"images\" + this._texture_base_path;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tif (this.particles.length < this.totalParticle && (!this.time || this.time > this.delay)) {\r\n\t\t\tthis.particles.push(new Particle(this));\r\n\t\t\tthis.time = 0;\r\n\t\t}\r\n\t\t\r\n\t\tthis.particles = this.particles.filter(particle => {\r\n\t\t\tif (particle.isEnd()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparticle.update(stamp);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.time += stamp;\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn (this.delta > this.duration && this.duration != -1);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Rectangle} viewRect\r\n\t * @param {number} mx - translate x\r\n\t * @param {number} my - translate y\r\n\t */\r\n\trender(renderer, viewRect, mx, my) {\r\n\t\tconst ctx = renderer.ctx;\r\n\r\n\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x), Math.trunc(-$gv.m_viewRect.y));\r\n\t\tif (this.blendFuncDst != 6 || this.blendFuncSrc != 5) {\r\n\t\t\tctx.globalCompositeOperation = \"lighter\";\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < this.particles.length; ++i) {\r\n\t\t\tconst particle = this.particles[i];\r\n\t\t\tif (!particle.isEnd()) {\r\n\t\t\t\tconst x = this.x + mx;\r\n\t\t\t\tconst y = this.y + my;\r\n\t\t\t\tconst hw = this.texture.width * particle.scale;\r\n\t\t\t\tconst hh = this.texture.height * particle.scale;\r\n\t\t\t\t\r\n\t\t\t\tif (!viewRect || viewRect.collide4f2(x + particle.startX + particle.pos.x, y + particle.startY + particle.pos.y, hw, hh)) {\r\n\t\t\t\t\tparticle.draw(renderer, this.texture, x, y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//reset\r\n\t\tctx.globalCompositeOperation = \"source-over\";\r\n\t\trenderer.globalAlpha = 1;\r\n\t}\r\n\t\r\n\tget _particle_path() {\r\n\t\treturn [\"/Effect/particle\", this.particleName].join(\"/\");\r\n\t}\r\n\tget _texture_base_path() {\r\n\t\treturn [this._particle_path, \"texture\"].join(\"/\");\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n","﻿\r\nimport { AddInitTask } from \"../init.js\";\r\n\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\nimport { LifeRenderer } from \"./Renderer/LifeRenderer.js\";\r\nimport { MobRenderer } from \"./Renderer/MobRenderer.js\";\r\nimport { NpcRenderer } from \"./Renderer/NpcRenderer.js\";\r\n\r\nimport { ParticleGroup } from \"./Renderer/ParticleSystem.js\";\r\n\r\nimport { World } from \"./Physics/World.js\";\r\nimport { Ground } from \"./Physics/Ground.js\";\r\nimport { PMob } from \"./Physics/PMob.js\";\r\nimport { SceneObject } from \"./SceneObject.js\";\r\n\r\n\r\nwindow.enable_skeletal_anim = true;\r\n\r\n/**\r\n * map sprite data\r\n */\r\nconst map_sprite = {\r\n\tBack: {},\r\n\tObj: {},\r\n\tTile: {},\r\n};\r\n\r\nwindow.$map_sprite = map_sprite;\r\n\r\n$gv.allQuest = {};\r\n\r\nasync function map_load_package(cat, pack) {\r\n\tif (!cat || !pack) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!map_sprite[cat][pack]) {\r\n\t\tlet url = `/Map/${cat}/${pack}`;\r\n\t\t\r\n\t\tmap_sprite[cat][pack] = await $get.data(url);\r\n\r\n\t\tif (map_sprite[cat][pack] == null) {\r\n\t\t\tconsole.warn(\"Empty package: \" + url);\r\n\t\t}\r\n\t}\r\n\tif (map_sprite[cat][pack]) {\r\n\t\treturn map_sprite[cat][pack];\r\n\t}\r\n\t//throw new Error();\r\n}\r\n\r\n\r\n/**\r\n * Map texture\r\n */\r\nclass MapTexture extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t * @param {!MapTexture} texture0\r\n\t */\r\n\tconstructor(_raw, url, texture0) {\r\n\t\tsuper(_raw, url);\r\n\t\t//this.className = _path;\r\n\r\n\t\ttexture0 = texture0 || MapTexture.raw_default;\r\n\t\t\r\n\t\tthis.a0 = this._get(-1, \"a0\", Number);\r\n\t\tthis.a1 = this._get(-1, \"a1\", Number);\r\n\r\n\t\tthis.movetype = this._get(texture0.movetype, \"moveType\", Number);\r\n\t\tthis.movew = this._get(texture0.movew, \"moveW\", Number);\r\n\t\tthis.moveh = this._get(texture0.moveh, \"moveH\", Number);\r\n\t\tthis.movep = this._get(texture0.movep, \"moveP\", Number);\r\n\t\tthis.mover = this._get(texture0.mover, \"moveR\", Number);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} f - flip\r\n\t * @param {number} px - position.x:int\r\n\t * @param {number} py - position.y:int\r\n\t * @param {number} time - movement_animation:float\r\n\t * @param {number} delta - graph_animation:float\r\n\t * @param {maple_scene_label} border\r\n\t */\r\n\tdraw(renderer, f, px, py, time, delta) {\r\n\t\tlet ratio = time / this.delay;\r\n\t\tlet alpha = (0 <= this.a0 || 0 <= this.a1 ? ((0 > this.a0 ? 0 : this.a0) * (1.0 - ratio) + (0 > this.a1 ? 0 : this.a1) * ratio) : 255.0);\r\n\t\tlet angle = 0;\r\n\r\n\t\tswitch (this.movetype) {\r\n\t\t\tcase 1: px = px + this.movew * Math.sin(0 == this.movep ? (delta / 1000.0) : (delta * 2.0 * Math.PI / this.movep)); break;\r\n\t\t\tcase 2: py = py + this.moveh * Math.sin(0 == this.movep ? (delta / 1000.0) : (delta * 2.0 * Math.PI / this.movep)); break;\r\n\t\t\tcase 3: if (0 != this.mover) angle = delta / this.mover; break;\r\n\t\t}\r\n\t\t\r\n\t\tlet ctx = renderer.ctx;\r\n\t\tfunction axis(x, y, w, h, c1, c2) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t\tctx.lineTo(x + w, y);\r\n\t\t\tstroke(c1, c2);\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t\tctx.lineTo(x, y + h);\r\n\t\t\tstroke(c2, c1);\r\n\t\t}\r\n\t\tfunction stroke(c1, c2) {\r\n\t\t\tctx.lineWidth = 3;\r\n\t\t\tctx.strokeStyle = c1;\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t\trenderer.loadIdentity();\r\n\t\trenderer.translate(Math.trunc(-$gv.m_viewRect.x + 0.5), Math.trunc(-$gv.m_viewRect.y + 0.5));\r\n\t\t{\r\n\t\t\trenderer.globalAlpha = Math.max(0, Math.min(alpha / 255, 1));\r\n\r\n\t\t\trenderer._drawRotaGraph(this, px, py, angle, f);\r\n\t\t}\r\n\t}\r\n}\r\nMapTexture.raw_default = {\r\n\ta0: -1,\r\n\ta1: -1,\r\n\tmovetype: 0,\r\n\tmovew: 0,\r\n\tmoveh: 0,\r\n\tmovep: 0,\r\n\tmover: 0,\r\n};\r\n\r\n/**\r\n * Map clip-texture\r\n */\r\nclass MapTextureClip extends MapTexture {\r\n\tconstructor(_raw, url) {\r\n\t\tsuper(_raw, url);\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.clip = new Rectangle();//zero Rectangle\r\n\t}\r\n}\r\n\r\nclass MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tif (_raw == null) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.error(_raw);\r\n\t\t}\r\n\t\tthis._raw = _raw;\r\n\r\n\r\n\t\t/** @type {MapTexture[]} */\r\n\t\tthis.textures = [];\r\n\r\n\t\t/** @type {number} int */\r\n\t\tthis.frame = 0;\r\n\r\n\t\t/** @type {number} time_in_ms:float */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} timeElapsed_in_ms:float */\r\n\t\tthis.delta = 0;\r\n\r\n\r\n\t\t/** @type {{[questId:string]: number}} */\r\n\t\tthis.quest = _raw.quest;\r\n\r\n\t\tfor (let qid in _raw.quest) {\r\n\t\t\tif (!$gv.allQuest[qid]) {\r\n\t\t\t\t$gv.allQuest[qid] = new Set();\r\n\t\t\t}\r\n\t\t\t$gv.allQuest[qid].add(_raw.quest[qid]);\r\n\t\t}\r\n\t\t\r\n\t\tthis._load_object_info();\r\n\t\tthis._load_back_info();\r\n\t\tthis._load_tile_info();\r\n\r\n\t\tthis.aabb = null;\r\n\t\tthis.display_aabb = false;\r\n\t\tthis.aabb_color = null;\r\n\t\t\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tthis.__max_repeat_count = 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_load_object_info() {\r\n\t\t/** @type{number} obj-type */\r\n\t\tthis.type = this._get(0, \"sign\", Number);\r\n\r\n\t\t/** @type{number} x */\r\n\t\tthis.x = this._get(0, \"x\", Number);\r\n\r\n\t\t/** @type{number} y */\r\n\t\tthis.y = this._get(0, \"y\", Number);\r\n\r\n\t\t/** @type{number} z */\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\t/** @type{number} zM */\r\n\t\tthis.zM = this._get(0, \"zM\", Number);\r\n\r\n\t\t/** @type{number} flip */\r\n\t\tthis.f = this._get(0, \"f\", Number);\r\n\t\t\r\n\t\t/** @type{name} named object */\r\n\t\tthis.name = this._raw.name;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;//data url //debug\r\n\t}\r\n\t_load_back_info() {\r\n\t\t/** @type {number} move type */\r\n\t\tthis.typeb = this._get(0, \"type\", Number);\r\n\t\tif (this.typeb < 0 || this.typeb > 7) {\r\n\t\t\talert(\"MapBackBase.typeb: \" + this.typeb);\r\n\t\t\tconsole.warn(\"MapBackBase.typeb: \" + this.typeb);\r\n\t\t}\r\n\r\n\t\t/** @type {number} a */\r\n\t\tthis.a = this._get(0, \"a\", Number);\r\n\r\n\t\t/** @type {number} rx */\r\n\t\tthis.rx = this._get(0, \"rx\", Number);\r\n\r\n\t\t/** @type {number} ry */\r\n\t\tthis.ry = this._get(0, \"ry\", Number);\r\n\r\n\t\t/** @type {number} center y */\r\n\t\tthis.cx = this._get(0, \"cx\", Number);\r\n\r\n\t\t/** @type {number} center y */\r\n\t\tthis.cy = this._get(0, \"cy\", Number);\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.backTags = this._raw.backTags;\r\n\t}\r\n\t_load_tile_info() {\r\n\t\t/** @type{number} flow */\r\n\t\tthis.flow = this._get(0, \"flow\", Number);\r\n\t\t\r\n\t\tif (this.flow & 1 && !this.cx) {\r\n\t\t\tthis.cx = 1000;\r\n\t\t}\r\n\t\tif (this.flow & 2 && !this.cy) {\r\n\t\t\tthis.cy = 1000;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {Promise}\r\n\t */\r\n\tload() {\r\n\t\tlet texture0 = this._load_texture(0, null);\r\n\t\tthis.textures[0] = texture0;\r\n\r\n\t\tfor (let i = 1; i in this._texture_raw; ++i) {//not array\r\n\t\t\tthis.textures[i] = this._load_texture(i, texture0);\r\n\t\t}\r\n\t\tthis.__calc_aabb();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t */\r\n\t_load_texture() {\r\n\t\t//nothing\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tunload() {\r\n\t\tthis.textures = [];\r\n\t}\r\n\t\r\n\t__calc_aabb() {\r\n\t\tif (this.textures.length >= 1) {\r\n\t\t\tlet mover = 0;\r\n\t\t\tfor (let i = 0; i < this.textures.length; ++i) {\r\n\t\t\t\tlet texture = this.textures[i];\r\n\t\t\t\tmover = mover | texture.mover;\r\n\t\t\t}\r\n\t\t\tconst aabb = this.compute_max_rectangle();\r\n\t\t\tif (mover) {\r\n\t\t\t\tconst r = Math.round(Math.sqrt(aabb.width ** 2 + aabb.height ** 2));\r\n\t\t\t\tconst hr = Math.round(r * 0.5);\r\n\t\t\t\tthis.aabb = new Rectangle(this.x - hr, this.y - hr, r, r);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.aabb = aabb;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (propertyName in this._raw) {\r\n\t\t\tif (converter) {\r\n\t\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this._raw[propertyName];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 1) {\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.textures[this.frame].delay) {\r\n\t\t\t\tthis.frame = ++this.frame;\r\n\r\n\t\t\t\tthis.time = 0;\r\n\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tthis.frame = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\r\n\t\tif ($gv.m_editor_mode && this.aabb) {\r\n\t\t\tthis.$editor_mouse();\r\n\t\t}\r\n\t}\r\n\t_update_and_preload(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\t\t\r\n\t\tif (fc > 1) {\r\n\t\t\tconst texture = this.textures[this.frame];\r\n\r\n\t\t\tthis.time = this.time + stamp;\r\n\t\t\t\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.time > texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame;\r\n\r\n\t\t\t\tthis.time = 0;\r\n\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tthis.frame = 0;\r\n\r\n\t\t\t\t\tdelete this.update;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst next_texture = this.textures[this.frame + 1];\r\n\t\t\tif (next_texture && !next_texture.isLoaded()) {\r\n\t\t\t\tnext_texture.__loadTexture();\r\n\t\t\t}\r\n\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t\t\r\n\t\tif ($gv.m_editor_mode && this.aabb) {\r\n\t\t\tthis.$editor_mouse();\r\n\t\t}\r\n\t}\r\n\t$editor_mouse() {\r\n\t\tconst vrect = $gv.m_viewRect;\r\n\t\tconst mcx = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\tconst mcy = $gv.m_viewRect.top + $gv.mouse_y;\r\n\t\tif (this.typeb == 0 && this.aabb.collide4f2(mcx, mcy, 1, 1))\r\n\t\t{\r\n\t\t\tthis.display_aabb = true;\r\n\t\t\tif ($gv.mouse_dl == 1 && (window.m_selected_object != this || window.m_selected_object == null)) {\r\n\t\t\t\tthis.$select();\r\n\t\t\t}\r\n\t\t\telse if (window.m_hover_object == null) {\r\n\t\t\t\twindow.m_hover_object = this;\r\n\t\t\t\tthis.aabb_color = \"rgba(0,255,0,0.25)\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.aabb_color = \"rgba(0,0,255,0.25)\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.$unselect();\r\n\t\t}\r\n\t\tif (window.m_selected_object == this) {\r\n\t\t\tthis.display_aabb = true;\r\n\t\t\tthis.aabb_color = \"rgba(255,0,0,0.5)\";\r\n\t\t}\r\n\t}\r\n\t$select() {\r\n\t\tif (window.m_selected_object) {\r\n\t\t\twindow.m_selected_object.$unselect();//prev\r\n\t\t}\r\n\t\twindow.m_selected_object = this;\r\n\t\twindow.m_hover_object = null;\r\n\t\t$gv.mouse_dl = 0;\r\n\t}\r\n\t$unselect() {\r\n\t\tthis.display_aabb = false;\r\n\t}\r\n\t$isRepeatX() {\r\n\t\treturn this.typeb == 1 || this.typeb == 4;\r\n\t}\r\n\t$isRepeatY() {\r\n\t\treturn this.typeb == 2 || this.typeb == 5;\r\n\t}\r\n\t\r\n\tcompute_rectangle(index) {\r\n\t\tconst texture = this.textures[index];\r\n\t\tif (texture) {\r\n\t\t\tconst width = texture.width;\r\n\t\t\tconst height = texture.height;\r\n\r\n\t\t\treturn new Rectangle(this.x - (this.f ? -texture.x + width : texture.x), this.y - texture.y, width, height);\r\n\t\t}\r\n\t}\r\n\tcompute_max_rectangle() {\r\n\t\tif (this.textures.length > 0) {\r\n\t\t\tlet { left, top, right, bottom } = this.compute_rectangle(0);\r\n\t\t\t\t\r\n\t\t\tfor (let j = 1; j < this.textures.length; ++j) {\r\n\t\t\t\tlet rect = this.compute_rectangle(j);\r\n\t\t\t\t\r\n\t\t\t\tleft = Math.min(left, rect.left);\r\n\t\t\t\ttop = Math.min(top, rect.top);\r\n\t\t\t\tright = Math.max(right, rect.right);\r\n\t\t\t\tbottom = Math.max(bottom, rect.bottom);\r\n\t\t\t}\r\n\t\t\treturn Rectangle.parse(left, top, right, bottom);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} index_of_texture\r\n\t * @param {number} mx - move x\r\n\t * @param {number} my - move x\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t__draw_texture(renderer, index_of_texture, mx, my, viewRect) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((--this.__max_repeat_count) <= 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this.typeb != 0 || (!this.aabb || this.aabb.collide(viewRect))) {\r\n\t\t\tlet texture = this.textures[index_of_texture];\r\n\r\n\t\t\tif (index_of_texture && !texture.isLoaded()) {\r\n\t\t\t\t// find loaded texture\r\n\t\t\t\tfor (let i = index_of_texture - 1; i >= 0; --i) {\r\n\t\t\t\t\ttexture = this.textures[index_of_texture];\r\n\t\t\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttexture.draw(renderer, this.f, this.x + mx, this.y + my, this.time, this.delta);//MapleSceneTexture#draw\r\n\t\t}\r\n\t\t\r\n\t\tif ($gv.m_display_selected_object && $gv.m_editor_mode && this.aabb && this.display_aabb) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\t\t\tconst x = Math.trunc((-viewRect.left + 0.5) + this.aabb.left);\r\n\t\t\tconst y = Math.trunc((-viewRect.top + 0.5) + this.aabb.top);\r\n\t\t\t\r\n\t\t\trenderer.loadIdentity();\r\n\r\n\t\t\trenderer.globalAlpha = 1;\r\n\t\t\t\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x, y, this.aabb.width, this.aabb.height);\r\n\t\t\tctx.fillStyle = this.aabb_color || \"rgba(20,255,20,0.5)\";//\r\n\t\t\tctx.fill();\r\n\t\t\t\r\n\t\t\tctx.lineWidth = 3;\r\n\t\t\t//ctx.lineCap = \"round\";\r\n\r\n\t\t\tctx.setLineDash([3, 3]);\r\n\t\t\tctx.lineDashOffset = 0;\r\n\t\t\tctx.strokeStyle = \"rgba(0,0,0,0.5)\";\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.setLineDash([3, 3]);\r\n\t\t\tctx.lineDashOffset = 3;\r\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.5)\";\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.setLineDash([]);\r\n\t\t\tctx.lineWidth = 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @protected\r\n\t * @param {IRenderer} renderer\r\n\t * @param {int} mx\r\n\t * @param {int} my\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t__draw(renderer, mx, my, viewRect) {\r\n\t\tthis.__draw_texture(renderer, this.frame, mx, my, viewRect);//MapleSceneTexture#draw\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} horizontal\r\n\t * @param {boolean} vertical\r\n\t * @param {number} mx - int\r\n\t * @param {number} my - int\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t_draw(renderer, horizontal, vertical, mx, my, viewRect) {\r\n\t\tlet texture = this.textures[this.frame];\r\n\t\tif (texture == null) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// viewRect - canvas rectangle\r\n\t\tlet { left, top, right, bottom } = viewRect;\r\n\t\t// image position\r\n\t\tlet ix = this.x - (this.f ? -texture.x + texture.width : texture.x);\r\n\t\tlet iy = this.y - texture.y;\r\n\t\t// tile size\r\n\t\tlet tw = 0 == this.cx ? texture.width : this.cx;\r\n\t\tlet th = 0 == this.cy ? texture.height : this.cy;\r\n\t\t// tile area\r\n\t\tlet x1 = left - (tw + (left - mx - ix) % tw);\r\n\t\tlet y1 = top - (th + (top - my - iy) % th);\r\n\t\tlet x2 = right + (tw - (right - mx - ix) % tw);\r\n\t\tlet y2 = bottom + (th - (bottom - my - iy) % th);\r\n\t\t\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tthis.__max_repeat_count = 1024;\r\n\t\t}\r\n\r\n\t\tif (horizontal)\r\n\t\t\tif (vertical)\r\n\t\t\t\tfor (let yy = y1; yy < y2; yy = yy + th)\r\n\t\t\t\t\tfor (let xx = x1; xx < x2; xx = xx + tw)\r\n\t\t\t\t\t\tthis.__draw(renderer, xx - ix, yy - iy, viewRect);\r\n\t\t\telse\r\n\t\t\t\tfor (let xx = x1; xx < x2; xx = xx + tw)\r\n\t\t\t\t\tthis.__draw(renderer, xx - ix, my, viewRect);\r\n\t\telse if (vertical)\r\n\t\t\tfor (let yy = y1; yy < y2; yy = yy + th)\r\n\t\t\t\tthis.__draw(renderer, mx, yy - iy, viewRect);\r\n\t\telse\r\n\t\t\tthis.__draw(renderer, mx, my, viewRect);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif (!this.textures.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet mrx = (this.rx + 100) * center.x / 100;\r\n\t\tlet mry = (this.ry + 100) * center.y / 100;\r\n\r\n\t\tswitch (this.typeb) {\r\n\t\t\tcase 0: this._draw(renderer, false, false, mrx, mry, viewRect); break;\r\n\t\t\tcase 1: this._draw(renderer, true, false, mrx, mry, viewRect); break;\r\n\t\t\tcase 2: this._draw(renderer, false, true, mrx, mry, viewRect); break;\r\n\t\t\tcase 3: this._draw(renderer, true, true, mrx, mry, viewRect); break;\r\n\t\t\tcase 4: this._draw(renderer, true, false, Math.trunc(this.delta / 200 * this.rx), mry, viewRect); break;\r\n\t\t\tcase 5: this._draw(renderer, false, true, mrx, Math.trunc(this.delta / 200 * this.ry), viewRect); break;\r\n\t\t\tcase 6: this._draw(renderer, true, true, Math.trunc(this.delta / 200 * this.rx), mry, viewRect); break;\r\n\t\t\tcase 7: this._draw(renderer, true, true, mrx, Math.trunc(this.delta / 200 * this.ry), viewRect); break;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _texture_base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nclass MapObject extends MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t\r\n\t\tif (this._raw.cx != null && (!this._raw.ry || this._raw.ry == -100)) {\r\n\t\t\tif (this._raw.rx) {//!= null && != 0\r\n\t\t\t\tif (this._raw.cy != null) {\r\n\t\t\t\t\tthis.typeb = 6;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.typeb = 4;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.typeb = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._raw.cy != null && (!this._raw.rx || this._raw.rx == -100)) {\r\n\t\t\tif (this._raw.ry) {//!= null && != 0\r\n\t\t\t\tif (this._raw.cx != null) {\r\n\t\t\t\t\tthis.typeb = 7;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.typeb = 5;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.typeb = 2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t * @returns {MapTexture}\r\n\t */\r\n\t_load_texture(i, texture0) {\r\n\t\tconst null_url = undefined;\r\n\t\tlet path = [\"/Map\", \"Obj\", this._texture_base_path, i].join(\"/\");\r\n\r\n\t\tlet texture = new MapTexture(this._texture_raw[i], null_url, texture0);\r\n\t\ttexture._url = path;\r\n\r\n\t\treturn texture;\r\n\t}\r\n\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.oS, this._raw.l0, this._raw.l1, this._raw.l2].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * textures; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry {\r\n\t\t\treturn map_sprite.Obj[this._raw.oS][this._raw.l0][this._raw.l1][this._raw.l2];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass MapParticle extends MapObject {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {ParticleGroup[]} */\r\n\t\tthis.groups = [];\r\n\t}\r\n\t\r\n\tasync load(particle_name) {\r\n\t\tlet pg = new ParticleGroup();\r\n\t\t\r\n\t\tawait pg.load(particle_name);\r\n\r\n\t\tlet keys = Object.keys(this._raw)\r\n\t\t\t.map(i => {\r\n\t\t\t\tlet n = parseInt(i, 10);\r\n\t\t\t\tif (Number.isSafeInteger(n)) {\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.warn(\"MapParticle.\" + particle_name + \".id: \" + i);\r\n\t\t\t\treturn null;\r\n\t\t\t})\r\n\t\t\t.filter(i => i != null);\r\n\t\t\t\r\n\t\tfor (let i of keys) {\r\n\t\t\tthis.groups[i] = pg.clone();\r\n\t\t\tthis.groups[i].x = this._raw[i].x;\r\n\t\t\tthis.groups[i].y = this._raw[i].y;\r\n\t\t\tthis.groups[i].evaluate();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tfor (let i = 0; i < this.groups.length; ++i) {\r\n\t\t\tconst pg = this.groups[i];\r\n\t\t\tpg.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tfor (let i = 0; i < this.groups.length; ++i) {\r\n\t\t\tconst pg = this.groups[i];\r\n\t\t\tlet mx = (this.rx + 100) * center.x / 100;\r\n\t\t\tlet my = (this.ry + 100) * center.y / 100;\r\n\t\t\tpg.render(renderer, viewRect, mx, my);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{particle:{[name:string]:{}}}} mapRawData\r\n\t * @param {SceneMap} sceneMap\r\n\t */\r\n\tstatic construct(mapRawData, sceneMap) {\r\n\t\tlet tasks = [];\r\n\t\tlet particleList = [];\r\n\t\tfor (let particleName in mapRawData.particle) {\r\n\t\t\tlet particleRaw = mapRawData.particle[particleName];\r\n\t\t\tlet mpp = new MapParticle(particleRaw);\r\n\t\t\ttasks.push(mpp.load(particleName));\r\n\t\t\tparticleList.push(mpp);\r\n\t\t}\r\n\t\tsceneMap.particleList = particleList;\r\n\t\treturn tasks;\r\n\t}\r\n}\r\n\r\nclass MapObjectSkeletalAnim extends MapObject {\r\n\tconstructor(_raw, url) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {SSAnim} */\r\n\t\tthis.ssanim = null;\r\n\t\t/** @type {string} */\r\n\t\tthis._fname = null;\r\n\t\t\r\n\t\t///** @type{number} tags */\r\n\t\t//this._tags = this._get(0, \"tags\", String);\r\n\t}\r\n\t/** @type {string} */\r\n\tget _folder() {\r\n\t\tconst raw = this._raw;\r\n\t\t//[\"Obj\"\t ][obj.oS][obj.l0][obj.l1][obj.l2][0    ][\"\"]\r\n\t\treturn `/Map/Obj/${raw.oS}/${raw.l0}/${raw.l1}/${raw.l2}`;\r\n\t}\r\n\tasync load() {\r\n\t\tif (SSAnim) {\r\n\t\t\tconst raw = this._raw;\r\n\t\t\tlet ssanim;\r\n\t\t\t\r\n\t\t\tssanim = new SSAnim();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tawait ssanim.load(this._folder);\r\n\t\t\t\tssanim.update(0);//init pos data\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (raw.spineRandomStart) {\r\n\t\t\t\tlet t = ssanim.anim_length * Math.random();\r\n\t\t\t\tssanim.setAnimTime(t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst r = Math.round(Math.sqrt(ssanim.width ** 2 + ssanim.height ** 2));\r\n\t\t\tconst hr = Math.round(r * 0.5);\r\n\t\t\tthis.aabb = new Rectangle(this.x - hr, this.y - hr, r, r);\r\n\t\t\t\r\n\t\t\tthis.ssanim = ssanim;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tunload() {\r\n\t\tif (this.ssanim) {\r\n\t\t\tthis.ssanim.unload();\r\n\t\t\tthis.ssanim = null;\r\n\t\t}\r\n\t}\r\n\tupdate(stamp) {\r\n\t\tthis.delta += stamp;\r\n\t\t\r\n\t\tif (this.ssanim && window.enable_skeletal_anim) {\r\n\t\t\tthis.ssanim.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect - ?? no use\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif ($gv.m_display_skeletal_anim) {\r\n\t\t\tconst x = Math.trunc((-$gv.m_viewRect.x + 0.5) + this.x);\r\n\t\t\tconst y = Math.trunc((-$gv.m_viewRect.y + 0.5) + this.y);\r\n\r\n\t\t\trenderer.ctx.setTransform(1, 0, 0, -1, x, y);\r\n\r\n\t\t\tif (this.ssanim) {\r\n\t\t\t\tthis.ssanim.render();\r\n\t\t\t}\r\n\t\t\tif (this.display_aabb) {\r\n\t\t\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x + 0.5), Math.trunc(-$gv.m_viewRect.y + 0.5));\r\n\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(this.x - this.ssanim.width * 0.5, this.y - this.ssanim.height, this.ssanim.width, this.ssanim.height);\r\n\t\t\t\tctx.fillStyle = \"rgba(20,255,20,0.5)\";\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass MapTile extends MapObject {\r\n\tconstructor(_raw, info) {\r\n\t\tsuper(_raw);\r\n\t\tthis._info = info;\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\tload() {\r\n\t\tlet texture = new MapTexture(this._texture_raw);\r\n\r\n\t\tthis.textures[0] = texture;\r\n\t\tthis.textures[0]._url = [\"/Map\", \"Tile\", this._info.tS, this._raw.u, this._raw.no].join(\"/\");\r\n\r\n\t\tthis.__calc_aabb();\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * textures; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry{\r\n\t\t\treturn map_sprite.Tile[this._info.tS][this._raw.u][this._raw.no];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._info.tS, this._raw.u, this._raw.no].join(\"/\");\r\n\t}\r\n}\r\n\r\n/**\r\n * MapEditor: Map Portal\r\n * Map graph (struct): \"Map/Map/Graph/\"\r\n */\r\nclass MapPortal extends MapObject {\r\n\tconstructor(_raw, mapRenderer) {\r\n\t\tsuper(_raw);//load x, y\r\n\t\t\r\n\t\tthis.mapRenderer = mapRenderer;\r\n\t\t\r\n\t\t/** @type {number} - to mapId */\r\n\t\tthis.tm = null;\r\n\t\t\r\n\t\t/** @type {string} - tn to pn */\r\n\t\tthis.tn = null;\r\n\r\n\t\t/** @type {string} - pn to tn */\r\n\t\tthis.pn = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.script = null;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.enable = null;\r\n\t\t\r\n\t\t/** @type {\"portalStart\"|\"portalContinue\"|\"portalExit\"} */\r\n\t\tthis.state = null;\r\n\r\n\t\t/** @type {[\"portalStart\",\"portalContinue\",\"portalExit\"]} */\r\n\t\tthis.states = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.skin = null;\r\n\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\t\r\n\t//sync\r\n\tload() {\r\n\t\tthis.tm = this._get(\"\", \"tm\", String).padStart(9, \"0\");//??\r\n\t\tthis.tn = this._get(\"\", \"tn\", String);//??\r\n\t\tthis.pn = this._get(\"\", \"pn\", String);//pt_go01 => goto portal_01\r\n\t\tthis.script = this._get(null, \"script\", String);\r\n\t\t\r\n\t\tthis.enable = this.tm != \"\" && this.tm != \"999999999\";\r\n\r\n\t\tthis._loadTexture();\r\n\t}\r\n\tunload() {\r\n\t\tif (this.body) {\r\n\t\t\tthis.body.GetWorld().DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetMap() {\r\n\t\tif (this.enable) {\r\n\t\t\treturn this.tm;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif (this.enable) {\r\n\t\t\tsuper.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t\telse if (this.__display_mode) {\r\n\t\t\tsuper.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t}\r\n\r\n\t_loadTexture() {\r\n\t\t///** @type {number} */\r\n\t\t//let type = this._raw.pt;\r\n\t\t//\r\n\t\t//let skins = this._loaded_portals[this.__display_mode][type];\r\n\t\t//\r\n\t\t//this.textures = skins.default || skins[0];\r\n\r\n\t\t//MapObject::type\r\n\t\tif (this.__display_mode == \"game\") {\r\n\t\t\tthis.type = \"p\";//??\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.type = \"q\";//??\r\n\t\t}\r\n\r\n\t\tconst _raw = MapPortal._portals_raw;\r\n\r\n\t\tthis.textures.length = 0;//clear\r\n\r\n\t\tconst type = MapPortal._type_map[this._raw.pt];\r\n\t\t\r\n\t\tif (this.__display_mode == \"editor\") {\r\n\t\t\tlet texture = new MapTexture(_raw.editor[type]);\r\n\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type].join(\"/\");\r\n\t\t\tthis.textures[0] = texture;\r\n\t\t}\r\n\t\telse if (_raw.game[type]) {\r\n\t\t\tlet skin = this.skin != null ? this.skin : \"default\";\r\n\t\t\tif (\"0\" in _raw.game[type][skin]) {//is animation frames\r\n\t\t\t\tlet textures = _raw.game[type][skin];\r\n\t\t\t\tfor (let i in textures) {\r\n\t\t\t\t\tlet texture = new MapTexture(textures[i]);\r\n\t\t\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type, skin, i].join(\"/\");\r\n\t\t\t\t\tthis.textures.push(texture);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: need default state\r\n\t\t\t\tthis.states = Object.keys(_raw.game[type][skin]);\r\n\t\t\t\tthis.state = this.states[1 % this.states.length];\r\n\r\n\t\t\t\tlet textures = _raw.game[type][skin][this.state];\r\n\t\t\t\tfor (let i in textures) {\r\n\t\t\t\t\tlet texture = new MapTexture(textures[i]);\r\n\t\t\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type, skin, this.state, i].join(\"/\");\r\n\t\t\t\t\tthis.textures.push(texture);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//reset\r\n\t\tthis.delta = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\t}\r\n\r\n\tget _texture_base_path() {\r\n\t\treturn \"/Map/MapHelper/portal\";\r\n\t}\r\n\tget _getTexturePath() {\r\n\t\tif (this.__display_mode == \"editor\") {\r\n\t\t\treturn [\"/Map/MapHelper/portal\", this.__display_mode].join(\"/\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn [\"/Map/MapHelper/portal\", this.__display_mode].join(\"/\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {\"editor\"|\"game\"}\r\n\t */\r\n\tget __display_mode() {\r\n\t\treturn $gv.m_editor_mode ? \"editor\" : \"game\";\r\n\t}\r\n\r\n\t///**\r\n\t// * @type {{editor:{[pt:number]:{[skin:number]:MapTexture}},game:{[pt:number]:{[skin:number]:MapTexture[],default:MapTexture[]}}}}\r\n\t// */\r\n\t//get _loaded_portals() {\r\n\t//\treturn MapPortal._portals;\r\n\t//}\r\n\t\r\n\tstatic async Init() {\r\n\t\tMapPortal._portals_raw = await $get.data(\"/Map/MapHelper/portal\");\r\n\r\n\t\tMapPortal._type_map = Object.keys(MapPortal._portals_raw.editor);\r\n\t}\r\n}\r\nMapPortal._portals_raw = {};\r\nMapPortal._type_map = {};\r\n//MapPortal._portals = {};\r\nMapPortal._script = {};\r\n\r\nclass MapPortalManager {\r\n\tconstructor() {\r\n\t\t/** @type {MapPortal[]} */\r\n\t\tthis.portals = null;\r\n\r\n\t\tthis.__display_mode = this.__display_mode;\r\n\t}\r\n\t\r\n\tasync load(map_raw_data, mapRenderer) {\r\n\t\tlet portals = [];\r\n\t\tfor (let i = 0; i in map_raw_data.portal; ++i) {\r\n\t\t\tlet raw = map_raw_data.portal[i];\r\n\t\t\tlet pt = new MapPortal(raw, mapRenderer);\r\n\t\t\t\r\n\t\t\tpt.load();//sync\r\n\t\t\t\r\n\t\t\t//if (pt.enable) {\r\n\t\t\t\tmapRenderer.controller.createPortal(pt);//inject body\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tportals.push(pt);\r\n\t\t}\r\n\t\tthis.portals = portals;\r\n\t}\r\n\tunload() {\r\n\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\tlet ptl = this.portals[i];\r\n\t\t\tptl.unload();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.__display_mode != $gv.m_editor_mode) {\r\n\t\t\tthis.__display_mode = $gv.m_editor_mode;\r\n\r\n\t\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\t\tlet portal = this.portals[i];\r\n\t\t\t\tportal._loadTexture();\r\n\t\t\t\tportal.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\t\tlet portal = this.portals[i];\r\n\t\t\t\tportal.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\tlet portal = this.portals[i];\r\n\t\t\tportal.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//          [category][source]\r\n//\r\n//static back\r\n//imgBack = [category][source][class ][number][\"\"]\r\n//imgBack = [\"Back\"  ][obj.bS][\"bacK\"][obj.no][\"\"]\r\n//\r\n//animation back\r\n//imgBack = [category][source][class ][number][frame][\"\"]\r\n//imgBack = [\"Back\"  ][obj.bS][\"ani\" ][obj.no][0    ][\"\"]\r\n//\r\n//object\r\n//imgObj  = [category][source][path_0][path_1][path_2][frame][\"\"]\r\n//imgObj  = [\"Obj\"\t ][obj.oS][obj.l0][obj.l1][obj.l2][0    ][\"\"]\r\n\r\nclass MapBackBase extends MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IAsyncLoading}\r\n */\r\nclass MapBack extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\tload() {\r\n\t\tlet path = [\"/Map\", \"Back\", this._texture_base_path].join(\"/\");\r\n\r\n\t\tif (this._raw.bS) {\r\n\t\t\tconst raw = this._texture_raw;\r\n\t\t\tif (raw) {\r\n\t\t\t\tthis.textures[0] = new MapTexture(this._texture_raw);\r\n\t\t\t\tthis.textures[0]._url = path;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn(\"MapBack path ?: \" + path);\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.bS, \"back\", this._raw.no].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * texture; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\tif (this._raw.bS && this._raw.no) {\r\n\t\t\treturn map_sprite.Back[this._raw.bS][\"back\"][this._raw.no];\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IAsyncLoading}\r\n */\r\nclass MapBackAnimation extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t * @returns {MapTexture}\r\n\t */\r\n\t_load_texture(i, texture0) {\r\n\t\tlet path = [\"/Map\", \"Back\", this._texture_base_path, i].join(\"/\");\r\n\r\n\t\tlet texture = new MapTexture(this._texture_raw[i]);\r\n\t\ttexture._url = path;\r\n\r\n\t\treturn texture;\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.bS, \"ani\", this._raw.no].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * texture set; info & data\r\n\t * not array\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry {\r\n\t\t\treturn map_sprite.Back[this._raw.bS][\"ani\"][this._raw.no];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass MapBackSkeletalAnim extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {SSAnim} */\r\n\t\tthis.ssanim = null;\r\n\t}\r\n\t/** @type {string} */\r\n\tget _folder() {\r\n\t\tconst ob = this._raw;\r\n\t\t//[\"Back\"  ][obj.bS][\"ani\" ][obj.no][0    ][\"\"]\r\n\t\treturn `/Map/Back/${ob.bS}/spine/${ob.no}`;\r\n\t}\r\n\tasync load() {\r\n\t\tif (SSAnim) {\r\n\t\t\tlet ssanim = new SSAnim();\r\n\t\t\ttry {\r\n\t\t\t\tawait ssanim.load(this._folder);\r\n\t\t\t\tssanim.update(0);//init pos data\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.ssanim = ssanim;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tunload() {\r\n\t\tif (this.ssanim) {\r\n\t\t\tthis.ssanim.unload();\r\n\t\t\tthis.ssanim = null;\r\n\t\t}\r\n\t}\r\n\tupdate(stamp) {\r\n\t\tif (this.ssanim && window.enable_skeletal_anim) {\r\n\t\t\tthis.ssanim.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect - ?? no use\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif ($gv.m_display_skeletal_anim) {\r\n\t\t\tif (this.ssanim) {\r\n\t\t\t\tconst x = Math.trunc((-$gv.m_viewRect.x + 0.5) + this.x);\r\n\t\t\t\tconst y = Math.trunc((-$gv.m_viewRect.y + 0.5) + this.y);\r\n\r\n\t\t\t\trenderer.ctx.setTransform(1, 0, 0, -1, x, y);\r\n\r\n\t\t\t\tthis.ssanim.render();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class LifeSpawnPoint {\r\n\t/**\r\n\t * @param {object} raw\r\n\t * @param {string} spawnId - spawn index\r\n\t */\r\n\tconstructor(raw, spawnId) {\r\n\t\tObject.assign(this, raw);\r\n\t\t\r\n\t\tthis.spawnId = spawnId;\r\n\t\t\r\n\t\t/**\r\n\t\t * millisecond elapsed after life spawn\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/**\r\n\t\t * now count of life was spawn\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.count = 0;\r\n\r\n\t\tif (!(raw instanceof LifeSpawnPoint)) {\r\n\t\t\tthis.fh = raw.fh - 1;\r\n\t\t}\r\n\t}\r\n\tincreaseLife() {\r\n\t\t++this.count;\r\n\t\tthis.time = 0;\r\n\t}\r\n\tdecreaseLife() {\r\n\t\t--this.count;\r\n\t\tthis.time = 0;\r\n\t}\r\n\tgetTimeElapsedAfterLifeSpawn() {\r\n\t\treturn this.time;\r\n\t}\r\n\tgetNowCountOfLifeWasSpawn() {\r\n\t\treturn this.count;\r\n\t}\r\n\t/**\r\n\t * @returns {LifeSpawnPoint}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor(this);\r\n\t}\r\n}\r\n\r\n/**\r\n * Mob / NPC controller\r\n */\r\nexport class MapLifeEntity extends SceneObject {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper();\r\n\t\tlet a = {\r\n\t\t\ttype: \"m\",\r\n\t\t\tid: 8643000,\r\n\t\t\tx: 720,\r\n\t\t\ty: -771,\r\n\t\t\tmobTime: 0,\r\n\t\t\tf: 0,\r\n\t\t\thide: 0,\r\n\t\t\tfh: 41 - 1,\r\n\t\t\tcy: -761,\r\n\t\t\trx0: 647,\r\n\t\t\trx1: 720,\r\n\t\t};\r\n\r\n\t\t/** @type {LifeRenderer} LifeRenderer|MobRenderer|NpcRenderer */\r\n\t\tthis.renderer = null;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_dead = false;\r\n\r\n\t\t/** @type {LifeSpawnPoint} */\r\n\t\tthis.spawn = lifeSpawnPoint;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.x = lifeSpawnPoint.x;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y = lifeSpawnPoint.cy;//lifeSpawnPoint.y\r\n\t\t\r\n\t\tthis.z = 5;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.angle = 0;\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.front = Number(lifeSpawnPoint.f) ? 1 : -1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.opacity = Number(lifeSpawnPoint.hide) ? 0.5 : 1;\r\n\t\t\r\n\t\tthis.lifeId = lifeId;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.type = lifeSpawnPoint.type;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.id = lifeSpawnPoint.id;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.mobTime = lifeSpawnPoint.mobTime;\r\n\r\n\t\t/////** @type {number} */\r\n\t\t////this.cy = lifeSpawnPoint.cy;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.rx0 = lifeSpawnPoint.rx0;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.rx1 = lifeSpawnPoint.rx1;\r\n\t}\r\n\r\n\t//AfterStep\r\n\t//get x() {\r\n\t//\treturn this._x;\r\n\t//}\r\n\t//set x(x) {\r\n\t//\tthis._x = x;\r\n\t//}\r\n\t//get y() {\r\n\t//\treturn this._y;\r\n\t//}\r\n\t//set y(y) {\r\n\t//\tthis._y = y;\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {World} mapController\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tstatic Create(lifeSpawnPoint, mapController, lifeId) {\r\n\t\tlet life;\r\n\r\n\t\tif (lifeSpawnPoint.type == \"m\") {\r\n\t\t\tlife = new MapMob(lifeSpawnPoint, lifeId);\r\n\t\t}\r\n\t\telse if (lifeSpawnPoint.type == \"n\") {\r\n\t\t\tlife = new MapNpc(lifeSpawnPoint, lifeId);\r\n\t\t\t//return;\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert(\"map life type: \" + lifeSpawnPoint.type);\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (life) {\r\n\t\t\tlife.load(lifeSpawnPoint.id, mapController);\r\n\t\t}\r\n\r\n\t\treturn life;\r\n\t}\r\n\t\r\n\t/**\r\n\t * load life description\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint - {id: string, type:\"m\"||\"n\"}\r\n\t */\r\n\tstatic async loadLifeDesc(lifeSpawnPoint) {\r\n\t\tlet desc, id = lifeSpawnPoint.id;\r\n\t\t\r\n\t\tswitch (lifeSpawnPoint.type) {\r\n\t\t\tcase \"m\":\r\n\t\t\t\tdesc = MobRenderer.loadDescription(id);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"n\":\r\n\t\t\t\tdesc = NpcRenderer.loadDescription(id);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\talert(\"map life type: \" + lifeSpawnPoint.type);\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\treturn desc;\r\n\t}\r\n\r\n\t/**\r\n\t * create entity, load data\r\n\t * @param {string} id -  npc or mob id\r\n\t * @param {World} mapController - no use\r\n\t */\r\n\tasync load(id, mapController) {//??: rename to create\r\n\t\tif (this.renderer) {\r\n\t\t\tawait this.renderer.load(id);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"Unknow type of life in map\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t_destroy(mapController) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number} type\r\n\t */\r\n\tdie(type) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\tthis.is_dead = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\trenderer.globalAlpha = Math.max(0, Math.min(this.opacity, 1));\r\n\t\tthis.renderer.draw(renderer, this.x, this.y, this.angle, this.front < 0);\r\n\t}\r\n}\r\nclass MapMob extends MapLifeEntity {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper(lifeSpawnPoint, lifeId);\r\n\t\tthis.renderer = new MobRenderer();\r\n\r\n\t\t/** @type {PMob} */\r\n\t\tthis.$physics = null;\r\n\t\t\r\n\t\t/** @type {{[x:string]: object}} - {[level]: skill} */\r\n\t\tthis.skills = {};\r\n\r\n\t\t//TODO: load mob info\r\n\t\tthis.hp = 100000;\r\n\t}\r\n\t/**\r\n\t * @param {string} id mobId\r\n\t * @param {World} mapController\r\n\t */\r\n\tasync load(id, mapController) {//??: rename to create\r\n\t\tawait super.load(id);\r\n\r\n\t\tthis.$physics = mapController.createMob(this);\r\n\t\tthis.$physics._loadAction(this.renderer.actions);\r\n\t\t\r\n\t\tawait this._load_skill_by_mob_id(id);\r\n\r\n\t\t// experiment\r\n\t\ttry {\r\n\t\t\tthis._load_skill_info();\r\n\r\n\t\t\tconst firstAttack = this.renderer._raw.info.attack[this.renderer._raw.info.firstAttack].info;\r\n\t\t\tif (this.skill_map[firstAttack]) {\r\n\t\t\t\tconst firstSkillInfo = this.skill_map[firstAttack].skill_list[0];\r\n\r\n\t\t\t\tthis.invokeSkill(firstSkillInfo.skill, firstSkillInfo.level);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\t//not thing\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {SceneObject} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tif (!this.is_dead) {\r\n\t\t\tthis.hp -= damage;\r\n\r\n\t\t\tconsole.log(`Mob(${this.$objectid}) 被 ${chara.$objectid} 攻擊，減少 ${damage} HP，剩下 ${this.hp}`);\r\n\t\t\t\r\n\t\t\tif (this.hp <= 0) {\r\n\t\t\t\tthis.die();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * if (chara == null) ??\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PPlayerState} pState\r\n\t */\r\n\t_applyState(pState) {\r\n\t\t//move stand jump hit1 die1\r\n\r\n\t\tif (pState.jump) {\r\n\t\t\tthis.renderer.action = \"jump\";\r\n\t\t}\r\n\t\telse if (pState.walk) {\r\n\t\t\tthis.renderer.action = \"move\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderer.action = \"stand\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$physics) {\r\n\t\t\tif (!this.is_dead) {\r\n\t\t\t\tthis._applyState(this.$physics.state);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.$physics.stop();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\tif ($gv.m_display_mob) {\r\n\t\t\tsuper.draw(renderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* skill need map to action */\r\n\t_load_skill_info() {\r\n\t\tconst _raw = this.renderer._raw;\r\n\t\tlet attack = _raw.info.attack;\r\n\t\tlet skill = _raw.info.skill;\r\n\t\t\r\n\t\tattack[1].info == _raw.info.skill[0].info\r\n\t\tattack[1].info == _raw.skill1.info\r\n\t\t\r\n\t\tvar skill_map = {};\r\n\t\tfor (let i = 1, sname; (sname = \"skill\" + i) in _raw; ++i) {\r\n\t\t\tlet s = _raw[sname];\r\n\t\t\tif (s.info) {\r\n\t\t\t\tskill_map[s.info] = {\r\n\t\t\t\t\tanim: sname,\r\n\t\t\t\t\tskill_list: [],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar skill_info = {};\r\n\t\tfor (let i in _raw.info.skill) {\r\n\t\t\tlet si = _raw.info.skill[i];\r\n\t\t\tskill_info[si.skill + \".\" + si.level] = si;\r\n\t\t\tif (skill_map[si.info]) {\r\n\t\t\t\tskill_info[si.skill + \".\" + si.level].$anim = skill_map[si.info].anim;\r\n\t\t\t\tskill_map[si.info].skill_list.push(si);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.skill_map = skill_map;\r\n\t\tthis.skill_info = skill_info;\r\n\t}\r\n\t\r\n\t_load_skill_by_mob_id(mob_id) {\r\n\t\tlet tasks = [];\r\n\t\tswitch(mob_id) {\r\n\t\t\tcase \"8880140\":\r\n\t\t\tcase \"8880141\": {\r\n\t\t\t\t\tconst FlowerTrap = require(\"./MobSkill/238.FlowerTrap.js\").FlowerTrap;\r\n\t\t\t\t\tconst FairyDust = require(\"./MobSkill/238.FairyDust.js\").FairyDust;\r\n\t\t\t\t\tthis.skills = {\r\n\t\t\t\t\t\t[1]: new FlowerTrap(),\r\n\t\t\t\t\t\t[2]: new FlowerTrap(),\r\n\t\t\t\t\t\t[3]: new FlowerTrap(),\r\n\t\t\t\t\t\t[4]: new FairyDust(null, null),\r\n\t\t\t\t\t\t[5]: { load() {}, invoke: function (level) { console.info(\"invoke LaserRain\"); } },\r\n\t\t\t\t\t\t[6]: { load() {}, invoke: function (level) { console.info(\"invoke ForcedTelepor\"); } },\r\n\t\t\t\t\t\t[7]: { load() {}, invoke: function (level) { console.info(\"invoke Dragon\"); } },\r\n\t\t\t\t\t\t[8]: { load() {}, invoke: function (level) { console.info(\"invoke Rush\"); } },\r\n\t\t\t\t\t\t[9]: { load() {}, invoke: function (level) { console.info(\"invoke WelcomeBarrage\"); } },\r\n\t\t\t\t\t\t[10]: new FairyDust(null, null),\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.skill_map_action = [];\r\n\t\t\t\t\tfor (let i = 1; i <= 10; ++i) {\r\n\t\t\t\t\t\tswitch (i) {\r\n\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\tcase 10:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill1\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill4\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill2\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 8:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 9:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor (let lev in this.skills) {\r\n\t\t\tconst skill = this.skills[lev];\r\n\t\t\ttasks.push(skill.load(lev));\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\t\r\n\tinvokeSkill(skill_id, level) {\r\n\t\tconst skill = this.skills[level];\r\n\t\tif (skill) {\r\n\t\t\tconst anim = this.skill_map_action[level];\r\n\t\t\tif (anim) {\r\n\t\t\t\tthis.renderer.action = anim;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tskill.invoke(level);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn({ \"unknow skill\": skill_id, \"level\": level });\r\n\t\t}\r\n\t}\r\n\t\r\n\t_destroy(mapController) {\r\n\t\tlet lifeSpawnPoint = this.spawn;\r\n\t\tif (lifeSpawnPoint instanceof LifeSpawnPoint) {\r\n\t\t\tlifeSpawnPoint.decreaseLife();\r\n\t\t}\r\n\t\tmapController.destroyMob(this);\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number=1} type\r\n\t */\r\n\tdie(type = 1) {\r\n\t\tthis.renderer.action = \"die\" + type;\r\n\t\tthis.is_dead = true;\r\n\t}\r\n}\r\n\r\nclass MapNpc extends MapLifeEntity {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper(lifeSpawnPoint, lifeId);\r\n\t\tthis.renderer = new NpcRenderer();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\tif ($gv.m_display_npc) {\r\n\t\t\tsuper.draw(renderer);\r\n\t\t}\r\n\t}\r\n\r\n\t_destroy(mapController) {\r\n\t\tlet lifeSpawnPoint = this.spawn;\r\n\t\tlifeSpawnPoint.decreaseLife();\r\n\t\tmapController.destroyNpc(this);\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number} type\r\n\t */\r\n\tdie(type) {\r\n\t\t//TODO: npc die ??\r\n\t\tthis.is_dead = true;\r\n\t}\r\n}\r\n\r\nlet MapLifeEntityCapacityRate = 1;\r\n\r\nclass MapLifeManager {\r\n\t/**\r\n\t * @param {World} mapController\r\n\t */\r\n\tconstructor(mapController) {\r\n\t\t/** @type {object} */\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {LifeSpawnPoint[]} */\r\n\t\tthis.spawnPoints = [];\r\n\r\n\t\t/** @type {MapMob[]} */\r\n\t\tthis.entities = [];\r\n\r\n\t\t/** @type {World} */\r\n\t\tthis.mapController = mapController;\r\n\t}\r\n\r\n\t/**\r\n\t * @async\r\n\t * @param {{life:{[spawnId:number]:{}}}} mapRawData\r\n\t * @returns {Promise<undefined[]>}\r\n\t */\r\n\tload(mapRawData) {\r\n\t\tlet tasks = [];\r\n\t\tthis._raw = mapRawData.life;\r\n\r\n\t\tlet keys = Object.keys(this._raw)\r\n\t\t\t.map(i => {\r\n\t\t\t\tlet n = parseInt(i, 10);\r\n\t\t\t\tif (Number.isSafeInteger(n)) {\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.warn(\"MapLife.spawnId: \" + i);\r\n\t\t\t\treturn null;\r\n\t\t\t})\r\n\t\t\t.filter(i => i != null);\r\n\r\n\t\tfor (let spawnId of keys) {\r\n\t\t\tlet d = new LifeSpawnPoint(this._raw[spawnId], spawnId);\r\n\t\t\ttasks.push(MapLifeEntity.loadLifeDesc(d));\r\n\t\t\tthis.spawnPoints.push(d);\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\tunload() {\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tconst entity = this.entities[i];\r\n\t\t\tif (entity.spawn.type == \"m\") {\r\n\t\t\t\tentity.$physics._destroy(this.mapController);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.spawnPoints = [];\r\n\t\tthis.entities = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tfor (let i = 0; i < this.spawnPoints.length; ++i) {\r\n\t\t\tlet lifeSpawnPoint = this.spawnPoints[i];\r\n\r\n\t\t\tlifeSpawnPoint.time += stamp;\r\n\r\n\t\t\tif (lifeSpawnPoint.time >= 1000 && lifeSpawnPoint.count < MapLifeEntityCapacityRate) {\r\n\t\t\t\tlifeSpawnPoint.increaseLife();\r\n\t\t\t\tthis.spawn(lifeSpawnPoint);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tlet entity = this.entities[i];\r\n\t\t\tif (entity) {\r\n\t\t\t\tif (entity.renderer.action && entity.renderer.action.startsWith(\"die\")) {\r\n\t\t\t\t\tconst act = entity.renderer.actions[entity.renderer.action];\r\n\t\t\t\t\tif (act && act.isEnd()) {\r\n\t\t\t\t\t\tthis.destroyLife(entity);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tentity.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * spawn life(npc / mob) by spawner\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t */\r\n\tspawn(lifeSpawnPoint) {\r\n\t\tlet lifeId = 0;\r\n\r\n\t\tfor (; lifeId < this.entities.length; ++lifeId) {\r\n\t\t\tif (!this.entities[lifeId]) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet entity = MapLifeEntity.Create(lifeSpawnPoint, this.mapController, lifeId);\r\n\t\t\r\n\t\tif (lifeId < this.entities.length) {\r\n\t\t\tthis.entities[lifeId] = entity;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.entities.push(entity);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * directly spawn npc\r\n\t * @param {string} npcID\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tspawnNpc(npcID, x, y, flip=false, fh=0) {\r\n\t\tlet lifeSpawnPoint = new LifeSpawnPoint({\r\n\t\t\ttype: \"n\",\r\n\t\t\tx: x | 0, y: y | 0, cy: y | 0,\r\n\t\t\tid: npcID,\r\n\t\t\tfh: fh,\r\n\t\t\tis_dummy: true,\r\n\t\t});\r\n\t\tthis.spawn(lifeSpawnPoint);\r\n\t}\r\n\t/**\r\n\t * directly spawn mob\r\n\t * @param {string} mobID\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tspawnMob(mobID, x, y, flip=false, fh=0) {\r\n\t\tlet lifeSpawnPoint = new LifeSpawnPoint({\r\n\t\t\ttype: \"m\",\r\n\t\t\tx: x | 0, y: y | 0, cy: y | 0,\r\n\t\t\tid: mobID,\r\n\t\t\tfh: fh,\r\n\t\t\tis_dummy: true,\r\n\t\t});\r\n\t\tthis.spawn(lifeSpawnPoint);\r\n\t}\r\n\t\r\n\tdestroyLife(entity) {\r\n\t\tif (!(entity instanceof MapLifeEntity)) {\r\n\t\t\talert(\"MapLifeManager.killLife: can't kill non life\");\r\n\t\t\tconsole.error(\"MapLifeManager.killLife: can't kill non life\");\r\n\t\t}\r\n\t\tentity._destroy(this.mapController);\r\n\t\tdelete this.entities[entity.lifeId];\r\n\t}\r\n\tdestroyAll() {\r\n\t\tthis.entities.forEach(a => this.destroyLife(a))\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t * @param {number} whereLayer - where layer index\r\n\t */\r\n\tdraw(renderer, center, viewRect, whereLayer) {\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tlet entity = this.entities[i];\r\n\t\t\tif (entity && ((entity.z != null && entity.z == whereLayer) || whereLayer == null)) {\r\n\t\t\t\tentity.draw(renderer);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * require Renderer\r\n * @implements {IAsyncLoading}\r\n */\r\nexport class SceneMap {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.stamp = 0;\r\n\r\n\t\t/** @type {MapBack[]} */\r\n\t\tthis.background = [];\r\n\r\n\t\t/** @type {MapBack[]} */\r\n\t\tthis.frontground = [];\r\n\r\n\t\t/** @type {MapObject[]} */\r\n\t\tthis.layeredObject = [];\r\n\r\n\t\t/** @type {MapTile[]} */\r\n\t\tthis.layeredTile = [];\r\n\t\t\r\n\t\t/** @type {{[tag:string]:MapBackBase}} */\r\n\t\tthis.backTags = {};\r\n\t\t\r\n\t\t/** @type {{[name:string]:MapObject}} */\r\n\t\tthis.namedObject = {};\r\n\r\n\t\t/** @type {World} */\r\n\t\tthis.controller = new World();\r\n\r\n\t\t/** @type {MapLifeManager} */\r\n\t\tthis.lifeMgr = new MapLifeManager(this.controller);\r\n\t\t\r\n\t\t/** @type {MapPortalManager} */\r\n\t\tthis.portalMgr = new MapPortalManager();\r\n\t\t\r\n\t\t/** @type {MapParticle[]} */\r\n\t\tthis.particleList = null;\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.mapBound = null;\r\n\r\n\t\t/** @type {{[questId:string]: number}} */\r\n\t\tthis.quest = {};\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;//data url //debug\r\n\r\n\t\t/** @type {Promise<any>[]} */\r\n\t\tthis.$load_tasks = [];\r\n\r\n\t\t/** @type {Promise<any>} */\r\n\t\tthis.$promise = null;\r\n\r\n\t\tthis.$loading_status = \"unload\";\r\n\t\t\r\n\t\t/** @type {function():void} */\r\n\t\tthis.onload = null;\r\n\t\t\r\n\t\t/** @type {(function():void)[]} */\r\n\t\tthis._onload = [];\r\n\t}\r\n\r\n\tstatic async _Init() {\r\n\t\tlet $_mapString = null;\r\n\t\tlet $mapString = {};\r\n\r\n\t\t$_mapString = await $get.data(\"/String/Map\");\r\n\r\n\t\tfor (let i in $_mapString) {\r\n\t\t\tfor (let j in $_mapString[i]) {\r\n\t\t\t\t$mapString[j] = $_mapString[i][j];\r\n\t\t\t\t$mapString[j].$region = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tSceneMap._map_names = $mapString;\r\n\r\n\t\twindow.$MapNames = SceneMap._map_names;\r\n\t}\r\n\tstatic Init() {\r\n\t\treturn Promise.all([\r\n\t\t\tSceneMap._Init(),\r\n\t\t\tMapPortal.Init(),\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{[questId:string]: number}} quest\r\n\t */\r\n\tisActivated(quest) {\r\n\t\tif (quest) {\r\n\t\t\tfor (let id in quest) {\r\n\t\t\t\tif (this.quest[id] != quest[id]) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tget $map_sprite() {\r\n\t\treturn window.$map_sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{back:{[backId:string]:any}}} raw\r\n\t */\r\n\tasync _constructBack(raw) {\r\n\t\tif (!(\"back\" in raw)) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet loading_task_map = new Map();\r\n\t\tfor (let i = 0; i in raw.back; ++i) {\r\n\t\t\tlet ob = raw.back[i];\r\n\t\t\tconst url = this._url + `back/${i}`;\r\n\r\n\t\t\t/** @type {MapBack|MapBackAnimation} */\r\n\t\t\tlet back;\r\n\r\n\t\t\tif (ob.ani == 0) {\r\n\t\t\t\tback = new MapBack(ob);\r\n\t\t\t}\r\n\t\t\telse if (ob.ani == 1) {\r\n\t\t\t\tback = new MapBackAnimation(ob);\r\n\t\t\t}\r\n\t\t\telse if (ob.ani == 2) {//Spine skeletal animation\r\n\t\t\t\tback = new MapBackSkeletalAnim(ob);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"ob.ani: \" + ob.ani);\r\n\t\t\t}\r\n\t\t\tback._url = url;\r\n\t\t\tif (back.backTags != null) {\r\n\t\t\t\tthis.backTags[back.backTags] = back;\r\n\t\t\t}\r\n\r\n\t\t\tif (ob.ani != 2) {\r\n\t\t\t\t// add loading task\r\n\t\t\t\tif (back._raw.bS) {\r\n\t\t\t\t\tlet ps = \"Back/\" + back._raw.bS;\r\n\t\t\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\t\t\tloading_task_map.set(ps, map_load_package(\"Back\", back._raw.bS));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.warn(\"MapBack: map.back[\" + i + \"].bS = \" + back._raw.bS);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (ob.front != 0) {\r\n\t\t\t\tthis.frontground.push(back);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.background.push(back);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait Promise.all([...loading_task_map.values()]);\r\n\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tlet back = this.frontground[i];\r\n\t\t\tback.load();\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tlet back = this.background[i];\r\n\t\t\tback.load();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{[layer:number]:{objs:{},tiles:{},info:{}}}} mapRawData\r\n\t */\r\n\tasync _constructLayeredObject(mapRawData) {\r\n\t\tlet loading_task_map = new Map();\r\n\r\n\t\tfor (let i = 0, layer = mapRawData[i]; !objIsEmpty(layer); i++ , layer = mapRawData[i]) {//layer[1...8]\r\n\t\t\tlet objs = this.__constructLayeredObject_obj(i, layer, loading_task_map);\r\n\t\t\tlet tiles = this.__constructLayeredObject_tile(i, layer, loading_task_map);\r\n\r\n\t\t\t// ?? map:867116550 雷射在 tiles 前面\r\n\t\t\ttiles.sort((a, b) => { return a.z - b.z; });\r\n\t\t\tobjs.sort((a, b) => { return a.z - b.z; });\r\n\r\n\t\t\t//this.layeredObject[i] = objs.concat(tiles);//(objs.concat(tiles)).sort(function (a, b) { return a.z - b.z; });\r\n\t\t\t\r\n\t\t\tthis.layeredObject[i] = objs;\r\n\t\t\tthis.layeredTile[i] = tiles;\r\n\t\t}\r\n\r\n\t\t//wait all texture package loaded\r\n\t\tawait Promise.all([...loading_task_map.values()]);\r\n\r\n\t\tfor (let i = 0; i < this.layeredObject.length; ++i) {\r\n\t\t\tconst objs = this.layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {MapObject}\r\n\t\t\t\t */\r\n\t\t\t\tlet obj = objs[j];\r\n\t\t\t\tif (process.env.NODE_ENV !== 'production') {//is debug\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tobj.load();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\tconsole.error(\"load textures failed: \" + new URL(\"xml2\" + obj._url, window.location).href);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tobj.load();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.layeredTile.length; ++i) {\r\n\t\t\tconst tiles = this.layeredTile[i];\r\n\t\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\t\tlet tile = tiles[j];\r\n\t\t\t\ttile.load();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__constructLayeredObject_tile(i, layer, loading_task_map) {\r\n\t\tconst info = layer.info;\r\n\t\tlet tiles = [];\r\n\r\n\t\tif (info.tS) {\r\n\t\t\tlet ps = \"Tile/\" + info.tS;\r\n\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\tloading_task_map.set(ps, map_load_package(\"Tile\", info.tS));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (Object.keys(layer.tile).length) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.warn(\"[\" + i + \"].tile = \" + JSON.stringify(layer.tile));\r\n\t\t}\r\n\t\tfor (let j = 0, ti = layer.tile[j]; !objIsEmpty(ti); j++ , ti = layer.tile[j]) {\r\n\t\t\tlet tile = new MapTile(ti, info);\r\n\r\n\t\t\ttile._url = this._url + `${i}/tile/${j}`;\r\n\r\n\t\t\ttiles.push(tile);\r\n\t\t}\r\n\r\n\t\treturn tiles;\r\n\t}\r\n\t__constructLayeredObject_obj(i, layer, loading_task_map) {\r\n\t\tlet objs = [];\r\n\r\n\t\tfor (let j = 0, raw = layer.obj[j]; !objIsEmpty(raw); j++ , raw = layer.obj[j]) {\r\n\t\t\tlet obj;\r\n\r\n\t\t\tif (raw.spineAni) {\r\n\t\t\t\tswitch (raw.spineAni) {\r\n\t\t\t\t\tcase \"animation\":\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"idle\":\r\n\t\t\t\t\t\tconsole.warn(\"spine animation: idle ??\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.groupCollapsed(\"unknow spine:\" + raw.spineAni);\r\n\t\t\t\t\t\tconsole.warn(`LayeredObject[${i}][${j}]`);\r\n\t\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tobj = new MapObjectSkeletalAnim(raw);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tobj = new MapObject(raw);\r\n\r\n\t\t\t\tlet ps = \"Obj/\" + obj._raw.oS;\r\n\t\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\t\tloading_task_map.set(ps, map_load_package(\"Obj\", obj._raw.oS));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tobj._url = this._url + `${i}/obj/${j}`;\r\n\t\t\t\r\n\t\t\tif (obj.name != null) {\r\n\t\t\t\tthis.namedObject[obj.name] = obj;\r\n\t\t\t}\r\n\r\n\t\t\tobjs.push(obj);\r\n\t\t}\r\n\r\n\t\treturn objs;\r\n\t}\r\n\r\n\t/**\r\n\t * top-bottom-border compute by visible mapObject\r\n\t */\r\n\t__compute_top_bottom_border(layeredObject) {\r\n\t\tlet top = null, bottom = null;//left, right,\r\n\t\t//let i = 0;\r\n\t\t\r\n\t\tfor (let i = 0; i < layeredObject.length; ++i) {\r\n\t\t\tconst objs = layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\tconst obj = objs[j];\r\n\t\t\t\tlet rect = obj.compute_max_rectangle();\r\n\t\t\t\tif (rect && top != null && bottom != null) {\r\n\t\t\t\t\t//left = Math.min(left, rect.left);\r\n\t\t\t\t\ttop = Math.min(top, rect.top);\r\n\t\t\t\t\t//right = Math.max(right, rect.right);\r\n\t\t\t\t\tbottom = Math.max(bottom, rect.bottom);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//left = rect.left;\r\n\t\t\t\t\ttop = rect.top;\r\n\t\t\t\t\t//right = rect.right;\r\n\t\t\t\t\tbottom = rect.bottom;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn { top, bottom };\r\n\t}\r\n\t\r\n\t/**\r\n\t * top-bottom-border compute by visible mapObject\r\n\t */\r\n\t_compute_top_bottom_border() {\r\n\t\tlet objtb = this.__compute_top_bottom_border(this.layeredObject);\r\n\t\tlet tiletb = this.__compute_top_bottom_border(this.layeredTile);\r\n\t\tlet top = Math.min(objtb.top, tiletb.top);\r\n\t\tlet bottom = Math.max(objtb.bottom, tiletb.bottom);\r\n\t\treturn { top, bottom };\r\n\t}\r\n\r\n\t//_compute_view_rectangle\r\n\t\r\n\t_compute_map_bound(reCalc) {\r\n\t\tif (this.mapBound && !reCalc) {\r\n\t\t\treturn this.mapBound;\r\n\t\t}\r\n\r\n\t\tconst info = this._raw.info;\r\n\t\tlet top, bottom;\r\n\r\n\t\tif (info.VRLeft != null && info.VRTop != null && info.VRRight != null && info.VRBottom != null) {\r\n\t\t\ttop = info.VRTop;\r\n\t\t\tbottom = info.VRBottom;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tb = this._compute_top_bottom_border();\r\n\t\t\ttop = tb.top;\r\n\t\t\tbottom = tb.bottom;\r\n\t\t}\r\n\r\n\t\tconst lr = this.controller.ground._compute_left_right_border();\r\n\r\n\t\tlet rect = Rectangle.parse(lr.left, top, lr.right, bottom);\r\n\t\tthis.mapBound = rect;//store\r\n\r\n\t\treturn rect;\r\n\t}\r\n\t\r\n\tget _window_title() {\r\n\t\tif (this.mapName) {\r\n\t\t\treturn `${[this.mapName, this.streetName].join(\"·\")} (${this.map_id})`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `${this.map_id}`;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_get_map_data_url(map_id) {\r\n\t\treturn `/Map/Map/Map${map_id.slice(0, 1)}/${map_id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * loading: map data\r\n\t * @param {string} map_id\r\n\t * @param {boolean} reload - download\r\n\t */\r\n\tasync load(map_id, reload) {\r\n\t\tthis.$promise = await this._route_load(map_id, reload);\r\n\t\tdelete this.$promise;//loaded\r\n\t}\r\n\t/**\r\n\t * loading: map data\r\n\t * @param {string} map_id\r\n\t * @param {boolean} reload - download\r\n\t */\r\n\tasync _route_load(map_id, reload) {\r\n\t\tthis.$loading_status = \"loading\";\r\n\t\t\r\n\t\tif (!reload && map_id != null && this.map_id == map_id && this._raw != null) {\r\n\t\t\tif (this.isLoaded()) {\r\n\t\t\t\tthis.unload();\r\n\t\t\t}\r\n\t\t\tawait this._load(this._raw);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst url = this._get_map_data_url(map_id);\r\n\t\t\r\n\t\tlet raw;\r\n\t\ttry {\r\n\t\t\traw = await $get.data(url);\r\n\t\t\tif (!raw) {\r\n\t\t\t\talert(\"map not exit\");\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthrow new Error(\"map not exit\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthis.$loading_status = \"failed: load\";\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (raw.info && raw.info.link) {\r\n\t\t\t\tconst url2 = this._get_map_data_url(raw.info.link);\r\n\t\t\t\t\t\r\n\t\t\t\traw = await $get.data(url2);\r\n\t\t\t\tif (!raw) {\r\n\t\t\t\t\talert(\"map-link not exit\");\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthis.$loading_status = \"failed: link\";\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (this.isLoaded()) {\r\n\t\t\t\tthis.unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.warn(\"SceneMap#unload\");\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tthis._url = url;\r\n\t\t\tthis.map_id = map_id;\r\n\t\t\t\r\n\t\t\tawait this._load(raw);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthis.$loading_status = \"failed: constructor map\";\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\tdelete this.$loading_status;//loaded\r\n\t}\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{[prop:string]:{}}} raw\r\n\t */\r\n\tasync _load(raw) {\r\n\t\tconst map_id = this.map_id;\r\n\t\t\r\n\t\tthis._raw = raw;\r\n\r\n\t\t$gv.allQuest = {};\r\n\t\t\r\n\t\tthis.controller.stop = true;//begin load\r\n\t\t\r\n\t\tif (SceneMap._map_names[map_id]) {\r\n\t\t\tthis.mapName = SceneMap._map_names[map_id].mapName;\r\n\t\t\tthis.streetName = SceneMap._map_names[map_id].streetName;\r\n\t\t}\r\n\r\n\t\tthis.$load_tasks = [];\r\n\r\n\t\tthis._loadBgm(raw);\r\n\r\n\t\tthis.$load_tasks.push(this._constructBack(raw, this));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this._constructLayeredObject(raw, this).then((mapobj) => {\r\n\t\t\t//this.layeredObject\r\n\t\t\t//this.layeredTile\r\n\t\t}));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this.portalMgr.load(raw, this).then((portals) => {\r\n\t\t}));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this.__constructMiniMap(raw, this));\r\n\r\n\t\tthis.$load_tasks.push(this.controller.load(raw, this));//load foothold...\r\n\t\tthis.$load_tasks.push(this.lifeMgr.load(raw, this));\r\n\t\t\r\n\t\tthis.$load_tasks.push(MapParticle.construct(raw, this));\r\n\r\n\t\tlet load_results = await Promise.all(this.$load_tasks);\r\n\t\t\r\n\t\tconst viewRect = this._compute_map_bound();\r\n\t\tconst viewCenter = viewRect.center;\r\n\t\t\r\n\t\t$gv.m_viewRect.setCenter(viewCenter.x, viewCenter.y);\r\n\t\t\r\n\t\tthis.controller._createMapBound(viewRect);\r\n\t\t\r\n\t\tthis.controller.stop = false;//end load\r\n\t\t\r\n\t\tthis.$load_tasks = [];\r\n\t\tconsole.log(\"completed scene_map.waitLoaded: [...]\");\r\n\t\t\r\n\t\tthis._script();\r\n\t\t\r\n\t\tif (this.onload) {\r\n\t\t\tthis.onload.call(this);//history.pushState\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(\"End scene_map.load\");\r\n\t}\r\n\t_script() {\r\n\t\tswitch (this.map_id) {\r\n\t\t\tcase \"450004150\":\r\n\t\t\tcase \"450004450\":\r\n\t\t\tcase \"450004750\":\r\n\t\t\t\tthis.lifeMgr.spawnMob(\"8880166\", 1000, 47, false, 0);//from /Etc/BossLucid\r\n\t\t\t\tthis.lifeMgr.spawnMob(\"8880140\", 1000, 47, false, 0);//from /Etc/BossLucid\r\n\t\t\t\t//this.lifeMgr.spawnMob(\"8880176\", 1000, 47, false, 0);\r\n\t\t\t\t//this.lifeMgr.spawnMob(\"8880141\", 1000, 47, false, 0);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treload() {\r\n\t\tthis.unload();\r\n\t\tthis._load(this._raw);\r\n\t}\r\n\t\r\n\tunload() {\r\n\t\tthis.$loading_status = \"loading\";\r\n\t\t\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tthis.background[i].unload();\r\n\t\t}\r\n\t\tthis.background = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tthis.frontground[i].unload();\r\n\t\t}\r\n\t\tthis.frontground = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.layeredObject.length; ++i) {\r\n\t\t\tlet objs = this.layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\tobjs[j].unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.layeredObject = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.layeredTile.length; ++i) {\r\n\t\t\tlet tiles = this.layeredTile[i];\r\n\t\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\t\ttiles[j].unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.layeredTile = [];\r\n\t\t\r\n\t\tthis.backTags = {};\r\n\t\t\r\n\t\tthis.particleList = null;\r\n\t\t\r\n\t\tthis.controller.unload();\r\n\t\tthis.lifeMgr.unload();\r\n\t\tthis.portalMgr.unload();\r\n\t\t\r\n\t\tmap_sprite.Back = {};\r\n\t\tmap_sprite.Obj = {};\r\n\t\tmap_sprite.Tile = {};\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{info:{bgm:string}}} mapRawData\r\n\t */\r\n\t_getBgmPath(mapRawData) {\r\n\t\tlet bgmPath = mapRawData.info.bgm;\r\n\t\tlet i = bgmPath.indexOf(\"/\"), path = bgmPath.slice(0, i) + bgmPath.slice(i);\r\n\t\t//let m = bgmPath.match(/([^\\/]+)(\\/.*)/), path = [m[1], m[2]].join(\"/\");\r\n\t\treturn [\"\", \"Sound\", path].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{info:{bgm:string}}} mapRawData\r\n\t */\r\n\t_loadBgm(mapRawData) {\r\n\t\tconst elem_bgm = document.getElementById(\"bgm\");\r\n\t\tif (elem_bgm) {\r\n\t\t\tconst path = this._getBgmPath(mapRawData);\r\n\t\t\tthis._bgm_path = path;\r\n\r\n\t\t\tconst url = $get.soundMp3Url(path);\r\n\t\t\t\r\n\t\t\telem_bgm.innerHTML = `<source src=\"${url}\" type=\"audio/mpeg\">`;\r\n\t\t\t\r\n\t\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\t\telem_bgm.autoplay = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telem_bgm.autoplay = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new TypeError(\"#bgm\"));\r\n\t\t}\r\n\t}\r\n\r\n\tplayBgm() {\r\n\t\tdocument.getElementById(\"bgm\").play();\r\n\t}\r\n\r\n\tpauseBgm() {\r\n\t\tdocument.getElementById(\"bgm\").pause();\r\n\t}\r\n\t\r\n\t__constructMiniMap(raw) {\r\n\t\tif (raw.miniMap) {\r\n\t\t\t//const hw = raw.miniMap.width * 0.5;\r\n\t\t\t//const hh = raw.miniMap.height * 0.5;\r\n\t\t\t//const cx = raw.miniMap.centerX;\r\n\t\t\t//const cy = raw.miniMap.centerY;\r\n\t\t\tthis.width = raw.miniMap.width;\r\n\t\t\tthis.height = raw.miniMap.height;\r\n\t\t\tthis.centerX = raw.miniMap.centerX;\r\n\t\t\tthis.centerY = raw.miniMap.centerY;\r\n\t\t\t//this.boundRect = new Rectangle(cx - hw, cy - hh, raw.miniMap.width, raw.miniMap.height);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.width = 0;\r\n\t\t\tthis.height = 0;\r\n\t\t\tthis.centerX = 0;\r\n\t\t\tthis.centerY = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_miniMap_src() {\r\n\t\treturn this._url + \"miniMap/canvas\";\r\n\t\tconst a = {\r\n\t\t\t\"canvas\": {\r\n\t\t\t\t\"\": \"\"\r\n\t\t\t},\r\n\t\t\t\"width\": 4483,\r\n\t\t\t\"height\": 1244,\r\n\t\t\t\"centerX\": 1030,\r\n\t\t\t\"centerY\": 781,\r\n\t\t\t\"mag\": 4\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * wait all task: return true if nothing to loading else list of loaded object\r\n\t * loading: texture...\r\n\t * @returns {Promise<true>|Promise<any[]>}\r\n\t */\r\n\tasync waitLoaded() {\r\n\t\tawait this.$promise;\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn ((!this.$load_tasks || !this.$load_tasks.length) && this._raw && !this.$loading_status);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\twindow.m_hover_object = null;\r\n\t\tif ($gv.mouse_dm || $gv.mouse_dr) {\r\n\t\t\twindow.m_selected_object = null;\r\n\t\t}\r\n\t\t\r\n\t\tif (stamp != null) {\r\n\t\t\tthis.stamp = stamp;\r\n\r\n\t\t\tthis.lifeMgr.update(stamp);\r\n\r\n\t\t\tif (this.isLoaded()) {\r\n\t\t\t\tthis.controller.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t */\r\n\t_addChara(chara) {\r\n\t\ttry {\r\n\t\t\tlet player_spawns = this.portalMgr.portals.filter(a => a.pn == \"sp\");\r\n\t\t\tlet spawn = player_spawns[Math.trunc(Math.random() * 100) % player_spawns.length];\r\n\t\t\tconst $physics = chara.$physics;\r\n\t\t\tconst x = spawn.x / $gv.CANVAS_SCALE;\r\n\t\t\tconst y = spawn.y / $gv.CANVAS_SCALE;\r\n\t\t\t$physics.setPosition(x, y);\r\n\t\t\t$physics.body.SetAwake(true);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t */\r\n\taddChara(chara) {\r\n\t\tif (this.$promise) {\r\n\t\t\tthis.$promise.then(() => {\r\n\t\t\t\tthis._addChara(chara);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._addChara(chara);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tapplyCamera(renderer) {\r\n\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x), Math.trunc(-$gv.m_viewRect.y));\r\n\t}\r\n\r\n\t/**\r\n\t * pushGlobalAlpha\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tbeginRender(renderer) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tendRender(renderer) {\r\n\t\trenderer.popGlobalAlpha();\r\n\t\t//renderer.popMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} whereLayer - where layer index\r\n\t */\r\n\trenderLife(renderer, whereLayer) {\r\n\t\tif (!$gv.m_display_life) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tthis.lifeMgr.draw(renderer, center, viewRect, whereLayer);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderPortal(renderer) {\r\n\t\tif (!$gv.m_display_portal) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\r\n\t\tthis.portalMgr.update(this.stamp);\r\n\t\tthis.portalMgr.draw(renderer, center, viewRect);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderFrontground(renderer) {\r\n\t\tif (!$gv.m_display_front) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tlet back = this.frontground[i];\r\n\t\t\tif (this.isActivated(back.quest)) {\r\n\t\t\t\tback.update(this.stamp);\r\n\t\t\t\tback.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderLayeredObject(renderer, layerIndex) {\r\n\t\tif (!$gv.m_display_mapobj) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tconst objs = this.layeredObject[layerIndex];\r\n\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\tlet obj = objs[j];\r\n\t\t\tif (this.isActivated(obj.quest)) {\r\n\t\t\t\tobj.update(this.stamp);\r\n\t\t\t\tobj.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderLayeredTile(renderer, layerIndex) {\r\n\t\tif (!$gv.m_display_maptile) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tconst tiles = this.layeredTile[layerIndex];\r\n\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\tlet tile = tiles[j];\r\n\t\t\tif (this.isActivated(tile.quest)) {\r\n\t\t\t\ttile.update(this.stamp);\r\n\t\t\t\ttile.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderBackground(renderer) {\r\n\t\tif (!$gv.m_display_back) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tlet back = this.background[i];\r\n\t\t\tif (this.isActivated(back.quest)) {\r\n\t\t\t\tback.update(this.stamp);\r\n\t\t\t\tback.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderParticle(renderer) {\r\n\t\tif (!$gv.m_display_particle_system) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//const center = Vec2.empty;\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.particleList.length; ++i) {\r\n\t\t\tlet particle = this.particleList[i];\r\n\t\t\tif (this.isActivated(particle.quest)) {\r\n\t\t\t\tparticle.update(this.stamp);\r\n\t\t\t\tparticle.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nAddInitTask(SceneMap.Init);\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction objIsEmpty(x) {\r\n\tif (typeof x == 'object' && x == null)\r\n\t\tthrow new Error();\r\n\treturn typeof x == 'undefined' || x == null;\r\n}\r\n","﻿\r\nimport { KeySlotData } from \"./KeySlotData\";\r\nimport { ItemSlot } from \"../../game/Item\";\r\n\r\n\r\nexport class KeySlot {\r\n\t/**\r\n\t * @param {\"Command\"|\"Action\"|\"Item\"|\"Skill\"} type\r\n\t * @param {KeySlotData} data\r\n\t */\r\n\tconstructor(type, data) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((type + \"Slot\") != data.constructor.name) {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.type = type;\r\n\t\tthis.data = data;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * open/close ui, command...\r\n */\r\nexport class CommandSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} command\r\n\t */\r\n\tconstructor(command) {\r\n\t\tsuper();\r\n\t\tthis.command = command;\r\n\t}\r\n}\r\n\r\n/**\r\n * charaction action key\r\n */\r\nexport class ActionSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} action\r\n\t */\r\n\tconstructor(action) {\r\n\t\tsuper();\r\n\t\tthis.action = action;\r\n\t}\r\n}\r\n\r\n\r\n//TODO: SkillSlot.js 未完成\r\nexport class SkillSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} skill_id\r\n\t */\r\n\tconstructor(skill_id) {\r\n\t\tsuper();\r\n\t\tthis.skill_id = skill_id;\r\n\t}\r\n}\r\n\r\n\r\n\r\n","\r\n/*interface InputKeyMap {\r\n\t[keyName: string]: number;\r\n}*/\r\n\r\nexport class InputKey {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.time = 0;\r\n\t\t\r\n\t\t/** @type {string[][]} */\r\n\t\tthis.inputCommand = [];\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis._skip_prev = false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t * @param {InputKeyMap} keyDownMap\r\n\t */\r\n\tupdate(stamp, keyDownMap) {\r\n\t\tif ((stamp - this.time) > 333) {\r\n\t\t\tthis.inputCommand.length = 0;//clear\r\n\t\t}\r\n\t\t/** @type {string[]} */\r\n\t\tlet keys = [];\r\n\t\tfor (let keyName in keyDownMap) {\r\n\t\t\tif (keyDownMap[keyName]) {\r\n\t\t\t\tkeys.push(keyName);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.inputCommand.length || this._skip_prev) {\r\n\t\t\tthis._skip_prev = false;\r\n\t\t\tthis.inputCommand.push(keys);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (keys.length) {\r\n\t\t\t\tthis._skip_prev = false;\r\n\t\t\t\tif (!this._equals_input(this.inputCommand.length - 1, keys)) {\r\n\t\t\t\t\tthis.inputCommand.push(keys);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._skip_prev = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.time = stamp;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} index - this.inputCommand[index]\r\n\t * @param {string[]} keys\r\n\t */\r\n\t_equals_input(index, keys) {\r\n\t\tconst iCmd = this.inputCommand[index];\r\n\t\tif (!iCmd) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (let j = 0; j < keys.length; ++j) {\r\n\t\t\tconst keyName = keys[j];\r\n\t\t\t\r\n\t\t\tif (!(iCmd && iCmd.indexOf(keyName) >= 0 && iCmd.length == keys.length)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string[][]} command\r\n\t * @param {number} length - command length\r\n\t * @returns {boolean}\r\n\t *\r\n\t * length = length + command.length\r\n\t */\r\n\tmatch(command, length = command.length) {\r\n\t\tif (!this.inputCommand.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif (length < 0) {\r\n\t\t\tlength = length + command.length;\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\tlet r = this._equals_input(i, command[i]);\r\n\t\t\tif (!r) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nfunction unit_test () {\r\n\t(function () {\r\n\t\tlet ctrller = new InputKey();\r\n\r\n\t\tctrller.update(0, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\t\tctrller.update(222, {\r\n\t\t\t\"down\": 1,\r\n\t\t\t\"right\": 1,\r\n\t\t});\r\n\t\tctrller.update(444, {\r\n\t\t\t\"right\": 1,\r\n\t\t});\r\n\r\n\t\tlet r = ctrller.match([\r\n\t\t\t[\"down\"],\r\n\t\t\t[\"down\", \"right\"],\r\n\t\t\t[\"right\"],\r\n\t\t]);\r\n\r\n\t\tconsole.log(\"%o: %o\\n\\t%o\", \"全部正確\", r, ctrller);\r\n\t})();\r\n\r\n\t(function () {\r\n\t\tlet ctrller = new InputKey();\r\n\r\n\t\tctrller.update(0, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\t\tctrller.update(222, {\r\n\t\t\t\"down\": 1,\r\n\t\t\t\"right\": 1,\r\n\t\t});\r\n\t\tctrller.update(444, {\r\n\t\t\t\"down\": 1,\r\n\t\t\t\"right\": 1,\r\n\t\t});\r\n\r\n\t\tlet r = ctrller.match([\r\n\t\t\t[\"down\"],\r\n\t\t\t[\"down\", \"right\"],\r\n\t\t\t[\"right\"],\r\n\t\t]);\r\n\r\n\t\tconsole.log(\"%o: %o\\n\\t%o\", \"多按一個鍵\", r == false, ctrller);\r\n\t})();\r\n\r\n\t(function () {\r\n\t\tlet ctrller = new InputKey();\r\n\r\n\t\tctrller.update(0, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\t\tctrller.update(222, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\r\n\t\tlet r = ctrller.match([\r\n\t\t\t[\"down\"],\r\n\t\t\t[\"down\"],\r\n\t\t]);\r\n\r\n\t\tconsole.log(\"%o: %o\\n\\t%o\", \"按住\", r == false, ctrller);\r\n\t})();\r\n\r\n\t(function () {\r\n\t\tlet ctrller = new InputKey();\r\n\r\n\t\tctrller.update(0, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\t\tctrller.update(666, {\r\n\t\t\t\"right\": 1,\r\n\t\t});\r\n\r\n\t\tlet r = ctrller.match([\r\n\t\t\t[\"down\"],\r\n\t\t\t[\"right\"],\r\n\t\t]);\r\n\r\n\t\tconsole.log(\"%o: %o\\n\\t%o\", \"間隔太長\", r == false, ctrller);\r\n\t})();\r\n\r\n\t(function () {\r\n\t\tlet ctrller = new InputKey();\r\n\r\n\t\tctrller.update(0, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\t\tctrller.update(222, {\r\n\t\t});\r\n\t\tctrller.update(444, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\r\n\t\tlet r = ctrller.match([\r\n\t\t\t[\"down\"],\r\n\t\t\t[\"down\"],\r\n\t\t]);\r\n\r\n\t\tconsole.log(\"%o: %o\\n\\t%o\", \"連按\", r, ctrller);\r\n\t})();\r\n}\r\n\r\n","\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { Animation } from \"../Animation.js\";\r\nimport { LayerObject, Layer } from \"./Layer.js\";\r\nimport { SceneRenderer } from \"./SceneRenderer.js\";\r\nimport { RenderingOption } from \"./RenderingOption.js\";\r\n\r\nimport { CharacterRenderer } from \"./CharacterRenderer.js\";\r\nimport { SceneCharacter } from \"../SceneCharacter.js\";\r\nimport { Vec2 } from \"../math.js\";\r\nimport { ItemCategoryInfo } from \"../../../public/javascripts/resource.js\";\r\n\r\n\r\nclass _ChairInfo {\r\n\tconstructor() {\r\n\t\t/** @param {{x:number,y:number}} */\r\n\t\tthis.bodyRelMove = null;\r\n\t\tthis.price = 1;\r\n\t\tthis.slotMax = 1;\r\n\t\tthis.recoveryHP = 100;\r\n\t\tthis.recoveryMP = 60;\r\n\t\tthis.sitEmotion = 10;\r\n\t\tthis.tradeBlock = 1;\r\n\t\tthis.invisibleWeapon = 1;\r\n\t}\r\n}\r\n\r\nclass _ChairEffect extends Array {\r\n\tconstructor() {\r\n\t\tthis.z = -1;\r\n\t\tthis.pos = 1;\r\n\t\t\r\n\t\t///** @type {_SpriteData} */\r\n\t\t//this[0..N] = null;\r\n\t}\r\n}\r\n\r\nclass _ChairData {\r\n\tconstructor() {\r\n\t\t/** @type {_ChairInfo} */\r\n\t\tthis.info = null;\r\n\t\t/** @type {_ChairEffect} */\r\n\t\tthis.effect = null;\r\n\t\t/** @type {_ChairEffect} */\r\n\t\tthis.effect2 = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {LayerObject}\r\n */\r\nclass ChairEffect extends Animation {\r\n\tconstructor(raw) {\r\n\t\tsuper(raw);\r\n\t\t\r\n\t\tthis.is_loop = true;\r\n\t\t\r\n\t\tthis.z = raw.z;\r\n\t\tthis.pos = raw.pos;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis._offset = null;\r\n\t\t\r\n\t\t/** @type {Chair} */\r\n\t\tthis._host = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Chair} host\r\n\t * @param {Vec2} offset\r\n\t */\r\n\tinit(host, offset) {\r\n\t\tthis._host = host;\r\n\t\tthis._offset = offset;\r\n\t}\r\n\t\r\n\t/** @override */\r\n\tisEnd() {\r\n\t\tconst player = this._host._player;\r\n\t\treturn !player.chair;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneRenderer} sceneRenderer\r\n\t */\r\n\t_addToScene(sceneRenderer) {\r\n\t\tconst player = this._host._player;\r\n\t\tlet layerIndex = player.$layer + this.z;\r\n\t\tlayerIndex = layerIndex >= 0 ? layerIndex : 0;\r\n\t\tconst layer = sceneRenderer.layers[layerIndex];\r\n\t\tlayer.add(this);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\tconst crr = this._host._player.renderer;\r\n\t\tconst x = crr.x;\r\n\t\tconst y = crr.y;\r\n\t\tconst angle = crr.angle;\r\n\t\tconst flip = crr.front > 0;\r\n\t\t\r\n\t\t//renderer.globalAlpha = this.opacity * option.opacity;\r\n\t\trenderer.globalAlpha = option.opacity;\r\n\r\n\t\tif (this._offset) {\r\n\t\t\tconst offset = this._offset;\r\n\t\t\tthis.draw(renderer, x + offset.x, y + offset.y, 0, flip);\r\n\t\t}\r\n\t\telse if (this.pos == 1) {\r\n\t\t\tconst oy = -this.texture.height * 0.5;\r\n\t\t\tthis.draw(renderer, x, y + oy, 0, flip);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.draw(renderer, x, y, angle, flip);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Chair {\r\n\tconstructor() {\r\n\t\t/** @type {_ChairData} */\r\n\t\tthis._raw = null;\r\n\t\t\r\n\t\t/** @type {SceneCharacter} - owner */\r\n\t\tthis._player = null;\r\n\t\t\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.bodyRelMove = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\t\t\r\n\t\t/** @type {ChairEffect[]} */\r\n\t\tthis.effects = [];\r\n\t\t\r\n\t\tthis.$promise = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneCharacter} player\r\n\t */\r\n\tinit(player) {\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t_player: {\r\n\t\t\t\tvalue: player,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tasync load(id) {//\"03010377\"\r\n\t\tif (!id.startsWith(\"0301\")) {\r\n\t\t\tthrow new TypeError(\"Not chair\");\r\n\t\t}\r\n\t\tthis.id = id;\r\n\t\t\r\n\t\tthis.$promise = ItemCategoryInfo.getItem(id);\r\n\t\tconst raw = await this.$promise;\r\n\t\tdelete this.$promise;\r\n\r\n\t\tdelete this._raw;\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t_raw: {\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\twritable: false,\r\n\t\t\t\tvalue: raw,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tlet offset;\r\n\r\n\t\tif (this._raw.info.bodyRelMove) {\r\n\t\t\tthis.bodyRelMove = new Vec2(this._raw.info.bodyRelMove.x, this._raw.info.bodyRelMove.y);\r\n\t\t}\r\n\t\telse if (raw.effect && raw.effect[0].origin.y < 0) {\r\n\t\t\t//let w = raw.effect[0].__w;\r\n\t\t\tlet h = raw.effect[0].__h;\r\n\t\t\toffset = new Vec2(0, -h * 1.5);\r\n\t\t}\r\n\t\tif (raw.effect[0].origin.y == 0) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\t\r\n\t\tfor (let key in raw) {\r\n\t\t\tif (key.startsWith(\"effect\")) {\r\n\t\t\t\tconst eff = new ChairEffect(raw[key]);\r\n\t\t\t\teff.init(this, offset);\r\n\t\t\t\teff.load();//Animation#load => load texture\r\n\t\t\t\tthis.effects.push(eff);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneRenderer} sceneRenderer\r\n\t */\r\n\taddToScene(sceneRenderer) {\r\n\t\tfor (let eff of this.effects) {\r\n\t\t\teff._addToScene(sceneRenderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetIconUrl() {\r\n\t\treturn this._raw.info.icon[\"\"];\r\n\t}\r\n\tgetIconRawUrl() {\r\n\t\treturn this._raw.info.iconRaw[\"\"];\r\n\t}\r\n}\r\n","﻿\r\nimport { ItemCategoryInfo } from \"../../public/javascripts/resource.js\";\r\n\r\nimport { IRenderer } from \"./IRenderer.js\";\r\n\r\nimport { SceneObject } from \"./SceneObject.js\";\r\nimport { CharacterRenderer } from \"./Renderer/CharacterRenderer.js\";\r\nimport { ChatBalloon } from \"./Renderer/ChatBalloon.js\";\r\nimport { PPlayer, PPlayerState } from \"./Physics/PPlayer.js\";\r\n\r\nimport { $createItem, ItemEquip, ItemSlot, ItemBase } from \"./Item.js\";\r\nimport { SceneSkill } from \"./Skill.js\";\r\n\r\nimport { CharacterStat } from \"../Common/PlayerData.js\";\r\nimport { CharacterMoveElem } from \"../Client/PMovePath.js\";\r\nimport { $Packet_CharacterMove } from \"../Common/Packet\";\r\nimport { AttackInfo, DamagePair } from \"../Common/AttackInfo.js\";\r\n\r\nimport { KeySlot, CommandSlot, ActionSlot, SkillSlot } from \"../ui/Basic/KeySlot.js\";\r\nimport { InputKey } from \"./InputKey.js\";\r\n\r\nimport { SceneMap } from \"./Map.js\";\r\nimport { damageNumberLayer } from \"./Renderer/DamageNumber.js\";\r\nimport { Chair } from \"./Renderer/Chair.js\";\r\nimport { sceneRenderer, SceneRenderer } from \"./Renderer/SceneRenderer.js\";\r\n\r\n\r\n// SceneCharacter的更新流程\r\n//\r\n// chatCtrl.update (順序無關)\r\n//\r\n// <...controller>\r\n// control\r\n// activeSkills.forEach(skill => skill.update)\r\n// chara._handleAttack\r\n// chara._player_control => { inputKey.forEach(key => key ? activeSkills.forEach(skill => skill.control)); ... }\r\n// chara._applyState\r\n//\r\n// <renderer>\r\n// set chara.renderer.position\r\n// chara.renderer.update\r\n\r\n\r\nwindow.$addItem_repeatEquip = false;\r\n\r\n\r\nclass TimeElapsed {\r\n\tconstructor() {\r\n\t\t/** @type {Date} */\r\n\t\tthis._date = new Date();\r\n\t}\r\n\treset() {\r\n\t\tthis._date = new Date();\r\n\t}\r\n\tget elapsed() {\r\n\t\tconst elapsed = (new Date()).getMilliseconds() - this._date.getMilliseconds();\r\n\t\treturn elapsed;\r\n\t}\r\n}\r\n\r\n\r\nclass ChatController {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.text = \"\";\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.$outputText = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.elapsed = 0;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis._isDisplay = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t */\r\n\tenter(text) {\r\n\t\tthis.text = String(text);\r\n\t\tthis.$outputText = null;\r\n\t\tthis.isDisplay = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst $displayDuration = this.displayDuration;\r\n\r\n\t\tif (this.elapsed > $displayDuration) {\r\n\t\t\tthis.isDisplay = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.elapsed += stamp;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {BaseSceneCharacter} chara\r\n\t */\r\n\tasync draw(renderer, chara) {\r\n\t\tif (this._isDisplay) {\r\n\t\t\tconst style = chara.chatBalloonStyle || $gv.ChatBalloon_default_style;\r\n\r\n\t\t\t/** @type {ChatBalloon} */\r\n\t\t\tlet cb = ChatBalloon.cache[style];\r\n\t\t\tif (!cb) {\r\n\t\t\t\tcb = new ChatBalloon();\r\n\t\t\t\tawait cb.load(style);\r\n\t\t\t}\r\n\r\n\t\t\tconst $colon = this.colon;\r\n\t\t\tconst crr = chara.renderer;\r\n\t\t\tconst boundBox = crr._boundBox;\r\n\r\n\t\t\tif (!this.$outputText) {\r\n\t\t\t\tthis.$outputText = chara.id + $colon + this.text;\r\n\t\t\t}\r\n\t\t\tcb.draw(renderer, this.$outputText, crr.x, crr.y - boundBox.height);\r\n\t\t}\r\n\t}\r\n\r\n\tget isDisplay() {\r\n\t\treturn this._isDisplay;\r\n\t}\r\n\tset isDisplay(value) {\r\n\t\tthis._isDisplay = !!value;\r\n\t\tthis.elapsed = 0;\r\n\t}\r\n\r\n\t/** @type {\" : \"} */\r\n\tget colon() {\r\n\t\treturn \" : \";\r\n\t}\r\n\tget $maxLength() {\r\n\t\treturn 70;\r\n\t}\r\n\tget displayDuration() {\r\n\t\treturn $gv.ChatBalloon_display_duration;\r\n\t}\r\n}\r\n\r\n\r\nconst keyboard_map = [\r\n\t{\r\n\t\tArrowUp: new KeySlot(\"Action\", new ActionSlot(\"up\")),\r\n\t\tArrowLeft: new KeySlot(\"Action\", new ActionSlot(\"left\")),\r\n\t\tArrowDown: new KeySlot(\"Action\", new ActionSlot(\"down\")),\r\n\t\tArrowRight: new KeySlot(\"Action\", new ActionSlot(\"right\")),\r\n\t\tz: new KeySlot(\"Action\", new ActionSlot(\"jump\")),\r\n\t\t//z: new KeySlot(\"Skill\", new SkillSlot(\"23001002\")),\r\n\t\tx: new KeySlot(\"Action\", new ActionSlot(\"attack\")),\r\n\t\tc: new KeySlot(\"Skill\", new SkillSlot(\"1001005\")),\r\n\t\tv: new KeySlot(\"Skill\", new SkillSlot(\"64120000\")),\r\n\t\tb: new KeySlot(\"Skill\", new SkillSlot(\"23121000\")),//152001001\r\n\t},\r\n\t{//editor mode\r\n\t\tw: new KeySlot(\"Action\", new ActionSlot(\"up\")),\r\n\t\ta: new KeySlot(\"Action\", new ActionSlot(\"left\")),\r\n\t\ts: new KeySlot(\"Action\", new ActionSlot(\"down\")),\r\n\t\td: new KeySlot(\"Action\", new ActionSlot(\"right\")),\r\n\t\tq: new KeySlot(\"Action\", new ActionSlot(\"jump\")),\r\n\t\tf: new KeySlot(\"Skill\", new SkillSlot(\"23001002\")),//debug\r\n\t\tx: new KeySlot(\"Action\", new ActionSlot(\"attack\")),\r\n\t\tc: new KeySlot(\"Skill\", new SkillSlot(\"1001005\")),\r\n\t\tv: new KeySlot(\"Skill\", new SkillSlot(\"64120000\")),\r\n\t\tb: new KeySlot(\"Skill\", new SkillSlot(\"23121000\")),//152001001\r\n\t}\r\n];\r\n\r\n\r\nclass PlayerJob {\r\n\tconstructor() {\r\n\t\t/** @type {InputKey} */\r\n\t\tthis.inputKey = new InputKey();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {BaseSceneCharacter} owner\r\n\t * @param {number} stamp\r\n\t * @param {InputKey} inputKey\r\n\t */\r\n\tupdate(owner, stamp, inputKey) {\r\n\t\tlet r = this._update_command_skill(owner, stamp, inputKey);\r\n\t\tif (r) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._update(owner, stamp, inputKey);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {BaseSceneCharacter} owner\r\n\t * @param {number} stamp\r\n\t * @param {InputKey} inputKey\r\n\t */\r\n\t_update(owner, stamp, inputKey) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {BaseSceneCharacter} owner\r\n\t * @param {number} stamp\r\n\t * @param {InputKey} inputKey\r\n\t * @returns {boolean} is match\r\n\t */\r\n\t_update_command_skill(owner, stamp, inputKey) {\r\n\t\tconst frontKey = owner.$physics.state.front > 0 ? \"right\" : \"left\";\r\n\t\t\r\n\t\t//this.inputKey.update(stamp, ikey);\r\n\t\t\r\n\t\tif (this.inputKey.match([[\"down\"], [frontKey]], -1) ||\r\n\t\t\tthis.inputKey.match([[\"down\"], [\"down\", frontKey], [frontKey]], -1)\r\n\t\t) {\r\n\t\t\tif (inputKey.attack == 1) {\r\n\t\t\t\tconsole.log(\"invoke skill: 波動拳\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nclass PlayerJob_2300 extends PlayerJob {\r\n\t/**\r\n\t * @param {BaseSceneCharacter} owner\r\n\t * @param {number} stamp\r\n\t * @param {InputKey} inputKey\r\n\t */\r\n\t_update(owner, stamp, inputKey) {\r\n\t\tif (inputKey.jump) {\r\n\t\t\tconst skill_id = \"23001002\";\r\n\t\t\tlet skill = owner.activeSkills.get(skill_id);\r\n\t\t\t//if (keyDown && can_use_skill) {\r\n\t\t\t\tskill = skill || SceneSkill.preload(skill_id);\r\n\t\t\t\tif (!skill.$promise && skill.test(owner)) {\r\n\t\t\t\t\tskill = skill || owner.invokeSkill(skill_id);\r\n\t\t\t\t\tif (skill) {\r\n\t\t\t\t\t\tskill.control(inputKey, inputKey.jump, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t//}\r\n\t\t\t//if (skill) {\r\n\t\t\t//\tskill.control(ikey, keyDown, keyUp);\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class BaseSceneCharacter extends SceneObject {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t///** @type {PPlayer} */\r\n\t\t//this.$physics = null;//new PPlayer();\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = null;\r\n\t\tthis.$layer = 5;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.name = null;\r\n\r\n\t\tthis.stat = new CharacterStat();\r\n\t\t\r\n\t\t// begin PlayerData\r\n\t\t//TODO: move player data to PlayerData\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.chatBalloonStyle = 0;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.labelStyle = 0;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.damageSkin = \"default\";\r\n\t\t\r\n\t\t// end PlayerData\r\n\r\n\t\t/** @type {PlayerJob} */\r\n\t\tthis.jobController = new PlayerJob_2300();\r\n\r\n\t\t/** @type {Map<string,SceneSkill>} */\r\n\t\tthis.activeSkills = new Map();\r\n\t\t\r\n\t\t/** @type {Map<string,SceneSkill>} */\r\n\t\tthis.skillControllers = new Map();\r\n\t\t\r\n\t\t/** @type {Chair} */\r\n\t\tthis.chair = null;\r\n\t\t\r\n\t\t/** @type {ChatController} */\r\n\t\tthis.chatCtrl = new ChatController();\r\n\t\t\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t$inPacket: {\r\n\t\t\t\twritable: true,\r\n\t\t\t},\r\n\t\t\t$outPacket: {\r\n\t\t\t\twritable: true,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t/** @type {{move:$Packet_CharacterMove}} */\r\n\t\tthis.$inPacket = {};\r\n\t\tthis.$inPacket.move = null;\r\n\r\n\t\t/** @type {{move:$Packet_CharacterMove}} */\r\n\t\tthis.$outPacket = {};\r\n\t\tthis.$outPacket.move = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @alias name\r\n\t * @type {string}\r\n\t */\r\n\tget id() {\r\n\t\treturn this.name;\r\n\t}\r\n\tset id(value) {\r\n\t\tthis.name = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @alias name\r\n\t * @type {string}\r\n\t */\r\n\tget $objectid() {\r\n\t\treturn this.name;\r\n\t}\r\n\tset $objectid(value) {\r\n\t\tthis.name = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {BaseSceneCharacter|null} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tconsole.log(\"Player(\" + this.$objectid + \") 被 \" + chara.$objectid + \" 攻擊，減少 \" + damage + \" HP\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {BaseSceneCharacter|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t\tthis.$physics.knockback(moveX, moveY, 1000);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {$Packet_CharacterMove} _move\r\n\t */\r\n\t$move(_move) {\r\n\t\tlet move = _move || this.$inPacket.move;\r\n\t\tthis.$inPacket.move = move;\r\n\t}\r\n\r\n\t_remote_control() {\r\n\t\tlet move = this.$inPacket.move;\r\n\r\n\t\tif (move && move.path && move.path.length) {\r\n\t\t\tconst crr = this.renderer;\r\n\t\t\tlet elem = move.path.shift();\r\n\r\n\t\t\tif (elem.isAwake) {\r\n\t\t\t\tthis.$physics.moveTo(elem);\r\n\t\t\t\tthis.$physics.state = elem.pState;//??\r\n\r\n\t\t\t\tcrr.front = elem.pState.front;\r\n\t\t\t}\r\n\t\t\t//else {\r\n\t\t\t//\t//non physics state: chara.renderer...\r\n\t\t\t//}\r\n\t\t\r\n\t\t\tif (elem.action) {\r\n\t\t\t\tcrr.action = elem.action;\r\n\t\t\t\t//crr.action_frame = elem.action_frame;\r\n\t\t\t}\r\n\t\t\tif (elem.emotion) {\r\n\t\t\t\tcrr.emotion = elem.emotion;\r\n\t\t\t\t//crr.emotion_frame = elem.emotion_frame;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} equipId\r\n\t * @param {number} from\r\n\t * @param {number} to\r\n\t */\r\n\t$moveItem(equipId, from, to) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} chairId\r\n\t */\r\n\tsitChair(chairId) {\r\n\t\tif (!this.chair) {\r\n\t\t\tthis.chair = new Chair();\r\n\t\t\tthis.chair.init(this);\r\n\t\t\tthis.chair.load(chairId).then(() => {\r\n\t\t\t\tthis.chair.addToScene(sceneRenderer);\r\n\t\t\t\t{// Chair#update\r\n\t\t\t\t\tconst bodyRelMove = this.chair.bodyRelMove;\r\n\t\t\t\t\tif (bodyRelMove) {\r\n\t\t\t\t\t\t//this.renderer.tx = bodyRelMove.x;\r\n\t\t\t\t\t\t//this.renderer.ty = bodyRelMove.y;\r\n\t\t\t\t\t\tthis.renderer.x += bodyRelMove.x;\r\n\t\t\t\t\t\tthis.renderer.y += bodyRelMove.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this.chair._raw.info.sitAction) {\r\n\t\t\t\t\t\tthis.renderer.action = this.chair._raw.info.sitAction;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.renderer.action = \"sit\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.chair._raw.info.sitEmotion) {\r\n\t\t\t\t\t\tthis.renderer.emotion = window.character_emotion_list[this.chair._raw.info.sitEmotion];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.enablePhysics = false;\r\n\t\t\t\tthis.$physics.body.SetAwake(false);\r\n\t\t\t\tthis.$physics.foot_walk.SetAwake(false);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"already sit\");\r\n\t\t}\r\n\t}\r\n\tnoSit() {\r\n\t\tthis.enablePhysics = true;\r\n\t\tthis.$physics.body.SetAwake(true);\r\n\t\tthis.$physics.foot_walk.SetAwake(true);\r\n\t\t\r\n\t\t{// Chair#update\r\n\t\t\t//this.renderer.tx = 0;\r\n\t\t\t//this.renderer.ty = 0;\r\n\t\t\tconst bodyRelMove = this.chair.bodyRelMove;\r\n\t\t\tif (bodyRelMove) {\r\n\t\t\t\tthis.renderer.x -= bodyRelMove.x;\r\n\t\t\t\tthis.renderer.y -= bodyRelMove.y;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderer.action = \"stand1\";\r\n\t\t\tthis.renderer.emotion = \"blink\";\r\n\t\t}\r\n\t\t\r\n\t\tthis.chair = null;//TODO: remove chair\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @param {function(SceneSkill):void} [cbfunc]\r\n\t * @returns {SceneSkill}\r\n\t */\r\n\tinvokeSkill(skillId, cbfunc) {\r\n\t\tif (window.$io) {\r\n\t\t\tthis.__invokeSkill_client(skillId).then(cbfunc);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.__invokeSkill_offline(skillId);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @returns {SceneSkill}\r\n\t */\r\n\tasync __invokeSkill_client(skillId) {\r\n\t\tlet isValid;\r\n\t\ttry {\r\n\t\t\tisValid = await window.$io.emit(\"skill\", {\r\n\t\t\t\tskillId: skillId\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t}\r\n\t\tif (isValid) {\r\n\t\t\treturn this.__invokeSkill_offline(skillId);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @returns {SceneSkill}\r\n\t */\r\n\t__invokeSkill_offline(skillId) {\r\n\t\tlet skill = new SceneSkill();\r\n\t\tskill.load(skillId, this);\r\n\t\tthis.activeSkills.set(skillId, skill);\r\n\t\treturn skill;\r\n\t}\r\n\r\n\t/**\r\n\t * after step, before rendering\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst renderer = this.renderer;\r\n\r\n\t\tthis.chatCtrl.update(stamp);\r\n\r\n\t\tthis._handleSkill(stamp);\r\n\r\n\t\tthis._player_control();\r\n\r\n\t\tif ($gv.m_editor_mode) {\r\n\t\t\tif (renderer.speed > 0 && this.$physics && this.enablePhysics) {\r\n\t\t\t\tthis._applyState({\r\n\t\t\t\t\tfront: this.$physics.state.front,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.$physics) {\r\n\t\t\tthis._applyState(this.$physics.state);\r\n\t\t}\r\n\r\n\t\tif (this.$physics) {\r\n\t\t\tif (renderer && this.enablePhysics) {\r\n\t\t\t\tconst pos = this.$physics.getPosition();\r\n\t\t\t\tconst px = Math.trunc(pos.x * $gv.CANVAS_SCALE + 0.5);\r\n\t\t\t\tconst py = Math.trunc(pos.y * $gv.CANVAS_SCALE + 0.5);\r\n\r\n\t\t\t\t//position\r\n\t\t\t\trenderer.x = px;\r\n\t\t\t\trenderer.y = py;\r\n\t\t\t\t\r\n\t\t\t\t//rotate\r\n\t\t\t\tif (this.$physics.body.GetAngle() || this.$physics.body.GetAngularVelocity()) {\r\n\t\t\t\t\trenderer.angle = this.$physics.body.GetAngle();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trenderer.angle = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//layer\r\n\t\t\t\tthis.$layer = this.$physics.getLayer();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trenderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_$drawName(renderer) {\r\n\t\tconst name = this.id;\r\n\t\tthis.__drawName(renderer, name, this.labelStyle || $gv.NameLabel_default_style);\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_$drawChatBalloon(renderer) {\r\n\t\tthis.chatCtrl.draw(renderer, this);//this.chatText || \"123451234512345123451234512345123451234512345123451234512345123451234512345123451234\", 84\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_player_control() {\r\n\t}\r\n\r\n\t/**\r\n\t * 'character physics state' to 'character renderer state'\r\n\t * @param {PPlayerState} player_state\r\n\t */\r\n\t_applyState(player_state) {\r\n\t\tconst renderer = this.renderer;\r\n\t\tconst pState = this.$physics.state;\r\n\r\n\t\t// renderer: apply default action\r\n\t\tif (!pState.invokeSkill) {\r\n\t\t\tconst { front, jump, walk, prone, fly, ladder } = player_state;\r\n\t\t\tconst enablePhysics = chara.enablePhysics;\r\n\r\n\t\t\tif (front != null) {\r\n\t\t\t\trenderer.front = front;\r\n\t\t\t}\r\n\r\n\t\t\tif (ladder) {\r\n\t\t\t\tif (enablePhysics && this.$physics.ladder) {\r\n\t\t\t\t\tif (this.$physics.ladder.isLadder()) {\r\n\t\t\t\t\t\trenderer.action = \"ladder\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trenderer.action = \"rope\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (pState.ladder_move_dir) {\r\n\t\t\t\t\t\tif (chara.renderer.actani.isEnd()) {\r\n\t\t\t\t\t\t\tchara.renderer.actani.reset();\r\n\t\t\t\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trenderer.actani._is_end = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (jump) {\r\n\t\t\t\trenderer.action = \"jump\";\r\n\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t}\r\n\t\t\telse if (walk) {\r\n\t\t\t\trenderer.action = \"walk1\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\t\t\telse if (prone) {\r\n\t\t\t\trenderer.action = \"prone\";\r\n\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t}\r\n\t\t\telse if (fly) {\r\n\t\t\t\trenderer.action = \"fly\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderer.action = \"stand1\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\r\n\t\t\t//TODO: keyboard: emotion key\r\n\t\t\tfor (let i = 0; i <= 9; ++i) {\r\n\t\t\t\tif ($gv.input_keyDown[i]) {\r\n\t\t\t\t\tlet a = [\r\n\t\t\t\t\t\t\"blink\", \"hit\", \"smile\",\r\n\t\t\t\t\t\t\"troubled\", \"cry\", \"angry\",\r\n\t\t\t\t\t\t\"bewildered\", \"stunned\", \"vomit\",\r\n\t\t\t\t\t\t\"oops\"\r\n\t\t\t\t\t];\r\n\t\t\t\t\tlet e = a[i % a.length];\r\n\t\t\t\t\trenderer.emotion = e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * route\r\n\t * 結算攻擊傷害\r\n\t */\r\n\t_handleSkill(stamp) {\r\n\t\t/** @type {AttackInfo[]} */\r\n\t\tlet attackInfoList = [];\r\n\t\t\r\n\t\tthis.activeSkills.forEach(skill => {\r\n\t\t\tif (skill) {\r\n\t\t\t\tif (skill.isEnd()) {\r\n\t\t\t\t\tthis.activeSkills.delete(skill.skillId);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tskill.update(stamp, this);\r\n\t\t\t\t}\r\n\t\t\t\t//clear all attack\r\n\t\t\t\tlet allAttack = skill.attackInfo.shiftAllAttack();\r\n\t\t\t\tif (allAttack.length) {\r\n\t\t\t\t\tlet attackInfo = new AttackInfo();\r\n\t\t\t\t\tattackInfo.allAttack = allAttack;\r\n\t\t\t\t\tattackInfoList.push(attackInfo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif (attackInfoList.length) {\r\n\t\t\tif (window.$io) {\r\n\t\t\t\tthis.__handleAttack_client(attackInfoList);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.__handleAttack_offline(attackInfoList);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 結算攻擊傷害\r\n\t * @param {AttackInfo[]} attackInfoList\r\n\t */\r\n\tasync __handleAttack_client(attackInfoList) {\r\n\t\tlet isValid = await window.$io.emit(\"attack\", {\r\n\t\t\t//TODO: online mode: packet_attack\r\n\t\t\tattack: attackInfoList\r\n\t\t});\r\n\t\t\r\n\t\tif (isValid) {\r\n\t\t\t//TODO: online mode: attack ??\r\n\t\t\tthis.__handleAttack_offline(attackInfoList);//show attack\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 結算攻擊傷害\r\n\t * @param {AttackInfo[]} attackInfoList\r\n\t */\r\n\t__handleAttack_offline(attackInfoList) {\r\n\t\tfor (let attackInfo of attackInfoList) {\r\n\t\t\tfor (let i = 0; i < attackInfo.allAttack.length; ++i) {\r\n\t\t\t\tconst attack = attackInfo.allAttack[i];\r\n\r\n\t\t\t\tconst targetObject = attack.getTargetObject();\r\n\r\n\t\t\t\tfor (let j = 0; j < attack.allDamage.length; ++j) {\r\n\t\t\t\t\tlet damVar = this.stat.getCurrentMaxBaseDamage() - this.stat.getCurrentMinBaseDamage();\r\n\t\t\t\t\tlet realDamage = this.stat.getCurrentMinBaseDamage() + Math.random() * damVar;\r\n\t\t\t\t\tlet damage = attack.allDamage[j] = new DamagePair();\r\n\t\t\t\t\tlet style;\r\n\r\n\t\t\t\t\tif (Math.trunc(Math.random() * 100) < this.stat.critRate) {\r\n\t\t\t\t\t\trealDamage = realDamage * (1 + this.stat.critDamage / 100);\r\n\t\t\t\t\t\tdamage.critical = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\trealDamage = Math.trunc(realDamage);\r\n\t\t\t\t\tdamage.realDamage = realDamage;\r\n\r\n\t\t\t\t\ttargetObject.damage(this, realDamage);\r\n\r\n\t\t\t\t\tif (damage.critical) {\r\n\t\t\t\t\t\tstyle = \"NoCri\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstyle = \"NoRed\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//TODO: ?? target position\r\n\t\t\t\t\tdamageNumberLayer.addDamagePair(this.damageSkin || \"default\", style, damage, targetObject.x + (attack.allDamage.length > 1 ? (25 - (1 - j & 1) * 25) : 0), targetObject.y, j * 100);\r\n\t\t\t\t}\r\n\t\t\t\t//\r\n\t\t\t\ttargetObject.knockback(this, 16, 16);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * client player\r\n */\r\nexport class SceneCharacter extends BaseSceneCharacter {\r\n\t/**\r\n\t * @param {SceneMap} scene\r\n\t */\r\n\tconstructor(scene) {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = new CharacterRenderer();\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = scene.controller.$createPlayer(this, this.renderer);//new PPlayer();\r\n\r\n\t\tthis.$layer = 5;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {ItemSlot[][]} - item inventory */\r\n\t\tthis.items = new Array(5);\r\n\t\tfor (let i = 0; i < 5; ++i) {\r\n\t\t\tthis.items[i] = new Array(128);\r\n\t\t\tfor (let j = 0; j < 128; ++j) {\r\n\t\t\t\tthis.items[i][j] = new ItemSlot(j, null, null, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//this.addItem(\"01005177\", 1);\r\n\t\t//this.addItem(\"01053322\", 1);\r\n\t\t//this.addItem(\"01073284\", 1);\r\n\r\n\t\tthis.stat.onJobChange(this._onJobChange.bind(this));\r\n\t}\r\n\r\n\t_onJobChange() {\r\n\t\t//TODO: register buf, debuf, autofire skill\r\n\t\t//TODO: 二段跳取代跳躍鍵\r\n\t\tconst newJob = this.stat.job;\r\n\r\n\t\tconsole.log(\"Player(\" + this.$objectid + \") change job: \" + newJob);\r\n\t}\r\n\r\n\t/**\r\n\t * 'character physics state' to 'character renderer state'\r\n\t * @param {PPlayerState} player_state\r\n\t */\r\n\t_applyState(player_state) {\r\n\t\tsuper._applyState(player_state);\r\n\r\n\t\tthis.$recMove();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_player_control() {\r\n\t\tif (!this.$physics) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//if (!this.$physics.state.jump && this.$$jump_state) {\r\n\t\t//\tdelete this.$$jump_state;\r\n\t\t//}\r\n\t\tconst key_map = keyboard_map[$gv.m_editor_mode ? 1 : 0];\r\n\r\n\t\t/** @type {{[key:string]:number}} */\r\n\t\tlet ikey = {};\r\n\r\n\t\tlet can_use_skill = this.activeSkills.size == 0;//TODO: 以查表法檢查不同技能是否可以同時使用\r\n\r\n\t\tfor (let keyName in key_map) {\r\n\t\t\t/** @type {KeySlot} */\r\n\t\t\tconst keySlot = key_map[keyName];\r\n\t\t\tif (!keySlot) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst keyDown = $gv.input_keyDown[keyName];\r\n\t\t\tconst keyUp = $gv.input_keyUp[keyName];\r\n\r\n\t\t\tswitch (keySlot.type) {\r\n\t\t\t\tcase \"Command\"://open or close UI, ...\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Action\":\r\n\t\t\t\t\tif (keyDown) {\r\n\t\t\t\t\t\t/** @type {ActionSlot} */\r\n\t\t\t\t\t\tconst ck = keySlot.data;\r\n\t\t\t\t\t\tif (this.chair) {\r\n\t\t\t\t\t\t\tif (ck.action == \"left\" ||\r\n\t\t\t\t\t\t\t\tck.action == \"right\" ||\r\n\t\t\t\t\t\t\t\tck.action == \"jump\"\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tthis.noSit();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tikey[ck.action] = keyDown;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Item\":\r\n\t\t\t\t\tif (keyDown) {\r\n\t\t\t\t\t\t/** @type {ItemSlot} */\r\n\t\t\t\t\t\tconst itemSlot = keySlot.data;\r\n\t\t\t\t\t\tthis.useItem(itemSlot.data.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.chair) {\r\n\t\t\t//TODO: stamp\r\n\t\t\tconst stamp = 0;\r\n\t\t\tif (this.jobController.update(this, stamp, ikey)) {\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor (let keyName in key_map) {\r\n\t\t\t\t\t/** @type {KeySlot} */\r\n\t\t\t\t\tconst keySlot = key_map[keyName];\r\n\t\t\t\t\tif (!keySlot) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst keyDown = $gv.input_keyDown[keyName];\r\n\t\t\t\t\tconst keyUp = $gv.input_keyUp[keyName];\r\n\r\n\t\t\t\t\tif (keySlot.type == \"Skill\") {\r\n\t\t\t\t\t\t/** @type {SkillSlot} */\r\n\t\t\t\t\t\tconst ks = keySlot.data;\r\n\t\t\t\t\t\tconst skill_id = ks.skill_id;\r\n\t\t\t\t\t\tlet skill = this.activeSkills.get(skill_id);\r\n\t\t\t\t\t\tif (keyDown && can_use_skill) {\r\n\t\t\t\t\t\t\tskill = skill || this.invokeSkill(skill_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (skill) {\r\n\t\t\t\t\t\t\tskill.control(ikey, keyDown, keyUp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.$physics.control(ikey);//apply action control\r\n\t}\r\n\r\n\t/**\r\n\t * route addItem\r\n\t * @param {string} itemId\r\n\t * @param {number} amount\r\n\t */\r\n\taddItem(itemId, amount) {\r\n\t\tif (window.$io) {\r\n\t\t\t//TODO: online mode: addItem\r\n\t\t\tconsole.warn(\"未完成: __addItem_client\");\r\n\t\t\t//this.__addItem_client(itemId, amount);\r\n\t\t}\r\n\t\t//else {\r\n\t\t\tthis.__addItem_offline(itemId, amount);\r\n\t\t//}\r\n\t}\r\n\t/**\r\n\t * @param {string} itemId\r\n\t * @param {number} amount\r\n\t */\r\n\tasync __addItem_client(itemId, amount) {\r\n\t\t//TODO: online mode: addItem\r\n\t\tconsole.warn(\"未完成: __addItem_client\");\r\n\t\t\r\n\t\tlet result = await window.$io.emit(\"addItem\", {\r\n\t\t\ttype: type,\r\n\t\t\tslot: slot,\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {string} itemId\r\n\t * @param {number} amount\r\n\t */\r\n\t__addItem_offline(itemId, amount) {\r\n\t\t/** @type {Partial<ItemEquip>} */\r\n\t\tlet props = {//test attr\r\n\t\t\tincDEXr: Math.trunc(Math.random() * 3),\r\n\t\t\ttimeLimited: Date(),\r\n\t\t};\r\n\r\n\t\t$createItem(itemId, props).then(item => {\r\n\t\t\tthis._addItem(item, amount);\r\n\t\t}, function (err) {\r\n\t\t\tconsole.warn(err);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @template T\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\t_addItem(itemData, amount) {\r\n\t\tlet SN = 123;\r\n\t\tlet itemId = itemData.id;\r\n\t\tlet slotType = itemData.getSlot();\r\n\t\tfor (let i = 0; i < this.items[slotType].length; ++i) {\r\n\t\t\tif (this.items[slotType][i].isEmpty()) {\r\n\t\t\t\tif (window.$addItem_repeatEquip) {\r\n\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, slotType ? amount : 1);\r\n\t\t\t\t\tconsole.info(`give ${this.id}: ${itemId} * ${amount}`);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (slotType == 0) {\r\n\t\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, 1);\r\n\t\t\t\t\t\tamount--;\r\n\t\t\t\t\t\tif (amount == 0) {\r\n\t\t\t\t\t\t\tconsole.info(`repeat give ${this.id}: ${itemId}`);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, amount);\r\n\t\t\t\t\t\tconsole.info(`give ${this.id}: ${itemId} * ${amount}`);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;//item inventory was full\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} type - item type\r\n\t * @param {number} slot\r\n\t */\r\n\tremoveItem(type, slot) {\r\n\t\tif (window.$io) {\r\n\t\t\t//TODO: online mode: removeItem\r\n\t\t\tconsole.warn(\"未完成: removeItem\");\r\n\t\t}\r\n\t\t//if (window.$io) {//TODO: online mode: removeItem\r\n\t\t//\tconsole.warn(\"未完成: removeItem\");\r\n\t\t//\t\r\n\t\t//\twindow.$io.emit(\"removeItem\", {\r\n\t\t//\t\ttype: type,\r\n\t\t//\t\tslot: slot,\r\n\t\t//\t}).then(results => {\r\n\t\t//\t\tif (result) {\r\n\t\t//\t\t\tthis._removeItem(type, slot);\r\n\t\t//\t\t}\r\n\t\t//\t\treturn result;\r\n\t\t//\t}, err => {\r\n\t\t//\t\tconsole.error(err);\r\n\t\t//\t});\r\n\t\t//}\r\n\t\t//else {\r\n\t\t\treturn this._removeItem(type, slot);\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} type - item type\r\n\t * @param {number} slot\r\n\t */\r\n\t_removeItem(type, slot) {\r\n\t\tthis.items[type][slot]._clear();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} from\r\n\t * @param {number} to\r\n\t */\r\n\tmoveItemToSlot(from, to) {\r\n\t\t//TODO: (\"./ui/Basic/UISlotItem.vue\").methods.drop\r\n\t\tdebugger;\r\n\t}\r\n\r\n\t///**\r\n\t// * @param {any} id\r\n\t// */\r\n\t//$getItem(id) {\r\n\t//\tthis.itemSlot\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {number} itemId\r\n\t */\r\n\tfindItem(itemId) {\r\n\t\tfor (let i = 0; i < this.items.length; ++i) {\r\n\t\t\tfor (let j = 0; j < this.items[i].length; ++j) {\r\n\t\t\t\tlet itemSlot = this.items[i][j];\r\n\r\n\t\t\t\tif (itemSlot && itemSlot.data && (itemSlot.data.id == itemId)) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttypeName: ItemCategoryInfo.typeName[i],\r\n\t\t\t\t\t\titemSlot: itemSlot,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\ttypeName: null,\r\n\t\t\titemSlot: null,\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * route\r\n\t * @param {number} itemId\r\n\t */\r\n\tuseItem(itemId, category, itemInfo) {\r\n\t\tif (window.$io) {\r\n\t\t\tthis.__useItem_client(itemId);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.__useItem_offline(itemId);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} itemId\r\n\t * @returns {Promise<{}>}\r\n\t */\r\n\t__useItem_client(itemId) {\r\n\t\treturn window.$io.emit(\"useItem\", {\r\n\t\t\titemId: itemId\r\n\t\t}).then(results => {\r\n\t\t\tif (results) {\r\n\t\t\t\tthis.__useItem_offline(itemId);\r\n\t\t\t}\r\n\t\t\treturn results;\r\n\t\t}, err => {\r\n\t\t\tconsole.log();\r\n\t\t\tconsole.error(\"can't use item: %o\\nerror: %o\", id, err);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {number} itemId\r\n\t */\r\n\t__useItem_offline(itemId) {\r\n\t\tconst args = arguments;\r\n\t\tlet existItem = this.findItem(itemId).itemSlot;\r\n\r\n\t\tif (existItem) {\r\n\t\t\tif (!$gv.m_editor_mode) {\r\n\t\t\t\tconsole.log(`消耗道具：${itemId}。未完成`);\r\n\t\t\t\tthis._consume(itemId, 1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(`使用道具：${itemId}。`);\r\n\t\t\t}\r\n\t\t\tif (ItemCategoryInfo.isChair(itemId)) {\r\n\t\t\t\tthis.sitChair(itemId);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tupdate_renderer.call(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ($gv.m_editor_mode) {\r\n\t\t\t\tthis.addItem(itemId, 1);\r\n\t\t\t\tif (ItemCategoryInfo.isChair(itemId)) {\r\n\t\t\t\t\tthis.sitChair(itemId);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tupdate_renderer.call(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"無法使用不存在的道具。you can try add item editor mode\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction update_renderer() {\r\n\t\t\t//TODO: implement job\r\n\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\tconst category = args[1], equipInfo = args[2];\r\n\t\t\t\tthis.renderer.use(itemId, category, equipInfo);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.renderer.use(itemId);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tasync say(text) {\r\n\t\tif (window.$io) {\r\n\t\t\tlet result = await window.$io.emit(\"chat\", {\r\n\t\t\t\t$style: this.chatCtrl.style,\r\n\t\t\t\ttext: text,\r\n\t\t\t});\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.chatCtrl.enter(text);\r\n\t\t\t}\r\n\t\t\treturn result;//boolean\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.chatCtrl.enter(text);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\t$emit(socket) {\r\n\t\tif (this.$outPacket.move) {\r\n\t\t\tsocket.emit(\"charaMove\", this.$outPacket.move);\r\n\t\t\tthis.$outPacket.move = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet charaMove = new $Packet_CharacterMove();\r\n\r\n\t\t\tcharaMove.capture(this);\r\n\r\n\t\t\tsocket.emit(\"charaMove\", charaMove);\r\n\t\t}\r\n\r\n\t\tthis.$outPacket.move = null;\r\n\t}\r\n\t\r\n\t$recMove() {\r\n\t\tlet move = this.$outPacket.move || new $Packet_CharacterMove();\r\n\t\tmove.capture(this);\r\n\t\tthis.$outPacket.move = move;\r\n\t}\r\n}\r\n\r\n/**\r\n * remote player\r\n */\r\nexport class SceneRemoteCharacter extends BaseSceneCharacter {\r\n\t/**\r\n\t * @param {SceneMap} scene\r\n\t */\r\n\tconstructor(scene) {\r\n\t\tsuper();\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tdelete this.$physics;\r\n\t\t\tObject.defineProperty(this, \"$physics\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this.$$physics;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tif (value == null) {\r\n\t\t\t\t\t\tconsole.error(\"can not set SceneRemoteCharacter.$physics = null;\");\r\n\t\t\t\t\t\talert(\"can not set SceneRemoteCharacter.$physics = null;\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$$physics = value;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tdelete this.renderer;\r\n\t\t\tObject.defineProperty(this, \"renderer\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this.$$renderer;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tif (value == null) {\r\n\t\t\t\t\t\tconsole.error(\"can not set SceneRemoteCharacter.renderer = null;\");\r\n\t\t\t\t\t\talert(\"can not set SceneRemoteCharacter.renderer = null;\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$$renderer = value;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = new CharacterRenderer();\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = scene.controller.$createRemotePlayer(this, this.renderer);\r\n\t}\r\n\r\n\tget $remote() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_player_control() {\r\n\t\tthis._remote_control();\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { SkillAnimation } from \"../game/Skill.js\";\r\nimport { SceneObject } from \"../game/SceneObject.js\";//?? ref\r\n\r\n\r\nexport class AttackInfo {\r\n\tconstructor() {\r\n\t\t/** @type {AttackPair[]} - { objectid, attack }[each monster] */\r\n\t\tthis.allAttack = [];\r\n\t\t\r\n\t\t//TODO: make this JSON\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.skillId = null;\r\n\t}\r\n\t\r\n\t///** returns {AttackInfo} */\r\n\t//clone() {\r\n\t//\tlet ai = new AttackInfo();\r\n\t//\t//ai.allAttack = this.allAttack.slice();//??\r\n\t//\tai.skill = this.skill;\r\n\t//\treturn ai;\r\n\t//}\r\n\t\r\n\t///**\r\n\t// * @param {number} objectid\r\n\t// * @returns {AttackPair}\r\n\t// */\r\n\t//addAttack(objectid) {\r\n\t//\tlet attack = new AttackPair();\r\n\t//\tattack.objectid = objectid;\r\n\t//\tthis.allAttack.push(attack);\r\n\t//}\r\n\t\r\n\t/**\r\n\t * return current attack and set new instance\r\n\t * @returns {AttackPair[]} - { objectid, attack }[each monster]\r\n\t */\r\n\tshiftAllAttack() {\r\n\t\tlet allAttack = this.allAttack;\r\n\t\tthis.allAttack = [];\r\n\t\treturn allAttack;\r\n\t}\r\n}\r\n\r\nconst symbol_targetObject = Symbol(\"targetObject\");\r\n\r\nexport class AttackPair {\r\n\tconstructor() {\r\n\t\t/** @type {SceneObject} */\r\n\t\tthis[symbol_targetObject] = null;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.objectid = null;\r\n\r\n\t\t/** @type {DamagePair[]} - { realDamage, critical }[attackCount] */\r\n\t\tthis.allDamage = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {SceneObject}\r\n\t */\r\n\tgetTargetObject() {\r\n\t\treturn this[symbol_targetObject];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneObject} targetObject\r\n\t */\r\n\tsetTargetObject(targetObject) {\r\n\t\tthis[symbol_targetObject] = targetObject;\r\n\t}\r\n\r\n\t/**\r\n\t * targetObject # $objectid\r\n\t * @returns {number}\r\n\t */\r\n\tget objectid() {\r\n\t\t/** @type {SceneObject} */\r\n\t\tlet obj = this[symbol_targetObject];\r\n\t\treturn obj.$objectid;\r\n\t}\r\n\t/**\r\n\t * set targetObject by objectid\r\n\t * @param {number} objectid\r\n\t */\r\n\tset objectid(objectid) {\r\n\t\tif (Number.isSafeInteger(objectid)) {\r\n\t\t\t/** @type {SceneObject} */\r\n\t\t\tlet obj = scene_map.lifeMgr.entities[objectid];\r\n\r\n\t\t\tthis.setTargetObject(obj);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//TODO: targetObject is player's character\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {boolean} critical\r\n\t * @returns {DamagePair}\r\n\t */\r\n\taddDamage(realDamage, critical) {\r\n\t\tthis.allDamage.push(new DamagePair(realDamage, critical));\r\n\t}\r\n}\r\n\r\nexport class DamagePair {\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {boolean} critical\r\n\t */\r\n\tconstructor(realDamage, critical) {\r\n\t\t/** @type {number} */\r\n\t\tthis.realDamage = realDamage;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.critical = critical;\r\n\t}\r\n\r\n\t_validating() {\r\n\t\treturn Number.isSafeInteger(this.realDamage);\r\n\t}\r\n\r\n\t/** @param {IRenderer} */\r\n\t_draw(renderer) {\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tif (Number.isSafeInteger(this.realDamage)) {\r\n\t\t\t//draw\r\n\t\t}\r\n\t\telse {// debug, invalid damage\r\n\t\t\tctx.filter = \"gray-scale(1)\";\r\n\t\t\t//draw\r\n\t\t\tctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","\r\nimport { IRenderer } from \"../IRenderer.js\";\r\n\r\n\r\nexport class RenderingOption {\r\n\t/**\r\n\t * @param {Partial<RenderingOption>} [option]\r\n\t */\r\n\tconstructor(option) {\r\n\t\tif (option) {\r\n\t\t\tthis.opacity = option.opacity || 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.opacity = 1;\r\n\t\t}\r\n\t}\r\n\tclone() {\r\n\t\treturn new RenderingOption(this);\r\n\t}\r\n\t/**\r\n\t * multiply property, return new RenderingOption\r\n\t * @param {RenderingOption} other\r\n\t * @returns {RenderingOption}\r\n\t */\r\n\tmul(other) {\r\n\t\tif (other) {\r\n\t\t\treturn new RenderingOption({\r\n\t\t\t\topacity: this.opacity * other.opacity,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.clone();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * multiply property\r\n\t * @param {RenderingOption} other\r\n\t * @returns {void}\r\n\t */\r\n\tselfMultiply(other) {\r\n\t\tif (other) {\r\n\t\t\tthis.opacity * other.opacity;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { PPlayerState } from \"../game/Physics/PPlayer.js\";//debug\r\n\r\n\r\nexport class BaseMoveElem {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.x = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y = null;\r\n\r\n\t\t/** @type {number} - linear velocity x */\r\n\t\tthis.vx = undefined;\r\n\r\n\t\t/** @type {number} - linear velocity y */\r\n\t\tthis.vy = undefined;\r\n\r\n\t\t/** @type {number} - force x */\r\n\t\tthis.fx = undefined;\r\n\r\n\t\t/** @type {number} - force y */\r\n\t\tthis.fy = undefined;\r\n\r\n\t\t/** @type {PPlayerState} - player physics state */\r\n\t\tthis.pState = null;\r\n\r\n\t\t/** @type {number} - time elapsed */\r\n\t\tthis.elapsed = 0;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.isAwake = undefined;// value = ?\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = undefined;\r\n\t\t/** @type {number} */\r\n\t\tthis.action_frame = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.emotion = undefined;\r\n\t\t/** @type {number} */\r\n\t\tthis.emotion_frame = undefined;\r\n\t}\r\n}\r\n\r\nexport class CharacterMoveElem extends BaseMoveElem {\r\n}\r\n\r\nexport class MobMoveElem extends BaseMoveElem {\r\n}\r\n\r\n","\r\nimport jQuery from \"jquery\";\r\n\r\nimport \"jquery-ui/themes/base/core.css\";\r\nimport \"jquery-ui/themes/base/theme.css\";\r\nimport \"jquery-ui/themes/base/selectable.css\";\r\nimport \"jquery-ui/themes/base/sortable.css\";\r\nimport \"jquery-ui/themes/base/draggable.css\";\r\n\r\nimport \"jquery-ui/ui/core\";\r\nimport \"jquery-ui/ui/widgets/selectable\";\r\nimport \"jquery-ui/ui/widgets/sortable\";\r\nimport \"jquery-ui/ui/widgets/draggable\";\r\nimport \"jquery-ui/ui/disable-selection\";\r\nimport \"jquery-ui/ui/position\";\r\nimport \"jquery-ui/ui/effect\";\r\n\r\nimport { } from \"./util.js\";\r\n\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nVue.config.productionTip = false;\r\nVue.use(Vuex);\r\n\r\nwindow.jQuery = jQuery;\r\nwindow.$ = jQuery;\r\n\r\nif (!window.onwheel) {\r\n\twindow.onwheel = function () {\r\n\t}\r\n}\r\n\r\nlet init_tasks = [];\r\n\r\nexport function AddInitTask(task) {\r\n\tinit_tasks.push(task);\r\n}\r\n\r\nexport function InitAll() {\r\n\tlet promise_list = init_tasks.map(f => f());\r\n\tinit_tasks = [];\r\n\tlet a = Promise.all(promise_list);\r\n\treturn a;\r\n}\r\n","﻿\r\nimport { Sprite } from \"../Sprite.js\";\r\nimport { Animation } from \"../Animation.js\";\r\n\r\n\r\nexport class LifeRenderer /*extends SceneObject*/ {\r\n\tconstructor() {\r\n\t\t//super();\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = \"\";\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {{[action:string]:Animation}} */\r\n\t\tthis.actions = {};\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._action = \"stand\";//static default\r\n\t\t\r\n\t\tthis._raw = null;\r\n\t}\r\n\t\r\n\tget name() {\r\n\t\treturn this.constructor._desc[this.id].name;\r\n\t}\r\n\t\r\n\tgetDefaultAction() {\r\n\t\tif (this.actions.stand) {\r\n\t\t\treturn \"stand\";\r\n\t\t}\r\n\t\telse if(this.actions.fly) {\r\n\t\t\treturn \"fly\";\r\n\t\t}\r\n\t\talert(this.constructor.name + \" (\" + this.id + \") default must is 'stand' or 'fly'\");\r\n\t\treturn new Error(this.constructor.name + \" (\" + this.id + \") default must is 'stand' or 'fly'\");\r\n\t}\r\n\t\r\n\t/** @type {string} */\r\n\tget action() {\r\n\t\treturn this._action;\r\n\t}\r\n\tset action(act) {\r\n\t\tif (this._action != act) {\r\n\t\t\tthis._action = act;\r\n\t\t\tif (this.actions[act]) {\r\n\t\t\t\tthis.actions[act].reset();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t///**\r\n\t// * @param {string} act\r\n\t// */\r\n\t//setAction(act) {\r\n\t//\tthrow new Error(\"Not implement\");\r\n\t//}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tasync load(id) {\r\n\t\tlet tasks = [];\r\n\t\tlet that = this;\r\n\t\tthis.id = id;//\"8880140\";//\"8880141\";//\"8880150\";//\"8880151\";\r\n\t\tthis._url = [this.constructor._base_path, this.id].join(\"/\");\r\n\t\t\r\n\t\tif (!this.constructor._desc[id]) {\r\n\t\t\tlet task = this.constructor.loadDescription(id);\r\n\t\t\ttasks.push(task);\r\n\t\t}\r\n\r\n\t\tlet task = $get.data(this._url).then(async function (raw) {\r\n\t\t\tthat._raw = raw;\r\n\t\t\tif (that._raw) {\r\n\t\t\t\tawait that._construct_actions();\r\n\t\t\t\t\r\n\t\t\t\tthat._action = that.getDefaultAction();//set default action; is fly mob ?\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t});\r\n\t\ttasks.push(task);\r\n\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\tasync _construct_actions() {\r\n\t\tvar tasks = [];\r\n\r\n\t\tfor (var i = 0; i < this.constructor._animations.length; ++i) {\r\n\t\t\tvar t = this.constructor._animations[i];\r\n\r\n\t\t\tfor (var $index = 1; ; ++$index) {\r\n\t\t\t\tlet action;\r\n\t\t\t\tvar name = eval(t);\r\n\r\n\t\t\t\tif (!(name in this._raw)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taction = new Animation(this._raw[name], [this._url, name].join(\"/\"));\r\n\t\t\t\taction.is_loop = false;\r\n\t\t\t\t\r\n\t\t\t\ttasks.push(action.load());\r\n\t\t\t\t\r\n\t\t\t\tthis.actions[name] = action;\r\n\r\n\t\t\t\tif (!name.endsWith($index)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.actions[this.action]) {\r\n\t\t\tconst ani = this.actions[this.action];\r\n\t\t\t\r\n\t\t\tani.update(stamp);\r\n\t\t\t\t\r\n\t\t\t//TODO: move this code to: MapLifeEntity.prototype._applyState\r\n\t\t\t//if (ani.isEnd()) {\r\n\t\t\t//\tthis.action = this.getDefaultAction();//default loop action: stand\r\n\t\t\t//\tthis.actions[this.action].update(stamp);\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * paint\r\n\t * @param {Engine} engine\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\tdraw(engine, x, y, angle, flip) {\r\n\t\tif (this.actions[this.action]) {\r\n\t\t\t/** @type {Animation} */\r\n\t\t\tconst act = this.actions[this.action];\r\n\t\t\tact.draw(engine, x, y, angle, flip);\r\n\t\t}\r\n\t}\r\n\tpaint(engine) {\r\n\t\tdebugger;\r\n\t\talert(\"Not Implement\");\r\n\t\trender(engine);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\talert(\"Not Implement\");\r\n\t}\r\n\r\n\tstatic get _animations() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n","﻿\r\nimport { Animation } from \"../Animation.js\"\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { RenderingOption } from \"./RenderingOption\";\r\n\r\n/**\r\n * @interface\r\n */\r\nexport class LayerObject {\r\n\tconstructor() {\r\n\t\t/** @type {number} = 0~1 */\r\n\t\tthis.opacity = 1;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\tconsole.error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\tthrow new Error();\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {LayerObject}\r\n */\r\nexport class Layer {\r\n\tconstructor() {\r\n\t\t/** @type {LayerObject[]} */\r\n\t\tthis.objects = [];\r\n\t\t\r\n\t\tthis.rendering_option = new RenderingOption();\r\n\t}\r\n\t\r\n\tadd(obj) {\r\n\t\tthis.objects.push(obj);\r\n\t}\r\n\t\r\n\tclear() {\r\n\t\tthis.objects.length = 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.objects = this.objects.filter(function (obj) {\r\n\t\t\tif (!obj.isEnd || !obj.destroy) {\r\n\t\t\t\tconsole.error(\"%o: %o\", obj.constructor ? obj.constructor.name : (typeof obj), obj);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (obj.isEnd()) {\r\n\t\t\t\tobj.destroy();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tobj.update(stamp);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\tconst opt = this.rendering_option.mul(option);\r\n\t\t\r\n\t\tif (opt.opacity > 0) {\r\n\t\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\t\tthis.objects.forEach(function (obj) {\r\n\t\t\t\tobj.render(renderer, opt);\r\n\t\t\t});\r\n\r\n\t\t\trenderer.popGlobalAlpha();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport function b2Assert(condition, ...args) {\r\n    if (!condition) {\r\n        // debugger;\r\n        throw new Error(...args);\r\n    }\r\n}\r\nexport function b2Maybe(value, def) {\r\n    return value !== undefined ? value : def;\r\n}\r\nexport const b2_maxFloat = 1E+37; // FLT_MAX instead of Number.MAX_VALUE;\r\nexport const b2_epsilon = 1E-5; // FLT_EPSILON instead of Number.MIN_VALUE;\r\nexport const b2_epsilon_sq = (b2_epsilon * b2_epsilon);\r\nexport const b2_pi = 3.14159265359; // Math.PI;\r\n/// @file\r\n/// Global tuning constants based on meters-kilograms-seconds (MKS) units.\r\n///\r\n// Collision\r\n/// The maximum number of contact points between two convex shapes. Do\r\n/// not change this value.\r\nexport const b2_maxManifoldPoints = 2;\r\n/// The maximum number of vertices on a convex polygon. You cannot increase\r\n/// this too much because b2BlockAllocator has a maximum object size.\r\nexport const b2_maxPolygonVertices = 8;\r\n/// This is used to fatten AABBs in the dynamic tree. This allows proxies\r\n/// to move by a small amount without triggering a tree adjustment.\r\n/// This is in meters.\r\nexport const b2_aabbExtension = 0.1;\r\n/// This is used to fatten AABBs in the dynamic tree. This is used to predict\r\n/// the future position based on the current displacement.\r\n/// This is a dimensionless multiplier.\r\nexport const b2_aabbMultiplier = 2;\r\n/// A small length used as a collision and constraint tolerance. Usually it is\r\n/// chosen to be numerically significant, but visually insignificant.\r\nexport const b2_linearSlop = 0.008; // 0.005;\r\n/// A small angle used as a collision and constraint tolerance. Usually it is\r\n/// chosen to be numerically significant, but visually insignificant.\r\nexport const b2_angularSlop = 2 / 180 * b2_pi;\r\n/// The radius of the polygon/edge shape skin. This should not be modified. Making\r\n/// this smaller means polygons will have an insufficient buffer for continuous collision.\r\n/// Making it larger may create artifacts for vertex collision.\r\nexport const b2_polygonRadius = 2 * b2_linearSlop;\r\n/// Maximum number of sub-steps per contact in continuous physics simulation.\r\nexport const b2_maxSubSteps = 8;\r\n// Dynamics\r\n/// Maximum number of contacts to be handled to solve a TOI impact.\r\nexport const b2_maxTOIContacts = 32;\r\n/// A velocity threshold for elastic collisions. Any collision with a relative linear\r\n/// velocity below this threshold will be treated as inelastic.\r\nexport const b2_velocityThreshold = 1;\r\n/// The maximum linear position correction used when solving constraints. This helps to\r\n/// prevent overshoot.\r\nexport const b2_maxLinearCorrection = 0.2;\r\n/// The maximum angular position correction used when solving constraints. This helps to\r\n/// prevent overshoot.\r\nexport const b2_maxAngularCorrection = 8 / 180 * b2_pi;\r\n/// The maximum linear velocity of a body. This limit is very large and is used\r\n/// to prevent numerical problems. You shouldn't need to adjust this.\r\nexport const b2_maxTranslation = 2;\r\nexport const b2_maxTranslationSquared = b2_maxTranslation * b2_maxTranslation;\r\n/// The maximum angular velocity of a body. This limit is very large and is used\r\n/// to prevent numerical problems. You shouldn't need to adjust this.\r\nexport const b2_maxRotation = 0.5 * b2_pi;\r\nexport const b2_maxRotationSquared = b2_maxRotation * b2_maxRotation;\r\n/// This scale factor controls how fast overlap is resolved. Ideally this would be 1 so\r\n/// that overlap is removed in one time step. However using values close to 1 often lead\r\n/// to overshoot.\r\nexport const b2_baumgarte = 0.2;\r\nexport const b2_toiBaumgarte = 0.75;\r\n// #if B2_ENABLE_PARTICLE\r\n// Particle\r\n/// A symbolic constant that stands for particle allocation error.\r\nexport const b2_invalidParticleIndex = -1;\r\nexport const b2_maxParticleIndex = 0x7FFFFFFF;\r\n/// The default distance between particles, multiplied by the particle diameter.\r\nexport const b2_particleStride = 0.75;\r\n/// The minimum particle weight that produces pressure.\r\nexport const b2_minParticleWeight = 1.0;\r\n/// The upper limit for particle pressure.\r\nexport const b2_maxParticlePressure = 0.25;\r\n/// The upper limit for force between particles.\r\nexport const b2_maxParticleForce = 0.5;\r\n/// The maximum distance between particles in a triad, multiplied by the particle diameter.\r\nexport const b2_maxTriadDistance = 2.0;\r\nexport const b2_maxTriadDistanceSquared = (b2_maxTriadDistance * b2_maxTriadDistance);\r\n/// The initial size of particle data buffers.\r\nexport const b2_minParticleSystemBufferCapacity = 256;\r\n/// The time into the future that collisions against barrier particles will be detected.\r\nexport const b2_barrierCollisionTime = 2.5;\r\n// #endif\r\n// Sleep\r\n/// The time that a body must be still before it will go to sleep.\r\nexport const b2_timeToSleep = 0.5;\r\n/// A body cannot sleep if its linear velocity is above this tolerance.\r\nexport const b2_linearSleepTolerance = 0.01;\r\n/// A body cannot sleep if its angular velocity is above this tolerance.\r\nexport const b2_angularSleepTolerance = 2 / 180 * b2_pi;\r\n// Memory Allocation\r\n/// Implement this function to use your own memory allocator.\r\nexport function b2Alloc(size) {\r\n    return null;\r\n}\r\n/// If you implement b2Alloc, you should also implement this function.\r\nexport function b2Free(mem) {\r\n}\r\n/// Logging function.\r\nexport function b2Log(message, ...args) {\r\n    // console.log(message, ...args);\r\n}\r\n/// Version numbering scheme.\r\n/// See http://en.wikipedia.org/wiki/Software_versioning\r\nexport class b2Version {\r\n    constructor(major = 0, minor = 0, revision = 0) {\r\n        this.major = 0; ///< significant changes\r\n        this.minor = 0; ///< incremental changes\r\n        this.revision = 0; ///< bug fixes\r\n        this.major = major;\r\n        this.minor = minor;\r\n        this.revision = revision;\r\n    }\r\n    toString() {\r\n        return this.major + \".\" + this.minor + \".\" + this.revision;\r\n    }\r\n}\r\n/// Current version.\r\nexport const b2_version = new b2Version(2, 3, 2);\r\nexport const b2_branch = \"master\";\r\nexport const b2_commit = \"fbf51801d80fc389d43dc46524520e89043b6faf\";\r\nexport function b2ParseInt(v) {\r\n    return parseInt(v, 10);\r\n}\r\nexport function b2ParseUInt(v) {\r\n    return Math.abs(parseInt(v, 10));\r\n}\r\nexport function b2MakeArray(length, init) {\r\n    const a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(init(i));\r\n    }\r\n    return a;\r\n}\r\nexport function b2MakeNullArray(length) {\r\n    const a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(null);\r\n    }\r\n    return a;\r\n}\r\nexport function b2MakeNumberArray(length, init = 0) {\r\n    const a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(init);\r\n    }\r\n    return a;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbW1vbi9iMlNldHRpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTSxVQUFVLFFBQVEsQ0FBQyxTQUFrQixFQUFFLEdBQUcsSUFBVztJQUN6RCxJQUFJLENBQUMsU0FBUyxFQUFFO1FBQ2QsWUFBWTtRQUNaLE1BQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztLQUMxQjtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsT0FBTyxDQUFJLEtBQW9CLEVBQUUsR0FBTTtJQUNyRCxPQUFPLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0FBQzNDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQVcsS0FBSyxDQUFDLENBQUMsdUNBQXVDO0FBQ2pGLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBVyxJQUFJLENBQUMsQ0FBQywyQ0FBMkM7QUFDbkYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFXLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQyxDQUFDO0FBQy9ELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBVyxhQUFhLENBQUMsQ0FBQyxXQUFXO0FBRXZELFNBQVM7QUFDVCwwRUFBMEU7QUFDMUUsR0FBRztBQUVILFlBQVk7QUFFWixzRUFBc0U7QUFDdEUsMEJBQTBCO0FBQzFCLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFXLENBQUMsQ0FBQztBQUU5QywyRUFBMkU7QUFDM0UscUVBQXFFO0FBQ3JFLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFXLENBQUMsQ0FBQztBQUUvQyx5RUFBeUU7QUFDekUsbUVBQW1FO0FBQ25FLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBVyxHQUFHLENBQUM7QUFFNUMs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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"./b2Settings\";\r\nimport { b2_pi, b2_epsilon, b2MakeArray } from \"./b2Settings\";\r\nexport const b2_pi_over_180 = b2_pi / 180;\r\nexport const b2_180_over_pi = 180 / b2_pi;\r\nexport const b2_two_pi = 2 * b2_pi;\r\nexport const b2Abs = Math.abs;\r\nexport const b2Min = Math.min;\r\nexport const b2Max = Math.max;\r\nexport function b2Clamp(a, lo, hi) {\r\n    return (a < lo) ? (lo) : ((a > hi) ? (hi) : (a));\r\n}\r\nexport function b2Swap(a, b) {\r\n    // DEBUG: b2Assert(false);\r\n    const tmp = a[0];\r\n    a[0] = b[0];\r\n    b[0] = tmp;\r\n}\r\n/// This function is used to ensure that a floating point number is\r\n/// not a NaN or infinity.\r\nexport const b2IsValid = isFinite;\r\nexport function b2Sq(n) {\r\n    return n * n;\r\n}\r\n/// This is a approximate yet fast inverse square-root.\r\nexport function b2InvSqrt(n) {\r\n    return 1 / Math.sqrt(n);\r\n}\r\nexport const b2Sqrt = Math.sqrt;\r\nexport const b2Pow = Math.pow;\r\nexport function b2DegToRad(degrees) {\r\n    return degrees * b2_pi_over_180;\r\n}\r\nexport function b2RadToDeg(radians) {\r\n    return radians * b2_180_over_pi;\r\n}\r\nexport const b2Cos = Math.cos;\r\nexport const b2Sin = Math.sin;\r\nexport const b2Acos = Math.acos;\r\nexport const b2Asin = Math.asin;\r\nexport const b2Atan2 = Math.atan2;\r\nexport function b2NextPowerOfTwo(x) {\r\n    x |= (x >> 1) & 0x7FFFFFFF;\r\n    x |= (x >> 2) & 0x3FFFFFFF;\r\n    x |= (x >> 4) & 0x0FFFFFFF;\r\n    x |= (x >> 8) & 0x00FFFFFF;\r\n    x |= (x >> 16) & 0x0000FFFF;\r\n    return x + 1;\r\n}\r\nexport function b2IsPowerOfTwo(x) {\r\n    return x > 0 && (x & (x - 1)) === 0;\r\n}\r\nexport function b2Random() {\r\n    return Math.random() * 2 - 1;\r\n}\r\nexport function b2RandomRange(lo, hi) {\r\n    return (hi - lo) * Math.random() + lo;\r\n}\r\n/// A 2D column vector.\r\nexport class b2Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Clone() {\r\n        return new b2Vec2(this.x, this.y);\r\n    }\r\n    SetZero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n    Set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        return this;\r\n    }\r\n    SelfAdd(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        return this;\r\n    }\r\n    SelfAddXY(x, y) {\r\n        this.x += x;\r\n        this.y += y;\r\n        return this;\r\n    }\r\n    SelfSub(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        return this;\r\n    }\r\n    SelfSubXY(x, y) {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        return this;\r\n    }\r\n    SelfMul(s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        return this;\r\n    }\r\n    SelfMulAdd(s, v) {\r\n        this.x += s * v.x;\r\n        this.y += s * v.y;\r\n        return this;\r\n    }\r\n    SelfMulSub(s, v) {\r\n        this.x -= s * v.x;\r\n        this.y -= s * v.y;\r\n        return this;\r\n    }\r\n    Dot(v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n    Cross(v) {\r\n        return this.x * v.y - this.y * v.x;\r\n    }\r\n    Length() {\r\n        const x = this.x, y = this.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n    LengthSquared() {\r\n        const x = this.x, y = this.y;\r\n        return (x * x + y * y);\r\n    }\r\n    Normalize() {\r\n        const length = this.Length();\r\n        if (length >= b2_epsilon) {\r\n            const inv_length = 1 / length;\r\n            this.x *= inv_length;\r\n            this.y *= inv_length;\r\n        }\r\n        return length;\r\n    }\r\n    SelfNormalize() {\r\n        const length = this.Length();\r\n        if (length >= b2_epsilon) {\r\n            const inv_length = 1 / length;\r\n            this.x *= inv_length;\r\n            this.y *= inv_length;\r\n        }\r\n        return this;\r\n    }\r\n    SelfRotate(radians) {\r\n        const c = Math.cos(radians);\r\n        const s = Math.sin(radians);\r\n        const x = this.x;\r\n        this.x = c * x - s * this.y;\r\n        this.y = s * x + c * this.y;\r\n        return this;\r\n    }\r\n    IsValid() {\r\n        return isFinite(this.x) && isFinite(this.y);\r\n    }\r\n    SelfCrossVS(s) {\r\n        const x = this.x;\r\n        this.x = s * this.y;\r\n        this.y = -s * x;\r\n        return this;\r\n    }\r\n    SelfCrossSV(s) {\r\n        const x = this.x;\r\n        this.x = -s * this.y;\r\n        this.y = s * x;\r\n        return this;\r\n    }\r\n    SelfMinV(v) {\r\n        this.x = b2Min(this.x, v.x);\r\n        this.y = b2Min(this.y, v.y);\r\n        return this;\r\n    }\r\n    SelfMaxV(v) {\r\n        this.x = b2Max(this.x, v.x);\r\n        this.y = b2Max(this.y, v.y);\r\n        return this;\r\n    }\r\n    SelfAbs() {\r\n        this.x = b2Abs(this.x);\r\n        this.y = b2Abs(this.y);\r\n        return this;\r\n    }\r\n    SelfNeg() {\r\n        this.x = (-this.x);\r\n        this.y = (-this.y);\r\n        return this;\r\n    }\r\n    SelfSkew() {\r\n        const x = this.x;\r\n        this.x = -this.y;\r\n        this.y = x;\r\n        return this;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Vec2());\r\n    }\r\n    static AbsV(v, out) {\r\n        out.x = b2Abs(v.x);\r\n        out.y = b2Abs(v.y);\r\n        return out;\r\n    }\r\n    static MinV(a, b, out) {\r\n        out.x = b2Min(a.x, b.x);\r\n        out.y = b2Min(a.y, b.y);\r\n        return out;\r\n    }\r\n    static MaxV(a, b, out) {\r\n        out.x = b2Max(a.x, b.x);\r\n        out.y = b2Max(a.y, b.y);\r\n        return out;\r\n    }\r\n    static ClampV(v, lo, hi, out) {\r\n        out.x = b2Clamp(v.x, lo.x, hi.x);\r\n        out.y = b2Clamp(v.y, lo.y, hi.y);\r\n        return out;\r\n    }\r\n    static RotateV(v, radians, out) {\r\n        const v_x = v.x, v_y = v.y;\r\n        const c = Math.cos(radians);\r\n        const s = Math.sin(radians);\r\n        out.x = c * v_x - s * v_y;\r\n        out.y = s * v_x + c * v_y;\r\n        return out;\r\n    }\r\n    static DotVV(a, b) {\r\n        return a.x * b.x + a.y * b.y;\r\n    }\r\n    static CrossVV(a, b) {\r\n        return a.x * b.y - a.y * b.x;\r\n    }\r\n    static CrossVS(v, s, out) {\r\n        const v_x = v.x;\r\n        out.x = s * v.y;\r\n        out.y = -s * v_x;\r\n        return out;\r\n    }\r\n    static CrossVOne(v, out) {\r\n        const v_x = v.x;\r\n        out.x = v.y;\r\n        out.y = -v_x;\r\n        return out;\r\n    }\r\n    static CrossSV(s, v, out) {\r\n        const v_x = v.x;\r\n        out.x = -s * v.y;\r\n        out.y = s * v_x;\r\n        return out;\r\n    }\r\n    static CrossOneV(v, out) {\r\n        const v_x = v.x;\r\n        out.x = -v.y;\r\n        out.y = v_x;\r\n        return out;\r\n    }\r\n    static AddVV(a, b, out) { out.x = a.x + b.x; out.y = a.y + b.y; return out; }\r\n    static SubVV(a, b, out) { out.x = a.x - b.x; out.y = a.y - b.y; return out; }\r\n    static MulSV(s, v, out) { out.x = v.x * s; out.y = v.y * s; return out; }\r\n    static MulVS(v, s, out) { out.x = v.x * s; out.y = v.y * s; return out; }\r\n    static AddVMulSV(a, s, b, out) { out.x = a.x + (s * b.x); out.y = a.y + (s * b.y); return out; }\r\n    static SubVMulSV(a, s, b, out) { out.x = a.x - (s * b.x); out.y = a.y - (s * b.y); return out; }\r\n    static AddVCrossSV(a, s, v, out) {\r\n        const v_x = v.x;\r\n        out.x = a.x - (s * v.y);\r\n        out.y = a.y + (s * v_x);\r\n        return out;\r\n    }\r\n    static MidVV(a, b, out) { out.x = (a.x + b.x) * 0.5; out.y = (a.y + b.y) * 0.5; return out; }\r\n    static ExtVV(a, b, out) { out.x = (b.x - a.x) * 0.5; out.y = (b.y - a.y) * 0.5; return out; }\r\n    static IsEqualToV(a, b) {\r\n        return a.x === b.x && a.y === b.y;\r\n    }\r\n    static DistanceVV(a, b) {\r\n        const c_x = a.x - b.x;\r\n        const c_y = a.y - b.y;\r\n        return Math.sqrt(c_x * c_x + c_y * c_y);\r\n    }\r\n    static DistanceSquaredVV(a, b) {\r\n        const c_x = a.x - b.x;\r\n        const c_y = a.y - b.y;\r\n        return (c_x * c_x + c_y * c_y);\r\n    }\r\n    static NegV(v, out) { out.x = -v.x; out.y = -v.y; return out; }\r\n}\r\nb2Vec2.ZERO = new b2Vec2(0, 0);\r\nb2Vec2.UNITX = new b2Vec2(1, 0);\r\nb2Vec2.UNITY = new b2Vec2(0, 1);\r\nb2Vec2.s_t0 = new b2Vec2();\r\nb2Vec2.s_t1 = new b2Vec2();\r\nb2Vec2.s_t2 = new b2Vec2();\r\nb2Vec2.s_t3 = new b2Vec2();\r\nexport const b2Vec2_zero = new b2Vec2(0, 0);\r\n/// A 2D column vector with 3 elements.\r\nexport class b2Vec3 {\r\n    constructor(x = 0, y = 0, z = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    Clone() {\r\n        return new b2Vec3(this.x, this.y, this.z);\r\n    }\r\n    SetZero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        return this;\r\n    }\r\n    SetXYZ(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        this.z = other.z;\r\n        return this;\r\n    }\r\n    SelfNeg() {\r\n        this.x = (-this.x);\r\n        this.y = (-this.y);\r\n        this.z = (-this.z);\r\n        return this;\r\n    }\r\n    SelfAdd(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n        return this;\r\n    }\r\n    SelfAddXYZ(x, y, z) {\r\n        this.x += x;\r\n        this.y += y;\r\n        this.z += z;\r\n        return this;\r\n    }\r\n    SelfSub(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n        return this;\r\n    }\r\n    SelfSubXYZ(x, y, z) {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        this.z -= z;\r\n        return this;\r\n    }\r\n    SelfMul(s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        this.z *= s;\r\n        return this;\r\n    }\r\n    static DotV3V3(a, b) {\r\n        return a.x * b.x + a.y * b.y + a.z * b.z;\r\n    }\r\n    static CrossV3V3(a, b, out) {\r\n        const a_x = a.x, a_y = a.y, a_z = a.z;\r\n        const b_x = b.x, b_y = b.y, b_z = b.z;\r\n        out.x = a_y * b_z - a_z * b_y;\r\n        out.y = a_z * b_x - a_x * b_z;\r\n        out.z = a_x * b_y - a_y * b_x;\r\n        return out;\r\n    }\r\n}\r\nb2Vec3.ZERO = new b2Vec3(0, 0, 0);\r\nb2Vec3.s_t0 = new b2Vec3();\r\n/// A 2-by-2 matrix. Stored in column-major order.\r\nexport class b2Mat22 {\r\n    constructor() {\r\n        this.ex = new b2Vec2(1, 0);\r\n        this.ey = new b2Vec2(0, 1);\r\n    }\r\n    Clone() {\r\n        return new b2Mat22().Copy(this);\r\n    }\r\n    static FromVV(c1, c2) {\r\n        return new b2Mat22().SetVV(c1, c2);\r\n    }\r\n    static FromSSSS(r1c1, r1c2, r2c1, r2c2) {\r\n        return new b2Mat22().SetSSSS(r1c1, r1c2, r2c1, r2c2);\r\n    }\r\n    static FromAngle(radians) {\r\n        return new b2Mat22().SetAngle(radians);\r\n    }\r\n    SetSSSS(r1c1, r1c2, r2c1, r2c2) {\r\n        this.ex.Set(r1c1, r2c1);\r\n        this.ey.Set(r1c2, r2c2);\r\n        return this;\r\n    }\r\n    SetVV(c1, c2) {\r\n        this.ex.Copy(c1);\r\n        this.ey.Copy(c2);\r\n        return this;\r\n    }\r\n    SetAngle(radians) {\r\n        const c = Math.cos(radians);\r\n        const s = Math.sin(radians);\r\n        this.ex.Set(c, s);\r\n        this.ey.Set(-s, c);\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        this.ex.Copy(other.ex);\r\n        this.ey.Copy(other.ey);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.ex.Set(1, 0);\r\n        this.ey.Set(0, 1);\r\n        return this;\r\n    }\r\n    SetZero() {\r\n        this.ex.SetZero();\r\n        this.ey.SetZero();\r\n        return this;\r\n    }\r\n    GetAngle() {\r\n        return Math.atan2(this.ex.y, this.ex.x);\r\n    }\r\n    GetInverse(out) {\r\n        const a = this.ex.x;\r\n        const b = this.ey.x;\r\n        const c = this.ex.y;\r\n        const d = this.ey.y;\r\n        let det = a * d - b * c;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.ex.x = det * d;\r\n        out.ey.x = (-det * b);\r\n        out.ex.y = (-det * c);\r\n        out.ey.y = det * a;\r\n        return out;\r\n    }\r\n    Solve(b_x, b_y, out) {\r\n        const a11 = this.ex.x, a12 = this.ey.x;\r\n        const a21 = this.ex.y, a22 = this.ey.y;\r\n        let det = a11 * a22 - a12 * a21;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (a22 * b_x - a12 * b_y);\r\n        out.y = det * (a11 * b_y - a21 * b_x);\r\n        return out;\r\n    }\r\n    SelfAbs() {\r\n        this.ex.SelfAbs();\r\n        this.ey.SelfAbs();\r\n        return this;\r\n    }\r\n    SelfInv() {\r\n        this.GetInverse(this);\r\n        return this;\r\n    }\r\n    SelfAddM(M) {\r\n        this.ex.SelfAdd(M.ex);\r\n        this.ey.SelfAdd(M.ey);\r\n        return this;\r\n    }\r\n    SelfSubM(M) {\r\n        this.ex.SelfSub(M.ex);\r\n        this.ey.SelfSub(M.ey);\r\n        return this;\r\n    }\r\n    static AbsM(M, out) {\r\n        const M_ex = M.ex, M_ey = M.ey;\r\n        out.ex.x = b2Abs(M_ex.x);\r\n        out.ex.y = b2Abs(M_ex.y);\r\n        out.ey.x = b2Abs(M_ey.x);\r\n        out.ey.y = b2Abs(M_ey.y);\r\n        return out;\r\n    }\r\n    static MulMV(M, v, out) {\r\n        const M_ex = M.ex, M_ey = M.ey;\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = M_ex.x * v_x + M_ey.x * v_y;\r\n        out.y = M_ex.y * v_x + M_ey.y * v_y;\r\n        return out;\r\n    }\r\n    static MulTMV(M, v, out) {\r\n        const M_ex = M.ex, M_ey = M.ey;\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = M_ex.x * v_x + M_ex.y * v_y;\r\n        out.y = M_ey.x * v_x + M_ey.y * v_y;\r\n        return out;\r\n    }\r\n    static AddMM(A, B, out) {\r\n        const A_ex = A.ex, A_ey = A.ey;\r\n        const B_ex = B.ex, B_ey = B.ey;\r\n        out.ex.x = A_ex.x + B_ex.x;\r\n        out.ex.y = A_ex.y + B_ex.y;\r\n        out.ey.x = A_ey.x + B_ey.x;\r\n        out.ey.y = A_ey.y + B_ey.y;\r\n        return out;\r\n    }\r\n    static MulMM(A, B, out) {\r\n        const A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n        const A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n        const B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n        const B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n        out.ex.x = A_ex_x * B_ex_x + A_ey_x * B_ex_y;\r\n        out.ex.y = A_ex_y * B_ex_x + A_ey_y * B_ex_y;\r\n        out.ey.x = A_ex_x * B_ey_x + A_ey_x * B_ey_y;\r\n        out.ey.y = A_ex_y * B_ey_x + A_ey_y * B_ey_y;\r\n        return out;\r\n    }\r\n    static MulTMM(A, B, out) {\r\n        const A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n        const A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n        const B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n        const B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n        out.ex.x = A_ex_x * B_ex_x + A_ex_y * B_ex_y;\r\n        out.ex.y = A_ey_x * B_ex_x + A_ey_y * B_ex_y;\r\n        out.ey.x = A_ex_x * B_ey_x + A_ex_y * B_ey_y;\r\n        out.ey.y = A_ey_x * B_ey_x + A_ey_y * B_ey_y;\r\n        return out;\r\n    }\r\n}\r\nb2Mat22.IDENTITY = new b2Mat22();\r\n/// A 3-by-3 matrix. Stored in column-major order.\r\nexport class b2Mat33 {\r\n    constructor() {\r\n        this.ex = new b2Vec3(1, 0, 0);\r\n        this.ey = new b2Vec3(0, 1, 0);\r\n        this.ez = new b2Vec3(0, 0, 1);\r\n    }\r\n    Clone() {\r\n        return new b2Mat33().Copy(this);\r\n    }\r\n    SetVVV(c1, c2, c3) {\r\n        this.ex.Copy(c1);\r\n        this.ey.Copy(c2);\r\n        this.ez.Copy(c3);\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        this.ex.Copy(other.ex);\r\n        this.ey.Copy(other.ey);\r\n        this.ez.Copy(other.ez);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.ex.SetXYZ(1, 0, 0);\r\n        this.ey.SetXYZ(0, 1, 0);\r\n        this.ez.SetXYZ(0, 0, 1);\r\n        return this;\r\n    }\r\n    SetZero() {\r\n        this.ex.SetZero();\r\n        this.ey.SetZero();\r\n        this.ez.SetZero();\r\n        return this;\r\n    }\r\n    SelfAddM(M) {\r\n        this.ex.SelfAdd(M.ex);\r\n        this.ey.SelfAdd(M.ey);\r\n        this.ez.SelfAdd(M.ez);\r\n        return this;\r\n    }\r\n    Solve33(b_x, b_y, b_z, out) {\r\n        const a11 = this.ex.x, a21 = this.ex.y, a31 = this.ex.z;\r\n        const a12 = this.ey.x, a22 = this.ey.y, a32 = this.ey.z;\r\n        const a13 = this.ez.x, a23 = this.ez.y, a33 = this.ez.z;\r\n        let det = a11 * (a22 * a33 - a32 * a23) + a21 * (a32 * a13 - a12 * a33) + a31 * (a12 * a23 - a22 * a13);\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (b_x * (a22 * a33 - a32 * a23) + b_y * (a32 * a13 - a12 * a33) + b_z * (a12 * a23 - a22 * a13));\r\n        out.y = det * (a11 * (b_y * a33 - b_z * a23) + a21 * (b_z * a13 - b_x * a33) + a31 * (b_x * a23 - b_y * a13));\r\n        out.z = det * (a11 * (a22 * b_z - a32 * b_y) + a21 * (a32 * b_x - a12 * b_z) + a31 * (a12 * b_y - a22 * b_x));\r\n        return out;\r\n    }\r\n    Solve22(b_x, b_y, out) {\r\n        const a11 = this.ex.x, a12 = this.ey.x;\r\n        const a21 = this.ex.y, a22 = this.ey.y;\r\n        let det = a11 * a22 - a12 * a21;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (a22 * b_x - a12 * b_y);\r\n        out.y = det * (a11 * b_y - a21 * b_x);\r\n        return out;\r\n    }\r\n    GetInverse22(M) {\r\n        const a = this.ex.x, b = this.ey.x, c = this.ex.y, d = this.ey.y;\r\n        let det = a * d - b * c;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        M.ex.x = det * d;\r\n        M.ey.x = -det * b;\r\n        M.ex.z = 0;\r\n        M.ex.y = -det * c;\r\n        M.ey.y = det * a;\r\n        M.ey.z = 0;\r\n        M.ez.x = 0;\r\n        M.ez.y = 0;\r\n        M.ez.z = 0;\r\n    }\r\n    GetSymInverse33(M) {\r\n        let det = b2Vec3.DotV3V3(this.ex, b2Vec3.CrossV3V3(this.ey, this.ez, b2Vec3.s_t0));\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        const a11 = this.ex.x, a12 = this.ey.x, a13 = this.ez.x;\r\n        const a22 = this.ey.y, a23 = this.ez.y;\r\n        const a33 = this.ez.z;\r\n        M.ex.x = det * (a22 * a33 - a23 * a23);\r\n        M.ex.y = det * (a13 * a23 - a12 * a33);\r\n        M.ex.z = det * (a12 * a23 - a13 * a22);\r\n        M.ey.x = M.ex.y;\r\n        M.ey.y = det * (a11 * a33 - a13 * a13);\r\n        M.ey.z = det * (a13 * a12 - a11 * a23);\r\n        M.ez.x = M.ex.z;\r\n        M.ez.y = M.ey.z;\r\n        M.ez.z = det * (a11 * a22 - a12 * a12);\r\n    }\r\n    static MulM33V3(A, v, out) {\r\n        const v_x = v.x, v_y = v.y, v_z = v.z;\r\n        out.x = A.ex.x * v_x + A.ey.x * v_y + A.ez.x * v_z;\r\n        out.y = A.ex.y * v_x + A.ey.y * v_y + A.ez.y * v_z;\r\n        out.z = A.ex.z * v_x + A.ey.z * v_y + A.ez.z * v_z;\r\n        return out;\r\n    }\r\n    static MulM33XYZ(A, x, y, z, out) {\r\n        out.x = A.ex.x * x + A.ey.x * y + A.ez.x * z;\r\n        out.y = A.ex.y * x + A.ey.y * y + A.ez.y * z;\r\n        out.z = A.ex.z * x + A.ey.z * y + A.ez.z * z;\r\n        return out;\r\n    }\r\n    static MulM33V2(A, v, out) {\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = A.ex.x * v_x + A.ey.x * v_y;\r\n        out.y = A.ex.y * v_x + A.ey.y * v_y;\r\n        return out;\r\n    }\r\n    static MulM33XY(A, x, y, out) {\r\n        out.x = A.ex.x * x + A.ey.x * y;\r\n        out.y = A.ex.y * x + A.ey.y * y;\r\n        return out;\r\n    }\r\n}\r\nb2Mat33.IDENTITY = new b2Mat33();\r\n/// Rotation\r\nexport class b2Rot {\r\n    constructor(angle = 0) {\r\n        this.s = 0;\r\n        this.c = 1;\r\n        if (angle) {\r\n            this.s = Math.sin(angle);\r\n            this.c = Math.cos(angle);\r\n        }\r\n    }\r\n    Clone() {\r\n        return new b2Rot().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.s = other.s;\r\n        this.c = other.c;\r\n        return this;\r\n    }\r\n    SetAngle(angle) {\r\n        this.s = Math.sin(angle);\r\n        this.c = Math.cos(angle);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.s = 0;\r\n        this.c = 1;\r\n        return this;\r\n    }\r\n    GetAngle() {\r\n        return Math.atan2(this.s, this.c);\r\n    }\r\n    GetXAxis(out) {\r\n        out.x = this.c;\r\n        out.y = this.s;\r\n        return out;\r\n    }\r\n    GetYAxis(out) {\r\n        out.x = -this.s;\r\n        out.y = this.c;\r\n        return out;\r\n    }\r\n    static MulRR(q, r, out) {\r\n        // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\r\n        // [qs  qc]   [rs  rc]   [qs*rc+qc*rs -qs*rs+qc*rc]\r\n        // s = qs * rc + qc * rs\r\n        // c = qc * rc - qs * rs\r\n        const q_c = q.c, q_s = q.s;\r\n        const r_c = r.c, r_s = r.s;\r\n        out.s = q_s * r_c + q_c * r_s;\r\n        out.c = q_c * r_c - q_s * r_s;\r\n        return out;\r\n    }\r\n    static MulTRR(q, r, out) {\r\n        // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\r\n        // [-qs qc]   [rs  rc]   [-qs*rc+qc*rs qs*rs+qc*rc]\r\n        // s = qc * rs - qs * rc\r\n        // c = qc * rc + qs * rs\r\n        const q_c = q.c, q_s = q.s;\r\n        const r_c = r.c, r_s = r.s;\r\n        out.s = q_c * r_s - q_s * r_c;\r\n        out.c = q_c * r_c + q_s * r_s;\r\n        return out;\r\n    }\r\n    static MulRV(q, v, out) {\r\n        const q_c = q.c, q_s = q.s;\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = q_c * v_x - q_s * v_y;\r\n        out.y = q_s * v_x + q_c * v_y;\r\n        return out;\r\n    }\r\n    static MulTRV(q, v, out) {\r\n        const q_c = q.c, q_s = q.s;\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = q_c * v_x + q_s * v_y;\r\n        out.y = -q_s * v_x + q_c * v_y;\r\n        return out;\r\n    }\r\n}\r\nb2Rot.IDENTITY = new b2Rot();\r\n/// A transform contains translation and rotation. It is used to represent\r\n/// the position and orientation of rigid frames.\r\nexport class b2Transform {\r\n    constructor() {\r\n        this.p = new b2Vec2();\r\n        this.q = new b2Rot();\r\n    }\r\n    Clone() {\r\n        return new b2Transform().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.p.Copy(other.p);\r\n        this.q.Copy(other.q);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.p.SetZero();\r\n        this.q.SetIdentity();\r\n        return this;\r\n    }\r\n    SetPositionRotation(position, q) {\r\n        this.p.Copy(position);\r\n        this.q.Copy(q);\r\n        return this;\r\n    }\r\n    SetPositionAngle(pos, a) {\r\n        this.p.Copy(pos);\r\n        this.q.SetAngle(a);\r\n        return this;\r\n    }\r\n    SetPosition(position) {\r\n        this.p.Copy(position);\r\n        return this;\r\n    }\r\n    SetPositionXY(x, y) {\r\n        this.p.Set(x, y);\r\n        return this;\r\n    }\r\n    SetRotation(rotation) {\r\n        this.q.Copy(rotation);\r\n        return this;\r\n    }\r\n    SetRotationAngle(radians) {\r\n        this.q.SetAngle(radians);\r\n        return this;\r\n    }\r\n    GetPosition() {\r\n        return this.p;\r\n    }\r\n    GetRotation() {\r\n        return this.q;\r\n    }\r\n    GetRotationAngle() {\r\n        return this.q.GetAngle();\r\n    }\r\n    GetAngle() {\r\n        return this.q.GetAngle();\r\n    }\r\n    static MulXV(T, v, out) {\r\n        // float32 x = (T.q.c * v.x - T.q.s * v.y) + T.p.x;\r\n        // float32 y = (T.q.s * v.x + T.q.c * v.y) + T.p.y;\r\n        // return b2Vec2(x, y);\r\n        const T_q_c = T.q.c, T_q_s = T.q.s;\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = (T_q_c * v_x - T_q_s * v_y) + T.p.x;\r\n        out.y = (T_q_s * v_x + T_q_c * v_y) + T.p.y;\r\n        return out;\r\n    }\r\n    static MulTXV(T, v, out) {\r\n        // float32 px = v.x - T.p.x;\r\n        // float32 py = v.y - T.p.y;\r\n        // float32 x = (T.q.c * px + T.q.s * py);\r\n        // float32 y = (-T.q.s * px + T.q.c * py);\r\n        // return b2Vec2(x, y);\r\n        const T_q_c = T.q.c, T_q_s = T.q.s;\r\n        const p_x = v.x - T.p.x;\r\n        const p_y = v.y - T.p.y;\r\n        out.x = (T_q_c * p_x + T_q_s * p_y);\r\n        out.y = (-T_q_s * p_x + T_q_c * p_y);\r\n        return out;\r\n    }\r\n    static MulXX(A, B, out) {\r\n        b2Rot.MulRR(A.q, B.q, out.q);\r\n        b2Vec2.AddVV(b2Rot.MulRV(A.q, B.p, out.p), A.p, out.p);\r\n        return out;\r\n    }\r\n    static MulTXX(A, B, out) {\r\n        b2Rot.MulTRR(A.q, B.q, out.q);\r\n        b2Rot.MulTRV(A.q, b2Vec2.SubVV(B.p, A.p, out.p), out.p);\r\n        return out;\r\n    }\r\n}\r\nb2Transform.IDENTITY = new b2Transform();\r\n/// This describes the motion of a body/shape for TOI computation.\r\n/// Shapes are defined with respect to the body origin, which may\r\n/// no coincide with the center of mass. However, to support dynamics\r\n/// we must interpolate the center of mass position.\r\nexport class b2Sweep {\r\n    constructor() {\r\n        this.localCenter = new b2Vec2();\r\n        this.c0 = new b2Vec2();\r\n        this.c = new b2Vec2();\r\n        this.a0 = 0;\r\n        this.a = 0;\r\n        this.alpha0 = 0;\r\n    }\r\n    Clone() {\r\n        return new b2Sweep().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.localCenter.Copy(other.localCenter);\r\n        this.c0.Copy(other.c0);\r\n        this.c.Copy(other.c);\r\n        this.a0 = other.a0;\r\n        this.a = other.a;\r\n        this.alpha0 = other.alpha0;\r\n        return this;\r\n    }\r\n    GetTransform(xf, beta) {\r\n        const one_minus_beta = (1 - beta);\r\n        xf.p.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n        xf.p.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n        const angle = one_minus_beta * this.a0 + beta * this.a;\r\n        xf.q.SetAngle(angle);\r\n        xf.p.SelfSub(b2Rot.MulRV(xf.q, this.localCenter, b2Vec2.s_t0));\r\n        return xf;\r\n    }\r\n    Advance(alpha) {\r\n        // DEBUG: b2Assert(this.alpha0 < 1);\r\n        const beta = (alpha - this.alpha0) / (1 - this.alpha0);\r\n        const one_minus_beta = (1 - beta);\r\n        this.c0.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n        this.c0.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n        this.a0 = one_minus_beta * this.a0 + beta * this.a;\r\n        this.alpha0 = alpha;\r\n    }\r\n    Normalize() {\r\n        const d = b2_two_pi * Math.floor(this.a0 / b2_two_pi);\r\n        this.a0 -= d;\r\n        this.a -= d;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// Color for debug drawing. Each value has the range [0,1].\r\nexport class b2Color {\r\n    constructor(rr = 0.5, gg = 0.5, bb = 0.5, aa = 1.0) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n    }\r\n    Clone() {\r\n        return new b2Color().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.r = other.r;\r\n        this.g = other.g;\r\n        this.b = other.b;\r\n        this.a = other.a;\r\n        return this;\r\n    }\r\n    IsEqual(color) {\r\n        return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\r\n    }\r\n    IsZero() {\r\n        return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\r\n    }\r\n    Set(r, g, b, a = this.a) {\r\n        this.SetRGBA(r, g, b, a);\r\n    }\r\n    SetByteRGB(r, g, b) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        return this;\r\n    }\r\n    SetByteRGBA(r, g, b, a) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        this.a = a / 0xff;\r\n        return this;\r\n    }\r\n    SetRGB(rr, gg, bb) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        return this;\r\n    }\r\n    SetRGBA(rr, gg, bb, aa) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n        return this;\r\n    }\r\n    SelfAdd(color) {\r\n        this.r += color.r;\r\n        this.g += color.g;\r\n        this.b += color.b;\r\n        this.a += color.a;\r\n        return this;\r\n    }\r\n    Add(color, out) {\r\n        out.r = this.r + color.r;\r\n        out.g = this.g + color.g;\r\n        out.b = this.b + color.b;\r\n        out.a = this.a + color.a;\r\n        return out;\r\n    }\r\n    SelfSub(color) {\r\n        this.r -= color.r;\r\n        this.g -= color.g;\r\n        this.b -= color.b;\r\n        this.a -= color.a;\r\n        return this;\r\n    }\r\n    Sub(color, out) {\r\n        out.r = this.r - color.r;\r\n        out.g = this.g - color.g;\r\n        out.b = this.b - color.b;\r\n        out.a = this.a - color.a;\r\n        return out;\r\n    }\r\n    SelfMul(s) {\r\n        this.r *= s;\r\n        this.g *= s;\r\n        this.b *= s;\r\n        this.a *= s;\r\n        return this;\r\n    }\r\n    Mul(s, out) {\r\n        out.r = this.r * s;\r\n        out.g = this.g * s;\r\n        out.b = this.b * s;\r\n        out.a = this.a * s;\r\n        return out;\r\n    }\r\n    Mix(mixColor, strength) {\r\n        b2Color.MixColors(this, mixColor, strength);\r\n    }\r\n    static MixColors(colorA, colorB, strength) {\r\n        const dr = (strength * (colorB.r - colorA.r));\r\n        const dg = (strength * (colorB.g - colorA.g));\r\n        const db = (strength * (colorB.b - colorA.b));\r\n        const da = (strength * (colorB.a - colorA.a));\r\n        colorA.r += dr;\r\n        colorA.g += dg;\r\n        colorA.b += db;\r\n        colorA.a += da;\r\n        colorB.r -= dr;\r\n        colorB.g -= dg;\r\n        colorB.b -= db;\r\n        colorB.a -= da;\r\n    }\r\n    MakeStyleString(alpha = this.a) {\r\n        return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\r\n    }\r\n    static MakeStyleString(r, g, b, a = 1.0) {\r\n        // function clamp(x: number, lo: number, hi: number) { return x < lo ? lo : hi < x ? hi : x; }\r\n        r *= 255; // r = clamp(r, 0, 255);\r\n        g *= 255; // g = clamp(g, 0, 255);\r\n        b *= 255; // b = clamp(b, 0, 255);\r\n        // a = clamp(a, 0, 1);\r\n        if (a < 1) {\r\n            return `rgba(${r},${g},${b},${a})`;\r\n        }\r\n        else {\r\n            return `rgb(${r},${g},${b})`;\r\n        }\r\n    }\r\n}\r\nb2Color.ZERO = new b2Color(0, 0, 0, 0);\r\nb2Color.RED = new b2Color(1, 0, 0);\r\nb2Color.GREEN = new b2Color(0, 1, 0);\r\nb2Color.BLUE = new b2Color(0, 0, 1);\r\nexport var b2DrawFlags;\r\n(function (b2DrawFlags) {\r\n    b2DrawFlags[b2DrawFlags[\"e_none\"] = 0] = \"e_none\";\r\n    b2DrawFlags[b2DrawFlags[\"e_shapeBit\"] = 1] = \"e_shapeBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_jointBit\"] = 2] = \"e_jointBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_aabbBit\"] = 4] = \"e_aabbBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_pairBit\"] = 8] = \"e_pairBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_centerOfMassBit\"] = 16] = \"e_centerOfMassBit\";\r\n    // #if B2_ENABLE_PARTICLE\r\n    b2DrawFlags[b2DrawFlags[\"e_particleBit\"] = 32] = \"e_particleBit\";\r\n    // #endif\r\n    b2DrawFlags[b2DrawFlags[\"e_controllerBit\"] = 64] = \"e_controllerBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_all\"] = 63] = \"e_all\";\r\n})(b2DrawFlags || (b2DrawFlags = {}));\r\n/// Implement and register this class with a b2World to provide debug drawing of physics\r\n/// entities in your game.\r\nexport class b2Draw {\r\n    constructor() {\r\n        this.m_drawFlags = 0;\r\n    }\r\n    SetFlags(flags) {\r\n        this.m_drawFlags = flags;\r\n    }\r\n    GetFlags() {\r\n        return this.m_drawFlags;\r\n    }\r\n    AppendFlags(flags) {\r\n        this.m_drawFlags |= flags;\r\n    }\r\n    ClearFlags(flags) {\r\n        this.m_drawFlags &= ~flags;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJEcmF3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvQ29tbW9uL2IyRHJhdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQWNGLDREQUE0RDtBQUM1RCxNQUFNLE9BQU8sT0FBTztJQVlsQixZQUFZLEtBQWEsR0FBRyxFQUFFLEtBQWEsR0FBRyxFQUFFLEtBQWEsR0FBRyxFQUFFLEtBQWEsR0FBRztRQUNoRixJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNaLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ1osSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDWixJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNkLENBQUM7SUFFTSxLQUFLO1FBQ1YsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRU0sSUFBSSxDQUFDLEtBQVc7UUFDckIsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLE9BQU8sQ0FBQyxLQUFXO1FBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0RyxDQUFDO0lBRU0sTUFBTTtRQUNYLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzlFLENBQUM7SUFFTSxHQUFHLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTLEVBQUUsSUFBWSxJQUFJLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFTSxVQUFVLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTO1FBQy9DLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDbEIsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLFdBQVcsQ0FBQyxDQUFTLEVBQUUsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTO1FBQzNELElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDbEIsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxNQUFNLENBQUMsRUFBVSxFQUFFLEVBQVUsRUFBRSxFQUFVO1FBQzlDLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ1osSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDWixJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNaLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLE9BQU8sQ0FBQyxFQUFVLEVBQUUsRUFBVSxFQUFFLEVBQVUsRUFBRSxFQUFVO1FBQzNELElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ1osSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDWixJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNaLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ1osT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sT0FBTyxDQUFDLEtBQVc7UUFDeEIsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2xCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLEdBQUcsQ0FBaUIsS0FBVyxFQUFFLEdBQU07UUFDNUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekIsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekIsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekIsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekIsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDO0lBRU0sT0FBTyxDQUFDLEtBQVc7UUFDeEIsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2xCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLEdBQUcsQ0FBaUIsS0FBVyxFQUFFLEdBQU07UUFDNUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekIsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekIsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekIsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekIsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDO0lBRU0sT0FBTyxDQUFDLENBQVM7UUFDdEIsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNaLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ1osSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDWixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxHQUFHLENBQWlCLENBQVMsRUFBRSxHQUFNO1FBQzFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkIsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkIsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDO0lBRU0sR0FBRyxDQUFDLFFBQWMsRUFBRSxRQUFnQjtRQUN6QyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBWSxFQUFFLE1BQVksRUFBRSxRQUFnQjtRQUNsRSxNQUFNLEVBQUUsR0FBRyxDQUFDLFFBQVEsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlDLE1BQU0sRUFBRSxHQUFHLENBQUMsUUFBUSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM5QyxNQUFNLEVBQUUsR0FBRyxDQUFDLFFBQVEsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDZixNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNmLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2YsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDZixNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNmLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2YsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDZixNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBRU0sZUFBZSxDQUFDLFFBQWdCLElBQUksQ0FBQyxDQUFDO1FBQzNDLE9BQU8sT0FBTyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBRU0sTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFTLEVBQUUsQ0FBUyxFQUFFLENBQVMsRUFBRSxJQUFZLEdBQUc7UUFDNUUsOEZBQThGO1FBQzlGLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyx3QkFBd0I7UUFDbEMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLHdCQUF3QjtRQUNsQyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsd0JBQXdCO1FBQ2xDLHNCQUFzQjtRQUN0QixJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDVCxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7U0FDcEM7YUFBTTtZQUNMLE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1NBQzlCO0lBQ0gsQ0FBQzs7QUExSnNCLFlBQUksR0FBc0IsSUFBSSxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFFbEQsV0FBRyxHQUFzQixJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzlDLGFBQUssR0FBc0IsSUFBSSxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNoRCxZQUFJLEdBQXNCLElBQUksT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUF5SnhFLE1BQU0sQ0FBTixJQUFZLFdBWVg7QUFaRCxXQUFZLFdBQVc7SUFDckIsaURBQVUsQ0FBQTtJQUNWLHlEQUFtQixDQUFBO0lBQ25CLHlEQUFtQixDQUFBO0lBQ25CLHVEQUFrQixDQUFBO0lBQ2xCLHVEQUFrQixDQUFBO0lBQ2xCLHdFQUEwQixDQUFBO0lBQzFCLHlCQUF5QjtJQUN6QixnRUFBc0IsQ0FBQTtJQUN0QixTQUFTO0lBQ1Qsb0VBQXdCLENBQUE7SUFDeEIsZ0RBQWMsQ0FBQTtBQUNoQixDQUFDLEVBWlcsV0FBVyxLQUFYLFdBQVcsUUFZdEI7QUFFRCx3RkFBd0Y7QUFDeEYsMEJBQTBCO0FBQzFCLE1BQU0sT0FBZ0IsTUFBTTtJQUE1QjtRQUNTLGdCQUFXLEdBQWdCLENBQUMsQ0FBQztJQXVDdEMsQ0FBQztJQXJDUSxRQUFRLENBQUMsS0FBa0I7UUFDaEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7SUFDM0IsQ0FBQztJQUVNLFFBQVE7UUFDYixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVNLFdBQVcsQ0FBQyxLQUFrQjtRQUNuQyxJQUFJLENBQUMsV0FBVyxJQUFJLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBRU0sVUFBVSxDQUFDLEtBQWtCO1FBQ2xDLElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDN0IsQ0FBQztDQXVCRiJ9","/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// Timer for profiling. This has platform specific code and may\r\n/// not work on every platform.\r\nexport class b2Timer {\r\n    constructor() {\r\n        this.m_start = Date.now();\r\n    }\r\n    /// Reset the timer.\r\n    Reset() {\r\n        this.m_start = Date.now();\r\n        return this;\r\n    }\r\n    /// Get the time since construction or the last reset.\r\n    GetMilliseconds() {\r\n        return Date.now() - this.m_start;\r\n    }\r\n}\r\nexport class b2Counter {\r\n    constructor() {\r\n        this.m_count = 0;\r\n        this.m_min_count = 0;\r\n        this.m_max_count = 0;\r\n    }\r\n    GetCount() {\r\n        return this.m_count;\r\n    }\r\n    GetMinCount() {\r\n        return this.m_min_count;\r\n    }\r\n    GetMaxCount() {\r\n        return this.m_max_count;\r\n    }\r\n    ResetCount() {\r\n        const count = this.m_count;\r\n        this.m_count = 0;\r\n        return count;\r\n    }\r\n    ResetMinCount() {\r\n        this.m_min_count = 0;\r\n    }\r\n    ResetMaxCount() {\r\n        this.m_max_count = 0;\r\n    }\r\n    Increment() {\r\n        this.m_count++;\r\n        if (this.m_max_count < this.m_count) {\r\n            this.m_max_count = this.m_count;\r\n        }\r\n    }\r\n    Decrement() {\r\n        this.m_count--;\r\n        if (this.m_min_count > this.m_count) {\r\n            this.m_min_count = this.m_count;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJUaW1lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbW1vbi9iMlRpbWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsZ0VBQWdFO0FBQ2hFLCtCQUErQjtBQUMvQixNQUFNLE9BQU8sT0FBTztJQUFwQjtRQUNTLFlBQU8sR0FBVyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFZdEMsQ0FBQztJQVZDLG9CQUFvQjtJQUNiLEtBQUs7UUFDVixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUMxQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxzREFBc0Q7SUFDL0MsZUFBZTtRQUNwQixPQUFPLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ25DLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxTQUFTO0lBQXRCO1FBQ1MsWUFBTyxHQUFXLENBQUMsQ0FBQztRQUNwQixnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUN4QixnQkFBVyxHQUFXLENBQUMsQ0FBQztJQTJDakMsQ0FBQztJQXpDUSxRQUFRO1FBQ2IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFTSxXQUFXO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBRU0sV0FBVztRQUNoQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVNLFVBQVU7UUFDZixNQUFNLEtBQUssR0FBVyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVNLGFBQWE7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUVNLGFBQWE7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUVNLFNBQVM7UUFDZCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFFZixJQUFJLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNuQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7U0FDakM7SUFDSCxDQUFDO0lBRU0sU0FBUztRQUNkLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUVmLElBQUksSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztTQUNqQztJQUNILENBQUM7Q0FDRiJ9","/*\r\n* Copyright (c) 2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"./b2Settings\";\r\nimport { b2MakeArray } from \"./b2Settings\";\r\n/// This is a growable LIFO stack with an initial capacity of N.\r\n/// If the stack size exceeds the initial capacity, the heap is used\r\n/// to increase the size of the stack.\r\nexport class b2GrowableStack {\r\n    constructor(N) {\r\n        this.m_stack = [];\r\n        this.m_count = 0;\r\n        this.m_stack = b2MakeArray(N, (index) => null);\r\n        this.m_count = 0;\r\n    }\r\n    Reset() {\r\n        this.m_count = 0;\r\n        return this;\r\n    }\r\n    Push(element) {\r\n        this.m_stack[this.m_count] = element;\r\n        this.m_count++;\r\n    }\r\n    Pop() {\r\n        // DEBUG: b2Assert(this.m_count > 0);\r\n        this.m_count--;\r\n        const element = this.m_stack[this.m_count];\r\n        this.m_stack[this.m_count] = null;\r\n        if (element === null) {\r\n            throw new Error();\r\n        }\r\n        return element;\r\n    }\r\n    GetCount() {\r\n        return this.m_count;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJHcm93YWJsZVN0YWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvQ29tbW9uL2IyR3Jvd2FibGVTdGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLGtEQUFrRDtBQUNsRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTNDLGdFQUFnRTtBQUNoRSxvRUFBb0U7QUFDcEUsc0NBQXNDO0FBRXRDLE1BQU0sT0FBTyxlQUFlO0lBSTFCLFlBQVksQ0FBUztRQUhkLFlBQU8sR0FBb0IsRUFBRSxDQUFDO1FBQzlCLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFHekIsSUFBSSxDQUFDLE9BQU8sR0FBRyxXQUFXLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztJQUNuQixDQUFDO0lBRU0sS0FBSztRQUNWLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLElBQUksQ0FBQyxPQUFVO1FBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLE9BQU8sQ0FBQztRQUNyQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVNLEdBQUc7UUFDUixxQ0FBcUM7UUFDckMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2YsTUFBTSxPQUFPLEdBQWEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLElBQUksT0FBTyxLQUFLLElBQUksRUFBRTtZQUFFLE1BQU0sSUFBSSxLQUFLLEVBQUUsQ0FBQztTQUFFO1FBQzVDLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFTSxRQUFRO1FBQ2IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7Q0FDRiJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport class b2BlockAllocator {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJCbG9ja0FsbG9jYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbW1vbi9iMkJsb2NrQWxsb2NhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTSxPQUFPLGdCQUFnQjtDQUFHIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport class b2StackAllocator {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTdGFja0FsbG9jYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbW1vbi9iMlN0YWNrQWxsb2NhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTSxPQUFPLGdCQUFnQjtDQUFHIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_epsilon, b2_epsilon_sq, b2_polygonRadius, b2_linearSlop } from \"../Common/b2Settings\";\r\nimport { b2Max, b2Vec2, b2Rot, b2Transform, b2Abs } from \"../Common/b2Math\";\r\n/// A distance proxy is used by the GJK algorithm.\r\n/// It encapsulates any shape.\r\nexport class b2DistanceProxy {\r\n    constructor() {\r\n        this.m_buffer = b2Vec2.MakeArray(2);\r\n        this.m_vertices = this.m_buffer;\r\n        this.m_count = 0;\r\n        this.m_radius = 0;\r\n    }\r\n    Copy(other) {\r\n        if (other.m_vertices === other.m_buffer) {\r\n            this.m_vertices = this.m_buffer;\r\n            this.m_buffer[0].Copy(other.m_buffer[0]);\r\n            this.m_buffer[1].Copy(other.m_buffer[1]);\r\n        }\r\n        else {\r\n            this.m_vertices = other.m_vertices;\r\n        }\r\n        this.m_count = other.m_count;\r\n        this.m_radius = other.m_radius;\r\n        return this;\r\n    }\r\n    Reset() {\r\n        this.m_vertices = this.m_buffer;\r\n        this.m_count = 0;\r\n        this.m_radius = 0;\r\n        return this;\r\n    }\r\n    SetShape(shape, index) {\r\n        shape.SetupDistanceProxy(this, index);\r\n    }\r\n    SetVerticesRadius(vertices, count, radius) {\r\n        this.m_vertices = vertices;\r\n        this.m_count = count;\r\n        this.m_radius = radius;\r\n    }\r\n    GetSupport(d) {\r\n        let bestIndex = 0;\r\n        let bestValue = b2Vec2.DotVV(this.m_vertices[0], d);\r\n        for (let i = 1; i < this.m_count; ++i) {\r\n            const value = b2Vec2.DotVV(this.m_vertices[i], d);\r\n            if (value > bestValue) {\r\n                bestIndex = i;\r\n                bestValue = value;\r\n            }\r\n        }\r\n        return bestIndex;\r\n    }\r\n    GetSupportVertex(d) {\r\n        let bestIndex = 0;\r\n        let bestValue = b2Vec2.DotVV(this.m_vertices[0], d);\r\n        for (let i = 1; i < this.m_count; ++i) {\r\n            const value = b2Vec2.DotVV(this.m_vertices[i], d);\r\n            if (value > bestValue) {\r\n                bestIndex = i;\r\n                bestValue = value;\r\n            }\r\n        }\r\n        return this.m_vertices[bestIndex];\r\n    }\r\n    GetVertexCount() {\r\n        return this.m_count;\r\n    }\r\n    GetVertex(index) {\r\n        // DEBUG: b2Assert(0 <= index && index < this.m_count);\r\n        return this.m_vertices[index];\r\n    }\r\n}\r\nexport class b2SimplexCache {\r\n    constructor() {\r\n        this.metric = 0;\r\n        this.count = 0;\r\n        this.indexA = [0, 0, 0];\r\n        this.indexB = [0, 0, 0];\r\n    }\r\n    Reset() {\r\n        this.metric = 0;\r\n        this.count = 0;\r\n        return this;\r\n    }\r\n}\r\nexport class b2DistanceInput {\r\n    constructor() {\r\n        this.proxyA = new b2DistanceProxy();\r\n        this.proxyB = new b2DistanceProxy();\r\n        this.transformA = new b2Transform();\r\n        this.transformB = new b2Transform();\r\n        this.useRadii = false;\r\n    }\r\n    Reset() {\r\n        this.proxyA.Reset();\r\n        this.proxyB.Reset();\r\n        this.transformA.SetIdentity();\r\n        this.transformB.SetIdentity();\r\n        this.useRadii = false;\r\n        return this;\r\n    }\r\n}\r\nexport class b2DistanceOutput {\r\n    constructor() {\r\n        this.pointA = new b2Vec2();\r\n        this.pointB = new b2Vec2();\r\n        this.distance = 0;\r\n        this.iterations = 0; ///< number of GJK iterations used\r\n    }\r\n    Reset() {\r\n        this.pointA.SetZero();\r\n        this.pointB.SetZero();\r\n        this.distance = 0;\r\n        this.iterations = 0;\r\n        return this;\r\n    }\r\n}\r\n/// Input parameters for b2ShapeCast\r\nexport class b2ShapeCastInput {\r\n    constructor() {\r\n        this.proxyA = new b2DistanceProxy();\r\n        this.proxyB = new b2DistanceProxy();\r\n        this.transformA = new b2Transform();\r\n        this.transformB = new b2Transform();\r\n        this.translationB = new b2Vec2();\r\n    }\r\n}\r\n/// Output results for b2ShapeCast\r\nexport class b2ShapeCastOutput {\r\n    constructor() {\r\n        this.point = new b2Vec2();\r\n        this.normal = new b2Vec2();\r\n        this.lambda = 0.0;\r\n        this.iterations = 0;\r\n    }\r\n}\r\nexport let b2_gjkCalls = 0;\r\nexport let b2_gjkIters = 0;\r\nexport let b2_gjkMaxIters = 0;\r\nexport function b2_gjk_reset() {\r\n    b2_gjkCalls = 0;\r\n    b2_gjkIters = 0;\r\n    b2_gjkMaxIters = 0;\r\n}\r\nexport class b2SimplexVertex {\r\n    constructor() {\r\n        this.wA = new b2Vec2(); // support point in proxyA\r\n        this.wB = new b2Vec2(); // support point in proxyB\r\n        this.w = new b2Vec2(); // wB - wA\r\n        this.a = 0; // barycentric coordinate for closest point\r\n        this.indexA = 0; // wA index\r\n        this.indexB = 0; // wB index\r\n    }\r\n    Copy(other) {\r\n        this.wA.Copy(other.wA); // support point in proxyA\r\n        this.wB.Copy(other.wB); // support point in proxyB\r\n        this.w.Copy(other.w); // wB - wA\r\n        this.a = other.a; // barycentric coordinate for closest point\r\n        this.indexA = other.indexA; // wA index\r\n        this.indexB = other.indexB; // wB index\r\n        return this;\r\n    }\r\n}\r\nexport class b2Simplex {\r\n    constructor() {\r\n        this.m_v1 = new b2SimplexVertex();\r\n        this.m_v2 = new b2SimplexVertex();\r\n        this.m_v3 = new b2SimplexVertex();\r\n        this.m_vertices = [ /*3*/];\r\n        this.m_count = 0;\r\n        this.m_vertices[0] = this.m_v1;\r\n        this.m_vertices[1] = this.m_v2;\r\n        this.m_vertices[2] = this.m_v3;\r\n    }\r\n    ReadCache(cache, proxyA, transformA, proxyB, transformB) {\r\n        // DEBUG: b2Assert(0 <= cache.count && cache.count <= 3);\r\n        // Copy data from cache.\r\n        this.m_count = cache.count;\r\n        const vertices = this.m_vertices;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const v = vertices[i];\r\n            v.indexA = cache.indexA[i];\r\n            v.indexB = cache.indexB[i];\r\n            const wALocal = proxyA.GetVertex(v.indexA);\r\n            const wBLocal = proxyB.GetVertex(v.indexB);\r\n            b2Transform.MulXV(transformA, wALocal, v.wA);\r\n            b2Transform.MulXV(transformB, wBLocal, v.wB);\r\n            b2Vec2.SubVV(v.wB, v.wA, v.w);\r\n            v.a = 0;\r\n        }\r\n        // Compute the new simplex metric, if it is substantially different than\r\n        // old metric then flush the simplex.\r\n        if (this.m_count > 1) {\r\n            const metric1 = cache.metric;\r\n            const metric2 = this.GetMetric();\r\n            if (metric2 < 0.5 * metric1 || 2 * metric1 < metric2 || metric2 < b2_epsilon) {\r\n                // Reset the simplex.\r\n                this.m_count = 0;\r\n            }\r\n        }\r\n        // If the cache is empty or invalid ...\r\n        if (this.m_count === 0) {\r\n            const v = vertices[0];\r\n            v.indexA = 0;\r\n            v.indexB = 0;\r\n            const wALocal = proxyA.GetVertex(0);\r\n            const wBLocal = proxyB.GetVertex(0);\r\n            b2Transform.MulXV(transformA, wALocal, v.wA);\r\n            b2Transform.MulXV(transformB, wBLocal, v.wB);\r\n            b2Vec2.SubVV(v.wB, v.wA, v.w);\r\n            v.a = 1;\r\n            this.m_count = 1;\r\n        }\r\n    }\r\n    WriteCache(cache) {\r\n        cache.metric = this.GetMetric();\r\n        cache.count = this.m_count;\r\n        const vertices = this.m_vertices;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            cache.indexA[i] = vertices[i].indexA;\r\n            cache.indexB[i] = vertices[i].indexB;\r\n        }\r\n    }\r\n    GetSearchDirection(out) {\r\n        switch (this.m_count) {\r\n            case 1:\r\n                return b2Vec2.NegV(this.m_v1.w, out);\r\n            case 2: {\r\n                const e12 = b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, out);\r\n                const sgn = b2Vec2.CrossVV(e12, b2Vec2.NegV(this.m_v1.w, b2Vec2.s_t0));\r\n                if (sgn > 0) {\r\n                    // Origin is left of e12.\r\n                    return b2Vec2.CrossOneV(e12, out);\r\n                }\r\n                else {\r\n                    // Origin is right of e12.\r\n                    return b2Vec2.CrossVOne(e12, out);\r\n                }\r\n            }\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                return out.SetZero();\r\n        }\r\n    }\r\n    GetClosestPoint(out) {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                // DEBUG: b2Assert(false);\r\n                return out.SetZero();\r\n            case 1:\r\n                return out.Copy(this.m_v1.w);\r\n            case 2:\r\n                return out.Set(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);\r\n            case 3:\r\n                return out.SetZero();\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                return out.SetZero();\r\n        }\r\n    }\r\n    GetWitnessPoints(pA, pB) {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                // DEBUG: b2Assert(false);\r\n                break;\r\n            case 1:\r\n                pA.Copy(this.m_v1.wA);\r\n                pB.Copy(this.m_v1.wB);\r\n                break;\r\n            case 2:\r\n                pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;\r\n                pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;\r\n                pB.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;\r\n                pB.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;\r\n                break;\r\n            case 3:\r\n                pB.x = pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;\r\n                pB.y = pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;\r\n                break;\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                break;\r\n        }\r\n    }\r\n    GetMetric() {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                // DEBUG: b2Assert(false);\r\n                return 0;\r\n            case 1:\r\n                return 0;\r\n            case 2:\r\n                return b2Vec2.DistanceVV(this.m_v1.w, this.m_v2.w);\r\n            case 3:\r\n                return b2Vec2.CrossVV(b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, b2Vec2.s_t0), b2Vec2.SubVV(this.m_v3.w, this.m_v1.w, b2Vec2.s_t1));\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                return 0;\r\n        }\r\n    }\r\n    Solve2() {\r\n        const w1 = this.m_v1.w;\r\n        const w2 = this.m_v2.w;\r\n        const e12 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\r\n        // w1 region\r\n        const d12_2 = (-b2Vec2.DotVV(w1, e12));\r\n        if (d12_2 <= 0) {\r\n            // a2 <= 0, so we clamp it to 0\r\n            this.m_v1.a = 1;\r\n            this.m_count = 1;\r\n            return;\r\n        }\r\n        // w2 region\r\n        const d12_1 = b2Vec2.DotVV(w2, e12);\r\n        if (d12_1 <= 0) {\r\n            // a1 <= 0, so we clamp it to 0\r\n            this.m_v2.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v2);\r\n            return;\r\n        }\r\n        // Must be in e12 region.\r\n        const inv_d12 = 1 / (d12_1 + d12_2);\r\n        this.m_v1.a = d12_1 * inv_d12;\r\n        this.m_v2.a = d12_2 * inv_d12;\r\n        this.m_count = 2;\r\n    }\r\n    Solve3() {\r\n        const w1 = this.m_v1.w;\r\n        const w2 = this.m_v2.w;\r\n        const w3 = this.m_v3.w;\r\n        // Edge12\r\n        // [1      1     ][a1] = [1]\r\n        // [w1.e12 w2.e12][a2] = [0]\r\n        // a3 = 0\r\n        const e12 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\r\n        const w1e12 = b2Vec2.DotVV(w1, e12);\r\n        const w2e12 = b2Vec2.DotVV(w2, e12);\r\n        const d12_1 = w2e12;\r\n        const d12_2 = (-w1e12);\r\n        // Edge13\r\n        // [1      1     ][a1] = [1]\r\n        // [w1.e13 w3.e13][a3] = [0]\r\n        // a2 = 0\r\n        const e13 = b2Vec2.SubVV(w3, w1, b2Simplex.s_e13);\r\n        const w1e13 = b2Vec2.DotVV(w1, e13);\r\n        const w3e13 = b2Vec2.DotVV(w3, e13);\r\n        const d13_1 = w3e13;\r\n        const d13_2 = (-w1e13);\r\n        // Edge23\r\n        // [1      1     ][a2] = [1]\r\n        // [w2.e23 w3.e23][a3] = [0]\r\n        // a1 = 0\r\n        const e23 = b2Vec2.SubVV(w3, w2, b2Simplex.s_e23);\r\n        const w2e23 = b2Vec2.DotVV(w2, e23);\r\n        const w3e23 = b2Vec2.DotVV(w3, e23);\r\n        const d23_1 = w3e23;\r\n        const d23_2 = (-w2e23);\r\n        // Triangle123\r\n        const n123 = b2Vec2.CrossVV(e12, e13);\r\n        const d123_1 = n123 * b2Vec2.CrossVV(w2, w3);\r\n        const d123_2 = n123 * b2Vec2.CrossVV(w3, w1);\r\n        const d123_3 = n123 * b2Vec2.CrossVV(w1, w2);\r\n        // w1 region\r\n        if (d12_2 <= 0 && d13_2 <= 0) {\r\n            this.m_v1.a = 1;\r\n            this.m_count = 1;\r\n            return;\r\n        }\r\n        // e12\r\n        if (d12_1 > 0 && d12_2 > 0 && d123_3 <= 0) {\r\n            const inv_d12 = 1 / (d12_1 + d12_2);\r\n            this.m_v1.a = d12_1 * inv_d12;\r\n            this.m_v2.a = d12_2 * inv_d12;\r\n            this.m_count = 2;\r\n            return;\r\n        }\r\n        // e13\r\n        if (d13_1 > 0 && d13_2 > 0 && d123_2 <= 0) {\r\n            const inv_d13 = 1 / (d13_1 + d13_2);\r\n            this.m_v1.a = d13_1 * inv_d13;\r\n            this.m_v3.a = d13_2 * inv_d13;\r\n            this.m_count = 2;\r\n            this.m_v2.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // w2 region\r\n        if (d12_1 <= 0 && d23_2 <= 0) {\r\n            this.m_v2.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v2);\r\n            return;\r\n        }\r\n        // w3 region\r\n        if (d13_1 <= 0 && d23_1 <= 0) {\r\n            this.m_v3.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // e23\r\n        if (d23_1 > 0 && d23_2 > 0 && d123_1 <= 0) {\r\n            const inv_d23 = 1 / (d23_1 + d23_2);\r\n            this.m_v2.a = d23_1 * inv_d23;\r\n            this.m_v3.a = d23_2 * inv_d23;\r\n            this.m_count = 2;\r\n            this.m_v1.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // Must be in triangle123\r\n        const inv_d123 = 1 / (d123_1 + d123_2 + d123_3);\r\n        this.m_v1.a = d123_1 * inv_d123;\r\n        this.m_v2.a = d123_2 * inv_d123;\r\n        this.m_v3.a = d123_3 * inv_d123;\r\n        this.m_count = 3;\r\n    }\r\n}\r\nb2Simplex.s_e12 = new b2Vec2();\r\nb2Simplex.s_e13 = new b2Vec2();\r\nb2Simplex.s_e23 = new b2Vec2();\r\nconst b2Distance_s_simplex = new b2Simplex();\r\nconst b2Distance_s_saveA = [0, 0, 0];\r\nconst b2Distance_s_saveB = [0, 0, 0];\r\nconst b2Distance_s_p = new b2Vec2();\r\nconst b2Distance_s_d = new b2Vec2();\r\nconst b2Distance_s_normal = new b2Vec2();\r\nconst b2Distance_s_supportA = new b2Vec2();\r\nconst b2Distance_s_supportB = new b2Vec2();\r\nexport function b2Distance(output, cache, input) {\r\n    ++b2_gjkCalls;\r\n    const proxyA = input.proxyA;\r\n    const proxyB = input.proxyB;\r\n    const transformA = input.transformA;\r\n    const transformB = input.transformB;\r\n    // Initialize the simplex.\r\n    const simplex = b2Distance_s_simplex;\r\n    simplex.ReadCache(cache, proxyA, transformA, proxyB, transformB);\r\n    // Get simplex vertices as an array.\r\n    const vertices = simplex.m_vertices;\r\n    const k_maxIters = 20;\r\n    // These store the vertices of the last simplex so that we\r\n    // can check for duplicates and prevent cycling.\r\n    const saveA = b2Distance_s_saveA;\r\n    const saveB = b2Distance_s_saveB;\r\n    let saveCount = 0;\r\n    // Main iteration loop.\r\n    let iter = 0;\r\n    while (iter < k_maxIters) {\r\n        // Copy simplex so we can identify duplicates.\r\n        saveCount = simplex.m_count;\r\n        for (let i = 0; i < saveCount; ++i) {\r\n            saveA[i] = vertices[i].indexA;\r\n            saveB[i] = vertices[i].indexB;\r\n        }\r\n        switch (simplex.m_count) {\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                simplex.Solve2();\r\n                break;\r\n            case 3:\r\n                simplex.Solve3();\r\n                break;\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                break;\r\n        }\r\n        // If we have 3 points, then the origin is in the corresponding triangle.\r\n        if (simplex.m_count === 3) {\r\n            break;\r\n        }\r\n        // Get search direction.\r\n        const d = simplex.GetSearchDirection(b2Distance_s_d);\r\n        // Ensure the search direction is numerically fit.\r\n        if (d.LengthSquared() < b2_epsilon_sq) {\r\n            // The origin is probably contained by a line segment\r\n            // or triangle. Thus the shapes are overlapped.\r\n            // We can't return zero here even though there may be overlap.\r\n            // In case the simplex is a point, segment, or triangle it is difficult\r\n            // to determine if the origin is contained in the CSO or very close to it.\r\n            break;\r\n        }\r\n        // Compute a tentative new simplex vertex using support points.\r\n        const vertex = vertices[simplex.m_count];\r\n        vertex.indexA = proxyA.GetSupport(b2Rot.MulTRV(transformA.q, b2Vec2.NegV(d, b2Vec2.s_t0), b2Distance_s_supportA));\r\n        b2Transform.MulXV(transformA, proxyA.GetVertex(vertex.indexA), vertex.wA);\r\n        vertex.indexB = proxyB.GetSupport(b2Rot.MulTRV(transformB.q, d, b2Distance_s_supportB));\r\n        b2Transform.MulXV(transformB, proxyB.GetVertex(vertex.indexB), vertex.wB);\r\n        b2Vec2.SubVV(vertex.wB, vertex.wA, vertex.w);\r\n        // Iteration count is equated to the number of support point calls.\r\n        ++iter;\r\n        ++b2_gjkIters;\r\n        // Check for duplicate support points. This is the main termination criteria.\r\n        let duplicate = false;\r\n        for (let i = 0; i < saveCount; ++i) {\r\n            if (vertex.indexA === saveA[i] && vertex.indexB === saveB[i]) {\r\n                duplicate = true;\r\n                break;\r\n            }\r\n        }\r\n        // If we found a duplicate support point we must exit to avoid cycling.\r\n        if (duplicate) {\r\n            break;\r\n        }\r\n        // New vertex is ok and needed.\r\n        ++simplex.m_count;\r\n    }\r\n    b2_gjkMaxIters = b2Max(b2_gjkMaxIters, iter);\r\n    // Prepare output.\r\n    simplex.GetWitnessPoints(output.pointA, output.pointB);\r\n    output.distance = b2Vec2.DistanceVV(output.pointA, output.pointB);\r\n    output.iterations = iter;\r\n    // Cache the simplex.\r\n    simplex.WriteCache(cache);\r\n    // Apply radii if requested.\r\n    if (input.useRadii) {\r\n        const rA = proxyA.m_radius;\r\n        const rB = proxyB.m_radius;\r\n        if (output.distance > (rA + rB) && output.distance > b2_epsilon) {\r\n            // Shapes are still no overlapped.\r\n            // Move the witness points to the outer surface.\r\n            output.distance -= rA + rB;\r\n            const normal = b2Vec2.SubVV(output.pointB, output.pointA, b2Distance_s_normal);\r\n            normal.Normalize();\r\n            output.pointA.SelfMulAdd(rA, normal);\r\n            output.pointB.SelfMulSub(rB, normal);\r\n        }\r\n        else {\r\n            // Shapes are overlapped when radii are considered.\r\n            // Move the witness points to the middle.\r\n            const p = b2Vec2.MidVV(output.pointA, output.pointB, b2Distance_s_p);\r\n            output.pointA.Copy(p);\r\n            output.pointB.Copy(p);\r\n            output.distance = 0;\r\n        }\r\n    }\r\n}\r\n/// Perform a linear shape cast of shape B moving and shape A fixed. Determines the hit point, normal, and translation fraction.\r\n// GJK-raycast\r\n// Algorithm by Gino van den Bergen.\r\n// \"Smooth Mesh Contacts with GJK\" in Game Physics Pearls. 2010\r\n// bool b2ShapeCast(b2ShapeCastOutput* output, const b2ShapeCastInput* input);\r\nconst b2ShapeCast_s_n = new b2Vec2();\r\nconst b2ShapeCast_s_simplex = new b2Simplex();\r\nconst b2ShapeCast_s_wA = new b2Vec2();\r\nconst b2ShapeCast_s_wB = new b2Vec2();\r\nconst b2ShapeCast_s_v = new b2Vec2();\r\nconst b2ShapeCast_s_p = new b2Vec2();\r\nconst b2ShapeCast_s_pointA = new b2Vec2();\r\nconst b2ShapeCast_s_pointB = new b2Vec2();\r\nexport function b2ShapeCast(output, input) {\r\n    output.iterations = 0;\r\n    output.lambda = 1.0;\r\n    output.normal.SetZero();\r\n    output.point.SetZero();\r\n    // const b2DistanceProxy* proxyA = &input.proxyA;\r\n    const proxyA = input.proxyA;\r\n    // const b2DistanceProxy* proxyB = &input.proxyB;\r\n    const proxyB = input.proxyB;\r\n    // float32 radiusA = b2Max(proxyA.m_radius, b2_polygonRadius);\r\n    const radiusA = b2Max(proxyA.m_radius, b2_polygonRadius);\r\n    // float32 radiusB = b2Max(proxyB.m_radius, b2_polygonRadius);\r\n    const radiusB = b2Max(proxyB.m_radius, b2_polygonRadius);\r\n    // float32 radius = radiusA + radiusB;\r\n    const radius = radiusA + radiusB;\r\n    // b2Transform xfA = input.transformA;\r\n    const xfA = input.transformA;\r\n    // b2Transform xfB = input.transformB;\r\n    const xfB = input.transformB;\r\n    // b2Vec2 r = input.translationB;\r\n    const r = input.translationB;\r\n    // b2Vec2 n(0.0f, 0.0f);\r\n    const n = b2ShapeCast_s_n.Set(0.0, 0.0);\r\n    // float32 lambda = 0.0f;\r\n    let lambda = 0.0;\r\n    // Initial simplex\r\n    const simplex = b2ShapeCast_s_simplex;\r\n    simplex.m_count = 0;\r\n    // Get simplex vertices as an array.\r\n    // b2SimplexVertex* vertices = &simplex.m_v1;\r\n    const vertices = simplex.m_vertices;\r\n    // Get support point in -r direction\r\n    // int32 indexA = proxyA.GetSupport(b2MulT(xfA.q, -r));\r\n    let indexA = proxyA.GetSupport(b2Rot.MulTRV(xfA.q, b2Vec2.NegV(r, b2Vec2.s_t1), b2Vec2.s_t0));\r\n    // b2Vec2 wA = b2Mul(xfA, proxyA.GetVertex(indexA));\r\n    let wA = b2Transform.MulXV(xfA, proxyA.GetVertex(indexA), b2ShapeCast_s_wA);\r\n    // int32 indexB = proxyB.GetSupport(b2MulT(xfB.q, r));\r\n    let indexB = proxyB.GetSupport(b2Rot.MulTRV(xfB.q, r, b2Vec2.s_t0));\r\n    // b2Vec2 wB = b2Mul(xfB, proxyB.GetVertex(indexB));\r\n    let wB = b2Transform.MulXV(xfB, proxyB.GetVertex(indexB), b2ShapeCast_s_wB);\r\n    // b2Vec2 v = wA - wB;\r\n    const v = b2Vec2.SubVV(wA, wB, b2ShapeCast_s_v);\r\n    // Sigma is the target distance between polygons\r\n    // float32 sigma = b2Max(b2_polygonRadius, radius - b2_polygonRadius);\r\n    const sigma = b2Max(b2_polygonRadius, radius - b2_polygonRadius);\r\n    // const float32 tolerance = 0.5f * b2_linearSlop;\r\n    const tolerance = 0.5 * b2_linearSlop;\r\n    // Main iteration loop.\r\n    // const int32 k_maxIters = 20;\r\n    const k_maxIters = 20;\r\n    // int32 iter = 0;\r\n    let iter = 0;\r\n    // while (iter < k_maxIters && b2Abs(v.Length() - sigma) > tolerance)\r\n    while (iter < k_maxIters && b2Abs(v.Length() - sigma) > tolerance) {\r\n        // DEBUG: b2Assert(simplex.m_count < 3);\r\n        output.iterations += 1;\r\n        // Support in direction -v (A - B)\r\n        // indexA = proxyA.GetSupport(b2MulT(xfA.q, -v));\r\n        indexA = proxyA.GetSupport(b2Rot.MulTRV(xfA.q, b2Vec2.NegV(v, b2Vec2.s_t1), b2Vec2.s_t0));\r\n        // wA = b2Mul(xfA, proxyA.GetVertex(indexA));\r\n        wA = b2Transform.MulXV(xfA, proxyA.GetVertex(indexA), b2ShapeCast_s_wA);\r\n        // indexB = proxyB.GetSupport(b2MulT(xfB.q, v));\r\n        indexB = proxyB.GetSupport(b2Rot.MulTRV(xfB.q, v, b2Vec2.s_t0));\r\n        // wB = b2Mul(xfB, proxyB.GetVertex(indexB));\r\n        wB = b2Transform.MulXV(xfB, proxyB.GetVertex(indexB), b2ShapeCast_s_wB);\r\n        // b2Vec2 p = wA - wB;\r\n        const p = b2Vec2.SubVV(wA, wB, b2ShapeCast_s_p);\r\n        // -v is a normal at p\r\n        v.Normalize();\r\n        // Intersect ray with plane\r\n        const vp = b2Vec2.DotVV(v, p);\r\n        const vr = b2Vec2.DotVV(v, r);\r\n        if (vp - sigma > lambda * vr) {\r\n            if (vr <= 0.0) {\r\n                return false;\r\n            }\r\n            lambda = (vp - sigma) / vr;\r\n            if (lambda > 1.0) {\r\n                return false;\r\n            }\r\n            // n = -v;\r\n            n.Copy(v).SelfNeg();\r\n            simplex.m_count = 0;\r\n        }\r\n        // Reverse simplex since it works with B - A.\r\n        // Shift by lambda * r because we want the closest point to the current clip point.\r\n        // Note that the support point p is not shifted because we want the plane equation\r\n        // to be formed in unshifted space.\r\n        // b2SimplexVertex* vertex = vertices + simplex.m_count;\r\n        const vertex = vertices[simplex.m_count];\r\n        vertex.indexA = indexB;\r\n        // vertex.wA = wB + lambda * r;\r\n        vertex.wA.Copy(wB).SelfMulAdd(lambda, r);\r\n        vertex.indexB = indexA;\r\n        // vertex.wB = wA;\r\n        vertex.wB.Copy(wA);\r\n        // vertex.w = vertex.wB - vertex.wA;\r\n        vertex.w.Copy(vertex.wB).SelfSub(vertex.wA);\r\n        vertex.a = 1.0;\r\n        simplex.m_count += 1;\r\n        switch (simplex.m_count) {\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                simplex.Solve2();\r\n                break;\r\n            case 3:\r\n                simplex.Solve3();\r\n                break;\r\n            default:\r\n            // DEBUG: b2Assert(false);\r\n        }\r\n        // If we have 3 points, then the origin is in the corresponding triangle.\r\n        if (simplex.m_count === 3) {\r\n            // Overlap\r\n            return false;\r\n        }\r\n        // Get search direction.\r\n        // v = simplex.GetClosestPoint();\r\n        simplex.GetClosestPoint(v);\r\n        // Iteration count is equated to the number of support point calls.\r\n        ++iter;\r\n    }\r\n    // Prepare output.\r\n    const pointA = b2ShapeCast_s_pointA;\r\n    const pointB = b2ShapeCast_s_pointB;\r\n    simplex.GetWitnessPoints(pointA, pointB);\r\n    if (v.LengthSquared() > 0.0) {\r\n        // n = -v;\r\n        n.Copy(v).SelfNeg();\r\n        n.Normalize();\r\n    }\r\n    // output.point = pointA + radiusA * n;\r\n    output.normal.Copy(n);\r\n    output.lambda = lambda;\r\n    output.iterations = iter;\r\n    return true;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2_epsilon, b2_epsilon_sq, b2_maxManifoldPoints, b2MakeArray, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Distance, b2DistanceInput, b2DistanceOutput, b2SimplexCache } from \"./b2Distance\";\r\n/// @file\r\n/// Structures and functions used for computing contact points, distance\r\n/// queries, and TOI queries.\r\nexport var b2ContactFeatureType;\r\n(function (b2ContactFeatureType) {\r\n    b2ContactFeatureType[b2ContactFeatureType[\"e_vertex\"] = 0] = \"e_vertex\";\r\n    b2ContactFeatureType[b2ContactFeatureType[\"e_face\"] = 1] = \"e_face\";\r\n})(b2ContactFeatureType || (b2ContactFeatureType = {}));\r\n/// The features that intersect to form the contact point\r\n/// This must be 4 bytes or less.\r\nexport class b2ContactFeature {\r\n    constructor() {\r\n        this._key = 0;\r\n        this._key_invalid = false;\r\n        this._indexA = 0;\r\n        this._indexB = 0;\r\n        this._typeA = 0;\r\n        this._typeB = 0;\r\n    }\r\n    get key() {\r\n        if (this._key_invalid) {\r\n            this._key_invalid = false;\r\n            this._key = this._indexA | (this._indexB << 8) | (this._typeA << 16) | (this._typeB << 24);\r\n        }\r\n        return this._key;\r\n    }\r\n    set key(value) {\r\n        this._key = value;\r\n        this._key_invalid = false;\r\n        this._indexA = this._key & 0xff;\r\n        this._indexB = (this._key >> 8) & 0xff;\r\n        this._typeA = (this._key >> 16) & 0xff;\r\n        this._typeB = (this._key >> 24) & 0xff;\r\n    }\r\n    get indexA() {\r\n        return this._indexA;\r\n    }\r\n    set indexA(value) {\r\n        this._indexA = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get indexB() {\r\n        return this._indexB;\r\n    }\r\n    set indexB(value) {\r\n        this._indexB = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get typeA() {\r\n        return this._typeA;\r\n    }\r\n    set typeA(value) {\r\n        this._typeA = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get typeB() {\r\n        return this._typeB;\r\n    }\r\n    set typeB(value) {\r\n        this._typeB = value;\r\n        this._key_invalid = true;\r\n    }\r\n}\r\n/// Contact ids to facilitate warm starting.\r\nexport class b2ContactID {\r\n    constructor() {\r\n        this.cf = new b2ContactFeature();\r\n    }\r\n    Copy(o) {\r\n        this.key = o.key;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2ContactID().Copy(this);\r\n    }\r\n    get key() {\r\n        return this.cf.key;\r\n    }\r\n    set key(value) {\r\n        this.cf.key = value;\r\n    }\r\n}\r\n/// A manifold point is a contact point belonging to a contact\r\n/// manifold. It holds details related to the geometry and dynamics\r\n/// of the contact points.\r\n/// The local point usage depends on the manifold type:\r\n/// -e_circles: the local center of circleB\r\n/// -e_faceA: the local center of cirlceB or the clip point of polygonB\r\n/// -e_faceB: the clip point of polygonA\r\n/// This structure is stored across time steps, so we keep it small.\r\n/// Note: the impulses are used for internal caching and may not\r\n/// provide reliable contact forces, especially for high speed collisions.\r\nexport class b2ManifoldPoint {\r\n    constructor() {\r\n        this.localPoint = new b2Vec2(); ///< usage depends on manifold type\r\n        this.normalImpulse = 0; ///< the non-penetration impulse\r\n        this.tangentImpulse = 0; ///< the friction impulse\r\n        this.id = new b2ContactID(); // TODO: readonly  ///< uniquely identifies a contact point between two shapes\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ManifoldPoint());\r\n    }\r\n    Reset() {\r\n        this.localPoint.SetZero();\r\n        this.normalImpulse = 0;\r\n        this.tangentImpulse = 0;\r\n        this.id.key = 0;\r\n    }\r\n    Copy(o) {\r\n        this.localPoint.Copy(o.localPoint);\r\n        this.normalImpulse = o.normalImpulse;\r\n        this.tangentImpulse = o.tangentImpulse;\r\n        this.id.Copy(o.id);\r\n        return this;\r\n    }\r\n}\r\nexport var b2ManifoldType;\r\n(function (b2ManifoldType) {\r\n    b2ManifoldType[b2ManifoldType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2ManifoldType[b2ManifoldType[\"e_circles\"] = 0] = \"e_circles\";\r\n    b2ManifoldType[b2ManifoldType[\"e_faceA\"] = 1] = \"e_faceA\";\r\n    b2ManifoldType[b2ManifoldType[\"e_faceB\"] = 2] = \"e_faceB\";\r\n})(b2ManifoldType || (b2ManifoldType = {}));\r\n/// A manifold for two touching convex shapes.\r\n/// Box2D supports multiple types of contact:\r\n/// - clip point versus plane with radius\r\n/// - point versus point with radius (circles)\r\n/// The local point usage depends on the manifold type:\r\n/// -e_circles: the local center of circleA\r\n/// -e_faceA: the center of faceA\r\n/// -e_faceB: the center of faceB\r\n/// Similarly the local normal usage:\r\n/// -e_circles: not used\r\n/// -e_faceA: the normal on polygonA\r\n/// -e_faceB: the normal on polygonB\r\n/// We store contacts in this way so that position correction can\r\n/// account for movement, which is critical for continuous physics.\r\n/// All contact scenarios must be expressed in one of these types.\r\n/// This structure is stored across time steps, so we keep it small.\r\nexport class b2Manifold {\r\n    constructor() {\r\n        this.points = b2ManifoldPoint.MakeArray(b2_maxManifoldPoints);\r\n        this.localNormal = new b2Vec2();\r\n        this.localPoint = new b2Vec2();\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.pointCount = 0;\r\n    }\r\n    Reset() {\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            // DEBUG: b2Assert(this.points[i] instanceof b2ManifoldPoint);\r\n            this.points[i].Reset();\r\n        }\r\n        this.localNormal.SetZero();\r\n        this.localPoint.SetZero();\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.pointCount = 0;\r\n    }\r\n    Copy(o) {\r\n        this.pointCount = o.pointCount;\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            // DEBUG: b2Assert(this.points[i] instanceof b2ManifoldPoint);\r\n            this.points[i].Copy(o.points[i]);\r\n        }\r\n        this.localNormal.Copy(o.localNormal);\r\n        this.localPoint.Copy(o.localPoint);\r\n        this.type = o.type;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2Manifold().Copy(this);\r\n    }\r\n}\r\nexport class b2WorldManifold {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.points = b2Vec2.MakeArray(b2_maxManifoldPoints);\r\n        this.separations = b2MakeNumberArray(b2_maxManifoldPoints);\r\n    }\r\n    Initialize(manifold, xfA, radiusA, xfB, radiusB) {\r\n        if (manifold.pointCount === 0) {\r\n            return;\r\n        }\r\n        switch (manifold.type) {\r\n            case b2ManifoldType.e_circles: {\r\n                this.normal.Set(1, 0);\r\n                const pointA = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_pointA);\r\n                const pointB = b2Transform.MulXV(xfB, manifold.points[0].localPoint, b2WorldManifold.Initialize_s_pointB);\r\n                if (b2Vec2.DistanceSquaredVV(pointA, pointB) > b2_epsilon_sq) {\r\n                    b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\r\n                }\r\n                const cA = b2Vec2.AddVMulSV(pointA, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                const cB = b2Vec2.SubVMulSV(pointB, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                b2Vec2.MidVV(cA, cB, this.points[0]);\r\n                this.separations[0] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\r\n                break;\r\n            }\r\n            case b2ManifoldType.e_faceA: {\r\n                b2Rot.MulRV(xfA.q, manifold.localNormal, this.normal);\r\n                const planePoint = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\r\n                for (let i = 0; i < manifold.pointCount; ++i) {\r\n                    const clipPoint = b2Transform.MulXV(xfB, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\r\n                    const s = radiusA - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\r\n                    const cA = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                    const cB = b2Vec2.SubVMulSV(clipPoint, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                    b2Vec2.MidVV(cA, cB, this.points[i]);\r\n                    this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\r\n                }\r\n                break;\r\n            }\r\n            case b2ManifoldType.e_faceB: {\r\n                b2Rot.MulRV(xfB.q, manifold.localNormal, this.normal);\r\n                const planePoint = b2Transform.MulXV(xfB, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\r\n                for (let i = 0; i < manifold.pointCount; ++i) {\r\n                    const clipPoint = b2Transform.MulXV(xfA, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\r\n                    const s = radiusB - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\r\n                    const cB = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                    const cA = b2Vec2.SubVMulSV(clipPoint, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                    b2Vec2.MidVV(cA, cB, this.points[i]);\r\n                    this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cA, cB, b2Vec2.s_t0), this.normal); // b2Dot(cA - cB, normal);\r\n                }\r\n                // Ensure normal points from A to B.\r\n                this.normal.SelfNeg();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nb2WorldManifold.Initialize_s_pointA = new b2Vec2();\r\nb2WorldManifold.Initialize_s_pointB = new b2Vec2();\r\nb2WorldManifold.Initialize_s_cA = new b2Vec2();\r\nb2WorldManifold.Initialize_s_cB = new b2Vec2();\r\nb2WorldManifold.Initialize_s_planePoint = new b2Vec2();\r\nb2WorldManifold.Initialize_s_clipPoint = new b2Vec2();\r\n/// This is used for determining the state of contact points.\r\nexport var b2PointState;\r\n(function (b2PointState) {\r\n    b2PointState[b2PointState[\"b2_nullState\"] = 0] = \"b2_nullState\";\r\n    b2PointState[b2PointState[\"b2_addState\"] = 1] = \"b2_addState\";\r\n    b2PointState[b2PointState[\"b2_persistState\"] = 2] = \"b2_persistState\";\r\n    b2PointState[b2PointState[\"b2_removeState\"] = 3] = \"b2_removeState\";\r\n})(b2PointState || (b2PointState = {}));\r\n/// Compute the point states given two manifolds. The states pertain to the transition from manifold1\r\n/// to manifold2. So state1 is either persist or remove while state2 is either add or persist.\r\nexport function b2GetPointStates(state1, state2, manifold1, manifold2) {\r\n    // Detect persists and removes.\r\n    let i;\r\n    for (i = 0; i < manifold1.pointCount; ++i) {\r\n        const id = manifold1.points[i].id;\r\n        const key = id.key;\r\n        state1[i] = b2PointState.b2_removeState;\r\n        for (let j = 0, jct = manifold2.pointCount; j < jct; ++j) {\r\n            if (manifold2.points[j].id.key === key) {\r\n                state1[i] = b2PointState.b2_persistState;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for (; i < b2_maxManifoldPoints; ++i) {\r\n        state1[i] = b2PointState.b2_nullState;\r\n    }\r\n    // Detect persists and adds.\r\n    for (i = 0; i < manifold2.pointCount; ++i) {\r\n        const id = manifold2.points[i].id;\r\n        const key = id.key;\r\n        state2[i] = b2PointState.b2_addState;\r\n        for (let j = 0, jct = manifold1.pointCount; j < jct; ++j) {\r\n            if (manifold1.points[j].id.key === key) {\r\n                state2[i] = b2PointState.b2_persistState;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for (; i < b2_maxManifoldPoints; ++i) {\r\n        state2[i] = b2PointState.b2_nullState;\r\n    }\r\n}\r\n/// Used for computing contact manifolds.\r\nexport class b2ClipVertex {\r\n    constructor() {\r\n        this.v = new b2Vec2();\r\n        this.id = new b2ContactID();\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ClipVertex());\r\n    }\r\n    Copy(other) {\r\n        this.v.Copy(other.v);\r\n        this.id.Copy(other.id);\r\n        return this;\r\n    }\r\n}\r\n/// Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\r\nexport class b2RayCastInput {\r\n    constructor() {\r\n        this.p1 = new b2Vec2();\r\n        this.p2 = new b2Vec2();\r\n        this.maxFraction = 1;\r\n    }\r\n    Copy(o) {\r\n        this.p1.Copy(o.p1);\r\n        this.p2.Copy(o.p2);\r\n        this.maxFraction = o.maxFraction;\r\n        return this;\r\n    }\r\n}\r\n/// Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and p2\r\n/// come from b2RayCastInput.\r\nexport class b2RayCastOutput {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.fraction = 0;\r\n    }\r\n    Copy(o) {\r\n        this.normal.Copy(o.normal);\r\n        this.fraction = o.fraction;\r\n        return this;\r\n    }\r\n}\r\n/// An axis aligned bounding box.\r\nexport class b2AABB {\r\n    constructor() {\r\n        this.lowerBound = new b2Vec2(); ///< the lower vertex\r\n        this.upperBound = new b2Vec2(); ///< the upper vertex\r\n        this.m_cache_center = new b2Vec2(); // access using GetCenter()\r\n        this.m_cache_extent = new b2Vec2(); // access using GetExtents()\r\n    }\r\n    Copy(o) {\r\n        this.lowerBound.Copy(o.lowerBound);\r\n        this.upperBound.Copy(o.upperBound);\r\n        return this;\r\n    }\r\n    /// Verify that the bounds are sorted.\r\n    IsValid() {\r\n        const d_x = this.upperBound.x - this.lowerBound.x;\r\n        const d_y = this.upperBound.y - this.lowerBound.y;\r\n        let valid = d_x >= 0 && d_y >= 0;\r\n        valid = valid && this.lowerBound.IsValid() && this.upperBound.IsValid();\r\n        return valid;\r\n    }\r\n    /// Get the center of the AABB.\r\n    GetCenter() {\r\n        return b2Vec2.MidVV(this.lowerBound, this.upperBound, this.m_cache_center);\r\n    }\r\n    /// Get the extents of the AABB (half-widths).\r\n    GetExtents() {\r\n        return b2Vec2.ExtVV(this.lowerBound, this.upperBound, this.m_cache_extent);\r\n    }\r\n    /// Get the perimeter length\r\n    GetPerimeter() {\r\n        const wx = this.upperBound.x - this.lowerBound.x;\r\n        const wy = this.upperBound.y - this.lowerBound.y;\r\n        return 2 * (wx + wy);\r\n    }\r\n    /// Combine an AABB into this one.\r\n    Combine1(aabb) {\r\n        this.lowerBound.x = b2Min(this.lowerBound.x, aabb.lowerBound.x);\r\n        this.lowerBound.y = b2Min(this.lowerBound.y, aabb.lowerBound.y);\r\n        this.upperBound.x = b2Max(this.upperBound.x, aabb.upperBound.x);\r\n        this.upperBound.y = b2Max(this.upperBound.y, aabb.upperBound.y);\r\n        return this;\r\n    }\r\n    /// Combine two AABBs into this one.\r\n    Combine2(aabb1, aabb2) {\r\n        this.lowerBound.x = b2Min(aabb1.lowerBound.x, aabb2.lowerBound.x);\r\n        this.lowerBound.y = b2Min(aabb1.lowerBound.y, aabb2.lowerBound.y);\r\n        this.upperBound.x = b2Max(aabb1.upperBound.x, aabb2.upperBound.x);\r\n        this.upperBound.y = b2Max(aabb1.upperBound.y, aabb2.upperBound.y);\r\n        return this;\r\n    }\r\n    static Combine(aabb1, aabb2, out) {\r\n        out.Combine2(aabb1, aabb2);\r\n        return out;\r\n    }\r\n    /// Does this aabb contain the provided AABB.\r\n    Contains(aabb) {\r\n        let result = true;\r\n        result = result && this.lowerBound.x <= aabb.lowerBound.x;\r\n        result = result && this.lowerBound.y <= aabb.lowerBound.y;\r\n        result = result && aabb.upperBound.x <= this.upperBound.x;\r\n        result = result && aabb.upperBound.y <= this.upperBound.y;\r\n        return result;\r\n    }\r\n    // From Real-time Collision Detection, p179.\r\n    RayCast(output, input) {\r\n        let tmin = (-b2_maxFloat);\r\n        let tmax = b2_maxFloat;\r\n        const p_x = input.p1.x;\r\n        const p_y = input.p1.y;\r\n        const d_x = input.p2.x - input.p1.x;\r\n        const d_y = input.p2.y - input.p1.y;\r\n        const absD_x = b2Abs(d_x);\r\n        const absD_y = b2Abs(d_y);\r\n        const normal = output.normal;\r\n        if (absD_x < b2_epsilon) {\r\n            // Parallel.\r\n            if (p_x < this.lowerBound.x || this.upperBound.x < p_x) {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            const inv_d = 1 / d_x;\r\n            let t1 = (this.lowerBound.x - p_x) * inv_d;\r\n            let t2 = (this.upperBound.x - p_x) * inv_d;\r\n            // Sign of the normal vector.\r\n            let s = (-1);\r\n            if (t1 > t2) {\r\n                const t3 = t1;\r\n                t1 = t2;\r\n                t2 = t3;\r\n                s = 1;\r\n            }\r\n            // Push the min up\r\n            if (t1 > tmin) {\r\n                normal.x = s;\r\n                normal.y = 0;\r\n                tmin = t1;\r\n            }\r\n            // Pull the max down\r\n            tmax = b2Min(tmax, t2);\r\n            if (tmin > tmax) {\r\n                return false;\r\n            }\r\n        }\r\n        if (absD_y < b2_epsilon) {\r\n            // Parallel.\r\n            if (p_y < this.lowerBound.y || this.upperBound.y < p_y) {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            const inv_d = 1 / d_y;\r\n            let t1 = (this.lowerBound.y - p_y) * inv_d;\r\n            let t2 = (this.upperBound.y - p_y) * inv_d;\r\n            // Sign of the normal vector.\r\n            let s = (-1);\r\n            if (t1 > t2) {\r\n                const t3 = t1;\r\n                t1 = t2;\r\n                t2 = t3;\r\n                s = 1;\r\n            }\r\n            // Push the min up\r\n            if (t1 > tmin) {\r\n                normal.x = 0;\r\n                normal.y = s;\r\n                tmin = t1;\r\n            }\r\n            // Pull the max down\r\n            tmax = b2Min(tmax, t2);\r\n            if (tmin > tmax) {\r\n                return false;\r\n            }\r\n        }\r\n        // Does the ray start inside the box?\r\n        // Does the ray intersect beyond the max fraction?\r\n        if (tmin < 0 || input.maxFraction < tmin) {\r\n            return false;\r\n        }\r\n        // Intersection.\r\n        output.fraction = tmin;\r\n        return true;\r\n    }\r\n    TestContain(point) {\r\n        if (point.x < this.lowerBound.x || this.upperBound.x < point.x) {\r\n            return false;\r\n        }\r\n        if (point.y < this.lowerBound.y || this.upperBound.y < point.y) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    TestOverlap(other) {\r\n        const d1_x = other.lowerBound.x - this.upperBound.x;\r\n        const d1_y = other.lowerBound.y - this.upperBound.y;\r\n        const d2_x = this.lowerBound.x - other.upperBound.x;\r\n        const d2_y = this.lowerBound.y - other.upperBound.y;\r\n        if (d1_x > 0 || d1_y > 0) {\r\n            return false;\r\n        }\r\n        if (d2_x > 0 || d2_y > 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport function b2TestOverlapAABB(a, b) {\r\n    const d1_x = b.lowerBound.x - a.upperBound.x;\r\n    const d1_y = b.lowerBound.y - a.upperBound.y;\r\n    const d2_x = a.lowerBound.x - b.upperBound.x;\r\n    const d2_y = a.lowerBound.y - b.upperBound.y;\r\n    if (d1_x > 0 || d1_y > 0) {\r\n        return false;\r\n    }\r\n    if (d2_x > 0 || d2_y > 0) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/// Clipping for contact manifolds.\r\nexport function b2ClipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\r\n    // Start with no output points\r\n    let numOut = 0;\r\n    const vIn0 = vIn[0];\r\n    const vIn1 = vIn[1];\r\n    // Calculate the distance of end points to the line\r\n    const distance0 = b2Vec2.DotVV(normal, vIn0.v) - offset;\r\n    const distance1 = b2Vec2.DotVV(normal, vIn1.v) - offset;\r\n    // If the points are behind the plane\r\n    if (distance0 <= 0) {\r\n        vOut[numOut++].Copy(vIn0);\r\n    }\r\n    if (distance1 <= 0) {\r\n        vOut[numOut++].Copy(vIn1);\r\n    }\r\n    // If the points are on different sides of the plane\r\n    if (distance0 * distance1 < 0) {\r\n        // Find intersection point of edge and plane\r\n        const interp = distance0 / (distance0 - distance1);\r\n        const v = vOut[numOut].v;\r\n        v.x = vIn0.v.x + interp * (vIn1.v.x - vIn0.v.x);\r\n        v.y = vIn0.v.y + interp * (vIn1.v.y - vIn0.v.y);\r\n        // VertexA is hitting edgeB.\r\n        const id = vOut[numOut].id;\r\n        id.cf.indexA = vertexIndexA;\r\n        id.cf.indexB = vIn0.id.cf.indexB;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        id.cf.typeB = b2ContactFeatureType.e_face;\r\n        ++numOut;\r\n    }\r\n    return numOut;\r\n}\r\n/// Determine if two generic shapes overlap.\r\nconst b2TestOverlapShape_s_input = new b2DistanceInput();\r\nconst b2TestOverlapShape_s_simplexCache = new b2SimplexCache();\r\nconst b2TestOverlapShape_s_output = new b2DistanceOutput();\r\nexport function b2TestOverlapShape(shapeA, indexA, shapeB, indexB, xfA, xfB) {\r\n    const input = b2TestOverlapShape_s_input.Reset();\r\n    input.proxyA.SetShape(shapeA, indexA);\r\n    input.proxyB.SetShape(shapeB, indexB);\r\n    input.transformA.Copy(xfA);\r\n    input.transformB.Copy(xfB);\r\n    input.useRadii = true;\r\n    const simplexCache = b2TestOverlapShape_s_simplexCache.Reset();\r\n    simplexCache.count = 0;\r\n    const output = b2TestOverlapShape_s_output.Reset();\r\n    b2Distance(output, simplexCache, input);\r\n    return output.distance < 10 * b2_epsilon;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_aabbExtension, b2_aabbMultiplier } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2GrowableStack } from \"../Common/b2GrowableStack\";\r\nimport { b2AABB, b2RayCastInput, b2TestOverlapAABB } from \"./b2Collision\";\r\nfunction verify(value) {\r\n    if (value === null) {\r\n        throw new Error();\r\n    }\r\n    return value;\r\n}\r\n/// A node in the dynamic tree. The client does not interact with this directly.\r\nexport class b2TreeNode {\r\n    constructor(id = 0) {\r\n        this.m_id = 0;\r\n        this.aabb = new b2AABB();\r\n        this.parent = null; // or next\r\n        this.child1 = null;\r\n        this.child2 = null;\r\n        this.height = 0; // leaf = 0, free node = -1\r\n        this.m_id = id;\r\n    }\r\n    IsLeaf() {\r\n        return this.child1 === null;\r\n    }\r\n}\r\nexport class b2DynamicTree {\r\n    constructor() {\r\n        this.m_root = null;\r\n        // b2TreeNode* public m_nodes;\r\n        // int32 public m_nodeCount;\r\n        // int32 public m_nodeCapacity;\r\n        this.m_freeList = null;\r\n        this.m_path = 0;\r\n        this.m_insertionCount = 0;\r\n        this.m_stack = new b2GrowableStack(256);\r\n    }\r\n    // public GetUserData(proxy: b2TreeNode<T>): any {\r\n    //   // DEBUG: b2Assert(proxy !== null);\r\n    //   return proxy.userData;\r\n    // }\r\n    // public GetFatAABB(proxy: b2TreeNode<T>): b2AABB {\r\n    //   // DEBUG: b2Assert(proxy !== null);\r\n    //   return proxy.aabb;\r\n    // }\r\n    Query(aabb, callback) {\r\n        if (this.m_root === null) {\r\n            return;\r\n        }\r\n        const stack = this.m_stack.Reset();\r\n        stack.Push(this.m_root);\r\n        while (stack.GetCount() > 0) {\r\n            const node = stack.Pop();\r\n            // if (node === null) {\r\n            //   continue;\r\n            // }\r\n            if (node.aabb.TestOverlap(aabb)) {\r\n                if (node.IsLeaf()) {\r\n                    const proceed = callback(node);\r\n                    if (!proceed) {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    stack.Push(verify(node.child1));\r\n                    stack.Push(verify(node.child2));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    QueryPoint(point, callback) {\r\n        if (this.m_root === null) {\r\n            return;\r\n        }\r\n        const stack = this.m_stack.Reset();\r\n        stack.Push(this.m_root);\r\n        while (stack.GetCount() > 0) {\r\n            const node = stack.Pop();\r\n            // if (node === null) {\r\n            //   continue;\r\n            // }\r\n            if (node.aabb.TestContain(point)) {\r\n                if (node.IsLeaf()) {\r\n                    const proceed = callback(node);\r\n                    if (!proceed) {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    stack.Push(verify(node.child1));\r\n                    stack.Push(verify(node.child2));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    RayCast(input, callback) {\r\n        if (this.m_root === null) {\r\n            return;\r\n        }\r\n        const p1 = input.p1;\r\n        const p2 = input.p2;\r\n        const r = b2Vec2.SubVV(p2, p1, b2DynamicTree.s_r);\r\n        // DEBUG: b2Assert(r.LengthSquared() > 0);\r\n        r.Normalize();\r\n        // v is perpendicular to the segment.\r\n        const v = b2Vec2.CrossOneV(r, b2DynamicTree.s_v);\r\n        const abs_v = b2Vec2.AbsV(v, b2DynamicTree.s_abs_v);\r\n        // Separating axis for segment (Gino, p80).\r\n        // |dot(v, p1 - c)| > dot(|v|, h)\r\n        let maxFraction = input.maxFraction;\r\n        // Build a bounding box for the segment.\r\n        const segmentAABB = b2DynamicTree.s_segmentAABB;\r\n        let t_x = p1.x + maxFraction * (p2.x - p1.x);\r\n        let t_y = p1.y + maxFraction * (p2.y - p1.y);\r\n        segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\r\n        segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\r\n        segmentAABB.upperBound.x = b2Max(p1.x, t_x);\r\n        segmentAABB.upperBound.y = b2Max(p1.y, t_y);\r\n        const stack = this.m_stack.Reset();\r\n        stack.Push(this.m_root);\r\n        while (stack.GetCount() > 0) {\r\n            const node = stack.Pop();\r\n            // if (node === null) {\r\n            //   continue;\r\n            // }\r\n            if (!b2TestOverlapAABB(node.aabb, segmentAABB)) {\r\n                continue;\r\n            }\r\n            // Separating axis for segment (Gino, p80).\r\n            // |dot(v, p1 - c)| > dot(|v|, h)\r\n            const c = node.aabb.GetCenter();\r\n            const h = node.aabb.GetExtents();\r\n            const separation = b2Abs(b2Vec2.DotVV(v, b2Vec2.SubVV(p1, c, b2Vec2.s_t0))) - b2Vec2.DotVV(abs_v, h);\r\n            if (separation > 0) {\r\n                continue;\r\n            }\r\n            if (node.IsLeaf()) {\r\n                const subInput = b2DynamicTree.s_subInput;\r\n                subInput.p1.Copy(input.p1);\r\n                subInput.p2.Copy(input.p2);\r\n                subInput.maxFraction = maxFraction;\r\n                const value = callback(subInput, node);\r\n                if (value === 0) {\r\n                    // The client has terminated the ray cast.\r\n                    return;\r\n                }\r\n                if (value > 0) {\r\n                    // Update segment bounding box.\r\n                    maxFraction = value;\r\n                    t_x = p1.x + maxFraction * (p2.x - p1.x);\r\n                    t_y = p1.y + maxFraction * (p2.y - p1.y);\r\n                    segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\r\n                    segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\r\n                    segmentAABB.upperBound.x = b2Max(p1.x, t_x);\r\n                    segmentAABB.upperBound.y = b2Max(p1.y, t_y);\r\n                }\r\n            }\r\n            else {\r\n                stack.Push(verify(node.child1));\r\n                stack.Push(verify(node.child2));\r\n            }\r\n        }\r\n    }\r\n    AllocateNode() {\r\n        // Expand the node pool as needed.\r\n        if (this.m_freeList) {\r\n            const node = this.m_freeList;\r\n            this.m_freeList = node.parent; // this.m_freeList = node.next;\r\n            node.parent = null;\r\n            node.child1 = null;\r\n            node.child2 = null;\r\n            node.height = 0;\r\n            delete node.userData; // = null;\r\n            return node;\r\n        }\r\n        return new b2TreeNode(b2DynamicTree.s_node_id++);\r\n    }\r\n    FreeNode(node) {\r\n        node.parent = this.m_freeList; // node.next = this.m_freeList;\r\n        node.child1 = null;\r\n        node.child2 = null;\r\n        node.height = -1;\r\n        delete node.userData; // = null;\r\n        this.m_freeList = node;\r\n    }\r\n    CreateProxy(aabb, userData) {\r\n        const node = this.AllocateNode();\r\n        // Fatten the aabb.\r\n        const r_x = b2_aabbExtension;\r\n        const r_y = b2_aabbExtension;\r\n        node.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\r\n        node.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\r\n        node.aabb.upperBound.x = aabb.upperBound.x + r_x;\r\n        node.aabb.upperBound.y = aabb.upperBound.y + r_y;\r\n        node.userData = userData;\r\n        node.height = 0;\r\n        this.InsertLeaf(node);\r\n        return node;\r\n    }\r\n    DestroyProxy(proxy) {\r\n        // DEBUG: b2Assert(proxy.IsLeaf());\r\n        this.RemoveLeaf(proxy);\r\n        this.FreeNode(proxy);\r\n    }\r\n    MoveProxy(proxy, aabb, displacement) {\r\n        // DEBUG: b2Assert(proxy.IsLeaf());\r\n        if (proxy.aabb.Contains(aabb)) {\r\n            return false;\r\n        }\r\n        this.RemoveLeaf(proxy);\r\n        // Extend AABB.\r\n        // Predict AABB displacement.\r\n        const r_x = b2_aabbExtension + b2_aabbMultiplier * (displacement.x > 0 ? displacement.x : (-displacement.x));\r\n        const r_y = b2_aabbExtension + b2_aabbMultiplier * (displacement.y > 0 ? displacement.y : (-displacement.y));\r\n        proxy.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\r\n        proxy.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\r\n        proxy.aabb.upperBound.x = aabb.upperBound.x + r_x;\r\n        proxy.aabb.upperBound.y = aabb.upperBound.y + r_y;\r\n        this.InsertLeaf(proxy);\r\n        return true;\r\n    }\r\n    InsertLeaf(leaf) {\r\n        ++this.m_insertionCount;\r\n        if (this.m_root === null) {\r\n            this.m_root = leaf;\r\n            this.m_root.parent = null;\r\n            return;\r\n        }\r\n        // Find the best sibling for this node\r\n        const leafAABB = leaf.aabb;\r\n        ///const center: b2Vec2 = leafAABB.GetCenter();\r\n        let index = this.m_root;\r\n        while (!index.IsLeaf()) {\r\n            const child1 = verify(index.child1);\r\n            const child2 = verify(index.child2);\r\n            const area = index.aabb.GetPerimeter();\r\n            const combinedAABB = b2DynamicTree.s_combinedAABB;\r\n            combinedAABB.Combine2(index.aabb, leafAABB);\r\n            const combinedArea = combinedAABB.GetPerimeter();\r\n            // Cost of creating a new parent for this node and the new leaf\r\n            const cost = 2 * combinedArea;\r\n            // Minimum cost of pushing the leaf further down the tree\r\n            const inheritanceCost = 2 * (combinedArea - area);\r\n            // Cost of descending into child1\r\n            let cost1;\r\n            const aabb = b2DynamicTree.s_aabb;\r\n            let oldArea;\r\n            let newArea;\r\n            if (child1.IsLeaf()) {\r\n                aabb.Combine2(leafAABB, child1.aabb);\r\n                cost1 = aabb.GetPerimeter() + inheritanceCost;\r\n            }\r\n            else {\r\n                aabb.Combine2(leafAABB, child1.aabb);\r\n                oldArea = child1.aabb.GetPerimeter();\r\n                newArea = aabb.GetPerimeter();\r\n                cost1 = (newArea - oldArea) + inheritanceCost;\r\n            }\r\n            // Cost of descending into child2\r\n            let cost2;\r\n            if (child2.IsLeaf()) {\r\n                aabb.Combine2(leafAABB, child2.aabb);\r\n                cost2 = aabb.GetPerimeter() + inheritanceCost;\r\n            }\r\n            else {\r\n                aabb.Combine2(leafAABB, child2.aabb);\r\n                oldArea = child2.aabb.GetPerimeter();\r\n                newArea = aabb.GetPerimeter();\r\n                cost2 = newArea - oldArea + inheritanceCost;\r\n            }\r\n            // Descend according to the minimum cost.\r\n            if (cost < cost1 && cost < cost2) {\r\n                break;\r\n            }\r\n            // Descend\r\n            if (cost1 < cost2) {\r\n                index = child1;\r\n            }\r\n            else {\r\n                index = child2;\r\n            }\r\n        }\r\n        const sibling = index;\r\n        // Create a parent for the siblings.\r\n        const oldParent = sibling.parent;\r\n        const newParent = this.AllocateNode();\r\n        newParent.parent = oldParent;\r\n        delete newParent.userData; // = null;\r\n        newParent.aabb.Combine2(leafAABB, sibling.aabb);\r\n        newParent.height = sibling.height + 1;\r\n        if (oldParent) {\r\n            // The sibling was not the root.\r\n            if (oldParent.child1 === sibling) {\r\n                oldParent.child1 = newParent;\r\n            }\r\n            else {\r\n                oldParent.child2 = newParent;\r\n            }\r\n            newParent.child1 = sibling;\r\n            newParent.child2 = leaf;\r\n            sibling.parent = newParent;\r\n            leaf.parent = newParent;\r\n        }\r\n        else {\r\n            // The sibling was the root.\r\n            newParent.child1 = sibling;\r\n            newParent.child2 = leaf;\r\n            sibling.parent = newParent;\r\n            leaf.parent = newParent;\r\n            this.m_root = newParent;\r\n        }\r\n        // Walk back up the tree fixing heights and AABBs\r\n        let index2 = leaf.parent;\r\n        while (index2 !== null) {\r\n            index2 = this.Balance(index2);\r\n            const child1 = verify(index2.child1);\r\n            const child2 = verify(index2.child2);\r\n            index2.height = 1 + b2Max(child1.height, child2.height);\r\n            index2.aabb.Combine2(child1.aabb, child2.aabb);\r\n            index2 = index2.parent;\r\n        }\r\n        // this.Validate();\r\n    }\r\n    RemoveLeaf(leaf) {\r\n        if (leaf === this.m_root) {\r\n            this.m_root = null;\r\n            return;\r\n        }\r\n        const parent = verify(leaf.parent);\r\n        const grandParent = parent && parent.parent;\r\n        let sibling;\r\n        if (parent.child1 === leaf) {\r\n            sibling = verify(parent.child2);\r\n        }\r\n        else {\r\n            sibling = verify(parent.child1);\r\n        }\r\n        if (grandParent) {\r\n            // Destroy parent and connect sibling to grandParent.\r\n            if (grandParent.child1 === parent) {\r\n                grandParent.child1 = sibling;\r\n            }\r\n            else {\r\n                grandParent.child2 = sibling;\r\n            }\r\n            sibling.parent = grandParent;\r\n            this.FreeNode(parent);\r\n            // Adjust ancestor bounds.\r\n            let index = grandParent;\r\n            while (index) {\r\n                index = this.Balance(index);\r\n                const child1 = verify(index.child1);\r\n                const child2 = verify(index.child2);\r\n                index.aabb.Combine2(child1.aabb, child2.aabb);\r\n                index.height = 1 + b2Max(child1.height, child2.height);\r\n                index = index.parent;\r\n            }\r\n        }\r\n        else {\r\n            this.m_root = sibling;\r\n            sibling.parent = null;\r\n            this.FreeNode(parent);\r\n        }\r\n        // this.Validate();\r\n    }\r\n    Balance(A) {\r\n        // DEBUG: b2Assert(A !== null);\r\n        if (A.IsLeaf() || A.height < 2) {\r\n            return A;\r\n        }\r\n        const B = verify(A.child1);\r\n        const C = verify(A.child2);\r\n        const balance = C.height - B.height;\r\n        // Rotate C up\r\n        if (balance > 1) {\r\n            const F = verify(C.child1);\r\n            const G = verify(C.child2);\r\n            // Swap A and C\r\n            C.child1 = A;\r\n            C.parent = A.parent;\r\n            A.parent = C;\r\n            // A's old parent should point to C\r\n            if (C.parent !== null) {\r\n                if (C.parent.child1 === A) {\r\n                    C.parent.child1 = C;\r\n                }\r\n                else {\r\n                    // DEBUG: b2Assert(C.parent.child2 === A);\r\n                    C.parent.child2 = C;\r\n                }\r\n            }\r\n            else {\r\n                this.m_root = C;\r\n            }\r\n            // Rotate\r\n            if (F.height > G.height) {\r\n                C.child2 = F;\r\n                A.child2 = G;\r\n                G.parent = A;\r\n                A.aabb.Combine2(B.aabb, G.aabb);\r\n                C.aabb.Combine2(A.aabb, F.aabb);\r\n                A.height = 1 + b2Max(B.height, G.height);\r\n                C.height = 1 + b2Max(A.height, F.height);\r\n            }\r\n            else {\r\n                C.child2 = G;\r\n                A.child2 = F;\r\n                F.parent = A;\r\n                A.aabb.Combine2(B.aabb, F.aabb);\r\n                C.aabb.Combine2(A.aabb, G.aabb);\r\n                A.height = 1 + b2Max(B.height, F.height);\r\n                C.height = 1 + b2Max(A.height, G.height);\r\n            }\r\n            return C;\r\n        }\r\n        // Rotate B up\r\n        if (balance < -1) {\r\n            const D = verify(B.child1);\r\n            const E = verify(B.child2);\r\n            // Swap A and B\r\n            B.child1 = A;\r\n            B.parent = A.parent;\r\n            A.parent = B;\r\n            // A's old parent should point to B\r\n            if (B.parent !== null) {\r\n                if (B.parent.child1 === A) {\r\n                    B.parent.child1 = B;\r\n                }\r\n                else {\r\n                    // DEBUG: b2Assert(B.parent.child2 === A);\r\n                    B.parent.child2 = B;\r\n                }\r\n            }\r\n            else {\r\n                this.m_root = B;\r\n            }\r\n            // Rotate\r\n            if (D.height > E.height) {\r\n                B.child2 = D;\r\n                A.child1 = E;\r\n                E.parent = A;\r\n                A.aabb.Combine2(C.aabb, E.aabb);\r\n                B.aabb.Combine2(A.aabb, D.aabb);\r\n                A.height = 1 + b2Max(C.height, E.height);\r\n                B.height = 1 + b2Max(A.height, D.height);\r\n            }\r\n            else {\r\n                B.child2 = E;\r\n                A.child1 = D;\r\n                D.parent = A;\r\n                A.aabb.Combine2(C.aabb, D.aabb);\r\n                B.aabb.Combine2(A.aabb, E.aabb);\r\n                A.height = 1 + b2Max(C.height, D.height);\r\n                B.height = 1 + b2Max(A.height, E.height);\r\n            }\r\n            return B;\r\n        }\r\n        return A;\r\n    }\r\n    GetHeight() {\r\n        if (this.m_root === null) {\r\n            return 0;\r\n        }\r\n        return this.m_root.height;\r\n    }\r\n    static GetAreaNode(node) {\r\n        if (node === null) {\r\n            return 0;\r\n        }\r\n        if (node.IsLeaf()) {\r\n            return 0;\r\n        }\r\n        let area = node.aabb.GetPerimeter();\r\n        area += b2DynamicTree.GetAreaNode(node.child1);\r\n        area += b2DynamicTree.GetAreaNode(node.child2);\r\n        return area;\r\n    }\r\n    GetAreaRatio() {\r\n        if (this.m_root === null) {\r\n            return 0;\r\n        }\r\n        const root = this.m_root;\r\n        const rootArea = root.aabb.GetPerimeter();\r\n        const totalArea = b2DynamicTree.GetAreaNode(this.m_root);\r\n        /*\r\n        float32 totalArea = 0.0;\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          const b2TreeNode<T>* node = m_nodes + i;\r\n          if (node.height < 0) {\r\n            // Free node in pool\r\n            continue;\r\n          }\r\n    \r\n          totalArea += node.aabb.GetPerimeter();\r\n        }\r\n        */\r\n        return totalArea / rootArea;\r\n    }\r\n    ComputeHeightNode(node) {\r\n        if (!node || node.IsLeaf()) {\r\n            return 0;\r\n        }\r\n        const height1 = this.ComputeHeightNode(node.child1);\r\n        const height2 = this.ComputeHeightNode(node.child2);\r\n        return 1 + b2Max(height1, height2);\r\n    }\r\n    ComputeHeight() {\r\n        const height = this.ComputeHeightNode(this.m_root);\r\n        return height;\r\n    }\r\n    ValidateStructure(index) {\r\n        if (index === null) {\r\n            return;\r\n        }\r\n        if (index === this.m_root) {\r\n            // DEBUG: b2Assert(index.parent === null);\r\n        }\r\n        const node = index;\r\n        if (node.IsLeaf()) {\r\n            // DEBUG: b2Assert(node.child1 === null);\r\n            // DEBUG: b2Assert(node.child2 === null);\r\n            // DEBUG: b2Assert(node.height === 0);\r\n            return;\r\n        }\r\n        const child1 = verify(node.child1);\r\n        const child2 = verify(node.child2);\r\n        // DEBUG: b2Assert(child1.parent === index);\r\n        // DEBUG: b2Assert(child2.parent === index);\r\n        this.ValidateStructure(child1);\r\n        this.ValidateStructure(child2);\r\n    }\r\n    ValidateMetrics(index) {\r\n        if (index === null) {\r\n            return;\r\n        }\r\n        const node = index;\r\n        if (node.IsLeaf()) {\r\n            // DEBUG: b2Assert(node.child1 === null);\r\n            // DEBUG: b2Assert(node.child2 === null);\r\n            // DEBUG: b2Assert(node.height === 0);\r\n            return;\r\n        }\r\n        const child1 = verify(node.child1);\r\n        const child2 = verify(node.child2);\r\n        // DEBUG: const height1: number = child1.height;\r\n        // DEBUG: const height2: number = child2.height;\r\n        // DEBUG: const height: number = 1 + b2Max(height1, height2);\r\n        // DEBUG: b2Assert(node.height === height);\r\n        const aabb = b2DynamicTree.s_aabb;\r\n        aabb.Combine2(child1.aabb, child2.aabb);\r\n        // DEBUG: b2Assert(aabb.lowerBound === node.aabb.lowerBound);\r\n        // DEBUG: b2Assert(aabb.upperBound === node.aabb.upperBound);\r\n        this.ValidateMetrics(child1);\r\n        this.ValidateMetrics(child2);\r\n    }\r\n    Validate() {\r\n        // DEBUG: this.ValidateStructure(this.m_root);\r\n        // DEBUG: this.ValidateMetrics(this.m_root);\r\n        // let freeCount: number = 0;\r\n        // let freeIndex: b2TreeNode<T> | null = this.m_freeList;\r\n        // while (freeIndex !== null) {\r\n        //   freeIndex = freeIndex.parent; // freeIndex = freeIndex.next;\r\n        //   ++freeCount;\r\n        // }\r\n        // DEBUG: b2Assert(this.GetHeight() === this.ComputeHeight());\r\n        // b2Assert(this.m_nodeCount + freeCount === this.m_nodeCapacity);\r\n    }\r\n    static GetMaxBalanceNode(node, maxBalance) {\r\n        if (node === null) {\r\n            return maxBalance;\r\n        }\r\n        if (node.height <= 1) {\r\n            return maxBalance;\r\n        }\r\n        // DEBUG: b2Assert(!node.IsLeaf());\r\n        const child1 = verify(node.child1);\r\n        const child2 = verify(node.child2);\r\n        const balance = b2Abs(child2.height - child1.height);\r\n        return b2Max(maxBalance, balance);\r\n    }\r\n    GetMaxBalance() {\r\n        const maxBalance = b2DynamicTree.GetMaxBalanceNode(this.m_root, 0);\r\n        /*\r\n        int32 maxBalance = 0;\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          const b2TreeNode<T>* node = m_nodes + i;\r\n          if (node.height <= 1) {\r\n            continue;\r\n          }\r\n    \r\n          b2Assert(!node.IsLeaf());\r\n    \r\n          int32 child1 = node.child1;\r\n          int32 child2 = node.child2;\r\n          int32 balance = b2Abs(m_nodes[child2].height - m_nodes[child1].height);\r\n          maxBalance = b2Max(maxBalance, balance);\r\n        }\r\n        */\r\n        return maxBalance;\r\n    }\r\n    RebuildBottomUp() {\r\n        /*\r\n        int32* nodes = (int32*)b2Alloc(m_nodeCount * sizeof(int32));\r\n        int32 count = 0;\r\n    \r\n        // Build array of leaves. Free the rest.\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          if (m_nodes[i].height < 0) {\r\n            // free node in pool\r\n            continue;\r\n          }\r\n    \r\n          if (m_nodes[i].IsLeaf()) {\r\n            m_nodes[i].parent = b2_nullNode;\r\n            nodes[count] = i;\r\n            ++count;\r\n          } else {\r\n            FreeNode(i);\r\n          }\r\n        }\r\n    \r\n        while (count > 1) {\r\n          float32 minCost = b2_maxFloat;\r\n          int32 iMin = -1, jMin = -1;\r\n          for (int32 i = 0; i < count; ++i) {\r\n            b2AABB aabbi = m_nodes[nodes[i]].aabb;\r\n    \r\n            for (int32 j = i + 1; j < count; ++j) {\r\n              b2AABB aabbj = m_nodes[nodes[j]].aabb;\r\n              b2AABB b;\r\n              b.Combine(aabbi, aabbj);\r\n              float32 cost = b.GetPerimeter();\r\n              if (cost < minCost) {\r\n                iMin = i;\r\n                jMin = j;\r\n                minCost = cost;\r\n              }\r\n            }\r\n          }\r\n    \r\n          int32 index1 = nodes[iMin];\r\n          int32 index2 = nodes[jMin];\r\n          b2TreeNode<T>* child1 = m_nodes + index1;\r\n          b2TreeNode<T>* child2 = m_nodes + index2;\r\n    \r\n          int32 parentIndex = AllocateNode();\r\n          b2TreeNode<T>* parent = m_nodes + parentIndex;\r\n          parent.child1 = index1;\r\n          parent.child2 = index2;\r\n          parent.height = 1 + b2Max(child1.height, child2.height);\r\n          parent.aabb.Combine(child1.aabb, child2.aabb);\r\n          parent.parent = b2_nullNode;\r\n    \r\n          child1.parent = parentIndex;\r\n          child2.parent = parentIndex;\r\n    \r\n          nodes[jMin] = nodes[count-1];\r\n          nodes[iMin] = parentIndex;\r\n          --count;\r\n        }\r\n    \r\n        m_root = nodes[0];\r\n        b2Free(nodes);\r\n        */\r\n        this.Validate();\r\n    }\r\n    static ShiftOriginNode(node, newOrigin) {\r\n        if (node === null) {\r\n            return;\r\n        }\r\n        if (node.height <= 1) {\r\n            return;\r\n        }\r\n        // DEBUG: b2Assert(!node.IsLeaf());\r\n        const child1 = node.child1;\r\n        const child2 = node.child2;\r\n        b2DynamicTree.ShiftOriginNode(child1, newOrigin);\r\n        b2DynamicTree.ShiftOriginNode(child2, newOrigin);\r\n        node.aabb.lowerBound.SelfSub(newOrigin);\r\n        node.aabb.upperBound.SelfSub(newOrigin);\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        b2DynamicTree.ShiftOriginNode(this.m_root, newOrigin);\r\n        /*\r\n        // Build array of leaves. Free the rest.\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          m_nodes[i].aabb.lowerBound -= newOrigin;\r\n          m_nodes[i].aabb.upperBound -= newOrigin;\r\n        }\r\n        */\r\n    }\r\n}\r\nb2DynamicTree.s_r = new b2Vec2();\r\nb2DynamicTree.s_v = new b2Vec2();\r\nb2DynamicTree.s_abs_v = new b2Vec2();\r\nb2DynamicTree.s_segmentAABB = new b2AABB();\r\nb2DynamicTree.s_subInput = new b2RayCastInput();\r\nb2DynamicTree.s_combinedAABB = new b2AABB();\r\nb2DynamicTree.s_aabb = new b2AABB();\r\nb2DynamicTree.s_node_id = 0;\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2DynamicTree } from \"./b2DynamicTree\";\r\nexport class b2Pair {\r\n    constructor(proxyA, proxyB) {\r\n        this.proxyA = proxyA;\r\n        this.proxyB = proxyB;\r\n    }\r\n}\r\n/// The broad-phase is used for computing pairs and performing volume queries and ray casts.\r\n/// This broad-phase does not persist pairs. Instead, this reports potentially new pairs.\r\n/// It is up to the client to consume the new pairs and to track subsequent overlap.\r\nexport class b2BroadPhase {\r\n    constructor() {\r\n        this.m_tree = new b2DynamicTree();\r\n        this.m_proxyCount = 0;\r\n        // public m_moveCapacity: number = 16;\r\n        this.m_moveCount = 0;\r\n        this.m_moveBuffer = [];\r\n        // public m_pairCapacity: number = 16;\r\n        this.m_pairCount = 0;\r\n        this.m_pairBuffer = [];\r\n    }\r\n    // public m_queryProxyId: number = 0;\r\n    /// Create a proxy with an initial AABB. Pairs are not reported until\r\n    /// UpdatePairs is called.\r\n    CreateProxy(aabb, userData) {\r\n        const proxy = this.m_tree.CreateProxy(aabb, userData);\r\n        ++this.m_proxyCount;\r\n        this.BufferMove(proxy);\r\n        return proxy;\r\n    }\r\n    /// Destroy a proxy. It is up to the client to remove any pairs.\r\n    DestroyProxy(proxy) {\r\n        this.UnBufferMove(proxy);\r\n        --this.m_proxyCount;\r\n        this.m_tree.DestroyProxy(proxy);\r\n    }\r\n    /// Call MoveProxy as many times as you like, then when you are done\r\n    /// call UpdatePairs to finalized the proxy pairs (for your time step).\r\n    MoveProxy(proxy, aabb, displacement) {\r\n        const buffer = this.m_tree.MoveProxy(proxy, aabb, displacement);\r\n        if (buffer) {\r\n            this.BufferMove(proxy);\r\n        }\r\n    }\r\n    /// Call to trigger a re-processing of it's pairs on the next call to UpdatePairs.\r\n    TouchProxy(proxy) {\r\n        this.BufferMove(proxy);\r\n    }\r\n    /// Get the fat AABB for a proxy.\r\n    // public GetFatAABB(proxy: b2TreeNode<T>): b2AABB {\r\n    //   return this.m_tree.GetFatAABB(proxy);\r\n    // }\r\n    /// Get user data from a proxy. Returns NULL if the id is invalid.\r\n    // public GetUserData(proxy: b2TreeNode<T>): T {\r\n    //   return this.m_tree.GetUserData(proxy);\r\n    // }\r\n    /// Test overlap of fat AABBs.\r\n    // public TestOverlap(proxyA: b2TreeNode<T>, proxyB: b2TreeNode<T>): boolean {\r\n    //   const aabbA: b2AABB = this.m_tree.GetFatAABB(proxyA);\r\n    //   const aabbB: b2AABB = this.m_tree.GetFatAABB(proxyB);\r\n    //   return b2TestOverlapAABB(aabbA, aabbB);\r\n    // }\r\n    /// Get the number of proxies.\r\n    GetProxyCount() {\r\n        return this.m_proxyCount;\r\n    }\r\n    /// Update the pairs. This results in pair callbacks. This can only add pairs.\r\n    UpdatePairs(callback) {\r\n        // Reset pair buffer\r\n        this.m_pairCount = 0;\r\n        // Perform tree queries for all moving proxies.\r\n        for (let i = 0; i < this.m_moveCount; ++i) {\r\n            const queryProxy = this.m_moveBuffer[i];\r\n            if (queryProxy === null) {\r\n                continue;\r\n            }\r\n            // This is called from box2d.b2DynamicTree::Query when we are gathering pairs.\r\n            // boolean b2BroadPhase::QueryCallback(int32 proxyId);\r\n            // We have to query the tree with the fat AABB so that\r\n            // we don't fail to create a pair that may touch later.\r\n            const fatAABB = queryProxy.aabb; // this.m_tree.GetFatAABB(queryProxy);\r\n            // Query tree, create pairs and add them pair buffer.\r\n            this.m_tree.Query(fatAABB, (proxy) => {\r\n                // A proxy cannot form a pair with itself.\r\n                if (proxy.m_id === queryProxy.m_id) {\r\n                    return true;\r\n                }\r\n                // const proxyA = proxy < queryProxy ? proxy : queryProxy;\r\n                // const proxyB = proxy >= queryProxy ? proxy : queryProxy;\r\n                let proxyA;\r\n                let proxyB;\r\n                if (proxy.m_id < queryProxy.m_id) {\r\n                    proxyA = proxy;\r\n                    proxyB = queryProxy;\r\n                }\r\n                else {\r\n                    proxyA = queryProxy;\r\n                    proxyB = proxy;\r\n                }\r\n                // Grow the pair buffer as needed.\r\n                if (this.m_pairCount === this.m_pairBuffer.length) {\r\n                    this.m_pairBuffer[this.m_pairCount] = new b2Pair(proxyA, proxyB);\r\n                }\r\n                else {\r\n                    const pair = this.m_pairBuffer[this.m_pairCount];\r\n                    pair.proxyA = proxyA;\r\n                    pair.proxyB = proxyB;\r\n                }\r\n                ++this.m_pairCount;\r\n                return true;\r\n            });\r\n        }\r\n        // Reset move buffer\r\n        this.m_moveCount = 0;\r\n        // Sort the pair buffer to expose duplicates.\r\n        this.m_pairBuffer.length = this.m_pairCount;\r\n        this.m_pairBuffer.sort(b2PairLessThan);\r\n        // Send the pairs back to the client.\r\n        let i = 0;\r\n        while (i < this.m_pairCount) {\r\n            const primaryPair = this.m_pairBuffer[i];\r\n            const userDataA = primaryPair.proxyA.userData; // this.m_tree.GetUserData(primaryPair.proxyA);\r\n            const userDataB = primaryPair.proxyB.userData; // this.m_tree.GetUserData(primaryPair.proxyB);\r\n            callback(userDataA, userDataB);\r\n            ++i;\r\n            // Skip any duplicate pairs.\r\n            while (i < this.m_pairCount) {\r\n                const pair = this.m_pairBuffer[i];\r\n                if (pair.proxyA.m_id !== primaryPair.proxyA.m_id || pair.proxyB.m_id !== primaryPair.proxyB.m_id) {\r\n                    break;\r\n                }\r\n                ++i;\r\n            }\r\n        }\r\n        // Try to keep the tree balanced.\r\n        // this.m_tree.Rebalance(4);\r\n    }\r\n    /// Query an AABB for overlapping proxies. The callback class\r\n    /// is called for each proxy that overlaps the supplied AABB.\r\n    Query(aabb, callback) {\r\n        this.m_tree.Query(aabb, callback);\r\n    }\r\n    QueryPoint(point, callback) {\r\n        this.m_tree.QueryPoint(point, callback);\r\n    }\r\n    /// Ray-cast against the proxies in the tree. This relies on the callback\r\n    /// to perform a exact ray-cast in the case were the proxy contains a shape.\r\n    /// The callback also performs the any collision filtering. This has performance\r\n    /// roughly equal to k * log(n), where k is the number of collisions and n is the\r\n    /// number of proxies in the tree.\r\n    /// @param input the ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\r\n    /// @param callback a callback class that is called for each proxy that is hit by the ray.\r\n    RayCast(input, callback) {\r\n        this.m_tree.RayCast(input, callback);\r\n    }\r\n    /// Get the height of the embedded tree.\r\n    GetTreeHeight() {\r\n        return this.m_tree.GetHeight();\r\n    }\r\n    /// Get the balance of the embedded tree.\r\n    GetTreeBalance() {\r\n        return this.m_tree.GetMaxBalance();\r\n    }\r\n    /// Get the quality metric of the embedded tree.\r\n    GetTreeQuality() {\r\n        return this.m_tree.GetAreaRatio();\r\n    }\r\n    /// Shift the world origin. Useful for large worlds.\r\n    /// The shift formula is: position -= newOrigin\r\n    /// @param newOrigin the new origin with respect to the old origin\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_tree.ShiftOrigin(newOrigin);\r\n    }\r\n    BufferMove(proxy) {\r\n        this.m_moveBuffer[this.m_moveCount] = proxy;\r\n        ++this.m_moveCount;\r\n    }\r\n    UnBufferMove(proxy) {\r\n        const i = this.m_moveBuffer.indexOf(proxy);\r\n        this.m_moveBuffer[i] = null;\r\n    }\r\n}\r\n/// This is used to sort pairs.\r\nexport function b2PairLessThan(pair1, pair2) {\r\n    if (pair1.proxyA.m_id === pair2.proxyA.m_id) {\r\n        return pair1.proxyB.m_id - pair2.proxyB.m_id;\r\n    }\r\n    return pair1.proxyA.m_id - pair2.proxyA.m_id;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJCcm9hZFBoYXNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvQ29sbGlzaW9uL2IyQnJvYWRQaGFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUlGLE9BQU8sRUFBYyxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUU1RCxNQUFNLE9BQU8sTUFBTTtJQUNqQixZQUFtQixNQUFxQixFQUFTLE1BQXFCO1FBQW5ELFdBQU0sR0FBTixNQUFNLENBQWU7UUFBUyxXQUFNLEdBQU4sTUFBTSxDQUFlO0lBQUcsQ0FBQztDQUMzRTtBQUVELDRGQUE0RjtBQUM1Rix5RkFBeUY7QUFDekYsb0ZBQW9GO0FBQ3BGLE1BQU0sT0FBTyxZQUFZO0lBQXpCO1FBQ2tCLFdBQU0sR0FBcUIsSUFBSSxhQUFhLEVBQUssQ0FBQztRQUMzRCxpQkFBWSxHQUFXLENBQUMsQ0FBQztRQUNoQyxzQ0FBc0M7UUFDL0IsZ0JBQVcsR0FBVyxDQUFDLENBQUM7UUFDZixpQkFBWSxHQUFnQyxFQUFFLENBQUM7UUFDL0Qsc0NBQXNDO1FBQy9CLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ2YsaUJBQVksR0FBcUIsRUFBRSxDQUFDO0lBK0x0RCxDQUFDO0lBOUxDLHFDQUFxQztJQUVyQyxxRUFBcUU7SUFDckUsMEJBQTBCO0lBQ25CLFdBQVcsQ0FBQyxJQUFZLEVBQUUsUUFBVztRQUMxQyxNQUFNLEtBQUssR0FBa0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3JFLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUNwQixJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZCLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELGdFQUFnRTtJQUN6RCxZQUFZLENBQUMsS0FBb0I7UUFDdEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxL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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_linearSlop, b2_maxPolygonVertices } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Max, b2Vec2, b2Rot, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2Distance, b2DistanceInput, b2DistanceOutput, b2DistanceProxy, b2SimplexCache } from \"./b2Distance\";\r\nexport let b2_toiTime = 0;\r\nexport let b2_toiMaxTime = 0;\r\nexport let b2_toiCalls = 0;\r\nexport let b2_toiIters = 0;\r\nexport let b2_toiMaxIters = 0;\r\nexport let b2_toiRootIters = 0;\r\nexport let b2_toiMaxRootIters = 0;\r\nexport function b2_toi_reset() {\r\n    b2_toiTime = 0;\r\n    b2_toiMaxTime = 0;\r\n    b2_toiCalls = 0;\r\n    b2_toiIters = 0;\r\n    b2_toiMaxIters = 0;\r\n    b2_toiRootIters = 0;\r\n    b2_toiMaxRootIters = 0;\r\n}\r\nconst b2TimeOfImpact_s_xfA = new b2Transform();\r\nconst b2TimeOfImpact_s_xfB = new b2Transform();\r\nconst b2TimeOfImpact_s_pointA = new b2Vec2();\r\nconst b2TimeOfImpact_s_pointB = new b2Vec2();\r\nconst b2TimeOfImpact_s_normal = new b2Vec2();\r\nconst b2TimeOfImpact_s_axisA = new b2Vec2();\r\nconst b2TimeOfImpact_s_axisB = new b2Vec2();\r\n/// Input parameters for b2TimeOfImpact\r\nexport class b2TOIInput {\r\n    constructor() {\r\n        this.proxyA = new b2DistanceProxy();\r\n        this.proxyB = new b2DistanceProxy();\r\n        this.sweepA = new b2Sweep();\r\n        this.sweepB = new b2Sweep();\r\n        this.tMax = 0; // defines sweep interval [0, tMax]\r\n    }\r\n}\r\n/// Output parameters for b2TimeOfImpact.\r\nexport var b2TOIOutputState;\r\n(function (b2TOIOutputState) {\r\n    b2TOIOutputState[b2TOIOutputState[\"e_unknown\"] = 0] = \"e_unknown\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_failed\"] = 1] = \"e_failed\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_overlapped\"] = 2] = \"e_overlapped\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_touching\"] = 3] = \"e_touching\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_separated\"] = 4] = \"e_separated\";\r\n})(b2TOIOutputState || (b2TOIOutputState = {}));\r\nexport class b2TOIOutput {\r\n    constructor() {\r\n        this.state = b2TOIOutputState.e_unknown;\r\n        this.t = 0;\r\n    }\r\n}\r\nexport var b2SeparationFunctionType;\r\n(function (b2SeparationFunctionType) {\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_points\"] = 0] = \"e_points\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_faceA\"] = 1] = \"e_faceA\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_faceB\"] = 2] = \"e_faceB\";\r\n})(b2SeparationFunctionType || (b2SeparationFunctionType = {}));\r\nexport class b2SeparationFunction {\r\n    constructor() {\r\n        this.m_sweepA = new b2Sweep();\r\n        this.m_sweepB = new b2Sweep();\r\n        this.m_type = b2SeparationFunctionType.e_unknown;\r\n        this.m_localPoint = new b2Vec2();\r\n        this.m_axis = new b2Vec2();\r\n    }\r\n    Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1) {\r\n        this.m_proxyA = proxyA;\r\n        this.m_proxyB = proxyB;\r\n        const count = cache.count;\r\n        // DEBUG: b2Assert(0 < count && count < 3);\r\n        this.m_sweepA.Copy(sweepA);\r\n        this.m_sweepB.Copy(sweepB);\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t1);\r\n        this.m_sweepB.GetTransform(xfB, t1);\r\n        if (count === 1) {\r\n            this.m_type = b2SeparationFunctionType.e_points;\r\n            const localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n            const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n            b2Vec2.SubVV(pointB, pointA, this.m_axis);\r\n            const s = this.m_axis.Normalize();\r\n            // #if B2_ENABLE_PARTICLE\r\n            this.m_localPoint.SetZero();\r\n            // #endif\r\n            return s;\r\n        }\r\n        else if (cache.indexA[0] === cache.indexA[1]) {\r\n            // Two points on B and one on A.\r\n            this.m_type = b2SeparationFunctionType.e_faceB;\r\n            const localPointB1 = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const localPointB2 = this.m_proxyB.GetVertex(cache.indexB[1]);\r\n            b2Vec2.CrossVOne(b2Vec2.SubVV(localPointB2, localPointB1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\r\n            const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n            b2Vec2.MidVV(localPointB1, localPointB2, this.m_localPoint);\r\n            const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n            const localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n            let s = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n            if (s < 0) {\r\n                this.m_axis.SelfNeg();\r\n                s = -s;\r\n            }\r\n            return s;\r\n        }\r\n        else {\r\n            // Two points on A and one or two points on B.\r\n            this.m_type = b2SeparationFunctionType.e_faceA;\r\n            const localPointA1 = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const localPointA2 = this.m_proxyA.GetVertex(cache.indexA[1]);\r\n            b2Vec2.CrossVOne(b2Vec2.SubVV(localPointA2, localPointA1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\r\n            const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n            b2Vec2.MidVV(localPointA1, localPointA2, this.m_localPoint);\r\n            const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n            const localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n            let s = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n            if (s < 0) {\r\n                this.m_axis.SelfNeg();\r\n                s = -s;\r\n            }\r\n            return s;\r\n        }\r\n    }\r\n    FindMinSeparation(indexA, indexB, t) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t);\r\n        this.m_sweepB.GetTransform(xfB, t);\r\n        switch (this.m_type) {\r\n            case b2SeparationFunctionType.e_points: {\r\n                const axisA = b2Rot.MulTRV(xfA.q, this.m_axis, b2TimeOfImpact_s_axisA);\r\n                const axisB = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(this.m_axis, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\r\n                indexA[0] = this.m_proxyA.GetSupport(axisA);\r\n                indexB[0] = this.m_proxyB.GetSupport(axisB);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA[0]);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB[0]);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceA: {\r\n                const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n                const axisB = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\r\n                indexA[0] = -1;\r\n                indexB[0] = this.m_proxyB.GetSupport(axisB);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB[0]);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceB: {\r\n                const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n                const axisA = b2Rot.MulTRV(xfA.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisA);\r\n                indexB[0] = -1;\r\n                indexA[0] = this.m_proxyA.GetSupport(axisA);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA[0]);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                indexA[0] = -1;\r\n                indexB[0] = -1;\r\n                return 0;\r\n        }\r\n    }\r\n    Evaluate(indexA, indexB, t) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t);\r\n        this.m_sweepB.GetTransform(xfB, t);\r\n        switch (this.m_type) {\r\n            case b2SeparationFunctionType.e_points: {\r\n                const localPointA = this.m_proxyA.GetVertex(indexA);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceA: {\r\n                const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceB: {\r\n                const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                return 0;\r\n        }\r\n    }\r\n}\r\nconst b2TimeOfImpact_s_timer = new b2Timer();\r\nconst b2TimeOfImpact_s_cache = new b2SimplexCache();\r\nconst b2TimeOfImpact_s_distanceInput = new b2DistanceInput();\r\nconst b2TimeOfImpact_s_distanceOutput = new b2DistanceOutput();\r\nconst b2TimeOfImpact_s_fcn = new b2SeparationFunction();\r\nconst b2TimeOfImpact_s_indexA = [0];\r\nconst b2TimeOfImpact_s_indexB = [0];\r\nconst b2TimeOfImpact_s_sweepA = new b2Sweep();\r\nconst b2TimeOfImpact_s_sweepB = new b2Sweep();\r\nexport function b2TimeOfImpact(output, input) {\r\n    const timer = b2TimeOfImpact_s_timer.Reset();\r\n    ++b2_toiCalls;\r\n    output.state = b2TOIOutputState.e_unknown;\r\n    output.t = input.tMax;\r\n    const proxyA = input.proxyA;\r\n    const proxyB = input.proxyB;\r\n    const maxVertices = b2Max(b2_maxPolygonVertices, proxyA.m_count, proxyB.m_count);\r\n    const sweepA = b2TimeOfImpact_s_sweepA.Copy(input.sweepA);\r\n    const sweepB = b2TimeOfImpact_s_sweepB.Copy(input.sweepB);\r\n    // Large rotations can make the root finder fail, so we normalize the\r\n    // sweep angles.\r\n    sweepA.Normalize();\r\n    sweepB.Normalize();\r\n    const tMax = input.tMax;\r\n    const totalRadius = proxyA.m_radius + proxyB.m_radius;\r\n    const target = b2Max(b2_linearSlop, totalRadius - 3 * b2_linearSlop);\r\n    const tolerance = 0.25 * b2_linearSlop;\r\n    // DEBUG: b2Assert(target > tolerance);\r\n    let t1 = 0;\r\n    const k_maxIterations = 20; // TODO_ERIN b2Settings\r\n    let iter = 0;\r\n    // Prepare input for distance query.\r\n    const cache = b2TimeOfImpact_s_cache;\r\n    cache.count = 0;\r\n    const distanceInput = b2TimeOfImpact_s_distanceInput;\r\n    distanceInput.proxyA.Copy(input.proxyA);\r\n    distanceInput.proxyB.Copy(input.proxyB);\r\n    distanceInput.useRadii = false;\r\n    // The outer loop progressively attempts to compute new separating axes.\r\n    // This loop terminates when an axis is repeated (no progress is made).\r\n    for (;;) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        sweepA.GetTransform(xfA, t1);\r\n        sweepB.GetTransform(xfB, t1);\r\n        // Get the distance between shapes. We can also use the results\r\n        // to get a separating axis.\r\n        distanceInput.transformA.Copy(xfA);\r\n        distanceInput.transformB.Copy(xfB);\r\n        const distanceOutput = b2TimeOfImpact_s_distanceOutput;\r\n        b2Distance(distanceOutput, cache, distanceInput);\r\n        // If the shapes are overlapped, we give up on continuous collision.\r\n        if (distanceOutput.distance <= 0) {\r\n            // Failure!\r\n            output.state = b2TOIOutputState.e_overlapped;\r\n            output.t = 0;\r\n            break;\r\n        }\r\n        if (distanceOutput.distance < target + tolerance) {\r\n            // Victory!\r\n            output.state = b2TOIOutputState.e_touching;\r\n            output.t = t1;\r\n            break;\r\n        }\r\n        // Initialize the separating axis.\r\n        const fcn = b2TimeOfImpact_s_fcn;\r\n        fcn.Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\r\n        /*\r\n        #if 0\r\n            // Dump the curve seen by the root finder {\r\n              const int32 N = 100;\r\n              float32 dx = 1.0f / N;\r\n              float32 xs[N+1];\r\n              float32 fs[N+1];\r\n        \r\n              float32 x = 0.0f;\r\n        \r\n              for (int32 i = 0; i <= N; ++i) {\r\n                sweepA.GetTransform(&xfA, x);\r\n                sweepB.GetTransform(&xfB, x);\r\n                float32 f = fcn.Evaluate(xfA, xfB) - target;\r\n        \r\n                printf(\"%g %g\\n\", x, f);\r\n        \r\n                xs[i] = x;\r\n                fs[i] = f;\r\n        \r\n                x += dx;\r\n              }\r\n            }\r\n        #endif\r\n        */\r\n        // Compute the TOI on the separating axis. We do this by successively\r\n        // resolving the deepest point. This loop is bounded by the number of vertices.\r\n        let done = false;\r\n        let t2 = tMax;\r\n        let pushBackIter = 0;\r\n        for (;;) {\r\n            // Find the deepest point at t2. Store the witness point indices.\r\n            const indexA = b2TimeOfImpact_s_indexA;\r\n            const indexB = b2TimeOfImpact_s_indexB;\r\n            let s2 = fcn.FindMinSeparation(indexA, indexB, t2);\r\n            // Is the final configuration separated?\r\n            if (s2 > (target + tolerance)) {\r\n                // Victory!\r\n                output.state = b2TOIOutputState.e_separated;\r\n                output.t = tMax;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Has the separation reached tolerance?\r\n            if (s2 > (target - tolerance)) {\r\n                // Advance the sweeps\r\n                t1 = t2;\r\n                break;\r\n            }\r\n            // Compute the initial separation of the witness points.\r\n            let s1 = fcn.Evaluate(indexA[0], indexB[0], t1);\r\n            // Check for initial overlap. This might happen if the root finder\r\n            // runs out of iterations.\r\n            if (s1 < (target - tolerance)) {\r\n                output.state = b2TOIOutputState.e_failed;\r\n                output.t = t1;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Check for touching\r\n            if (s1 <= (target + tolerance)) {\r\n                // Victory! t1 should hold the TOI (could be 0.0).\r\n                output.state = b2TOIOutputState.e_touching;\r\n                output.t = t1;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Compute 1D root of: f(x) - target = 0\r\n            let rootIterCount = 0;\r\n            let a1 = t1;\r\n            let a2 = t2;\r\n            for (;;) {\r\n                // Use a mix of the secant rule and bisection.\r\n                let t = 0;\r\n                if (rootIterCount & 1) {\r\n                    // Secant rule to improve convergence.\r\n                    t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\r\n                }\r\n                else {\r\n                    // Bisection to guarantee progress.\r\n                    t = 0.5 * (a1 + a2);\r\n                }\r\n                ++rootIterCount;\r\n                ++b2_toiRootIters;\r\n                const s = fcn.Evaluate(indexA[0], indexB[0], t);\r\n                if (b2Abs(s - target) < tolerance) {\r\n                    // t2 holds a tentative value for t1\r\n                    t2 = t;\r\n                    break;\r\n                }\r\n                // Ensure we continue to bracket the root.\r\n                if (s > target) {\r\n                    a1 = t;\r\n                    s1 = s;\r\n                }\r\n                else {\r\n                    a2 = t;\r\n                    s2 = s;\r\n                }\r\n                if (rootIterCount === 50) {\r\n                    break;\r\n                }\r\n            }\r\n            b2_toiMaxRootIters = b2Max(b2_toiMaxRootIters, rootIterCount);\r\n            ++pushBackIter;\r\n            if (pushBackIter === maxVertices) {\r\n                break;\r\n            }\r\n        }\r\n        ++iter;\r\n        ++b2_toiIters;\r\n        if (done) {\r\n            break;\r\n        }\r\n        if (iter === k_maxIterations) {\r\n            // Root finder got stuck. Semi-victory.\r\n            output.state = b2TOIOutputState.e_failed;\r\n            output.t = t1;\r\n            break;\r\n        }\r\n    }\r\n    b2_toiMaxIters = b2Max(b2_toiMaxIters, iter);\r\n    const time = timer.GetMilliseconds();\r\n    b2_toiMaxTime = b2Max(b2_toiMaxTime, time);\r\n    b2_toiTime += time;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","import { b2_maxFloat, b2_epsilon } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ManifoldType } from \"./b2Collision\";\r\nconst b2CollideCircles_s_pA = new b2Vec2();\r\nconst b2CollideCircles_s_pB = new b2Vec2();\r\nexport function b2CollideCircles(manifold, circleA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    const pA = b2Transform.MulXV(xfA, circleA.m_p, b2CollideCircles_s_pA);\r\n    const pB = b2Transform.MulXV(xfB, circleB.m_p, b2CollideCircles_s_pB);\r\n    const distSqr = b2Vec2.DistanceSquaredVV(pA, pB);\r\n    const radius = circleA.m_radius + circleB.m_radius;\r\n    if (distSqr > radius * radius) {\r\n        return;\r\n    }\r\n    manifold.type = b2ManifoldType.e_circles;\r\n    manifold.localPoint.Copy(circleA.m_p);\r\n    manifold.localNormal.SetZero();\r\n    manifold.pointCount = 1;\r\n    manifold.points[0].localPoint.Copy(circleB.m_p);\r\n    manifold.points[0].id.key = 0;\r\n}\r\nconst b2CollidePolygonAndCircle_s_c = new b2Vec2();\r\nconst b2CollidePolygonAndCircle_s_cLocal = new b2Vec2();\r\nconst b2CollidePolygonAndCircle_s_faceCenter = new b2Vec2();\r\nexport function b2CollidePolygonAndCircle(manifold, polygonA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    // Compute circle position in the frame of the polygon.\r\n    const c = b2Transform.MulXV(xfB, circleB.m_p, b2CollidePolygonAndCircle_s_c);\r\n    const cLocal = b2Transform.MulTXV(xfA, c, b2CollidePolygonAndCircle_s_cLocal);\r\n    // Find the min separating edge.\r\n    let normalIndex = 0;\r\n    let separation = (-b2_maxFloat);\r\n    const radius = polygonA.m_radius + circleB.m_radius;\r\n    const vertexCount = polygonA.m_count;\r\n    const vertices = polygonA.m_vertices;\r\n    const normals = polygonA.m_normals;\r\n    for (let i = 0; i < vertexCount; ++i) {\r\n        const s = b2Vec2.DotVV(normals[i], b2Vec2.SubVV(cLocal, vertices[i], b2Vec2.s_t0));\r\n        if (s > radius) {\r\n            // Early out.\r\n            return;\r\n        }\r\n        if (s > separation) {\r\n            separation = s;\r\n            normalIndex = i;\r\n        }\r\n    }\r\n    // Vertices that subtend the incident face.\r\n    const vertIndex1 = normalIndex;\r\n    const vertIndex2 = (vertIndex1 + 1) % vertexCount;\r\n    const v1 = vertices[vertIndex1];\r\n    const v2 = vertices[vertIndex2];\r\n    // If the center is inside the polygon ...\r\n    if (separation < b2_epsilon) {\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        manifold.localNormal.Copy(normals[normalIndex]);\r\n        b2Vec2.MidVV(v1, v2, manifold.localPoint);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n        return;\r\n    }\r\n    // Compute barycentric coordinates\r\n    const u1 = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v1, b2Vec2.s_t0), b2Vec2.SubVV(v2, v1, b2Vec2.s_t1));\r\n    const u2 = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v2, b2Vec2.s_t0), b2Vec2.SubVV(v1, v2, b2Vec2.s_t1));\r\n    if (u1 <= 0) {\r\n        if (b2Vec2.DistanceSquaredVV(cLocal, v1) > radius * radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        b2Vec2.SubVV(cLocal, v1, manifold.localNormal).SelfNormalize();\r\n        manifold.localPoint.Copy(v1);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n    else if (u2 <= 0) {\r\n        if (b2Vec2.DistanceSquaredVV(cLocal, v2) > radius * radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        b2Vec2.SubVV(cLocal, v2, manifold.localNormal).SelfNormalize();\r\n        manifold.localPoint.Copy(v2);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n    else {\r\n        const faceCenter = b2Vec2.MidVV(v1, v2, b2CollidePolygonAndCircle_s_faceCenter);\r\n        const separation = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, faceCenter, b2Vec2.s_t1), normals[vertIndex1]);\r\n        if (separation > radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        manifold.localNormal.Copy(normals[vertIndex1]).SelfNormalize();\r\n        manifold.localPoint.Copy(faceCenter);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb2xsaWRlQ2lyY2xlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvQ29sbGlzaW9uL2IyQ29sbGlkZUNpcmNsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdkQsT0FBTyxFQUFjLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzRCxNQUFNLHFCQUFxQixHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7QUFDbkQsTUFBTSxxQkFBcUIsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO0FBQ25ELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxRQUFvQixFQUFFLE9BQXNCLEVBQUUsR0FBZ0IsRUFBRSxPQUFzQixFQUFFLEdBQWdCO0lBQ3ZJLFFBQVEsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBRXhCLE1BQU0sRUFBRSxHQUFXLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHLEVBQUUscUJBQXFCLENBQUMsQ0FBQztJQUM5RSxNQUFNLEVBQUUsR0FBVyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsR0FBRyxFQUFFLHFCQUFxQixDQUFDLENBQUM7SUFFOUUsTUFBTSxPQUFPLEdBQVcsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN6RCxNQUFNLE1BQU0sR0FBVyxPQUFPLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDM0QsSUFBSSxPQUFPLEdBQUcsTUFBTSxHQUFHLE1BQU0sRUFBRTtRQUM3QixPQUFPO0tBQ1I7SUFFRCxRQUFRLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQyxTQUFTLENBQUM7SUFDekMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RDLFFBQVEsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDL0IsUUFBUSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7SUFFeEIsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoRCxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBQ2hDLENBQUM7QUFFRCxNQUFNLDZCQUE2QixHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7QUFDM0QsTUFBTSxrQ0FBa0MsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO0FBQ2hFLE1BQU0sc0NBQXNDLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztBQUNwRSxNQUFNLFVBQVUseUJBQXlCLENBQUMsUUFBb0IsRUFBRSxRQUF3QixFQUFFLEdBQWdCLEVBQUUsT0FBc0IsRUFBRSxHQUFnQjtJQUNsSixRQUFRLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztJQUV4Qix1REFBdUQ7SUFDdkQsTUFBTSxDQUFDLEdBQVcsV0FBVyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUcsRUFBRSw2QkFBNkIsQ0FBQyxDQUFDO0lBQ3JGLE1BQU0sTUFBTSxHQUFXLFdBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxrQ0FBa0MsQ0FBQyxDQUFDO0lBRXRGLGdDQUFnQztJQUNoQyxJQUFJLFdBQVcsR0FBVyxDQUFDLENBQUM7SUFDNUIsSUFBSSxVQUFVLEdBQVcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLE1BQU0sTUFBTSxHQUFXLFFBQVEsQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUM1RCxNQUFNLFdBQVcsR0FBVyxRQUFRLENBQUMsT0FBTyxDQUFDO0lBQzdDLE1BQU0sUUFBUSxHQUFhLFFBQVEsQ0FBQyxVQUFVLENBQUM7SUFDL0MsTUFBTSxPQUFPLEdBQWEsUUFBUSxDQUFDLFNBQVMsQ0FBQztJQUU3QyxLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsV0FBVyxFQUFFLEVBQUUsQ0FBQyxFQUFFO1FBQzVDLE1BQU0sQ0FBQyxHQUFXLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUUzRixJQUFJLENBQUMsR0FBRyxNQUFNLEVBQUU7WUFDZCxhQUFhO1lBQ2IsT0FBTztTQUNSO1FBRUQsSUFBSSxDQUFDLEdBQUcsVUFBVSxFQUFFO1lBQ2xCLFVBQVUsR0FBRyxDQUFDLENBQUM7WUFDZixXQUFXLEdBQUcsQ0FBQyxDQUFDO1NBQ2pCO0tBQ0Y7SUFFRCwyQ0FBMkM7SUFDM0MsTUFBTSxVQUFVLEdBQVcsV0FBVyxDQUFDO0lBQ3ZDLE1BQU0sVUFBVSxHQUFXLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FBQztJQUMxRCxNQUFNLEVBQUUsR0FBVyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDeEMsTUFBTSxFQUFFLEdBQVcsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRXhDLDBDQUEwQztJQUMxQyxJQUFJLFVBQVUsR0FBRyxVQUFVLEVBQUU7UUFDM0IsUUFBUSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7UUFDeEIsUUFBUSxDQUFDLElBQUksR0FBRyxjQUFjLENBQUMsT0FBTyxDQUFDO1FBQ3ZDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ2hELE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDMUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoRCxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQzlCLE9BQU87S0FDUjtJQUVELGtDQUFrQztJQUNsQyxNQUFNLEVBQUUsR0FBVyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzFHLE1BQU0sRUFBRSxHQUFXLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsRUFBRSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDMUcsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFO1FBQ1gsSUFBSSxNQUFNLENBQUMsaUJBQWlCLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxHQUFHLE1BQU0sR0FBRyxNQUFNLEVBQUU7WUFDMUQsT0FBTztTQUNSO1FBRUQsUUFBUSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7UUFDeEIsUUFBUSxDQUFDLElBQUksR0FBRyxjQUFjLENBQUMsT0FBTyxDQUFDO1FBQ3ZDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDL0QsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDN0IsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoRCxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0tBQy9CO1NBQU0sSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFO1FBQ2xCLElBQUksTUFBTSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsR0FBRyxNQUFNLEdBQUcsTUFBTSxFQUFFO1lBQzFELE9BQU87U0FDUjtRQUVELFFBQVEsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ3hCLFFBQVEsQ0FBQyxJQUFJLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FBQztRQUN2QyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQy9ELFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzdCLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDaEQsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztLQUMvQjtTQUFNO1FBQ0wsTUFBTSxVQUFVLEdBQVcsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLHNDQUFzQyxDQUFDLENBQUM7UUFDeEYsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1FBQ3BHLElBQUksVUFBVSxHQUFHLE1BQU0sRUFBRTtZQUN2QixPQUFPO1NBQ1I7UUFFRCxRQUFRLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztRQUN4QixRQUFRLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQyxPQUFPLENBQUM7UUFDdkMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDL0QsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDckMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoRCxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0tBQy9CO0FBQ0gsQ0FBQyJ9","// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2_maxManifoldPoints } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ContactFeatureType } from \"./b2Collision\";\r\nimport { b2ManifoldType, b2ClipVertex, b2ClipSegmentToLine } from \"./b2Collision\";\r\nconst b2EdgeSeparation_s_normal1World = new b2Vec2();\r\nconst b2EdgeSeparation_s_normal1 = new b2Vec2();\r\nconst b2EdgeSeparation_s_v1 = new b2Vec2();\r\nconst b2EdgeSeparation_s_v2 = new b2Vec2();\r\nfunction b2EdgeSeparation(poly1, xf1, edge1, poly2, xf2) {\r\n    // DEBUG: const count1: number = poly1.m_count;\r\n    const vertices1 = poly1.m_vertices;\r\n    const normals1 = poly1.m_normals;\r\n    const count2 = poly2.m_count;\r\n    const vertices2 = poly2.m_vertices;\r\n    // DEBUG: b2Assert(0 <= edge1 && edge1 < count1);\r\n    // Convert normal from poly1's frame into poly2's frame.\r\n    const normal1World = b2Rot.MulRV(xf1.q, normals1[edge1], b2EdgeSeparation_s_normal1World);\r\n    const normal1 = b2Rot.MulTRV(xf2.q, normal1World, b2EdgeSeparation_s_normal1);\r\n    // Find support vertex on poly2 for -normal.\r\n    let index = 0;\r\n    let minDot = b2_maxFloat;\r\n    for (let i = 0; i < count2; ++i) {\r\n        const dot = b2Vec2.DotVV(vertices2[i], normal1);\r\n        if (dot < minDot) {\r\n            minDot = dot;\r\n            index = i;\r\n        }\r\n    }\r\n    const v1 = b2Transform.MulXV(xf1, vertices1[edge1], b2EdgeSeparation_s_v1);\r\n    const v2 = b2Transform.MulXV(xf2, vertices2[index], b2EdgeSeparation_s_v2);\r\n    const separation = b2Vec2.DotVV(b2Vec2.SubVV(v2, v1, b2Vec2.s_t0), normal1World);\r\n    return separation;\r\n}\r\nconst b2FindMaxSeparation_s_d = new b2Vec2();\r\nconst b2FindMaxSeparation_s_dLocal1 = new b2Vec2();\r\nfunction b2FindMaxSeparation(edgeIndex, poly1, xf1, poly2, xf2) {\r\n    const count1 = poly1.m_count;\r\n    const normals1 = poly1.m_normals;\r\n    // Vector pointing from the centroid of poly1 to the centroid of poly2.\r\n    const d = b2Vec2.SubVV(b2Transform.MulXV(xf2, poly2.m_centroid, b2Vec2.s_t0), b2Transform.MulXV(xf1, poly1.m_centroid, b2Vec2.s_t1), b2FindMaxSeparation_s_d);\r\n    const dLocal1 = b2Rot.MulTRV(xf1.q, d, b2FindMaxSeparation_s_dLocal1);\r\n    // Find edge normal on poly1 that has the largest projection onto d.\r\n    let edge = 0;\r\n    let maxDot = (-b2_maxFloat);\r\n    for (let i = 0; i < count1; ++i) {\r\n        const dot = b2Vec2.DotVV(normals1[i], dLocal1);\r\n        if (dot > maxDot) {\r\n            maxDot = dot;\r\n            edge = i;\r\n        }\r\n    }\r\n    // Get the separation for the edge normal.\r\n    let s = b2EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n    // Check the separation for the previous edge normal.\r\n    const prevEdge = (edge + count1 - 1) % count1;\r\n    const sPrev = b2EdgeSeparation(poly1, xf1, prevEdge, poly2, xf2);\r\n    // Check the separation for the next edge normal.\r\n    const nextEdge = (edge + 1) % count1;\r\n    const sNext = b2EdgeSeparation(poly1, xf1, nextEdge, poly2, xf2);\r\n    // Find the best edge and the search direction.\r\n    let bestEdge = 0;\r\n    let bestSeparation = 0;\r\n    let increment = 0;\r\n    if (sPrev > s && sPrev > sNext) {\r\n        increment = -1;\r\n        bestEdge = prevEdge;\r\n        bestSeparation = sPrev;\r\n    }\r\n    else if (sNext > s) {\r\n        increment = 1;\r\n        bestEdge = nextEdge;\r\n        bestSeparation = sNext;\r\n    }\r\n    else {\r\n        edgeIndex[0] = edge;\r\n        return s;\r\n    }\r\n    // Perform a local search for the best edge normal.\r\n    while (true) {\r\n        if (increment === -1) {\r\n            edge = (bestEdge + count1 - 1) % count1;\r\n        }\r\n        else {\r\n            edge = (bestEdge + 1) % count1;\r\n        }\r\n        s = b2EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n        if (s > bestSeparation) {\r\n            bestEdge = edge;\r\n            bestSeparation = s;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    edgeIndex[0] = bestEdge;\r\n    return bestSeparation;\r\n}\r\nconst b2FindIncidentEdge_s_normal1 = new b2Vec2();\r\nfunction b2FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\r\n    // DEBUG: const count1: number = poly1.m_count;\r\n    const normals1 = poly1.m_normals;\r\n    const count2 = poly2.m_count;\r\n    const vertices2 = poly2.m_vertices;\r\n    const normals2 = poly2.m_normals;\r\n    // DEBUG: b2Assert(0 <= edge1 && edge1 < count1);\r\n    // Get the normal of the reference edge in poly2's frame.\r\n    const normal1 = b2Rot.MulTRV(xf2.q, b2Rot.MulRV(xf1.q, normals1[edge1], b2Vec2.s_t0), b2FindIncidentEdge_s_normal1);\r\n    // Find the incident edge on poly2.\r\n    let index = 0;\r\n    let minDot = b2_maxFloat;\r\n    for (let i = 0; i < count2; ++i) {\r\n        const dot = b2Vec2.DotVV(normal1, normals2[i]);\r\n        if (dot < minDot) {\r\n            minDot = dot;\r\n            index = i;\r\n        }\r\n    }\r\n    // Build the clip vertices for the incident edge.\r\n    const i1 = index;\r\n    const i2 = (i1 + 1) % count2;\r\n    const c0 = c[0];\r\n    b2Transform.MulXV(xf2, vertices2[i1], c0.v);\r\n    const cf0 = c0.id.cf;\r\n    cf0.indexA = edge1;\r\n    cf0.indexB = i1;\r\n    cf0.typeA = b2ContactFeatureType.e_face;\r\n    cf0.typeB = b2ContactFeatureType.e_vertex;\r\n    const c1 = c[1];\r\n    b2Transform.MulXV(xf2, vertices2[i2], c1.v);\r\n    const cf1 = c1.id.cf;\r\n    cf1.indexA = edge1;\r\n    cf1.indexB = i2;\r\n    cf1.typeA = b2ContactFeatureType.e_face;\r\n    cf1.typeB = b2ContactFeatureType.e_vertex;\r\n}\r\nconst b2CollidePolygons_s_incidentEdge = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_clipPoints1 = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_clipPoints2 = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_edgeA = [0];\r\nconst b2CollidePolygons_s_edgeB = [0];\r\nconst b2CollidePolygons_s_localTangent = new b2Vec2();\r\nconst b2CollidePolygons_s_localNormal = new b2Vec2();\r\nconst b2CollidePolygons_s_planePoint = new b2Vec2();\r\nconst b2CollidePolygons_s_normal = new b2Vec2();\r\nconst b2CollidePolygons_s_tangent = new b2Vec2();\r\nconst b2CollidePolygons_s_ntangent = new b2Vec2();\r\nconst b2CollidePolygons_s_v11 = new b2Vec2();\r\nconst b2CollidePolygons_s_v12 = new b2Vec2();\r\nexport function b2CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\r\n    manifold.pointCount = 0;\r\n    const totalRadius = polyA.m_radius + polyB.m_radius;\r\n    const edgeA = b2CollidePolygons_s_edgeA;\r\n    edgeA[0] = 0;\r\n    const separationA = b2FindMaxSeparation(edgeA, polyA, xfA, polyB, xfB);\r\n    if (separationA > totalRadius) {\r\n        return;\r\n    }\r\n    const edgeB = b2CollidePolygons_s_edgeB;\r\n    edgeB[0] = 0;\r\n    const separationB = b2FindMaxSeparation(edgeB, polyB, xfB, polyA, xfA);\r\n    if (separationB > totalRadius) {\r\n        return;\r\n    }\r\n    let poly1; // reference polygon\r\n    let poly2; // incident polygon\r\n    let xf1, xf2;\r\n    let edge1 = 0; // reference edge\r\n    let flip = 0;\r\n    const k_relativeTol = 0.98;\r\n    const k_absoluteTol = 0.001;\r\n    if (separationB > k_relativeTol * separationA + k_absoluteTol) {\r\n        poly1 = polyB;\r\n        poly2 = polyA;\r\n        xf1 = xfB;\r\n        xf2 = xfA;\r\n        edge1 = edgeB[0];\r\n        manifold.type = b2ManifoldType.e_faceB;\r\n        flip = 1;\r\n    }\r\n    else {\r\n        poly1 = polyA;\r\n        poly2 = polyB;\r\n        xf1 = xfA;\r\n        xf2 = xfB;\r\n        edge1 = edgeA[0];\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        flip = 0;\r\n    }\r\n    const incidentEdge = b2CollidePolygons_s_incidentEdge;\r\n    b2FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\r\n    const count1 = poly1.m_count;\r\n    const vertices1 = poly1.m_vertices;\r\n    const iv1 = edge1;\r\n    const iv2 = (edge1 + 1) % count1;\r\n    const local_v11 = vertices1[iv1];\r\n    const local_v12 = vertices1[iv2];\r\n    const localTangent = b2Vec2.SubVV(local_v12, local_v11, b2CollidePolygons_s_localTangent);\r\n    localTangent.Normalize();\r\n    const localNormal = b2Vec2.CrossVOne(localTangent, b2CollidePolygons_s_localNormal);\r\n    const planePoint = b2Vec2.MidVV(local_v11, local_v12, b2CollidePolygons_s_planePoint);\r\n    const tangent = b2Rot.MulRV(xf1.q, localTangent, b2CollidePolygons_s_tangent);\r\n    const normal = b2Vec2.CrossVOne(tangent, b2CollidePolygons_s_normal);\r\n    const v11 = b2Transform.MulXV(xf1, local_v11, b2CollidePolygons_s_v11);\r\n    const v12 = b2Transform.MulXV(xf1, local_v12, b2CollidePolygons_s_v12);\r\n    // Face offset.\r\n    const frontOffset = b2Vec2.DotVV(normal, v11);\r\n    // Side offsets, extended by polytope skin thickness.\r\n    const sideOffset1 = -b2Vec2.DotVV(tangent, v11) + totalRadius;\r\n    const sideOffset2 = b2Vec2.DotVV(tangent, v12) + totalRadius;\r\n    // Clip incident edge against extruded edge1 side edges.\r\n    const clipPoints1 = b2CollidePolygons_s_clipPoints1;\r\n    const clipPoints2 = b2CollidePolygons_s_clipPoints2;\r\n    let np;\r\n    // Clip to box side 1\r\n    const ntangent = b2Vec2.NegV(tangent, b2CollidePolygons_s_ntangent);\r\n    np = b2ClipSegmentToLine(clipPoints1, incidentEdge, ntangent, sideOffset1, iv1);\r\n    if (np < 2) {\r\n        return;\r\n    }\r\n    // Clip to negative box side 1\r\n    np = b2ClipSegmentToLine(clipPoints2, clipPoints1, tangent, sideOffset2, iv2);\r\n    if (np < 2) {\r\n        return;\r\n    }\r\n    // Now clipPoints2 contains the clipped points.\r\n    manifold.localNormal.Copy(localNormal);\r\n    manifold.localPoint.Copy(planePoint);\r\n    let pointCount = 0;\r\n    for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n        const cv = clipPoints2[i];\r\n        const separation = b2Vec2.DotVV(normal, cv.v) - frontOffset;\r\n        if (separation <= totalRadius) {\r\n            const cp = manifold.points[pointCount];\r\n            b2Transform.MulTXV(xf2, cv.v, cp.localPoint);\r\n            cp.id.Copy(cv.id);\r\n            if (flip) {\r\n                // Swap features\r\n                const cf = cp.id.cf;\r\n                cp.id.cf.indexA = cf.indexB;\r\n                cp.id.cf.indexB = cf.indexA;\r\n                cp.id.cf.typeA = cf.typeB;\r\n                cp.id.cf.typeB = cf.typeA;\r\n            }\r\n            ++pointCount;\r\n        }\r\n    }\r\n    manifold.pointCount = pointCount;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2_angularSlop, b2_maxManifoldPoints } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ContactFeatureType, b2ContactID } from \"./b2Collision\";\r\nimport { b2ManifoldType, b2ClipVertex, b2ClipSegmentToLine } from \"./b2Collision\";\r\nconst b2CollideEdgeAndCircle_s_Q = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_d = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e1 = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e2 = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_P = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_n = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_id = new b2ContactID();\r\nexport function b2CollideEdgeAndCircle(manifold, edgeA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    // Compute circle in frame of edge\r\n    const Q = b2Transform.MulTXV(xfA, b2Transform.MulXV(xfB, circleB.m_p, b2Vec2.s_t0), b2CollideEdgeAndCircle_s_Q);\r\n    const A = edgeA.m_vertex1;\r\n    const B = edgeA.m_vertex2;\r\n    const e = b2Vec2.SubVV(B, A, b2CollideEdgeAndCircle_s_e);\r\n    // Barycentric coordinates\r\n    const u = b2Vec2.DotVV(e, b2Vec2.SubVV(B, Q, b2Vec2.s_t0));\r\n    const v = b2Vec2.DotVV(e, b2Vec2.SubVV(Q, A, b2Vec2.s_t0));\r\n    const radius = edgeA.m_radius + circleB.m_radius;\r\n    // const cf: b2ContactFeature = new b2ContactFeature();\r\n    const id = b2CollideEdgeAndCircle_s_id;\r\n    id.cf.indexB = 0;\r\n    id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n    // Region A\r\n    if (v <= 0) {\r\n        const P = A;\r\n        const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n        const dd = b2Vec2.DotVV(d, d);\r\n        if (dd > radius * radius) {\r\n            return;\r\n        }\r\n        // Is there an edge connected to A?\r\n        if (edgeA.m_hasVertex0) {\r\n            const A1 = edgeA.m_vertex0;\r\n            const B1 = A;\r\n            const e1 = b2Vec2.SubVV(B1, A1, b2CollideEdgeAndCircle_s_e1);\r\n            const u1 = b2Vec2.DotVV(e1, b2Vec2.SubVV(B1, Q, b2Vec2.s_t0));\r\n            // Is the circle in Region AB of the previous edge?\r\n            if (u1 > 0) {\r\n                return;\r\n            }\r\n        }\r\n        id.cf.indexA = 0;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_circles;\r\n        manifold.localNormal.SetZero();\r\n        manifold.localPoint.Copy(P);\r\n        manifold.points[0].id.Copy(id);\r\n        // manifold.points[0].id.key = 0;\r\n        // manifold.points[0].id.cf = cf;\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        return;\r\n    }\r\n    // Region B\r\n    if (u <= 0) {\r\n        const P = B;\r\n        const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n        const dd = b2Vec2.DotVV(d, d);\r\n        if (dd > radius * radius) {\r\n            return;\r\n        }\r\n        // Is there an edge connected to B?\r\n        if (edgeA.m_hasVertex3) {\r\n            const B2 = edgeA.m_vertex3;\r\n            const A2 = B;\r\n            const e2 = b2Vec2.SubVV(B2, A2, b2CollideEdgeAndCircle_s_e2);\r\n            const v2 = b2Vec2.DotVV(e2, b2Vec2.SubVV(Q, A2, b2Vec2.s_t0));\r\n            // Is the circle in Region AB of the next edge?\r\n            if (v2 > 0) {\r\n                return;\r\n            }\r\n        }\r\n        id.cf.indexA = 1;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_circles;\r\n        manifold.localNormal.SetZero();\r\n        manifold.localPoint.Copy(P);\r\n        manifold.points[0].id.Copy(id);\r\n        // manifold.points[0].id.key = 0;\r\n        // manifold.points[0].id.cf = cf;\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        return;\r\n    }\r\n    // Region AB\r\n    const den = b2Vec2.DotVV(e, e);\r\n    // DEBUG: b2Assert(den > 0);\r\n    const P = b2CollideEdgeAndCircle_s_P;\r\n    P.x = (1 / den) * (u * A.x + v * B.x);\r\n    P.y = (1 / den) * (u * A.y + v * B.y);\r\n    const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n    const dd = b2Vec2.DotVV(d, d);\r\n    if (dd > radius * radius) {\r\n        return;\r\n    }\r\n    const n = b2CollideEdgeAndCircle_s_n.Set(-e.y, e.x);\r\n    if (b2Vec2.DotVV(n, b2Vec2.SubVV(Q, A, b2Vec2.s_t0)) < 0) {\r\n        n.Set(-n.x, -n.y);\r\n    }\r\n    n.Normalize();\r\n    id.cf.indexA = 0;\r\n    id.cf.typeA = b2ContactFeatureType.e_face;\r\n    manifold.pointCount = 1;\r\n    manifold.type = b2ManifoldType.e_faceA;\r\n    manifold.localNormal.Copy(n);\r\n    manifold.localPoint.Copy(A);\r\n    manifold.points[0].id.Copy(id);\r\n    // manifold.points[0].id.key = 0;\r\n    // manifold.points[0].id.cf = cf;\r\n    manifold.points[0].localPoint.Copy(circleB.m_p);\r\n}\r\nclass b2EPAxis {\r\n    constructor() {\r\n        this.type = 0 /* e_unknown */;\r\n        this.index = 0;\r\n        this.separation = 0;\r\n    }\r\n}\r\nclass b2TempPolygon {\r\n    constructor() {\r\n        this.vertices = [];\r\n        this.normals = [];\r\n        this.count = 0;\r\n    }\r\n}\r\nclass b2ReferenceFace {\r\n    constructor() {\r\n        this.i1 = 0;\r\n        this.i2 = 0;\r\n        this.v1 = new b2Vec2();\r\n        this.v2 = new b2Vec2();\r\n        this.normal = new b2Vec2();\r\n        this.sideNormal1 = new b2Vec2();\r\n        this.sideOffset1 = 0;\r\n        this.sideNormal2 = new b2Vec2();\r\n        this.sideOffset2 = 0;\r\n    }\r\n}\r\nclass b2EPCollider {\r\n    constructor() {\r\n        this.m_polygonB = new b2TempPolygon();\r\n        this.m_xf = new b2Transform();\r\n        this.m_centroidB = new b2Vec2();\r\n        this.m_v0 = new b2Vec2();\r\n        this.m_v1 = new b2Vec2();\r\n        this.m_v2 = new b2Vec2();\r\n        this.m_v3 = new b2Vec2();\r\n        this.m_normal0 = new b2Vec2();\r\n        this.m_normal1 = new b2Vec2();\r\n        this.m_normal2 = new b2Vec2();\r\n        this.m_normal = new b2Vec2();\r\n        this.m_type1 = 0 /* e_isolated */;\r\n        this.m_type2 = 0 /* e_isolated */;\r\n        this.m_lowerLimit = new b2Vec2();\r\n        this.m_upperLimit = new b2Vec2();\r\n        this.m_radius = 0;\r\n        this.m_front = false;\r\n    }\r\n    Collide(manifold, edgeA, xfA, polygonB, xfB) {\r\n        b2Transform.MulTXX(xfA, xfB, this.m_xf);\r\n        b2Transform.MulXV(this.m_xf, polygonB.m_centroid, this.m_centroidB);\r\n        this.m_v0.Copy(edgeA.m_vertex0);\r\n        this.m_v1.Copy(edgeA.m_vertex1);\r\n        this.m_v2.Copy(edgeA.m_vertex2);\r\n        this.m_v3.Copy(edgeA.m_vertex3);\r\n        const hasVertex0 = edgeA.m_hasVertex0;\r\n        const hasVertex3 = edgeA.m_hasVertex3;\r\n        const edge1 = b2Vec2.SubVV(this.m_v2, this.m_v1, b2EPCollider.s_edge1);\r\n        edge1.Normalize();\r\n        this.m_normal1.Set(edge1.y, -edge1.x);\r\n        const offset1 = b2Vec2.DotVV(this.m_normal1, b2Vec2.SubVV(this.m_centroidB, this.m_v1, b2Vec2.s_t0));\r\n        let offset0 = 0;\r\n        let offset2 = 0;\r\n        let convex1 = false;\r\n        let convex2 = false;\r\n        // Is there a preceding edge?\r\n        if (hasVertex0) {\r\n            const edge0 = b2Vec2.SubVV(this.m_v1, this.m_v0, b2EPCollider.s_edge0);\r\n            edge0.Normalize();\r\n            this.m_normal0.Set(edge0.y, -edge0.x);\r\n            convex1 = b2Vec2.CrossVV(edge0, edge1) >= 0;\r\n            offset0 = b2Vec2.DotVV(this.m_normal0, b2Vec2.SubVV(this.m_centroidB, this.m_v0, b2Vec2.s_t0));\r\n        }\r\n        // Is there a following edge?\r\n        if (hasVertex3) {\r\n            const edge2 = b2Vec2.SubVV(this.m_v3, this.m_v2, b2EPCollider.s_edge2);\r\n            edge2.Normalize();\r\n            this.m_normal2.Set(edge2.y, -edge2.x);\r\n            convex2 = b2Vec2.CrossVV(edge1, edge2) > 0;\r\n            offset2 = b2Vec2.DotVV(this.m_normal2, b2Vec2.SubVV(this.m_centroidB, this.m_v2, b2Vec2.s_t0));\r\n        }\r\n        // Determine front or back collision. Determine collision normal limits.\r\n        if (hasVertex0 && hasVertex3) {\r\n            if (convex1 && convex2) {\r\n                this.m_front = offset0 >= 0 || offset1 >= 0 || offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else if (convex1) {\r\n                this.m_front = offset0 >= 0 || (offset1 >= 0 && offset2 >= 0);\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else if (convex2) {\r\n                this.m_front = offset2 >= 0 || (offset0 >= 0 && offset1 >= 0);\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset0 >= 0 && offset1 >= 0 && offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n        }\r\n        else if (hasVertex0) {\r\n            if (convex1) {\r\n                this.m_front = offset0 >= 0 || offset1 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset0 >= 0 && offset1 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n        }\r\n        else if (hasVertex3) {\r\n            if (convex2) {\r\n                this.m_front = offset1 >= 0 || offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset1 >= 0 && offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.m_front = offset1 >= 0;\r\n            if (this.m_front) {\r\n                this.m_normal.Copy(this.m_normal1);\r\n                this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n            }\r\n            else {\r\n                this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                this.m_lowerLimit.Copy(this.m_normal1);\r\n                this.m_upperLimit.Copy(this.m_normal1);\r\n            }\r\n        }\r\n        // Get polygonB in frameA\r\n        this.m_polygonB.count = polygonB.m_count;\r\n        for (let i = 0; i < polygonB.m_count; ++i) {\r\n            if (this.m_polygonB.vertices.length <= i) {\r\n                this.m_polygonB.vertices.push(new b2Vec2());\r\n            }\r\n            if (this.m_polygonB.normals.length <= i) {\r\n                this.m_polygonB.normals.push(new b2Vec2());\r\n            }\r\n            b2Transform.MulXV(this.m_xf, polygonB.m_vertices[i], this.m_polygonB.vertices[i]);\r\n            b2Rot.MulRV(this.m_xf.q, polygonB.m_normals[i], this.m_polygonB.normals[i]);\r\n        }\r\n        this.m_radius = polygonB.m_radius + edgeA.m_radius;\r\n        manifold.pointCount = 0;\r\n        const edgeAxis = this.ComputeEdgeSeparation(b2EPCollider.s_edgeAxis);\r\n        // If no valid normal can be found than this edge should not collide.\r\n        if (edgeAxis.type === 0 /* e_unknown */) {\r\n            return;\r\n        }\r\n        if (edgeAxis.separation > this.m_radius) {\r\n            return;\r\n        }\r\n        const polygonAxis = this.ComputePolygonSeparation(b2EPCollider.s_polygonAxis);\r\n        if (polygonAxis.type !== 0 /* e_unknown */ && polygonAxis.separation > this.m_radius) {\r\n            return;\r\n        }\r\n        // Use hysteresis for jitter reduction.\r\n        const k_relativeTol = 0.98;\r\n        const k_absoluteTol = 0.001;\r\n        let primaryAxis;\r\n        if (polygonAxis.type === 0 /* e_unknown */) {\r\n            primaryAxis = edgeAxis;\r\n        }\r\n        else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\r\n            primaryAxis = polygonAxis;\r\n        }\r\n        else {\r\n            primaryAxis = edgeAxis;\r\n        }\r\n        const ie = b2EPCollider.s_ie;\r\n        const rf = b2EPCollider.s_rf;\r\n        if (primaryAxis.type === 1 /* e_edgeA */) {\r\n            manifold.type = b2ManifoldType.e_faceA;\r\n            // Search for the polygon normal that is most anti-parallel to the edge normal.\r\n            let bestIndex = 0;\r\n            let bestValue = b2Vec2.DotVV(this.m_normal, this.m_polygonB.normals[0]);\r\n            for (let i = 1; i < this.m_polygonB.count; ++i) {\r\n                const value = b2Vec2.DotVV(this.m_normal, this.m_polygonB.normals[i]);\r\n                if (value < bestValue) {\r\n                    bestValue = value;\r\n                    bestIndex = i;\r\n                }\r\n            }\r\n            const i1 = bestIndex;\r\n            const i2 = (i1 + 1) % this.m_polygonB.count;\r\n            const ie0 = ie[0];\r\n            ie0.v.Copy(this.m_polygonB.vertices[i1]);\r\n            ie0.id.cf.indexA = 0;\r\n            ie0.id.cf.indexB = i1;\r\n            ie0.id.cf.typeA = b2ContactFeatureType.e_face;\r\n            ie0.id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n            const ie1 = ie[1];\r\n            ie1.v.Copy(this.m_polygonB.vertices[i2]);\r\n            ie1.id.cf.indexA = 0;\r\n            ie1.id.cf.indexB = i2;\r\n            ie1.id.cf.typeA = b2ContactFeatureType.e_face;\r\n            ie1.id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n            if (this.m_front) {\r\n                rf.i1 = 0;\r\n                rf.i2 = 1;\r\n                rf.v1.Copy(this.m_v1);\r\n                rf.v2.Copy(this.m_v2);\r\n                rf.normal.Copy(this.m_normal1);\r\n            }\r\n            else {\r\n                rf.i1 = 1;\r\n                rf.i2 = 0;\r\n                rf.v1.Copy(this.m_v2);\r\n                rf.v2.Copy(this.m_v1);\r\n                rf.normal.Copy(this.m_normal1).SelfNeg();\r\n            }\r\n        }\r\n        else {\r\n            manifold.type = b2ManifoldType.e_faceB;\r\n            const ie0 = ie[0];\r\n            ie0.v.Copy(this.m_v1);\r\n            ie0.id.cf.indexA = 0;\r\n            ie0.id.cf.indexB = primaryAxis.index;\r\n            ie0.id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n            ie0.id.cf.typeB = b2ContactFeatureType.e_face;\r\n            const ie1 = ie[1];\r\n            ie1.v.Copy(this.m_v2);\r\n            ie1.id.cf.indexA = 0;\r\n            ie1.id.cf.indexB = primaryAxis.index;\r\n            ie1.id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n            ie1.id.cf.typeB = b2ContactFeatureType.e_face;\r\n            rf.i1 = primaryAxis.index;\r\n            rf.i2 = (rf.i1 + 1) % this.m_polygonB.count;\r\n            rf.v1.Copy(this.m_polygonB.vertices[rf.i1]);\r\n            rf.v2.Copy(this.m_polygonB.vertices[rf.i2]);\r\n            rf.normal.Copy(this.m_polygonB.normals[rf.i1]);\r\n        }\r\n        rf.sideNormal1.Set(rf.normal.y, -rf.normal.x);\r\n        rf.sideNormal2.Copy(rf.sideNormal1).SelfNeg();\r\n        rf.sideOffset1 = b2Vec2.DotVV(rf.sideNormal1, rf.v1);\r\n        rf.sideOffset2 = b2Vec2.DotVV(rf.sideNormal2, rf.v2);\r\n        // Clip incident edge against extruded edge1 side edges.\r\n        const clipPoints1 = b2EPCollider.s_clipPoints1;\r\n        const clipPoints2 = b2EPCollider.s_clipPoints2;\r\n        let np = 0;\r\n        // Clip to box side 1\r\n        np = b2ClipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\r\n        if (np < b2_maxManifoldPoints) {\r\n            return;\r\n        }\r\n        // Clip to negative box side 1\r\n        np = b2ClipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\r\n        if (np < b2_maxManifoldPoints) {\r\n            return;\r\n        }\r\n        // Now clipPoints2 contains the clipped points.\r\n        if (primaryAxis.type === 1 /* e_edgeA */) {\r\n            manifold.localNormal.Copy(rf.normal);\r\n            manifold.localPoint.Copy(rf.v1);\r\n        }\r\n        else {\r\n            manifold.localNormal.Copy(polygonB.m_normals[rf.i1]);\r\n            manifold.localPoint.Copy(polygonB.m_vertices[rf.i1]);\r\n        }\r\n        let pointCount = 0;\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            let separation;\r\n            separation = b2Vec2.DotVV(rf.normal, b2Vec2.SubVV(clipPoints2[i].v, rf.v1, b2Vec2.s_t0));\r\n            if (separation <= this.m_radius) {\r\n                const cp = manifold.points[pointCount];\r\n                if (primaryAxis.type === 1 /* e_edgeA */) {\r\n                    b2Transform.MulTXV(this.m_xf, clipPoints2[i].v, cp.localPoint);\r\n                    cp.id = clipPoints2[i].id;\r\n                }\r\n                else {\r\n                    cp.localPoint.Copy(clipPoints2[i].v);\r\n                    cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\r\n                    cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\r\n                    cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\r\n                    cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\r\n                }\r\n                ++pointCount;\r\n            }\r\n        }\r\n        manifold.pointCount = pointCount;\r\n    }\r\n    ComputeEdgeSeparation(out) {\r\n        const axis = out;\r\n        axis.type = 1 /* e_edgeA */;\r\n        axis.index = this.m_front ? 0 : 1;\r\n        axis.separation = b2_maxFloat;\r\n        for (let i = 0; i < this.m_polygonB.count; ++i) {\r\n            const s = b2Vec2.DotVV(this.m_normal, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v1, b2Vec2.s_t0));\r\n            if (s < axis.separation) {\r\n                axis.separation = s;\r\n            }\r\n        }\r\n        return axis;\r\n    }\r\n    ComputePolygonSeparation(out) {\r\n        const axis = out;\r\n        axis.type = 0 /* e_unknown */;\r\n        axis.index = -1;\r\n        axis.separation = -b2_maxFloat;\r\n        const perp = b2EPCollider.s_perp.Set(-this.m_normal.y, this.m_normal.x);\r\n        for (let i = 0; i < this.m_polygonB.count; ++i) {\r\n            const n = b2Vec2.NegV(this.m_polygonB.normals[i], b2EPCollider.s_n);\r\n            const s1 = b2Vec2.DotVV(n, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v1, b2Vec2.s_t0));\r\n            const s2 = b2Vec2.DotVV(n, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v2, b2Vec2.s_t0));\r\n            const s = b2Min(s1, s2);\r\n            if (s > this.m_radius) {\r\n                // No collision\r\n                axis.type = 2 /* e_edgeB */;\r\n                axis.index = i;\r\n                axis.separation = s;\r\n                return axis;\r\n            }\r\n            // Adjacency\r\n            if (b2Vec2.DotVV(n, perp) >= 0) {\r\n                if (b2Vec2.DotVV(b2Vec2.SubVV(n, this.m_upperLimit, b2Vec2.s_t0), this.m_normal) < -b2_angularSlop) {\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                if (b2Vec2.DotVV(b2Vec2.SubVV(n, this.m_lowerLimit, b2Vec2.s_t0), this.m_normal) < -b2_angularSlop) {\r\n                    continue;\r\n                }\r\n            }\r\n            if (s > axis.separation) {\r\n                axis.type = 2 /* e_edgeB */;\r\n                axis.index = i;\r\n                axis.separation = s;\r\n            }\r\n        }\r\n        return axis;\r\n    }\r\n}\r\nb2EPCollider.s_edge1 = new b2Vec2();\r\nb2EPCollider.s_edge0 = new b2Vec2();\r\nb2EPCollider.s_edge2 = new b2Vec2();\r\nb2EPCollider.s_ie = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_rf = new b2ReferenceFace();\r\nb2EPCollider.s_clipPoints1 = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_clipPoints2 = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_edgeAxis = new b2EPAxis();\r\nb2EPCollider.s_polygonAxis = new b2EPAxis();\r\nb2EPCollider.s_n = new b2Vec2();\r\nb2EPCollider.s_perp = new b2Vec2();\r\nconst b2CollideEdgeAndPolygon_s_collider = new b2EPCollider();\r\nexport function b2CollideEdgeAndPolygon(manifold, edgeA, xfA, polygonB, xfB) {\r\n    const collider = b2CollideEdgeAndPolygon_s_collider;\r\n    collider.Collide(manifold, edgeA, xfA, polygonB, xfB);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../../Common/b2Math\";\r\n/// This holds the mass data computed for a shape.\r\nexport class b2MassData {\r\n    constructor() {\r\n        /// The mass of the shape, usually in kilograms.\r\n        this.mass = 0;\r\n        /// The position of the shape's centroid relative to the shape's origin.\r\n        this.center = new b2Vec2(0, 0);\r\n        /// The rotational inertia of the shape about the local origin.\r\n        this.I = 0;\r\n    }\r\n}\r\nexport var b2ShapeType;\r\n(function (b2ShapeType) {\r\n    b2ShapeType[b2ShapeType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2ShapeType[b2ShapeType[\"e_circleShape\"] = 0] = \"e_circleShape\";\r\n    b2ShapeType[b2ShapeType[\"e_edgeShape\"] = 1] = \"e_edgeShape\";\r\n    b2ShapeType[b2ShapeType[\"e_polygonShape\"] = 2] = \"e_polygonShape\";\r\n    b2ShapeType[b2ShapeType[\"e_chainShape\"] = 3] = \"e_chainShape\";\r\n    b2ShapeType[b2ShapeType[\"e_shapeTypeCount\"] = 4] = \"e_shapeTypeCount\";\r\n})(b2ShapeType || (b2ShapeType = {}));\r\n/// A shape is used for collision detection. You can create a shape however you like.\r\n/// Shapes used for simulation in b2World are created automatically when a b2Fixture\r\n/// is created. Shapes may encapsulate a one or more child shapes.\r\nexport class b2Shape {\r\n    constructor(type, radius) {\r\n        this.m_type = b2ShapeType.e_unknown;\r\n        /// Radius of a shape. For polygonal shapes this must be b2_polygonRadius. There is no support for\r\n        /// making rounded polygons.\r\n        this.m_radius = 0;\r\n        this.m_type = type;\r\n        this.m_radius = radius;\r\n    }\r\n    Copy(other) {\r\n        // DEBUG: b2Assert(this.m_type === other.m_type);\r\n        this.m_radius = other.m_radius;\r\n        return this;\r\n    }\r\n    /// Get the type of this shape. You can use this to down cast to the concrete shape.\r\n    /// @return the shape type.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTaGFwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0NvbGxpc2lvbi9TaGFwZXMvYjJTaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLDZEQUE2RDtBQUM3RCxPQUFPLEVBQUUsTUFBTSxFQUFlLE1BQU0scUJBQXFCLENBQUM7QUFJMUQsa0RBQWtEO0FBQ2xELE1BQU0sT0FBTyxVQUFVO0lBQXZCO1FBQ0UsZ0RBQWdEO1FBQ3pDLFNBQUksR0FBVyxDQUFDLENBQUM7UUFFeEIsd0VBQXdFO1FBQ3hELFdBQU0sR0FBVyxJQUFJLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFbEQsK0RBQStEO1FBQ3hELE1BQUMsR0FBVyxDQUFDLENBQUM7SUFDdkIsQ0FBQztDQUFBO0FBRUQsTUFBTSxDQUFOLElBQVksV0FPWDtBQVBELFdBQVksV0FBVztJQUNyQix3REFBYyxDQUFBO0lBQ2QsK0RBQWlCLENBQUE7SUFDakIsMkRBQWUsQ0FBQTtJQUNmLGlFQUFrQixDQUFBO0lBQ2xCLDZEQUFnQixDQUFBO0lBQ2hCLHFFQUFvQixDQUFBO0FBQ3RCLENBQUMsRUFQVyxXQUFXLEtBQVgsV0FBVyxRQU90QjtBQUVELHFGQUFxRjtBQUNyRixvRkFBb0Y7QUFDcEYsa0VBQWtFO0FBQ2xFLE1BQU0sT0FBZ0IsT0FBTztJQU8zQixZQUFZLElBQWlCLEVBQUUsTUFBYztRQU50QyxXQUFNLEdBQWdCLFdBQVcsQ0FBQyxTQUFTLENBQUM7UUFFcEQsa0dBQWtHO1FBQ2xHLDRCQUE0QjtRQUNwQixhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBRzFCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLENBQUM7SUFLTSxJQUFJLENBQUMsS0FBYztRQUN4QixpREFBaUQ7UUFDakQsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDO1FBQy9CLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELG9GQUFvRjtJQUNwRiwyQkFBMkI7SUFDcEIsT0FBTztRQUNaLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0NBMkNGIn0=","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\n// DEBUG: import { b2IsValid } from \"../Common/b2Math\";\r\nimport { b2Maybe } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Shape, b2MassData } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2Fixture, b2FixtureDef } from \"./b2Fixture\";\r\n// #endif\r\n/// The body type.\r\n/// static: zero mass, zero velocity, may be manually moved\r\n/// kinematic: zero mass, non-zero velocity set by user, moved by solver\r\n/// dynamic: positive mass, non-zero velocity determined by forces, moved by solver\r\nexport var b2BodyType;\r\n(function (b2BodyType) {\r\n    b2BodyType[b2BodyType[\"b2_unknown\"] = -1] = \"b2_unknown\";\r\n    b2BodyType[b2BodyType[\"b2_staticBody\"] = 0] = \"b2_staticBody\";\r\n    b2BodyType[b2BodyType[\"b2_kinematicBody\"] = 1] = \"b2_kinematicBody\";\r\n    b2BodyType[b2BodyType[\"b2_dynamicBody\"] = 2] = \"b2_dynamicBody\";\r\n    // TODO_ERIN\r\n    // b2_bulletBody = 3\r\n})(b2BodyType || (b2BodyType = {}));\r\n/// A body definition holds all the data needed to construct a rigid body.\r\n/// You can safely re-use body definitions. Shapes are added to a body after construction.\r\nexport class b2BodyDef {\r\n    constructor() {\r\n        /// The body type: static, kinematic, or dynamic.\r\n        /// Note: if a dynamic body would have zero mass, the mass is set to one.\r\n        this.type = b2BodyType.b2_staticBody;\r\n        /// The world position of the body. Avoid creating bodies at the origin\r\n        /// since this can lead to many overlapping shapes.\r\n        this.position = new b2Vec2(0, 0);\r\n        /// The world angle of the body in radians.\r\n        this.angle = 0;\r\n        /// The linear velocity of the body's origin in world co-ordinates.\r\n        this.linearVelocity = new b2Vec2(0, 0);\r\n        /// The angular velocity of the body.\r\n        this.angularVelocity = 0;\r\n        /// Linear damping is use to reduce the linear velocity. The damping parameter\r\n        /// can be larger than 1.0f but the damping effect becomes sensitive to the\r\n        /// time step when the damping parameter is large.\r\n        this.linearDamping = 0;\r\n        /// Angular damping is use to reduce the angular velocity. The damping parameter\r\n        /// can be larger than 1.0f but the damping effect becomes sensitive to the\r\n        /// time step when the damping parameter is large.\r\n        this.angularDamping = 0;\r\n        /// Set this flag to false if this body should never fall asleep. Note that\r\n        /// this increases CPU usage.\r\n        this.allowSleep = true;\r\n        /// Is this body initially awake or sleeping?\r\n        this.awake = true;\r\n        /// Should this body be prevented from rotating? Useful for characters.\r\n        this.fixedRotation = false;\r\n        /// Is this a fast moving body that should be prevented from tunneling through\r\n        /// other moving bodies? Note that all bodies are prevented from tunneling through\r\n        /// kinematic and static bodies. This setting is only considered on dynamic bodies.\r\n        /// @warning You should use this flag sparingly since it increases processing time.\r\n        this.bullet = false;\r\n        /// Does this body start out active?\r\n        this.active = true;\r\n        /// Use this to store application specific body data.\r\n        this.userData = null;\r\n        /// Scale the gravity applied to this body.\r\n        this.gravityScale = 1;\r\n    }\r\n}\r\n/// A rigid body. These are created via b2World::CreateBody.\r\nexport class b2Body {\r\n    // #endif\r\n    constructor(bd, world) {\r\n        this.m_type = b2BodyType.b2_staticBody;\r\n        this.m_islandFlag = false;\r\n        this.m_awakeFlag = false;\r\n        this.m_autoSleepFlag = false;\r\n        this.m_bulletFlag = false;\r\n        this.m_fixedRotationFlag = false;\r\n        this.m_activeFlag = false;\r\n        this.m_toiFlag = false;\r\n        this.m_islandIndex = 0;\r\n        this.m_xf = new b2Transform(); // the body origin transform\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0 = new b2Transform();\r\n        // #endif\r\n        this.m_sweep = new b2Sweep(); // the swept motion for CCD\r\n        this.m_linearVelocity = new b2Vec2();\r\n        this.m_angularVelocity = 0;\r\n        this.m_force = new b2Vec2();\r\n        this.m_torque = 0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_fixtureList = null;\r\n        this.m_fixtureCount = 0;\r\n        this.m_jointList = null;\r\n        this.m_contactList = null;\r\n        this.m_mass = 1;\r\n        this.m_invMass = 1;\r\n        // Rotational inertia about the center of mass.\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_linearDamping = 0;\r\n        this.m_angularDamping = 0;\r\n        this.m_gravityScale = 1;\r\n        this.m_sleepTime = 0;\r\n        this.m_userData = null;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        this.m_bulletFlag = b2Maybe(bd.bullet, false);\r\n        this.m_fixedRotationFlag = b2Maybe(bd.fixedRotation, false);\r\n        this.m_autoSleepFlag = b2Maybe(bd.allowSleep, true);\r\n        this.m_awakeFlag = b2Maybe(bd.awake, true);\r\n        this.m_activeFlag = b2Maybe(bd.active, true);\r\n        this.m_world = world;\r\n        this.m_xf.p.Copy(b2Maybe(bd.position, b2Vec2.ZERO));\r\n        // DEBUG: b2Assert(this.m_xf.p.IsValid());\r\n        this.m_xf.q.SetAngle(b2Maybe(bd.angle, 0));\r\n        // DEBUG: b2Assert(b2IsValid(this.m_xf.q.GetAngle()));\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0.Copy(this.m_xf);\r\n        // #endif\r\n        this.m_sweep.localCenter.SetZero();\r\n        this.m_sweep.c0.Copy(this.m_xf.p);\r\n        this.m_sweep.c.Copy(this.m_xf.p);\r\n        this.m_sweep.a0 = this.m_sweep.a = this.m_xf.q.GetAngle();\r\n        this.m_sweep.alpha0 = 0;\r\n        this.m_linearVelocity.Copy(b2Maybe(bd.linearVelocity, b2Vec2.ZERO));\r\n        // DEBUG: b2Assert(this.m_linearVelocity.IsValid());\r\n        this.m_angularVelocity = b2Maybe(bd.angularVelocity, 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_angularVelocity));\r\n        this.m_linearDamping = b2Maybe(bd.linearDamping, 0);\r\n        this.m_angularDamping = b2Maybe(bd.angularDamping, 0);\r\n        this.m_gravityScale = b2Maybe(bd.gravityScale, 1);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_gravityScale) && this.m_gravityScale >= 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_angularDamping) && this.m_angularDamping >= 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_linearDamping) && this.m_linearDamping >= 0);\r\n        this.m_force.SetZero();\r\n        this.m_torque = 0;\r\n        this.m_sleepTime = 0;\r\n        this.m_type = b2Maybe(bd.type, b2BodyType.b2_staticBody);\r\n        if (bd.type === b2BodyType.b2_dynamicBody) {\r\n            this.m_mass = 1;\r\n            this.m_invMass = 1;\r\n        }\r\n        else {\r\n            this.m_mass = 0;\r\n            this.m_invMass = 0;\r\n        }\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_userData = bd.userData;\r\n        this.m_fixtureList = null;\r\n        this.m_fixtureCount = 0;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        // #endif\r\n    }\r\n    CreateFixture(a, b = 0) {\r\n        if (a instanceof b2Shape) {\r\n            return this.CreateFixtureShapeDensity(a, b);\r\n        }\r\n        else {\r\n            return this.CreateFixtureDef(a);\r\n        }\r\n    }\r\n    /// Creates a fixture and attach it to this body. Use this function if you need\r\n    /// to set some fixture parameters, like friction. Otherwise you can create the\r\n    /// fixture directly from a shape.\r\n    /// If the density is non-zero, this function automatically updates the mass of the body.\r\n    /// Contacts are not created until the next time step.\r\n    /// @param def the fixture definition.\r\n    /// @warning This function is locked during callbacks.\r\n    CreateFixtureDef(def) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const fixture = new b2Fixture(def, this);\r\n        fixture.Create(def);\r\n        if (this.m_activeFlag) {\r\n            fixture.CreateProxies(this.m_xf);\r\n        }\r\n        fixture.m_next = this.m_fixtureList;\r\n        this.m_fixtureList = fixture;\r\n        ++this.m_fixtureCount;\r\n        // fixture.m_body = this;\r\n        // Adjust mass properties if needed.\r\n        if (fixture.m_density > 0) {\r\n            this.ResetMassData();\r\n        }\r\n        // Let the world know we have a new fixture. This will cause new contacts\r\n        // to be created at the beginning of the next time step.\r\n        this.m_world.m_newFixture = true;\r\n        return fixture;\r\n    }\r\n    CreateFixtureShapeDensity(shape, density = 0) {\r\n        const def = b2Body.CreateFixtureShapeDensity_s_def;\r\n        def.shape = shape;\r\n        def.density = density;\r\n        return this.CreateFixtureDef(def);\r\n    }\r\n    /// Destroy a fixture. This removes the fixture from the broad-phase and\r\n    /// destroys all contacts associated with this fixture. This will\r\n    /// automatically adjust the mass of the body if the body is dynamic and the\r\n    /// fixture has positive density.\r\n    /// All fixtures attached to a body are implicitly destroyed when the body is destroyed.\r\n    /// @param fixture the fixture to be removed.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyFixture(fixture) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        // DEBUG: b2Assert(fixture.m_body === this);\r\n        // Remove the fixture from this body's singly linked list.\r\n        // DEBUG: b2Assert(this.m_fixtureCount > 0);\r\n        let node = this.m_fixtureList;\r\n        let ppF = null;\r\n        // DEBUG: let found: boolean = false;\r\n        while (node !== null) {\r\n            if (node === fixture) {\r\n                if (ppF) {\r\n                    ppF.m_next = fixture.m_next;\r\n                }\r\n                else {\r\n                    this.m_fixtureList = fixture.m_next;\r\n                }\r\n                // DEBUG: found = true;\r\n                break;\r\n            }\r\n            ppF = node;\r\n            node = node.m_next;\r\n        }\r\n        // You tried to remove a shape that is not attached to this body.\r\n        // DEBUG: b2Assert(found);\r\n        // Destroy any contacts associated with the fixture.\r\n        let edge = this.m_contactList;\r\n        while (edge) {\r\n            const c = edge.contact;\r\n            edge = edge.next;\r\n            const fixtureA = c.GetFixtureA();\r\n            const fixtureB = c.GetFixtureB();\r\n            if (fixture === fixtureA || fixture === fixtureB) {\r\n                // This destroys the contact and removes it from\r\n                // this body's contact list.\r\n                this.m_world.m_contactManager.Destroy(c);\r\n            }\r\n        }\r\n        if (this.m_activeFlag) {\r\n            fixture.DestroyProxies();\r\n        }\r\n        // fixture.m_body = null;\r\n        fixture.m_next = null;\r\n        fixture.Destroy();\r\n        --this.m_fixtureCount;\r\n        // Reset the mass data.\r\n        this.ResetMassData();\r\n    }\r\n    /// Set the position of the body's origin and rotation.\r\n    /// This breaks any contacts and wakes the other bodies.\r\n    /// Manipulating a body's transform may cause non-physical behavior.\r\n    /// @param position the world position of the body's local origin.\r\n    /// @param angle the world rotation in radians.\r\n    SetTransformVec(position, angle) {\r\n        this.SetTransformXY(position.x, position.y, angle);\r\n    }\r\n    SetTransformXY(x, y, angle) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        this.m_xf.q.SetAngle(angle);\r\n        this.m_xf.p.Set(x, y);\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0.Copy(this.m_xf);\r\n        // #endif\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.a = angle;\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        this.m_sweep.a0 = angle;\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            f.Synchronize(this.m_xf, this.m_xf);\r\n        }\r\n        this.m_world.m_contactManager.FindNewContacts();\r\n    }\r\n    SetTransform(xf) {\r\n        this.SetTransformVec(xf.p, xf.GetAngle());\r\n    }\r\n    /// Get the body transform for the body's origin.\r\n    /// @return the world transform of the body's origin.\r\n    GetTransform() {\r\n        return this.m_xf;\r\n    }\r\n    /// Get the world body origin position.\r\n    /// @return the world position of the body's origin.\r\n    GetPosition() {\r\n        return this.m_xf.p;\r\n    }\r\n    SetPosition(position) {\r\n        this.SetTransformVec(position, this.GetAngle());\r\n    }\r\n    SetPositionXY(x, y) {\r\n        this.SetTransformXY(x, y, this.GetAngle());\r\n    }\r\n    /// Get the angle in radians.\r\n    /// @return the current world rotation angle in radians.\r\n    GetAngle() {\r\n        return this.m_sweep.a;\r\n    }\r\n    SetAngle(angle) {\r\n        this.SetTransformVec(this.GetPosition(), angle);\r\n    }\r\n    /// Get the world position of the center of mass.\r\n    GetWorldCenter() {\r\n        return this.m_sweep.c;\r\n    }\r\n    /// Get the local position of the center of mass.\r\n    GetLocalCenter() {\r\n        return this.m_sweep.localCenter;\r\n    }\r\n    /// Set the linear velocity of the center of mass.\r\n    /// @param v the new linear velocity of the center of mass.\r\n    SetLinearVelocity(v) {\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            return;\r\n        }\r\n        if (b2Vec2.DotVV(v, v) > 0) {\r\n            this.SetAwake(true);\r\n        }\r\n        this.m_linearVelocity.Copy(v);\r\n    }\r\n    /// Get the linear velocity of the center of mass.\r\n    /// @return the linear velocity of the center of mass.\r\n    GetLinearVelocity() {\r\n        return this.m_linearVelocity;\r\n    }\r\n    /// Set the angular velocity.\r\n    /// @param omega the new angular velocity in radians/second.\r\n    SetAngularVelocity(w) {\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            return;\r\n        }\r\n        if (w * w > 0) {\r\n            this.SetAwake(true);\r\n        }\r\n        this.m_angularVelocity = w;\r\n    }\r\n    /// Get the angular velocity.\r\n    /// @return the angular velocity in radians/second.\r\n    GetAngularVelocity() {\r\n        return this.m_angularVelocity;\r\n    }\r\n    GetDefinition(bd) {\r\n        bd.type = this.GetType();\r\n        bd.allowSleep = this.m_autoSleepFlag;\r\n        bd.angle = this.GetAngle();\r\n        bd.angularDamping = this.m_angularDamping;\r\n        bd.gravityScale = this.m_gravityScale;\r\n        bd.angularVelocity = this.m_angularVelocity;\r\n        bd.fixedRotation = this.m_fixedRotationFlag;\r\n        bd.bullet = this.m_bulletFlag;\r\n        bd.awake = this.m_awakeFlag;\r\n        bd.linearDamping = this.m_linearDamping;\r\n        bd.linearVelocity.Copy(this.GetLinearVelocity());\r\n        bd.position.Copy(this.GetPosition());\r\n        bd.userData = this.GetUserData();\r\n        return bd;\r\n    }\r\n    /// Apply a force at a world point. If the force is not\r\n    /// applied at the center of mass, it will generate a torque and\r\n    /// affect the angular velocity. This wakes up the body.\r\n    /// @param force the world force vector, usually in Newtons (N).\r\n    /// @param point the world position of the point of application.\r\n    /// @param wake also wake up the body\r\n    ApplyForce(force, point, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_force.x += force.x;\r\n            this.m_force.y += force.y;\r\n            this.m_torque += ((point.x - this.m_sweep.c.x) * force.y - (point.y - this.m_sweep.c.y) * force.x);\r\n        }\r\n    }\r\n    /// Apply a force to the center of mass. This wakes up the body.\r\n    /// @param force the world force vector, usually in Newtons (N).\r\n    /// @param wake also wake up the body\r\n    ApplyForceToCenter(force, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_force.x += force.x;\r\n            this.m_force.y += force.y;\r\n        }\r\n    }\r\n    /// Apply a torque. This affects the angular velocity\r\n    /// without affecting the linear velocity of the center of mass.\r\n    /// @param torque about the z-axis (out of the screen), usually in N-m.\r\n    /// @param wake also wake up the body\r\n    ApplyTorque(torque, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_torque += torque;\r\n        }\r\n    }\r\n    /// Apply an impulse at a point. This immediately modifies the velocity.\r\n    /// It also modifies the angular velocity if the point of application\r\n    /// is not at the center of mass. This wakes up the body.\r\n    /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n    /// @param point the world position of the point of application.\r\n    /// @param wake also wake up the body\r\n    ApplyLinearImpulse(impulse, point, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n            this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n            this.m_angularVelocity += this.m_invI * ((point.x - this.m_sweep.c.x) * impulse.y - (point.y - this.m_sweep.c.y) * impulse.x);\r\n        }\r\n    }\r\n    /// Apply an impulse at the center of gravity. This immediately modifies the velocity.\r\n    /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n    /// @param wake also wake up the body\r\n    ApplyLinearImpulseToCenter(impulse, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n            this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n        }\r\n    }\r\n    /// Apply an angular impulse.\r\n    /// @param impulse the angular impulse in units of kg*m*m/s\r\n    /// @param wake also wake up the body\r\n    ApplyAngularImpulse(impulse, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_angularVelocity += this.m_invI * impulse;\r\n        }\r\n    }\r\n    /// Get the total mass of the body.\r\n    /// @return the mass, usually in kilograms (kg).\r\n    GetMass() {\r\n        return this.m_mass;\r\n    }\r\n    /// Get the rotational inertia of the body about the local origin.\r\n    /// @return the rotational inertia, usually in kg-m^2.\r\n    GetInertia() {\r\n        return this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\r\n    }\r\n    /// Get the mass data of the body.\r\n    /// @return a struct containing the mass, inertia and center of the body.\r\n    GetMassData(data) {\r\n        data.mass = this.m_mass;\r\n        data.I = this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\r\n        data.center.Copy(this.m_sweep.localCenter);\r\n        return data;\r\n    }\r\n    SetMassData(massData) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        this.m_invMass = 0;\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_mass = massData.mass;\r\n        if (this.m_mass <= 0) {\r\n            this.m_mass = 1;\r\n        }\r\n        this.m_invMass = 1 / this.m_mass;\r\n        if (massData.I > 0 && !this.m_fixedRotationFlag) {\r\n            this.m_I = massData.I - this.m_mass * b2Vec2.DotVV(massData.center, massData.center);\r\n            // DEBUG: b2Assert(this.m_I > 0);\r\n            this.m_invI = 1 / this.m_I;\r\n        }\r\n        // Move center of mass.\r\n        const oldCenter = b2Body.SetMassData_s_oldCenter.Copy(this.m_sweep.c);\r\n        this.m_sweep.localCenter.Copy(massData.center);\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        // Update center of mass velocity.\r\n        b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\r\n    }\r\n    ResetMassData() {\r\n        // Compute mass data from shapes. Each shape has its own density.\r\n        this.m_mass = 0;\r\n        this.m_invMass = 0;\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_sweep.localCenter.SetZero();\r\n        // Static and kinematic bodies have zero mass.\r\n        if (this.m_type === b2BodyType.b2_staticBody || this.m_type === b2BodyType.b2_kinematicBody) {\r\n            this.m_sweep.c0.Copy(this.m_xf.p);\r\n            this.m_sweep.c.Copy(this.m_xf.p);\r\n            this.m_sweep.a0 = this.m_sweep.a;\r\n            return;\r\n        }\r\n        // DEBUG: b2Assert(this.m_type === b2BodyType.b2_dynamicBody);\r\n        // Accumulate mass over all fixtures.\r\n        const localCenter = b2Body.ResetMassData_s_localCenter.SetZero();\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            if (f.m_density === 0) {\r\n                continue;\r\n            }\r\n            const massData = f.GetMassData(b2Body.ResetMassData_s_massData);\r\n            this.m_mass += massData.mass;\r\n            localCenter.x += massData.center.x * massData.mass;\r\n            localCenter.y += massData.center.y * massData.mass;\r\n            this.m_I += massData.I;\r\n        }\r\n        // Compute center of mass.\r\n        if (this.m_mass > 0) {\r\n            this.m_invMass = 1 / this.m_mass;\r\n            localCenter.x *= this.m_invMass;\r\n            localCenter.y *= this.m_invMass;\r\n        }\r\n        else {\r\n            // Force all dynamic bodies to have a positive mass.\r\n            this.m_mass = 1;\r\n            this.m_invMass = 1;\r\n        }\r\n        if (this.m_I > 0 && !this.m_fixedRotationFlag) {\r\n            // Center the inertia about the center of mass.\r\n            this.m_I -= this.m_mass * b2Vec2.DotVV(localCenter, localCenter);\r\n            // DEBUG: b2Assert(this.m_I > 0);\r\n            this.m_invI = 1 / this.m_I;\r\n        }\r\n        else {\r\n            this.m_I = 0;\r\n            this.m_invI = 0;\r\n        }\r\n        // Move center of mass.\r\n        const oldCenter = b2Body.ResetMassData_s_oldCenter.Copy(this.m_sweep.c);\r\n        this.m_sweep.localCenter.Copy(localCenter);\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        // Update center of mass velocity.\r\n        b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\r\n    }\r\n    /// Get the world coordinates of a point given the local coordinates.\r\n    /// @param localPoint a point on the body measured relative the the body's origin.\r\n    /// @return the same point expressed in world coordinates.\r\n    GetWorldPoint(localPoint, out) {\r\n        return b2Transform.MulXV(this.m_xf, localPoint, out);\r\n    }\r\n    /// Get the world coordinates of a vector given the local coordinates.\r\n    /// @param localVector a vector fixed in the body.\r\n    /// @return the same vector expressed in world coordinates.\r\n    GetWorldVector(localVector, out) {\r\n        return b2Rot.MulRV(this.m_xf.q, localVector, out);\r\n    }\r\n    /// Gets a local point relative to the body's origin given a world point.\r\n    /// @param a point in world coordinates.\r\n    /// @return the corresponding local point relative to the body's origin.\r\n    GetLocalPoint(worldPoint, out) {\r\n        return b2Transform.MulTXV(this.m_xf, worldPoint, out);\r\n    }\r\n    /// Gets a local vector given a world vector.\r\n    /// @param a vector in world coordinates.\r\n    /// @return the corresponding local vector.\r\n    GetLocalVector(worldVector, out) {\r\n        return b2Rot.MulTRV(this.m_xf.q, worldVector, out);\r\n    }\r\n    /// Get the world linear velocity of a world point attached to this body.\r\n    /// @param a point in world coordinates.\r\n    /// @return the world velocity of a point.\r\n    GetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n        return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_sweep.c, b2Vec2.s_t0), out);\r\n    }\r\n    /// Get the world velocity of a local point.\r\n    /// @param a point in local coordinates.\r\n    /// @return the world velocity of a point.\r\n    GetLinearVelocityFromLocalPoint(localPoint, out) {\r\n        return this.GetLinearVelocityFromWorldPoint(this.GetWorldPoint(localPoint, out), out);\r\n    }\r\n    /// Get the linear damping of the body.\r\n    GetLinearDamping() {\r\n        return this.m_linearDamping;\r\n    }\r\n    /// Set the linear damping of the body.\r\n    SetLinearDamping(linearDamping) {\r\n        this.m_linearDamping = linearDamping;\r\n    }\r\n    /// Get the angular damping of the body.\r\n    GetAngularDamping() {\r\n        return this.m_angularDamping;\r\n    }\r\n    /// Set the angular damping of the body.\r\n    SetAngularDamping(angularDamping) {\r\n        this.m_angularDamping = angularDamping;\r\n    }\r\n    /// Get the gravity scale of the body.\r\n    GetGravityScale() {\r\n        return this.m_gravityScale;\r\n    }\r\n    /// Set the gravity scale of the body.\r\n    SetGravityScale(scale) {\r\n        this.m_gravityScale = scale;\r\n    }\r\n    /// Set the type of this body. This may alter the mass and velocity.\r\n    SetType(type) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        if (this.m_type === type) {\r\n            return;\r\n        }\r\n        this.m_type = type;\r\n        this.ResetMassData();\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            this.m_linearVelocity.SetZero();\r\n            this.m_angularVelocity = 0;\r\n            this.m_sweep.a0 = this.m_sweep.a;\r\n            this.m_sweep.c0.Copy(this.m_sweep.c);\r\n            this.SynchronizeFixtures();\r\n        }\r\n        this.SetAwake(true);\r\n        this.m_force.SetZero();\r\n        this.m_torque = 0;\r\n        // Delete the attached contacts.\r\n        let ce = this.m_contactList;\r\n        while (ce) {\r\n            const ce0 = ce;\r\n            ce = ce.next;\r\n            this.m_world.m_contactManager.Destroy(ce0.contact);\r\n        }\r\n        this.m_contactList = null;\r\n        // Touch the proxies so that new contacts will be created (when appropriate)\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            f.TouchProxies();\r\n        }\r\n    }\r\n    /// Get the type of this body.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n    /// Should this body be treated like a bullet for continuous collision detection?\r\n    SetBullet(flag) {\r\n        this.m_bulletFlag = flag;\r\n    }\r\n    /// Is this body treated like a bullet for continuous collision detection?\r\n    IsBullet() {\r\n        return this.m_bulletFlag;\r\n    }\r\n    /// You can disable sleeping on this body. If you disable sleeping, the\r\n    /// body will be woken.\r\n    SetSleepingAllowed(flag) {\r\n        this.m_autoSleepFlag = flag;\r\n        if (!flag) {\r\n            this.SetAwake(true);\r\n        }\r\n    }\r\n    /// Is this body allowed to sleep\r\n    IsSleepingAllowed() {\r\n        return this.m_autoSleepFlag;\r\n    }\r\n    /// Set the sleep state of the body. A sleeping body has very\r\n    /// low CPU cost.\r\n    /// @param flag set to true to wake the body, false to put it to sleep.\r\n    SetAwake(flag) {\r\n        if (flag) {\r\n            this.m_awakeFlag = true;\r\n            this.m_sleepTime = 0;\r\n        }\r\n        else {\r\n            this.m_awakeFlag = false;\r\n            this.m_sleepTime = 0;\r\n            this.m_linearVelocity.SetZero();\r\n            this.m_angularVelocity = 0;\r\n            this.m_force.SetZero();\r\n            this.m_torque = 0;\r\n        }\r\n    }\r\n    /// Get the sleeping state of this body.\r\n    /// @return true if the body is sleeping.\r\n    IsAwake() {\r\n        return this.m_awakeFlag;\r\n    }\r\n    /// Set the active state of the body. An inactive body is not\r\n    /// simulated and cannot be collided with or woken up.\r\n    /// If you pass a flag of true, all fixtures will be added to the\r\n    /// broad-phase.\r\n    /// If you pass a flag of false, all fixtures will be removed from\r\n    /// the broad-phase and all contacts will be destroyed.\r\n    /// Fixtures and joints are otherwise unaffected. You may continue\r\n    /// to create/destroy fixtures and joints on inactive bodies.\r\n    /// Fixtures on an inactive body are implicitly inactive and will\r\n    /// not participate in collisions, ray-casts, or queries.\r\n    /// Joints connected to an inactive body are implicitly inactive.\r\n    /// An inactive body is still owned by a b2World object and remains\r\n    /// in the body list.\r\n    SetActive(flag) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        if (flag === this.IsActive()) {\r\n            return;\r\n        }\r\n        this.m_activeFlag = flag;\r\n        if (flag) {\r\n            // Create all proxies.\r\n            for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n                f.CreateProxies(this.m_xf);\r\n            }\r\n            // Contacts are created the next time step.\r\n        }\r\n        else {\r\n            // Destroy all proxies.\r\n            for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n                f.DestroyProxies();\r\n            }\r\n            // Destroy the attached contacts.\r\n            let ce = this.m_contactList;\r\n            while (ce) {\r\n                const ce0 = ce;\r\n                ce = ce.next;\r\n                this.m_world.m_contactManager.Destroy(ce0.contact);\r\n            }\r\n            this.m_contactList = null;\r\n        }\r\n    }\r\n    /// Get the active state of the body.\r\n    IsActive() {\r\n        return this.m_activeFlag;\r\n    }\r\n    /// Set this body to have fixed rotation. This causes the mass\r\n    /// to be reset.\r\n    SetFixedRotation(flag) {\r\n        if (this.m_fixedRotationFlag === flag) {\r\n            return;\r\n        }\r\n        this.m_fixedRotationFlag = flag;\r\n        this.m_angularVelocity = 0;\r\n        this.ResetMassData();\r\n    }\r\n    /// Does this body have fixed rotation?\r\n    IsFixedRotation() {\r\n        return this.m_fixedRotationFlag;\r\n    }\r\n    /// Get the list of all fixtures attached to this body.\r\n    GetFixtureList() {\r\n        return this.m_fixtureList;\r\n    }\r\n    /// Get the list of all joints attached to this body.\r\n    GetJointList() {\r\n        return this.m_jointList;\r\n    }\r\n    /// Get the list of all contacts attached to this body.\r\n    /// @warning this list changes during the time step and you may\r\n    /// miss some collisions if you don't use b2ContactListener.\r\n    GetContactList() {\r\n        return this.m_contactList;\r\n    }\r\n    /// Get the next body in the world's body list.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data pointer that was provided in the body definition.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data. Use this to store your application specific data.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Get the parent world of this body.\r\n    GetWorld() {\r\n        return this.m_world;\r\n    }\r\n    /// Dump this body to a log file\r\n    Dump(log) {\r\n        const bodyIndex = this.m_islandIndex;\r\n        log(\"{\\n\");\r\n        log(\"  const bd: b2BodyDef = new b2BodyDef();\\n\");\r\n        let type_str = \"\";\r\n        switch (this.m_type) {\r\n            case b2BodyType.b2_staticBody:\r\n                type_str = \"b2BodyType.b2_staticBody\";\r\n                break;\r\n            case b2BodyType.b2_kinematicBody:\r\n                type_str = \"b2BodyType.b2_kinematicBody\";\r\n                break;\r\n            case b2BodyType.b2_dynamicBody:\r\n                type_str = \"b2BodyType.b2_dynamicBody\";\r\n                break;\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                break;\r\n        }\r\n        log(\"  bd.type = %s;\\n\", type_str);\r\n        log(\"  bd.position.Set(%.15f, %.15f);\\n\", this.m_xf.p.x, this.m_xf.p.y);\r\n        log(\"  bd.angle = %.15f;\\n\", this.m_sweep.a);\r\n        log(\"  bd.linearVelocity.Set(%.15f, %.15f);\\n\", this.m_linearVelocity.x, this.m_linearVelocity.y);\r\n        log(\"  bd.angularVelocity = %.15f;\\n\", this.m_angularVelocity);\r\n        log(\"  bd.linearDamping = %.15f;\\n\", this.m_linearDamping);\r\n        log(\"  bd.angularDamping = %.15f;\\n\", this.m_angularDamping);\r\n        log(\"  bd.allowSleep = %s;\\n\", (this.m_autoSleepFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.awake = %s;\\n\", (this.m_awakeFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.fixedRotation = %s;\\n\", (this.m_fixedRotationFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.bullet = %s;\\n\", (this.m_bulletFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.active = %s;\\n\", (this.m_activeFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.gravityScale = %.15f;\\n\", this.m_gravityScale);\r\n        log(\"\\n\");\r\n        log(\"  bodies[%d] = this.m_world.CreateBody(bd);\\n\", this.m_islandIndex);\r\n        log(\"\\n\");\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            log(\"  {\\n\");\r\n            f.Dump(log, bodyIndex);\r\n            log(\"  }\\n\");\r\n        }\r\n        log(\"}\\n\");\r\n    }\r\n    SynchronizeFixtures() {\r\n        const xf1 = b2Body.SynchronizeFixtures_s_xf1;\r\n        xf1.q.SetAngle(this.m_sweep.a0);\r\n        b2Rot.MulRV(xf1.q, this.m_sweep.localCenter, xf1.p);\r\n        b2Vec2.SubVV(this.m_sweep.c0, xf1.p, xf1.p);\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            f.Synchronize(xf1, this.m_xf);\r\n        }\r\n    }\r\n    SynchronizeTransform() {\r\n        this.m_xf.q.SetAngle(this.m_sweep.a);\r\n        b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\r\n        b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\r\n    }\r\n    // This is used to prevent connected bodies from colliding.\r\n    // It may lie, depending on the collideConnected flag.\r\n    ShouldCollide(other) {\r\n        // At least one body should be dynamic or kinematic.\r\n        if (this.m_type === b2BodyType.b2_staticBody && other.m_type === b2BodyType.b2_staticBody) {\r\n            return false;\r\n        }\r\n        return this.ShouldCollideConnected(other);\r\n    }\r\n    ShouldCollideConnected(other) {\r\n        // Does a joint prevent collision?\r\n        for (let jn = this.m_jointList; jn; jn = jn.next) {\r\n            if (jn.other === other) {\r\n                if (!jn.joint.m_collideConnected) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    Advance(alpha) {\r\n        // Advance to the new safe time. This doesn't sync the broad-phase.\r\n        this.m_sweep.Advance(alpha);\r\n        this.m_sweep.c.Copy(this.m_sweep.c0);\r\n        this.m_sweep.a = this.m_sweep.a0;\r\n        this.m_xf.q.SetAngle(this.m_sweep.a);\r\n        b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\r\n        b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\r\n    }\r\n    // #if B2_ENABLE_CONTROLLER\r\n    GetControllerList() {\r\n        return this.m_controllerList;\r\n    }\r\n    GetControllerCount() {\r\n        return this.m_controllerCount;\r\n    }\r\n}\r\n/// Creates a fixture from a shape and attach it to this body.\r\n/// This is a convenience function. Use b2FixtureDef if you need to set parameters\r\n/// like friction, restitution, user data, or filtering.\r\n/// If the density is non-zero, this function automatically updates the mass of the body.\r\n/// @param shape the shape to be cloned.\r\n/// @param density the shape density (set to zero for static bodies).\r\n/// @warning This function is locked during callbacks.\r\nb2Body.CreateFixtureShapeDensity_s_def = new b2FixtureDef();\r\n/// Set the mass properties to override the mass properties of the fixtures.\r\n/// Note that this changes the center of mass position.\r\n/// Note that creating or destroying fixtures can also alter the mass.\r\n/// This function has no effect if the body isn't dynamic.\r\n/// @param massData the mass properties.\r\nb2Body.SetMassData_s_oldCenter = new b2Vec2();\r\n/// This resets the mass properties to the sum of the mass properties of the fixtures.\r\n/// This normally does not need to be called unless you called SetMassData to override\r\n/// the mass and you later want to reset the mass.\r\nb2Body.ResetMassData_s_localCenter = new b2Vec2();\r\nb2Body.ResetMassData_s_oldCenter = new b2Vec2();\r\nb2Body.ResetMassData_s_massData = new b2MassData();\r\nb2Body.SynchronizeFixtures_s_xf1 = new b2Transform();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../../Common/b2Math\";\r\nexport var b2JointType;\r\n(function (b2JointType) {\r\n    b2JointType[b2JointType[\"e_unknownJoint\"] = 0] = \"e_unknownJoint\";\r\n    b2JointType[b2JointType[\"e_revoluteJoint\"] = 1] = \"e_revoluteJoint\";\r\n    b2JointType[b2JointType[\"e_prismaticJoint\"] = 2] = \"e_prismaticJoint\";\r\n    b2JointType[b2JointType[\"e_distanceJoint\"] = 3] = \"e_distanceJoint\";\r\n    b2JointType[b2JointType[\"e_pulleyJoint\"] = 4] = \"e_pulleyJoint\";\r\n    b2JointType[b2JointType[\"e_mouseJoint\"] = 5] = \"e_mouseJoint\";\r\n    b2JointType[b2JointType[\"e_gearJoint\"] = 6] = \"e_gearJoint\";\r\n    b2JointType[b2JointType[\"e_wheelJoint\"] = 7] = \"e_wheelJoint\";\r\n    b2JointType[b2JointType[\"e_weldJoint\"] = 8] = \"e_weldJoint\";\r\n    b2JointType[b2JointType[\"e_frictionJoint\"] = 9] = \"e_frictionJoint\";\r\n    b2JointType[b2JointType[\"e_ropeJoint\"] = 10] = \"e_ropeJoint\";\r\n    b2JointType[b2JointType[\"e_motorJoint\"] = 11] = \"e_motorJoint\";\r\n    b2JointType[b2JointType[\"e_areaJoint\"] = 12] = \"e_areaJoint\";\r\n})(b2JointType || (b2JointType = {}));\r\nexport var b2LimitState;\r\n(function (b2LimitState) {\r\n    b2LimitState[b2LimitState[\"e_inactiveLimit\"] = 0] = \"e_inactiveLimit\";\r\n    b2LimitState[b2LimitState[\"e_atLowerLimit\"] = 1] = \"e_atLowerLimit\";\r\n    b2LimitState[b2LimitState[\"e_atUpperLimit\"] = 2] = \"e_atUpperLimit\";\r\n    b2LimitState[b2LimitState[\"e_equalLimits\"] = 3] = \"e_equalLimits\";\r\n})(b2LimitState || (b2LimitState = {}));\r\nexport class b2Jacobian {\r\n    constructor() {\r\n        this.linear = new b2Vec2();\r\n        this.angularA = 0;\r\n        this.angularB = 0;\r\n    }\r\n    SetZero() {\r\n        this.linear.SetZero();\r\n        this.angularA = 0;\r\n        this.angularB = 0;\r\n        return this;\r\n    }\r\n    Set(x, a1, a2) {\r\n        this.linear.Copy(x);\r\n        this.angularA = a1;\r\n        this.angularB = a2;\r\n        return this;\r\n    }\r\n}\r\n/// A joint edge is used to connect bodies and joints together\r\n/// in a joint graph where each body is a node and each joint\r\n/// is an edge. A joint edge belongs to a doubly linked list\r\n/// maintained in each attached body. Each joint has two joint\r\n/// nodes, one for each attached body.\r\nexport class b2JointEdge {\r\n    constructor(joint, other) {\r\n        this.prev = null; ///< the previous joint edge in the body's joint list\r\n        this.next = null; ///< the next joint edge in the body's joint list\r\n        this.joint = joint;\r\n        this.other = other;\r\n    }\r\n}\r\n/// Joint definitions are used to construct joints.\r\nexport class b2JointDef {\r\n    constructor(type) {\r\n        /// The joint type is set automatically for concrete joint types.\r\n        this.type = b2JointType.e_unknownJoint;\r\n        /// Use this to attach application specific data to your joints.\r\n        this.userData = null;\r\n        /// Set this flag to true if the attached bodies should collide.\r\n        this.collideConnected = false;\r\n        this.type = type;\r\n    }\r\n}\r\n/// The base joint class. Joints are used to constraint two bodies together in\r\n/// various fashions. Some joints also feature limits and motors.\r\nexport class b2Joint {\r\n    constructor(def) {\r\n        // DEBUG: b2Assert(def.bodyA !== def.bodyB);\r\n        this.m_type = b2JointType.e_unknownJoint;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_index = 0;\r\n        this.m_islandFlag = false;\r\n        this.m_collideConnected = false;\r\n        this.m_userData = null;\r\n        this.m_type = def.type;\r\n        this.m_edgeA = new b2JointEdge(this, def.bodyB);\r\n        this.m_edgeB = new b2JointEdge(this, def.bodyA);\r\n        this.m_bodyA = def.bodyA;\r\n        this.m_bodyB = def.bodyB;\r\n        this.m_collideConnected = b2Maybe(def.collideConnected, false);\r\n        this.m_userData = def.userData;\r\n    }\r\n    /// Get the type of the concrete joint.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n    /// Get the first body attached to this joint.\r\n    GetBodyA() {\r\n        return this.m_bodyA;\r\n    }\r\n    /// Get the second body attached to this joint.\r\n    GetBodyB() {\r\n        return this.m_bodyB;\r\n    }\r\n    /// Get the next joint the world joint list.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data pointer.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data pointer.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Short-cut function to determine if either body is inactive.\r\n    IsActive() {\r\n        return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();\r\n    }\r\n    /// Get collide connected.\r\n    /// Note: modifying the collide connect flag won't work correctly because\r\n    /// the flag is only checked when fixture AABBs begin to overlap.\r\n    GetCollideConnected() {\r\n        return this.m_collideConnected;\r\n    }\r\n    /// Dump this joint to the log file.\r\n    Dump(log) {\r\n        log(\"// Dump is not supported for this joint type.\\n\");\r\n    }\r\n    /// Shift the origin for any points stored in world coordinates.\r\n    ShiftOrigin(newOrigin) {\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJKb2ludC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0R5bmFtaWNzL0pvaW50cy9iMkpvaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsNkRBQTZEO0FBQzdELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsTUFBTSxFQUFNLE1BQU0scUJBQXFCLENBQUM7QUFJakQsTUFBTSxDQUFOLElBQVksV0FjWDtBQWRELFdBQVksV0FBVztJQUNyQixpRUFBa0IsQ0FBQTtJQUNsQixtRUFBbUIsQ0FBQTtJQUNuQixxRUFBb0IsQ0FBQTtJQUNwQixtRUFBbUIsQ0FBQTtJQUNuQiwrREFBaUIsQ0FBQTtJQUNqQiw2REFBZ0IsQ0FBQTtJQUNoQiwyREFBZSxDQUFBO0lBQ2YsNkRBQWdCLENBQUE7SUFDaEIsMkRBQWUsQ0FBQTtJQUNmLG1FQUFtQixDQUFBO0lBQ25CLDREQUFnQixDQUFBO0lBQ2hCLDhEQUFpQixDQUFBO0lBQ2pCLDREQUFnQixDQUFBO0FBQ2xCLENBQUMsRUFkVyxXQUFXLEtBQVgsV0FBVyxRQWN0QjtBQUVELE1BQU0sQ0FBTixJQUFZLFlBS1g7QUFMRCxXQUFZLFlBQVk7SUFDdEIscUVBQW1CLENBQUE7SUFDbkIsbUVBQWtCLENBQUE7SUFDbEIsbUVBQWtCLENBQUE7SUFDbEIsaUVBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQUxXLFlBQVksS0FBWixZQUFZLFFBS3ZCO0FBRUQsTUFBTSxPQUFPLFVBQVU7SUFBdkI7UUFDa0IsV0FBTSxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFDdkMsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixhQUFRLEdBQVcsQ0FBQyxDQUFDO0lBZTlCLENBQUM7SUFiUSxPQUFPO1FBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMs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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2_pi, b2_epsilon } from \"../../Common/b2Settings\";\r\nimport { b2Sq, b2Sqrt, b2Asin, b2Pow, b2Vec2, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A circle shape.\r\nexport class b2CircleShape extends b2Shape {\r\n    constructor(radius = 0) {\r\n        super(b2ShapeType.e_circleShape, radius);\r\n        this.m_p = new b2Vec2();\r\n    }\r\n    Set(position, radius = this.m_radius) {\r\n        this.m_p.Copy(position);\r\n        this.m_radius = radius;\r\n        return this;\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2CircleShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        // DEBUG: b2Assert(other instanceof b2CircleShape);\r\n        this.m_p.Copy(other.m_p);\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    TestPoint(transform, p) {\r\n        const center = b2Transform.MulXV(transform, this.m_p, b2CircleShape.TestPoint_s_center);\r\n        const d = b2Vec2.SubVV(p, center, b2CircleShape.TestPoint_s_d);\r\n        return b2Vec2.DotVV(d, d) <= b2Sq(this.m_radius);\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const center = b2Transform.MulXV(xf, this.m_p, b2CircleShape.ComputeDistance_s_center);\r\n        b2Vec2.SubVV(p, center, normal);\r\n        return normal.Normalize() - this.m_radius;\r\n    }\r\n    RayCast(output, input, transform, childIndex) {\r\n        const position = b2Transform.MulXV(transform, this.m_p, b2CircleShape.RayCast_s_position);\r\n        const s = b2Vec2.SubVV(input.p1, position, b2CircleShape.RayCast_s_s);\r\n        const b = b2Vec2.DotVV(s, s) - b2Sq(this.m_radius);\r\n        // Solve quadratic equation.\r\n        const r = b2Vec2.SubVV(input.p2, input.p1, b2CircleShape.RayCast_s_r);\r\n        const c = b2Vec2.DotVV(s, r);\r\n        const rr = b2Vec2.DotVV(r, r);\r\n        const sigma = c * c - rr * b;\r\n        // Check for negative discriminant and short segment.\r\n        if (sigma < 0 || rr < b2_epsilon) {\r\n            return false;\r\n        }\r\n        // Find the point of intersection of the line with the circle.\r\n        let a = (-(c + b2Sqrt(sigma)));\r\n        // Is the intersection point on the segment?\r\n        if (0 <= a && a <= input.maxFraction * rr) {\r\n            a /= rr;\r\n            output.fraction = a;\r\n            b2Vec2.AddVMulSV(s, a, r, output.normal).SelfNormalize();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ComputeAABB(aabb, transform, childIndex) {\r\n        const p = b2Transform.MulXV(transform, this.m_p, b2CircleShape.ComputeAABB_s_p);\r\n        aabb.lowerBound.Set(p.x - this.m_radius, p.y - this.m_radius);\r\n        aabb.upperBound.Set(p.x + this.m_radius, p.y + this.m_radius);\r\n    }\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        const radius_sq = b2Sq(this.m_radius);\r\n        massData.mass = density * b2_pi * radius_sq;\r\n        massData.center.Copy(this.m_p);\r\n        // inertia about the local origin\r\n        massData.I = massData.mass * (0.5 * radius_sq + b2Vec2.DotVV(this.m_p, this.m_p));\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_p);\r\n        proxy.m_count = 1;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        const p = b2Transform.MulXV(xf, this.m_p, new b2Vec2());\r\n        const l = (-(b2Vec2.DotVV(normal, p) - offset));\r\n        if (l < (-this.m_radius) + b2_epsilon) {\r\n            // Completely dry\r\n            return 0;\r\n        }\r\n        if (l > this.m_radius) {\r\n            // Completely wet\r\n            c.Copy(p);\r\n            return b2_pi * this.m_radius * this.m_radius;\r\n        }\r\n        // Magic\r\n        const r2 = this.m_radius * this.m_radius;\r\n        const l2 = l * l;\r\n        const area = r2 * (b2Asin(l / this.m_radius) + b2_pi / 2) + l * b2Sqrt(r2 - l2);\r\n        const com = (-2 / 3 * b2Pow(r2 - l2, 1.5) / area);\r\n        c.x = p.x + normal.x * com;\r\n        c.y = p.y + normal.y * com;\r\n        return area;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2CircleShape = new b2CircleShape();\\n\");\r\n        log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\r\n        log(\"    shape.m_p.Set(%.15f, %.15f);\\n\", this.m_p.x, this.m_p.y);\r\n    }\r\n}\r\n/// Implement b2Shape.\r\nb2CircleShape.TestPoint_s_center = new b2Vec2();\r\nb2CircleShape.TestPoint_s_d = new b2Vec2();\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2CircleShape.ComputeDistance_s_center = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\r\n// From Section 3.1.2\r\n// x = s + a * r\r\n// norm(x) = radius\r\nb2CircleShape.RayCast_s_position = new b2Vec2();\r\nb2CircleShape.RayCast_s_s = new b2Vec2();\r\nb2CircleShape.RayCast_s_r = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2CircleShape.ComputeAABB_s_p = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaXJjbGVTaGFwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0NvbGxpc2lvbi9TaGFwZXMvYjJDaXJjbGVTaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLDZEQUE2RDtBQUM3RCxPQUFPLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzVELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBTSxNQUFNLHFCQUFxQixDQUFDO0FBSTNGLE9BQU8sRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRWpELG1CQUFtQjtBQUNuQixNQUFNLE9BQU8sYUFBYyxTQUFRLE9BQU87SUFHeEMsWUFBWSxTQUFpQixDQUFDO1FBQzVCLEtBQUssQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBSDNCLFFBQUcsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO0lBSTNDLENBQUM7SUFFTSxHQUFHLENBQUMsUUFBWSxFQUFFLFNBQWlCLElBQUksQ0FBQyxRQUFRO1FBQ3JELElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELHNCQUFzQjtJQUNmLEtBQUs7UUFDVixPQUFPLElBQUksYUFBYSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFTSxJQUFJLENBQUMsS0FBb0I7UUFDOUIsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVsQixtREFBbUQ7UUFFbkQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENB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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert, b2_epsilon_sq } from \"../../Common/b2Settings\";\r\nimport { b2_epsilon, b2_maxFloat, b2_linearSlop, b2_polygonRadius } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2MassData } from \"./b2Shape\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A convex polygon. It is assumed that the interior of the polygon is to\r\n/// the left of each edge.\r\n/// In most cases you should not need many vertices for a convex polygon.\r\nexport class b2PolygonShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_polygonShape, b2_polygonRadius);\r\n        this.m_centroid = new b2Vec2(0, 0);\r\n        this.m_vertices = [];\r\n        this.m_normals = [];\r\n        this.m_count = 0;\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2PolygonShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        // DEBUG: b2Assert(other instanceof b2PolygonShape);\r\n        this.m_centroid.Copy(other.m_centroid);\r\n        this.m_count = other.m_count;\r\n        this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n        this.m_normals = b2Vec2.MakeArray(this.m_count);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_vertices[i].Copy(other.m_vertices[i]);\r\n            this.m_normals[i].Copy(other.m_normals[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    Set(vertices, count = vertices.length, start = 0) {\r\n        // DEBUG: b2Assert(3 <= count);\r\n        if (count < 3) {\r\n            return this.SetAsBox(1, 1);\r\n        }\r\n        let n = count;\r\n        // Perform welding and copy vertices into local buffer.\r\n        const ps = [];\r\n        for (let i = 0; i < n; ++i) {\r\n            const /*b2Vec2*/ v = vertices[start + i];\r\n            let /*bool*/ unique = true;\r\n            for (let /*int32*/ j = 0; j < ps.length; ++j) {\r\n                if (b2Vec2.DistanceSquaredVV(v, ps[j]) < ((0.5 * b2_linearSlop) * (0.5 * b2_linearSlop))) {\r\n                    unique = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (unique) {\r\n                ps.push(v);\r\n            }\r\n        }\r\n        n = ps.length;\r\n        if (n < 3) {\r\n            // Polygon is degenerate.\r\n            // DEBUG: b2Assert(false);\r\n            return this.SetAsBox(1.0, 1.0);\r\n        }\r\n        // Create the convex hull using the Gift wrapping algorithm\r\n        // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\r\n        // Find the right most point on the hull\r\n        let i0 = 0;\r\n        let x0 = ps[0].x;\r\n        for (let i = 1; i < n; ++i) {\r\n            const x = ps[i].x;\r\n            if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\r\n                i0 = i;\r\n                x0 = x;\r\n            }\r\n        }\r\n        const hull = [];\r\n        let m = 0;\r\n        let ih = i0;\r\n        for (;;) {\r\n            hull[m] = ih;\r\n            let ie = 0;\r\n            for (let j = 1; j < n; ++j) {\r\n                if (ie === ih) {\r\n                    ie = j;\r\n                    continue;\r\n                }\r\n                const r = b2Vec2.SubVV(ps[ie], ps[hull[m]], b2PolygonShape.Set_s_r);\r\n                const v = b2Vec2.SubVV(ps[j], ps[hull[m]], b2PolygonShape.Set_s_v);\r\n                const c = b2Vec2.CrossVV(r, v);\r\n                if (c < 0) {\r\n                    ie = j;\r\n                }\r\n                // Collinearity check\r\n                if (c === 0 && v.LengthSquared() > r.LengthSquared()) {\r\n                    ie = j;\r\n                }\r\n            }\r\n            ++m;\r\n            ih = ie;\r\n            if (ie === i0) {\r\n                break;\r\n            }\r\n        }\r\n        this.m_count = m;\r\n        this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n        this.m_normals = b2Vec2.MakeArray(this.m_count);\r\n        // Copy vertices.\r\n        for (let i = 0; i < m; ++i) {\r\n            this.m_vertices[i].Copy(ps[hull[i]]);\r\n        }\r\n        // Compute normals. Ensure the edges have non-zero length.\r\n        for (let i = 0; i < m; ++i) {\r\n            const vertexi1 = this.m_vertices[i];\r\n            const vertexi2 = this.m_vertices[(i + 1) % m];\r\n            const edge = b2Vec2.SubVV(vertexi2, vertexi1, b2Vec2.s_t0); // edge uses s_t0\r\n            // DEBUG: b2Assert(edge.LengthSquared() > b2_epsilon_sq);\r\n            b2Vec2.CrossVOne(edge, this.m_normals[i]).SelfNormalize();\r\n        }\r\n        // Compute the polygon centroid.\r\n        b2PolygonShape.ComputeCentroid(this.m_vertices, m, this.m_centroid);\r\n        return this;\r\n    }\r\n    SetAsArray(vertices, count = vertices.length) {\r\n        return this.Set(vertices, count);\r\n    }\r\n    /// Build vertices to represent an axis-aligned box or an oriented box.\r\n    /// @param hx the half-width.\r\n    /// @param hy the half-height.\r\n    /// @param center the center of the box in local coordinates.\r\n    /// @param angle the rotation of the box in local coordinates.\r\n    SetAsBox(hx, hy, center, angle = 0) {\r\n        this.m_count = 4;\r\n        this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n        this.m_normals = b2Vec2.MakeArray(this.m_count);\r\n        this.m_vertices[0].Set((-hx), (-hy));\r\n        this.m_vertices[1].Set(hx, (-hy));\r\n        this.m_vertices[2].Set(hx, hy);\r\n        this.m_vertices[3].Set((-hx), hy);\r\n        this.m_normals[0].Set(0, (-1));\r\n        this.m_normals[1].Set(1, 0);\r\n        this.m_normals[2].Set(0, 1);\r\n        this.m_normals[3].Set((-1), 0);\r\n        this.m_centroid.SetZero();\r\n        if (center) {\r\n            this.m_centroid.Copy(center);\r\n            const xf = new b2Transform();\r\n            xf.SetPosition(center);\r\n            xf.SetRotationAngle(angle);\r\n            // Transform vertices and normals.\r\n            for (let i = 0; i < this.m_count; ++i) {\r\n                b2Transform.MulXV(xf, this.m_vertices[i], this.m_vertices[i]);\r\n                b2Rot.MulRV(xf.q, this.m_normals[i], this.m_normals[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    TestPoint(xf, p) {\r\n        const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.TestPoint_s_pLocal);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\r\n            if (dot > 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.ComputeDistance_s_pLocal);\r\n        let maxDistance = -b2_maxFloat;\r\n        const normalForMaxDistance = b2PolygonShape.ComputeDistance_s_normalForMaxDistance.Copy(pLocal);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\r\n            if (dot > maxDistance) {\r\n                maxDistance = dot;\r\n                normalForMaxDistance.Copy(this.m_normals[i]);\r\n            }\r\n        }\r\n        if (maxDistance > 0) {\r\n            const minDistance = b2PolygonShape.ComputeDistance_s_minDistance.Copy(normalForMaxDistance);\r\n            let minDistance2 = maxDistance * maxDistance;\r\n            for (let i = 0; i < this.m_count; ++i) {\r\n                const distance = b2Vec2.SubVV(pLocal, this.m_vertices[i], b2PolygonShape.ComputeDistance_s_distance);\r\n                const distance2 = distance.LengthSquared();\r\n                if (minDistance2 > distance2) {\r\n                    minDistance.Copy(distance);\r\n                    minDistance2 = distance2;\r\n                }\r\n            }\r\n            b2Rot.MulRV(xf.q, minDistance, normal);\r\n            normal.Normalize();\r\n            return Math.sqrt(minDistance2);\r\n        }\r\n        else {\r\n            b2Rot.MulRV(xf.q, normalForMaxDistance, normal);\r\n            return maxDistance;\r\n        }\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        // Put the ray into the polygon's frame of reference.\r\n        const p1 = b2Transform.MulTXV(xf, input.p1, b2PolygonShape.RayCast_s_p1);\r\n        const p2 = b2Transform.MulTXV(xf, input.p2, b2PolygonShape.RayCast_s_p2);\r\n        const d = b2Vec2.SubVV(p2, p1, b2PolygonShape.RayCast_s_d);\r\n        let lower = 0, upper = input.maxFraction;\r\n        let index = -1;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            // p = p1 + a * d\r\n            // dot(normal, p - v) = 0\r\n            // dot(normal, p1 - v) + a * dot(normal, d) = 0\r\n            const numerator = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(this.m_vertices[i], p1, b2Vec2.s_t0));\r\n            const denominator = b2Vec2.DotVV(this.m_normals[i], d);\r\n            if (denominator === 0) {\r\n                if (numerator < 0) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                // Note: we want this predicate without division:\r\n                // lower < numerator / denominator, where denominator < 0\r\n                // Since denominator < 0, we have to flip the inequality:\r\n                // lower < numerator / denominator <==> denominator * lower > numerator.\r\n                if (denominator < 0 && numerator < lower * denominator) {\r\n                    // Increase lower.\r\n                    // The segment enters this half-space.\r\n                    lower = numerator / denominator;\r\n                    index = i;\r\n                }\r\n                else if (denominator > 0 && numerator < upper * denominator) {\r\n                    // Decrease upper.\r\n                    // The segment exits this half-space.\r\n                    upper = numerator / denominator;\r\n                }\r\n            }\r\n            // The use of epsilon here causes the assert on lower to trip\r\n            // in some cases. Apparently the use of epsilon was to make edge\r\n            // shapes work, but now those are handled separately.\r\n            // if (upper < lower - b2_epsilon)\r\n            if (upper < lower) {\r\n                return false;\r\n            }\r\n        }\r\n        // DEBUG: b2Assert(0 <= lower && lower <= input.maxFraction);\r\n        if (index >= 0) {\r\n            output.fraction = lower;\r\n            b2Rot.MulRV(xf.q, this.m_normals[index], output.normal);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        const lower = b2Transform.MulXV(xf, this.m_vertices[0], aabb.lowerBound);\r\n        const upper = aabb.upperBound.Copy(lower);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const v = b2Transform.MulXV(xf, this.m_vertices[i], b2PolygonShape.ComputeAABB_s_v);\r\n            b2Vec2.MinV(v, lower, lower);\r\n            b2Vec2.MaxV(v, upper, upper);\r\n        }\r\n        const r = this.m_radius;\r\n        lower.SelfSubXY(r, r);\r\n        upper.SelfAddXY(r, r);\r\n    }\r\n    ComputeMass(massData, density) {\r\n        // Polygon mass, centroid, and inertia.\r\n        // Let rho be the polygon density in mass per unit area.\r\n        // Then:\r\n        // mass = rho * int(dA)\r\n        // centroid.x = (1/mass) * rho * int(x * dA)\r\n        // centroid.y = (1/mass) * rho * int(y * dA)\r\n        // I = rho * int((x*x + y*y) * dA)\r\n        //\r\n        // We can compute these integrals by summing all the integrals\r\n        // for each triangle of the polygon. To evaluate the integral\r\n        // for a single triangle, we make a change of variables to\r\n        // the (u,v) coordinates of the triangle:\r\n        // x = x0 + e1x * u + e2x * v\r\n        // y = y0 + e1y * u + e2y * v\r\n        // where 0 <= u && 0 <= v && u + v <= 1.\r\n        //\r\n        // We integrate u from [0,1-v] and then v from [0,1].\r\n        // We also need to use the Jacobian of the transformation:\r\n        // D = cross(e1, e2)\r\n        //\r\n        // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\r\n        //\r\n        // The rest of the derivation is handled by computer algebra.\r\n        // DEBUG: b2Assert(this.m_count >= 3);\r\n        const center = b2PolygonShape.ComputeMass_s_center.SetZero();\r\n        let area = 0;\r\n        let I = 0;\r\n        // s is the reference point for forming triangles.\r\n        // It's location doesn't change the result (except for rounding error).\r\n        const s = b2PolygonShape.ComputeMass_s_s.SetZero();\r\n        // This code would put the reference point inside the polygon.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            s.SelfAdd(this.m_vertices[i]);\r\n        }\r\n        s.SelfMul(1 / this.m_count);\r\n        const k_inv3 = 1 / 3;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            // Triangle vertices.\r\n            const e1 = b2Vec2.SubVV(this.m_vertices[i], s, b2PolygonShape.ComputeMass_s_e1);\r\n            const e2 = b2Vec2.SubVV(this.m_vertices[(i + 1) % this.m_count], s, b2PolygonShape.ComputeMass_s_e2);\r\n            const D = b2Vec2.CrossVV(e1, e2);\r\n            const triangleArea = 0.5 * D;\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            center.SelfAdd(b2Vec2.MulSV(triangleArea * k_inv3, b2Vec2.AddVV(e1, e2, b2Vec2.s_t0), b2Vec2.s_t1));\r\n            const ex1 = e1.x;\r\n            const ey1 = e1.y;\r\n            const ex2 = e2.x;\r\n            const ey2 = e2.y;\r\n            const intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\r\n            const inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\r\n            I += (0.25 * k_inv3 * D) * (intx2 + inty2);\r\n        }\r\n        // Total mass\r\n        massData.mass = density * area;\r\n        // Center of mass\r\n        // DEBUG: b2Assert(area > b2_epsilon);\r\n        center.SelfMul(1 / area);\r\n        b2Vec2.AddVV(center, s, massData.center);\r\n        // Inertia tensor relative to the local origin (point s).\r\n        massData.I = density * I;\r\n        // Shift to center of mass then to original body origin.\r\n        massData.I += massData.mass * (b2Vec2.DotVV(massData.center, massData.center) - b2Vec2.DotVV(center, center));\r\n    }\r\n    Validate() {\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const i1 = i;\r\n            const i2 = (i + 1) % this.m_count;\r\n            const p = this.m_vertices[i1];\r\n            const e = b2Vec2.SubVV(this.m_vertices[i2], p, b2PolygonShape.Validate_s_e);\r\n            for (let j = 0; j < this.m_count; ++j) {\r\n                if (j === i1 || j === i2) {\r\n                    continue;\r\n                }\r\n                const v = b2Vec2.SubVV(this.m_vertices[j], p, b2PolygonShape.Validate_s_v);\r\n                const c = b2Vec2.CrossVV(e, v);\r\n                if (c < 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = this.m_vertices;\r\n        proxy.m_count = this.m_count;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        // Transform plane into shape co-ordinates\r\n        const normalL = b2Rot.MulTRV(xf.q, normal, b2PolygonShape.ComputeSubmergedArea_s_normalL);\r\n        const offsetL = offset - b2Vec2.DotVV(normal, xf.p);\r\n        const depths = [];\r\n        let diveCount = 0;\r\n        let intoIndex = -1;\r\n        let outoIndex = -1;\r\n        let lastSubmerged = false;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            depths[i] = b2Vec2.DotVV(normalL, this.m_vertices[i]) - offsetL;\r\n            const isSubmerged = depths[i] < (-b2_epsilon);\r\n            if (i > 0) {\r\n                if (isSubmerged) {\r\n                    if (!lastSubmerged) {\r\n                        intoIndex = i - 1;\r\n                        diveCount++;\r\n                    }\r\n                }\r\n                else {\r\n                    if (lastSubmerged) {\r\n                        outoIndex = i - 1;\r\n                        diveCount++;\r\n                    }\r\n                }\r\n            }\r\n            lastSubmerged = isSubmerged;\r\n        }\r\n        switch (diveCount) {\r\n            case 0:\r\n                if (lastSubmerged) {\r\n                    // Completely submerged\r\n                    const md = b2PolygonShape.ComputeSubmergedArea_s_md;\r\n                    this.ComputeMass(md, 1);\r\n                    b2Transform.MulXV(xf, md.center, c);\r\n                    return md.mass;\r\n                }\r\n                else {\r\n                    // Completely dry\r\n                    return 0;\r\n                }\r\n            case 1:\r\n                if (intoIndex === (-1)) {\r\n                    intoIndex = this.m_count - 1;\r\n                }\r\n                else {\r\n                    outoIndex = this.m_count - 1;\r\n                }\r\n                break;\r\n        }\r\n        const intoIndex2 = ((intoIndex + 1) % this.m_count);\r\n        const outoIndex2 = ((outoIndex + 1) % this.m_count);\r\n        const intoLamdda = (0 - depths[intoIndex]) / (depths[intoIndex2] - depths[intoIndex]);\r\n        const outoLamdda = (0 - depths[outoIndex]) / (depths[outoIndex2] - depths[outoIndex]);\r\n        const intoVec = b2PolygonShape.ComputeSubmergedArea_s_intoVec.Set(this.m_vertices[intoIndex].x * (1 - intoLamdda) + this.m_vertices[intoIndex2].x * intoLamdda, this.m_vertices[intoIndex].y * (1 - intoLamdda) + this.m_vertices[intoIndex2].y * intoLamdda);\r\n        const outoVec = b2PolygonShape.ComputeSubmergedArea_s_outoVec.Set(this.m_vertices[outoIndex].x * (1 - outoLamdda) + this.m_vertices[outoIndex2].x * outoLamdda, this.m_vertices[outoIndex].y * (1 - outoLamdda) + this.m_vertices[outoIndex2].y * outoLamdda);\r\n        // Initialize accumulator\r\n        let area = 0;\r\n        const center = b2PolygonShape.ComputeSubmergedArea_s_center.SetZero();\r\n        let p2 = this.m_vertices[intoIndex2];\r\n        let p3;\r\n        // An awkward loop from intoIndex2+1 to outIndex2\r\n        let i = intoIndex2;\r\n        while (i !== outoIndex2) {\r\n            i = (i + 1) % this.m_count;\r\n            if (i === outoIndex2) {\r\n                p3 = outoVec;\r\n            }\r\n            else {\r\n                p3 = this.m_vertices[i];\r\n            }\r\n            const triangleArea = 0.5 * ((p2.x - intoVec.x) * (p3.y - intoVec.y) - (p2.y - intoVec.y) * (p3.x - intoVec.x));\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            center.x += triangleArea * (intoVec.x + p2.x + p3.x) / 3;\r\n            center.y += triangleArea * (intoVec.y + p2.y + p3.y) / 3;\r\n            p2 = p3;\r\n        }\r\n        // Normalize and transform centroid\r\n        center.SelfMul(1 / area);\r\n        b2Transform.MulXV(xf, center, c);\r\n        return area;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2PolygonShape = new b2PolygonShape();\\n\");\r\n        log(\"    const vs: b2Vec2[] = [];\\n\");\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            log(\"    vs[%d] = new b2Vec2(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\r\n        }\r\n        log(\"    shape.Set(vs, %d);\\n\", this.m_count);\r\n    }\r\n    static ComputeCentroid(vs, count, out) {\r\n        // DEBUG: b2Assert(count >= 3);\r\n        const c = out;\r\n        c.SetZero();\r\n        let area = 0;\r\n        // s is the reference point for forming triangles.\r\n        // It's location doesn't change the result (except for rounding error).\r\n        const pRef = b2PolygonShape.ComputeCentroid_s_pRef.SetZero();\r\n        /*\r\n    #if 0\r\n        // This code would put the reference point inside the polygon.\r\n        for (let i: number = 0; i < count; ++i) {\r\n          pRef.SelfAdd(vs[i]);\r\n        }\r\n        pRef.SelfMul(1 / count);\r\n    #endif\r\n        */\r\n        const inv3 = 1 / 3;\r\n        for (let i = 0; i < count; ++i) {\r\n            // Triangle vertices.\r\n            const p1 = pRef;\r\n            const p2 = vs[i];\r\n            const p3 = vs[(i + 1) % count];\r\n            const e1 = b2Vec2.SubVV(p2, p1, b2PolygonShape.ComputeCentroid_s_e1);\r\n            const e2 = b2Vec2.SubVV(p3, p1, b2PolygonShape.ComputeCentroid_s_e2);\r\n            const D = b2Vec2.CrossVV(e1, e2);\r\n            const triangleArea = 0.5 * D;\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            c.x += triangleArea * inv3 * (p1.x + p2.x + p3.x);\r\n            c.y += triangleArea * inv3 * (p1.y + p2.y + p3.y);\r\n        }\r\n        // Centroid\r\n        // DEBUG: b2Assert(area > b2_epsilon);\r\n        c.SelfMul(1 / area);\r\n        return c;\r\n    }\r\n}\r\n/// Create a convex hull from the given array of points.\r\n/// @warning the points may be re-ordered, even if they form a convex polygon\r\n/// @warning collinear points are handled but not removed. Collinear points\r\n/// may lead to poor stacking behavior.\r\nb2PolygonShape.Set_s_r = new b2Vec2();\r\nb2PolygonShape.Set_s_v = new b2Vec2();\r\n/// @see b2Shape::TestPoint\r\nb2PolygonShape.TestPoint_s_pLocal = new b2Vec2();\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2PolygonShape.ComputeDistance_s_pLocal = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_normalForMaxDistance = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_minDistance = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_distance = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\nb2PolygonShape.RayCast_s_p1 = new b2Vec2();\r\nb2PolygonShape.RayCast_s_p2 = new b2Vec2();\r\nb2PolygonShape.RayCast_s_d = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2PolygonShape.ComputeAABB_s_v = new b2Vec2();\r\n/// @see b2Shape::ComputeMass\r\nb2PolygonShape.ComputeMass_s_center = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_s = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_e1 = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_e2 = new b2Vec2();\r\nb2PolygonShape.Validate_s_e = new b2Vec2();\r\nb2PolygonShape.Validate_s_v = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_normalL = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_md = new b2MassData();\r\nb2PolygonShape.ComputeSubmergedArea_s_intoVec = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_outoVec = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_center = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_pRef = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_e1 = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_e2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2_polygonRadius } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A line segment (edge) shape. These can be connected in chains or loops\r\n/// to other edge shapes. The connectivity information is used to ensure\r\n/// correct contact normals.\r\nexport class b2EdgeShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_edgeShape, b2_polygonRadius);\r\n        this.m_vertex1 = new b2Vec2();\r\n        this.m_vertex2 = new b2Vec2();\r\n        this.m_vertex0 = new b2Vec2();\r\n        this.m_vertex3 = new b2Vec2();\r\n        this.m_hasVertex0 = false;\r\n        this.m_hasVertex3 = false;\r\n    }\r\n    /// Set this as an isolated edge.\r\n    Set(v1, v2) {\r\n        this.m_vertex1.Copy(v1);\r\n        this.m_vertex2.Copy(v2);\r\n        this.m_hasVertex0 = false;\r\n        this.m_hasVertex3 = false;\r\n        return this;\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2EdgeShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        // DEBUG: b2Assert(other instanceof b2EdgeShape);\r\n        this.m_vertex1.Copy(other.m_vertex1);\r\n        this.m_vertex2.Copy(other.m_vertex2);\r\n        this.m_vertex0.Copy(other.m_vertex0);\r\n        this.m_vertex3.Copy(other.m_vertex3);\r\n        this.m_hasVertex0 = other.m_hasVertex0;\r\n        this.m_hasVertex3 = other.m_hasVertex3;\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    /// @see b2Shape::TestPoint\r\n    TestPoint(xf, p) {\r\n        return false;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeDistance_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeDistance_s_v2);\r\n        const d = b2Vec2.SubVV(p, v1, b2EdgeShape.ComputeDistance_s_d);\r\n        const s = b2Vec2.SubVV(v2, v1, b2EdgeShape.ComputeDistance_s_s);\r\n        const ds = b2Vec2.DotVV(d, s);\r\n        if (ds > 0) {\r\n            const s2 = b2Vec2.DotVV(s, s);\r\n            if (ds > s2) {\r\n                b2Vec2.SubVV(p, v2, d);\r\n            }\r\n            else {\r\n                d.SelfMulSub(ds / s2, s);\r\n            }\r\n        }\r\n        normal.Copy(d);\r\n        return normal.Normalize();\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        // Put the ray into the edge's frame of reference.\r\n        const p1 = b2Transform.MulTXV(xf, input.p1, b2EdgeShape.RayCast_s_p1);\r\n        const p2 = b2Transform.MulTXV(xf, input.p2, b2EdgeShape.RayCast_s_p2);\r\n        const d = b2Vec2.SubVV(p2, p1, b2EdgeShape.RayCast_s_d);\r\n        const v1 = this.m_vertex1;\r\n        const v2 = this.m_vertex2;\r\n        const e = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_e);\r\n        const normal = output.normal.Set(e.y, -e.x).SelfNormalize();\r\n        // q = p1 + t * d\r\n        // dot(normal, q - v1) = 0\r\n        // dot(normal, p1 - v1) + t * dot(normal, d) = 0\r\n        const numerator = b2Vec2.DotVV(normal, b2Vec2.SubVV(v1, p1, b2Vec2.s_t0));\r\n        const denominator = b2Vec2.DotVV(normal, d);\r\n        if (denominator === 0) {\r\n            return false;\r\n        }\r\n        const t = numerator / denominator;\r\n        if (t < 0 || input.maxFraction < t) {\r\n            return false;\r\n        }\r\n        const q = b2Vec2.AddVMulSV(p1, t, d, b2EdgeShape.RayCast_s_q);\r\n        // q = v1 + s * r\r\n        // s = dot(q - v1, r) / dot(r, r)\r\n        const r = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_r);\r\n        const rr = b2Vec2.DotVV(r, r);\r\n        if (rr === 0) {\r\n            return false;\r\n        }\r\n        const s = b2Vec2.DotVV(b2Vec2.SubVV(q, v1, b2Vec2.s_t0), r) / rr;\r\n        if (s < 0 || 1 < s) {\r\n            return false;\r\n        }\r\n        output.fraction = t;\r\n        b2Rot.MulRV(xf.q, output.normal, output.normal);\r\n        if (numerator > 0) {\r\n            output.normal.SelfNeg();\r\n        }\r\n        return true;\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeAABB_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeAABB_s_v2);\r\n        b2Vec2.MinV(v1, v2, aabb.lowerBound);\r\n        b2Vec2.MaxV(v1, v2, aabb.upperBound);\r\n        const r = this.m_radius;\r\n        aabb.lowerBound.SelfSubXY(r, r);\r\n        aabb.upperBound.SelfAddXY(r, r);\r\n    }\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        massData.mass = 0;\r\n        b2Vec2.MidVV(this.m_vertex1, this.m_vertex2, massData.center);\r\n        massData.I = 0;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_vertex1);\r\n        proxy.m_vertices[1].Copy(this.m_vertex2);\r\n        proxy.m_count = 2;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        c.SetZero();\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2EdgeShape = new b2EdgeShape();\\n\");\r\n        log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\r\n        log(\"    shape.m_vertex0.Set(%.15f, %.15f);\\n\", this.m_vertex0.x, this.m_vertex0.y);\r\n        log(\"    shape.m_vertex1.Set(%.15f, %.15f);\\n\", this.m_vertex1.x, this.m_vertex1.y);\r\n        log(\"    shape.m_vertex2.Set(%.15f, %.15f);\\n\", this.m_vertex2.x, this.m_vertex2.y);\r\n        log(\"    shape.m_vertex3.Set(%.15f, %.15f);\\n\", this.m_vertex3.x, this.m_vertex3.y);\r\n        log(\"    shape.m_hasVertex0 = %s;\\n\", this.m_hasVertex0);\r\n        log(\"    shape.m_hasVertex3 = %s;\\n\", this.m_hasVertex3);\r\n    }\r\n}\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2EdgeShape.ComputeDistance_s_v1 = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_v2 = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_d = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_s = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\n// p = p1 + t * d\r\n// v = v1 + s * e\r\n// p1 + t * d = v1 + s * e\r\n// s * e - t * d = p1 - v1\r\nb2EdgeShape.RayCast_s_p1 = new b2Vec2();\r\nb2EdgeShape.RayCast_s_p2 = new b2Vec2();\r\nb2EdgeShape.RayCast_s_d = new b2Vec2();\r\nb2EdgeShape.RayCast_s_e = new b2Vec2();\r\nb2EdgeShape.RayCast_s_q = new b2Vec2();\r\nb2EdgeShape.RayCast_s_r = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2EdgeShape.ComputeAABB_s_v1 = new b2Vec2();\r\nb2EdgeShape.ComputeAABB_s_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert, b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2_polygonRadius } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\nimport { b2EdgeShape } from \"./b2EdgeShape\";\r\n/// A chain shape is a free form sequence of line segments.\r\n/// The chain has two-sided collision, so you can use inside and outside collision.\r\n/// Therefore, you may use any winding order.\r\n/// Since there may be many vertices, they are allocated using b2Alloc.\r\n/// Connectivity information is used to create smooth collisions.\r\n/// WARNING: The chain will not collide properly if there are self-intersections.\r\nexport class b2ChainShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_chainShape, b2_polygonRadius);\r\n        this.m_vertices = [];\r\n        this.m_count = 0;\r\n        this.m_prevVertex = new b2Vec2();\r\n        this.m_nextVertex = new b2Vec2();\r\n        this.m_hasPrevVertex = false;\r\n        this.m_hasNextVertex = false;\r\n    }\r\n    /// Create a loop. This automatically adjusts connectivity.\r\n    /// @param vertices an array of vertices, these are copied\r\n    /// @param count the vertex count\r\n    CreateLoop(vertices, count = vertices.length, start = 0) {\r\n        // DEBUG: b2Assert(count >= 3);\r\n        if (count < 3) {\r\n            return this;\r\n        }\r\n        // DEBUG: for (let i: number = 1; i < count; ++i) {\r\n        // DEBUG:   const v1 = vertices[start + i - 1];\r\n        // DEBUG:   const v2 = vertices[start + i];\r\n        // DEBUG:   // If the code crashes here, it means your vertices are too close together.\r\n        // DEBUG:   b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\r\n        // DEBUG: }\r\n        this.m_count = count + 1;\r\n        this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n        for (let i = 0; i < count; ++i) {\r\n            this.m_vertices[i].Copy(vertices[start + i]);\r\n        }\r\n        this.m_vertices[count].Copy(this.m_vertices[0]);\r\n        this.m_prevVertex.Copy(this.m_vertices[this.m_count - 2]);\r\n        this.m_nextVertex.Copy(this.m_vertices[1]);\r\n        this.m_hasPrevVertex = true;\r\n        this.m_hasNextVertex = true;\r\n        return this;\r\n    }\r\n    /// Create a chain with isolated end vertices.\r\n    /// @param vertices an array of vertices, these are copied\r\n    /// @param count the vertex count\r\n    CreateChain(vertices, count = vertices.length, start = 0) {\r\n        // DEBUG: b2Assert(count >= 2);\r\n        // DEBUG: for (let i: number = 1; i < count; ++i) {\r\n        // DEBUG:   const v1 = vertices[start + i - 1];\r\n        // DEBUG:   const v2 = vertices[start + i];\r\n        // DEBUG:   // If the code crashes here, it means your vertices are too close together.\r\n        // DEBUG:   b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\r\n        // DEBUG: }\r\n        this.m_count = count;\r\n        this.m_vertices = b2Vec2.MakeArray(count);\r\n        for (let i = 0; i < count; ++i) {\r\n            this.m_vertices[i].Copy(vertices[start + i]);\r\n        }\r\n        this.m_hasPrevVertex = false;\r\n        this.m_hasNextVertex = false;\r\n        this.m_prevVertex.SetZero();\r\n        this.m_nextVertex.SetZero();\r\n        return this;\r\n    }\r\n    /// Establish connectivity to a vertex that precedes the first vertex.\r\n    /// Don't call this for loops.\r\n    SetPrevVertex(prevVertex) {\r\n        this.m_prevVertex.Copy(prevVertex);\r\n        this.m_hasPrevVertex = true;\r\n        return this;\r\n    }\r\n    /// Establish connectivity to a vertex that follows the last vertex.\r\n    /// Don't call this for loops.\r\n    SetNextVertex(nextVertex) {\r\n        this.m_nextVertex.Copy(nextVertex);\r\n        this.m_hasNextVertex = true;\r\n        return this;\r\n    }\r\n    /// Implement b2Shape. Vertices are cloned using b2Alloc.\r\n    Clone() {\r\n        return new b2ChainShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        // DEBUG: b2Assert(other instanceof b2ChainShape);\r\n        this.CreateChain(other.m_vertices, other.m_count);\r\n        this.m_prevVertex.Copy(other.m_prevVertex);\r\n        this.m_nextVertex.Copy(other.m_nextVertex);\r\n        this.m_hasPrevVertex = other.m_hasPrevVertex;\r\n        this.m_hasNextVertex = other.m_hasNextVertex;\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        // edge count = vertex count - 1\r\n        return this.m_count - 1;\r\n    }\r\n    /// Get a child edge.\r\n    GetChildEdge(edge, index) {\r\n        // DEBUG: b2Assert(0 <= index && index < this.m_count - 1);\r\n        edge.m_type = b2ShapeType.e_edgeShape;\r\n        edge.m_radius = this.m_radius;\r\n        edge.m_vertex1.Copy(this.m_vertices[index]);\r\n        edge.m_vertex2.Copy(this.m_vertices[index + 1]);\r\n        if (index > 0) {\r\n            edge.m_vertex0.Copy(this.m_vertices[index - 1]);\r\n            edge.m_hasVertex0 = true;\r\n        }\r\n        else {\r\n            edge.m_vertex0.Copy(this.m_prevVertex);\r\n            edge.m_hasVertex0 = this.m_hasPrevVertex;\r\n        }\r\n        if (index < this.m_count - 2) {\r\n            edge.m_vertex3.Copy(this.m_vertices[index + 2]);\r\n            edge.m_hasVertex3 = true;\r\n        }\r\n        else {\r\n            edge.m_vertex3.Copy(this.m_nextVertex);\r\n            edge.m_hasVertex3 = this.m_hasNextVertex;\r\n        }\r\n    }\r\n    /// This always return false.\r\n    /// @see b2Shape::TestPoint\r\n    TestPoint(xf, p) {\r\n        return false;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const edge = b2ChainShape.ComputeDistance_s_edgeShape;\r\n        this.GetChildEdge(edge, childIndex);\r\n        return edge.ComputeDistance(xf, p, normal, 0);\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        // DEBUG: b2Assert(childIndex < this.m_count);\r\n        const edgeShape = b2ChainShape.RayCast_s_edgeShape;\r\n        edgeShape.m_vertex1.Copy(this.m_vertices[childIndex]);\r\n        edgeShape.m_vertex2.Copy(this.m_vertices[(childIndex + 1) % this.m_count]);\r\n        return edgeShape.RayCast(output, input, xf, 0);\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        // DEBUG: b2Assert(childIndex < this.m_count);\r\n        const vertexi1 = this.m_vertices[childIndex];\r\n        const vertexi2 = this.m_vertices[(childIndex + 1) % this.m_count];\r\n        const v1 = b2Transform.MulXV(xf, vertexi1, b2ChainShape.ComputeAABB_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, vertexi2, b2ChainShape.ComputeAABB_s_v2);\r\n        b2Vec2.MinV(v1, v2, aabb.lowerBound);\r\n        b2Vec2.MaxV(v1, v2, aabb.upperBound);\r\n    }\r\n    /// Chains have zero mass.\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        massData.mass = 0;\r\n        massData.center.SetZero();\r\n        massData.I = 0;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        // DEBUG: b2Assert(0 <= index && index < this.m_count);\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_vertices[index]);\r\n        if (index + 1 < this.m_count) {\r\n            proxy.m_vertices[1].Copy(this.m_vertices[index + 1]);\r\n        }\r\n        else {\r\n            proxy.m_vertices[1].Copy(this.m_vertices[0]);\r\n        }\r\n        proxy.m_count = 2;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        c.SetZero();\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2ChainShape = new b2ChainShape();\\n\");\r\n        log(\"    const vs: b2Vec2[] = [];\\n\");\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            log(\"    vs[%d] = new bVec2(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\r\n        }\r\n        log(\"    shape.CreateChain(vs, %d);\\n\", this.m_count);\r\n        log(\"    shape.m_prevVertex.Set(%.15f, %.15f);\\n\", this.m_prevVertex.x, this.m_prevVertex.y);\r\n        log(\"    shape.m_nextVertex.Set(%.15f, %.15f);\\n\", this.m_nextVertex.x, this.m_nextVertex.y);\r\n        log(\"    shape.m_hasPrevVertex = %s;\\n\", (this.m_hasPrevVertex) ? (\"true\") : (\"false\"));\r\n        log(\"    shape.m_hasNextVertex = %s;\\n\", (this.m_hasNextVertex) ? (\"true\") : (\"false\"));\r\n    }\r\n}\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2ChainShape.ComputeDistance_s_edgeShape = new b2EdgeShape();\r\n// #endif\r\n/// Implement b2Shape.\r\nb2ChainShape.RayCast_s_edgeShape = new b2EdgeShape();\r\n/// @see b2Shape::ComputeAABB\r\nb2ChainShape.ComputeAABB_s_v1 = new b2Vec2();\r\nb2ChainShape.ComputeAABB_s_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2MakeArray, b2Maybe } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2AABB } from \"../Collision/b2Collision\";\r\nimport { b2MassData } from \"../Collision/Shapes/b2Shape\";\r\n/// This holds contact filtering data.\r\nexport class b2Filter {\r\n    constructor() {\r\n        /// The collision category bits. Normally you would just set one bit.\r\n        this.categoryBits = 0x0001;\r\n        /// The collision mask bits. This states the categories that this\r\n        /// shape would accept for collision.\r\n        this.maskBits = 0xFFFF;\r\n        /// Collision groups allow a certain group of objects to never collide (negative)\r\n        /// or always collide (positive). Zero means no collision group. Non-zero group\r\n        /// filtering always wins against the mask bits.\r\n        this.groupIndex = 0;\r\n    }\r\n    Clone() {\r\n        return new b2Filter().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        // DEBUG: b2Assert(this !== other);\r\n        this.categoryBits = other.categoryBits;\r\n        this.maskBits = other.maskBits;\r\n        this.groupIndex = other.groupIndex || 0;\r\n        return this;\r\n    }\r\n}\r\nb2Filter.DEFAULT = new b2Filter();\r\n/// A fixture definition is used to create a fixture. This class defines an\r\n/// abstract fixture definition. You can reuse fixture definitions safely.\r\nexport class b2FixtureDef {\r\n    constructor() {\r\n        /// Use this to store application specific fixture data.\r\n        this.userData = null;\r\n        /// The friction coefficient, usually in the range [0,1].\r\n        this.friction = 0.2;\r\n        /// The restitution (elasticity) usually in the range [0,1].\r\n        this.restitution = 0;\r\n        /// The density, usually in kg/m^2.\r\n        this.density = 0;\r\n        /// A sensor shape collects contact information but never generates a collision\r\n        /// response.\r\n        this.isSensor = false;\r\n        /// Contact filtering data.\r\n        this.filter = new b2Filter();\r\n    }\r\n}\r\n/// This proxy is used internally to connect fixtures to the broad-phase.\r\nexport class b2FixtureProxy {\r\n    constructor(fixture) {\r\n        this.aabb = new b2AABB();\r\n        this.childIndex = 0;\r\n        this.fixture = fixture;\r\n    }\r\n}\r\n/// A fixture is used to attach a shape to a body for collision detection. A fixture\r\n/// inherits its transform from its parent. Fixtures hold additional non-geometric data\r\n/// such as friction, collision filters, etc.\r\n/// Fixtures are created via b2Body::CreateFixture.\r\n/// @warning you cannot reuse fixtures.\r\nexport class b2Fixture {\r\n    constructor(def, body) {\r\n        this.m_density = 0;\r\n        this.m_next = null;\r\n        this.m_friction = 0;\r\n        this.m_restitution = 0;\r\n        this.m_proxies = [];\r\n        this.m_proxyCount = 0;\r\n        this.m_filter = new b2Filter();\r\n        this.m_isSensor = false;\r\n        this.m_userData = null;\r\n        this.m_body = body;\r\n        this.m_shape = def.shape.Clone();\r\n    }\r\n    /// Get the type of the child shape. You can use this to down cast to the concrete shape.\r\n    /// @return the shape type.\r\n    GetType() {\r\n        return this.m_shape.GetType();\r\n    }\r\n    /// Get the child shape. You can modify the child shape, however you should not change the\r\n    /// number of vertices because this will crash some collision caching mechanisms.\r\n    /// Manipulating the shape may lead to non-physical behavior.\r\n    GetShape() {\r\n        return this.m_shape;\r\n    }\r\n    /// Set if this fixture is a sensor.\r\n    SetSensor(sensor) {\r\n        if (sensor !== this.m_isSensor) {\r\n            this.m_body.SetAwake(true);\r\n            this.m_isSensor = sensor;\r\n        }\r\n    }\r\n    /// Is this fixture a sensor (non-solid)?\r\n    /// @return the true if the shape is a sensor.\r\n    IsSensor() {\r\n        return this.m_isSensor;\r\n    }\r\n    /// Set the contact filtering data. This will not update contacts until the next time\r\n    /// step when either parent body is active and awake.\r\n    /// This automatically calls Refilter.\r\n    SetFilterData(filter) {\r\n        this.m_filter.Copy(filter);\r\n        this.Refilter();\r\n    }\r\n    /// Get the contact filtering data.\r\n    GetFilterData() {\r\n        return this.m_filter;\r\n    }\r\n    /// Call this if you want to establish collision that was previously disabled by b2ContactFilter::ShouldCollide.\r\n    Refilter() {\r\n        // Flag associated contacts for filtering.\r\n        let edge = this.m_body.GetContactList();\r\n        while (edge) {\r\n            const contact = edge.contact;\r\n            const fixtureA = contact.GetFixtureA();\r\n            const fixtureB = contact.GetFixtureB();\r\n            if (fixtureA === this || fixtureB === this) {\r\n                contact.FlagForFiltering();\r\n            }\r\n            edge = edge.next;\r\n        }\r\n        const world = this.m_body.GetWorld();\r\n        if (world === null) {\r\n            return;\r\n        }\r\n        // Touch each proxy so that new pairs may be created\r\n        const broadPhase = world.m_contactManager.m_broadPhase;\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            broadPhase.TouchProxy(this.m_proxies[i].treeNode);\r\n        }\r\n    }\r\n    /// Get the parent body of this fixture. This is NULL if the fixture is not attached.\r\n    /// @return the parent body.\r\n    GetBody() {\r\n        return this.m_body;\r\n    }\r\n    /// Get the next fixture in the parent body's fixture list.\r\n    /// @return the next shape.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data that was assigned in the fixture definition. Use this to\r\n    /// store your application specific data.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data. Use this to store your application specific data.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Test a point for containment in this fixture.\r\n    /// @param p a point in world coordinates.\r\n    TestPoint(p) {\r\n        return this.m_shape.TestPoint(this.m_body.GetTransform(), p);\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ComputeDistance(p, normal, childIndex) {\r\n        return this.m_shape.ComputeDistance(this.m_body.GetTransform(), p, normal, childIndex);\r\n    }\r\n    // #endif\r\n    /// Cast a ray against this shape.\r\n    /// @param output the ray-cast results.\r\n    /// @param input the ray-cast input parameters.\r\n    RayCast(output, input, childIndex) {\r\n        return this.m_shape.RayCast(output, input, this.m_body.GetTransform(), childIndex);\r\n    }\r\n    /// Get the mass data for this fixture. The mass data is based on the density and\r\n    /// the shape. The rotational inertia is about the shape's origin. This operation\r\n    /// may be expensive.\r\n    GetMassData(massData = new b2MassData()) {\r\n        this.m_shape.ComputeMass(massData, this.m_density);\r\n        return massData;\r\n    }\r\n    /// Set the density of this fixture. This will _not_ automatically adjust the mass\r\n    /// of the body. You must call b2Body::ResetMassData to update the body's mass.\r\n    SetDensity(density) {\r\n        this.m_density = density;\r\n    }\r\n    /// Get the density of this fixture.\r\n    GetDensity() {\r\n        return this.m_density;\r\n    }\r\n    /// Get the coefficient of friction.\r\n    GetFriction() {\r\n        return this.m_friction;\r\n    }\r\n    /// Set the coefficient of friction. This will _not_ change the friction of\r\n    /// existing contacts.\r\n    SetFriction(friction) {\r\n        this.m_friction = friction;\r\n    }\r\n    /// Get the coefficient of restitution.\r\n    GetRestitution() {\r\n        return this.m_restitution;\r\n    }\r\n    /// Set the coefficient of restitution. This will _not_ change the restitution of\r\n    /// existing contacts.\r\n    SetRestitution(restitution) {\r\n        this.m_restitution = restitution;\r\n    }\r\n    /// Get the fixture's AABB. This AABB may be enlarge and/or stale.\r\n    /// If you need a more accurate AABB, compute it using the shape and\r\n    /// the body transform.\r\n    GetAABB(childIndex) {\r\n        // DEBUG: b2Assert(0 <= childIndex && childIndex < this.m_proxyCount);\r\n        return this.m_proxies[childIndex].aabb;\r\n    }\r\n    /// Dump this fixture to the log file.\r\n    Dump(log, bodyIndex) {\r\n        log(\"    const fd: b2FixtureDef = new b2FixtureDef();\\n\");\r\n        log(\"    fd.friction = %.15f;\\n\", this.m_friction);\r\n        log(\"    fd.restitution = %.15f;\\n\", this.m_restitution);\r\n        log(\"    fd.density = %.15f;\\n\", this.m_density);\r\n        log(\"    fd.isSensor = %s;\\n\", (this.m_isSensor) ? (\"true\") : (\"false\"));\r\n        log(\"    fd.filter.categoryBits = %d;\\n\", this.m_filter.categoryBits);\r\n        log(\"    fd.filter.maskBits = %d;\\n\", this.m_filter.maskBits);\r\n        log(\"    fd.filter.groupIndex = %d;\\n\", this.m_filter.groupIndex);\r\n        this.m_shape.Dump(log);\r\n        log(\"\\n\");\r\n        log(\"    fd.shape = shape;\\n\");\r\n        log(\"\\n\");\r\n        log(\"    bodies[%d].CreateFixture(fd);\\n\", bodyIndex);\r\n    }\r\n    // We need separation create/destroy functions from the constructor/destructor because\r\n    // the destructor cannot access the allocator (no destructor arguments allowed by C++).\r\n    Create(def) {\r\n        this.m_userData = def.userData;\r\n        this.m_friction = b2Maybe(def.friction, 0.2);\r\n        this.m_restitution = b2Maybe(def.restitution, 0);\r\n        // this.m_body = body;\r\n        this.m_next = null;\r\n        this.m_filter.Copy(b2Maybe(def.filter, b2Filter.DEFAULT));\r\n        this.m_isSensor = b2Maybe(def.isSensor, false);\r\n        // Reserve proxy space\r\n        // const childCount = m_shape->GetChildCount();\r\n        // m_proxies = (b2FixtureProxy*)allocator->Allocate(childCount * sizeof(b2FixtureProxy));\r\n        // for (int32 i = 0; i < childCount; ++i)\r\n        // {\r\n        //   m_proxies[i].fixture = NULL;\r\n        //   m_proxies[i].proxyId = b2BroadPhase::e_nullProxy;\r\n        // }\r\n        // this.m_proxies = b2FixtureProxy.MakeArray(this.m_shape.GetChildCount());\r\n        this.m_proxies = b2MakeArray(this.m_shape.GetChildCount(), (i) => new b2FixtureProxy(this));\r\n        this.m_proxyCount = 0;\r\n        this.m_density = b2Maybe(def.density, 0);\r\n    }\r\n    Destroy() {\r\n        // The proxies must be destroyed before calling this.\r\n        // DEBUG: b2Assert(this.m_proxyCount === 0);\r\n        // Free the proxy array.\r\n        // int32 childCount = m_shape->GetChildCount();\r\n        // allocator->Free(m_proxies, childCount * sizeof(b2FixtureProxy));\r\n        // m_proxies = NULL;\r\n        // this.m_shape = null;\r\n    }\r\n    // These support body activation/deactivation.\r\n    CreateProxies(xf) {\r\n        const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n        // DEBUG: b2Assert(this.m_proxyCount === 0);\r\n        // Create proxies in the broad-phase.\r\n        this.m_proxyCount = this.m_shape.GetChildCount();\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i] = new b2FixtureProxy(this);\r\n            this.m_shape.ComputeAABB(proxy.aabb, xf, i);\r\n            proxy.treeNode = broadPhase.CreateProxy(proxy.aabb, proxy);\r\n            proxy.childIndex = i;\r\n        }\r\n    }\r\n    DestroyProxies() {\r\n        const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n        // Destroy proxies in the broad-phase.\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i];\r\n            delete proxy.treeNode.userData;\r\n            broadPhase.DestroyProxy(proxy.treeNode);\r\n            delete proxy.treeNode;\r\n        }\r\n        this.m_proxyCount = 0;\r\n    }\r\n    TouchProxies() {\r\n        const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n        const proxyCount = this.m_proxyCount;\r\n        for (let i = 0; i < proxyCount; ++i) {\r\n            broadPhase.TouchProxy(this.m_proxies[i].treeNode);\r\n        }\r\n    }\r\n    Synchronize(transform1, transform2) {\r\n        if (this.m_proxyCount === 0) {\r\n            return;\r\n        }\r\n        const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i];\r\n            // Compute an AABB that covers the swept shape (may miss some rotation effect).\r\n            const aabb1 = b2Fixture.Synchronize_s_aabb1;\r\n            const aabb2 = b2Fixture.Synchronize_s_aabb2;\r\n            this.m_shape.ComputeAABB(aabb1, transform1, i);\r\n            this.m_shape.ComputeAABB(aabb2, transform2, i);\r\n            proxy.aabb.Combine2(aabb1, aabb2);\r\n            const displacement = b2Vec2.SubVV(transform2.p, transform1.p, b2Fixture.Synchronize_s_displacement);\r\n            broadPhase.MoveProxy(proxy.treeNode, proxy.aabb, displacement);\r\n        }\r\n    }\r\n}\r\nb2Fixture.Synchronize_s_aabb1 = new b2AABB();\r\nb2Fixture.Synchronize_s_aabb2 = new b2AABB();\r\nb2Fixture.Synchronize_s_displacement = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_linearSlop, b2_maxLinearCorrection, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Distance joint definition. This requires defining an\r\n/// anchor point on both bodies and the non-zero length of the\r\n/// distance joint. The definition uses local anchor points\r\n/// so that the initial configuration can violate the constraint\r\n/// slightly. This helps when saving and loading a game.\r\n/// @warning Do not use a zero or short length.\r\nexport class b2DistanceJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_distanceJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.length = 1;\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    Initialize(b1, b2, anchor1, anchor2) {\r\n        this.bodyA = b1;\r\n        this.bodyB = b2;\r\n        this.bodyA.GetLocalPoint(anchor1, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor2, this.localAnchorB);\r\n        this.length = b2Vec2.DistanceVV(anchor1, anchor2);\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n}\r\nexport class b2DistanceJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_bias = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_gamma = 0;\r\n        this.m_impulse = 0;\r\n        this.m_length = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_u = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n        this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_length = def.length;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        out.x = inv_dt * this.m_impulse * this.m_u.x;\r\n        out.y = inv_dt * this.m_impulse * this.m_u.y;\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetLength(length) {\r\n        this.m_length = length;\r\n    }\r\n    Length() {\r\n        return this.m_length;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2DistanceJointDef = new b2DistanceJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.length = %.15f;\\n\", this.m_length);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // m_u = cB + m_rB - cA - m_rA;\r\n        this.m_u.x = cB.x + this.m_rB.x - cA.x - this.m_rA.x;\r\n        this.m_u.y = cB.y + this.m_rB.y - cA.y - this.m_rA.y;\r\n        // Handle singularity.\r\n        const length = this.m_u.Length();\r\n        if (length > b2_linearSlop) {\r\n            this.m_u.SelfMul(1 / length);\r\n        }\r\n        else {\r\n            this.m_u.SetZero();\r\n        }\r\n        // float32 crAu = b2Cross(m_rA, m_u);\r\n        const crAu = b2Vec2.CrossVV(this.m_rA, this.m_u);\r\n        // float32 crBu = b2Cross(m_rB, m_u);\r\n        const crBu = b2Vec2.CrossVV(this.m_rB, this.m_u);\r\n        // float32 invMass = m_invMassA + m_invIA * crAu * crAu + m_invMassB + m_invIB * crBu * crBu;\r\n        let invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB + this.m_invIB * crBu * crBu;\r\n        // Compute the effective mass matrix.\r\n        this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        if (this.m_frequencyHz > 0) {\r\n            const C = length - this.m_length;\r\n            // Frequency\r\n            const omega = 2 * b2_pi * this.m_frequencyHz;\r\n            // Damping coefficient\r\n            const d = 2 * this.m_mass * this.m_dampingRatio * omega;\r\n            // Spring stiffness\r\n            const k = this.m_mass * omega * omega;\r\n            // magic formulas\r\n            const h = data.step.dt;\r\n            this.m_gamma = h * (d + h * k);\r\n            this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\r\n            this.m_bias = C * h * k * this.m_gamma;\r\n            invMass += this.m_gamma;\r\n            this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        }\r\n        else {\r\n            this.m_gamma = 0;\r\n            this.m_bias = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale the impulse to support a variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_u;\r\n            const P = b2Vec2.MulSV(this.m_impulse, this.m_u, b2DistanceJoint.InitVelocityConstraints_s_P);\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            // wA -= m_invIA * b2Cross(m_rA, P);\r\n            wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            // wB += m_invIB * b2Cross(m_rB, P);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2DistanceJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2DistanceJoint.SolveVelocityConstraints_s_vpB);\r\n        // float32 Cdot = b2Dot(m_u, vpB - vpA);\r\n        const Cdot = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\r\n        const impulse = (-this.m_mass * (Cdot + this.m_bias + this.m_gamma * this.m_impulse));\r\n        this.m_impulse += impulse;\r\n        // b2Vec2 P = impulse * m_u;\r\n        const P = b2Vec2.MulSV(impulse, this.m_u, b2DistanceJoint.SolveVelocityConstraints_s_P);\r\n        // vA -= m_invMassA * P;\r\n        vA.SelfMulSub(this.m_invMassA, P);\r\n        // wA -= m_invIA * b2Cross(m_rA, P);\r\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n        // vB += m_invMassB * P;\r\n        vB.SelfMulAdd(this.m_invMassB, P);\r\n        // wB += m_invIB * b2Cross(m_rB, P);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        if (this.m_frequencyHz > 0) {\r\n            // There is no position correction for soft distance constraints.\r\n            return true;\r\n        }\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA); // use m_rA\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB); // use m_rB\r\n        // b2Vec2 u = cB + rB - cA - rA;\r\n        const u = this.m_u; // use m_u\r\n        u.x = cB.x + rB.x - cA.x - rA.x;\r\n        u.y = cB.y + rB.y - cA.y - rA.y;\r\n        // float32 length = u.Normalize();\r\n        const length = this.m_u.Normalize();\r\n        // float32 C = length - m_length;\r\n        let C = length - this.m_length;\r\n        C = b2Clamp(C, (-b2_maxLinearCorrection), b2_maxLinearCorrection);\r\n        const impulse = (-this.m_mass * C);\r\n        // b2Vec2 P = impulse * u;\r\n        const P = b2Vec2.MulSV(impulse, u, b2DistanceJoint.SolvePositionConstraints_s_P);\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        // aA -= m_invIA * b2Cross(rA, P);\r\n        aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        // aB += m_invIB * b2Cross(rB, P);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return b2Abs(C) < b2_linearSlop;\r\n    }\r\n}\r\nb2DistanceJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2DistanceJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2_epsilon, b2_linearSlop, b2_maxLinearCorrection, b2MakeNumberArray, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Sq, b2Sqrt, b2Vec2 } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\nimport { b2DistanceJointDef } from \"./b2DistanceJoint\";\r\nexport class b2AreaJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_areaJoint);\r\n        this.bodies = [];\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    AddBody(body) {\r\n        this.bodies.push(body);\r\n        if (this.bodies.length === 1) {\r\n            this.bodyA = body;\r\n        }\r\n        else if (this.bodies.length === 2) {\r\n            this.bodyB = body;\r\n        }\r\n    }\r\n}\r\nexport class b2AreaJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        // Solver shared\r\n        this.m_impulse = 0;\r\n        this.m_targetArea = 0;\r\n        // DEBUG: b2Assert(def.bodies.length >= 3, \"You cannot create an area joint with less than three bodies.\");\r\n        this.m_bodies = def.bodies;\r\n        this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n        this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n        this.m_targetLengths = b2MakeNumberArray(def.bodies.length);\r\n        this.m_normals = b2Vec2.MakeArray(def.bodies.length);\r\n        this.m_joints = []; // b2MakeNullArray(def.bodies.length);\r\n        this.m_deltas = b2Vec2.MakeArray(def.bodies.length);\r\n        this.m_delta = new b2Vec2();\r\n        const djd = new b2DistanceJointDef();\r\n        djd.frequencyHz = this.m_frequencyHz;\r\n        djd.dampingRatio = this.m_dampingRatio;\r\n        this.m_targetArea = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const body_c = body.GetWorldCenter();\r\n            const next_c = next.GetWorldCenter();\r\n            this.m_targetLengths[i] = b2Vec2.DistanceVV(body_c, next_c);\r\n            this.m_targetArea += b2Vec2.CrossVV(body_c, next_c);\r\n            djd.Initialize(body, next, body_c, next_c);\r\n            this.m_joints[i] = body.GetWorld().CreateJoint(djd);\r\n        }\r\n        this.m_targetArea *= 0.5;\r\n    }\r\n    GetAnchorA(out) {\r\n        return out;\r\n    }\r\n    GetAnchorB(out) {\r\n        return out;\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n        for (let i = 0; i < this.m_joints.length; ++i) {\r\n            this.m_joints[i].SetFrequency(hz);\r\n        }\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n        for (let i = 0; i < this.m_joints.length; ++i) {\r\n            this.m_joints[i].SetDampingRatio(ratio);\r\n        }\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    Dump(log) {\r\n        log(\"Area joint dumping is not supported.\\n\");\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const prev = this.m_bodies[(i + this.m_bodies.length - 1) % this.m_bodies.length];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const prev_c = data.positions[prev.m_islandIndex].c;\r\n            const next_c = data.positions[next.m_islandIndex].c;\r\n            const delta = this.m_deltas[i];\r\n            b2Vec2.SubVV(next_c, prev_c, delta);\r\n        }\r\n        if (data.step.warmStarting) {\r\n            this.m_impulse *= data.step.dtRatio;\r\n            for (let i = 0; i < this.m_bodies.length; ++i) {\r\n                const body = this.m_bodies[i];\r\n                const body_v = data.velocities[body.m_islandIndex].v;\r\n                const delta = this.m_deltas[i];\r\n                body_v.x += body.m_invMass * delta.y * 0.5 * this.m_impulse;\r\n                body_v.y += body.m_invMass * -delta.x * 0.5 * this.m_impulse;\r\n            }\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        let dotMassSum = 0;\r\n        let crossMassSum = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_v = data.velocities[body.m_islandIndex].v;\r\n            const delta = this.m_deltas[i];\r\n            dotMassSum += delta.LengthSquared() / body.GetMass();\r\n            crossMassSum += b2Vec2.CrossVV(body_v, delta);\r\n        }\r\n        const lambda = -2 * crossMassSum / dotMassSum;\r\n        // lambda = b2Clamp(lambda, -b2_maxLinearCorrection, b2_maxLinearCorrection);\r\n        this.m_impulse += lambda;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_v = data.velocities[body.m_islandIndex].v;\r\n            const delta = this.m_deltas[i];\r\n            body_v.x += body.m_invMass * delta.y * 0.5 * lambda;\r\n            body_v.y += body.m_invMass * -delta.x * 0.5 * lambda;\r\n        }\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        let perimeter = 0;\r\n        let area = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const body_c = data.positions[body.m_islandIndex].c;\r\n            const next_c = data.positions[next.m_islandIndex].c;\r\n            const delta = b2Vec2.SubVV(next_c, body_c, this.m_delta);\r\n            let dist = delta.Length();\r\n            if (dist < b2_epsilon) {\r\n                dist = 1;\r\n            }\r\n            this.m_normals[i].x = delta.y / dist;\r\n            this.m_normals[i].y = -delta.x / dist;\r\n            perimeter += dist;\r\n            area += b2Vec2.CrossVV(body_c, next_c);\r\n        }\r\n        area *= 0.5;\r\n        const deltaArea = this.m_targetArea - area;\r\n        const toExtrude = 0.5 * deltaArea / perimeter;\r\n        let done = true;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_c = data.positions[body.m_islandIndex].c;\r\n            const next_i = (i + 1) % this.m_bodies.length;\r\n            const delta = b2Vec2.AddVV(this.m_normals[i], this.m_normals[next_i], this.m_delta);\r\n            delta.SelfMul(toExtrude);\r\n            const norm_sq = delta.LengthSquared();\r\n            if (norm_sq > b2Sq(b2_maxLinearCorrection)) {\r\n                delta.SelfMul(b2_maxLinearCorrection / b2Sqrt(norm_sq));\r\n            }\r\n            if (norm_sq > b2Sq(b2_linearSlop)) {\r\n                done = false;\r\n            }\r\n            body_c.x += delta.x;\r\n            body_c.y += delta.y;\r\n        }\r\n        return done;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJBcmVhSm9pbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9Cb3gyRC9EeW5hbWljcy9Kb2ludHMvYjJBcmVhSm9pbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELE9BQU8sRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLHNCQUFzQixFQUFFLGlCQUFpQixFQUFFLE9BQU8sRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3hILE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBTSxNQUFNLHFCQUFxQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBZSxNQUFNLFdBQVcsQ0FBQztBQUMxRSxPQUFPLEVBQW1CLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFjeEUsTUFBTSxPQUFPLGNBQWUsU0FBUSxVQUFVO0lBTzVDO1FBQ0UsS0FBSyxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQVAxQixXQUFNLEdBQWEsRUFBRSxDQUFDO1FBRXRCLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBRXhCLGlCQUFZLEdBQVcsQ0FBQyxDQUFDO0lBSWhDLENBQUM7SUFFTSxPQUFPLENBQUMsSUFBWTtRQUN6QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV2QixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUM1QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztTQUNuQjthQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ25DLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1NBQ25CO0lBQ0gsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLFdBQVksU0FBUSxPQUFPO0lBZ0J0QyxZQUFZLEdBQW9CO1FBQzlCLEtB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","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Clamp, b2Vec2, b2Mat22, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Friction joint definition.\r\nexport class b2FrictionJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_frictionJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.maxForce = 0;\r\n        this.maxTorque = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n    }\r\n}\r\nexport class b2FrictionJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        // Solver shared\r\n        this.m_linearImpulse = new b2Vec2();\r\n        this.m_angularImpulse = 0;\r\n        this.m_maxForce = 0;\r\n        this.m_maxTorque = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_linearMass = new b2Mat22();\r\n        this.m_angularMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_linearImpulse.SetZero();\r\n        this.m_maxForce = b2Maybe(def.maxForce, 0);\r\n        this.m_maxTorque = b2Maybe(def.maxTorque, 0);\r\n        this.m_linearMass.SetZero();\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        // const cA: b2Vec2 = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        // const cB: b2Vec2 = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective mass matrix.\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const K = this.m_K; // new b2Mat22();\r\n        K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n        K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n        K.GetInverse(this.m_linearMass);\r\n        this.m_angularMass = iA + iB;\r\n        if (this.m_angularMass > 0) {\r\n            this.m_angularMass = 1 / this.m_angularMass;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            // m_linearImpulse *= data.step.dtRatio;\r\n            this.m_linearImpulse.SelfMul(data.step.dtRatio);\r\n            this.m_angularImpulse *= data.step.dtRatio;\r\n            // const P: b2Vec2(m_linearImpulse.x, m_linearImpulse.y);\r\n            const P = this.m_linearImpulse;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            // wA -= iA * (b2Cross(m_rA, P) + m_angularImpulse);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_angularImpulse);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            // wB += iB * (b2Cross(m_rB, P) + m_angularImpulse);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_angularImpulse);\r\n        }\r\n        else {\r\n            this.m_linearImpulse.SetZero();\r\n            this.m_angularImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const h = data.step.dt;\r\n        // Solve angular friction\r\n        {\r\n            const Cdot = wB - wA;\r\n            let impulse = (-this.m_angularMass * Cdot);\r\n            const oldImpulse = this.m_angularImpulse;\r\n            const maxImpulse = h * this.m_maxTorque;\r\n            this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, (-maxImpulse), maxImpulse);\r\n            impulse = this.m_angularImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve linear friction\r\n        {\r\n            // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot_v2 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = -b2Mul(m_linearMass, Cdot);\r\n            const impulseV = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2FrictionJoint.SolveVelocityConstraints_s_impulseV).SelfNeg();\r\n            // b2Vec2 oldImpulse = m_linearImpulse;\r\n            const oldImpulseV = b2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV.Copy(this.m_linearImpulse);\r\n            // m_linearImpulse += impulse;\r\n            this.m_linearImpulse.SelfAdd(impulseV);\r\n            const maxImpulse = h * this.m_maxForce;\r\n            if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n                this.m_linearImpulse.Normalize();\r\n                this.m_linearImpulse.SelfMul(maxImpulse);\r\n            }\r\n            // impulse = m_linearImpulse - oldImpulse;\r\n            b2Vec2.SubVV(this.m_linearImpulse, oldImpulseV, impulseV);\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulseV);\r\n            // wA -= iA * b2Cross(m_rA, impulse);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, impulseV);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulseV);\r\n            // wB += iB * b2Cross(m_rB, impulse);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, impulseV);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        out.x = inv_dt * this.m_linearImpulse.x;\r\n        out.y = inv_dt * this.m_linearImpulse.y;\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_angularImpulse;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetMaxForce(force) {\r\n        this.m_maxForce = force;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetMaxTorque(torque) {\r\n        this.m_maxTorque = torque;\r\n    }\r\n    GetMaxTorque() {\r\n        return this.m_maxTorque;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2FrictionJointDef = new b2FrictionJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\r\n        log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2FrictionJoint.SolveVelocityConstraints_s_impulseV = new b2Vec2();\r\nb2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\n// DEBUG: import { b2IsValid } from \"../../Common/b2Math\";\r\nimport { b2_linearSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Gear joint definition. This definition requires two existing\r\n/// revolute or prismatic joints (any combination will work).\r\nexport class b2GearJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_gearJoint);\r\n        this.ratio = 1;\r\n    }\r\n}\r\nexport class b2GearJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_typeA = b2JointType.e_unknownJoint;\r\n        this.m_typeB = b2JointType.e_unknownJoint;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localAnchorC = new b2Vec2();\r\n        this.m_localAnchorD = new b2Vec2();\r\n        this.m_localAxisC = new b2Vec2();\r\n        this.m_localAxisD = new b2Vec2();\r\n        this.m_referenceAngleA = 0;\r\n        this.m_referenceAngleB = 0;\r\n        this.m_constant = 0;\r\n        this.m_ratio = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_indexC = 0;\r\n        this.m_indexD = 0;\r\n        this.m_lcA = new b2Vec2();\r\n        this.m_lcB = new b2Vec2();\r\n        this.m_lcC = new b2Vec2();\r\n        this.m_lcD = new b2Vec2();\r\n        this.m_mA = 0;\r\n        this.m_mB = 0;\r\n        this.m_mC = 0;\r\n        this.m_mD = 0;\r\n        this.m_iA = 0;\r\n        this.m_iB = 0;\r\n        this.m_iC = 0;\r\n        this.m_iD = 0;\r\n        this.m_JvAC = new b2Vec2();\r\n        this.m_JvBD = new b2Vec2();\r\n        this.m_JwA = 0;\r\n        this.m_JwB = 0;\r\n        this.m_JwC = 0;\r\n        this.m_JwD = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_qC = new b2Rot();\r\n        this.m_qD = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_lalcC = new b2Vec2();\r\n        this.m_lalcD = new b2Vec2();\r\n        this.m_joint1 = def.joint1;\r\n        this.m_joint2 = def.joint2;\r\n        this.m_typeA = this.m_joint1.GetType();\r\n        this.m_typeB = this.m_joint2.GetType();\r\n        // DEBUG: b2Assert(this.m_typeA === b2JointType.e_revoluteJoint || this.m_typeA === b2JointType.e_prismaticJoint);\r\n        // DEBUG: b2Assert(this.m_typeB === b2JointType.e_revoluteJoint || this.m_typeB === b2JointType.e_prismaticJoint);\r\n        let coordinateA, coordinateB;\r\n        // TODO_ERIN there might be some problem with the joint edges in b2Joint.\r\n        this.m_bodyC = this.m_joint1.GetBodyA();\r\n        this.m_bodyA = this.m_joint1.GetBodyB();\r\n        // Get geometry of joint1\r\n        const xfA = this.m_bodyA.m_xf;\r\n        const aA = this.m_bodyA.m_sweep.a;\r\n        const xfC = this.m_bodyC.m_xf;\r\n        const aC = this.m_bodyC.m_sweep.a;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            const revolute = def.joint1;\r\n            this.m_localAnchorC.Copy(revolute.m_localAnchorA);\r\n            this.m_localAnchorA.Copy(revolute.m_localAnchorB);\r\n            this.m_referenceAngleA = revolute.m_referenceAngle;\r\n            this.m_localAxisC.SetZero();\r\n            coordinateA = aA - aC - this.m_referenceAngleA;\r\n        }\r\n        else {\r\n            const prismatic = def.joint1;\r\n            this.m_localAnchorC.Copy(prismatic.m_localAnchorA);\r\n            this.m_localAnchorA.Copy(prismatic.m_localAnchorB);\r\n            this.m_referenceAngleA = prismatic.m_referenceAngle;\r\n            this.m_localAxisC.Copy(prismatic.m_localXAxisA);\r\n            // b2Vec2 pC = m_localAnchorC;\r\n            const pC = this.m_localAnchorC;\r\n            // b2Vec2 pA = b2MulT(xfC.q, b2Mul(xfA.q, m_localAnchorA) + (xfA.p - xfC.p));\r\n            const pA = b2Rot.MulTRV(xfC.q, b2Vec2.AddVV(b2Rot.MulRV(xfA.q, this.m_localAnchorA, b2Vec2.s_t0), b2Vec2.SubVV(xfA.p, xfC.p, b2Vec2.s_t1), b2Vec2.s_t0), b2Vec2.s_t0); // pA uses s_t0\r\n            // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n            coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n        }\r\n        this.m_bodyD = this.m_joint2.GetBodyA();\r\n        this.m_bodyB = this.m_joint2.GetBodyB();\r\n        // Get geometry of joint2\r\n        const xfB = this.m_bodyB.m_xf;\r\n        const aB = this.m_bodyB.m_sweep.a;\r\n        const xfD = this.m_bodyD.m_xf;\r\n        const aD = this.m_bodyD.m_sweep.a;\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            const revolute = def.joint2;\r\n            this.m_localAnchorD.Copy(revolute.m_localAnchorA);\r\n            this.m_localAnchorB.Copy(revolute.m_localAnchorB);\r\n            this.m_referenceAngleB = revolute.m_referenceAngle;\r\n            this.m_localAxisD.SetZero();\r\n            coordinateB = aB - aD - this.m_referenceAngleB;\r\n        }\r\n        else {\r\n            const prismatic = def.joint2;\r\n            this.m_localAnchorD.Copy(prismatic.m_localAnchorA);\r\n            this.m_localAnchorB.Copy(prismatic.m_localAnchorB);\r\n            this.m_referenceAngleB = prismatic.m_referenceAngle;\r\n            this.m_localAxisD.Copy(prismatic.m_localXAxisA);\r\n            // b2Vec2 pD = m_localAnchorD;\r\n            const pD = this.m_localAnchorD;\r\n            // b2Vec2 pB = b2MulT(xfD.q, b2Mul(xfB.q, m_localAnchorB) + (xfB.p - xfD.p));\r\n            const pB = b2Rot.MulTRV(xfD.q, b2Vec2.AddVV(b2Rot.MulRV(xfB.q, this.m_localAnchorB, b2Vec2.s_t0), b2Vec2.SubVV(xfB.p, xfD.p, b2Vec2.s_t1), b2Vec2.s_t0), b2Vec2.s_t0); // pB uses s_t0\r\n            // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n            coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n        }\r\n        this.m_ratio = b2Maybe(def.ratio, 1);\r\n        this.m_constant = coordinateA + this.m_ratio * coordinateB;\r\n        this.m_impulse = 0;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_indexC = this.m_bodyC.m_islandIndex;\r\n        this.m_indexD = this.m_bodyD.m_islandIndex;\r\n        this.m_lcA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_lcB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_lcC.Copy(this.m_bodyC.m_sweep.localCenter);\r\n        this.m_lcD.Copy(this.m_bodyD.m_sweep.localCenter);\r\n        this.m_mA = this.m_bodyA.m_invMass;\r\n        this.m_mB = this.m_bodyB.m_invMass;\r\n        this.m_mC = this.m_bodyC.m_invMass;\r\n        this.m_mD = this.m_bodyD.m_invMass;\r\n        this.m_iA = this.m_bodyA.m_invI;\r\n        this.m_iB = this.m_bodyB.m_invI;\r\n        this.m_iC = this.m_bodyC.m_invI;\r\n        this.m_iD = this.m_bodyD.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const aC = data.positions[this.m_indexC].a;\r\n        const vC = data.velocities[this.m_indexC].v;\r\n        let wC = data.velocities[this.m_indexC].w;\r\n        const aD = data.positions[this.m_indexD].a;\r\n        const vD = data.velocities[this.m_indexD].v;\r\n        let wD = data.velocities[this.m_indexD].w;\r\n        // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n        this.m_mass = 0;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            this.m_JvAC.SetZero();\r\n            this.m_JwA = 1;\r\n            this.m_JwC = 1;\r\n            this.m_mass += this.m_iA + this.m_iC;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n            const u = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.InitVelocityConstraints_s_u);\r\n            // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n            b2Vec2.SubVV(this.m_localAnchorC, this.m_lcC, this.m_lalcC);\r\n            const rC = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.InitVelocityConstraints_s_rC);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n            b2Vec2.SubVV(this.m_localAnchorA, this.m_lcA, this.m_lalcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.InitVelocityConstraints_s_rA);\r\n            // m_JvAC = u;\r\n            this.m_JvAC.Copy(u);\r\n            // m_JwC = b2Cross(rC, u);\r\n            this.m_JwC = b2Vec2.CrossVV(rC, u);\r\n            // m_JwA = b2Cross(rA, u);\r\n            this.m_JwA = b2Vec2.CrossVV(rA, u);\r\n            this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\r\n        }\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            this.m_JvBD.SetZero();\r\n            this.m_JwB = this.m_ratio;\r\n            this.m_JwD = this.m_ratio;\r\n            this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n            const u = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.InitVelocityConstraints_s_u);\r\n            // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n            b2Vec2.SubVV(this.m_localAnchorD, this.m_lcD, this.m_lalcD);\r\n            const rD = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.InitVelocityConstraints_s_rD);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n            b2Vec2.SubVV(this.m_localAnchorB, this.m_lcB, this.m_lalcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.InitVelocityConstraints_s_rB);\r\n            // m_JvBD = m_ratio * u;\r\n            b2Vec2.MulSV(this.m_ratio, u, this.m_JvBD);\r\n            // m_JwD = m_ratio * b2Cross(rD, u);\r\n            this.m_JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n            // m_JwB = m_ratio * b2Cross(rB, u);\r\n            this.m_JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n            this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\r\n        }\r\n        // Compute effective mass.\r\n        this.m_mass = this.m_mass > 0 ? 1 / this.m_mass : 0;\r\n        if (data.step.warmStarting) {\r\n            // vA += (m_mA * m_impulse) * m_JvAC;\r\n            vA.SelfMulAdd(this.m_mA * this.m_impulse, this.m_JvAC);\r\n            wA += this.m_iA * this.m_impulse * this.m_JwA;\r\n            // vB += (m_mB * m_impulse) * m_JvBD;\r\n            vB.SelfMulAdd(this.m_mB * this.m_impulse, this.m_JvBD);\r\n            wB += this.m_iB * this.m_impulse * this.m_JwB;\r\n            // vC -= (m_mC * m_impulse) * m_JvAC;\r\n            vC.SelfMulSub(this.m_mC * this.m_impulse, this.m_JvAC);\r\n            wC -= this.m_iC * this.m_impulse * this.m_JwC;\r\n            // vD -= (m_mD * m_impulse) * m_JvBD;\r\n            vD.SelfMulSub(this.m_mD * this.m_impulse, this.m_JvBD);\r\n            wD -= this.m_iD * this.m_impulse * this.m_JwD;\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n        // data.velocities[this.m_indexC].v = vC;\r\n        data.velocities[this.m_indexC].w = wC;\r\n        // data.velocities[this.m_indexD].v = vD;\r\n        data.velocities[this.m_indexD].w = wD;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const vC = data.velocities[this.m_indexC].v;\r\n        let wC = data.velocities[this.m_indexC].w;\r\n        const vD = data.velocities[this.m_indexD].v;\r\n        let wD = data.velocities[this.m_indexD].w;\r\n        // float32 Cdot = b2Dot(m_JvAC, vA - vC) + b2Dot(m_JvBD, vB - vD);\r\n        let Cdot = b2Vec2.DotVV(this.m_JvAC, b2Vec2.SubVV(vA, vC, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(this.m_JvBD, b2Vec2.SubVV(vB, vD, b2Vec2.s_t0));\r\n        Cdot += (this.m_JwA * wA - this.m_JwC * wC) + (this.m_JwB * wB - this.m_JwD * wD);\r\n        const impulse = -this.m_mass * Cdot;\r\n        this.m_impulse += impulse;\r\n        // vA += (m_mA * impulse) * m_JvAC;\r\n        vA.SelfMulAdd((this.m_mA * impulse), this.m_JvAC);\r\n        wA += this.m_iA * impulse * this.m_JwA;\r\n        // vB += (m_mB * impulse) * m_JvBD;\r\n        vB.SelfMulAdd((this.m_mB * impulse), this.m_JvBD);\r\n        wB += this.m_iB * impulse * this.m_JwB;\r\n        // vC -= (m_mC * impulse) * m_JvAC;\r\n        vC.SelfMulSub((this.m_mC * impulse), this.m_JvAC);\r\n        wC -= this.m_iC * impulse * this.m_JwC;\r\n        // vD -= (m_mD * impulse) * m_JvBD;\r\n        vD.SelfMulSub((this.m_mD * impulse), this.m_JvBD);\r\n        wD -= this.m_iD * impulse * this.m_JwD;\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n        // data.velocities[this.m_indexC].v = vC;\r\n        data.velocities[this.m_indexC].w = wC;\r\n        // data.velocities[this.m_indexD].v = vD;\r\n        data.velocities[this.m_indexD].w = wD;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const cC = data.positions[this.m_indexC].c;\r\n        let aC = data.positions[this.m_indexC].a;\r\n        const cD = data.positions[this.m_indexD].c;\r\n        let aD = data.positions[this.m_indexD].a;\r\n        // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n        const linearError = 0;\r\n        let coordinateA, coordinateB;\r\n        const JvAC = this.m_JvAC, JvBD = this.m_JvBD;\r\n        let JwA, JwB, JwC, JwD;\r\n        let mass = 0;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            JvAC.SetZero();\r\n            JwA = 1;\r\n            JwC = 1;\r\n            mass += this.m_iA + this.m_iC;\r\n            coordinateA = aA - aC - this.m_referenceAngleA;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n            const u = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.SolvePositionConstraints_s_u);\r\n            // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n            const rC = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.SolvePositionConstraints_s_rC);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.SolvePositionConstraints_s_rA);\r\n            // JvAC = u;\r\n            JvAC.Copy(u);\r\n            // JwC = b2Cross(rC, u);\r\n            JwC = b2Vec2.CrossVV(rC, u);\r\n            // JwA = b2Cross(rA, u);\r\n            JwA = b2Vec2.CrossVV(rA, u);\r\n            mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\r\n            // b2Vec2 pC = m_localAnchorC - m_lcC;\r\n            const pC = this.m_lalcC;\r\n            // b2Vec2 pA = b2MulT(qC, rA + (cA - cC));\r\n            const pA = b2Rot.MulTRV(qC, b2Vec2.AddVV(rA, b2Vec2.SubVV(cA, cC, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0); // pA uses s_t0\r\n            // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n            coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n        }\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            JvBD.SetZero();\r\n            JwB = this.m_ratio;\r\n            JwD = this.m_ratio;\r\n            mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n            coordinateB = aB - aD - this.m_referenceAngleB;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n            const u = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.SolvePositionConstraints_s_u);\r\n            // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n            const rD = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.SolvePositionConstraints_s_rD);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.SolvePositionConstraints_s_rB);\r\n            // JvBD = m_ratio * u;\r\n            b2Vec2.MulSV(this.m_ratio, u, JvBD);\r\n            // JwD = m_ratio * b2Cross(rD, u);\r\n            JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n            // JwB = m_ratio * b2Cross(rB, u);\r\n            JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n            mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * JwD * JwD + this.m_iB * JwB * JwB;\r\n            // b2Vec2 pD = m_localAnchorD - m_lcD;\r\n            const pD = this.m_lalcD;\r\n            // b2Vec2 pB = b2MulT(qD, rB + (cB - cD));\r\n            const pB = b2Rot.MulTRV(qD, b2Vec2.AddVV(rB, b2Vec2.SubVV(cB, cD, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0); // pB uses s_t0\r\n            // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n            coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n        }\r\n        const C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant;\r\n        let impulse = 0;\r\n        if (mass > 0) {\r\n            impulse = -C / mass;\r\n        }\r\n        // cA += m_mA * impulse * JvAC;\r\n        cA.SelfMulAdd(this.m_mA * impulse, JvAC);\r\n        aA += this.m_iA * impulse * JwA;\r\n        // cB += m_mB * impulse * JvBD;\r\n        cB.SelfMulAdd(this.m_mB * impulse, JvBD);\r\n        aB += this.m_iB * impulse * JwB;\r\n        // cC -= m_mC * impulse * JvAC;\r\n        cC.SelfMulSub(this.m_mC * impulse, JvAC);\r\n        aC -= this.m_iC * impulse * JwC;\r\n        // cD -= m_mD * impulse * JvBD;\r\n        cD.SelfMulSub(this.m_mD * impulse, JvBD);\r\n        aD -= this.m_iD * impulse * JwD;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        // data.positions[this.m_indexC].c = cC;\r\n        data.positions[this.m_indexC].a = aC;\r\n        // data.positions[this.m_indexD].c = cD;\r\n        data.positions[this.m_indexD].a = aD;\r\n        // TODO_ERIN not implemented\r\n        return linearError < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P = m_impulse * m_JvAC;\r\n        // return inv_dt * P;\r\n        return b2Vec2.MulSV(inv_dt * this.m_impulse, this.m_JvAC, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        // float32 L = m_impulse * m_JwA;\r\n        // return inv_dt * L;\r\n        return inv_dt * this.m_impulse * this.m_JwA;\r\n    }\r\n    GetJoint1() { return this.m_joint1; }\r\n    GetJoint2() { return this.m_joint2; }\r\n    GetRatio() {\r\n        return this.m_ratio;\r\n    }\r\n    SetRatio(ratio) {\r\n        // DEBUG: b2Assert(b2IsValid(ratio));\r\n        this.m_ratio = ratio;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        const index1 = this.m_joint1.m_index;\r\n        const index2 = this.m_joint2.m_index;\r\n        log(\"  const jd: b2GearJointDef = new b2GearJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.joint1 = joints[%d];\\n\", index1);\r\n        log(\"  jd.joint2 = joints[%d];\\n\", index2);\r\n        log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2GearJoint.InitVelocityConstraints_s_u = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rA = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rB = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rC = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rD = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_u = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rA = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rB = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rC = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rD = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\n// DEBUG: import { b2IsValid } from \"../../Common/b2Math\";\r\nimport { b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Clamp, b2Vec2, b2Mat22, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\nexport class b2MotorJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_motorJoint);\r\n        this.linearOffset = new b2Vec2(0, 0);\r\n        this.angularOffset = 0;\r\n        this.maxForce = 1;\r\n        this.maxTorque = 1;\r\n        this.correctionFactor = 0.3;\r\n    }\r\n    Initialize(bA, bB) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        // b2Vec2 xB = bodyB->GetPosition();\r\n        // linearOffset = bodyA->GetLocalPoint(xB);\r\n        this.bodyA.GetLocalPoint(this.bodyB.GetPosition(), this.linearOffset);\r\n        const angleA = this.bodyA.GetAngle();\r\n        const angleB = this.bodyB.GetAngle();\r\n        this.angularOffset = angleB - angleA;\r\n    }\r\n}\r\nexport class b2MotorJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_linearOffset = new b2Vec2();\r\n        this.m_angularOffset = 0;\r\n        this.m_linearImpulse = new b2Vec2();\r\n        this.m_angularImpulse = 0;\r\n        this.m_maxForce = 0;\r\n        this.m_maxTorque = 0;\r\n        this.m_correctionFactor = 0.3;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_linearError = new b2Vec2();\r\n        this.m_angularError = 0;\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_linearMass = new b2Mat22();\r\n        this.m_angularMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_K = new b2Mat22();\r\n        this.m_linearOffset.Copy(b2Maybe(def.linearOffset, b2Vec2.ZERO));\r\n        this.m_linearImpulse.SetZero();\r\n        this.m_maxForce = b2Maybe(def.maxForce, 0);\r\n        this.m_maxTorque = b2Maybe(def.maxTorque, 0);\r\n        this.m_correctionFactor = b2Maybe(def.correctionFactor, 0.3);\r\n    }\r\n    GetAnchorA(out) {\r\n        const pos = this.m_bodyA.GetPosition();\r\n        out.x = pos.x;\r\n        out.y = pos.y;\r\n        return out;\r\n    }\r\n    GetAnchorB(out) {\r\n        const pos = this.m_bodyB.GetPosition();\r\n        out.x = pos.x;\r\n        out.y = pos.y;\r\n        return out;\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * m_linearImpulse;\r\n        return b2Vec2.MulSV(inv_dt, this.m_linearImpulse, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_angularImpulse;\r\n    }\r\n    SetLinearOffset(linearOffset) {\r\n        if (!b2Vec2.IsEqualToV(linearOffset, this.m_linearOffset)) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_linearOffset.Copy(linearOffset);\r\n        }\r\n    }\r\n    GetLinearOffset() {\r\n        return this.m_linearOffset;\r\n    }\r\n    SetAngularOffset(angularOffset) {\r\n        if (angularOffset !== this.m_angularOffset) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_angularOffset = angularOffset;\r\n        }\r\n    }\r\n    GetAngularOffset() {\r\n        return this.m_angularOffset;\r\n    }\r\n    SetMaxForce(force) {\r\n        // DEBUG: b2Assert(b2IsValid(force) && force >= 0);\r\n        this.m_maxForce = force;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetMaxTorque(torque) {\r\n        // DEBUG: b2Assert(b2IsValid(torque) && torque >= 0);\r\n        this.m_maxTorque = torque;\r\n    }\r\n    GetMaxTorque() {\r\n        return this.m_maxTorque;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective mass matrix.\r\n        // this.m_rA = b2Mul(qA, m_linearOffset - this.m_localCenterA);\r\n        const rA = b2Rot.MulRV(qA, b2Vec2.SubVV(this.m_linearOffset, this.m_localCenterA, b2Vec2.s_t0), this.m_rA);\r\n        // this.m_rB = b2Mul(qB, -this.m_localCenterB);\r\n        const rB = b2Rot.MulRV(qB, b2Vec2.NegV(this.m_localCenterB, b2Vec2.s_t0), this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Upper 2 by 2 of K for point to point\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n        K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n        // this.m_linearMass = K.GetInverse();\r\n        K.GetInverse(this.m_linearMass);\r\n        this.m_angularMass = iA + iB;\r\n        if (this.m_angularMass > 0) {\r\n            this.m_angularMass = 1 / this.m_angularMass;\r\n        }\r\n        // this.m_linearError = cB + rB - cA - rA;\r\n        b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), this.m_linearError);\r\n        this.m_angularError = aB - aA - this.m_angularOffset;\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            // this.m_linearImpulse *= data.step.dtRatio;\r\n            this.m_linearImpulse.SelfMul(data.step.dtRatio);\r\n            this.m_angularImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P(this.m_linearImpulse.x, this.m_linearImpulse.y);\r\n            const P = this.m_linearImpulse;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(rA, P) + this.m_angularImpulse);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(rB, P) + this.m_angularImpulse);\r\n        }\r\n        else {\r\n            this.m_linearImpulse.SetZero();\r\n            this.m_angularImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA; // vA is a reference\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB; // vB is a reference\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const h = data.step.dt;\r\n        const inv_h = data.step.inv_dt;\r\n        // Solve angular friction\r\n        {\r\n            const Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\r\n            let impulse = -this.m_angularMass * Cdot;\r\n            const oldImpulse = this.m_angularImpulse;\r\n            const maxImpulse = h * this.m_maxTorque;\r\n            this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_angularImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve linear friction\r\n        {\r\n            const rA = this.m_rA;\r\n            const rB = this.m_rB;\r\n            // b2Vec2 Cdot = vB + b2Vec2.CrossSV(wB, rB) - vA - b2Vec2.CrossSV(wA, rA) + inv_h * this.m_correctionFactor * this.m_linearError;\r\n            const Cdot_v2 = b2Vec2.AddVV(b2Vec2.SubVV(b2Vec2.AddVV(vB, b2Vec2.CrossSV(wB, rB, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.AddVV(vA, b2Vec2.CrossSV(wA, rA, b2Vec2.s_t1), b2Vec2.s_t1), b2Vec2.s_t2), b2Vec2.MulSV(inv_h * this.m_correctionFactor, this.m_linearError, b2Vec2.s_t3), b2MotorJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = -b2Mul(this.m_linearMass, Cdot);\r\n            const impulse_v2 = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2MotorJoint.SolveVelocityConstraints_s_impulse_v2).SelfNeg();\r\n            // b2Vec2 oldImpulse = this.m_linearImpulse;\r\n            const oldImpulse_v2 = b2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2.Copy(this.m_linearImpulse);\r\n            // this.m_linearImpulse += impulse;\r\n            this.m_linearImpulse.SelfAdd(impulse_v2);\r\n            const maxImpulse = h * this.m_maxForce;\r\n            if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n                this.m_linearImpulse.Normalize();\r\n                // this.m_linearImpulse *= maxImpulse;\r\n                this.m_linearImpulse.SelfMul(maxImpulse);\r\n            }\r\n            // impulse = this.m_linearImpulse - oldImpulse;\r\n            b2Vec2.SubVV(this.m_linearImpulse, oldImpulse_v2, impulse_v2);\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulse_v2);\r\n            // wA -= iA * b2Vec2.CrossVV(rA, impulse);\r\n            wA -= iA * b2Vec2.CrossVV(rA, impulse_v2);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulse_v2);\r\n            // wB += iB * b2Vec2.CrossVV(rB, impulse);\r\n            wB += iB * b2Vec2.CrossVV(rB, impulse_v2);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA; // vA is a reference\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB; // vB is a reference\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2MotorJointDef = new b2MotorJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.linearOffset.Set(%.15f, %.15f);\\n\", this.m_linearOffset.x, this.m_linearOffset.y);\r\n        log(\"  jd.angularOffset = %.15f;\\n\", this.m_angularOffset);\r\n        log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\r\n        log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\r\n        log(\"  jd.correctionFactor = %.15f;\\n\", this.m_correctionFactor);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2MotorJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2MotorJoint.SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\r\nb2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert, b2_epsilon } from \"../../Common/b2Settings\";\r\n// DEBUG: import { b2IsValid } from \"../../Common/b2Math\";\r\nimport { b2_pi, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Mat22, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Mouse joint definition. This requires a world target point,\r\n/// tuning parameters, and the time step.\r\nexport class b2MouseJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_mouseJoint);\r\n        this.target = new b2Vec2();\r\n        this.maxForce = 0;\r\n        this.frequencyHz = 5;\r\n        this.dampingRatio = 0.7;\r\n    }\r\n}\r\nexport class b2MouseJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_targetA = new b2Vec2();\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_beta = 0;\r\n        // Solver shared\r\n        this.m_impulse = new b2Vec2();\r\n        this.m_maxForce = 0;\r\n        this.m_gamma = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassB = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = new b2Mat22();\r\n        this.m_C = new b2Vec2();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        this.m_targetA.Copy(b2Maybe(def.target, b2Vec2.ZERO));\r\n        // DEBUG: b2Assert(this.m_targetA.IsValid());\r\n        b2Transform.MulTXV(this.m_bodyB.GetTransform(), this.m_targetA, this.m_localAnchorB);\r\n        this.m_maxForce = b2Maybe(def.maxForce, 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_maxForce) && this.m_maxForce >= 0);\r\n        this.m_impulse.SetZero();\r\n        this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_frequencyHz) && this.m_frequencyHz >= 0);\r\n        this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_dampingRatio) && this.m_dampingRatio >= 0);\r\n        this.m_beta = 0;\r\n        this.m_gamma = 0;\r\n    }\r\n    SetTarget(target) {\r\n        if (!this.m_bodyB.IsAwake()) {\r\n            this.m_bodyB.SetAwake(true);\r\n        }\r\n        this.m_targetA.Copy(target);\r\n    }\r\n    GetTarget() {\r\n        return this.m_targetA;\r\n    }\r\n    SetMaxForce(maxForce) {\r\n        this.m_maxForce = maxForce;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qB = this.m_qB.SetAngle(aB);\r\n        const mass = this.m_bodyB.GetMass();\r\n        // Frequency\r\n        const omega = 2 * b2_pi * this.m_frequencyHz;\r\n        // Damping coefficient\r\n        const d = 2 * mass * this.m_dampingRatio * omega;\r\n        // Spring stiffness\r\n        const k = mass * (omega * omega);\r\n        // magic formulas\r\n        // gamma has units of inverse mass.\r\n        // beta has units of inverse time.\r\n        const h = data.step.dt;\r\n        // DEBUG: b2Assert(d + h * k > b2_epsilon);\r\n        this.m_gamma = h * (d + h * k);\r\n        if (this.m_gamma !== 0) {\r\n            this.m_gamma = 1 / this.m_gamma;\r\n        }\r\n        this.m_beta = h * k * this.m_gamma;\r\n        // Compute the effective mass matrix.\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // K    = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) * invI2 * skew(r2)]\r\n        //      = [1/m1+1/m2     0    ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y -r1.x*r1.y]\r\n        //        [    0     1/m1+1/m2]           [-r1.x*r1.y r1.x*r1.x]           [-r1.x*r1.y r1.x*r1.x]\r\n        const K = this.m_K;\r\n        K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y + this.m_gamma;\r\n        K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x + this.m_gamma;\r\n        K.GetInverse(this.m_mass);\r\n        // m_C = cB + m_rB - m_targetA;\r\n        this.m_C.x = cB.x + this.m_rB.x - this.m_targetA.x;\r\n        this.m_C.y = cB.y + this.m_rB.y - this.m_targetA.y;\r\n        // m_C *= m_beta;\r\n        this.m_C.SelfMul(this.m_beta);\r\n        // Cheat with some damping\r\n        wB *= 0.98;\r\n        if (data.step.warmStarting) {\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            // vB += m_invMassB * m_impulse;\r\n            vB.x += this.m_invMassB * this.m_impulse.x;\r\n            vB.y += this.m_invMassB * this.m_impulse.y;\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, this.m_impulse);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n        }\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Cdot = v + cross(w, r)\r\n        // b2Vec2 Cdot = vB + b2Cross(wB, m_rB);\r\n        const Cdot = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2MouseJoint.SolveVelocityConstraints_s_Cdot);\r\n        //  b2Vec2 impulse = b2Mul(m_mass, -(Cdot + m_C + m_gamma * m_impulse));\r\n        const impulse = b2Mat22.MulMV(this.m_mass, b2Vec2.AddVV(Cdot, b2Vec2.AddVV(this.m_C, b2Vec2.MulSV(this.m_gamma, this.m_impulse, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0).SelfNeg(), b2MouseJoint.SolveVelocityConstraints_s_impulse);\r\n        // b2Vec2 oldImpulse = m_impulse;\r\n        const oldImpulse = b2MouseJoint.SolveVelocityConstraints_s_oldImpulse.Copy(this.m_impulse);\r\n        // m_impulse += impulse;\r\n        this.m_impulse.SelfAdd(impulse);\r\n        const maxImpulse = data.step.dt * this.m_maxForce;\r\n        if (this.m_impulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n            this.m_impulse.SelfMul(maxImpulse / this.m_impulse.Length());\r\n        }\r\n        // impulse = m_impulse - oldImpulse;\r\n        b2Vec2.SubVV(this.m_impulse, oldImpulse, impulse);\r\n        // vB += m_invMassB * impulse;\r\n        vB.SelfMulAdd(this.m_invMassB, impulse);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, impulse);\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    GetAnchorA(out) {\r\n        out.x = this.m_targetA.x;\r\n        out.y = this.m_targetA.y;\r\n        return out;\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return b2Vec2.MulSV(inv_dt, this.m_impulse, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"Mouse joint dumping is not supported.\\n\");\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_targetA.SelfSub(newOrigin);\r\n    }\r\n}\r\nb2MouseJoint.SolveVelocityConstraints_s_Cdot = new b2Vec2();\r\nb2MouseJoint.SolveVelocityConstraints_s_impulse = new b2Vec2();\r\nb2MouseJoint.SolveVelocityConstraints_s_oldImpulse = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxLinearCorrection, b2_angularSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Clamp, b2Vec2, b2Mat22, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Prismatic joint definition. This requires defining a line of\r\n/// motion using an axis and an anchor point. The definition uses local\r\n/// anchor points and a local axis so that the initial configuration\r\n/// can violate the constraint slightly. The joint translation is zero\r\n/// when the local anchor points coincide in world space. Using local\r\n/// anchors and a local axis helps when saving and loading a game.\r\nexport class b2PrismaticJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_prismaticJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.localAxisA = new b2Vec2(1, 0);\r\n        this.referenceAngle = 0;\r\n        this.enableLimit = false;\r\n        this.lowerTranslation = 0;\r\n        this.upperTranslation = 0;\r\n        this.enableMotor = false;\r\n        this.maxMotorForce = 0;\r\n        this.motorSpeed = 0;\r\n    }\r\n    Initialize(bA, bB, anchor, axis) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.bodyA.GetLocalVector(axis, this.localAxisA);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2PrismaticJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localXAxisA = new b2Vec2();\r\n        this.m_localYAxisA = new b2Vec2();\r\n        this.m_referenceAngle = 0;\r\n        this.m_impulse = new b2Vec3(0, 0, 0);\r\n        this.m_motorImpulse = 0;\r\n        this.m_lowerTranslation = 0;\r\n        this.m_upperTranslation = 0;\r\n        this.m_maxMotorForce = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableLimit = false;\r\n        this.m_enableMotor = false;\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_axis = new b2Vec2(0, 0);\r\n        this.m_perp = new b2Vec2(0, 0);\r\n        this.m_s1 = 0;\r\n        this.m_s2 = 0;\r\n        this.m_a1 = 0;\r\n        this.m_a2 = 0;\r\n        this.m_K = new b2Mat33();\r\n        this.m_K3 = new b2Mat33();\r\n        this.m_K2 = new b2Mat22();\r\n        this.m_motorMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n        this.m_localXAxisA.Copy(b2Maybe(def.localAxisA, new b2Vec2(1, 0))).SelfNormalize();\r\n        b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\r\n        this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\r\n        this.m_lowerTranslation = b2Maybe(def.lowerTranslation, 0);\r\n        this.m_upperTranslation = b2Maybe(def.upperTranslation, 0);\r\n        this.m_maxMotorForce = b2Maybe(def.maxMotorForce, 0);\r\n        this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\r\n        this.m_enableLimit = b2Maybe(def.enableLimit, false);\r\n        this.m_enableMotor = b2Maybe(def.enableMotor, false);\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective masses.\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = (cB - cA) + rB - rA;\r\n        const d = b2Vec2.AddVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), b2Vec2.SubVV(rB, rA, b2Vec2.s_t1), b2PrismaticJoint.InitVelocityConstraints_s_d);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Compute motor Jacobian and effective mass.\r\n        {\r\n            // m_axis = b2Mul(qA, m_localXAxisA);\r\n            b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\r\n            // m_a1 = b2Cross(d + rA, m_axis);\r\n            this.m_a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_axis);\r\n            // m_a2 = b2Cross(rB, m_axis);\r\n            this.m_a2 = b2Vec2.CrossVV(rB, this.m_axis);\r\n            this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\r\n            if (this.m_motorMass > 0) {\r\n                this.m_motorMass = 1 / this.m_motorMass;\r\n            }\r\n        }\r\n        // Prismatic constraint.\r\n        {\r\n            // m_perp = b2Mul(qA, m_localYAxisA);\r\n            b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\r\n            // m_s1 = b2Cross(d + rA, m_perp);\r\n            this.m_s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_perp);\r\n            // m_s2 = b2Cross(rB, m_perp);\r\n            this.m_s2 = b2Vec2.CrossVV(rB, this.m_perp);\r\n            // float32 k11 = mA + mB + iA * m_s1 * m_s1 + iB * m_s2 * m_s2;\r\n            this.m_K.ex.x = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\r\n            // float32 k12 = iA * m_s1 + iB * m_s2;\r\n            this.m_K.ex.y = iA * this.m_s1 + iB * this.m_s2;\r\n            // float32 k13 = iA * m_s1 * m_a1 + iB * m_s2 * m_a2;\r\n            this.m_K.ex.z = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\r\n            this.m_K.ey.x = this.m_K.ex.y;\r\n            // float32 k22 = iA + iB;\r\n            this.m_K.ey.y = iA + iB;\r\n            if (this.m_K.ey.y === 0) {\r\n                // For bodies with fixed rotation.\r\n                this.m_K.ey.y = 1;\r\n            }\r\n            // float32 k23 = iA * m_a1 + iB * m_a2;\r\n            this.m_K.ey.z = iA * this.m_a1 + iB * this.m_a2;\r\n            this.m_K.ez.x = this.m_K.ex.z;\r\n            this.m_K.ez.y = this.m_K.ey.z;\r\n            // float32 k33 = mA + mB + iA * m_a1 * m_a1 + iB * m_a2 * m_a2;\r\n            this.m_K.ez.z = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\r\n            // m_K.ex.Set(k11, k12, k13);\r\n            // m_K.ey.Set(k12, k22, k23);\r\n            // m_K.ez.Set(k13, k23, k33);\r\n        }\r\n        // Compute motor and limit terms.\r\n        if (this.m_enableLimit) {\r\n            // float32 jointTranslation = b2Dot(m_axis, d);\r\n            const jointTranslation = b2Vec2.DotVV(this.m_axis, d);\r\n            if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\r\n                this.m_limitState = b2LimitState.e_equalLimits;\r\n            }\r\n            else if (jointTranslation <= this.m_lowerTranslation) {\r\n                if (this.m_limitState !== b2LimitState.e_atLowerLimit) {\r\n                    this.m_limitState = b2LimitState.e_atLowerLimit;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n            }\r\n            else if (jointTranslation >= this.m_upperTranslation) {\r\n                if (this.m_limitState !== b2LimitState.e_atUpperLimit) {\r\n                    this.m_limitState = b2LimitState.e_atUpperLimit;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n            }\r\n            else {\r\n                this.m_limitState = b2LimitState.e_inactiveLimit;\r\n                this.m_impulse.z = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.m_limitState = b2LimitState.e_inactiveLimit;\r\n            this.m_impulse.z = 0;\r\n        }\r\n        if (!this.m_enableMotor) {\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Account for variable time step.\r\n            // m_impulse *= data.step.dtRatio;\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse.x * m_perp + (m_motorImpulse + m_impulse.z) * m_axis;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(this.m_impulse.x, this.m_perp, b2Vec2.s_t0), b2Vec2.MulSV((this.m_motorImpulse + this.m_impulse.z), this.m_axis, b2Vec2.s_t1), b2PrismaticJoint.InitVelocityConstraints_s_P);\r\n            // float32 LA = m_impulse.x * m_s1 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a1;\r\n            const LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\r\n            // float32 LB = m_impulse.x * m_s2 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a2;\r\n            const LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Solve linear motor constraint.\r\n        if (this.m_enableMotor && this.m_limitState !== b2LimitState.e_equalLimits) {\r\n            // float32 Cdot = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\r\n            const Cdot = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\r\n            let impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorForce;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            // b2Vec2 P = impulse * m_axis;\r\n            const P = b2Vec2.MulSV(impulse, this.m_axis, b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_a1;\r\n            const LB = impulse * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // b2Vec2 Cdot1;\r\n        // Cdot1.x = b2Dot(m_perp, vB - vA) + m_s2 * wB - m_s1 * wA;\r\n        const Cdot1_x = b2Vec2.DotVV(this.m_perp, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_s2 * wB - this.m_s1 * wA;\r\n        // Cdot1.y = wB - wA;\r\n        const Cdot1_y = wB - wA;\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit) {\r\n            // Solve prismatic and limit constraint in block form.\r\n            // float32 Cdot2;\r\n            // Cdot2 = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\r\n            const Cdot2 = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\r\n            // b2Vec3 Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 f1 = m_impulse;\r\n            const f1 = b2PrismaticJoint.SolveVelocityConstraints_s_f1.Copy(this.m_impulse);\r\n            // b2Vec3 df =  m_K.Solve33(-Cdot);\r\n            const df3 = this.m_K.Solve33((-Cdot1_x), (-Cdot1_y), (-Cdot2), b2PrismaticJoint.SolveVelocityConstraints_s_df3);\r\n            // m_impulse += df;\r\n            this.m_impulse.SelfAdd(df3);\r\n            if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                this.m_impulse.z = b2Max(this.m_impulse.z, 0);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                this.m_impulse.z = b2Min(this.m_impulse.z, 0);\r\n            }\r\n            // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) + f1(1:2)\r\n            // b2Vec2 b = -Cdot1 - (m_impulse.z - f1.z) * b2Vec2(m_K.ez.x, m_K.ez.y);\r\n            const b_x = (-Cdot1_x) - (this.m_impulse.z - f1.z) * this.m_K.ez.x;\r\n            const b_y = (-Cdot1_y) - (this.m_impulse.z - f1.z) * this.m_K.ez.y;\r\n            // b2Vec2 f2r = m_K.Solve22(b) + b2Vec2(f1.x, f1.y);\r\n            const f2r = this.m_K.Solve22(b_x, b_y, b2PrismaticJoint.SolveVelocityConstraints_s_f2r);\r\n            f2r.x += f1.x;\r\n            f2r.y += f1.y;\r\n            // m_impulse.x = f2r.x;\r\n            this.m_impulse.x = f2r.x;\r\n            // m_impulse.y = f2r.y;\r\n            this.m_impulse.y = f2r.y;\r\n            // df = m_impulse - f1;\r\n            df3.x = this.m_impulse.x - f1.x;\r\n            df3.y = this.m_impulse.y - f1.y;\r\n            df3.z = this.m_impulse.z - f1.z;\r\n            // b2Vec2 P = df.x * m_perp + df.z * m_axis;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(df3.x, this.m_perp, b2Vec2.s_t0), b2Vec2.MulSV(df3.z, this.m_axis, b2Vec2.s_t1), b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            // float32 LA = df.x * m_s1 + df.y + df.z * m_a1;\r\n            const LA = df3.x * this.m_s1 + df3.y + df3.z * this.m_a1;\r\n            // float32 LB = df.x * m_s2 + df.y + df.z * m_a2;\r\n            const LB = df3.x * this.m_s2 + df3.y + df3.z * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        else {\r\n            // Limit is inactive, just solve the prismatic constraint in block form.\r\n            // b2Vec2 df = m_K.Solve22(-Cdot1);\r\n            const df2 = this.m_K.Solve22((-Cdot1_x), (-Cdot1_y), b2PrismaticJoint.SolveVelocityConstraints_s_df2);\r\n            this.m_impulse.x += df2.x;\r\n            this.m_impulse.y += df2.y;\r\n            // b2Vec2 P = df.x * m_perp;\r\n            const P = b2Vec2.MulSV(df2.x, this.m_perp, b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            // float32 LA = df.x * m_s1 + df.y;\r\n            const LA = df2.x * this.m_s1 + df2.y;\r\n            // float32 LB = df.x * m_s2 + df.y;\r\n            const LB = df2.x * this.m_s2 + df2.y;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = cB + rB - cA - rA;\r\n        const d = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2PrismaticJoint.SolvePositionConstraints_s_d);\r\n        // b2Vec2 axis = b2Mul(qA, m_localXAxisA);\r\n        const axis = b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\r\n        // float32 a1 = b2Cross(d + rA, axis);\r\n        const a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), axis);\r\n        // float32 a2 = b2Cross(rB, axis);\r\n        const a2 = b2Vec2.CrossVV(rB, axis);\r\n        // b2Vec2 perp = b2Mul(qA, m_localYAxisA);\r\n        const perp = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\r\n        // float32 s1 = b2Cross(d + rA, perp);\r\n        const s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), perp);\r\n        // float32 s2 = b2Cross(rB, perp);\r\n        const s2 = b2Vec2.CrossVV(rB, perp);\r\n        // b2Vec3 impulse;\r\n        let impulse = b2PrismaticJoint.SolvePositionConstraints_s_impulse;\r\n        // b2Vec2 C1;\r\n        // C1.x = b2Dot(perp, d);\r\n        const C1_x = b2Vec2.DotVV(perp, d);\r\n        // C1.y = aB - aA - m_referenceAngle;\r\n        const C1_y = aB - aA - this.m_referenceAngle;\r\n        let linearError = b2Abs(C1_x);\r\n        const angularError = b2Abs(C1_y);\r\n        let active = false;\r\n        let C2 = 0;\r\n        if (this.m_enableLimit) {\r\n            // float32 translation = b2Dot(axis, d);\r\n            const translation = b2Vec2.DotVV(axis, d);\r\n            if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\r\n                // Prevent large angular corrections\r\n                C2 = b2Clamp(translation, (-b2_maxLinearCorrection), b2_maxLinearCorrection);\r\n                linearError = b2Max(linearError, b2Abs(translation));\r\n                active = true;\r\n            }\r\n            else if (translation <= this.m_lowerTranslation) {\r\n                // Prevent large linear corrections and allow some slop.\r\n                C2 = b2Clamp(translation - this.m_lowerTranslation + b2_linearSlop, (-b2_maxLinearCorrection), 0);\r\n                linearError = b2Max(linearError, this.m_lowerTranslation - translation);\r\n                active = true;\r\n            }\r\n            else if (translation >= this.m_upperTranslation) {\r\n                // Prevent large linear corrections and allow some slop.\r\n                C2 = b2Clamp(translation - this.m_upperTranslation - b2_linearSlop, 0, b2_maxLinearCorrection);\r\n                linearError = b2Max(linearError, translation - this.m_upperTranslation);\r\n                active = true;\r\n            }\r\n        }\r\n        if (active) {\r\n            // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            // float32 k12 = iA * s1 + iB * s2;\r\n            const k12 = iA * s1 + iB * s2;\r\n            // float32 k13 = iA * s1 * a1 + iB * s2 * a2;\r\n            const k13 = iA * s1 * a1 + iB * s2 * a2;\r\n            // float32 k22 = iA + iB;\r\n            let k22 = iA + iB;\r\n            if (k22 === 0) {\r\n                // For fixed rotation\r\n                k22 = 1;\r\n            }\r\n            // float32 k23 = iA * a1 + iB * a2;\r\n            const k23 = iA * a1 + iB * a2;\r\n            // float32 k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\r\n            const k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\r\n            // b2Mat33 K;\r\n            const K = this.m_K3;\r\n            // K.ex.Set(k11, k12, k13);\r\n            K.ex.SetXYZ(k11, k12, k13);\r\n            // K.ey.Set(k12, k22, k23);\r\n            K.ey.SetXYZ(k12, k22, k23);\r\n            // K.ez.Set(k13, k23, k33);\r\n            K.ez.SetXYZ(k13, k23, k33);\r\n            // b2Vec3 C;\r\n            // C.x = C1.x;\r\n            // C.y = C1.y;\r\n            // C.z = C2;\r\n            // impulse = K.Solve33(-C);\r\n            impulse = K.Solve33((-C1_x), (-C1_y), (-C2), impulse);\r\n        }\r\n        else {\r\n            // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            // float32 k12 = iA * s1 + iB * s2;\r\n            const k12 = iA * s1 + iB * s2;\r\n            // float32 k22 = iA + iB;\r\n            let k22 = iA + iB;\r\n            if (k22 === 0) {\r\n                k22 = 1;\r\n            }\r\n            // b2Mat22 K;\r\n            const K2 = this.m_K2;\r\n            // K.ex.Set(k11, k12);\r\n            K2.ex.Set(k11, k12);\r\n            // K.ey.Set(k12, k22);\r\n            K2.ey.Set(k12, k22);\r\n            // b2Vec2 impulse1 = K.Solve(-C1);\r\n            const impulse1 = K2.Solve((-C1_x), (-C1_y), b2PrismaticJoint.SolvePositionConstraints_s_impulse1);\r\n            impulse.x = impulse1.x;\r\n            impulse.y = impulse1.y;\r\n            impulse.z = 0;\r\n        }\r\n        // b2Vec2 P = impulse.x * perp + impulse.z * axis;\r\n        const P = b2Vec2.AddVV(b2Vec2.MulSV(impulse.x, perp, b2Vec2.s_t0), b2Vec2.MulSV(impulse.z, axis, b2Vec2.s_t1), b2PrismaticJoint.SolvePositionConstraints_s_P);\r\n        // float32 LA = impulse.x * s1 + impulse.y + impulse.z * a1;\r\n        const LA = impulse.x * s1 + impulse.y + impulse.z * a1;\r\n        // float32 LB = impulse.x * s2 + impulse.y + impulse.z * a2;\r\n        const LB = impulse.x * s2 + impulse.y + impulse.z * a2;\r\n        // cA -= mA * P;\r\n        cA.SelfMulSub(mA, P);\r\n        aA -= iA * LA;\r\n        // cB += mB * P;\r\n        cB.SelfMulAdd(mB, P);\r\n        aB += iB * LB;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return linearError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * (m_impulse.x * m_perp + (m_motorImpulse + m_impulse.z) * m_axis);\r\n        out.x = inv_dt * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x);\r\n        out.y = inv_dt * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y);\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.y;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetLocalAxisA() { return this.m_localXAxisA; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    GetJointTranslation() {\r\n        // b2Vec2 pA = m_bodyA.GetWorldPoint(m_localAnchorA);\r\n        const pA = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PrismaticJoint.GetJointTranslation_s_pA);\r\n        // b2Vec2 pB = m_bodyB.GetWorldPoint(m_localAnchorB);\r\n        const pB = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PrismaticJoint.GetJointTranslation_s_pB);\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2PrismaticJoint.GetJointTranslation_s_d);\r\n        // b2Vec2 axis = m_bodyA.GetWorldVector(m_localXAxisA);\r\n        const axis = this.m_bodyA.GetWorldVector(this.m_localXAxisA, b2PrismaticJoint.GetJointTranslation_s_axis);\r\n        // float32 translation = b2Dot(d, axis);\r\n        const translation = b2Vec2.DotVV(d, axis);\r\n        return translation;\r\n    }\r\n    GetJointSpeed() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 pA = bA->m_sweep.c + rA;\r\n        const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\r\n        // b2Vec2 pB = bB->m_sweep.c + rB;\r\n        const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\r\n        // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, this.m_axis);\r\n        const vA = bA.m_linearVelocity;\r\n        const vB = bB.m_linearVelocity;\r\n        const wA = bA.m_angularVelocity;\r\n        const wB = bB.m_angularVelocity;\r\n        // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\r\n        const speed = b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(axis, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n        return speed;\r\n    }\r\n    IsLimitEnabled() {\r\n        return this.m_enableLimit;\r\n    }\r\n    EnableLimit(flag) {\r\n        if (flag !== this.m_enableLimit) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableLimit = flag;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    GetLowerLimit() {\r\n        return this.m_lowerTranslation;\r\n    }\r\n    GetUpperLimit() {\r\n        return this.m_upperTranslation;\r\n    }\r\n    SetLimits(lower, upper) {\r\n        if (lower !== this.m_lowerTranslation || upper !== this.m_upperTranslation) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_lowerTranslation = lower;\r\n            this.m_upperTranslation = upper;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        if (flag !== this.m_enableMotor) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableMotor = flag;\r\n        }\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        if (speed !== this.m_motorSpeed) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_motorSpeed = speed;\r\n        }\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    SetMaxMotorForce(force) {\r\n        if (force !== this.m_maxMotorForce) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_maxMotorForce = force;\r\n        }\r\n    }\r\n    GetMaxMotorForce() { return this.m_maxMotorForce; }\r\n    GetMotorForce(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2PrismaticJointDef = new b2PrismaticJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.lowerTranslation = %.15f;\\n\", this.m_lowerTranslation);\r\n        log(\"  jd.upperTranslation = %.15f;\\n\", this.m_upperTranslation);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorForce = %.15f;\\n\", this.m_maxMotorForce);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2PrismaticJoint.InitVelocityConstraints_s_d = new b2Vec2();\r\nb2PrismaticJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_f2r = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_f1 = new b2Vec3();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_df3 = new b2Vec3();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_df2 = new b2Vec2();\r\n// A velocity based solver computes reaction forces(impulses) using the velocity constraint solver.Under this context,\r\n// the position solver is not there to resolve forces.It is only there to cope with integration error.\r\n//\r\n// Therefore, the pseudo impulses in the position solver do not have any physical meaning.Thus it is okay if they suck.\r\n//\r\n// We could take the active state from the velocity solver.However, the joint might push past the limit when the velocity\r\n// solver indicates the limit is inactive.\r\nb2PrismaticJoint.SolvePositionConstraints_s_d = new b2Vec2();\r\nb2PrismaticJoint.SolvePositionConstraints_s_impulse = new b2Vec3();\r\nb2PrismaticJoint.SolvePositionConstraints_s_impulse1 = new b2Vec2();\r\nb2PrismaticJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_pA = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_pB = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_d = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_axis = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert, b2_epsilon } from \"../../Common/b2Settings\";\r\nimport { b2_linearSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\nexport const b2_minPulleyLength = 2;\r\n/// Pulley joint definition. This requires two ground anchors,\r\n/// two dynamic body anchor points, and a pulley ratio.\r\nexport class b2PulleyJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_pulleyJoint);\r\n        this.groundAnchorA = new b2Vec2(-1, 1);\r\n        this.groundAnchorB = new b2Vec2(1, 1);\r\n        this.localAnchorA = new b2Vec2(-1, 0);\r\n        this.localAnchorB = new b2Vec2(1, 0);\r\n        this.lengthA = 0;\r\n        this.lengthB = 0;\r\n        this.ratio = 1;\r\n        this.collideConnected = true;\r\n    }\r\n    Initialize(bA, bB, groundA, groundB, anchorA, anchorB, r) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.groundAnchorA.Copy(groundA);\r\n        this.groundAnchorB.Copy(groundB);\r\n        this.bodyA.GetLocalPoint(anchorA, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchorB, this.localAnchorB);\r\n        this.lengthA = b2Vec2.DistanceVV(anchorA, groundA);\r\n        this.lengthB = b2Vec2.DistanceVV(anchorB, groundB);\r\n        this.ratio = r;\r\n        // DEBUG: b2Assert(this.ratio > b2_epsilon);\r\n    }\r\n}\r\nexport class b2PulleyJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_groundAnchorA = new b2Vec2();\r\n        this.m_groundAnchorB = new b2Vec2();\r\n        this.m_lengthA = 0;\r\n        this.m_lengthB = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_constant = 0;\r\n        this.m_ratio = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_uA = new b2Vec2();\r\n        this.m_uB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_groundAnchorA.Copy(b2Maybe(def.groundAnchorA, new b2Vec2(-1, 1)));\r\n        this.m_groundAnchorB.Copy(b2Maybe(def.groundAnchorB, new b2Vec2(1, 0)));\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, new b2Vec2(-1, 0)));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, new b2Vec2(1, 0)));\r\n        this.m_lengthA = b2Maybe(def.lengthA, 0);\r\n        this.m_lengthB = b2Maybe(def.lengthB, 0);\r\n        // DEBUG: b2Assert(b2Maybe(def.ratio, 1) !== 0);\r\n        this.m_ratio = b2Maybe(def.ratio, 1);\r\n        this.m_constant = b2Maybe(def.lengthA, 0) + this.m_ratio * b2Maybe(def.lengthB, 0);\r\n        this.m_impulse = 0;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // Get the pulley axes.\r\n        // m_uA = cA + m_rA - m_groundAnchorA;\r\n        this.m_uA.Copy(cA).SelfAdd(this.m_rA).SelfSub(this.m_groundAnchorA);\r\n        // m_uB = cB + m_rB - m_groundAnchorB;\r\n        this.m_uB.Copy(cB).SelfAdd(this.m_rB).SelfSub(this.m_groundAnchorB);\r\n        const lengthA = this.m_uA.Length();\r\n        const lengthB = this.m_uB.Length();\r\n        if (lengthA > 10 * b2_linearSlop) {\r\n            this.m_uA.SelfMul(1 / lengthA);\r\n        }\r\n        else {\r\n            this.m_uA.SetZero();\r\n        }\r\n        if (lengthB > 10 * b2_linearSlop) {\r\n            this.m_uB.SelfMul(1 / lengthB);\r\n        }\r\n        else {\r\n            this.m_uB.SetZero();\r\n        }\r\n        // Compute effective mass.\r\n        const ruA = b2Vec2.CrossVV(this.m_rA, this.m_uA);\r\n        const ruB = b2Vec2.CrossVV(this.m_rB, this.m_uB);\r\n        const mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n        const mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n        this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\r\n        if (this.m_mass > 0) {\r\n            this.m_mass = 1 / this.m_mass;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support variable time steps.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // Warm starting.\r\n            // b2Vec2 PA = -(m_impulse) * m_uA;\r\n            const PA = b2Vec2.MulSV(-(this.m_impulse), this.m_uA, b2PulleyJoint.InitVelocityConstraints_s_PA);\r\n            // b2Vec2 PB = (-m_ratio * m_impulse) * m_uB;\r\n            const PB = b2Vec2.MulSV((-this.m_ratio * this.m_impulse), this.m_uB, b2PulleyJoint.InitVelocityConstraints_s_PB);\r\n            // vA += m_invMassA * PA;\r\n            vA.SelfMulAdd(this.m_invMassA, PA);\r\n            wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n            // vB += m_invMassB * PB;\r\n            vB.SelfMulAdd(this.m_invMassB, PB);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2PulleyJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2PulleyJoint.SolveVelocityConstraints_s_vpB);\r\n        const Cdot = -b2Vec2.DotVV(this.m_uA, vpA) - this.m_ratio * b2Vec2.DotVV(this.m_uB, vpB);\r\n        const impulse = -this.m_mass * Cdot;\r\n        this.m_impulse += impulse;\r\n        // b2Vec2 PA = -impulse * m_uA;\r\n        const PA = b2Vec2.MulSV(-impulse, this.m_uA, b2PulleyJoint.SolveVelocityConstraints_s_PA);\r\n        // b2Vec2 PB = -m_ratio * impulse * m_uB;\r\n        const PB = b2Vec2.MulSV(-this.m_ratio * impulse, this.m_uB, b2PulleyJoint.SolveVelocityConstraints_s_PB);\r\n        // vA += m_invMassA * PA;\r\n        vA.SelfMulAdd(this.m_invMassA, PA);\r\n        wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n        // vB += m_invMassB * PB;\r\n        vB.SelfMulAdd(this.m_invMassB, PB);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // Get the pulley axes.\r\n        // b2Vec2 uA = cA + rA - m_groundAnchorA;\r\n        const uA = this.m_uA.Copy(cA).SelfAdd(rA).SelfSub(this.m_groundAnchorA);\r\n        // b2Vec2 uB = cB + rB - m_groundAnchorB;\r\n        const uB = this.m_uB.Copy(cB).SelfAdd(rB).SelfSub(this.m_groundAnchorB);\r\n        const lengthA = uA.Length();\r\n        const lengthB = uB.Length();\r\n        if (lengthA > 10 * b2_linearSlop) {\r\n            uA.SelfMul(1 / lengthA);\r\n        }\r\n        else {\r\n            uA.SetZero();\r\n        }\r\n        if (lengthB > 10 * b2_linearSlop) {\r\n            uB.SelfMul(1 / lengthB);\r\n        }\r\n        else {\r\n            uB.SetZero();\r\n        }\r\n        // Compute effective mass.\r\n        const ruA = b2Vec2.CrossVV(rA, uA);\r\n        const ruB = b2Vec2.CrossVV(rB, uB);\r\n        const mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n        const mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n        let mass = mA + this.m_ratio * this.m_ratio * mB;\r\n        if (mass > 0) {\r\n            mass = 1 / mass;\r\n        }\r\n        const C = this.m_constant - lengthA - this.m_ratio * lengthB;\r\n        const linearError = b2Abs(C);\r\n        const impulse = -mass * C;\r\n        // b2Vec2 PA = -impulse * uA;\r\n        const PA = b2Vec2.MulSV(-impulse, uA, b2PulleyJoint.SolvePositionConstraints_s_PA);\r\n        // b2Vec2 PB = -m_ratio * impulse * uB;\r\n        const PB = b2Vec2.MulSV(-this.m_ratio * impulse, uB, b2PulleyJoint.SolvePositionConstraints_s_PB);\r\n        // cA += m_invMassA * PA;\r\n        cA.SelfMulAdd(this.m_invMassA, PA);\r\n        aA += this.m_invIA * b2Vec2.CrossVV(rA, PA);\r\n        // cB += m_invMassB * PB;\r\n        cB.SelfMulAdd(this.m_invMassB, PB);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, PB);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return linearError < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P = m_impulse * m_uB;\r\n        // return inv_dt * P;\r\n        out.x = inv_dt * this.m_impulse * this.m_uB.x;\r\n        out.y = inv_dt * this.m_impulse * this.m_uB.y;\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetGroundAnchorA() {\r\n        return this.m_groundAnchorA;\r\n    }\r\n    GetGroundAnchorB() {\r\n        return this.m_groundAnchorB;\r\n    }\r\n    GetLengthA() {\r\n        return this.m_lengthA;\r\n    }\r\n    GetLengthB() {\r\n        return this.m_lengthB;\r\n    }\r\n    GetRatio() {\r\n        return this.m_ratio;\r\n    }\r\n    GetCurrentLengthA() {\r\n        // b2Vec2 p = m_bodyA->GetWorldPoint(m_localAnchorA);\r\n        // b2Vec2 s = m_groundAnchorA;\r\n        // b2Vec2 d = p - s;\r\n        // return d.Length();\r\n        const p = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PulleyJoint.GetCurrentLengthA_s_p);\r\n        const s = this.m_groundAnchorA;\r\n        return b2Vec2.DistanceVV(p, s);\r\n    }\r\n    GetCurrentLengthB() {\r\n        // b2Vec2 p = m_bodyB->GetWorldPoint(m_localAnchorB);\r\n        // b2Vec2 s = m_groundAnchorB;\r\n        // b2Vec2 d = p - s;\r\n        // return d.Length();\r\n        const p = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PulleyJoint.GetCurrentLengthB_s_p);\r\n        const s = this.m_groundAnchorB;\r\n        return b2Vec2.DistanceVV(p, s);\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2PulleyJointDef = new b2PulleyJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.groundAnchorA.Set(%.15f, %.15f);\\n\", this.m_groundAnchorA.x, this.m_groundAnchorA.y);\r\n        log(\"  jd.groundAnchorB.Set(%.15f, %.15f);\\n\", this.m_groundAnchorB.x, this.m_groundAnchorB.y);\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.lengthA = %.15f;\\n\", this.m_lengthA);\r\n        log(\"  jd.lengthB = %.15f;\\n\", this.m_lengthB);\r\n        log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_groundAnchorA.SelfSub(newOrigin);\r\n        this.m_groundAnchorB.SelfSub(newOrigin);\r\n    }\r\n}\r\nb2PulleyJoint.InitVelocityConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.InitVelocityConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.SolvePositionConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.SolvePositionConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.GetCurrentLengthA_s_p = new b2Vec2();\r\nb2PulleyJoint.GetCurrentLengthB_s_p = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_angularSlop, b2_maxAngularCorrection, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Mat22, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Revolute joint definition. This requires defining an\r\n/// anchor point where the bodies are joined. The definition\r\n/// uses local anchor points so that the initial configuration\r\n/// can violate the constraint slightly. You also need to\r\n/// specify the initial relative angle for joint limits. This\r\n/// helps when saving and loading a game.\r\n/// The local anchor points are measured from the body's origin\r\n/// rather than the center of mass because:\r\n/// 1. you might not know where the center of mass will be.\r\n/// 2. if you add/remove shapes from a body and recompute the mass,\r\n///    the joints will be broken.\r\nexport class b2RevoluteJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_revoluteJoint);\r\n        this.localAnchorA = new b2Vec2(0, 0);\r\n        this.localAnchorB = new b2Vec2(0, 0);\r\n        this.referenceAngle = 0;\r\n        this.enableLimit = false;\r\n        this.lowerAngle = 0;\r\n        this.upperAngle = 0;\r\n        this.enableMotor = false;\r\n        this.motorSpeed = 0;\r\n        this.maxMotorTorque = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2RevoluteJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_impulse = new b2Vec3();\r\n        this.m_motorImpulse = 0;\r\n        this.m_enableMotor = false;\r\n        this.m_maxMotorTorque = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableLimit = false;\r\n        this.m_referenceAngle = 0;\r\n        this.m_lowerAngle = 0;\r\n        this.m_upperAngle = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = new b2Mat33(); // effective mass for point-to-point constraint.\r\n        this.m_motorMass = 0; // effective mass for motor/limit angular constraint.\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n        this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\r\n        this.m_impulse.SetZero();\r\n        this.m_motorImpulse = 0;\r\n        this.m_lowerAngle = b2Maybe(def.lowerAngle, 0);\r\n        this.m_upperAngle = b2Maybe(def.upperAngle, 0);\r\n        this.m_maxMotorTorque = b2Maybe(def.maxMotorTorque, 0);\r\n        this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\r\n        this.m_enableLimit = b2Maybe(def.enableLimit, false);\r\n        this.m_enableMotor = b2Maybe(def.enableMotor, false);\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const fixedRotation = (iA + iB === 0);\r\n        this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\r\n        this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\r\n        this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\r\n        this.m_mass.ex.y = this.m_mass.ey.x;\r\n        this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\r\n        this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\r\n        this.m_mass.ex.z = this.m_mass.ez.x;\r\n        this.m_mass.ey.z = this.m_mass.ez.y;\r\n        this.m_mass.ez.z = iA + iB;\r\n        this.m_motorMass = iA + iB;\r\n        if (this.m_motorMass > 0) {\r\n            this.m_motorMass = 1 / this.m_motorMass;\r\n        }\r\n        if (!this.m_enableMotor || fixedRotation) {\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (this.m_enableLimit && !fixedRotation) {\r\n            const jointAngle = aB - aA - this.m_referenceAngle;\r\n            if (b2Abs(this.m_upperAngle - this.m_lowerAngle) < 2 * b2_angularSlop) {\r\n                this.m_limitState = b2LimitState.e_equalLimits;\r\n            }\r\n            else if (jointAngle <= this.m_lowerAngle) {\r\n                if (this.m_limitState !== b2LimitState.e_atLowerLimit) {\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                this.m_limitState = b2LimitState.e_atLowerLimit;\r\n            }\r\n            else if (jointAngle >= this.m_upperAngle) {\r\n                if (this.m_limitState !== b2LimitState.e_atUpperLimit) {\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                this.m_limitState = b2LimitState.e_atUpperLimit;\r\n            }\r\n            else {\r\n                this.m_limitState = b2LimitState.e_inactiveLimit;\r\n                this.m_impulse.z = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P(m_impulse.x, m_impulse.y);\r\n            const P = b2RevoluteJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const fixedRotation = (iA + iB === 0);\r\n        // Solve motor constraint.\r\n        if (this.m_enableMotor && this.m_limitState !== b2LimitState.e_equalLimits && !fixedRotation) {\r\n            const Cdot = wB - wA - this.m_motorSpeed;\r\n            let impulse = -this.m_motorMass * Cdot;\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorTorque;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve limit constraint.\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit && !fixedRotation) {\r\n            // b2Vec2 Cdot1 = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2RevoluteJoint.SolveVelocityConstraints_s_Cdot1);\r\n            const Cdot2 = wB - wA;\r\n            // b2Vec3 Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 impulse = -this.m_mass.Solve33(Cdot);\r\n            const impulse_v3 = this.m_mass.Solve33(Cdot1.x, Cdot1.y, Cdot2, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v3).SelfNeg();\r\n            if (this.m_limitState === b2LimitState.e_equalLimits) {\r\n                this.m_impulse.SelfAdd(impulse_v3);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                const newImpulse = this.m_impulse.z + impulse_v3.z;\r\n                if (newImpulse < 0) {\r\n                    // b2Vec2 rhs = -Cdot1 + m_impulse.z * b2Vec2(m_mass.ez.x, m_mass.ez.y);\r\n                    const rhs_x = -Cdot1.x + this.m_impulse.z * this.m_mass.ez.x;\r\n                    const rhs_y = -Cdot1.y + this.m_impulse.z * this.m_mass.ez.y;\r\n                    const reduced_v2 = this.m_mass.Solve22(rhs_x, rhs_y, b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2);\r\n                    impulse_v3.x = reduced_v2.x;\r\n                    impulse_v3.y = reduced_v2.y;\r\n                    impulse_v3.z = -this.m_impulse.z;\r\n                    this.m_impulse.x += reduced_v2.x;\r\n                    this.m_impulse.y += reduced_v2.y;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                else {\r\n                    this.m_impulse.SelfAdd(impulse_v3);\r\n                }\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                const newImpulse = this.m_impulse.z + impulse_v3.z;\r\n                if (newImpulse > 0) {\r\n                    // b2Vec2 rhs = -Cdot1 + m_impulse.z * b2Vec2(m_mass.ez.x, m_mass.ez.y);\r\n                    const rhs_x = -Cdot1.x + this.m_impulse.z * this.m_mass.ez.x;\r\n                    const rhs_y = -Cdot1.y + this.m_impulse.z * this.m_mass.ez.y;\r\n                    const reduced_v2 = this.m_mass.Solve22(rhs_x, rhs_y, b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2);\r\n                    impulse_v3.x = reduced_v2.x;\r\n                    impulse_v3.y = reduced_v2.y;\r\n                    impulse_v3.z = -this.m_impulse.z;\r\n                    this.m_impulse.x += reduced_v2.x;\r\n                    this.m_impulse.y += reduced_v2.y;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                else {\r\n                    this.m_impulse.SelfAdd(impulse_v3);\r\n                }\r\n            }\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2RevoluteJoint.SolveVelocityConstraints_s_P.Set(impulse_v3.x, impulse_v3.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse_v3.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse_v3.z);\r\n        }\r\n        else {\r\n            // Solve point-to-point constraint\r\n            // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot_v2 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = m_mass.Solve22(-Cdot);\r\n            const impulse_v2 = this.m_mass.Solve22(-Cdot_v2.x, -Cdot_v2.y, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2);\r\n            this.m_impulse.x += impulse_v2.x;\r\n            this.m_impulse.y += impulse_v2.y;\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulse_v2);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, impulse_v2);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulse_v2);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, impulse_v2);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        let angularError = 0;\r\n        let positionError = 0;\r\n        const fixedRotation = (this.m_invIA + this.m_invIB === 0);\r\n        // Solve angular limit constraint.\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit && !fixedRotation) {\r\n            const angle = aB - aA - this.m_referenceAngle;\r\n            let limitImpulse = 0;\r\n            if (this.m_limitState === b2LimitState.e_equalLimits) {\r\n                // Prevent large angular corrections\r\n                const C = b2Clamp(angle - this.m_lowerAngle, -b2_maxAngularCorrection, b2_maxAngularCorrection);\r\n                limitImpulse = -this.m_motorMass * C;\r\n                angularError = b2Abs(C);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                let C = angle - this.m_lowerAngle;\r\n                angularError = -C;\r\n                // Prevent large angular corrections and allow some slop.\r\n                C = b2Clamp(C + b2_angularSlop, -b2_maxAngularCorrection, 0);\r\n                limitImpulse = -this.m_motorMass * C;\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                let C = angle - this.m_upperAngle;\r\n                angularError = C;\r\n                // Prevent large angular corrections and allow some slop.\r\n                C = b2Clamp(C - b2_angularSlop, 0, b2_maxAngularCorrection);\r\n                limitImpulse = -this.m_motorMass * C;\r\n            }\r\n            aA -= this.m_invIA * limitImpulse;\r\n            aB += this.m_invIB * limitImpulse;\r\n        }\r\n        // Solve point-to-point constraint.\r\n        {\r\n            qA.SetAngle(aA);\r\n            qB.SetAngle(aB);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n            b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n            b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n            // b2Vec2 C = cB + rB - cA - rA;\r\n            const C_v2 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2RevoluteJoint.SolvePositionConstraints_s_C_v2);\r\n            // positionError = C.Length();\r\n            positionError = C_v2.Length();\r\n            const mA = this.m_invMassA, mB = this.m_invMassB;\r\n            const iA = this.m_invIA, iB = this.m_invIB;\r\n            const K = this.m_K;\r\n            K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n            K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n            K.ey.x = K.ex.y;\r\n            K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n            // b2Vec2 impulse = -K.Solve(C);\r\n            const impulse = K.Solve(C_v2.x, C_v2.y, b2RevoluteJoint.SolvePositionConstraints_s_impulse).SelfNeg();\r\n            // cA -= mA * impulse;\r\n            cA.SelfMulSub(mA, impulse);\r\n            aA -= iA * b2Vec2.CrossVV(rA, impulse);\r\n            // cB += mB * impulse;\r\n            cB.SelfMulAdd(mB, impulse);\r\n            aB += iB * b2Vec2.CrossVV(rB, impulse);\r\n        }\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\r\n        // return inv_dt * P;\r\n        out.x = inv_dt * this.m_impulse.x;\r\n        out.y = inv_dt * this.m_impulse.y;\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.z;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    GetJointAngle() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_sweep.a - bA->this.m_sweep.a - this.m_referenceAngle;\r\n        return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;\r\n    }\r\n    GetJointSpeed() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_angularVelocity - bA->this.m_angularVelocity;\r\n        return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        if (flag !== this.m_enableMotor) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableMotor = flag;\r\n        }\r\n    }\r\n    GetMotorTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    SetMaxMotorTorque(torque) {\r\n        if (torque !== this.m_maxMotorTorque) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_maxMotorTorque = torque;\r\n        }\r\n    }\r\n    GetMaxMotorTorque() { return this.m_maxMotorTorque; }\r\n    IsLimitEnabled() {\r\n        return this.m_enableLimit;\r\n    }\r\n    EnableLimit(flag) {\r\n        if (flag !== this.m_enableLimit) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableLimit = flag;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    GetLowerLimit() {\r\n        return this.m_lowerAngle;\r\n    }\r\n    GetUpperLimit() {\r\n        return this.m_upperAngle;\r\n    }\r\n    SetLimits(lower, upper) {\r\n        if (lower !== this.m_lowerAngle || upper !== this.m_upperAngle) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_impulse.z = 0;\r\n            this.m_lowerAngle = lower;\r\n            this.m_upperAngle = upper;\r\n        }\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        if (speed !== this.m_motorSpeed) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_motorSpeed = speed;\r\n        }\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2RevoluteJointDef = new b2RevoluteJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.lowerAngle = %.15f;\\n\", this.m_lowerAngle);\r\n        log(\"  jd.upperAngle = %.15f;\\n\", this.m_upperAngle);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2RevoluteJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_impulse_v3 = new b2Vec3();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolvePositionConstraints_s_C_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolvePositionConstraints_s_impulse = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxLinearCorrection, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Min, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Rope joint definition. This requires two body anchor points and\r\n/// a maximum lengths.\r\n/// Note: by default the connected objects will not collide.\r\n/// see collideConnected in b2JointDef.\r\nexport class b2RopeJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_ropeJoint);\r\n        this.localAnchorA = new b2Vec2(-1, 0);\r\n        this.localAnchorB = new b2Vec2(1, 0);\r\n        this.maxLength = 0;\r\n    }\r\n}\r\nexport class b2RopeJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_maxLength = 0;\r\n        this.m_length = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_u = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_state = b2LimitState.e_inactiveLimit;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, new b2Vec2(-1, 0)));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, new b2Vec2(1, 0)));\r\n        this.m_maxLength = b2Maybe(def.maxLength, 0);\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // this.m_rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // this.m_rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // this.m_u = cB + this.m_rB - cA - this.m_rA;\r\n        this.m_u.Copy(cB).SelfAdd(this.m_rB).SelfSub(cA).SelfSub(this.m_rA);\r\n        this.m_length = this.m_u.Length();\r\n        const C = this.m_length - this.m_maxLength;\r\n        if (C > 0) {\r\n            this.m_state = b2LimitState.e_atUpperLimit;\r\n        }\r\n        else {\r\n            this.m_state = b2LimitState.e_inactiveLimit;\r\n        }\r\n        if (this.m_length > b2_linearSlop) {\r\n            this.m_u.SelfMul(1 / this.m_length);\r\n        }\r\n        else {\r\n            this.m_u.SetZero();\r\n            this.m_mass = 0;\r\n            this.m_impulse = 0;\r\n            return;\r\n        }\r\n        // Compute effective mass.\r\n        const crA = b2Vec2.CrossVV(this.m_rA, this.m_u);\r\n        const crB = b2Vec2.CrossVV(this.m_rB, this.m_u);\r\n        const invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB + this.m_invIB * crB * crB;\r\n        this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        if (data.step.warmStarting) {\r\n            // Scale the impulse to support a variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_u;\r\n            const P = b2Vec2.MulSV(this.m_impulse, this.m_u, b2RopeJoint.InitVelocityConstraints_s_P);\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Cdot = dot(u, v + cross(w, r))\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2RopeJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2RopeJoint.SolveVelocityConstraints_s_vpB);\r\n        // float32 C = m_length - m_maxLength;\r\n        const C = this.m_length - this.m_maxLength;\r\n        // float32 Cdot = b2Dot(m_u, vpB - vpA);\r\n        let Cdot = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\r\n        // Predictive constraint.\r\n        if (C < 0) {\r\n            Cdot += data.step.inv_dt * C;\r\n        }\r\n        let impulse = -this.m_mass * Cdot;\r\n        const oldImpulse = this.m_impulse;\r\n        this.m_impulse = b2Min(0, this.m_impulse + impulse);\r\n        impulse = this.m_impulse - oldImpulse;\r\n        // b2Vec2 P = impulse * m_u;\r\n        const P = b2Vec2.MulSV(impulse, this.m_u, b2RopeJoint.SolveVelocityConstraints_s_P);\r\n        // vA -= m_invMassA * P;\r\n        vA.SelfMulSub(this.m_invMassA, P);\r\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n        // vB += m_invMassB * P;\r\n        vB.SelfMulAdd(this.m_invMassB, P);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 u = cB + rB - cA - rA;\r\n        const u = this.m_u.Copy(cB).SelfAdd(rB).SelfSub(cA).SelfSub(rA);\r\n        const length = u.Normalize();\r\n        let C = length - this.m_maxLength;\r\n        C = b2Clamp(C, 0, b2_maxLinearCorrection);\r\n        const impulse = -this.m_mass * C;\r\n        // b2Vec2 P = impulse * u;\r\n        const P = b2Vec2.MulSV(impulse, u, b2RopeJoint.SolvePositionConstraints_s_P);\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return length - this.m_maxLength < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return out.Set(inv_dt * this.m_linearImpulse.x, inv_dt * this.m_linearImpulse.y);\r\n        return b2Vec2.MulSV((inv_dt * this.m_impulse), this.m_u, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetMaxLength(length) { this.m_maxLength = length; }\r\n    GetMaxLength() {\r\n        return this.m_maxLength;\r\n    }\r\n    GetLimitState() {\r\n        return this.m_state;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2RopeJointDef = new b2RopeJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.maxLength = %.15f;\\n\", this.m_maxLength);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2RopeJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2RopeJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJSb3BlSm9pbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9Cb3gyRC9EeW5hbWljcy9Kb2ludHMvYjJSb3BlSm9pbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsYUFBYSxFQUFFLHNCQUFzQixFQUFFLE9BQU8sRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pGLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQU0sTUFBTSxxQkFBcUIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFlLE1BQU0sV0FBVyxDQUFDO0FBV3hGLG1FQUFtRTtBQUNuRSxzQkFBc0I7QUFDdEIsNERBQTREO0FBQzVELHVDQUF1QztBQUN2QyxNQUFNLE9BQU8sY0FBZSxTQUFRLFVBQVU7SUFPNUM7UUFDRSxLQUFLLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBUGpCLGlCQUFZLEdBQVcsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFekMsaUJBQVksR0FBVyxJQUFJLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFakQsY0FBUyxHQUFXLENBQUMsQ0FBQztJQUk3QixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sV0FBWSxTQUFRLE9BQU87SUE0QnRDLFlBQVksR0FBb0I7UUFDOUIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBNUJiLGdCQUFnQjtRQUNBLG1CQUFjLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUN0QyxtQkFBYyxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFDL0MsZ0JBQVcsR0FBVyxDQUFDLENBQUM7UUFDeEIsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixjQUFTLEdBQVcsQ0FBQyxD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","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_linearSlop, b2_angularSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Vec2, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Weld joint definition. You need to specify local anchor points\r\n/// where they are attached and the relative body angle. The position\r\n/// of the anchor points is important for computing the reaction torque.\r\nexport class b2WeldJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_weldJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.referenceAngle = 0;\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2WeldJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_bias = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_referenceAngle = 0;\r\n        this.m_gamma = 0;\r\n        this.m_impulse = new b2Vec3(0, 0, 0);\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = new b2Mat33();\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat33();\r\n        this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n        this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n        this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\r\n        this.m_impulse.SetZero();\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\r\n        K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\r\n        K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\r\n        K.ex.y = K.ey.x;\r\n        K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\r\n        K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\r\n        K.ex.z = K.ez.x;\r\n        K.ey.z = K.ez.y;\r\n        K.ez.z = iA + iB;\r\n        if (this.m_frequencyHz > 0) {\r\n            K.GetInverse22(this.m_mass);\r\n            let invM = iA + iB;\r\n            const m = invM > 0 ? 1 / invM : 0;\r\n            const C = aB - aA - this.m_referenceAngle;\r\n            // Frequency\r\n            const omega = 2 * b2_pi * this.m_frequencyHz;\r\n            // Damping coefficient\r\n            const d = 2 * m * this.m_dampingRatio * omega;\r\n            // Spring stiffness\r\n            const k = m * omega * omega;\r\n            // magic formulas\r\n            const h = data.step.dt;\r\n            this.m_gamma = h * (d + h * k);\r\n            this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\r\n            this.m_bias = C * h * k * this.m_gamma;\r\n            invM += this.m_gamma;\r\n            this.m_mass.ez.z = invM !== 0 ? 1 / invM : 0;\r\n        }\r\n        else {\r\n            K.GetSymInverse33(this.m_mass);\r\n            this.m_gamma = 0;\r\n            this.m_bias = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            // b2Vec2 P(m_impulse.x, m_impulse.y);\r\n            const P = b2WeldJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_impulse.z);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        if (this.m_frequencyHz > 0) {\r\n            const Cdot2 = wB - wA;\r\n            const impulse2 = -this.m_mass.ez.z * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z);\r\n            this.m_impulse.z += impulse2;\r\n            wA -= iA * impulse2;\r\n            wB += iB * impulse2;\r\n            // b2Vec2 Cdot1 = vB + b2Vec2.CrossSV(wB, this.m_rB) - vA - b2Vec2.CrossSV(wA, this.m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\r\n            // b2Vec2 impulse1 = -b2Mul22(m_mass, Cdot1);\r\n            const impulse1 = b2Mat33.MulM33XY(this.m_mass, Cdot1.x, Cdot1.y, b2WeldJoint.SolveVelocityConstraints_s_impulse1).SelfNeg();\r\n            this.m_impulse.x += impulse1.x;\r\n            this.m_impulse.y += impulse1.y;\r\n            // b2Vec2 P = impulse1;\r\n            const P = impulse1;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            // wA -= iA * b2Cross(m_rA, P);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            // wB += iB * b2Cross(m_rB, P);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            // b2Vec2 Cdot1 = vB + b2Cross(wB, this.m_rB) - vA - b2Cross(wA, this.m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\r\n            const Cdot2 = wB - wA;\r\n            // b2Vec3 const Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 impulse = -b2Mul(m_mass, Cdot);\r\n            const impulse = b2Mat33.MulM33XYZ(this.m_mass, Cdot1.x, Cdot1.y, Cdot2, b2WeldJoint.SolveVelocityConstraints_s_impulse).SelfNeg();\r\n            this.m_impulse.SelfAdd(impulse);\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2WeldJoint.SolveVelocityConstraints_s_P.Set(impulse.x, impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        let positionError, angularError;\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\r\n        K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\r\n        K.ez.x = -rA.y * iA - rB.y * iB;\r\n        K.ex.y = K.ey.x;\r\n        K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\r\n        K.ez.y = rA.x * iA + rB.x * iB;\r\n        K.ex.z = K.ez.x;\r\n        K.ey.z = K.ez.y;\r\n        K.ez.z = iA + iB;\r\n        if (this.m_frequencyHz > 0) {\r\n            // b2Vec2 C1 =  cB + rB - cA - rA;\r\n            const C1 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WeldJoint.SolvePositionConstraints_s_C1);\r\n            positionError = C1.Length();\r\n            angularError = 0;\r\n            // b2Vec2 P = -K.Solve22(C1);\r\n            const P = K.Solve22(C1.x, C1.y, b2WeldJoint.SolvePositionConstraints_s_P).SelfNeg();\r\n            // cA -= mA * P;\r\n            cA.SelfMulSub(mA, P);\r\n            aA -= iA * b2Vec2.CrossVV(rA, P);\r\n            // cB += mB * P;\r\n            cB.SelfMulAdd(mB, P);\r\n            aB += iB * b2Vec2.CrossVV(rB, P);\r\n        }\r\n        else {\r\n            // b2Vec2 C1 =  cB + rB - cA - rA;\r\n            const C1 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WeldJoint.SolvePositionConstraints_s_C1);\r\n            const C2 = aB - aA - this.m_referenceAngle;\r\n            positionError = C1.Length();\r\n            angularError = b2Abs(C2);\r\n            // b2Vec3 C(C1.x, C1.y, C2);\r\n            // b2Vec3 impulse = -K.Solve33(C);\r\n            const impulse = K.Solve33(C1.x, C1.y, C2, b2WeldJoint.SolvePositionConstraints_s_impulse).SelfNeg();\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2WeldJoint.SolvePositionConstraints_s_P.Set(impulse.x, impulse.y);\r\n            // cA -= mA * P;\r\n            cA.SelfMulSub(mA, P);\r\n            aA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\r\n            // cB += mB * P;\r\n            cB.SelfMulAdd(mB, P);\r\n            aB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\r\n        }\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\r\n        // return inv_dt * P;\r\n        out.x = inv_dt * this.m_impulse.x;\r\n        out.y = inv_dt * this.m_impulse.y;\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.z;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    SetFrequency(hz) { this.m_frequencyHz = hz; }\r\n    GetFrequency() { return this.m_frequencyHz; }\r\n    SetDampingRatio(ratio) { this.m_dampingRatio = ratio; }\r\n    GetDampingRatio() { return this.m_dampingRatio; }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2WeldJointDef = new b2WeldJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2WeldJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_impulse1 = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_impulse = new b2Vec3();\r\nb2WeldJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_C1 = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_impulse = new b2Vec3();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2_pi, b2_linearSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Wheel joint definition. This requires defining a line of\r\n/// motion using an axis and an anchor point. The definition uses local\r\n/// anchor points and a local axis so that the initial configuration\r\n/// can violate the constraint slightly. The joint translation is zero\r\n/// when the local anchor points coincide in world space. Using local\r\n/// anchors and a local axis helps when saving and loading a game.\r\nexport class b2WheelJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_wheelJoint);\r\n        this.localAnchorA = new b2Vec2(0, 0);\r\n        this.localAnchorB = new b2Vec2(0, 0);\r\n        this.localAxisA = new b2Vec2(1, 0);\r\n        this.enableMotor = false;\r\n        this.maxMotorTorque = 0;\r\n        this.motorSpeed = 0;\r\n        this.frequencyHz = 2;\r\n        this.dampingRatio = 0.7;\r\n    }\r\n    Initialize(bA, bB, anchor, axis) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.bodyA.GetLocalVector(axis, this.localAxisA);\r\n    }\r\n}\r\nexport class b2WheelJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localXAxisA = new b2Vec2();\r\n        this.m_localYAxisA = new b2Vec2();\r\n        this.m_impulse = 0;\r\n        this.m_motorImpulse = 0;\r\n        this.m_springImpulse = 0;\r\n        this.m_maxMotorTorque = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableMotor = false;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_ax = new b2Vec2();\r\n        this.m_ay = new b2Vec2();\r\n        this.m_sAx = 0;\r\n        this.m_sBx = 0;\r\n        this.m_sAy = 0;\r\n        this.m_sBy = 0;\r\n        this.m_mass = 0;\r\n        this.m_motorMass = 0;\r\n        this.m_springMass = 0;\r\n        this.m_bias = 0;\r\n        this.m_gamma = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_frequencyHz = b2Maybe(def.frequencyHz, 2);\r\n        this.m_dampingRatio = b2Maybe(def.dampingRatio, 0.7);\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n        this.m_localXAxisA.Copy(b2Maybe(def.localAxisA, b2Vec2.UNITX));\r\n        b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\r\n        this.m_maxMotorTorque = b2Maybe(def.maxMotorTorque, 0);\r\n        this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\r\n        this.m_enableMotor = b2Maybe(def.enableMotor, false);\r\n        this.m_ax.SetZero();\r\n        this.m_ay.SetZero();\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    GetMaxMotorTorque() {\r\n        return this.m_maxMotorTorque;\r\n    }\r\n    SetSpringFrequencyHz(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetSpringFrequencyHz() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetSpringDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetSpringDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective masses.\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = cB + rB - cA - rA;\r\n        const d = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WheelJoint.InitVelocityConstraints_s_d);\r\n        // Point to line constraint\r\n        {\r\n            // m_ay = b2Mul(qA, m_localYAxisA);\r\n            b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\r\n            // m_sAy = b2Cross(d + rA, m_ay);\r\n            this.m_sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ay);\r\n            // m_sBy = b2Cross(rB, m_ay);\r\n            this.m_sBy = b2Vec2.CrossVV(rB, this.m_ay);\r\n            this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy * this.m_sBy;\r\n            if (this.m_mass > 0) {\r\n                this.m_mass = 1 / this.m_mass;\r\n            }\r\n        }\r\n        // Spring constraint\r\n        this.m_springMass = 0;\r\n        this.m_bias = 0;\r\n        this.m_gamma = 0;\r\n        if (this.m_frequencyHz > 0) {\r\n            // m_ax = b2Mul(qA, m_localXAxisA);\r\n            b2Rot.MulRV(qA, this.m_localXAxisA, this.m_ax);\r\n            // m_sAx = b2Cross(d + rA, m_ax);\r\n            this.m_sAx = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ax);\r\n            // m_sBx = b2Cross(rB, m_ax);\r\n            this.m_sBx = b2Vec2.CrossVV(rB, this.m_ax);\r\n            const invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx * this.m_sBx;\r\n            if (invMass > 0) {\r\n                this.m_springMass = 1 / invMass;\r\n                const C = b2Vec2.DotVV(d, this.m_ax);\r\n                // Frequency\r\n                const omega = 2 * b2_pi * this.m_frequencyHz;\r\n                // Damping coefficient\r\n                const damp = 2 * this.m_springMass * this.m_dampingRatio * omega;\r\n                // Spring stiffness\r\n                const k = this.m_springMass * omega * omega;\r\n                // magic formulas\r\n                const h = data.step.dt;\r\n                this.m_gamma = h * (damp + h * k);\r\n                if (this.m_gamma > 0) {\r\n                    this.m_gamma = 1 / this.m_gamma;\r\n                }\r\n                this.m_bias = C * h * k * this.m_gamma;\r\n                this.m_springMass = invMass + this.m_gamma;\r\n                if (this.m_springMass > 0) {\r\n                    this.m_springMass = 1 / this.m_springMass;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.m_springImpulse = 0;\r\n        }\r\n        // Rotational motor\r\n        if (this.m_enableMotor) {\r\n            this.m_motorMass = iA + iB;\r\n            if (this.m_motorMass > 0) {\r\n                this.m_motorMass = 1 / this.m_motorMass;\r\n            }\r\n        }\r\n        else {\r\n            this.m_motorMass = 0;\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Account for variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            this.m_springImpulse *= data.step.dtRatio;\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_ay + m_springImpulse * m_ax;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(this.m_impulse, this.m_ay, b2Vec2.s_t0), b2Vec2.MulSV(this.m_springImpulse, this.m_ax, b2Vec2.s_t1), b2WheelJoint.InitVelocityConstraints_s_P);\r\n            // float32 LA = m_impulse * m_sAy + m_springImpulse * m_sAx + m_motorImpulse;\r\n            const LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\r\n            // float32 LB = m_impulse * m_sBy + m_springImpulse * m_sBx + m_motorImpulse;\r\n            const LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            wA -= this.m_invIA * LA;\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            wB += this.m_invIB * LB;\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n            this.m_springImpulse = 0;\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Solve spring constraint\r\n        {\r\n            const Cdot = b2Vec2.DotVV(this.m_ax, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBx * wB - this.m_sAx * wA;\r\n            const impulse = -this.m_springMass * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse);\r\n            this.m_springImpulse += impulse;\r\n            // b2Vec2 P = impulse * m_ax;\r\n            const P = b2Vec2.MulSV(impulse, this.m_ax, b2WheelJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_sAx;\r\n            const LB = impulse * this.m_sBx;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // Solve rotational motor constraint\r\n        {\r\n            const Cdot = wB - wA - this.m_motorSpeed;\r\n            let impulse = -this.m_motorMass * Cdot;\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorTorque;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve point to line constraint\r\n        {\r\n            const Cdot = b2Vec2.DotVV(this.m_ay, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBy * wB - this.m_sAy * wA;\r\n            const impulse = -this.m_mass * Cdot;\r\n            this.m_impulse += impulse;\r\n            // b2Vec2 P = impulse * m_ay;\r\n            const P = b2Vec2.MulSV(impulse, this.m_ay, b2WheelJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_sAy;\r\n            const LB = impulse * this.m_sBy;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = (cB - cA) + rB - rA;\r\n        const d = b2Vec2.AddVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), b2Vec2.SubVV(rB, rA, b2Vec2.s_t1), b2WheelJoint.SolvePositionConstraints_s_d);\r\n        // b2Vec2 ay = b2Mul(qA, m_localYAxisA);\r\n        const ay = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\r\n        // float32 sAy = b2Cross(d + rA, ay);\r\n        const sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), ay);\r\n        // float32 sBy = b2Cross(rB, ay);\r\n        const sBy = b2Vec2.CrossVV(rB, ay);\r\n        // float32 C = b2Dot(d, ay);\r\n        const C = b2Vec2.DotVV(d, this.m_ay);\r\n        const k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy;\r\n        let impulse;\r\n        if (k !== 0) {\r\n            impulse = -C / k;\r\n        }\r\n        else {\r\n            impulse = 0;\r\n        }\r\n        // b2Vec2 P = impulse * ay;\r\n        const P = b2Vec2.MulSV(impulse, ay, b2WheelJoint.SolvePositionConstraints_s_P);\r\n        const LA = impulse * sAy;\r\n        const LB = impulse * sBy;\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        aA -= this.m_invIA * LA;\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        aB += this.m_invIB * LB;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return b2Abs(C) <= b2_linearSlop;\r\n    }\r\n    GetDefinition(def) {\r\n        // DEBUG: b2Assert(false); // TODO\r\n        return def;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * (m_impulse * m_ay + m_springImpulse * m_ax);\r\n        out.x = inv_dt * (this.m_impulse * this.m_ay.x + this.m_springImpulse * this.m_ax.x);\r\n        out.y = inv_dt * (this.m_impulse * this.m_ay.y + this.m_springImpulse * this.m_ax.y);\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetLocalAxisA() { return this.m_localXAxisA; }\r\n    GetJointTranslation() {\r\n        return this.GetPrismaticJointTranslation();\r\n    }\r\n    GetJointLinearSpeed() {\r\n        return this.GetPrismaticJointSpeed();\r\n    }\r\n    GetJointAngle() {\r\n        return this.GetRevoluteJointAngle();\r\n    }\r\n    GetJointAngularSpeed() {\r\n        return this.GetRevoluteJointSpeed();\r\n    }\r\n    GetPrismaticJointTranslation() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        const pA = bA.GetWorldPoint(this.m_localAnchorA, new b2Vec2());\r\n        const pB = bB.GetWorldPoint(this.m_localAnchorB, new b2Vec2());\r\n        const d = b2Vec2.SubVV(pB, pA, new b2Vec2());\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\r\n        const translation = b2Vec2.DotVV(d, axis);\r\n        return translation;\r\n    }\r\n    GetPrismaticJointSpeed() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 pA = bA->m_sweep.c + rA;\r\n        const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\r\n        // b2Vec2 pB = bB->m_sweep.c + rB;\r\n        const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\r\n        // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\r\n        const vA = bA.m_linearVelocity;\r\n        const vB = bB.m_linearVelocity;\r\n        const wA = bA.m_angularVelocity;\r\n        const wB = bB.m_angularVelocity;\r\n        // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\r\n        const speed = b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(axis, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n        return speed;\r\n    }\r\n    GetRevoluteJointAngle() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_sweep.a - bA->this.m_sweep.a;\r\n        return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a;\r\n    }\r\n    GetRevoluteJointSpeed() {\r\n        const wA = this.m_bodyA.m_angularVelocity;\r\n        const wB = this.m_bodyB.m_angularVelocity;\r\n        return wB - wA;\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        if (flag !== this.m_enableMotor) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableMotor = flag;\r\n        }\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        if (speed !== this.m_motorSpeed) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_motorSpeed = speed;\r\n        }\r\n    }\r\n    SetMaxMotorTorque(force) {\r\n        if (force !== this.m_maxMotorTorque) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_maxMotorTorque = force;\r\n        }\r\n    }\r\n    GetMotorTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2WheelJointDef = new b2WheelJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2WheelJoint.InitVelocityConstraints_s_d = new b2Vec2();\r\nb2WheelJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2WheelJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2WheelJoint.SolvePositionConstraints_s_d = new b2Vec2();\r\nb2WheelJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2Sqrt } from \"../../Common/b2Math\";\r\nimport { b2Manifold } from \"../../Collision/b2Collision\";\r\nimport { b2TestOverlapShape } from \"../../Collision/b2Collision\";\r\nimport { b2TimeOfImpact, b2TOIInput, b2TOIOutput } from \"../../Collision/b2TimeOfImpact\";\r\n/// Friction mixing law. The idea is to allow either fixture to drive the friction to zero.\r\n/// For example, anything slides on ice.\r\nexport function b2MixFriction(friction1, friction2) {\r\n    return b2Sqrt(friction1 * friction2);\r\n}\r\n/// Restitution mixing law. The idea is allow for anything to bounce off an inelastic surface.\r\n/// For example, a superball bounces on anything.\r\nexport function b2MixRestitution(restitution1, restitution2) {\r\n    return restitution1 > restitution2 ? restitution1 : restitution2;\r\n}\r\nexport class b2ContactEdge {\r\n    constructor(contact) {\r\n        this.prev = null; ///< the previous contact edge in the body's contact list\r\n        this.next = null; ///< the next contact edge in the body's contact list\r\n        this.contact = contact;\r\n    }\r\n}\r\nexport class b2Contact {\r\n    constructor() {\r\n        this.m_islandFlag = false; /// Used when crawling contact graph when forming islands.\r\n        this.m_touchingFlag = false; /// Set when the shapes are touching.\r\n        this.m_enabledFlag = false; /// This contact can be disabled (by user)\r\n        this.m_filterFlag = false; /// This contact needs filtering because a fixture filter was changed.\r\n        this.m_bulletHitFlag = false; /// This bullet contact had a TOI event\r\n        this.m_toiFlag = false; /// This contact has a valid TOI in m_toi\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_manifold = new b2Manifold(); // TODO: readonly\r\n        this.m_toiCount = 0;\r\n        this.m_toi = 0;\r\n        this.m_friction = 0;\r\n        this.m_restitution = 0;\r\n        this.m_tangentSpeed = 0;\r\n        this.m_oldManifold = new b2Manifold(); // TODO: readonly\r\n        this.m_nodeA = new b2ContactEdge(this);\r\n        this.m_nodeB = new b2ContactEdge(this);\r\n    }\r\n    GetManifold() {\r\n        return this.m_manifold;\r\n    }\r\n    GetWorldManifold(worldManifold) {\r\n        const bodyA = this.m_fixtureA.GetBody();\r\n        const bodyB = this.m_fixtureB.GetBody();\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        worldManifold.Initialize(this.m_manifold, bodyA.GetTransform(), shapeA.m_radius, bodyB.GetTransform(), shapeB.m_radius);\r\n    }\r\n    IsTouching() {\r\n        return this.m_touchingFlag;\r\n    }\r\n    SetEnabled(flag) {\r\n        this.m_enabledFlag = flag;\r\n    }\r\n    IsEnabled() {\r\n        return this.m_enabledFlag;\r\n    }\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    GetFixtureA() {\r\n        return this.m_fixtureA;\r\n    }\r\n    GetChildIndexA() {\r\n        return this.m_indexA;\r\n    }\r\n    GetFixtureB() {\r\n        return this.m_fixtureB;\r\n    }\r\n    GetChildIndexB() {\r\n        return this.m_indexB;\r\n    }\r\n    FlagForFiltering() {\r\n        this.m_filterFlag = true;\r\n    }\r\n    SetFriction(friction) {\r\n        this.m_friction = friction;\r\n    }\r\n    GetFriction() {\r\n        return this.m_friction;\r\n    }\r\n    ResetFriction() {\r\n        this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\r\n    }\r\n    SetRestitution(restitution) {\r\n        this.m_restitution = restitution;\r\n    }\r\n    GetRestitution() {\r\n        return this.m_restitution;\r\n    }\r\n    ResetRestitution() {\r\n        this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\r\n    }\r\n    SetTangentSpeed(speed) {\r\n        this.m_tangentSpeed = speed;\r\n    }\r\n    GetTangentSpeed() {\r\n        return this.m_tangentSpeed;\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        this.m_islandFlag = false;\r\n        this.m_touchingFlag = false;\r\n        this.m_enabledFlag = true;\r\n        this.m_filterFlag = false;\r\n        this.m_bulletHitFlag = false;\r\n        this.m_toiFlag = false;\r\n        this.m_fixtureA = fixtureA;\r\n        this.m_fixtureB = fixtureB;\r\n        this.m_indexA = indexA;\r\n        this.m_indexB = indexB;\r\n        this.m_manifold.pointCount = 0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        delete this.m_nodeA.contact; // = null;\r\n        this.m_nodeA.prev = null;\r\n        this.m_nodeA.next = null;\r\n        delete this.m_nodeA.other; // = null;\r\n        delete this.m_nodeB.contact; // = null;\r\n        this.m_nodeB.prev = null;\r\n        this.m_nodeB.next = null;\r\n        delete this.m_nodeB.other; // = null;\r\n        this.m_toiCount = 0;\r\n        this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\r\n        this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\r\n    }\r\n    Update(listener) {\r\n        const tManifold = this.m_oldManifold;\r\n        this.m_oldManifold = this.m_manifold;\r\n        this.m_manifold = tManifold;\r\n        // Re-enable this contact.\r\n        this.m_enabledFlag = true;\r\n        let touching = false;\r\n        const wasTouching = this.m_touchingFlag;\r\n        const sensorA = this.m_fixtureA.IsSensor();\r\n        const sensorB = this.m_fixtureB.IsSensor();\r\n        const sensor = sensorA || sensorB;\r\n        const bodyA = this.m_fixtureA.GetBody();\r\n        const bodyB = this.m_fixtureB.GetBody();\r\n        const xfA = bodyA.GetTransform();\r\n        const xfB = bodyB.GetTransform();\r\n        ///const aabbOverlap = b2TestOverlapAABB(this.m_fixtureA.GetAABB(0), this.m_fixtureB.GetAABB(0));\r\n        // Is this contact a sensor?\r\n        if (sensor) {\r\n            ///if (aabbOverlap)\r\n            ///{\r\n            const shapeA = this.m_fixtureA.GetShape();\r\n            const shapeB = this.m_fixtureB.GetShape();\r\n            touching = b2TestOverlapShape(shapeA, this.m_indexA, shapeB, this.m_indexB, xfA, xfB);\r\n            ///}\r\n            // Sensors don't generate manifolds.\r\n            this.m_manifold.pointCount = 0;\r\n        }\r\n        else {\r\n            ///if (aabbOverlap)\r\n            ///{\r\n            this.Evaluate(this.m_manifold, xfA, xfB);\r\n            touching = this.m_manifold.pointCount > 0;\r\n            // Match old contact ids to new contact ids and copy the\r\n            // stored impulses to warm start the solver.\r\n            for (let i = 0; i < this.m_manifold.pointCount; ++i) {\r\n                const mp2 = this.m_manifold.points[i];\r\n                mp2.normalImpulse = 0;\r\n                mp2.tangentImpulse = 0;\r\n                const id2 = mp2.id;\r\n                for (let j = 0; j < this.m_oldManifold.pointCount; ++j) {\r\n                    const mp1 = this.m_oldManifold.points[j];\r\n                    if (mp1.id.key === id2.key) {\r\n                        mp2.normalImpulse = mp1.normalImpulse;\r\n                        mp2.tangentImpulse = mp1.tangentImpulse;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            ///}\r\n            ///else\r\n            ///{\r\n            ///  this.m_manifold.pointCount = 0;\r\n            ///}\r\n            if (touching !== wasTouching) {\r\n                bodyA.SetAwake(true);\r\n                bodyB.SetAwake(true);\r\n            }\r\n        }\r\n        this.m_touchingFlag = touching;\r\n        if (!wasTouching && touching && listener) {\r\n            listener.BeginContact(this);\r\n        }\r\n        if (wasTouching && !touching && listener) {\r\n            listener.EndContact(this);\r\n        }\r\n        if (!sensor && touching && listener) {\r\n            listener.PreSolve(this, this.m_oldManifold);\r\n        }\r\n    }\r\n    ComputeTOI(sweepA, sweepB) {\r\n        const input = b2Contact.ComputeTOI_s_input;\r\n        input.proxyA.SetShape(this.m_fixtureA.GetShape(), this.m_indexA);\r\n        input.proxyB.SetShape(this.m_fixtureB.GetShape(), this.m_indexB);\r\n        input.sweepA.Copy(sweepA);\r\n        input.sweepB.Copy(sweepB);\r\n        input.tMax = b2_linearSlop;\r\n        const output = b2Contact.ComputeTOI_s_output;\r\n        b2TimeOfImpact(output, input);\r\n        return output.t;\r\n    }\r\n}\r\nb2Contact.ComputeTOI_s_input = new b2TOIInput();\r\nb2Contact.ComputeTOI_s_output = new b2TOIOutput();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideCircles } from \"../../Collision/b2CollideCircle\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2CircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2CircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA.GetType() === b2ShapeType.e_circleShape);\r\n        // DEBUG: b2Assert(shapeB.GetType() === b2ShapeType.e_circleShape);\r\n        b2CollideCircles(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaXJjbGVDb250YWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vQm94MkQvRHluYW1pY3MvQ29udGFjdHMvYjJDaXJjbGVDb250YWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBS0YsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFJbkUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUd4QyxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxTQUFTO0lBQzVDO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSxlQUFlLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFrQixFQUFFLFNBQWM7SUFDeEQsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFtQixFQUFFLE1BQWMsRUFBRSxRQUFtQixFQUFFLE1BQWM7UUFDbkYsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRU0sUUFBUSxDQUFDLFFBQW9CLEVBQUUsR0FBZ0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsbUVBQW1FO1FBQ25FLG1FQUFtRTtRQUNuRSxnQkFBZ0IsQ0FDZCxRQUFRLEVBQ1IsTUFBdUIsRUFBRSxHQUFHLEVBQzVCLE1BQXVCLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQztDQUNGIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollidePolygons } from \"../../Collision/b2CollidePolygon\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2PolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2PolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA.GetType() === b2ShapeType.e_polygonShape);\r\n        // DEBUG: b2Assert(shapeB.GetType() === b2ShapeType.e_polygonShape);\r\n        b2CollidePolygons(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQb2x5Z29uQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyUG9seWdvbkNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFLRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUlyRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxTQUFTO0lBQzdDO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSxnQkFBZ0IsRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTSxRQUFRLENBQUMsUUFBb0IsRUFBRSxHQUFnQixFQUFFLEdBQWdCO1FBQ3RFLE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxvRUFBb0U7UUFDcEUsb0VBQW9FO1FBQ3BFLGlCQUFpQixDQUNmLFFBQVEsRUFDUixNQUF3QixFQUFFLEdBQUcsRUFDN0IsTUFBd0IsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNuQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollidePolygonAndCircle } from \"../../Collision/b2CollideCircle\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2PolygonAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2PolygonAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_polygonShape);\r\n        // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA instanceof b2PolygonShape);\r\n        // DEBUG: b2Assert(shapeB instanceof b2CircleShape);\r\n        b2CollidePolygonAndCircle(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQb2x5Z29uQW5kQ2lyY2xlQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyUG9seWdvbkFuZENpcmNsZUNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFLRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUs1RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxTQUFTO0lBQ3REO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSx5QkFBeUIsRUFBRSxDQUFDO0lBQ3pDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELHNFQUFzRTtRQUN0RSxxRUFBcUU7SUFDdkUsQ0FBQztJQUVNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELHFEQUFxRDtRQUNyRCxvREFBb0Q7UUFDcEQseUJBQXlCLENBQ3ZCLFFBQVEsRUFDUixNQUF3QixFQUFFLEdBQUcsRUFDN0IsTUFBdUIsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNsQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndCircle } from \"../../Collision/b2CollideEdge\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2EdgeAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2EdgeAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_edgeShape);\r\n        // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA instanceof b2EdgeShape);\r\n        // DEBUG: b2Assert(shapeB instanceof b2CircleShape);\r\n        b2CollideEdgeAndCircle(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJFZGdlQW5kQ2lyY2xlQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyRWRnZUFuZENpcmNsZUNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFLRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUt2RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxTQUFTO0lBQ25EO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSxzQkFBc0IsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELG1FQUFtRTtRQUNuRSxxRUFBcUU7SUFDdkUsQ0FBQztJQUVNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELGtEQUFrRDtRQUNsRCxvREFBb0Q7UUFDcEQsc0JBQXNCLENBQ3BCLFFBQVEsRUFDUixNQUFxQixFQUFFLEdBQUcsRUFDMUIsTUFBdUIsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNsQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndPolygon } from \"../../Collision/b2CollideEdge\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2EdgeAndPolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2EdgeAndPolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_edgeShape);\r\n        // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_polygonShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA instanceof b2EdgeShape);\r\n        // DEBUG: b2Assert(shapeB instanceof b2PolygonShape);\r\n        b2CollideEdgeAndPolygon(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJFZGdlQW5kUG9seWdvbkNvbnRhY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9Cb3gyRC9EeW5hbWljcy9Db250YWN0cy9iMkVkZ2VBbmRQb2x5Z29uQ29udGFjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUtGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBS3hFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHeEMsTUFBTSxPQUFPLHVCQUF3QixTQUFRLFNBQVM7SUFDcEQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQWM7UUFDakMsT0FBTyxJQUFJLHVCQUF1QixFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBa0IsRUFBRSxTQUFjO0lBQ3hELENBQUM7SUFFTSxLQUFLLENBQUMsUUFBbUIsRUFBRSxNQUFjLEVBQUUsUUFBbUIsRUFBRSxNQUFjO1FBQ25GLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDaEQsbUVBQW1FO1FBQ25FLHNFQUFzRTtJQUN4RSxDQUFDO0lBRU0sUUFBUSxDQUFDLFFBQW9CLEVBQUUsR0FBZ0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsa0RBQWtEO1FBQ2xELHFEQUFxRDtRQUNyRCx1QkFBdUIsQ0FDckIsUUFBUSxFQUNSLE1BQXFCLEVBQUUsR0FBRyxFQUMxQixNQUF3QixFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ25DLENBQUM7Q0FDRiJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndCircle } from \"../../Collision/b2CollideEdge\";\r\nimport { b2EdgeShape } from \"../../Collision/Shapes/b2EdgeShape\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2ChainAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2ChainAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_chainShape);\r\n        // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA instanceof b2ChainShape);\r\n        // DEBUG: b2Assert(shapeB instanceof b2CircleShape);\r\n        const chain = shapeA;\r\n        const edge = b2ChainAndCircleContact.Evaluate_s_edge;\r\n        chain.GetChildEdge(edge, this.m_indexA);\r\n        b2CollideEdgeAndCircle(manifold, edge, xfA, shapeB, xfB);\r\n    }\r\n}\r\nb2ChainAndCircleContact.Evaluate_s_edge = new b2EdgeShape();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaGFpbkFuZENpcmNsZUNvbnRhY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9Cb3gyRC9EeW5hbWljcy9Db250YWN0cy9iMkNoYWluQW5kQ2lyY2xlQ29udGFjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUtGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBS3ZFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxTQUFTO0lBQ3BEO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSx1QkFBdUIsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELG9FQUFvRTtRQUNwRSxxRUFBcUU7SUFDdkUsQ0FBQztJQUdNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELG1EQUFtRDtRQUNuRCxvREFBb0Q7UUFDcEQsTUFBTSxLQUFLLEdBQWlCLE1BQXNCLENBQUM7UUFDbkQsTUFBTSxJQUFJLEdBQWdCLHVCQUF1QixDQUFDLGVBQWUsQ0FBQztRQUNsRSxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDeEMsc0JBQXNCLENBQ3BCLFFBQVEsRUFDUixJQUFJLEVBQUUsR0FBRyxFQUNULE1BQXVCLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7QUFiYyx1Q0FBZSxHQUFHLElBQUksV0FBVyxFQUFFLENBQUMifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndPolygon } from \"../../Collision/b2CollideEdge\";\r\nimport { b2EdgeShape } from \"../../Collision/Shapes/b2EdgeShape\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2ChainAndPolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2ChainAndPolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_chainShape);\r\n        // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_polygonShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA instanceof b2ChainShape);\r\n        // DEBUG: b2Assert(shapeB instanceof b2PolygonShape);\r\n        const chain = shapeA;\r\n        const edge = b2ChainAndPolygonContact.Evaluate_s_edge;\r\n        chain.GetChildEdge(edge, this.m_indexA);\r\n        b2CollideEdgeAndPolygon(manifold, edge, xfA, shapeB, xfB);\r\n    }\r\n}\r\nb2ChainAndPolygonContact.Evaluate_s_edge = new b2EdgeShape();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaGFpbkFuZFBvbHlnb25Db250YWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vQm94MkQvRHluYW1pY3MvQ29udGFjdHMvYjJDaGFpbkFuZFBvbHlnb25Db250YWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBS0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFJeEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBRWpFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHeEMsTUFBTSxPQUFPLHdCQUF5QixTQUFRLFNBQVM7SUFDckQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQWM7UUFDakMsT0FBTyxJQUFJLHdCQUF3QixFQUFFLENBQUM7SUFDeEMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBa0IsRUFBRSxTQUFjO0lBQ3hELENBQUM7SUFFTSxLQUFLLENBQUMsUUFBbUIsRUFBRSxNQUFjLEVBQUUsUUFBbUIsRUFBRSxNQUFjO1FBQ25GLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDaEQsb0VBQW9FO1FBQ3BFLHNFQUFzRTtJQUN4RSxDQUFDO0lBR00sUUFBUSxDQUFDLFFBQW9CLEVBQUUsR0FBZ0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsbURBQW1EO1FBQ25ELHFEQUFxRDtRQUNyRCxNQUFNLEtBQUssR0FBaUIsTUFBc0IsQ0FBQztRQUNuRCxNQUFNLElBQUksR0FBZ0Isd0JBQXdCLENBQUMsZUFBZSxDQUFDO1FBQ25FLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4Qyx1QkFBdUIsQ0FDckIsUUFBUSxFQUNSLElBQUksRUFBRSxHQUFHLEVBQ1QsTUFBd0IsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNuQyxDQUFDOztBQWJjLHdDQUFlLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQyJ9","// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2MakeArray } from \"../../Common/b2Settings\";\r\nimport { b2ShapeType } from \"../../Collision/Shapes/b2Shape\";\r\nimport { b2CircleContact } from \"./b2CircleContact\";\r\nimport { b2PolygonContact } from \"./b2PolygonContact\";\r\nimport { b2PolygonAndCircleContact } from \"./b2PolygonAndCircleContact\";\r\nimport { b2EdgeAndCircleContact } from \"./b2EdgeAndCircleContact\";\r\nimport { b2EdgeAndPolygonContact } from \"./b2EdgeAndPolygonContact\";\r\nimport { b2ChainAndCircleContact } from \"./b2ChainAndCircleContact\";\r\nimport { b2ChainAndPolygonContact } from \"./b2ChainAndPolygonContact\";\r\nexport class b2ContactRegister {\r\n    constructor() {\r\n        // public pool: b2Contact[];\r\n        this.createFcn = null;\r\n        this.destroyFcn = null;\r\n        this.primary = false;\r\n    }\r\n}\r\nexport class b2ContactFactory {\r\n    constructor(allocator) {\r\n        this.m_allocator = null;\r\n        this.m_allocator = allocator;\r\n        this.InitializeRegisters();\r\n    }\r\n    AddType(createFcn, destroyFcn, type1, type2) {\r\n        const pool = b2MakeArray(256, (i) => createFcn(this.m_allocator)); // TODO: b2Settings\r\n        function poolCreateFcn(allocator) {\r\n            // if (pool.length > 0) {\r\n            //   return pool.pop();\r\n            // }\r\n            // return createFcn(allocator);\r\n            return pool.pop() || createFcn(allocator);\r\n        }\r\n        function poolDestroyFcn(contact, allocator) {\r\n            pool.push(contact);\r\n        }\r\n        // this.m_registers[type1][type2].pool = pool;\r\n        this.m_registers[type1][type2].createFcn = poolCreateFcn;\r\n        this.m_registers[type1][type2].destroyFcn = poolDestroyFcn;\r\n        this.m_registers[type1][type2].primary = true;\r\n        if (type1 !== type2) {\r\n            // this.m_registers[type2][type1].pool = pool;\r\n            this.m_registers[type2][type1].createFcn = poolCreateFcn;\r\n            this.m_registers[type2][type1].destroyFcn = poolDestroyFcn;\r\n            this.m_registers[type2][type1].primary = false;\r\n        }\r\n        /*\r\n        this.m_registers[type1][type2].createFcn = createFcn;\r\n        this.m_registers[type1][type2].destroyFcn = destroyFcn;\r\n        this.m_registers[type1][type2].primary = true;\r\n    \r\n        if (type1 !== type2) {\r\n          this.m_registers[type2][type1].createFcn = createFcn;\r\n          this.m_registers[type2][type1].destroyFcn = destroyFcn;\r\n          this.m_registers[type2][type1].primary = false;\r\n        }\r\n        */\r\n    }\r\n    InitializeRegisters() {\r\n        this.m_registers = [ /*b2ShapeType.e_shapeTypeCount*/];\r\n        for (let i = 0; i < b2ShapeType.e_shapeTypeCount; i++) {\r\n            this.m_registers[i] = [ /*b2ShapeType.e_shapeTypeCount*/];\r\n            for (let j = 0; j < b2ShapeType.e_shapeTypeCount; j++) {\r\n                this.m_registers[i][j] = new b2ContactRegister();\r\n            }\r\n        }\r\n        this.AddType(b2CircleContact.Create, b2CircleContact.Destroy, b2ShapeType.e_circleShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2PolygonAndCircleContact.Create, b2PolygonAndCircleContact.Destroy, b2ShapeType.e_polygonShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2PolygonContact.Create, b2PolygonContact.Destroy, b2ShapeType.e_polygonShape, b2ShapeType.e_polygonShape);\r\n        this.AddType(b2EdgeAndCircleContact.Create, b2EdgeAndCircleContact.Destroy, b2ShapeType.e_edgeShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2EdgeAndPolygonContact.Create, b2EdgeAndPolygonContact.Destroy, b2ShapeType.e_edgeShape, b2ShapeType.e_polygonShape);\r\n        this.AddType(b2ChainAndCircleContact.Create, b2ChainAndCircleContact.Destroy, b2ShapeType.e_chainShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2ChainAndPolygonContact.Create, b2ChainAndPolygonContact.Destroy, b2ShapeType.e_chainShape, b2ShapeType.e_polygonShape);\r\n    }\r\n    Create(fixtureA, indexA, fixtureB, indexB) {\r\n        const type1 = fixtureA.GetType();\r\n        const type2 = fixtureB.GetType();\r\n        // DEBUG: b2Assert(0 <= type1 && type1 < b2ShapeType.e_shapeTypeCount);\r\n        // DEBUG: b2Assert(0 <= type2 && type2 < b2ShapeType.e_shapeTypeCount);\r\n        const reg = this.m_registers[type1][type2];\r\n        if (reg.createFcn) {\r\n            const c = reg.createFcn(this.m_allocator);\r\n            if (reg.primary) {\r\n                c.Reset(fixtureA, indexA, fixtureB, indexB);\r\n            }\r\n            else {\r\n                c.Reset(fixtureB, indexB, fixtureA, indexA);\r\n            }\r\n            return c;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    Destroy(contact) {\r\n        const fixtureA = contact.m_fixtureA;\r\n        const fixtureB = contact.m_fixtureB;\r\n        if (contact.m_manifold.pointCount > 0 &&\r\n            !fixtureA.IsSensor() &&\r\n            !fixtureB.IsSensor()) {\r\n            fixtureA.GetBody().SetAwake(true);\r\n            fixtureB.GetBody().SetAwake(true);\r\n        }\r\n        const typeA = fixtureA.GetType();\r\n        const typeB = fixtureB.GetType();\r\n        // DEBUG: b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\r\n        // DEBUG: b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\r\n        const reg = this.m_registers[typeA][typeB];\r\n        if (reg.destroyFcn) {\r\n            reg.destroyFcn(contact, this.m_allocator);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb250YWN0RmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyQ29udGFjdEZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFN0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3RELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBR3RFLE1BQU0sT0FBTyxpQkFBaUI7SUFBOUI7UUFDRSw0QkFBNEI7UUFDckIsY0FBUyxHQUEyQyxJQUFJLENBQUM7UUFDekQsZUFBVSxHQUEwRCxJQUFJLENBQUM7UUFDekUsWUFBTyxHQUFZLEtBQUssQ0FBQztJQUNsQyxDQUFDO0NBQUE7QUFFRCxNQUFNLE9BQU8sZ0JBQWdCO0lBSTNCLFlBQVksU0FBYztRQUhuQixnQkFBVyxHQUFRLElBQUksQ0FBQztRQUk3QixJQUFJLENBQUMsV0FBVyxHQUFHLFNBQVMsQ0FBQztRQUM3QixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUM3QixDQUFDO0lBRU8sT0FBTyxDQUFDLFNBQXdDLEVBQUUsVUFBd0QsRUFBRSxLQUFrQixFQUFFLEtBQWtCO1FBQ3hK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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_maxManifoldPoints, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2BodyType } from \"./b2Body\";\r\n// #endif\r\n/// Joints and fixtures are destroyed when their associated\r\n/// body is destroyed. Implement this listener so that you\r\n/// may nullify references to these joints and shapes.\r\nexport class b2DestructionListener {\r\n    /// Called when any joint is about to be destroyed due\r\n    /// to the destruction of one of its attached bodies.\r\n    SayGoodbyeJoint(joint) { }\r\n    /// Called when any fixture is about to be destroyed due\r\n    /// to the destruction of its parent body.\r\n    SayGoodbyeFixture(fixture) { }\r\n    // #if B2_ENABLE_PARTICLE\r\n    /// Called when any particle group is about to be destroyed.\r\n    SayGoodbyeParticleGroup(group) { }\r\n    /// Called when a particle is about to be destroyed.\r\n    /// The index can be used in conjunction with\r\n    /// b2ParticleSystem::GetUserDataBuffer() or\r\n    /// b2ParticleSystem::GetParticleHandleFromIndex() to determine which\r\n    /// particle has been destroyed.\r\n    SayGoodbyeParticle(system, index) { }\r\n}\r\n/// Implement this class to provide collision filtering. In other words, you can implement\r\n/// this class if you want finer control over contact creation.\r\nexport class b2ContactFilter {\r\n    /// Return true if contact calculations should be performed between these two shapes.\r\n    /// @warning for performance reasons this is only called when the AABBs begin to overlap.\r\n    ShouldCollide(fixtureA, fixtureB) {\r\n        const bodyA = fixtureA.GetBody();\r\n        const bodyB = fixtureB.GetBody();\r\n        // At least one body should be dynamic or kinematic.\r\n        if (bodyB.GetType() === b2BodyType.b2_staticBody && bodyA.GetType() === b2BodyType.b2_staticBody) {\r\n            return false;\r\n        }\r\n        // Does a joint prevent collision?\r\n        if (!bodyB.ShouldCollideConnected(bodyA)) {\r\n            return false;\r\n        }\r\n        const filter1 = fixtureA.GetFilterData();\r\n        const filter2 = fixtureB.GetFilterData();\r\n        if (filter1.groupIndex === filter2.groupIndex && filter1.groupIndex !== 0) {\r\n            return (filter1.groupIndex > 0);\r\n        }\r\n        const collide = (((filter1.maskBits & filter2.categoryBits) !== 0) && ((filter1.categoryBits & filter2.maskBits) !== 0));\r\n        return collide;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ShouldCollideFixtureParticle(fixture, system, index) {\r\n        return true;\r\n    }\r\n    ShouldCollideParticleParticle(system, indexA, indexB) {\r\n        return true;\r\n    }\r\n}\r\n// #endif\r\nb2ContactFilter.b2_defaultFilter = new b2ContactFilter();\r\n/// Contact impulses for reporting. Impulses are used instead of forces because\r\n/// sub-step forces may approach infinity for rigid body collisions. These\r\n/// match up one-to-one with the contact points in b2Manifold.\r\nexport class b2ContactImpulse {\r\n    constructor() {\r\n        this.normalImpulses = b2MakeNumberArray(b2_maxManifoldPoints);\r\n        this.tangentImpulses = b2MakeNumberArray(b2_maxManifoldPoints);\r\n        this.count = 0;\r\n    }\r\n}\r\n/// Implement this class to get contact information. You can use these results for\r\n/// things like sounds and game logic. You can also get contact results by\r\n/// traversing the contact lists after the time step. However, you might miss\r\n/// some contacts because continuous physics leads to sub-stepping.\r\n/// Additionally you may receive multiple callbacks for the same contact in a\r\n/// single time step.\r\n/// You should strive to make your callbacks efficient because there may be\r\n/// many callbacks per time step.\r\n/// @warning You cannot create/destroy Box2D entities inside these callbacks.\r\nexport class b2ContactListener {\r\n    /// Called when two fixtures begin to touch.\r\n    BeginContact(contact) { }\r\n    /// Called when two fixtures cease to touch.\r\n    EndContact(contact) { }\r\n    // #if B2_ENABLE_PARTICLE\r\n    BeginContactFixtureParticle(system, contact) { }\r\n    EndContactFixtureParticle(system, contact) { }\r\n    BeginContactParticleParticle(system, contact) { }\r\n    EndContactParticleParticle(system, contact) { }\r\n    // #endif\r\n    /// This is called after a contact is updated. This allows you to inspect a\r\n    /// contact before it goes to the solver. If you are careful, you can modify the\r\n    /// contact manifold (e.g. disable contact).\r\n    /// A copy of the old manifold is provided so that you can detect changes.\r\n    /// Note: this is called only for awake bodies.\r\n    /// Note: this is called even when the number of contact points is zero.\r\n    /// Note: this is not called for sensors.\r\n    /// Note: if you set the number of contact points to zero, you will not\r\n    /// get an EndContact callback. However, you may get a BeginContact callback\r\n    /// the next step.\r\n    PreSolve(contact, oldManifold) { }\r\n    /// This lets you inspect a contact after the solver is finished. This is useful\r\n    /// for inspecting impulses.\r\n    /// Note: the contact manifold does not include time of impact impulses, which can be\r\n    /// arbitrarily large if the sub-step is small. Hence the impulse is provided explicitly\r\n    /// in a separate data structure.\r\n    /// Note: this is only called for contacts that are touching, solid, and awake.\r\n    PostSolve(contact, impulse) { }\r\n}\r\nb2ContactListener.b2_defaultListener = new b2ContactListener();\r\n/// Callback class for AABB queries.\r\n/// See b2World::Query\r\nexport class b2QueryCallback {\r\n    /// Called for each fixture found in the query AABB.\r\n    /// @return false to terminate the query.\r\n    ReportFixture(fixture) {\r\n        return true;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ReportParticle(system, index) {\r\n        return false;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        return true;\r\n    }\r\n}\r\n/// Callback class for ray casts.\r\n/// See b2World::RayCast\r\nexport class b2RayCastCallback {\r\n    /// Called for each fixture found in the query. You control how the ray cast\r\n    /// proceeds by returning a float:\r\n    /// return -1: ignore this fixture and continue\r\n    /// return 0: terminate the ray cast\r\n    /// return fraction: clip the ray to this point\r\n    /// return 1: don't clip the ray and continue\r\n    /// @param fixture the fixture hit by the ray\r\n    /// @param point the point of initial intersection\r\n    /// @param normal the normal vector at the point of intersection\r\n    /// @return -1 to filter, 0 to terminate, fraction to clip the ray for\r\n    /// closest hit, 1 to continue\r\n    ReportFixture(fixture, point, normal, fraction) {\r\n        return fraction;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ReportParticle(system, index, point, normal, fraction) {\r\n        return 0;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        return true;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJXb3JsZENhbGxiYWNrcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0R5bmFtaWNzL2IyV29ybGRDYWxsYmFja3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUkvRSxPQUFPLEVBQVUsVUFBVSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBTTlDLFNBQVM7QUFFVCwyREFBMkQ7QUFDM0QsMERBQTBEO0FBQzFELHNEQUFzRDtBQUN0RCxNQUFNLE9BQU8scUJBQXFCO0lBQ2hDLHNEQUFzRDtJQUN0RCxxREFBcUQ7SUFDOUMsZUFBZSxDQUFDLEtBQWMsSUFBUyxDQUFDO0lBRS9DLHdEQUF3RDtJQUN4RCwwQ0FBMEM7SUFDbkMsaUJBQWlCLENBQUMsT0FBa0IsSUFBUyxDQUFDO0lBRXJELHlCQUF5QjtJQUN6Qiw0REFBNEQ7SUFDckQsdUJBQXVCLENBQUMsS0FBc0IsSUFBUyxDQUFDO0lBRS9ELG9EQUFvRDtJQUNwRCw2Q0FBNkM7SUFDN0MsNENBQTRDO0lBQzVDLHFFQUFxRTtJQUNyRSxnQ0FBZ0M7SUFDekIsa0JBQWtCLENBQUMsTUFBd0IsRUFBRSxLQUFhLElBQVMsQ0FBQztDQUU1RTtBQUVELDBGQUEwRjtBQUMxRiwrREFBK0Q7QUFDL0QsTUFBTSxPQUFPLGVBQWU7SUFDMUIscUZBQXFGO0lBQ3JGLHlGQUF5RjtJQUNsRixhQUFhLENBQUMsUUFBbUIsRUFBRSxRQUFtQjtRQUMzRCxNQUFNLEtBQUssR0FBVyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDekMsTUFBTSxLQUFLLEdBQVcsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBRXpDLG9EQUFvRDtRQUNwRCxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxVQUFVLENBQUMsYUFBYSxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxVQUFVLENBQUMsYUFBYSxFQUFFO1lBQ2hHLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxrQ0FBa0M7UUFDbEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN4QyxPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsTUFBTSxPQUFPLEdBQWEsUUFBUSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sT0FBTyxHQUFhLFFBQVEsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUVuRCxJQUFJLE9BQU8sQ0FBQyxVQUFVLEtBQUssT0FBTyxDQUFDLFVBQVUsSUFBSSxPQUFPLENBQUMsVUFBVSxLQUFLLENBQUMsRUFBRTtZQUN6RSxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNqQztRQUVELE1BQU0sT0FBTyxHQUFZLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xJLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFRCx5QkFBeUI7SUFDbEIsNEJBQTRCLENBQUMsT0FBa0IsRUFBRSxNQUF3QixFQUFFLEtBQWE7UUFDN0YsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sNkJBQTZCLENBQUMsTUFBd0IsRUFBRSxNQUFjLEVBQUUsTUFBYztRQUMzRixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7O0FBQ0QsU0FBUztBQUVjLGdDQUFnQixHQUFvQixJQUFJLGVBQWUsRUFBRSxDQUFDO0FBR25GLCtFQUErRTtBQUMvRSwwRUFBMEU7QUFDMUUsOERBQThEO0FBQzlELE1BQU0sT0FBTyxnQkFBZ0I7SUFBN0I7UUFDUyxtQkFBYyxHQUFhLGlCQUFpQixDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDbkUsb0JBQWUsR0FBYSxpQkFBaUIsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ3BFLFVBQUssR0FBVyxDQUFDLENBQUM7SUFDM0IsQ0FBQztDQUFBO0FBRUQsa0ZBQWtGO0FBQ2xGLDBFQUEwRTtBQUMxRSw2RUFBNkU7QUFDN0UsbUVBQW1FO0FBQ25FLDZFQUE2RTtBQUM3RSxxQkFBcUI7QUFDckIsMkVBQTJFO0FBQzNFLGlDQUFpQztBQUNqQyw2RUFBNkU7QUFDN0UsTUFBTSxPQUFPLGlCQUFpQjtJQUM1Qiw0Q0FBNEM7SUFDckMsWUFBWSxDQUFDLE9BQWtCLElBQVMsQ0FBQztJQUVoRCw0Q0FBNEM7SUFDckMsVUFBVSxDQUFDLE9BQWtCLElBQVMsQ0FBQztJQUU5Qyx5QkFBeUI7SUFDbEIsMkJBQTJCLENBQUMsTUFBd0IsRUFBRSxPQUE4QixJQUFTLENBQUM7SUFDOUYseUJBQXlCLENBQUMsTUFBd0IsRUFBRSxPQUE4QixJQUFTLENBQUM7SUFDNUYsNEJBQTRCLENBQUMsTUFBd0IsRUFBRSxPQUEwQixJQUFTLENBQUM7SUFDM0YsMEJBQTBCLENBQUMsTUFBd0IsRUFBRSxPQUEwQixJQUFTLENBQUM7SUFDaEcsU0FBUztJQUVULDJFQUEyRTtJQUMzRSxnRkFBZ0Y7SUFDaEYsNENBQTRDO0lBQzVDLDBFQUEwRTtJQUMxRSwrQ0FBK0M7SUFDL0Msd0VBQXdFO0lBQ3hFLHlDQUF5QztJQUN6Qyx1RUFBdUU7SUFDdkUsNEVBQTRFO0lBQzVFLGtCQUFrQjtJQUNYLFFBQVEsQ0FBQyxPQUFrQixFQUFFLFdBQXVCLElBQVMsQ0FBQztJQUVyRSxnRkFBZ0Y7SUFDaEYsNEJBQTRCO0lBQzVCLHFGQUFxRjtJQUNyRix3RkFBd0Y7SUFDeEYsaUNBQWlDO0lBQ2pDLCtFQUErRTtJQUN4RSxTQUFTLENBQUMsT0FBa0IsRUFBRSxPQUF5QixJQUFTLENBQUM7O0FBRWpELG9DQUFrQixHQUFzQixJQUFJLGlCQUFpQixFQUFFLENBQUM7QUFHekYsb0NBQW9DO0FBQ3BDLHNCQUFzQjtBQUN0QixNQUFNLE9BQU8sZUFBZTtJQUMxQixvREFBb0Q7SUFDcEQseUNBQXlDO0lBQ2xDLGFBQWEsQ0FBQyxPQUFrQjtRQUNyQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCx5QkFBeUI7SUFDbEIsY0FBYyxDQUFDLE1BQXdCLEVBQUUsS0FBYTtRQUMzRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFDTSx5QkFBeUIsQ0FBQyxNQUF3QjtRQUN2RCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FFRjtBQUlELGlDQUFpQztBQUNqQyx3QkFBd0I7QUFDeEIsTUFBTSxPQUFPLGlCQUFpQjtJQUM1Qiw0RUFBNEU7SUFDNUUsa0NBQWtDO0lBQ2xDLCtDQUErQztJQUMvQyxvQ0FBb0M7SUFDcEMsK0NBQStDO0lBQy9DLDZDQUE2QztJQUM3Qyw2Q0FBNkM7SUFDN0Msa0RBQWtEO0lBQ2xELGdFQUFnRTtJQUNoRSxzRUFBc0U7SUFDdEUsOEJBQThCO0lBQ3ZCLGFBQWEsQ0FBQyxPQUFrQixFQUFFLEtBQWEsRUFBRSxNQUFjLEVBQUUsUUFBZ0I7UUFDdEYsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztJQUVELHlCQUF5QjtJQUNsQixjQUFjLENBQUMsTUFBd0IsRUFBRSxLQUFhLEVBQUUsS0FBYSxFQUFFLE1BQWMsRUFBRSxRQUFnQjtRQUM1RyxPQUFPLENBQUMsQ0FBQztJQUNYLENBQUM7SUFDTSx5QkFBeUIsQ0FBQyxNQUF3QjtRQUN2RCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FFRiJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2BroadPhase } from \"../Collision/b2BroadPhase\";\r\nimport { b2TestOverlapAABB } from \"../Collision/b2Collision\";\r\nimport { b2ContactFactory } from \"./Contacts/b2ContactFactory\";\r\nimport { b2BodyType } from \"./b2Body\";\r\nimport { b2ContactFilter, b2ContactListener } from \"./b2WorldCallbacks\";\r\n// Delegate of b2World.\r\nexport class b2ContactManager {\r\n    constructor() {\r\n        this.m_broadPhase = new b2BroadPhase();\r\n        this.m_contactList = null;\r\n        this.m_contactCount = 0;\r\n        this.m_contactFilter = b2ContactFilter.b2_defaultFilter;\r\n        this.m_contactListener = b2ContactListener.b2_defaultListener;\r\n        this.m_allocator = null;\r\n        this.m_contactFactory = new b2ContactFactory(this.m_allocator);\r\n    }\r\n    // Broad-phase callback.\r\n    AddPair(proxyA, proxyB) {\r\n        // DEBUG: b2Assert(proxyA instanceof b2FixtureProxy);\r\n        // DEBUG: b2Assert(proxyB instanceof b2FixtureProxy);\r\n        let fixtureA = proxyA.fixture;\r\n        let fixtureB = proxyB.fixture;\r\n        let indexA = proxyA.childIndex;\r\n        let indexB = proxyB.childIndex;\r\n        let bodyA = fixtureA.GetBody();\r\n        let bodyB = fixtureB.GetBody();\r\n        // Are the fixtures on the same body?\r\n        if (bodyA === bodyB) {\r\n            return;\r\n        }\r\n        // TODO_ERIN use a hash table to remove a potential bottleneck when both\r\n        // bodies have a lot of contacts.\r\n        // Does a contact already exist?\r\n        let edge = bodyB.GetContactList();\r\n        while (edge) {\r\n            if (edge.other === bodyA) {\r\n                const fA = edge.contact.GetFixtureA();\r\n                const fB = edge.contact.GetFixtureB();\r\n                const iA = edge.contact.GetChildIndexA();\r\n                const iB = edge.contact.GetChildIndexB();\r\n                if (fA === fixtureA && fB === fixtureB && iA === indexA && iB === indexB) {\r\n                    // A contact already exists.\r\n                    return;\r\n                }\r\n                if (fA === fixtureB && fB === fixtureA && iA === indexB && iB === indexA) {\r\n                    // A contact already exists.\r\n                    return;\r\n                }\r\n            }\r\n            edge = edge.next;\r\n        }\r\n        // Check user filtering.\r\n        if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\r\n            return;\r\n        }\r\n        // Call the factory.\r\n        const c = this.m_contactFactory.Create(fixtureA, indexA, fixtureB, indexB);\r\n        if (c === null) {\r\n            return;\r\n        }\r\n        // Contact creation may swap fixtures.\r\n        fixtureA = c.GetFixtureA();\r\n        fixtureB = c.GetFixtureB();\r\n        indexA = c.GetChildIndexA();\r\n        indexB = c.GetChildIndexB();\r\n        bodyA = fixtureA.m_body;\r\n        bodyB = fixtureB.m_body;\r\n        // Insert into the world.\r\n        c.m_prev = null;\r\n        c.m_next = this.m_contactList;\r\n        if (this.m_contactList !== null) {\r\n            this.m_contactList.m_prev = c;\r\n        }\r\n        this.m_contactList = c;\r\n        // Connect to island graph.\r\n        // Connect to body A\r\n        c.m_nodeA.contact = c;\r\n        c.m_nodeA.other = bodyB;\r\n        c.m_nodeA.prev = null;\r\n        c.m_nodeA.next = bodyA.m_contactList;\r\n        if (bodyA.m_contactList !== null) {\r\n            bodyA.m_contactList.prev = c.m_nodeA;\r\n        }\r\n        bodyA.m_contactList = c.m_nodeA;\r\n        // Connect to body B\r\n        c.m_nodeB.contact = c;\r\n        c.m_nodeB.other = bodyA;\r\n        c.m_nodeB.prev = null;\r\n        c.m_nodeB.next = bodyB.m_contactList;\r\n        if (bodyB.m_contactList !== null) {\r\n            bodyB.m_contactList.prev = c.m_nodeB;\r\n        }\r\n        bodyB.m_contactList = c.m_nodeB;\r\n        // Wake up the bodies\r\n        if (!fixtureA.IsSensor() && !fixtureB.IsSensor()) {\r\n            bodyA.SetAwake(true);\r\n            bodyB.SetAwake(true);\r\n        }\r\n        ++this.m_contactCount;\r\n    }\r\n    FindNewContacts() {\r\n        this.m_broadPhase.UpdatePairs((proxyA, proxyB) => {\r\n            this.AddPair(proxyA, proxyB);\r\n        });\r\n    }\r\n    Destroy(c) {\r\n        const fixtureA = c.GetFixtureA();\r\n        const fixtureB = c.GetFixtureB();\r\n        const bodyA = fixtureA.GetBody();\r\n        const bodyB = fixtureB.GetBody();\r\n        if (this.m_contactListener && c.IsTouching()) {\r\n            this.m_contactListener.EndContact(c);\r\n        }\r\n        // Remove from the world.\r\n        if (c.m_prev) {\r\n            c.m_prev.m_next = c.m_next;\r\n        }\r\n        if (c.m_next) {\r\n            c.m_next.m_prev = c.m_prev;\r\n        }\r\n        if (c === this.m_contactList) {\r\n            this.m_contactList = c.m_next;\r\n        }\r\n        // Remove from body 1\r\n        if (c.m_nodeA.prev) {\r\n            c.m_nodeA.prev.next = c.m_nodeA.next;\r\n        }\r\n        if (c.m_nodeA.next) {\r\n            c.m_nodeA.next.prev = c.m_nodeA.prev;\r\n        }\r\n        if (c.m_nodeA === bodyA.m_contactList) {\r\n            bodyA.m_contactList = c.m_nodeA.next;\r\n        }\r\n        // Remove from body 2\r\n        if (c.m_nodeB.prev) {\r\n            c.m_nodeB.prev.next = c.m_nodeB.next;\r\n        }\r\n        if (c.m_nodeB.next) {\r\n            c.m_nodeB.next.prev = c.m_nodeB.prev;\r\n        }\r\n        if (c.m_nodeB === bodyB.m_contactList) {\r\n            bodyB.m_contactList = c.m_nodeB.next;\r\n        }\r\n        // Call the factory.\r\n        this.m_contactFactory.Destroy(c);\r\n        --this.m_contactCount;\r\n    }\r\n    // This is the top level collision call for the time step. Here\r\n    // all the narrow phase collision is processed for the world\r\n    // contact list.\r\n    Collide() {\r\n        // Update awake contacts.\r\n        let c = this.m_contactList;\r\n        while (c) {\r\n            const fixtureA = c.GetFixtureA();\r\n            const fixtureB = c.GetFixtureB();\r\n            const indexA = c.GetChildIndexA();\r\n            const indexB = c.GetChildIndexB();\r\n            const bodyA = fixtureA.GetBody();\r\n            const bodyB = fixtureB.GetBody();\r\n            // Is this contact flagged for filtering?\r\n            if (c.m_filterFlag) {\r\n                // Check user filtering.\r\n                if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\r\n                    const cNuke = c;\r\n                    c = cNuke.m_next;\r\n                    this.Destroy(cNuke);\r\n                    continue;\r\n                }\r\n                // Clear the filtering flag.\r\n                c.m_filterFlag = false;\r\n            }\r\n            const activeA = bodyA.IsAwake() && bodyA.m_type !== b2BodyType.b2_staticBody;\r\n            const activeB = bodyB.IsAwake() && bodyB.m_type !== b2BodyType.b2_staticBody;\r\n            // At least one body must be awake and it must be dynamic or kinematic.\r\n            if (!activeA && !activeB) {\r\n                c = c.m_next;\r\n                continue;\r\n            }\r\n            const proxyA = fixtureA.m_proxies[indexA].treeNode;\r\n            const proxyB = fixtureB.m_proxies[indexB].treeNode;\r\n            const overlap = b2TestOverlapAABB(proxyA.aabb, proxyB.aabb);\r\n            // Here we destroy contacts that cease to overlap in the broad-phase.\r\n            if (!overlap) {\r\n                const cNuke = c;\r\n                c = cNuke.m_next;\r\n                this.Destroy(cNuke);\r\n                continue;\r\n            }\r\n            // The contact persists.\r\n            c.Update(this.m_contactListener);\r\n            c = c.m_next;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\n/// Profiling data. Times are in milliseconds.\r\nexport class b2Profile {\r\n    constructor() {\r\n        this.step = 0;\r\n        this.collide = 0;\r\n        this.solve = 0;\r\n        this.solveInit = 0;\r\n        this.solveVelocity = 0;\r\n        this.solvePosition = 0;\r\n        this.broadphase = 0;\r\n        this.solveTOI = 0;\r\n    }\r\n    Reset() {\r\n        this.step = 0;\r\n        this.collide = 0;\r\n        this.solve = 0;\r\n        this.solveInit = 0;\r\n        this.solveVelocity = 0;\r\n        this.solvePosition = 0;\r\n        this.broadphase = 0;\r\n        this.solveTOI = 0;\r\n        return this;\r\n    }\r\n}\r\n/// This is an internal structure.\r\nexport class b2TimeStep {\r\n    constructor() {\r\n        this.dt = 0; // time step\r\n        this.inv_dt = 0; // inverse time step (0 if dt == 0).\r\n        this.dtRatio = 0; // dt * inv_dt0\r\n        this.velocityIterations = 0;\r\n        this.positionIterations = 0;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.particleIterations = 0;\r\n        // #endif\r\n        this.warmStarting = false;\r\n    }\r\n    Copy(step) {\r\n        this.dt = step.dt;\r\n        this.inv_dt = step.inv_dt;\r\n        this.dtRatio = step.dtRatio;\r\n        this.positionIterations = step.positionIterations;\r\n        this.velocityIterations = step.velocityIterations;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.particleIterations = step.particleIterations;\r\n        // #endif\r\n        this.warmStarting = step.warmStarting;\r\n        return this;\r\n    }\r\n}\r\nexport class b2Position {\r\n    constructor() {\r\n        this.c = new b2Vec2();\r\n        this.a = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Position());\r\n    }\r\n}\r\nexport class b2Velocity {\r\n    constructor() {\r\n        this.v = new b2Vec2();\r\n        this.w = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Velocity());\r\n    }\r\n}\r\nexport class b2SolverData {\r\n    constructor() {\r\n        this.step = new b2TimeStep();\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJUaW1lU3RlcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0R5bmFtaWNzL2IyVGltZVN0ZXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTFDLDhDQUE4QztBQUM5QyxNQUFNLE9BQU8sU0FBUztJQUF0QjtRQUNTLFNBQUksR0FBVyxDQUFDLENBQUM7UUFDakIsWUFBTyxHQUFXLENBQUMsQ0FBQztRQUNwQixVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBQ2xCLGNBQVMsR0FBVyxDQUFDLENBQUM7UUFDdEIsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFDMUIsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFDMUIsZUFBVSxHQUFXLENBQUMsQ0FBQztRQUN2QixhQUFRLEdBQVcsQ0FBQyxDQUFDO0lBYTlCLENBQUM7SUFYUSxLQUFLO1FBQ1YsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7UUFDZCxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGO0FBRUQsa0NBQWtDO0FBQ2xDLE1BQU0sT0FBTyxVQUFVO0lBQXZCO1FBQ1MsT0FBRSxHQUFXLENBQUMsQ0FBQyxDQUFDLFlBQVk7UUFDNUIsV0FBTSxHQUFXLENBQUMsQ0FBQyxDQUFDLG9DQUFvQztRQUN4RCxZQUFPLEdBQVcsQ0FBQyxDQUFDLENBQUMsZUFBZTtRQUNwQyx1QkFBa0IsR0FBVyxDQUFDLENBQUM7UUFDL0IsdUJBQWtCLEdBQVcsQ0FBQyxDQUFDO1FBQ3RDLHlCQUF5QjtRQUNsQix1QkFBa0IsR0FBVyxDQUFDLENBQUM7UUFDdEMsU0FBUztRQUNGLGlCQUFZLEdBQVksS0FBSyxDQUFDO0lBY3ZDLENBQUM7SUFaUSxJQUFJLENBQUMsSUFBZ0I7UUFDMUIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDNUIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztRQUNsRCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDO1FBQ2xELHlCQUF5QjtRQUN6QixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDO1FBQ2xELFNBQVM7UUFDVCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDdEMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sVUFBVTtJQUF2QjtRQUNrQixNQUFDLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNsQyxNQUFDLEdBQVcsQ0FBQyxDQUFDO0lBS3ZCLENBQUM7SUFIUSxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQWM7UUFDcEMsT0FBTyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBUyxFQUFjLEVBQUUsQ0FBQyxJQUFJLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDMUUsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLFVBQVU7SUFBdkI7UUFDa0IsTUFBQyxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFDbEMsTUFBQyxHQUFXLENBQUMsQ0FBQztJQUt2QixDQUFDO0lBSFEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFjO1FBQ3BDLE9BQU8sV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQVMsRUFBYyxFQUFFLENBQUMsSUFBSSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQzFFLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxZQUFZO0lBQXpCO1FBQ2tCLFNBQUksR0FBZSxJQUFJLFVBQVUsRUFBRSxDQUFDO0lBR3RELENBQUM7Q0FBQSJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2_linearSlop, b2_maxManifoldPoints, b2_velocityThreshold, b2_maxLinearCorrection, b2_baumgarte, b2_toiBaumgarte, b2MakeArray } from \"../../Common/b2Settings\";\r\nimport { b2Min, b2Max, b2Clamp, b2Vec2, b2Mat22, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2WorldManifold } from \"../../Collision/b2Collision\";\r\nimport { b2ManifoldType } from \"../../Collision/b2Collision\";\r\nimport { b2TimeStep } from \"../b2TimeStep\";\r\n// Solver debugging is normally disabled because the block solver sometimes has to deal with a poorly conditioned effective mass matrix.\r\n// #define B2_DEBUG_SOLVER 0\r\nexport let g_blockSolve = false;\r\nexport class b2VelocityConstraintPoint {\r\n    constructor() {\r\n        this.rA = new b2Vec2();\r\n        this.rB = new b2Vec2();\r\n        this.normalImpulse = 0;\r\n        this.tangentImpulse = 0;\r\n        this.normalMass = 0;\r\n        this.tangentMass = 0;\r\n        this.velocityBias = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2VelocityConstraintPoint());\r\n    }\r\n}\r\nexport class b2ContactVelocityConstraint {\r\n    constructor() {\r\n        this.points = b2VelocityConstraintPoint.MakeArray(b2_maxManifoldPoints);\r\n        this.normal = new b2Vec2();\r\n        this.tangent = new b2Vec2();\r\n        this.normalMass = new b2Mat22();\r\n        this.K = new b2Mat22();\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.invMassA = 0;\r\n        this.invMassB = 0;\r\n        this.invIA = 0;\r\n        this.invIB = 0;\r\n        this.friction = 0;\r\n        this.restitution = 0;\r\n        this.tangentSpeed = 0;\r\n        this.pointCount = 0;\r\n        this.contactIndex = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ContactVelocityConstraint());\r\n    }\r\n}\r\nexport class b2ContactPositionConstraint {\r\n    constructor() {\r\n        this.localPoints = b2Vec2.MakeArray(b2_maxManifoldPoints);\r\n        this.localNormal = new b2Vec2();\r\n        this.localPoint = new b2Vec2();\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.invMassA = 0;\r\n        this.invMassB = 0;\r\n        this.localCenterA = new b2Vec2();\r\n        this.localCenterB = new b2Vec2();\r\n        this.invIA = 0;\r\n        this.invIB = 0;\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.radiusA = 0;\r\n        this.radiusB = 0;\r\n        this.pointCount = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ContactPositionConstraint());\r\n    }\r\n}\r\nexport class b2ContactSolverDef {\r\n    constructor() {\r\n        this.step = new b2TimeStep();\r\n        this.count = 0;\r\n        this.allocator = null;\r\n    }\r\n}\r\nexport class b2PositionSolverManifold {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.point = new b2Vec2();\r\n        this.separation = 0;\r\n    }\r\n    Initialize(pc, xfA, xfB, index) {\r\n        const pointA = b2PositionSolverManifold.Initialize_s_pointA;\r\n        const pointB = b2PositionSolverManifold.Initialize_s_pointB;\r\n        const planePoint = b2PositionSolverManifold.Initialize_s_planePoint;\r\n        const clipPoint = b2PositionSolverManifold.Initialize_s_clipPoint;\r\n        // DEBUG: b2Assert(pc.pointCount > 0);\r\n        switch (pc.type) {\r\n            case b2ManifoldType.e_circles: {\r\n                // b2Vec2 pointA = b2Mul(xfA, pc->localPoint);\r\n                b2Transform.MulXV(xfA, pc.localPoint, pointA);\r\n                // b2Vec2 pointB = b2Mul(xfB, pc->localPoints[0]);\r\n                b2Transform.MulXV(xfB, pc.localPoints[0], pointB);\r\n                // normal = pointB - pointA;\r\n                // normal.Normalize();\r\n                b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\r\n                // point = 0.5f * (pointA + pointB);\r\n                b2Vec2.MidVV(pointA, pointB, this.point);\r\n                // separation = b2Dot(pointB - pointA, normal) - pc->radius;\r\n                this.separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                break;\r\n            }\r\n            case b2ManifoldType.e_faceA: {\r\n                // normal = b2Mul(xfA.q, pc->localNormal);\r\n                b2Rot.MulRV(xfA.q, pc.localNormal, this.normal);\r\n                // b2Vec2 planePoint = b2Mul(xfA, pc->localPoint);\r\n                b2Transform.MulXV(xfA, pc.localPoint, planePoint);\r\n                // b2Vec2 clipPoint = b2Mul(xfB, pc->localPoints[index]);\r\n                b2Transform.MulXV(xfB, pc.localPoints[index], clipPoint);\r\n                // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\r\n                this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                // point = clipPoint;\r\n                this.point.Copy(clipPoint);\r\n                break;\r\n            }\r\n            case b2ManifoldType.e_faceB: {\r\n                // normal = b2Mul(xfB.q, pc->localNormal);\r\n                b2Rot.MulRV(xfB.q, pc.localNormal, this.normal);\r\n                // b2Vec2 planePoint = b2Mul(xfB, pc->localPoint);\r\n                b2Transform.MulXV(xfB, pc.localPoint, planePoint);\r\n                // b2Vec2 clipPoint = b2Mul(xfA, pc->localPoints[index]);\r\n                b2Transform.MulXV(xfA, pc.localPoints[index], clipPoint);\r\n                // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\r\n                this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                // point = clipPoint;\r\n                this.point.Copy(clipPoint);\r\n                // Ensure normal points from A to B\r\n                // normal = -normal;\r\n                this.normal.SelfNeg();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nb2PositionSolverManifold.Initialize_s_pointA = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_pointB = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_planePoint = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_clipPoint = new b2Vec2();\r\nexport class b2ContactSolver {\r\n    constructor() {\r\n        this.m_step = new b2TimeStep();\r\n        this.m_allocator = null;\r\n        this.m_positionConstraints = b2ContactPositionConstraint.MakeArray(1024); // TODO: b2Settings\r\n        this.m_velocityConstraints = b2ContactVelocityConstraint.MakeArray(1024); // TODO: b2Settings\r\n        this.m_count = 0;\r\n    }\r\n    Initialize(def) {\r\n        this.m_step.Copy(def.step);\r\n        this.m_allocator = def.allocator;\r\n        this.m_count = def.count;\r\n        // TODO:\r\n        if (this.m_positionConstraints.length < this.m_count) {\r\n            const new_length = b2Max(this.m_positionConstraints.length * 2, this.m_count);\r\n            while (this.m_positionConstraints.length < new_length) {\r\n                this.m_positionConstraints[this.m_positionConstraints.length] = new b2ContactPositionConstraint();\r\n            }\r\n        }\r\n        // TODO:\r\n        if (this.m_velocityConstraints.length < this.m_count) {\r\n            const new_length = b2Max(this.m_velocityConstraints.length * 2, this.m_count);\r\n            while (this.m_velocityConstraints.length < new_length) {\r\n                this.m_velocityConstraints[this.m_velocityConstraints.length] = new b2ContactVelocityConstraint();\r\n            }\r\n        }\r\n        this.m_positions = def.positions;\r\n        this.m_velocities = def.velocities;\r\n        this.m_contacts = def.contacts;\r\n        // Initialize position independent portions of the constraints.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const contact = this.m_contacts[i];\r\n            const fixtureA = contact.m_fixtureA;\r\n            const fixtureB = contact.m_fixtureB;\r\n            const shapeA = fixtureA.GetShape();\r\n            const shapeB = fixtureB.GetShape();\r\n            const radiusA = shapeA.m_radius;\r\n            const radiusB = shapeB.m_radius;\r\n            const bodyA = fixtureA.GetBody();\r\n            const bodyB = fixtureB.GetBody();\r\n            const manifold = contact.GetManifold();\r\n            const pointCount = manifold.pointCount;\r\n            // DEBUG: b2Assert(pointCount > 0);\r\n            const vc = this.m_velocityConstraints[i];\r\n            vc.friction = contact.m_friction;\r\n            vc.restitution = contact.m_restitution;\r\n            vc.tangentSpeed = contact.m_tangentSpeed;\r\n            vc.indexA = bodyA.m_islandIndex;\r\n            vc.indexB = bodyB.m_islandIndex;\r\n            vc.invMassA = bodyA.m_invMass;\r\n            vc.invMassB = bodyB.m_invMass;\r\n            vc.invIA = bodyA.m_invI;\r\n            vc.invIB = bodyB.m_invI;\r\n            vc.contactIndex = i;\r\n            vc.pointCount = pointCount;\r\n            vc.K.SetZero();\r\n            vc.normalMass.SetZero();\r\n            const pc = this.m_positionConstraints[i];\r\n            pc.indexA = bodyA.m_islandIndex;\r\n            pc.indexB = bodyB.m_islandIndex;\r\n            pc.invMassA = bodyA.m_invMass;\r\n            pc.invMassB = bodyB.m_invMass;\r\n            pc.localCenterA.Copy(bodyA.m_sweep.localCenter);\r\n            pc.localCenterB.Copy(bodyB.m_sweep.localCenter);\r\n            pc.invIA = bodyA.m_invI;\r\n            pc.invIB = bodyB.m_invI;\r\n            pc.localNormal.Copy(manifold.localNormal);\r\n            pc.localPoint.Copy(manifold.localPoint);\r\n            pc.pointCount = pointCount;\r\n            pc.radiusA = radiusA;\r\n            pc.radiusB = radiusB;\r\n            pc.type = manifold.type;\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const cp = manifold.points[j];\r\n                const vcp = vc.points[j];\r\n                if (this.m_step.warmStarting) {\r\n                    vcp.normalImpulse = this.m_step.dtRatio * cp.normalImpulse;\r\n                    vcp.tangentImpulse = this.m_step.dtRatio * cp.tangentImpulse;\r\n                }\r\n                else {\r\n                    vcp.normalImpulse = 0;\r\n                    vcp.tangentImpulse = 0;\r\n                }\r\n                vcp.rA.SetZero();\r\n                vcp.rB.SetZero();\r\n                vcp.normalMass = 0;\r\n                vcp.tangentMass = 0;\r\n                vcp.velocityBias = 0;\r\n                pc.localPoints[j].Copy(cp.localPoint);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    InitializeVelocityConstraints() {\r\n        const xfA = b2ContactSolver.InitializeVelocityConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.InitializeVelocityConstraints_s_xfB;\r\n        const worldManifold = b2ContactSolver.InitializeVelocityConstraints_s_worldManifold;\r\n        const k_maxConditionNumber = 1000;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const pc = this.m_positionConstraints[i];\r\n            const radiusA = pc.radiusA;\r\n            const radiusB = pc.radiusB;\r\n            const manifold = this.m_contacts[vc.contactIndex].GetManifold();\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const mB = vc.invMassB;\r\n            const iA = vc.invIA;\r\n            const iB = vc.invIB;\r\n            const localCenterA = pc.localCenterA;\r\n            const localCenterB = pc.localCenterB;\r\n            const cA = this.m_positions[indexA].c;\r\n            const aA = this.m_positions[indexA].a;\r\n            const vA = this.m_velocities[indexA].v;\r\n            const wA = this.m_velocities[indexA].w;\r\n            const cB = this.m_positions[indexB].c;\r\n            const aB = this.m_positions[indexB].a;\r\n            const vB = this.m_velocities[indexB].v;\r\n            const wB = this.m_velocities[indexB].w;\r\n            // DEBUG: b2Assert(manifold.pointCount > 0);\r\n            xfA.q.SetAngle(aA);\r\n            xfB.q.SetAngle(aB);\r\n            b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n            b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n            worldManifold.Initialize(manifold, xfA, radiusA, xfB, radiusB);\r\n            vc.normal.Copy(worldManifold.normal);\r\n            b2Vec2.CrossVOne(vc.normal, vc.tangent); // compute from normal\r\n            const pointCount = vc.pointCount;\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // vcp->rA = worldManifold.points[j] - cA;\r\n                b2Vec2.SubVV(worldManifold.points[j], cA, vcp.rA);\r\n                // vcp->rB = worldManifold.points[j] - cB;\r\n                b2Vec2.SubVV(worldManifold.points[j], cB, vcp.rB);\r\n                const rnA = b2Vec2.CrossVV(vcp.rA, vc.normal);\r\n                const rnB = b2Vec2.CrossVV(vcp.rB, vc.normal);\r\n                const kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                vcp.normalMass = kNormal > 0 ? 1 / kNormal : 0;\r\n                // b2Vec2 tangent = b2Cross(vc->normal, 1.0f);\r\n                const tangent = vc.tangent; // precomputed from normal\r\n                const rtA = b2Vec2.CrossVV(vcp.rA, tangent);\r\n                const rtB = b2Vec2.CrossVV(vcp.rB, tangent);\r\n                const kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\r\n                vcp.tangentMass = kTangent > 0 ? 1 / kTangent : 0;\r\n                // Setup a velocity bias for restitution.\r\n                vcp.velocityBias = 0;\r\n                // float32 vRel = b2Dot(vc->normal, vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA));\r\n                const vRel = b2Vec2.DotVV(vc.normal, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n                if (vRel < (-b2_velocityThreshold)) {\r\n                    vcp.velocityBias += (-vc.restitution * vRel);\r\n                }\r\n            }\r\n            // If we have two points, then prepare the block solver.\r\n            if (vc.pointCount === 2 && g_blockSolve) {\r\n                const vcp1 = vc.points[0];\r\n                const vcp2 = vc.points[1];\r\n                const rn1A = b2Vec2.CrossVV(vcp1.rA, vc.normal);\r\n                const rn1B = b2Vec2.CrossVV(vcp1.rB, vc.normal);\r\n                const rn2A = b2Vec2.CrossVV(vcp2.rA, vc.normal);\r\n                const rn2B = b2Vec2.CrossVV(vcp2.rB, vc.normal);\r\n                const k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\r\n                const k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\r\n                const k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\r\n                // Ensure a reasonable condition number.\r\n                // float32 k_maxConditionNumber = 1000.0f;\r\n                if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\r\n                    // K is safe to invert.\r\n                    vc.K.ex.Set(k11, k12);\r\n                    vc.K.ey.Set(k12, k22);\r\n                    vc.K.GetInverse(vc.normalMass);\r\n                }\r\n                else {\r\n                    // The constraints are redundant, just use one.\r\n                    // TODO_ERIN use deepest?\r\n                    vc.pointCount = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    WarmStart() {\r\n        const P = b2ContactSolver.WarmStart_s_P;\r\n        // Warm start.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const iA = vc.invIA;\r\n            const mB = vc.invMassB;\r\n            const iB = vc.invIB;\r\n            const pointCount = vc.pointCount;\r\n            const vA = this.m_velocities[indexA].v;\r\n            let wA = this.m_velocities[indexA].w;\r\n            const vB = this.m_velocities[indexB].v;\r\n            let wB = this.m_velocities[indexB].w;\r\n            const normal = vc.normal;\r\n            // b2Vec2 tangent = b2Cross(normal, 1.0f);\r\n            const tangent = vc.tangent; // precomputed from normal\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // b2Vec2 P = vcp->normalImpulse * normal + vcp->tangentImpulse * tangent;\r\n                b2Vec2.AddVV(b2Vec2.MulSV(vcp.normalImpulse, normal, b2Vec2.s_t0), b2Vec2.MulSV(vcp.tangentImpulse, tangent, b2Vec2.s_t1), P);\r\n                // wA -= iA * b2Cross(vcp->rA, P);\r\n                wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                // vA -= mA * P;\r\n                vA.SelfMulSub(mA, P);\r\n                // wB += iB * b2Cross(vcp->rB, P);\r\n                wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n                // vB += mB * P;\r\n                vB.SelfMulAdd(mB, P);\r\n            }\r\n            // this.m_velocities[indexA].v = vA;\r\n            this.m_velocities[indexA].w = wA;\r\n            // this.m_velocities[indexB].v = vB;\r\n            this.m_velocities[indexB].w = wB;\r\n        }\r\n    }\r\n    SolveVelocityConstraints() {\r\n        const dv = b2ContactSolver.SolveVelocityConstraints_s_dv;\r\n        const dv1 = b2ContactSolver.SolveVelocityConstraints_s_dv1;\r\n        const dv2 = b2ContactSolver.SolveVelocityConstraints_s_dv2;\r\n        const P = b2ContactSolver.SolveVelocityConstraints_s_P;\r\n        const a = b2ContactSolver.SolveVelocityConstraints_s_a;\r\n        const b = b2ContactSolver.SolveVelocityConstraints_s_b;\r\n        const x = b2ContactSolver.SolveVelocityConstraints_s_x;\r\n        const d = b2ContactSolver.SolveVelocityConstraints_s_d;\r\n        const P1 = b2ContactSolver.SolveVelocityConstraints_s_P1;\r\n        const P2 = b2ContactSolver.SolveVelocityConstraints_s_P2;\r\n        const P1P2 = b2ContactSolver.SolveVelocityConstraints_s_P1P2;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const iA = vc.invIA;\r\n            const mB = vc.invMassB;\r\n            const iB = vc.invIB;\r\n            const pointCount = vc.pointCount;\r\n            const vA = this.m_velocities[indexA].v;\r\n            let wA = this.m_velocities[indexA].w;\r\n            const vB = this.m_velocities[indexB].v;\r\n            let wB = this.m_velocities[indexB].w;\r\n            // b2Vec2 normal = vc->normal;\r\n            const normal = vc.normal;\r\n            // b2Vec2 tangent = b2Cross(normal, 1.0f);\r\n            const tangent = vc.tangent; // precomputed from normal\r\n            const friction = vc.friction;\r\n            // DEBUG: b2Assert(pointCount === 1 || pointCount === 2);\r\n            // Solve tangent constraints first because non-penetration is more important\r\n            // than friction.\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // Relative velocity at contact\r\n                // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), dv);\r\n                // Compute tangent force\r\n                // float32 vt = b2Dot(dv, tangent) - vc->tangentSpeed;\r\n                const vt = b2Vec2.DotVV(dv, tangent) - vc.tangentSpeed;\r\n                let lambda = vcp.tangentMass * (-vt);\r\n                // b2Clamp the accumulated force\r\n                const maxFriction = friction * vcp.normalImpulse;\r\n                const newImpulse = b2Clamp(vcp.tangentImpulse + lambda, (-maxFriction), maxFriction);\r\n                lambda = newImpulse - vcp.tangentImpulse;\r\n                vcp.tangentImpulse = newImpulse;\r\n                // Apply contact impulse\r\n                // b2Vec2 P = lambda * tangent;\r\n                b2Vec2.MulSV(lambda, tangent, P);\r\n                // vA -= mA * P;\r\n                vA.SelfMulSub(mA, P);\r\n                // wA -= iA * b2Cross(vcp->rA, P);\r\n                wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                // vB += mB * P;\r\n                vB.SelfMulAdd(mB, P);\r\n                // wB += iB * b2Cross(vcp->rB, P);\r\n                wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n            }\r\n            // Solve normal constraints\r\n            if (vc.pointCount === 1 || g_blockSolve === false) {\r\n                for (let j = 0; j < pointCount; ++j) {\r\n                    const vcp = vc.points[j];\r\n                    // Relative velocity at contact\r\n                    // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\r\n                    b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), dv);\r\n                    // Compute normal impulse\r\n                    // float32 vn = b2Dot(dv, normal);\r\n                    const vn = b2Vec2.DotVV(dv, normal);\r\n                    let lambda = (-vcp.normalMass * (vn - vcp.velocityBias));\r\n                    // b2Clamp the accumulated impulse\r\n                    // float32 newImpulse = b2Max(vcp->normalImpulse + lambda, 0.0f);\r\n                    const newImpulse = b2Max(vcp.normalImpulse + lambda, 0);\r\n                    lambda = newImpulse - vcp.normalImpulse;\r\n                    vcp.normalImpulse = newImpulse;\r\n                    // Apply contact impulse\r\n                    // b2Vec2 P = lambda * normal;\r\n                    b2Vec2.MulSV(lambda, normal, P);\r\n                    // vA -= mA * P;\r\n                    vA.SelfMulSub(mA, P);\r\n                    // wA -= iA * b2Cross(vcp->rA, P);\r\n                    wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                    // vB += mB * P;\r\n                    vB.SelfMulAdd(mB, P);\r\n                    // wB += iB * b2Cross(vcp->rB, P);\r\n                    wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n                }\r\n            }\r\n            else {\r\n                // Block solver developed in collaboration with Dirk Gregorius (back in 01/07 on Box2D_Lite).\r\n                // Build the mini LCP for this contact patch\r\n                //\r\n                // vn = A * x + b, vn >= 0, x >= 0 and vn_i * x_i = 0 with i = 1..2\r\n                //\r\n                // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\r\n                // b = vn0 - velocityBias\r\n                //\r\n                // The system is solved using the \"Total enumeration method\" (s. Murty). The complementary constraint vn_i * x_i\r\n                // implies that we must have in any solution either vn_i = 0 or x_i = 0. So for the 2D contact problem the cases\r\n                // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and vn1 = 0 need to be tested. The first valid\r\n                // solution that satisfies the problem is chosen.\r\n                //\r\n                // In order to account of the accumulated impulse 'a' (because of the iterative nature of the solver which only requires\r\n                // that the accumulated impulse is clamped and not the incremental impulse) we change the impulse variable (x_i).\r\n                //\r\n                // Substitute:\r\n                //\r\n                // x = a + d\r\n                //\r\n                // a := old total impulse\r\n                // x := new total impulse\r\n                // d := incremental impulse\r\n                //\r\n                // For the current iteration we extend the formula for the incremental impulse\r\n                // to compute the new total impulse:\r\n                //\r\n                // vn = A * d + b\r\n                //    = A * (x - a) + b\r\n                //    = A * x + b - A * a\r\n                //    = A * x + b'\r\n                // b' = b - A * a;\r\n                const cp1 = vc.points[0];\r\n                const cp2 = vc.points[1];\r\n                // b2Vec2 a(cp1->normalImpulse, cp2->normalImpulse);\r\n                a.Set(cp1.normalImpulse, cp2.normalImpulse);\r\n                // DEBUG: b2Assert(a.x >= 0 && a.y >= 0);\r\n                // Relative velocity at contact\r\n                // b2Vec2 dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, cp1.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, cp1.rA, b2Vec2.s_t1), dv1);\r\n                // b2Vec2 dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, cp2.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, cp2.rA, b2Vec2.s_t1), dv2);\r\n                // Compute normal velocity\r\n                // float32 vn1 = b2Dot(dv1, normal);\r\n                let vn1 = b2Vec2.DotVV(dv1, normal);\r\n                // float32 vn2 = b2Dot(dv2, normal);\r\n                let vn2 = b2Vec2.DotVV(dv2, normal);\r\n                // b2Vec2 b;\r\n                b.x = vn1 - cp1.velocityBias;\r\n                b.y = vn2 - cp2.velocityBias;\r\n                // Compute b'\r\n                // b -= b2Mul(vc->K, a);\r\n                b.SelfSub(b2Mat22.MulMV(vc.K, a, b2Vec2.s_t0));\r\n                /*\r\n                #if B2_DEBUG_SOLVER === 1\r\n                const k_errorTol: number = 0.001;\r\n                #endif\r\n                */\r\n                for (;;) {\r\n                    //\r\n                    // Case 1: vn = 0\r\n                    //\r\n                    // 0 = A * x + b'\r\n                    //\r\n                    // Solve for x:\r\n                    //\r\n                    // x = - inv(A) * b'\r\n                    //\r\n                    // b2Vec2 x = - b2Mul(vc->normalMass, b);\r\n                    b2Mat22.MulMV(vc.normalMass, b, x).SelfNeg();\r\n                    if (x.x >= 0 && x.y >= 0) {\r\n                        // Get the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n                        dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn1 = b2Dot(dv1, normal);\r\n                        vn2 = b2Dot(dv2, normal);\r\n            \r\n                        b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\r\n                        b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 2: vn1 = 0 and x2 = 0\r\n                    //\r\n                    //   0 = a11 * x1 + a12 * 0 + b1'\r\n                    // vn2 = a21 * x1 + a22 * 0 + b2'\r\n                    //\r\n                    x.x = (-cp1.normalMass * b.x);\r\n                    x.y = 0;\r\n                    vn1 = 0;\r\n                    vn2 = vc.K.ex.y * x.x + b.y;\r\n                    if (x.x >= 0 && vn2 >= 0) {\r\n                        // Get the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn1 = b2Dot(dv1, normal);\r\n            \r\n                        b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 3: vn2 = 0 and x1 = 0\r\n                    //\r\n                    // vn1 = a11 * 0 + a12 * x2 + b1'\r\n                    //   0 = a21 * 0 + a22 * x2 + b2'\r\n                    //\r\n                    x.x = 0;\r\n                    x.y = (-cp2.normalMass * b.y);\r\n                    vn1 = vc.K.ey.x * x.y + b.x;\r\n                    vn2 = 0;\r\n                    if (x.y >= 0 && vn1 >= 0) {\r\n                        // Resubstitute for the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn2 = b2Dot(dv2, normal);\r\n            \r\n                        b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 4: x1 = 0 and x2 = 0\r\n                    //\r\n                    // vn1 = b1\r\n                    // vn2 = b2;\r\n                    x.x = 0;\r\n                    x.y = 0;\r\n                    vn1 = b.x;\r\n                    vn2 = b.y;\r\n                    if (vn1 >= 0 && vn2 >= 0) {\r\n                        // Resubstitute for the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        break;\r\n                    }\r\n                    // No solution, give up. This is hit sometimes, but it doesn't seem to matter.\r\n                    break;\r\n                }\r\n            }\r\n            // this.m_velocities[indexA].v = vA;\r\n            this.m_velocities[indexA].w = wA;\r\n            // this.m_velocities[indexB].v = vB;\r\n            this.m_velocities[indexB].w = wB;\r\n        }\r\n    }\r\n    StoreImpulses() {\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const manifold = this.m_contacts[vc.contactIndex].GetManifold();\r\n            for (let j = 0; j < vc.pointCount; ++j) {\r\n                manifold.points[j].normalImpulse = vc.points[j].normalImpulse;\r\n                manifold.points[j].tangentImpulse = vc.points[j].tangentImpulse;\r\n            }\r\n        }\r\n    }\r\n    SolvePositionConstraints() {\r\n        const xfA = b2ContactSolver.SolvePositionConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.SolvePositionConstraints_s_xfB;\r\n        const psm = b2ContactSolver.SolvePositionConstraints_s_psm;\r\n        const rA = b2ContactSolver.SolvePositionConstraints_s_rA;\r\n        const rB = b2ContactSolver.SolvePositionConstraints_s_rB;\r\n        const P = b2ContactSolver.SolvePositionConstraints_s_P;\r\n        let minSeparation = 0;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const pc = this.m_positionConstraints[i];\r\n            const indexA = pc.indexA;\r\n            const indexB = pc.indexB;\r\n            const localCenterA = pc.localCenterA;\r\n            const mA = pc.invMassA;\r\n            const iA = pc.invIA;\r\n            const localCenterB = pc.localCenterB;\r\n            const mB = pc.invMassB;\r\n            const iB = pc.invIB;\r\n            const pointCount = pc.pointCount;\r\n            const cA = this.m_positions[indexA].c;\r\n            let aA = this.m_positions[indexA].a;\r\n            const cB = this.m_positions[indexB].c;\r\n            let aB = this.m_positions[indexB].a;\r\n            // Solve normal constraints\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                xfA.q.SetAngle(aA);\r\n                xfB.q.SetAngle(aB);\r\n                b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n                b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n                psm.Initialize(pc, xfA, xfB, j);\r\n                const normal = psm.normal;\r\n                const point = psm.point;\r\n                const separation = psm.separation;\r\n                // b2Vec2 rA = point - cA;\r\n                b2Vec2.SubVV(point, cA, rA);\r\n                // b2Vec2 rB = point - cB;\r\n                b2Vec2.SubVV(point, cB, rB);\r\n                // Track max constraint error.\r\n                minSeparation = b2Min(minSeparation, separation);\r\n                // Prevent large corrections and allow slop.\r\n                const C = b2Clamp(b2_baumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\r\n                // Compute the effective mass.\r\n                // float32 rnA = b2Cross(rA, normal);\r\n                const rnA = b2Vec2.CrossVV(rA, normal);\r\n                // float32 rnB = b2Cross(rB, normal);\r\n                const rnB = b2Vec2.CrossVV(rB, normal);\r\n                // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                const K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                // Compute normal impulse\r\n                const impulse = K > 0 ? -C / K : 0;\r\n                // b2Vec2 P = impulse * normal;\r\n                b2Vec2.MulSV(impulse, normal, P);\r\n                // cA -= mA * P;\r\n                cA.SelfMulSub(mA, P);\r\n                // aA -= iA * b2Cross(rA, P);\r\n                aA -= iA * b2Vec2.CrossVV(rA, P);\r\n                // cB += mB * P;\r\n                cB.SelfMulAdd(mB, P);\r\n                // aB += iB * b2Cross(rB, P);\r\n                aB += iB * b2Vec2.CrossVV(rB, P);\r\n            }\r\n            // this.m_positions[indexA].c = cA;\r\n            this.m_positions[indexA].a = aA;\r\n            // this.m_positions[indexB].c = cB;\r\n            this.m_positions[indexB].a = aB;\r\n        }\r\n        // We can't expect minSpeparation >= -b2_linearSlop because we don't\r\n        // push the separation above -b2_linearSlop.\r\n        return minSeparation > (-3 * b2_linearSlop);\r\n    }\r\n    SolveTOIPositionConstraints(toiIndexA, toiIndexB) {\r\n        const xfA = b2ContactSolver.SolveTOIPositionConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.SolveTOIPositionConstraints_s_xfB;\r\n        const psm = b2ContactSolver.SolveTOIPositionConstraints_s_psm;\r\n        const rA = b2ContactSolver.SolveTOIPositionConstraints_s_rA;\r\n        const rB = b2ContactSolver.SolveTOIPositionConstraints_s_rB;\r\n        const P = b2ContactSolver.SolveTOIPositionConstraints_s_P;\r\n        let minSeparation = 0;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const pc = this.m_positionConstraints[i];\r\n            const indexA = pc.indexA;\r\n            const indexB = pc.indexB;\r\n            const localCenterA = pc.localCenterA;\r\n            const localCenterB = pc.localCenterB;\r\n            const pointCount = pc.pointCount;\r\n            let mA = 0;\r\n            let iA = 0;\r\n            if (indexA === toiIndexA || indexA === toiIndexB) {\r\n                mA = pc.invMassA;\r\n                iA = pc.invIA;\r\n            }\r\n            let mB = 0;\r\n            let iB = 0;\r\n            if (indexB === toiIndexA || indexB === toiIndexB) {\r\n                mB = pc.invMassB;\r\n                iB = pc.invIB;\r\n            }\r\n            const cA = this.m_positions[indexA].c;\r\n            let aA = this.m_positions[indexA].a;\r\n            const cB = this.m_positions[indexB].c;\r\n            let aB = this.m_positions[indexB].a;\r\n            // Solve normal constraints\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                xfA.q.SetAngle(aA);\r\n                xfB.q.SetAngle(aB);\r\n                b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n                b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n                psm.Initialize(pc, xfA, xfB, j);\r\n                const normal = psm.normal;\r\n                const point = psm.point;\r\n                const separation = psm.separation;\r\n                // b2Vec2 rA = point - cA;\r\n                b2Vec2.SubVV(point, cA, rA);\r\n                // b2Vec2 rB = point - cB;\r\n                b2Vec2.SubVV(point, cB, rB);\r\n                // Track max constraint error.\r\n                minSeparation = b2Min(minSeparation, separation);\r\n                // Prevent large corrections and allow slop.\r\n                const C = b2Clamp(b2_toiBaumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\r\n                // Compute the effective mass.\r\n                // float32 rnA = b2Cross(rA, normal);\r\n                const rnA = b2Vec2.CrossVV(rA, normal);\r\n                // float32 rnB = b2Cross(rB, normal);\r\n                const rnB = b2Vec2.CrossVV(rB, normal);\r\n                // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                const K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                // Compute normal impulse\r\n                const impulse = K > 0 ? -C / K : 0;\r\n                // b2Vec2 P = impulse * normal;\r\n                b2Vec2.MulSV(impulse, normal, P);\r\n                // cA -= mA * P;\r\n                cA.SelfMulSub(mA, P);\r\n                // aA -= iA * b2Cross(rA, P);\r\n                aA -= iA * b2Vec2.CrossVV(rA, P);\r\n                // cB += mB * P;\r\n                cB.SelfMulAdd(mB, P);\r\n                // aB += iB * b2Cross(rB, P);\r\n                aB += iB * b2Vec2.CrossVV(rB, P);\r\n            }\r\n            // this.m_positions[indexA].c = cA;\r\n            this.m_positions[indexA].a = aA;\r\n            // this.m_positions[indexB].c = cB;\r\n            this.m_positions[indexB].a = aB;\r\n        }\r\n        // We can't expect minSpeparation >= -b2_linearSlop because we don't\r\n        // push the separation above -b2_linearSlop.\r\n        return minSeparation >= -1.5 * b2_linearSlop;\r\n    }\r\n}\r\nb2ContactSolver.InitializeVelocityConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.InitializeVelocityConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.InitializeVelocityConstraints_s_worldManifold = new b2WorldManifold();\r\nb2ContactSolver.WarmStart_s_P = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv1 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv2 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_a = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_b = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_x = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_d = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P1 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P2 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P1P2 = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.SolvePositionConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.SolvePositionConstraints_s_psm = new b2PositionSolverManifold();\r\nb2ContactSolver.SolvePositionConstraints_s_rA = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_rB = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_psm = new b2PositionSolverManifold();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_rA = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_rB = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2_timeToSleep } from \"../Common/b2Settings\";\r\nimport { b2_maxTranslation, b2_maxTranslationSquared } from \"../Common/b2Settings\";\r\nimport { b2_maxRotation, b2_maxRotationSquared } from \"../Common/b2Settings\";\r\nimport { b2_linearSleepTolerance, b2_angularSleepTolerance } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2ContactSolver, b2ContactSolverDef } from \"./Contacts/b2ContactSolver\";\r\nimport { b2BodyType } from \"./b2Body\";\r\nimport { b2SolverData, b2Position, b2Velocity } from \"./b2TimeStep\";\r\nimport { b2ContactImpulse } from \"./b2WorldCallbacks\";\r\n/*\r\nPosition Correction Notes\r\n=========================\r\nI tried the several algorithms for position correction of the 2D revolute joint.\r\nI looked at these systems:\r\n- simple pendulum (1m diameter sphere on massless 5m stick) with initial angular velocity of 100 rad/s.\r\n- suspension bridge with 30 1m long planks of length 1m.\r\n- multi-link chain with 30 1m long links.\r\n\r\nHere are the algorithms:\r\n\r\nBaumgarte - A fraction of the position error is added to the velocity error. There is no\r\nseparate position solver.\r\n\r\nPseudo Velocities - After the velocity solver and position integration,\r\nthe position error, Jacobian, and effective mass are recomputed. Then\r\nthe velocity constraints are solved with pseudo velocities and a fraction\r\nof the position error is added to the pseudo velocity error. The pseudo\r\nvelocities are initialized to zero and there is no warm-starting. After\r\nthe position solver, the pseudo velocities are added to the positions.\r\nThis is also called the First Order World method or the Position LCP method.\r\n\r\nModified Nonlinear Gauss-Seidel (NGS) - Like Pseudo Velocities except the\r\nposition error is re-computed for each constraint and the positions are updated\r\nafter the constraint is solved. The radius vectors (aka Jacobians) are\r\nre-computed too (otherwise the algorithm has horrible instability). The pseudo\r\nvelocity states are not needed because they are effectively zero at the beginning\r\nof each iteration. Since we have the current position error, we allow the\r\niterations to terminate early if the error becomes smaller than b2_linearSlop.\r\n\r\nFull NGS or just NGS - Like Modified NGS except the effective mass are re-computed\r\neach time a constraint is solved.\r\n\r\nHere are the results:\r\nBaumgarte - this is the cheapest algorithm but it has some stability problems,\r\nespecially with the bridge. The chain links separate easily close to the root\r\nand they jitter as they struggle to pull together. This is one of the most common\r\nmethods in the field. The big drawback is that the position correction artificially\r\naffects the momentum, thus leading to instabilities and false bounce. I used a\r\nbias factor of 0.2. A larger bias factor makes the bridge less stable, a smaller\r\nfactor makes joints and contacts more spongy.\r\n\r\nPseudo Velocities - the is more stable than the Baumgarte method. The bridge is\r\nstable. However, joints still separate with large angular velocities. Drag the\r\nsimple pendulum in a circle quickly and the joint will separate. The chain separates\r\neasily and does not recover. I used a bias factor of 0.2. A larger value lead to\r\nthe bridge collapsing when a heavy cube drops on it.\r\n\r\nModified NGS - this algorithm is better in some ways than Baumgarte and Pseudo\r\nVelocities, but in other ways it is worse. The bridge and chain are much more\r\nstable, but the simple pendulum goes unstable at high angular velocities.\r\n\r\nFull NGS - stable in all tests. The joints display good stiffness. The bridge\r\nstill sags, but this is better than infinite forces.\r\n\r\nRecommendations\r\nPseudo Velocities are not really worthwhile because the bridge and chain cannot\r\nrecover from joint separation. In other cases the benefit over Baumgarte is small.\r\n\r\nModified NGS is not a robust method for the revolute joint due to the violent\r\ninstability seen in the simple pendulum. Perhaps it is viable with other constraint\r\ntypes, especially scalar constraints where the effective mass is a scalar.\r\n\r\nThis leaves Baumgarte and Full NGS. Baumgarte has small, but manageable instabilities\r\nand is very fast. I don't think we can escape Baumgarte, especially in highly\r\ndemanding cases where high constraint fidelity is not needed.\r\n\r\nFull NGS is robust and easy on the eyes. I recommend this as an option for\r\nhigher fidelity simulation and certainly for suspension bridges and long chains.\r\nFull NGS might be a good choice for ragdolls, especially motorized ragdolls where\r\njoint separation can be problematic. The number of NGS iterations can be reduced\r\nfor better performance without harming robustness much.\r\n\r\nEach joint in a can be handled differently in the position solver. So I recommend\r\na system where the user can select the algorithm on a per joint basis. I would\r\nprobably default to the slower Full NGS and let the user select the faster\r\nBaumgarte method in performance critical scenarios.\r\n*/\r\n/*\r\nCache Performance\r\n\r\nThe Box2D solvers are dominated by cache misses. Data structures are designed\r\nto increase the number of cache hits. Much of misses are due to random access\r\nto body data. The constraint structures are iterated over linearly, which leads\r\nto few cache misses.\r\n\r\nThe bodies are not accessed during iteration. Instead read only data, such as\r\nthe mass values are stored with the constraints. The mutable data are the constraint\r\nimpulses and the bodies velocities/positions. The impulses are held inside the\r\nconstraint structures. The body velocities/positions are held in compact, temporary\r\narrays to increase the number of cache hits. Linear and angular velocity are\r\nstored in a single array since multiple arrays lead to multiple misses.\r\n*/\r\n/*\r\n2D Rotation\r\n\r\nR = [cos(theta) -sin(theta)]\r\n    [sin(theta) cos(theta) ]\r\n\r\nthetaDot = omega\r\n\r\nLet q1 = cos(theta), q2 = sin(theta).\r\nR = [q1 -q2]\r\n    [q2  q1]\r\n\r\nq1Dot = -thetaDot * q2\r\nq2Dot = thetaDot * q1\r\n\r\nq1_new = q1_old - dt * w * q2\r\nq2_new = q2_old + dt * w * q1\r\nthen normalize.\r\n\r\nThis might be faster than computing sin+cos.\r\nHowever, we can compute sin+cos of the same angle fast.\r\n*/\r\nexport class b2Island {\r\n    constructor() {\r\n        this.m_allocator = null;\r\n        this.m_bodies = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_contacts = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_joints = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_positions = b2Position.MakeArray(1024); // TODO: b2Settings\r\n        this.m_velocities = b2Velocity.MakeArray(1024); // TODO: b2Settings\r\n        this.m_bodyCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_bodyCapacity = 0;\r\n        this.m_contactCapacity = 0;\r\n        this.m_jointCapacity = 0;\r\n    }\r\n    Initialize(bodyCapacity, contactCapacity, jointCapacity, allocator, listener) {\r\n        this.m_bodyCapacity = bodyCapacity;\r\n        this.m_contactCapacity = contactCapacity;\r\n        this.m_jointCapacity = jointCapacity;\r\n        this.m_bodyCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_allocator = allocator;\r\n        this.m_listener = listener;\r\n        // TODO:\r\n        // while (this.m_bodies.length < bodyCapacity) {\r\n        //   this.m_bodies[this.m_bodies.length] = null;\r\n        // }\r\n        // TODO:\r\n        // while (this.m_contacts.length < contactCapacity) {\r\n        //   this.m_contacts[this.m_contacts.length] = null;\r\n        // }\r\n        // TODO:\r\n        // while (this.m_joints.length < jointCapacity) {\r\n        //   this.m_joints[this.m_joints.length] = null;\r\n        // }\r\n        // TODO:\r\n        if (this.m_positions.length < bodyCapacity) {\r\n            const new_length = b2Max(this.m_positions.length * 2, bodyCapacity);\r\n            while (this.m_positions.length < new_length) {\r\n                this.m_positions[this.m_positions.length] = new b2Position();\r\n            }\r\n        }\r\n        // TODO:\r\n        if (this.m_velocities.length < bodyCapacity) {\r\n            const new_length = b2Max(this.m_velocities.length * 2, bodyCapacity);\r\n            while (this.m_velocities.length < new_length) {\r\n                this.m_velocities[this.m_velocities.length] = new b2Velocity();\r\n            }\r\n        }\r\n    }\r\n    Clear() {\r\n        this.m_bodyCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_jointCount = 0;\r\n    }\r\n    AddBody(body) {\r\n        // DEBUG: b2Assert(this.m_bodyCount < this.m_bodyCapacity);\r\n        body.m_islandIndex = this.m_bodyCount;\r\n        this.m_bodies[this.m_bodyCount++] = body;\r\n    }\r\n    AddContact(contact) {\r\n        // DEBUG: b2Assert(this.m_contactCount < this.m_contactCapacity);\r\n        this.m_contacts[this.m_contactCount++] = contact;\r\n    }\r\n    AddJoint(joint) {\r\n        // DEBUG: b2Assert(this.m_jointCount < this.m_jointCapacity);\r\n        this.m_joints[this.m_jointCount++] = joint;\r\n    }\r\n    Solve(profile, step, gravity, allowSleep) {\r\n        const timer = b2Island.s_timer.Reset();\r\n        const h = step.dt;\r\n        // Integrate velocities and apply damping. Initialize the body state.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const b = this.m_bodies[i];\r\n            // const c: b2Vec2 =\r\n            this.m_positions[i].c.Copy(b.m_sweep.c);\r\n            const a = b.m_sweep.a;\r\n            const v = this.m_velocities[i].v.Copy(b.m_linearVelocity);\r\n            let w = b.m_angularVelocity;\r\n            // Store positions for continuous collision.\r\n            b.m_sweep.c0.Copy(b.m_sweep.c);\r\n            b.m_sweep.a0 = b.m_sweep.a;\r\n            if (b.m_type === b2BodyType.b2_dynamicBody) {\r\n                // Integrate velocities.\r\n                v.x += h * (b.m_gravityScale * gravity.x + b.m_invMass * b.m_force.x);\r\n                v.y += h * (b.m_gravityScale * gravity.y + b.m_invMass * b.m_force.y);\r\n                w += h * b.m_invI * b.m_torque;\r\n                // Apply damping.\r\n                // ODE: dv/dt + c * v = 0\r\n                // Solution: v(t) = v0 * exp(-c * t)\r\n                // Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\r\n                // v2 = exp(-c * dt) * v1\r\n                // Pade approximation:\r\n                // v2 = v1 * 1 / (1 + c * dt)\r\n                v.SelfMul(1.0 / (1.0 + h * b.m_linearDamping));\r\n                w *= 1.0 / (1.0 + h * b.m_angularDamping);\r\n            }\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n        }\r\n        timer.Reset();\r\n        // Solver data\r\n        const solverData = b2Island.s_solverData;\r\n        solverData.step.Copy(step);\r\n        solverData.positions = this.m_positions;\r\n        solverData.velocities = this.m_velocities;\r\n        // Initialize velocity constraints.\r\n        const contactSolverDef = b2Island.s_contactSolverDef;\r\n        contactSolverDef.step.Copy(step);\r\n        contactSolverDef.contacts = this.m_contacts;\r\n        contactSolverDef.count = this.m_contactCount;\r\n        contactSolverDef.positions = this.m_positions;\r\n        contactSolverDef.velocities = this.m_velocities;\r\n        contactSolverDef.allocator = this.m_allocator;\r\n        const contactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\r\n        contactSolver.InitializeVelocityConstraints();\r\n        if (step.warmStarting) {\r\n            contactSolver.WarmStart();\r\n        }\r\n        for (let i = 0; i < this.m_jointCount; ++i) {\r\n            this.m_joints[i].InitVelocityConstraints(solverData);\r\n        }\r\n        profile.solveInit = timer.GetMilliseconds();\r\n        // Solve velocity constraints.\r\n        timer.Reset();\r\n        for (let i = 0; i < step.velocityIterations; ++i) {\r\n            for (let j = 0; j < this.m_jointCount; ++j) {\r\n                this.m_joints[j].SolveVelocityConstraints(solverData);\r\n            }\r\n            contactSolver.SolveVelocityConstraints();\r\n        }\r\n        // Store impulses for warm starting\r\n        contactSolver.StoreImpulses();\r\n        profile.solveVelocity = timer.GetMilliseconds();\r\n        // Integrate positions.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const c = this.m_positions[i].c;\r\n            let a = this.m_positions[i].a;\r\n            const v = this.m_velocities[i].v;\r\n            let w = this.m_velocities[i].w;\r\n            // Check for large velocities\r\n            const translation = b2Vec2.MulSV(h, v, b2Island.s_translation);\r\n            if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\r\n                const ratio = b2_maxTranslation / translation.Length();\r\n                v.SelfMul(ratio);\r\n            }\r\n            const rotation = h * w;\r\n            if (rotation * rotation > b2_maxRotationSquared) {\r\n                const ratio = b2_maxRotation / b2Abs(rotation);\r\n                w *= ratio;\r\n            }\r\n            // Integrate\r\n            c.x += h * v.x;\r\n            c.y += h * v.y;\r\n            a += h * w;\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n        }\r\n        // Solve position constraints\r\n        timer.Reset();\r\n        let positionSolved = false;\r\n        for (let i = 0; i < step.positionIterations; ++i) {\r\n            const contactsOkay = contactSolver.SolvePositionConstraints();\r\n            let jointsOkay = true;\r\n            for (let j = 0; j < this.m_jointCount; ++j) {\r\n                const jointOkay = this.m_joints[j].SolvePositionConstraints(solverData);\r\n                jointsOkay = jointsOkay && jointOkay;\r\n            }\r\n            if (contactsOkay && jointsOkay) {\r\n                // Exit early if the position errors are small.\r\n                positionSolved = true;\r\n                break;\r\n            }\r\n        }\r\n        // Copy state buffers back to the bodies\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const body = this.m_bodies[i];\r\n            body.m_sweep.c.Copy(this.m_positions[i].c);\r\n            body.m_sweep.a = this.m_positions[i].a;\r\n            body.m_linearVelocity.Copy(this.m_velocities[i].v);\r\n            body.m_angularVelocity = this.m_velocities[i].w;\r\n            body.SynchronizeTransform();\r\n        }\r\n        profile.solvePosition = timer.GetMilliseconds();\r\n        this.Report(contactSolver.m_velocityConstraints);\r\n        if (allowSleep) {\r\n            let minSleepTime = b2_maxFloat;\r\n            const linTolSqr = b2_linearSleepTolerance * b2_linearSleepTolerance;\r\n            const angTolSqr = b2_angularSleepTolerance * b2_angularSleepTolerance;\r\n            for (let i = 0; i < this.m_bodyCount; ++i) {\r\n                const b = this.m_bodies[i];\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    continue;\r\n                }\r\n                if (!b.m_autoSleepFlag ||\r\n                    b.m_angularVelocity * b.m_angularVelocity > angTolSqr ||\r\n                    b2Vec2.DotVV(b.m_linearVelocity, b.m_linearVelocity) > linTolSqr) {\r\n                    b.m_sleepTime = 0;\r\n                    minSleepTime = 0;\r\n                }\r\n                else {\r\n                    b.m_sleepTime += h;\r\n                    minSleepTime = b2Min(minSleepTime, b.m_sleepTime);\r\n                }\r\n            }\r\n            if (minSleepTime >= b2_timeToSleep && positionSolved) {\r\n                for (let i = 0; i < this.m_bodyCount; ++i) {\r\n                    const b = this.m_bodies[i];\r\n                    b.SetAwake(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveTOI(subStep, toiIndexA, toiIndexB) {\r\n        // DEBUG: b2Assert(toiIndexA < this.m_bodyCount);\r\n        // DEBUG: b2Assert(toiIndexB < this.m_bodyCount);\r\n        // Initialize the body state.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const b = this.m_bodies[i];\r\n            this.m_positions[i].c.Copy(b.m_sweep.c);\r\n            this.m_positions[i].a = b.m_sweep.a;\r\n            this.m_velocities[i].v.Copy(b.m_linearVelocity);\r\n            this.m_velocities[i].w = b.m_angularVelocity;\r\n        }\r\n        const contactSolverDef = b2Island.s_contactSolverDef;\r\n        contactSolverDef.contacts = this.m_contacts;\r\n        contactSolverDef.count = this.m_contactCount;\r\n        contactSolverDef.allocator = this.m_allocator;\r\n        contactSolverDef.step.Copy(subStep);\r\n        contactSolverDef.positions = this.m_positions;\r\n        contactSolverDef.velocities = this.m_velocities;\r\n        const contactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\r\n        // Solve position constraints.\r\n        for (let i = 0; i < subStep.positionIterations; ++i) {\r\n            const contactsOkay = contactSolver.SolveTOIPositionConstraints(toiIndexA, toiIndexB);\r\n            if (contactsOkay) {\r\n                break;\r\n            }\r\n        }\r\n        /*\r\n        #if 0\r\n          // Is the new position really safe?\r\n          for (int32 i = 0; i < this.m_contactCount; ++i) {\r\n            b2Contact* c = this.m_contacts[i];\r\n            b2Fixture* fA = c.GetFixtureA();\r\n            b2Fixture* fB = c.GetFixtureB();\r\n      \r\n            b2Body* bA = fA.GetBody();\r\n            b2Body* bB = fB.GetBody();\r\n      \r\n            int32 indexA = c.GetChildIndexA();\r\n            int32 indexB = c.GetChildIndexB();\r\n      \r\n            b2DistanceInput input;\r\n            input.proxyA.Set(fA.GetShape(), indexA);\r\n            input.proxyB.Set(fB.GetShape(), indexB);\r\n            input.transformA = bA.GetTransform();\r\n            input.transformB = bB.GetTransform();\r\n            input.useRadii = false;\r\n      \r\n            b2DistanceOutput output;\r\n            b2SimplexCache cache;\r\n            cache.count = 0;\r\n            b2Distance(&output, &cache, &input);\r\n      \r\n            if (output.distance === 0 || cache.count === 3) {\r\n              cache.count += 0;\r\n            }\r\n          }\r\n        #endif\r\n        */\r\n        // Leap of faith to new safe state.\r\n        this.m_bodies[toiIndexA].m_sweep.c0.Copy(this.m_positions[toiIndexA].c);\r\n        this.m_bodies[toiIndexA].m_sweep.a0 = this.m_positions[toiIndexA].a;\r\n        this.m_bodies[toiIndexB].m_sweep.c0.Copy(this.m_positions[toiIndexB].c);\r\n        this.m_bodies[toiIndexB].m_sweep.a0 = this.m_positions[toiIndexB].a;\r\n        // No warm starting is needed for TOI events because warm\r\n        // starting impulses were applied in the discrete solver.\r\n        contactSolver.InitializeVelocityConstraints();\r\n        // Solve velocity constraints.\r\n        for (let i = 0; i < subStep.velocityIterations; ++i) {\r\n            contactSolver.SolveVelocityConstraints();\r\n        }\r\n        // Don't store the TOI contact forces for warm starting\r\n        // because they can be quite large.\r\n        const h = subStep.dt;\r\n        // Integrate positions\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const c = this.m_positions[i].c;\r\n            let a = this.m_positions[i].a;\r\n            const v = this.m_velocities[i].v;\r\n            let w = this.m_velocities[i].w;\r\n            // Check for large velocities\r\n            const translation = b2Vec2.MulSV(h, v, b2Island.s_translation);\r\n            if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\r\n                const ratio = b2_maxTranslation / translation.Length();\r\n                v.SelfMul(ratio);\r\n            }\r\n            const rotation = h * w;\r\n            if (rotation * rotation > b2_maxRotationSquared) {\r\n                const ratio = b2_maxRotation / b2Abs(rotation);\r\n                w *= ratio;\r\n            }\r\n            // Integrate\r\n            c.SelfMulAdd(h, v);\r\n            a += h * w;\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n            // Sync bodies\r\n            const body = this.m_bodies[i];\r\n            body.m_sweep.c.Copy(c);\r\n            body.m_sweep.a = a;\r\n            body.m_linearVelocity.Copy(v);\r\n            body.m_angularVelocity = w;\r\n            body.SynchronizeTransform();\r\n        }\r\n        this.Report(contactSolver.m_velocityConstraints);\r\n    }\r\n    Report(constraints) {\r\n        if (this.m_listener === null) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.m_contactCount; ++i) {\r\n            const c = this.m_contacts[i];\r\n            if (!c) {\r\n                continue;\r\n            }\r\n            const vc = constraints[i];\r\n            const impulse = b2Island.s_impulse;\r\n            impulse.count = vc.pointCount;\r\n            for (let j = 0; j < vc.pointCount; ++j) {\r\n                impulse.normalImpulses[j] = vc.points[j].normalImpulse;\r\n                impulse.tangentImpulses[j] = vc.points[j].tangentImpulse;\r\n            }\r\n            this.m_listener.PostSolve(c, impulse);\r\n        }\r\n    }\r\n}\r\nb2Island.s_timer = new b2Timer();\r\nb2Island.s_solverData = new b2SolverData();\r\nb2Island.s_contactSolverDef = new b2ContactSolverDef();\r\nb2Island.s_contactSolver = new b2ContactSolver();\r\nb2Island.s_translation = new b2Vec2();\r\nb2Island.s_impulse = new b2ContactImpulse();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_invalidParticleIndex } from \"../Common/b2Settings\";\r\nimport { b2Clamp, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\n/**\r\n * The particle type. Can be combined with the | operator.\r\n */\r\nexport var b2ParticleFlag;\r\n(function (b2ParticleFlag) {\r\n    /// Water particle.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_waterParticle\"] = 0] = \"b2_waterParticle\";\r\n    /// Removed after next simulation step.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_zombieParticle\"] = 2] = \"b2_zombieParticle\";\r\n    /// Zero velocity.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_wallParticle\"] = 4] = \"b2_wallParticle\";\r\n    /// With restitution from stretching.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_springParticle\"] = 8] = \"b2_springParticle\";\r\n    /// With restitution from deformation.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_elasticParticle\"] = 16] = \"b2_elasticParticle\";\r\n    /// With viscosity.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_viscousParticle\"] = 32] = \"b2_viscousParticle\";\r\n    /// Without isotropic pressure.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_powderParticle\"] = 64] = \"b2_powderParticle\";\r\n    /// With surface tension.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_tensileParticle\"] = 128] = \"b2_tensileParticle\";\r\n    /// Mix color between contacting particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_colorMixingParticle\"] = 256] = \"b2_colorMixingParticle\";\r\n    /// Call b2DestructionListener on destruction.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_destructionListenerParticle\"] = 512] = \"b2_destructionListenerParticle\";\r\n    /// Prevents other particles from leaking.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_barrierParticle\"] = 1024] = \"b2_barrierParticle\";\r\n    /// Less compressibility.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_staticPressureParticle\"] = 2048] = \"b2_staticPressureParticle\";\r\n    /// Makes pairs or triads with other particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_reactiveParticle\"] = 4096] = \"b2_reactiveParticle\";\r\n    /// With high repulsive force.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_repulsiveParticle\"] = 8192] = \"b2_repulsiveParticle\";\r\n    /// Call b2ContactListener when this particle is about to interact with\r\n    /// a rigid body or stops interacting with a rigid body.\r\n    /// This results in an expensive operation compared to using\r\n    /// b2_fixtureContactFilterParticle to detect collisions between\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_fixtureContactListenerParticle\"] = 16384] = \"b2_fixtureContactListenerParticle\";\r\n    /// Call b2ContactListener when this particle is about to interact with\r\n    /// another particle or stops interacting with another particle.\r\n    /// This results in an expensive operation compared to using\r\n    /// b2_particleContactFilterParticle to detect collisions between\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_particleContactListenerParticle\"] = 32768] = \"b2_particleContactListenerParticle\";\r\n    /// Call b2ContactFilter when this particle interacts with rigid bodies.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_fixtureContactFilterParticle\"] = 65536] = \"b2_fixtureContactFilterParticle\";\r\n    /// Call b2ContactFilter when this particle interacts with other\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_particleContactFilterParticle\"] = 131072] = \"b2_particleContactFilterParticle\";\r\n})(b2ParticleFlag || (b2ParticleFlag = {}));\r\nexport class b2ParticleDef {\r\n    constructor() {\r\n        this.flags = 0;\r\n        this.position = new b2Vec2();\r\n        this.velocity = new b2Vec2();\r\n        this.color = new b2Color(0, 0, 0, 0);\r\n        this.lifetime = 0.0;\r\n        this.userData = null;\r\n        this.group = null;\r\n    }\r\n}\r\nexport function b2CalculateParticleIterations(gravity, radius, timeStep) {\r\n    // In some situations you may want more particle iterations than this,\r\n    // but to avoid excessive cycle cost, don't recommend more than this.\r\n    const B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS = 8;\r\n    const B2_RADIUS_THRESHOLD = 0.01;\r\n    const iterations = Math.ceil(Math.sqrt(gravity / (B2_RADIUS_THRESHOLD * radius)) * timeStep);\r\n    return b2Clamp(iterations, 1, B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS);\r\n}\r\nexport class b2ParticleHandle {\r\n    constructor() {\r\n        this.m_index = b2_invalidParticleIndex;\r\n    }\r\n    GetIndex() { return this.m_index; }\r\n    SetIndex(index) { this.m_index = index; }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQYXJ0aWNsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL1BhcnRpY2xlL2IyUGFydGljbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCx5QkFBeUI7QUFFekIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDL0QsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQU0sTUFBTSxrQkFBa0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsT0FBTyxFQUFRLE1BQU0sa0JBQWtCLENBQUM7QUFHakQ7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxjQThDWDtBQTlDRCxXQUFZLGNBQWM7SUFDeEIsbUJBQW1CO0lBQ25CLDJFQUFvQixDQUFBO0lBQ3BCLHVDQUF1QztJQUN2Qyw2RUFBMEIsQ0FBQTtJQUMxQixrQkFBa0I7SUFDbEIseUVBQXdCLENBQUE7SUFDeEIscUNBQXFDO0lBQ3JDLDZFQUEwQixDQUFBO0lBQzFCLHNDQUFzQztJQUN0QyxnRkFBMkIsQ0FBQTtJQUMzQixtQkFBbUI7SUFDbkIsZ0ZBQTJCLENBQUE7SUFDM0IsK0JBQStCO0lBQy9CLDhFQUEwQixDQUFBO0lBQzFCLHlCQUF5QjtJQUN6QixpRkFBMkIsQ0FBQTtJQUMzQiwyQ0FBMkM7SUFDM0MseUZBQStCLENBQUE7SUFDL0IsOENBQThDO0lBQzlDLHlHQUF1QyxDQUFBO0lBQ3ZDLDBDQUEwQztJQUMxQyxrRkFBNEIsQ0FBQTtJQUM1Qix5QkFBeUI7SUFDekIsZ0dBQW1DLENBQUE7SUFDbkMsK0NBQStDO0lBQy9DLG9GQUE2QixDQUFBO0lBQzdCLDhCQUE4QjtJQUM5QixzRkFBOEIsQ0FBQTtJQUM5Qix1RUFBdUU7SUFDdkUsd0RBQXdEO0lBQ3hELDREQUE0RDtJQUM1RCxnRUFBZ0U7SUFDaEUsY0FBYztJQUNkLGlIQUEyQyxDQUFBO0lBQzNDLHVFQUF1RTtJQUN2RSxnRUFBZ0U7SUFDaEUsNERBQTREO0lBQzVELGlFQUFpRTtJQUNqRSxjQUFjO0lBQ2QsbUhBQTRDLENBQUE7SUFDNUMsd0VBQXdFO0lBQ3hFLDZHQUF5QyxDQUFBO0lBQ3pDLGdFQUFnRTtJQUNoRSxjQUFjO0lBQ2QsZ0hBQTBDLENBQUE7QUFDNUMsQ0FBQyxFQTlDVyxjQUFjLEtBQWQsY0FBYyxRQThDekI7QUFZRCxNQUFNLE9BQU8sYUFBYTtJQUExQjtRQUNTLFVBQUssR0FBbUIsQ0FBQyxDQUFDO1FBQ2pCLGFBQVEsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ2hDLGFBQVEsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ2hDLFVBQUssR0FBWSxJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNsRCxhQUFRLEdBQVcsR0FBRyxDQUFDO1FBQ3ZCLGFBQVEsR0FBUSxJQUFJLENBQUM7UUFDckIsVUFBSyxHQUEyQixJQUFJLENBQUM7SUFDOUMsQ0FBQztDQUFBO0FBRUQsTUFBTSxVQUFVLDZCQUE2QixDQUFDLE9BQWUsRUFBRSxNQUFjLEVBQUUsUUFBZ0I7SUFDN0Ysc0VBQXNFO0lBQ3RFLHFFQUFxRTtJQUNyRSxNQUFNLHNDQUFzQyxHQUFHLENBQUMsQ0FBQztJQUNqRCxNQUFNLG1CQUFtQixHQUFHLElBQUksQ0FBQztJQUNqQyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsbUJBQW1CLEdBQUcsTUFBTSxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQztJQUM3RixPQUFPLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQyxFQUFFLHNDQUFzQyxDQUFDLENBQUM7QUFDeEUsQ0FBQztBQUVELE1BQU0sT0FBTyxnQkFBZ0I7SUFBN0I7UUFDUyxZQUFPLEdBQVcsdUJBQXVCLENBQUM7SUFHbkQsQ0FBQztJQUZRLFFBQVEsS0FBYSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzNDLFFBQVEsQ0FBQyxLQUFhLElBQVUsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO0NBQy9EO0FBRUQsU0FBUyJ9","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\nexport var b2ParticleGroupFlag;\r\n(function (b2ParticleGroupFlag) {\r\n    /// Prevents overlapping or leaking.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_solidParticleGroup\"] = 1] = \"b2_solidParticleGroup\";\r\n    /// Keeps its shape.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_rigidParticleGroup\"] = 2] = \"b2_rigidParticleGroup\";\r\n    /// Won't be destroyed if it gets empty.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupCanBeEmpty\"] = 4] = \"b2_particleGroupCanBeEmpty\";\r\n    /// Will be destroyed on next simulation step.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupWillBeDestroyed\"] = 8] = \"b2_particleGroupWillBeDestroyed\";\r\n    /// Updates depth data on next simulation step.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupNeedsUpdateDepth\"] = 16] = \"b2_particleGroupNeedsUpdateDepth\";\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupInternalMask\"] = 24] = \"b2_particleGroupInternalMask\";\r\n})(b2ParticleGroupFlag || (b2ParticleGroupFlag = {}));\r\nexport class b2ParticleGroupDef {\r\n    constructor() {\r\n        this.flags = 0;\r\n        this.groupFlags = 0;\r\n        this.position = new b2Vec2();\r\n        this.angle = 0.0;\r\n        this.linearVelocity = new b2Vec2();\r\n        this.angularVelocity = 0.0;\r\n        this.color = new b2Color();\r\n        this.strength = 1.0;\r\n        this.shapeCount = 0;\r\n        this.stride = 0;\r\n        this.particleCount = 0;\r\n        this.lifetime = 0;\r\n        this.userData = null;\r\n        this.group = null;\r\n    }\r\n}\r\nexport class b2ParticleGroup {\r\n    constructor(system) {\r\n        this.m_firstIndex = 0;\r\n        this.m_lastIndex = 0;\r\n        this.m_groupFlags = 0;\r\n        this.m_strength = 1.0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_timestamp = -1;\r\n        this.m_mass = 0.0;\r\n        this.m_inertia = 0.0;\r\n        this.m_center = new b2Vec2();\r\n        this.m_linearVelocity = new b2Vec2();\r\n        this.m_angularVelocity = 0.0;\r\n        this.m_transform = new b2Transform();\r\n        ///m_transform.SetIdentity();\r\n        this.m_userData = null;\r\n        this.m_system = system;\r\n    }\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    GetParticleSystem() {\r\n        return this.m_system;\r\n    }\r\n    GetParticleCount() {\r\n        return this.m_lastIndex - this.m_firstIndex;\r\n    }\r\n    GetBufferIndex() {\r\n        return this.m_firstIndex;\r\n    }\r\n    ContainsParticle(index) {\r\n        return this.m_firstIndex <= index && index < this.m_lastIndex;\r\n    }\r\n    GetAllParticleFlags() {\r\n        if (!this.m_system.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        let flags = 0;\r\n        for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n            flags |= this.m_system.m_flagsBuffer.data[i];\r\n        }\r\n        return flags;\r\n    }\r\n    GetGroupFlags() {\r\n        return this.m_groupFlags;\r\n    }\r\n    SetGroupFlags(flags) {\r\n        // DEBUG: b2Assert((flags & b2ParticleGroupFlag.b2_particleGroupInternalMask) === 0);\r\n        flags |= this.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupInternalMask;\r\n        this.m_system.SetGroupFlags(this, flags);\r\n    }\r\n    GetMass() {\r\n        this.UpdateStatistics();\r\n        return this.m_mass;\r\n    }\r\n    GetInertia() {\r\n        this.UpdateStatistics();\r\n        return this.m_inertia;\r\n    }\r\n    GetCenter() {\r\n        this.UpdateStatistics();\r\n        return this.m_center;\r\n    }\r\n    GetLinearVelocity() {\r\n        this.UpdateStatistics();\r\n        return this.m_linearVelocity;\r\n    }\r\n    GetAngularVelocity() {\r\n        this.UpdateStatistics();\r\n        return this.m_angularVelocity;\r\n    }\r\n    GetTransform() {\r\n        return this.m_transform;\r\n    }\r\n    GetPosition() {\r\n        return this.m_transform.p;\r\n    }\r\n    GetAngle() {\r\n        return this.m_transform.q.GetAngle();\r\n    }\r\n    GetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n        const s_t0 = b2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0;\r\n        this.UpdateStatistics();\r\n        ///  return m_linearVelocity + b2Cross(m_angularVelocity, worldPoint - m_center);\r\n        return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_center, s_t0), out);\r\n    }\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    ApplyForce(force) {\r\n        this.m_system.ApplyForce(this.m_firstIndex, this.m_lastIndex, force);\r\n    }\r\n    ApplyLinearImpulse(impulse) {\r\n        this.m_system.ApplyLinearImpulse(this.m_firstIndex, this.m_lastIndex, impulse);\r\n    }\r\n    DestroyParticles(callDestructionListener) {\r\n        if (this.m_system.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n            this.m_system.DestroyParticle(i, callDestructionListener);\r\n        }\r\n    }\r\n    UpdateStatistics() {\r\n        if (!this.m_system.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_system.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const p = new b2Vec2();\r\n        const v = new b2Vec2();\r\n        if (this.m_timestamp !== this.m_system.m_timestamp) {\r\n            const m = this.m_system.GetParticleMass();\r\n            ///  this.m_mass = 0;\r\n            this.m_mass = m * (this.m_lastIndex - this.m_firstIndex);\r\n            this.m_center.SetZero();\r\n            this.m_linearVelocity.SetZero();\r\n            for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n                ///  this.m_mass += m;\r\n                ///  this.m_center += m * this.m_system.m_positionBuffer.data[i];\r\n                this.m_center.SelfMulAdd(m, this.m_system.m_positionBuffer.data[i]);\r\n                ///  this.m_linearVelocity += m * this.m_system.m_velocityBuffer.data[i];\r\n                this.m_linearVelocity.SelfMulAdd(m, this.m_system.m_velocityBuffer.data[i]);\r\n            }\r\n            if (this.m_mass > 0) {\r\n                const inv_mass = 1 / this.m_mass;\r\n                ///this.m_center *= 1 / this.m_mass;\r\n                this.m_center.SelfMul(inv_mass);\r\n                ///this.m_linearVelocity *= 1 / this.m_mass;\r\n                this.m_linearVelocity.SelfMul(inv_mass);\r\n            }\r\n            this.m_inertia = 0;\r\n            this.m_angularVelocity = 0;\r\n            for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n                ///b2Vec2 p = this.m_system.m_positionBuffer.data[i] - this.m_center;\r\n                b2Vec2.SubVV(this.m_system.m_positionBuffer.data[i], this.m_center, p);\r\n                ///b2Vec2 v = this.m_system.m_velocityBuffer.data[i] - this.m_linearVelocity;\r\n                b2Vec2.SubVV(this.m_system.m_velocityBuffer.data[i], this.m_linearVelocity, v);\r\n                this.m_inertia += m * b2Vec2.DotVV(p, p);\r\n                this.m_angularVelocity += m * b2Vec2.CrossVV(p, v);\r\n            }\r\n            if (this.m_inertia > 0) {\r\n                this.m_angularVelocity *= 1 / this.m_inertia;\r\n            }\r\n            this.m_timestamp = this.m_system.m_timestamp;\r\n        }\r\n    }\r\n}\r\nb2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0 = new b2Vec2();\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQYXJ0aWNsZUdyb3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvUGFydGljbGUvYjJQYXJ0aWNsZUdyb3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBRUgseUJBQXlCO0FBRXpCLDBEQUEwRDtBQUMxRCxPQUFPLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBTSxNQUFNLGtCQUFrQixDQUFDO0FBQzNELE9BQU8sRUFBRSxPQUFPLEVBQVEsTUFBTSxrQkFBa0IsQ0FBQztBQUtqRCxNQUFNLENBQU4sSUFBWSxtQkFhWDtBQWJELFdBQVksbUJBQW1CO0lBQzdCLG9DQUFvQztJQUNwQywrRkFBOEIsQ0FBQTtJQUM5QixvQkFBb0I7SUFDcEIsK0ZBQThCLENBQUE7SUFDOUIsd0NBQXdDO0lBQ3hDLHlHQUFtQyxDQUFBO0lBQ25DLDhDQUE4QztJQUM5QyxtSEFBd0MsQ0FBQTtJQUN4QywrQ0FBK0M7SUFDL0Msc0hBQXlDLENBQUE7SUFFekMsOEdBQWlHLENBQUE7QUFDbkcsQ0FBQyxFQWJXLG1CQUFtQixLQUFuQixtQkFBbUIsUUFhOUI7QUFzQkQsTUFBTSxPQUFPLGtCQUFrQjtJQUEvQjtRQUNTLFVBQUssR0FBbUIsQ0FBQyxDQUFDO1FBQzFCLGVBQVUsR0FBd0IsQ0FBQyxDQUFDO1FBQzNCLGFBQVEsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ3pDLFVBQUssR0FBVyxHQUFHLENBQUM7UUFDWCxtQkFBYyxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFDL0Msb0JBQWUsR0FBVyxHQUFHLENBQUM7UUFDckIsVUFBSyxHQUFZLElBQUksT0FBTyxFQUFFLENBQUM7UUFDeEMsYUFBUSxHQUFXLEdBQUcsQ0FBQztRQUd2QixlQUFVLEdBQVcsQ0FBQyxDQUFDO1FBQ3ZCLFdBQU0sR0FBVyxDQUFDLENBQUM7UUFDbkIsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFFMUIsYUFBUSxH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","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2MakeArray } from \"../Common/b2Settings\";\r\nexport class b2StackQueue {\r\n    constructor(capacity) {\r\n        this.m_front = 0;\r\n        this.m_back = 0;\r\n        this.m_capacity = 0;\r\n        this.m_buffer = b2MakeArray(capacity, (index) => null);\r\n        this.m_capacity = capacity;\r\n    }\r\n    Push(item) {\r\n        if (this.m_back >= this.m_capacity) {\r\n            for (let i = this.m_front; i < this.m_back; i++) {\r\n                this.m_buffer[i - this.m_front] = this.m_buffer[i];\r\n            }\r\n            this.m_back -= this.m_front;\r\n            this.m_front = 0;\r\n            if (this.m_back >= this.m_capacity) {\r\n                if (this.m_capacity > 0) {\r\n                    this.m_buffer.concat(b2MakeArray(this.m_capacity, (index) => null));\r\n                    this.m_capacity *= 2;\r\n                }\r\n                else {\r\n                    this.m_buffer.concat(b2MakeArray(1, (index) => null));\r\n                    this.m_capacity = 1;\r\n                }\r\n                ///m_buffer = (T*) m_allocator->Reallocate(m_buffer, sizeof(T) * m_capacity);\r\n            }\r\n        }\r\n        this.m_buffer[this.m_back] = item;\r\n        this.m_back++;\r\n    }\r\n    Pop() {\r\n        // DEBUG: b2Assert(this.m_front < this.m_back);\r\n        this.m_buffer[this.m_front] = null;\r\n        this.m_front++;\r\n    }\r\n    Empty() {\r\n        // DEBUG: b2Assert(this.m_front <= this.m_back);\r\n        return this.m_front === this.m_back;\r\n    }\r\n    Front() {\r\n        const item = this.m_buffer[this.m_front];\r\n        if (!item) {\r\n            throw new Error();\r\n        }\r\n        return item;\r\n    }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTdGFja1F1ZXVlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvUGFydGljbGUvYjJTdGFja1F1ZXVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBRUgseUJBQXlCO0FBRXpCLDBEQUEwRDtBQUMxRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFbkQsTUFBTSxPQUFPLFlBQVk7SUFLdkIsWUFBWSxRQUFnQjtRQUhyQixZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBQ3BCLFdBQU0sR0FBVyxDQUFDLENBQUM7UUFDbkIsZUFBVSxHQUFXLENBQUMsQ0FBQztRQUU1QixJQUFJLENBQUMsUUFBUSxHQUFHLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO0lBQzdCLENBQUM7SUFDTSxJQUFJLENBQUMsSUFBTztRQUNqQixJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNsQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQy9DLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BEO1lBQ0QsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQzVCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1lBQ2pCLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUNsQyxJQUFJLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxFQUFFO29CQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDcEUsSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLENBQUM7aUJBQ3RCO3FCQUFNO29CQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQ3RELElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO2lCQUNyQjtnQkFDRCw2RUFBNkU7YUFDOUU7U0FDRjtRQUNELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUNNLEdBQUc7UUFDUiwrQ0FBK0M7UUFDL0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBQ00sS0FBSztRQUNWLGdEQUFnRDtRQUNoRCxPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN0QyxDQUFDO0lBQ00sS0FBSztRQUNWLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFBRSxNQUFNLElBQUksS0FBSyxFQUFFLENBQUM7U0FBRTtRQUNqQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRjtBQUVELFNBQVMifQ==","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2StackQueue } from \"./b2StackQueue\";\r\n/**\r\n * A field representing the nearest generator from each point.\r\n */\r\nexport class b2VoronoiDiagram {\r\n    constructor(generatorCapacity) {\r\n        this.m_generatorCapacity = 0;\r\n        this.m_generatorCount = 0;\r\n        this.m_countX = 0;\r\n        this.m_countY = 0;\r\n        this.m_diagram = [];\r\n        this.m_generatorBuffer = b2MakeArray(generatorCapacity, (index) => new b2VoronoiDiagram.Generator());\r\n        this.m_generatorCapacity = generatorCapacity;\r\n    }\r\n    /**\r\n     * Add a generator.\r\n     *\r\n     * @param center the position of the generator.\r\n     * @param tag a tag used to identify the generator in callback functions.\r\n     * @param necessary whether to callback for nodes associated with the generator.\r\n     */\r\n    AddGenerator(center, tag, necessary) {\r\n        // DEBUG: b2Assert(this.m_generatorCount < this.m_generatorCapacity);\r\n        const g = this.m_generatorBuffer[this.m_generatorCount++];\r\n        g.center.Copy(center);\r\n        g.tag = tag;\r\n        g.necessary = necessary;\r\n    }\r\n    /**\r\n     * Generate the Voronoi diagram. It is rasterized with a given\r\n     * interval in the same range as the necessary generators exist.\r\n     *\r\n     * @param radius the interval of the diagram.\r\n     * @param margin margin for which the range of the diagram is extended.\r\n     */\r\n    Generate(radius, margin) {\r\n        const inverseRadius = 1 / radius;\r\n        const lower = new b2Vec2(+b2_maxFloat, +b2_maxFloat);\r\n        const upper = new b2Vec2(-b2_maxFloat, -b2_maxFloat);\r\n        let necessary_count = 0;\r\n        for (let k = 0; k < this.m_generatorCount; k++) {\r\n            const g = this.m_generatorBuffer[k];\r\n            if (g.necessary) {\r\n                b2Vec2.MinV(lower, g.center, lower);\r\n                b2Vec2.MaxV(upper, g.center, upper);\r\n                ++necessary_count;\r\n            }\r\n        }\r\n        if (necessary_count === 0) {\r\n            ///debugger;\r\n            this.m_countX = 0;\r\n            this.m_countY = 0;\r\n            return;\r\n        }\r\n        lower.x -= margin;\r\n        lower.y -= margin;\r\n        upper.x += margin;\r\n        upper.y += margin;\r\n        this.m_countX = 1 + Math.floor(inverseRadius * (upper.x - lower.x));\r\n        this.m_countY = 1 + Math.floor(inverseRadius * (upper.y - lower.y));\r\n        ///  m_diagram = (Generator**) m_allocator->Allocate(sizeof(Generator*) * m_countX * m_countY);\r\n        ///  for (int32 i = 0; i < m_countX * m_countY; i++)\r\n        ///  {\r\n        ///    m_diagram[i] = NULL;\r\n        ///  }\r\n        this.m_diagram = []; // b2MakeArray(this.m_countX * this.m_countY, (index) => null);\r\n        // (4 * m_countX * m_countY) is the queue capacity that is experimentally\r\n        // known to be necessary and sufficient for general particle distributions.\r\n        const queue = new b2StackQueue(4 * this.m_countX * this.m_countY);\r\n        for (let k = 0; k < this.m_generatorCount; k++) {\r\n            const g = this.m_generatorBuffer[k];\r\n            ///  g.center = inverseRadius * (g.center - lower);\r\n            g.center.SelfSub(lower).SelfMul(inverseRadius);\r\n            const x = Math.floor(g.center.x);\r\n            const y = Math.floor(g.center.y);\r\n            if (x >= 0 && y >= 0 && x < this.m_countX && y < this.m_countY) {\r\n                queue.Push(new b2VoronoiDiagram.Task(x, y, x + y * this.m_countX, g));\r\n            }\r\n        }\r\n        while (!queue.Empty()) {\r\n            const task = queue.Front();\r\n            const x = task.m_x;\r\n            const y = task.m_y;\r\n            const i = task.m_i;\r\n            const g = task.m_generator;\r\n            queue.Pop();\r\n            if (!this.m_diagram[i]) {\r\n                this.m_diagram[i] = g;\r\n                if (x > 0) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x - 1, y, i - 1, g));\r\n                }\r\n                if (y > 0) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y - 1, i - this.m_countX, g));\r\n                }\r\n                if (x < this.m_countX - 1) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, g));\r\n                }\r\n                if (y < this.m_countY - 1) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, g));\r\n                }\r\n            }\r\n        }\r\n        for (let y = 0; y < this.m_countY; y++) {\r\n            for (let x = 0; x < this.m_countX - 1; x++) {\r\n                const i = x + y * this.m_countX;\r\n                const a = this.m_diagram[i];\r\n                const b = this.m_diagram[i + 1];\r\n                if (a !== b) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y, i, b));\r\n                    queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, a));\r\n                }\r\n            }\r\n        }\r\n        for (let y = 0; y < this.m_countY - 1; y++) {\r\n            for (let x = 0; x < this.m_countX; x++) {\r\n                const i = x + y * this.m_countX;\r\n                const a = this.m_diagram[i];\r\n                const b = this.m_diagram[i + this.m_countX];\r\n                if (a !== b) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y, i, b));\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, a));\r\n                }\r\n            }\r\n        }\r\n        while (!queue.Empty()) {\r\n            const task = queue.Front();\r\n            const x = task.m_x;\r\n            const y = task.m_y;\r\n            const i = task.m_i;\r\n            const k = task.m_generator;\r\n            queue.Pop();\r\n            const a = this.m_diagram[i];\r\n            const b = k;\r\n            if (a !== b) {\r\n                const ax = a.center.x - x;\r\n                const ay = a.center.y - y;\r\n                const bx = b.center.x - x;\r\n                const by = b.center.y - y;\r\n                const a2 = ax * ax + ay * ay;\r\n                const b2 = bx * bx + by * by;\r\n                if (a2 > b2) {\r\n                    this.m_diagram[i] = b;\r\n                    if (x > 0) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x - 1, y, i - 1, b));\r\n                    }\r\n                    if (y > 0) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x, y - 1, i - this.m_countX, b));\r\n                    }\r\n                    if (x < this.m_countX - 1) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, b));\r\n                    }\r\n                    if (y < this.m_countY - 1) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, b));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enumerate all nodes that contain at least one necessary\r\n     * generator.\r\n     */\r\n    GetNodes(callback) {\r\n        for (let y = 0; y < this.m_countY - 1; y++) {\r\n            for (let x = 0; x < this.m_countX - 1; x++) {\r\n                const i = x + y * this.m_countX;\r\n                const a = this.m_diagram[i];\r\n                const b = this.m_diagram[i + 1];\r\n                const c = this.m_diagram[i + this.m_countX];\r\n                const d = this.m_diagram[i + 1 + this.m_countX];\r\n                if (b !== c) {\r\n                    if (a !== b && a !== c &&\r\n                        (a.necessary || b.necessary || c.necessary)) {\r\n                        callback(a.tag, b.tag, c.tag);\r\n                    }\r\n                    if (d !== b && d !== c &&\r\n                        (a.necessary || b.necessary || c.necessary)) {\r\n                        callback(b.tag, d.tag, c.tag);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n(function (b2VoronoiDiagram) {\r\n    class Generator {\r\n        constructor() {\r\n            this.center = new b2Vec2();\r\n            this.tag = 0;\r\n            this.necessary = false;\r\n        }\r\n    }\r\n    b2VoronoiDiagram.Generator = Generator;\r\n    class Task {\r\n        constructor(x, y, i, g) {\r\n            this.m_x = x;\r\n            this.m_y = y;\r\n            this.m_i = i;\r\n            this.m_generator = g;\r\n        }\r\n    }\r\n    b2VoronoiDiagram.Task = Task;\r\n})(b2VoronoiDiagram || (b2VoronoiDiagram = {})); // namespace b2VoronoiDiagram\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\n// DEBUG: import { b2Assert, b2_maxParticleIndex } from \"../Common/b2Settings\";\r\nimport { b2_linearSlop, b2_maxFloat, b2_invalidParticleIndex, b2_minParticleSystemBufferCapacity, b2_maxTriadDistanceSquared, b2_barrierCollisionTime, b2MakeArray, b2Maybe } from \"../Common/b2Settings\";\r\nimport { b2_maxParticlePressure, b2_minParticleWeight, b2_maxParticleForce, b2_particleStride } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Max, b2Abs, b2Clamp, b2Sqrt, b2InvSqrt, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"../Collision/b2Collision\";\r\nimport { b2ShapeType, b2Shape } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2EdgeShape } from \"../Collision/Shapes/b2EdgeShape\";\r\nimport { b2TimeStep } from \"../Dynamics/b2TimeStep\";\r\nimport { b2QueryCallback } from \"../Dynamics/b2WorldCallbacks\";\r\nimport { b2ParticleFlag, b2ParticleDef, b2ParticleHandle } from \"./b2Particle\";\r\nimport { b2ParticleGroupFlag, b2ParticleGroupDef, b2ParticleGroup } from \"./b2ParticleGroup\";\r\nimport { b2VoronoiDiagram } from \"./b2VoronoiDiagram\";\r\nfunction std_iter_swap(array, a, b) {\r\n    const tmp = array[a];\r\n    array[a] = array[b];\r\n    array[b] = tmp;\r\n}\r\nfunction default_compare(a, b) { return a < b; }\r\nfunction std_sort(array, first = 0, len = array.length - first, cmp = default_compare) {\r\n    let left = first;\r\n    const stack = [];\r\n    let pos = 0;\r\n    for (;;) { /* outer loop */\r\n        for (; left + 1 < len; len++) { /* sort left to len-1 */\r\n            const pivot = array[left + Math.floor(Math.random() * (len - left))]; /* pick random pivot */\r\n            stack[pos++] = len; /* sort right part later */\r\n            for (let right = left - 1;;) { /* inner loop: partitioning */\r\n                while (cmp(array[++right], pivot)) { } /* look for greater element */\r\n                while (cmp(pivot, array[--len])) { } /* look for smaller element */\r\n                if (right >= len) {\r\n                    break;\r\n                } /* partition point found? */\r\n                std_iter_swap(array, right, len); /* the only swap */\r\n            } /* partitioned, continue left part */\r\n        }\r\n        if (pos === 0) {\r\n            break;\r\n        } /* stack empty? */\r\n        left = len; /* left to right is sorted */\r\n        len = stack[--pos]; /* get next range to sort */\r\n    }\r\n    return array;\r\n}\r\nfunction std_stable_sort(array, first = 0, len = array.length - first, cmp = default_compare) {\r\n    return std_sort(array, first, len, cmp);\r\n}\r\nfunction std_remove_if(array, predicate, length = array.length) {\r\n    let l = 0;\r\n    for (let c = 0; c < length; ++c) {\r\n        // if we can be collapsed, keep l where it is.\r\n        if (predicate(array[c])) {\r\n            continue;\r\n        }\r\n        // this node can't be collapsed; push it back as far as we can.\r\n        if (c === l) {\r\n            ++l;\r\n            continue; // quick exit if we're already in the right spot\r\n        }\r\n        // array[l++] = array[c];\r\n        std_iter_swap(array, l++, c);\r\n    }\r\n    return l;\r\n}\r\nfunction std_lower_bound(array, first, last, val, cmp = default_compare) {\r\n    let count = last - first;\r\n    while (count > 0) {\r\n        const step = Math.floor(count / 2);\r\n        let it = first + step;\r\n        if (cmp(array[it], val)) {\r\n            first = ++it;\r\n            count -= step + 1;\r\n        }\r\n        else {\r\n            count = step;\r\n        }\r\n    }\r\n    return first;\r\n}\r\nfunction std_upper_bound(array, first, last, val, cmp = default_compare) {\r\n    let count = last - first;\r\n    while (count > 0) {\r\n        const step = Math.floor(count / 2);\r\n        let it = first + step;\r\n        if (!cmp(val, array[it])) {\r\n            first = ++it;\r\n            count -= step + 1;\r\n        }\r\n        else {\r\n            count = step;\r\n        }\r\n    }\r\n    return first;\r\n}\r\nfunction std_rotate(array, first, n_first, last) {\r\n    let next = n_first;\r\n    while (first !== next) {\r\n        std_iter_swap(array, first++, next++);\r\n        if (next === last) {\r\n            next = n_first;\r\n        }\r\n        else if (first === n_first) {\r\n            n_first = next;\r\n        }\r\n    }\r\n}\r\nfunction std_unique(array, first, last, cmp) {\r\n    if (first === last) {\r\n        return last;\r\n    }\r\n    let result = first;\r\n    while (++first !== last) {\r\n        if (!cmp(array[result], array[first])) {\r\n            ///array[++result] = array[first];\r\n            std_iter_swap(array, ++result, first);\r\n        }\r\n    }\r\n    return ++result;\r\n}\r\nexport class b2GrowableBuffer {\r\n    constructor(allocator) {\r\n        this.data = [];\r\n        this.count = 0;\r\n        this.capacity = 0;\r\n        this.allocator = allocator;\r\n    }\r\n    Append() {\r\n        if (this.count >= this.capacity) {\r\n            this.Grow();\r\n        }\r\n        return this.count++;\r\n    }\r\n    Reserve(newCapacity) {\r\n        if (this.capacity >= newCapacity) {\r\n            return;\r\n        }\r\n        // DEBUG: b2Assert(this.capacity === this.data.length);\r\n        for (let i = this.capacity; i < newCapacity; ++i) {\r\n            this.data[i] = this.allocator();\r\n        }\r\n        this.capacity = newCapacity;\r\n    }\r\n    Grow() {\r\n        // Double the capacity.\r\n        const newCapacity = this.capacity ? 2 * this.capacity : b2_minParticleSystemBufferCapacity;\r\n        // DEBUG: b2Assert(newCapacity > this.capacity);\r\n        this.Reserve(newCapacity);\r\n    }\r\n    Free() {\r\n        if (this.data.length === 0) {\r\n            return;\r\n        }\r\n        this.data = [];\r\n        this.capacity = 0;\r\n        this.count = 0;\r\n    }\r\n    Shorten(newEnd) {\r\n        // DEBUG: b2Assert(false);\r\n    }\r\n    Data() {\r\n        return this.data;\r\n    }\r\n    GetCount() {\r\n        return this.count;\r\n    }\r\n    SetCount(newCount) {\r\n        // DEBUG: b2Assert(0 <= newCount && newCount <= this.capacity);\r\n        this.count = newCount;\r\n    }\r\n    GetCapacity() {\r\n        return this.capacity;\r\n    }\r\n    RemoveIf(pred) {\r\n        // DEBUG: let count = 0;\r\n        // DEBUG: for (let i = 0; i < this.count; ++i) {\r\n        // DEBUG:   if (!pred(this.data[i])) {\r\n        // DEBUG:     count++;\r\n        // DEBUG:   }\r\n        // DEBUG: }\r\n        this.count = std_remove_if(this.data, pred, this.count);\r\n        // DEBUG: b2Assert(count === this.count);\r\n    }\r\n    Unique(pred) {\r\n        this.count = std_unique(this.data, 0, this.count, pred);\r\n    }\r\n}\r\nexport class b2FixtureParticleQueryCallback extends b2QueryCallback {\r\n    constructor(system) {\r\n        super();\r\n        this.m_system = system;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        // Skip reporting particles.\r\n        return false;\r\n    }\r\n    ReportFixture(fixture) {\r\n        if (fixture.IsSensor()) {\r\n            return true;\r\n        }\r\n        const shape = fixture.GetShape();\r\n        const childCount = shape.GetChildCount();\r\n        for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n            const aabb = fixture.GetAABB(childIndex);\r\n            const enumerator = this.m_system.GetInsideBoundsEnumerator(aabb);\r\n            let index;\r\n            while ((index = enumerator.GetNext()) >= 0) {\r\n                this.ReportFixtureAndParticle(fixture, childIndex, index);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    ReportParticle(system, index) {\r\n        return false;\r\n    }\r\n    ReportFixtureAndParticle(fixture, childIndex, index) {\r\n        // DEBUG: b2Assert(false); // pure virtual\r\n    }\r\n}\r\nexport class b2ParticleContact {\r\n    constructor() {\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.weight = 0;\r\n        this.normal = new b2Vec2();\r\n        this.flags = 0;\r\n    }\r\n    SetIndices(a, b) {\r\n        // DEBUG: b2Assert(a <= b2_maxParticleIndex && b <= b2_maxParticleIndex);\r\n        this.indexA = a;\r\n        this.indexB = b;\r\n    }\r\n    SetWeight(w) {\r\n        this.weight = w;\r\n    }\r\n    SetNormal(n) {\r\n        this.normal.Copy(n);\r\n    }\r\n    SetFlags(f) {\r\n        this.flags = f;\r\n    }\r\n    GetIndexA() {\r\n        return this.indexA;\r\n    }\r\n    GetIndexB() {\r\n        return this.indexB;\r\n    }\r\n    GetWeight() {\r\n        return this.weight;\r\n    }\r\n    GetNormal() {\r\n        return this.normal;\r\n    }\r\n    GetFlags() {\r\n        return this.flags;\r\n    }\r\n    IsEqual(rhs) {\r\n        return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && this.weight === rhs.weight && this.normal.x === rhs.normal.x && this.normal.y === rhs.normal.y;\r\n    }\r\n    IsNotEqual(rhs) {\r\n        return !this.IsEqual(rhs);\r\n    }\r\n    ApproximatelyEqual(rhs) {\r\n        const MAX_WEIGHT_DIFF = 0.01; // Weight 0 ~ 1, so about 1%\r\n        const MAX_NORMAL_DIFF_SQ = 0.01 * 0.01; // Normal length = 1, so 1%\r\n        return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && b2Abs(this.weight - rhs.weight) < MAX_WEIGHT_DIFF && b2Vec2.DistanceSquaredVV(this.normal, rhs.normal) < MAX_NORMAL_DIFF_SQ;\r\n    }\r\n}\r\nexport class b2ParticleBodyContact {\r\n    constructor() {\r\n        this.index = 0; // Index of the particle making contact.\r\n        this.weight = 0.0; // Weight of the contact. A value between 0.0f and 1.0f.\r\n        this.normal = new b2Vec2(); // The normalized direction from the particle to the body.\r\n        this.mass = 0.0; // The effective mass used in calculating force.\r\n    }\r\n}\r\nexport class b2ParticlePair {\r\n    constructor() {\r\n        this.indexA = 0; // Indices of the respective particles making pair.\r\n        this.indexB = 0;\r\n        this.flags = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\r\n        this.strength = 0.0; // The strength of cohesion among the particles.\r\n        this.distance = 0.0; // The initial distance of the particles.\r\n    }\r\n}\r\nexport class b2ParticleTriad {\r\n    constructor() {\r\n        this.indexA = 0; // Indices of the respective particles making triad.\r\n        this.indexB = 0;\r\n        this.indexC = 0;\r\n        this.flags = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\r\n        this.strength = 0.0; // The strength of cohesion among the particles.\r\n        this.pa = new b2Vec2(0.0, 0.0); // Values used for calculation.\r\n        this.pb = new b2Vec2(0.0, 0.0);\r\n        this.pc = new b2Vec2(0.0, 0.0);\r\n        this.ka = 0.0;\r\n        this.kb = 0.0;\r\n        this.kc = 0.0;\r\n        this.s = 0.0;\r\n    }\r\n}\r\nexport class b2ParticleSystemDef {\r\n    constructor() {\r\n        // Initialize physical coefficients to the maximum values that\r\n        // maintain numerical stability.\r\n        /**\r\n         * Enable strict Particle/Body contact check.\r\n         * See SetStrictContactCheck for details.\r\n         */\r\n        this.strictContactCheck = false;\r\n        /**\r\n         * Set the particle density.\r\n         * See SetDensity for details.\r\n         */\r\n        this.density = 1.0;\r\n        /**\r\n         * Change the particle gravity scale. Adjusts the effect of the\r\n         * global gravity vector on particles. Default value is 1.0f.\r\n         */\r\n        this.gravityScale = 1.0;\r\n        /**\r\n         * Particles behave as circles with this radius. In Box2D units.\r\n         */\r\n        this.radius = 1.0;\r\n        /**\r\n         * Set the maximum number of particles.\r\n         * By default, there is no maximum. The particle buffers can\r\n         * continue to grow while b2World's block allocator still has\r\n         * memory.\r\n         * See SetMaxParticleCount for details.\r\n         */\r\n        this.maxCount = 0;\r\n        /**\r\n         * Increases pressure in response to compression\r\n         * Smaller values allow more compression\r\n         */\r\n        this.pressureStrength = 0.005;\r\n        /**\r\n         * Reduces velocity along the collision normal\r\n         * Smaller value reduces less\r\n         */\r\n        this.dampingStrength = 1.0;\r\n        /**\r\n         * Restores shape of elastic particle groups\r\n         * Larger values increase elastic particle velocity\r\n         */\r\n        this.elasticStrength = 0.25;\r\n        /**\r\n         * Restores length of spring particle groups\r\n         * Larger values increase spring particle velocity\r\n         */\r\n        this.springStrength = 0.25;\r\n        /**\r\n         * Reduces relative velocity of viscous particles\r\n         * Larger values slow down viscous particles more\r\n         */\r\n        this.viscousStrength = 0.25;\r\n        /**\r\n         * Produces pressure on tensile particles\r\n         * 0~0.2. Larger values increase the amount of surface tension.\r\n         */\r\n        this.surfaceTensionPressureStrength = 0.2;\r\n        /**\r\n         * Smoothes outline of tensile particles\r\n         * 0~0.2. Larger values result in rounder, smoother,\r\n         * water-drop-like clusters of particles.\r\n         */\r\n        this.surfaceTensionNormalStrength = 0.2;\r\n        /**\r\n         * Produces additional pressure on repulsive particles\r\n         * Larger values repulse more\r\n         * Negative values mean attraction. The range where particles\r\n         * behave stably is about -0.2 to 2.0.\r\n         */\r\n        this.repulsiveStrength = 1.0;\r\n        /**\r\n         * Produces repulsion between powder particles\r\n         * Larger values repulse more\r\n         */\r\n        this.powderStrength = 0.5;\r\n        /**\r\n         * Pushes particles out of solid particle group\r\n         * Larger values repulse more\r\n         */\r\n        this.ejectionStrength = 0.5;\r\n        /**\r\n         * Produces static pressure\r\n         * Larger values increase the pressure on neighboring partilces\r\n         * For a description of static pressure, see\r\n         * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\r\n         */\r\n        this.staticPressureStrength = 0.2;\r\n        /**\r\n         * Reduces instability in static pressure calculation\r\n         * Larger values make stabilize static pressure with fewer\r\n         * iterations\r\n         */\r\n        this.staticPressureRelaxation = 0.2;\r\n        /**\r\n         * Computes static pressure more precisely\r\n         * See SetStaticPressureIterations for details\r\n         */\r\n        this.staticPressureIterations = 8;\r\n        /**\r\n         * Determines how fast colors are mixed\r\n         * 1.0f ==> mixed immediately\r\n         * 0.5f ==> mixed half way each simulation step (see\r\n         * b2World::Step())\r\n         */\r\n        this.colorMixingStrength = 0.5;\r\n        /**\r\n         * Whether to destroy particles by age when no more particles\r\n         * can be created.  See #b2ParticleSystem::SetDestructionByAge()\r\n         * for more information.\r\n         */\r\n        this.destroyByAge = true;\r\n        /**\r\n         * Granularity of particle lifetimes in seconds.  By default\r\n         * this is set to (1.0f / 60.0f) seconds.  b2ParticleSystem uses\r\n         * a 32-bit signed value to track particle lifetimes so the\r\n         * maximum lifetime of a particle is (2^32 - 1) / (1.0f /\r\n         * lifetimeGranularity) seconds. With the value set to 1/60 the\r\n         * maximum lifetime or age of a particle is 2.27 years.\r\n         */\r\n        this.lifetimeGranularity = 1.0 / 60.0;\r\n    }\r\n    Copy(def) {\r\n        this.strictContactCheck = def.strictContactCheck;\r\n        this.density = def.density;\r\n        this.gravityScale = def.gravityScale;\r\n        this.radius = def.radius;\r\n        this.maxCount = def.maxCount;\r\n        this.pressureStrength = def.pressureStrength;\r\n        this.dampingStrength = def.dampingStrength;\r\n        this.elasticStrength = def.elasticStrength;\r\n        this.springStrength = def.springStrength;\r\n        this.viscousStrength = def.viscousStrength;\r\n        this.surfaceTensionPressureStrength = def.surfaceTensionPressureStrength;\r\n        this.surfaceTensionNormalStrength = def.surfaceTensionNormalStrength;\r\n        this.repulsiveStrength = def.repulsiveStrength;\r\n        this.powderStrength = def.powderStrength;\r\n        this.ejectionStrength = def.ejectionStrength;\r\n        this.staticPressureStrength = def.staticPressureStrength;\r\n        this.staticPressureRelaxation = def.staticPressureRelaxation;\r\n        this.staticPressureIterations = def.staticPressureIterations;\r\n        this.colorMixingStrength = def.colorMixingStrength;\r\n        this.destroyByAge = def.destroyByAge;\r\n        this.lifetimeGranularity = def.lifetimeGranularity;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2ParticleSystemDef().Copy(this);\r\n    }\r\n}\r\nexport class b2ParticleSystem {\r\n    constructor(def, world) {\r\n        this.m_paused = false;\r\n        this.m_timestamp = 0;\r\n        this.m_allParticleFlags = 0;\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n        this.m_allGroupFlags = 0;\r\n        this.m_needsUpdateAllGroupFlags = false;\r\n        this.m_hasForce = false;\r\n        this.m_iterationIndex = 0;\r\n        this.m_inverseDensity = 0.0;\r\n        this.m_particleDiameter = 0.0;\r\n        this.m_inverseDiameter = 0.0;\r\n        this.m_squaredDiameter = 0.0;\r\n        this.m_count = 0;\r\n        this.m_internalAllocatedCapacity = 0;\r\n        /**\r\n         * Allocator for b2ParticleHandle instances.\r\n         */\r\n        ///m_handleAllocator: any = null;\r\n        /**\r\n         * Maps particle indicies to handles.\r\n         */\r\n        this.m_handleIndexBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_flagsBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_positionBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_velocityBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_forceBuffer = [];\r\n        /**\r\n         * this.m_weightBuffer is populated in ComputeWeight and used in\r\n         * ComputeDepth(), SolveStaticPressure() and SolvePressure().\r\n         */\r\n        this.m_weightBuffer = [];\r\n        /**\r\n         * When any particles have the flag b2_staticPressureParticle,\r\n         * this.m_staticPressureBuffer is first allocated and used in\r\n         * SolveStaticPressure() and SolvePressure().  It will be\r\n         * reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_staticPressureBuffer = [];\r\n        /**\r\n         * this.m_accumulationBuffer is used in many functions as a temporary\r\n         * buffer for scalar values.\r\n         */\r\n        this.m_accumulationBuffer = [];\r\n        /**\r\n         * When any particles have the flag b2_tensileParticle,\r\n         * this.m_accumulation2Buffer is first allocated and used in\r\n         * SolveTensile() as a temporary buffer for vector values.  It\r\n         * will be reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_accumulation2Buffer = [];\r\n        /**\r\n         * When any particle groups have the flag b2_solidParticleGroup,\r\n         * this.m_depthBuffer is first allocated and populated in\r\n         * ComputeDepth() and used in SolveSolid(). It will be\r\n         * reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_depthBuffer = [];\r\n        this.m_colorBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_groupBuffer = [];\r\n        this.m_userDataBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * Stuck particle detection parameters and record keeping\r\n         */\r\n        this.m_stuckThreshold = 0;\r\n        this.m_lastBodyContactStepBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_bodyContactCountBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_consecutiveContactStepsBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_stuckParticleBuffer = new b2GrowableBuffer(() => 0);\r\n        this.m_proxyBuffer = new b2GrowableBuffer(() => new b2ParticleSystem.Proxy());\r\n        this.m_contactBuffer = new b2GrowableBuffer(() => new b2ParticleContact());\r\n        this.m_bodyContactBuffer = new b2GrowableBuffer(() => new b2ParticleBodyContact());\r\n        this.m_pairBuffer = new b2GrowableBuffer(() => new b2ParticlePair());\r\n        this.m_triadBuffer = new b2GrowableBuffer(() => new b2ParticleTriad());\r\n        /**\r\n         * Time each particle should be destroyed relative to the last\r\n         * time this.m_timeElapsed was initialized.  Each unit of time\r\n         * corresponds to b2ParticleSystemDef::lifetimeGranularity\r\n         * seconds.\r\n         */\r\n        this.m_expirationTimeBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * List of particle indices sorted by expiration time.\r\n         */\r\n        this.m_indexByExpirationTimeBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * Time elapsed in 32:32 fixed point.  Each non-fractional unit\r\n         * of time corresponds to\r\n         * b2ParticleSystemDef::lifetimeGranularity seconds.\r\n         */\r\n        this.m_timeElapsed = 0;\r\n        /**\r\n         * Whether the expiration time buffer has been modified and\r\n         * needs to be resorted.\r\n         */\r\n        this.m_expirationTimeBufferRequiresSorting = false;\r\n        this.m_groupCount = 0;\r\n        this.m_groupList = null;\r\n        this.m_def = new b2ParticleSystemDef();\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.SetStrictContactCheck(def.strictContactCheck);\r\n        this.SetDensity(def.density);\r\n        this.SetGravityScale(def.gravityScale);\r\n        this.SetRadius(def.radius);\r\n        this.SetMaxParticleCount(def.maxCount);\r\n        // DEBUG: b2Assert(def.lifetimeGranularity > 0.0);\r\n        this.m_def = def.Clone();\r\n        this.m_world = world;\r\n        this.SetDestructionByAge(this.m_def.destroyByAge);\r\n    }\r\n    static computeTag(x, y) {\r\n        ///return ((uint32)(y + yOffset) << yShift) + (uint32)(xScale * x + xOffset);\r\n        return ((((y + b2ParticleSystem.yOffset) >>> 0) << b2ParticleSystem.yShift) + ((b2ParticleSystem.xScale * x + b2ParticleSystem.xOffset) >>> 0)) >>> 0;\r\n    }\r\n    static computeRelativeTag(tag, x, y) {\r\n        ///return tag + (y << yShift) + (x << xShift);\r\n        return (tag + (y << b2ParticleSystem.yShift) + (x << b2ParticleSystem.xShift)) >>> 0;\r\n    }\r\n    Drop() {\r\n        while (this.m_groupList) {\r\n            this.DestroyParticleGroup(this.m_groupList);\r\n        }\r\n        this.FreeUserOverridableBuffer(this.m_handleIndexBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_flagsBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_lastBodyContactStepBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_bodyContactCountBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_consecutiveContactStepsBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_positionBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_velocityBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_colorBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_userDataBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_expirationTimeBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_indexByExpirationTimeBuffer);\r\n        this.FreeBuffer(this.m_forceBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_weightBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_staticPressureBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_accumulationBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_accumulation2Buffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_depthBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_groupBuffer, this.m_internalAllocatedCapacity);\r\n    }\r\n    /**\r\n     * Create a particle whose properties have been defined.\r\n     *\r\n     * No reference to the definition is retained.\r\n     *\r\n     * A simulation step must occur before it's possible to interact\r\n     * with a newly created particle.  For example,\r\n     * DestroyParticleInShape() will not destroy a particle until\r\n     * b2World::Step() has been called.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     */\r\n    CreateParticle(def) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        if (this.m_count >= this.m_internalAllocatedCapacity) {\r\n            // Double the particle capacity.\r\n            const capacity = this.m_count ? 2 * this.m_count : b2_minParticleSystemBufferCapacity;\r\n            this.ReallocateInternalAllocatedBuffers(capacity);\r\n        }\r\n        if (this.m_count >= this.m_internalAllocatedCapacity) {\r\n            // If the oldest particle should be destroyed...\r\n            if (this.m_def.destroyByAge) {\r\n                this.DestroyOldestParticle(0, false);\r\n                // Need to destroy this particle *now* so that it's possible to\r\n                // create a new particle.\r\n                this.SolveZombie();\r\n            }\r\n            else {\r\n                return b2_invalidParticleIndex;\r\n            }\r\n        }\r\n        const index = this.m_count++;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        this.m_flagsBuffer.data[index] = 0;\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            this.m_lastBodyContactStepBuffer.data[index] = 0;\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            this.m_bodyContactCountBuffer.data[index] = 0;\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            this.m_consecutiveContactStepsBuffer.data[index] = 0;\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        this.m_positionBuffer.data[index] = (this.m_positionBuffer.data[index] || new b2Vec2()).Copy(b2Maybe(def.position, b2Vec2.ZERO));\r\n        this.m_velocityBuffer.data[index] = (this.m_velocityBuffer.data[index] || new b2Vec2()).Copy(b2Maybe(def.velocity, b2Vec2.ZERO));\r\n        this.m_weightBuffer[index] = 0;\r\n        this.m_forceBuffer[index] = (this.m_forceBuffer[index] || new b2Vec2()).SetZero();\r\n        if (this.m_staticPressureBuffer) {\r\n            this.m_staticPressureBuffer[index] = 0;\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            this.m_depthBuffer[index] = 0;\r\n        }\r\n        const color = new b2Color().Copy(b2Maybe(def.color, b2Color.ZERO));\r\n        if (this.m_colorBuffer.data || !color.IsZero()) {\r\n            this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n            this.m_colorBuffer.data[index] = (this.m_colorBuffer.data[index] || new b2Color()).Copy(color);\r\n        }\r\n        if (this.m_userDataBuffer.data || def.userData) {\r\n            this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\r\n            this.m_userDataBuffer.data[index] = def.userData;\r\n        }\r\n        if (this.m_handleIndexBuffer.data) {\r\n            this.m_handleIndexBuffer.data[index] = null;\r\n        }\r\n        ///Proxy& proxy = m_proxyBuffer.Append();\r\n        const proxy = this.m_proxyBuffer.data[this.m_proxyBuffer.Append()];\r\n        // If particle lifetimes are enabled or the lifetime is set in the particle\r\n        // definition, initialize the lifetime.\r\n        const lifetime = b2Maybe(def.lifetime, 0.0);\r\n        const finiteLifetime = lifetime > 0.0;\r\n        if (this.m_expirationTimeBuffer.data || finiteLifetime) {\r\n            this.SetParticleLifetime(index, finiteLifetime ? lifetime :\r\n                this.ExpirationTimeToLifetime(-this.GetQuantizedTimeElapsed()));\r\n            // Add a reference to the newly added particle to the end of the\r\n            // queue.\r\n            if (!this.m_indexByExpirationTimeBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            this.m_indexByExpirationTimeBuffer.data[index] = index;\r\n        }\r\n        proxy.index = index;\r\n        const group = b2Maybe(def.group, null);\r\n        this.m_groupBuffer[index] = group;\r\n        if (group) {\r\n            if (group.m_firstIndex < group.m_lastIndex) {\r\n                // Move particles in the group just before the new particle.\r\n                this.RotateBuffer(group.m_firstIndex, group.m_lastIndex, index);\r\n                // DEBUG: b2Assert(group.m_lastIndex === index);\r\n                // Update the index range of the group to contain the new particle.\r\n                group.m_lastIndex = index + 1;\r\n            }\r\n            else {\r\n                // If the group is empty, reset the index range to contain only the\r\n                // new particle.\r\n                group.m_firstIndex = index;\r\n                group.m_lastIndex = index + 1;\r\n            }\r\n        }\r\n        this.SetParticleFlags(index, b2Maybe(def.flags, 0));\r\n        return index;\r\n    }\r\n    /**\r\n     * Retrieve a handle to the particle at the specified index.\r\n     *\r\n     * Please see #b2ParticleHandle for why you might want a handle.\r\n     */\r\n    GetParticleHandleFromIndex(index) {\r\n        // DEBUG: b2Assert(index >= 0 && index < this.GetParticleCount() && index !== b2_invalidParticleIndex);\r\n        this.m_handleIndexBuffer.data = this.RequestBuffer(this.m_handleIndexBuffer.data);\r\n        let handle = this.m_handleIndexBuffer.data[index];\r\n        if (handle) {\r\n            return handle;\r\n        }\r\n        // Create a handle.\r\n        ///handle = m_handleAllocator.Allocate();\r\n        handle = new b2ParticleHandle();\r\n        // DEBUG: b2Assert(handle !== null);\r\n        handle.SetIndex(index);\r\n        this.m_handleIndexBuffer.data[index] = handle;\r\n        return handle;\r\n    }\r\n    /**\r\n     * Destroy a particle.\r\n     *\r\n     * The particle is removed after the next simulation step (see\r\n     * b2World::Step()).\r\n     *\r\n     * @param index Index of the particle to destroy.\r\n     * @param callDestructionListener Whether to call the\r\n     *      destruction listener just before the particle is\r\n     *      destroyed.\r\n     */\r\n    DestroyParticle(index, callDestructionListener = false) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        let flags = b2ParticleFlag.b2_zombieParticle;\r\n        if (callDestructionListener) {\r\n            flags |= b2ParticleFlag.b2_destructionListenerParticle;\r\n        }\r\n        this.SetParticleFlags(index, this.m_flagsBuffer.data[index] | flags);\r\n    }\r\n    /**\r\n     * Destroy the Nth oldest particle in the system.\r\n     *\r\n     * The particle is removed after the next b2World::Step().\r\n     *\r\n     * @param index Index of the Nth oldest particle to\r\n     *      destroy, 0 will destroy the oldest particle in the\r\n     *      system, 1 will destroy the next oldest particle etc.\r\n     * @param callDestructionListener Whether to call the\r\n     *      destruction listener just before the particle is\r\n     *      destroyed.\r\n     */\r\n    DestroyOldestParticle(index, callDestructionListener = false) {\r\n        const particleCount = this.GetParticleCount();\r\n        // DEBUG: b2Assert(index >= 0 && index < particleCount);\r\n        // Make sure particle lifetime tracking is enabled.\r\n        // DEBUG: b2Assert(this.m_indexByExpirationTimeBuffer.data !== null);\r\n        if (!this.m_indexByExpirationTimeBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_expirationTimeBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        // Destroy the oldest particle (preferring to destroy finite\r\n        // lifetime particles first) to free a slot in the buffer.\r\n        const oldestFiniteLifetimeParticle = this.m_indexByExpirationTimeBuffer.data[particleCount - (index + 1)];\r\n        const oldestInfiniteLifetimeParticle = this.m_indexByExpirationTimeBuffer.data[index];\r\n        this.DestroyParticle(this.m_expirationTimeBuffer.data[oldestFiniteLifetimeParticle] > 0.0 ?\r\n            oldestFiniteLifetimeParticle : oldestInfiniteLifetimeParticle, callDestructionListener);\r\n    }\r\n    /**\r\n     * Destroy particles inside a shape.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * In addition, this function immediately destroys particles in\r\n     * the shape in constrast to DestroyParticle() which defers the\r\n     * destruction until the next simulation step.\r\n     *\r\n     * @return Number of particles destroyed.\r\n     * @param shape Shape which encloses particles\r\n     *      that should be destroyed.\r\n     * @param xf Transform applied to the shape.\r\n     * @param callDestructionListener Whether to call the\r\n     *      world b2DestructionListener for each particle\r\n     *      destroyed.\r\n     */\r\n    DestroyParticlesInShape(shape, xf, callDestructionListener = false) {\r\n        const s_aabb = b2ParticleSystem.DestroyParticlesInShape_s_aabb;\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const callback = new b2ParticleSystem.DestroyParticlesInShapeCallback(this, shape, xf, callDestructionListener);\r\n        const aabb = s_aabb;\r\n        shape.ComputeAABB(aabb, xf, 0);\r\n        this.m_world.QueryAABB(callback, aabb);\r\n        return callback.Destroyed();\r\n    }\r\n    /**\r\n     * Create a particle group whose properties have been defined.\r\n     *\r\n     * No reference to the definition is retained.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     */\r\n    CreateParticleGroup(groupDef) {\r\n        const s_transform = b2ParticleSystem.CreateParticleGroup_s_transform;\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const transform = s_transform;\r\n        transform.SetPositionAngle(b2Maybe(groupDef.position, b2Vec2.ZERO), b2Maybe(groupDef.angle, 0));\r\n        const firstIndex = this.m_count;\r\n        if (groupDef.shape) {\r\n            this.CreateParticlesWithShapeForGroup(groupDef.shape, groupDef, transform);\r\n        }\r\n        if (groupDef.shapes) {\r\n            this.CreateParticlesWithShapesForGroup(groupDef.shapes, b2Maybe(groupDef.shapeCount, groupDef.shapes.length), groupDef, transform);\r\n        }\r\n        if (groupDef.positionData) {\r\n            const count = b2Maybe(groupDef.particleCount, groupDef.positionData.length);\r\n            for (let i = 0; i < count; i++) {\r\n                const p = groupDef.positionData[i];\r\n                this.CreateParticleForGroup(groupDef, transform, p);\r\n            }\r\n        }\r\n        const lastIndex = this.m_count;\r\n        let group = new b2ParticleGroup(this);\r\n        group.m_firstIndex = firstIndex;\r\n        group.m_lastIndex = lastIndex;\r\n        group.m_strength = b2Maybe(groupDef.strength, 1);\r\n        group.m_userData = groupDef.userData;\r\n        group.m_transform.Copy(transform);\r\n        group.m_prev = null;\r\n        group.m_next = this.m_groupList;\r\n        if (this.m_groupList) {\r\n            this.m_groupList.m_prev = group;\r\n        }\r\n        this.m_groupList = group;\r\n        ++this.m_groupCount;\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            this.m_groupBuffer[i] = group;\r\n        }\r\n        this.SetGroupFlags(group, b2Maybe(groupDef.groupFlags, 0));\r\n        // Create pairs and triads between particles in the group.\r\n        const filter = new b2ParticleSystem.ConnectionFilter();\r\n        this.UpdateContacts(true);\r\n        this.UpdatePairsAndTriads(firstIndex, lastIndex, filter);\r\n        if (groupDef.group) {\r\n            this.JoinParticleGroups(groupDef.group, group);\r\n            group = groupDef.group;\r\n        }\r\n        return group;\r\n    }\r\n    /**\r\n     * Join two particle groups.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * @param groupA the first group. Expands to encompass the second group.\r\n     * @param groupB the second group. It is destroyed.\r\n     */\r\n    JoinParticleGroups(groupA, groupB) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        // DEBUG: b2Assert(groupA !== groupB);\r\n        this.RotateBuffer(groupB.m_firstIndex, groupB.m_lastIndex, this.m_count);\r\n        // DEBUG: b2Assert(groupB.m_lastIndex === this.m_count);\r\n        this.RotateBuffer(groupA.m_firstIndex, groupA.m_lastIndex, groupB.m_firstIndex);\r\n        // DEBUG: b2Assert(groupA.m_lastIndex === groupB.m_firstIndex);\r\n        // Create pairs and triads connecting groupA and groupB.\r\n        const filter = new b2ParticleSystem.JoinParticleGroupsFilter(groupB.m_firstIndex);\r\n        this.UpdateContacts(true);\r\n        this.UpdatePairsAndTriads(groupA.m_firstIndex, groupB.m_lastIndex, filter);\r\n        for (let i = groupB.m_firstIndex; i < groupB.m_lastIndex; i++) {\r\n            this.m_groupBuffer[i] = groupA;\r\n        }\r\n        const groupFlags = groupA.m_groupFlags | groupB.m_groupFlags;\r\n        this.SetGroupFlags(groupA, groupFlags);\r\n        groupA.m_lastIndex = groupB.m_lastIndex;\r\n        groupB.m_firstIndex = groupB.m_lastIndex;\r\n        this.DestroyParticleGroup(groupB);\r\n    }\r\n    /**\r\n     * Split particle group into multiple disconnected groups.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * @param group the group to be split.\r\n     */\r\n    SplitParticleGroup(group) {\r\n        this.UpdateContacts(true);\r\n        const particleCount = group.GetParticleCount();\r\n        // We create several linked lists. Each list represents a set of connected particles.\r\n        ///ParticleListNode* nodeBuffer = (ParticleListNode*) m_world.m_stackAllocator.Allocate(sizeof(ParticleListNode) * particleCount);\r\n        const nodeBuffer = b2MakeArray(particleCount, (index) => new b2ParticleSystem.ParticleListNode());\r\n        b2ParticleSystem.InitializeParticleLists(group, nodeBuffer);\r\n        this.MergeParticleListsInContact(group, nodeBuffer);\r\n        const survivingList = b2ParticleSystem.FindLongestParticleList(group, nodeBuffer);\r\n        this.MergeZombieParticleListNodes(group, nodeBuffer, survivingList);\r\n        this.CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList);\r\n        this.UpdatePairsAndTriadsWithParticleList(group, nodeBuffer);\r\n        ///this.m_world.m_stackAllocator.Free(nodeBuffer);\r\n    }\r\n    /**\r\n     * Get the world particle group list. With the returned group,\r\n     * use b2ParticleGroup::GetNext to get the next group in the\r\n     * world list.\r\n     *\r\n     * A null group indicates the end of the list.\r\n     *\r\n     * @return the head of the world particle group list.\r\n     */\r\n    GetParticleGroupList() {\r\n        return this.m_groupList;\r\n    }\r\n    /**\r\n     * Get the number of particle groups.\r\n     */\r\n    GetParticleGroupCount() {\r\n        return this.m_groupCount;\r\n    }\r\n    /**\r\n     * Get the number of particles.\r\n     */\r\n    GetParticleCount() {\r\n        return this.m_count;\r\n    }\r\n    /**\r\n     * Get the maximum number of particles.\r\n     */\r\n    GetMaxParticleCount() {\r\n        return this.m_def.maxCount;\r\n    }\r\n    /**\r\n     * Set the maximum number of particles.\r\n     *\r\n     * A value of 0 means there is no maximum. The particle buffers\r\n     * can continue to grow while b2World's block allocator still\r\n     * has memory.\r\n     *\r\n     * Note: If you try to CreateParticle() with more than this\r\n     * count, b2_invalidParticleIndex is returned unless\r\n     * SetDestructionByAge() is used to enable the destruction of\r\n     * the oldest particles in the system.\r\n     */\r\n    SetMaxParticleCount(count) {\r\n        // DEBUG: b2Assert(this.m_count <= count);\r\n        this.m_def.maxCount = count;\r\n    }\r\n    /**\r\n     * Get all existing particle flags.\r\n     */\r\n    GetAllParticleFlags() {\r\n        return this.m_allParticleFlags;\r\n    }\r\n    /**\r\n     * Get all existing particle group flags.\r\n     */\r\n    GetAllGroupFlags() {\r\n        return this.m_allGroupFlags;\r\n    }\r\n    /**\r\n     * Pause or unpause the particle system. When paused,\r\n     * b2World::Step() skips over this particle system. All\r\n     * b2ParticleSystem function calls still work.\r\n     *\r\n     * @param paused paused is true to pause, false to un-pause.\r\n     */\r\n    SetPaused(paused) {\r\n        this.m_paused = paused;\r\n    }\r\n    /**\r\n     * Initially, true, then, the last value passed into\r\n     * SetPaused().\r\n     *\r\n     * @return true if the particle system is being updated in b2World::Step().\r\n     */\r\n    GetPaused() {\r\n        return this.m_paused;\r\n    }\r\n    /**\r\n     * Change the particle density.\r\n     *\r\n     * Particle density affects the mass of the particles, which in\r\n     * turn affects how the particles interact with b2Bodies. Note\r\n     * that the density does not affect how the particles interact\r\n     * with each other.\r\n     */\r\n    SetDensity(density) {\r\n        this.m_def.density = density;\r\n        this.m_inverseDensity = 1 / this.m_def.density;\r\n    }\r\n    /**\r\n     * Get the particle density.\r\n     */\r\n    GetDensity() {\r\n        return this.m_def.density;\r\n    }\r\n    /**\r\n     * Change the particle gravity scale. Adjusts the effect of the\r\n     * global gravity vector on particles.\r\n     */\r\n    SetGravityScale(gravityScale) {\r\n        this.m_def.gravityScale = gravityScale;\r\n    }\r\n    /**\r\n     * Get the particle gravity scale.\r\n     */\r\n    GetGravityScale() {\r\n        return this.m_def.gravityScale;\r\n    }\r\n    /**\r\n     * Damping is used to reduce the velocity of particles. The\r\n     * damping parameter can be larger than 1.0f but the damping\r\n     * effect becomes sensitive to the time step when the damping\r\n     * parameter is large.\r\n     */\r\n    SetDamping(damping) {\r\n        this.m_def.dampingStrength = damping;\r\n    }\r\n    /**\r\n     * Get damping for particles\r\n     */\r\n    GetDamping() {\r\n        return this.m_def.dampingStrength;\r\n    }\r\n    /**\r\n     * Change the number of iterations when calculating the static\r\n     * pressure of particles. By default, 8 iterations. You can\r\n     * reduce the number of iterations down to 1 in some situations,\r\n     * but this may cause instabilities when many particles come\r\n     * together. If you see particles popping away from each other\r\n     * like popcorn, you may have to increase the number of\r\n     * iterations.\r\n     *\r\n     * For a description of static pressure, see\r\n     * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\r\n     */\r\n    SetStaticPressureIterations(iterations) {\r\n        this.m_def.staticPressureIterations = iterations;\r\n    }\r\n    /**\r\n     * Get the number of iterations for static pressure of\r\n     * particles.\r\n     */\r\n    GetStaticPressureIterations() {\r\n        return this.m_def.staticPressureIterations;\r\n    }\r\n    /**\r\n     * Change the particle radius.\r\n     *\r\n     * You should set this only once, on world start.\r\n     * If you change the radius during execution, existing particles\r\n     * may explode, shrink, or behave unexpectedly.\r\n     */\r\n    SetRadius(radius) {\r\n        this.m_particleDiameter = 2 * radius;\r\n        this.m_squaredDiameter = this.m_particleDiameter * this.m_particleDiameter;\r\n        this.m_inverseDiameter = 1 / this.m_particleDiameter;\r\n    }\r\n    /**\r\n     * Get the particle radius.\r\n     */\r\n    GetRadius() {\r\n        return this.m_particleDiameter / 2;\r\n    }\r\n    /**\r\n     * Get the position of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle positions array.\r\n     */\r\n    GetPositionBuffer() {\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        return this.m_positionBuffer.data;\r\n    }\r\n    /**\r\n     * Get the velocity of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle velocities array.\r\n     */\r\n    GetVelocityBuffer() {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        return this.m_velocityBuffer.data;\r\n    }\r\n    /**\r\n     * Get the color of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle colors array.\r\n     */\r\n    GetColorBuffer() {\r\n        this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n        return this.m_colorBuffer.data;\r\n    }\r\n    /**\r\n     * Get the particle-group of each particle.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle group array.\r\n     */\r\n    GetGroupBuffer() {\r\n        return this.m_groupBuffer;\r\n    }\r\n    /**\r\n     * Get the weight of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle positions array.\r\n     */\r\n    GetWeightBuffer() {\r\n        return this.m_weightBuffer;\r\n    }\r\n    /**\r\n     * Get the user-specified data of each particle.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle user-data array.\r\n     */\r\n    GetUserDataBuffer() {\r\n        this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\r\n        return this.m_userDataBuffer.data;\r\n    }\r\n    /**\r\n     * Get the flags for each particle. See the b2ParticleFlag enum.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle-flags array.\r\n     */\r\n    GetFlagsBuffer() {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        return this.m_flagsBuffer.data;\r\n    }\r\n    /**\r\n     * Set flags for a particle. See the b2ParticleFlag enum.\r\n     */\r\n    SetParticleFlags(index, newFlags) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const oldFlags = this.m_flagsBuffer.data[index];\r\n        if (oldFlags & ~newFlags) {\r\n            // If any flags might be removed\r\n            this.m_needsUpdateAllParticleFlags = true;\r\n        }\r\n        if (~this.m_allParticleFlags & newFlags) {\r\n            // If any flags were added\r\n            if (newFlags & b2ParticleFlag.b2_tensileParticle) {\r\n                this.m_accumulation2Buffer = this.RequestBuffer(this.m_accumulation2Buffer);\r\n            }\r\n            if (newFlags & b2ParticleFlag.b2_colorMixingParticle) {\r\n                this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n            }\r\n            this.m_allParticleFlags |= newFlags;\r\n        }\r\n        this.m_flagsBuffer.data[index] = newFlags;\r\n    }\r\n    /**\r\n     * Get flags for a particle. See the b2ParticleFlag enum.\r\n     */\r\n    GetParticleFlags(index) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        return this.m_flagsBuffer.data[index];\r\n    }\r\n    /**\r\n     * Set an external buffer for particle data.\r\n     *\r\n     * Normally, the b2World's block allocator is used for particle\r\n     * data. However, sometimes you may have an OpenGL or Java\r\n     * buffer for particle data. To avoid data duplication, you may\r\n     * supply this external buffer.\r\n     *\r\n     * Note that, when b2World's block allocator is used, the\r\n     * particle data buffers can grow as required. However, when\r\n     * external buffers are used, the maximum number of particles is\r\n     * clamped to the size of the smallest external buffer.\r\n     *\r\n     * @param buffer a pointer to a block of memory.\r\n     * @param capacity the number of values in the block.\r\n     */\r\n    SetFlagsBuffer(buffer, capacity) {\r\n        this.SetUserOverridableBuffer(this.m_flagsBuffer, buffer, capacity);\r\n    }\r\n    SetPositionBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Float32Array) {\r\n        ///let array = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Vec2(buffer.subarray(i * 2, i * 2 + 2));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_positionBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_positionBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetVelocityBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Float32Array) {\r\n        ///let array = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Vec2(buffer.subarray(i * 2, i * 2 + 2));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_velocityBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_velocityBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetColorBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Uint8Array) {\r\n        ///let array: b2Color[] = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Color(buffer.subarray(i * 4, i * 4 + 4));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_colorBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_colorBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetUserDataBuffer(buffer, capacity) {\r\n        this.SetUserOverridableBuffer(this.m_userDataBuffer, buffer, capacity);\r\n    }\r\n    /**\r\n     * Get contacts between particles\r\n     * Contact data can be used for many reasons, for example to\r\n     * trigger rendering or audio effects.\r\n     */\r\n    GetContacts() {\r\n        return this.m_contactBuffer.data;\r\n    }\r\n    GetContactCount() {\r\n        return this.m_contactBuffer.count;\r\n    }\r\n    /**\r\n     * Get contacts between particles and bodies\r\n     *\r\n     * Contact data can be used for many reasons, for example to\r\n     * trigger rendering or audio effects.\r\n     */\r\n    GetBodyContacts() {\r\n        return this.m_bodyContactBuffer.data;\r\n    }\r\n    GetBodyContactCount() {\r\n        return this.m_bodyContactBuffer.count;\r\n    }\r\n    /**\r\n     * Get array of particle pairs. The particles in a pair:\r\n     *   (1) are contacting,\r\n     *   (2) are in the same particle group,\r\n     *   (3) are part of a rigid particle group, or are spring, elastic,\r\n     *       or wall particles.\r\n     *   (4) have at least one particle that is a spring or barrier\r\n     *       particle (i.e. one of the types in k_pairFlags),\r\n     *   (5) have at least one particle that returns true for\r\n     *       ConnectionFilter::IsNecessary,\r\n     *   (6) are not zombie particles.\r\n     *\r\n     * Essentially, this is an array of spring or barrier particles\r\n     * that are interacting. The array is sorted by b2ParticlePair's\r\n     * indexA, and then indexB. There are no duplicate entries.\r\n     */\r\n    GetPairs() {\r\n        return this.m_pairBuffer.data;\r\n    }\r\n    GetPairCount() {\r\n        return this.m_pairBuffer.count;\r\n    }\r\n    /**\r\n     * Get array of particle triads. The particles in a triad:\r\n     *   (1) are in the same particle group,\r\n     *   (2) are in a Voronoi triangle together,\r\n     *   (3) are within b2_maxTriadDistance particle diameters of each\r\n     *       other,\r\n     *   (4) return true for ConnectionFilter::ShouldCreateTriad\r\n     *   (5) have at least one particle of type elastic (i.e. one of the\r\n     *       types in k_triadFlags),\r\n     *   (6) are part of a rigid particle group, or are spring, elastic,\r\n     *       or wall particles.\r\n     *   (7) are not zombie particles.\r\n     *\r\n     * Essentially, this is an array of elastic particles that are\r\n     * interacting. The array is sorted by b2ParticleTriad's indexA,\r\n     * then indexB, then indexC. There are no duplicate entries.\r\n     */\r\n    GetTriads() {\r\n        return this.m_triadBuffer.data;\r\n    }\r\n    GetTriadCount() {\r\n        return this.m_triadBuffer.count;\r\n    }\r\n    /**\r\n     * Set an optional threshold for the maximum number of\r\n     * consecutive particle iterations that a particle may contact\r\n     * multiple bodies before it is considered a candidate for being\r\n     * \"stuck\". Setting to zero or less disables.\r\n     */\r\n    SetStuckThreshold(steps) {\r\n        this.m_stuckThreshold = steps;\r\n        if (steps > 0) {\r\n            this.m_lastBodyContactStepBuffer.data = this.RequestBuffer(this.m_lastBodyContactStepBuffer.data);\r\n            this.m_bodyContactCountBuffer.data = this.RequestBuffer(this.m_bodyContactCountBuffer.data);\r\n            this.m_consecutiveContactStepsBuffer.data = this.RequestBuffer(this.m_consecutiveContactStepsBuffer.data);\r\n        }\r\n    }\r\n    /**\r\n     * Get potentially stuck particles from the last step; the user\r\n     * must decide if they are stuck or not, and if so, delete or\r\n     * move them\r\n     */\r\n    GetStuckCandidates() {\r\n        ///return m_stuckParticleBuffer.Data();\r\n        return this.m_stuckParticleBuffer.Data();\r\n    }\r\n    /**\r\n     * Get the number of stuck particle candidates from the last\r\n     * step.\r\n     */\r\n    GetStuckCandidateCount() {\r\n        ///return m_stuckParticleBuffer.GetCount();\r\n        return this.m_stuckParticleBuffer.GetCount();\r\n    }\r\n    /**\r\n     * Compute the kinetic energy that can be lost by damping force\r\n     */\r\n    ComputeCollisionEnergy() {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const s_v = b2ParticleSystem.ComputeCollisionEnergy_s_v;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        let sum_v2 = 0;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const n = contact.normal;\r\n            ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n            const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n            const vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                sum_v2 += vn * vn;\r\n            }\r\n        }\r\n        return 0.5 * this.GetParticleMass() * sum_v2;\r\n    }\r\n    /**\r\n     * Set strict Particle/Body contact check.\r\n     *\r\n     * This is an option that will help ensure correct behavior if\r\n     * there are corners in the world model where Particle/Body\r\n     * contact is ambiguous. This option scales at n*log(n) of the\r\n     * number of Particle/Body contacts, so it is best to only\r\n     * enable if it is necessary for your geometry. Enable if you\r\n     * see strange particle behavior around b2Body intersections.\r\n     */\r\n    SetStrictContactCheck(enabled) {\r\n        this.m_def.strictContactCheck = enabled;\r\n    }\r\n    /**\r\n     * Get the status of the strict contact check.\r\n     */\r\n    GetStrictContactCheck() {\r\n        return this.m_def.strictContactCheck;\r\n    }\r\n    /**\r\n     * Set the lifetime (in seconds) of a particle relative to the\r\n     * current time.  A lifetime of less than or equal to 0.0f\r\n     * results in the particle living forever until it's manually\r\n     * destroyed by the application.\r\n     */\r\n    SetParticleLifetime(index, lifetime) {\r\n        // DEBUG: b2Assert(this.ValidateParticleIndex(index));\r\n        const initializeExpirationTimes = this.m_indexByExpirationTimeBuffer.data === null;\r\n        this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\r\n        this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\r\n        // Initialize the inverse mapping buffer.\r\n        if (initializeExpirationTimes) {\r\n            const particleCount = this.GetParticleCount();\r\n            for (let i = 0; i < particleCount; ++i) {\r\n                this.m_indexByExpirationTimeBuffer.data[i] = i;\r\n            }\r\n        }\r\n        ///const int32 quantizedLifetime = (int32)(lifetime / m_def.lifetimeGranularity);\r\n        const quantizedLifetime = lifetime / this.m_def.lifetimeGranularity;\r\n        // Use a negative lifetime so that it's possible to track which\r\n        // of the infinite lifetime particles are older.\r\n        const newExpirationTime = quantizedLifetime > 0.0 ? this.GetQuantizedTimeElapsed() + quantizedLifetime : quantizedLifetime;\r\n        if (newExpirationTime !== this.m_expirationTimeBuffer.data[index]) {\r\n            this.m_expirationTimeBuffer.data[index] = newExpirationTime;\r\n            this.m_expirationTimeBufferRequiresSorting = true;\r\n        }\r\n    }\r\n    /**\r\n     * Get the lifetime (in seconds) of a particle relative to the\r\n     * current time.  A value > 0.0f is returned if the particle is\r\n     * scheduled to be destroyed in the future, values <= 0.0f\r\n     * indicate the particle has an infinite lifetime.\r\n     */\r\n    GetParticleLifetime(index) {\r\n        // DEBUG: b2Assert(this.ValidateParticleIndex(index));\r\n        return this.ExpirationTimeToLifetime(this.GetExpirationTimeBuffer()[index]);\r\n    }\r\n    /**\r\n     * Enable / disable destruction of particles in CreateParticle()\r\n     * when no more particles can be created due to a prior call to\r\n     * SetMaxParticleCount().  When this is enabled, the oldest\r\n     * particle is destroyed in CreateParticle() favoring the\r\n     * destruction of particles with a finite lifetime over\r\n     * particles with infinite lifetimes. This feature is enabled by\r\n     * default when particle lifetimes are tracked.  Explicitly\r\n     * enabling this feature using this function enables particle\r\n     * lifetime tracking.\r\n     */\r\n    SetDestructionByAge(enable) {\r\n        if (enable) {\r\n            this.GetExpirationTimeBuffer();\r\n        }\r\n        this.m_def.destroyByAge = enable;\r\n    }\r\n    /**\r\n     * Get whether the oldest particle will be destroyed in\r\n     * CreateParticle() when the maximum number of particles are\r\n     * present in the system.\r\n     */\r\n    GetDestructionByAge() {\r\n        return this.m_def.destroyByAge;\r\n    }\r\n    /**\r\n     * Get the array of particle expiration times indexed by\r\n     * particle index.\r\n     *\r\n     * GetParticleCount() items are in the returned array.\r\n     */\r\n    GetExpirationTimeBuffer() {\r\n        this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\r\n        return this.m_expirationTimeBuffer.data;\r\n    }\r\n    /**\r\n     * Convert a expiration time value in returned by\r\n     * GetExpirationTimeBuffer() to a time in seconds relative to\r\n     * the current simulation time.\r\n     */\r\n    ExpirationTimeToLifetime(expirationTime) {\r\n        return (expirationTime > 0 ?\r\n            expirationTime - this.GetQuantizedTimeElapsed() :\r\n            expirationTime) * this.m_def.lifetimeGranularity;\r\n    }\r\n    /**\r\n     * Get the array of particle indices ordered by reverse\r\n     * lifetime. The oldest particle indexes are at the end of the\r\n     * array with the newest at the start.  Particles with infinite\r\n     * lifetimes (i.e expiration times less than or equal to 0) are\r\n     * placed at the start of the array.\r\n     * ExpirationTimeToLifetime(GetExpirationTimeBuffer()[index]) is\r\n     * equivalent to GetParticleLifetime(index).\r\n     *\r\n     * GetParticleCount() items are in the returned array.\r\n     */\r\n    GetIndexByExpirationTimeBuffer() {\r\n        // If particles are present, initialize / reinitialize the lifetime buffer.\r\n        if (this.GetParticleCount()) {\r\n            this.SetParticleLifetime(0, this.GetParticleLifetime(0));\r\n        }\r\n        else {\r\n            this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\r\n        }\r\n        if (!this.m_indexByExpirationTimeBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        return this.m_indexByExpirationTimeBuffer.data;\r\n    }\r\n    /**\r\n     * Apply an impulse to one particle. This immediately modifies\r\n     * the velocity. Similar to b2Body::ApplyLinearImpulse.\r\n     *\r\n     * @param index the particle that will be modified.\r\n     * @param impulse impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n     */\r\n    ParticleApplyLinearImpulse(index, impulse) {\r\n        this.ApplyLinearImpulse(index, index + 1, impulse);\r\n    }\r\n    /**\r\n     * Apply an impulse to all particles between 'firstIndex' and\r\n     * 'lastIndex'. This immediately modifies the velocity. Note\r\n     * that the impulse is applied to the total mass of all\r\n     * particles. So, calling ParticleApplyLinearImpulse(0, impulse)\r\n     * and ParticleApplyLinearImpulse(1, impulse) will impart twice\r\n     * as much velocity as calling just ApplyLinearImpulse(0, 1,\r\n     * impulse).\r\n     *\r\n     * @param firstIndex the first particle to be modified.\r\n     * @param lastIndex the last particle to be modified.\r\n     * @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n     */\r\n    ApplyLinearImpulse(firstIndex, lastIndex, impulse) {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const numParticles = (lastIndex - firstIndex);\r\n        const totalMass = numParticles * this.GetParticleMass();\r\n        ///const b2Vec2 velocityDelta = impulse / totalMass;\r\n        const velocityDelta = new b2Vec2().Copy(impulse).SelfMul(1 / totalMass);\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            ///m_velocityBuffer.data[i] += velocityDelta;\r\n            vel_data[i].SelfAdd(velocityDelta);\r\n        }\r\n    }\r\n    static IsSignificantForce(force) {\r\n        return force.x !== 0 || force.y !== 0;\r\n    }\r\n    /**\r\n     * Apply a force to the center of a particle.\r\n     *\r\n     * @param index the particle that will be modified.\r\n     * @param force the world force vector, usually in Newtons (N).\r\n     */\r\n    ParticleApplyForce(index, force) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (b2ParticleSystem.IsSignificantForce(force) &&\r\n            this.ForceCanBeApplied(this.m_flagsBuffer.data[index])) {\r\n            this.PrepareForceBuffer();\r\n            ///m_forceBuffer[index] += force;\r\n            this.m_forceBuffer[index].SelfAdd(force);\r\n        }\r\n    }\r\n    /**\r\n     * Distribute a force across several particles. The particles\r\n     * must not be wall particles. Note that the force is\r\n     * distributed across all the particles, so calling this\r\n     * function for indices 0..N is not the same as calling\r\n     * ParticleApplyForce(i, force) for i in 0..N.\r\n     *\r\n     * @param firstIndex the first particle to be modified.\r\n     * @param lastIndex the last particle to be modified.\r\n     * @param force the world force vector, usually in Newtons (N).\r\n     */\r\n    ApplyForce(firstIndex, lastIndex, force) {\r\n        // Ensure we're not trying to apply force to particles that can't move,\r\n        // such as wall particles.\r\n        // DEBUG: if (!this.m_flagsBuffer.data) { throw new Error(); }\r\n        // DEBUG: let flags = 0;\r\n        // DEBUG: for (let i = firstIndex; i < lastIndex; i++) {\r\n        // DEBUG:   flags |= this.m_flagsBuffer.data[i];\r\n        // DEBUG: }\r\n        // DEBUG: b2Assert(this.ForceCanBeApplied(flags));\r\n        // Early out if force does nothing (optimization).\r\n        ///const b2Vec2 distributedForce = force / (float32)(lastIndex - firstIndex);\r\n        const distributedForce = new b2Vec2().Copy(force).SelfMul(1 / (lastIndex - firstIndex));\r\n        if (b2ParticleSystem.IsSignificantForce(distributedForce)) {\r\n            this.PrepareForceBuffer();\r\n            // Distribute the force over all the particles.\r\n            for (let i = firstIndex; i < lastIndex; i++) {\r\n                ///m_forceBuffer[i] += distributedForce;\r\n                this.m_forceBuffer[i].SelfAdd(distributedForce);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get the next particle-system in the world's particle-system\r\n     * list.\r\n     */\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /**\r\n     * Query the particle system for all particles that potentially\r\n     * overlap the provided AABB.\r\n     * b2QueryCallback::ShouldQueryParticleSystem is ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param aabb the query box.\r\n     */\r\n    QueryAABB(callback, aabb) {\r\n        if (this.m_proxyBuffer.count === 0) {\r\n            return;\r\n        }\r\n        const beginProxy = 0;\r\n        const endProxy = this.m_proxyBuffer.count;\r\n        const firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x, this.m_inverseDiameter * aabb.lowerBound.y), b2ParticleSystem.Proxy.CompareProxyTag);\r\n        const lastProxy = std_upper_bound(this.m_proxyBuffer.data, firstProxy, endProxy, b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x, this.m_inverseDiameter * aabb.upperBound.y), b2ParticleSystem.Proxy.CompareTagProxy);\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        for (let k = firstProxy; k < lastProxy; ++k) {\r\n            const proxy = this.m_proxyBuffer.data[k];\r\n            const i = proxy.index;\r\n            const p = pos_data[i];\r\n            if (aabb.lowerBound.x < p.x && p.x < aabb.upperBound.x &&\r\n                aabb.lowerBound.y < p.y && p.y < aabb.upperBound.y) {\r\n                if (!callback.ReportParticle(this, i)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Query the particle system for all particles that potentially\r\n     * overlap the provided shape's AABB. Calls QueryAABB\r\n     * internally. b2QueryCallback::ShouldQueryParticleSystem is\r\n     * ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param shape the query shape\r\n     * @param xf the transform of the AABB\r\n     * @param childIndex\r\n     */\r\n    QueryShapeAABB(callback, shape, xf, childIndex = 0) {\r\n        const s_aabb = b2ParticleSystem.QueryShapeAABB_s_aabb;\r\n        const aabb = s_aabb;\r\n        shape.ComputeAABB(aabb, xf, childIndex);\r\n        this.QueryAABB(callback, aabb);\r\n    }\r\n    QueryPointAABB(callback, point, slop = b2_linearSlop) {\r\n        const s_aabb = b2ParticleSystem.QueryPointAABB_s_aabb;\r\n        const aabb = s_aabb;\r\n        aabb.lowerBound.Set(point.x - slop, point.y - slop);\r\n        aabb.upperBound.Set(point.x + slop, point.y + slop);\r\n        this.QueryAABB(callback, aabb);\r\n    }\r\n    /**\r\n     * Ray-cast the particle system for all particles in the path of\r\n     * the ray. Your callback controls whether you get the closest\r\n     * point, any point, or n-points. The ray-cast ignores particles\r\n     * that contain the starting point.\r\n     * b2RayCastCallback::ShouldQueryParticleSystem is ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param point1 the ray starting point\r\n     * @param point2 the ray ending point\r\n     */\r\n    RayCast(callback, point1, point2) {\r\n        const s_aabb = b2ParticleSystem.RayCast_s_aabb;\r\n        const s_p = b2ParticleSystem.RayCast_s_p;\r\n        const s_v = b2ParticleSystem.RayCast_s_v;\r\n        const s_n = b2ParticleSystem.RayCast_s_n;\r\n        const s_point = b2ParticleSystem.RayCast_s_point;\r\n        if (this.m_proxyBuffer.count === 0) {\r\n            return;\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const aabb = s_aabb;\r\n        b2Vec2.MinV(point1, point2, aabb.lowerBound);\r\n        b2Vec2.MaxV(point1, point2, aabb.upperBound);\r\n        let fraction = 1;\r\n        // solving the following equation:\r\n        // ((1-t)*point1+t*point2-position)^2=diameter^2\r\n        // where t is a potential fraction\r\n        ///b2Vec2 v = point2 - point1;\r\n        const v = b2Vec2.SubVV(point2, point1, s_v);\r\n        const v2 = b2Vec2.DotVV(v, v);\r\n        const enumerator = this.GetInsideBoundsEnumerator(aabb);\r\n        let i;\r\n        while ((i = enumerator.GetNext()) >= 0) {\r\n            ///b2Vec2 p = point1 - m_positionBuffer.data[i];\r\n            const p = b2Vec2.SubVV(point1, pos_data[i], s_p);\r\n            const pv = b2Vec2.DotVV(p, v);\r\n            const p2 = b2Vec2.DotVV(p, p);\r\n            const determinant = pv * pv - v2 * (p2 - this.m_squaredDiameter);\r\n            if (determinant >= 0) {\r\n                const sqrtDeterminant = b2Sqrt(determinant);\r\n                // find a solution between 0 and fraction\r\n                let t = (-pv - sqrtDeterminant) / v2;\r\n                if (t > fraction) {\r\n                    continue;\r\n                }\r\n                if (t < 0) {\r\n                    t = (-pv + sqrtDeterminant) / v2;\r\n                    if (t < 0 || t > fraction) {\r\n                        continue;\r\n                    }\r\n                }\r\n                ///b2Vec2 n = p + t * v;\r\n                const n = b2Vec2.AddVMulSV(p, t, v, s_n);\r\n                n.Normalize();\r\n                ///float32 f = callback.ReportParticle(this, i, point1 + t * v, n, t);\r\n                const f = callback.ReportParticle(this, i, b2Vec2.AddVMulSV(point1, t, v, s_point), n, t);\r\n                fraction = b2Min(fraction, f);\r\n                if (fraction <= 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Compute the axis-aligned bounding box for all particles\r\n     * contained within this particle system.\r\n     * @param aabb Returns the axis-aligned bounding box of the system.\r\n     */\r\n    ComputeAABB(aabb) {\r\n        const particleCount = this.GetParticleCount();\r\n        // DEBUG: b2Assert(aabb !== null);\r\n        aabb.lowerBound.x = +b2_maxFloat;\r\n        aabb.lowerBound.y = +b2_maxFloat;\r\n        aabb.upperBound.x = -b2_maxFloat;\r\n        aabb.upperBound.y = -b2_maxFloat;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const p = pos_data[i];\r\n            b2Vec2.MinV(aabb.lowerBound, p, aabb.lowerBound);\r\n            b2Vec2.MaxV(aabb.upperBound, p, aabb.upperBound);\r\n        }\r\n        aabb.lowerBound.x -= this.m_particleDiameter;\r\n        aabb.lowerBound.y -= this.m_particleDiameter;\r\n        aabb.upperBound.x += this.m_particleDiameter;\r\n        aabb.upperBound.y += this.m_particleDiameter;\r\n    }\r\n    FreeBuffer(b, capacity) {\r\n        if (b === null) {\r\n            return;\r\n        }\r\n        b.length = 0;\r\n    }\r\n    FreeUserOverridableBuffer(b) {\r\n        if (b.userSuppliedCapacity === 0) {\r\n            this.FreeBuffer(b.data, this.m_internalAllocatedCapacity);\r\n        }\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer3(oldBuffer, oldCapacity, newCapacity) {\r\n        // b2Assert(newCapacity > oldCapacity);\r\n        if (newCapacity <= oldCapacity) {\r\n            throw new Error();\r\n        }\r\n        const newBuffer = (oldBuffer) ? oldBuffer.slice() : [];\r\n        newBuffer.length = newCapacity;\r\n        return newBuffer;\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer5(buffer, userSuppliedCapacity, oldCapacity, newCapacity, deferred) {\r\n        // b2Assert(newCapacity > oldCapacity);\r\n        if (newCapacity <= oldCapacity) {\r\n            throw new Error();\r\n        }\r\n        // A 'deferred' buffer is reallocated only if it is not NULL.\r\n        // If 'userSuppliedCapacity' is not zero, buffer is user supplied and must\r\n        // be kept.\r\n        // b2Assert(!userSuppliedCapacity || newCapacity <= userSuppliedCapacity);\r\n        if (!(!userSuppliedCapacity || newCapacity <= userSuppliedCapacity)) {\r\n            throw new Error();\r\n        }\r\n        if ((!deferred || buffer) && !userSuppliedCapacity) {\r\n            buffer = this.ReallocateBuffer3(buffer, oldCapacity, newCapacity);\r\n        }\r\n        return buffer; // TODO: fix this\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer4(buffer, oldCapacity, newCapacity, deferred) {\r\n        // DEBUG: b2Assert(newCapacity > oldCapacity);\r\n        return this.ReallocateBuffer5(buffer.data, buffer.userSuppliedCapacity, oldCapacity, newCapacity, deferred);\r\n    }\r\n    RequestBuffer(buffer) {\r\n        if (!buffer) {\r\n            if (this.m_internalAllocatedCapacity === 0) {\r\n                this.ReallocateInternalAllocatedBuffers(b2_minParticleSystemBufferCapacity);\r\n            }\r\n            buffer = [];\r\n            buffer.length = this.m_internalAllocatedCapacity;\r\n        }\r\n        return buffer;\r\n    }\r\n    /**\r\n     * Reallocate the handle / index map and schedule the allocation\r\n     * of a new pool for handle allocation.\r\n     */\r\n    ReallocateHandleBuffers(newCapacity) {\r\n        // DEBUG: b2Assert(newCapacity > this.m_internalAllocatedCapacity);\r\n        // Reallocate a new handle / index map buffer, copying old handle pointers\r\n        // is fine since they're kept around.\r\n        this.m_handleIndexBuffer.data = this.ReallocateBuffer4(this.m_handleIndexBuffer, this.m_internalAllocatedCapacity, newCapacity, true);\r\n        // Set the size of the next handle allocation.\r\n        ///this.m_handleAllocator.SetItemsPerSlab(newCapacity - this.m_internalAllocatedCapacity);\r\n    }\r\n    ReallocateInternalAllocatedBuffers(capacity) {\r\n        function LimitCapacity(capacity, maxCount) {\r\n            return maxCount && capacity > maxCount ? maxCount : capacity;\r\n        }\r\n        // Don't increase capacity beyond the smallest user-supplied buffer size.\r\n        capacity = LimitCapacity(capacity, this.m_def.maxCount);\r\n        capacity = LimitCapacity(capacity, this.m_flagsBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_positionBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_velocityBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_colorBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_userDataBuffer.userSuppliedCapacity);\r\n        if (this.m_internalAllocatedCapacity < capacity) {\r\n            this.ReallocateHandleBuffers(capacity);\r\n            this.m_flagsBuffer.data = this.ReallocateBuffer4(this.m_flagsBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            // Conditionally defer these as they are optional if the feature is\r\n            // not enabled.\r\n            const stuck = this.m_stuckThreshold > 0;\r\n            this.m_lastBodyContactStepBuffer.data = this.ReallocateBuffer4(this.m_lastBodyContactStepBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_bodyContactCountBuffer.data = this.ReallocateBuffer4(this.m_bodyContactCountBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_consecutiveContactStepsBuffer.data = this.ReallocateBuffer4(this.m_consecutiveContactStepsBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_positionBuffer.data = this.ReallocateBuffer4(this.m_positionBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_velocityBuffer.data = this.ReallocateBuffer4(this.m_velocityBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_forceBuffer = this.ReallocateBuffer5(this.m_forceBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_weightBuffer = this.ReallocateBuffer5(this.m_weightBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_staticPressureBuffer = this.ReallocateBuffer5(this.m_staticPressureBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_accumulationBuffer = this.ReallocateBuffer5(this.m_accumulationBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_accumulation2Buffer = this.ReallocateBuffer5(this.m_accumulation2Buffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_depthBuffer = this.ReallocateBuffer5(this.m_depthBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_colorBuffer.data = this.ReallocateBuffer4(this.m_colorBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_groupBuffer = this.ReallocateBuffer5(this.m_groupBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_userDataBuffer.data = this.ReallocateBuffer4(this.m_userDataBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_expirationTimeBuffer.data = this.ReallocateBuffer4(this.m_expirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_indexByExpirationTimeBuffer.data = this.ReallocateBuffer4(this.m_indexByExpirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_internalAllocatedCapacity = capacity;\r\n        }\r\n    }\r\n    CreateParticleForGroup(groupDef, xf, p) {\r\n        const particleDef = new b2ParticleDef();\r\n        particleDef.flags = b2Maybe(groupDef.flags, 0);\r\n        ///particleDef.position = b2Mul(xf, p);\r\n        b2Transform.MulXV(xf, p, particleDef.position);\r\n        ///particleDef.velocity =\r\n        ///  groupDef.linearVelocity +\r\n        ///  b2Cross(groupDef.angularVelocity,\r\n        ///      particleDef.position - groupDef.position);\r\n        b2Vec2.AddVV(b2Maybe(groupDef.linearVelocity, b2Vec2.ZERO), b2Vec2.CrossSV(b2Maybe(groupDef.angularVelocity, 0), b2Vec2.SubVV(particleDef.position, b2Maybe(groupDef.position, b2Vec2.ZERO), b2Vec2.s_t0), b2Vec2.s_t0), particleDef.velocity);\r\n        particleDef.color.Copy(b2Maybe(groupDef.color, b2Color.ZERO));\r\n        particleDef.lifetime = b2Maybe(groupDef.lifetime, 0);\r\n        particleDef.userData = groupDef.userData;\r\n        this.CreateParticle(particleDef);\r\n    }\r\n    CreateParticlesStrokeShapeForGroup(shape, groupDef, xf) {\r\n        const s_edge = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge;\r\n        const s_d = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d;\r\n        const s_p = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p;\r\n        let stride = b2Maybe(groupDef.stride, 0);\r\n        if (stride === 0) {\r\n            stride = this.GetParticleStride();\r\n        }\r\n        let positionOnEdge = 0;\r\n        const childCount = shape.GetChildCount();\r\n        for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n            let edge = null;\r\n            if (shape.GetType() === b2ShapeType.e_edgeShape) {\r\n                edge = shape;\r\n            }\r\n            else {\r\n                // DEBUG: b2Assert(shape.GetType() === b2ShapeType.e_chainShape);\r\n                edge = s_edge;\r\n                shape.GetChildEdge(edge, childIndex);\r\n            }\r\n            const d = b2Vec2.SubVV(edge.m_vertex2, edge.m_vertex1, s_d);\r\n            const edgeLength = d.Length();\r\n            while (positionOnEdge < edgeLength) {\r\n                ///b2Vec2 p = edge.m_vertex1 + positionOnEdge / edgeLength * d;\r\n                const p = b2Vec2.AddVMulSV(edge.m_vertex1, positionOnEdge / edgeLength, d, s_p);\r\n                this.CreateParticleForGroup(groupDef, xf, p);\r\n                positionOnEdge += stride;\r\n            }\r\n            positionOnEdge -= edgeLength;\r\n        }\r\n    }\r\n    CreateParticlesFillShapeForGroup(shape, groupDef, xf) {\r\n        const s_aabb = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb;\r\n        const s_p = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_p;\r\n        let stride = b2Maybe(groupDef.stride, 0);\r\n        if (stride === 0) {\r\n            stride = this.GetParticleStride();\r\n        }\r\n        ///b2Transform identity;\r\n        /// identity.SetIdentity();\r\n        const identity = b2Transform.IDENTITY;\r\n        const aabb = s_aabb;\r\n        // DEBUG: b2Assert(shape.GetChildCount() === 1);\r\n        shape.ComputeAABB(aabb, identity, 0);\r\n        for (let y = Math.floor(aabb.lowerBound.y / stride) * stride; y < aabb.upperBound.y; y += stride) {\r\n            for (let x = Math.floor(aabb.lowerBound.x / stride) * stride; x < aabb.upperBound.x; x += stride) {\r\n                const p = s_p.Set(x, y);\r\n                if (shape.TestPoint(identity, p)) {\r\n                    this.CreateParticleForGroup(groupDef, xf, p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    CreateParticlesWithShapeForGroup(shape, groupDef, xf) {\r\n        switch (shape.GetType()) {\r\n            case b2ShapeType.e_edgeShape:\r\n            case b2ShapeType.e_chainShape:\r\n                this.CreateParticlesStrokeShapeForGroup(shape, groupDef, xf);\r\n                break;\r\n            case b2ShapeType.e_polygonShape:\r\n            case b2ShapeType.e_circleShape:\r\n                this.CreateParticlesFillShapeForGroup(shape, groupDef, xf);\r\n                break;\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                break;\r\n        }\r\n    }\r\n    CreateParticlesWithShapesForGroup(shapes, shapeCount, groupDef, xf) {\r\n        const compositeShape = new b2ParticleSystem.CompositeShape(shapes, shapeCount);\r\n        this.CreateParticlesFillShapeForGroup(compositeShape, groupDef, xf);\r\n    }\r\n    CloneParticle(oldIndex, group) {\r\n        const def = new b2ParticleDef();\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        def.flags = this.m_flagsBuffer.data[oldIndex];\r\n        def.position.Copy(this.m_positionBuffer.data[oldIndex]);\r\n        def.velocity.Copy(this.m_velocityBuffer.data[oldIndex]);\r\n        if (this.m_colorBuffer.data) {\r\n            def.color.Copy(this.m_colorBuffer.data[oldIndex]);\r\n        }\r\n        if (this.m_userDataBuffer.data) {\r\n            def.userData = this.m_userDataBuffer.data[oldIndex];\r\n        }\r\n        def.group = group;\r\n        const newIndex = this.CreateParticle(def);\r\n        if (this.m_handleIndexBuffer.data) {\r\n            const handle = this.m_handleIndexBuffer.data[oldIndex];\r\n            if (handle) {\r\n                handle.SetIndex(newIndex);\r\n            }\r\n            this.m_handleIndexBuffer.data[newIndex] = handle;\r\n            this.m_handleIndexBuffer.data[oldIndex] = null;\r\n        }\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            this.m_lastBodyContactStepBuffer.data[newIndex] =\r\n                this.m_lastBodyContactStepBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            this.m_bodyContactCountBuffer.data[newIndex] =\r\n                this.m_bodyContactCountBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            this.m_consecutiveContactStepsBuffer.data[newIndex] =\r\n                this.m_consecutiveContactStepsBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_hasForce) {\r\n            this.m_forceBuffer[newIndex].Copy(this.m_forceBuffer[oldIndex]);\r\n        }\r\n        if (this.m_staticPressureBuffer) {\r\n            this.m_staticPressureBuffer[newIndex] = this.m_staticPressureBuffer[oldIndex];\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            this.m_depthBuffer[newIndex] = this.m_depthBuffer[oldIndex];\r\n        }\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            this.m_expirationTimeBuffer.data[newIndex] =\r\n                this.m_expirationTimeBuffer.data[oldIndex];\r\n        }\r\n        return newIndex;\r\n    }\r\n    DestroyParticlesInGroup(group, callDestructionListener = false) {\r\n        for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n            this.DestroyParticle(i, callDestructionListener);\r\n        }\r\n    }\r\n    DestroyParticleGroup(group) {\r\n        // DEBUG: b2Assert(this.m_groupCount > 0);\r\n        // DEBUG: b2Assert(group !== null);\r\n        if (this.m_world.m_destructionListener) {\r\n            this.m_world.m_destructionListener.SayGoodbyeParticleGroup(group);\r\n        }\r\n        this.SetGroupFlags(group, 0);\r\n        for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n            this.m_groupBuffer[i] = null;\r\n        }\r\n        if (group.m_prev) {\r\n            group.m_prev.m_next = group.m_next;\r\n        }\r\n        if (group.m_next) {\r\n            group.m_next.m_prev = group.m_prev;\r\n        }\r\n        if (group === this.m_groupList) {\r\n            this.m_groupList = group.m_next;\r\n        }\r\n        --this.m_groupCount;\r\n    }\r\n    static ParticleCanBeConnected(flags, group) {\r\n        return ((flags & (b2ParticleFlag.b2_wallParticle | b2ParticleFlag.b2_springParticle | b2ParticleFlag.b2_elasticParticle)) !== 0) ||\r\n            ((group !== null) && ((group.GetGroupFlags() & b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0));\r\n    }\r\n    UpdatePairsAndTriads(firstIndex, lastIndex, filter) {\r\n        const s_dab = b2ParticleSystem.UpdatePairsAndTriads_s_dab;\r\n        const s_dbc = b2ParticleSystem.UpdatePairsAndTriads_s_dbc;\r\n        const s_dca = b2ParticleSystem.UpdatePairsAndTriads_s_dca;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        // Create pairs or triads.\r\n        // All particles in each pair/triad should satisfy the following:\r\n        // * firstIndex <= index < lastIndex\r\n        // * don't have b2_zombieParticle\r\n        // * ParticleCanBeConnected returns true\r\n        // * ShouldCreatePair/ShouldCreateTriad returns true\r\n        // Any particles in each pair/triad should satisfy the following:\r\n        // * filter.IsNeeded returns true\r\n        // * have one of k_pairFlags/k_triadsFlags\r\n        // DEBUG: b2Assert(firstIndex <= lastIndex);\r\n        let particleFlags = 0;\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            particleFlags |= this.m_flagsBuffer.data[i];\r\n        }\r\n        if (particleFlags & b2ParticleSystem.k_pairFlags) {\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                const contact = this.m_contactBuffer.data[k];\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                const af = this.m_flagsBuffer.data[a];\r\n                const bf = this.m_flagsBuffer.data[b];\r\n                const groupA = this.m_groupBuffer[a];\r\n                const groupB = this.m_groupBuffer[b];\r\n                if (a >= firstIndex && a < lastIndex &&\r\n                    b >= firstIndex && b < lastIndex &&\r\n                    !((af | bf) & b2ParticleFlag.b2_zombieParticle) &&\r\n                    ((af | bf) & b2ParticleSystem.k_pairFlags) &&\r\n                    (filter.IsNecessary(a) || filter.IsNecessary(b)) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(af, groupA) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(bf, groupB) &&\r\n                    filter.ShouldCreatePair(a, b)) {\r\n                    ///b2ParticlePair& pair = m_pairBuffer.Append();\r\n                    const pair = this.m_pairBuffer.data[this.m_pairBuffer.Append()];\r\n                    pair.indexA = a;\r\n                    pair.indexB = b;\r\n                    pair.flags = contact.flags;\r\n                    pair.strength = b2Min(groupA ? groupA.m_strength : 1, groupB ? groupB.m_strength : 1);\r\n                    ///pair.distance = b2Distance(pos_data[a], pos_data[b]); // TODO: this was wrong!\r\n                    pair.distance = b2Vec2.DistanceVV(pos_data[a], pos_data[b]);\r\n                }\r\n                ///std::stable_sort(m_pairBuffer.Begin(), m_pairBuffer.End(), ComparePairIndices);\r\n                std_stable_sort(this.m_pairBuffer.data, 0, this.m_pairBuffer.count, b2ParticleSystem.ComparePairIndices);\r\n                ///m_pairBuffer.Unique(MatchPairIndices);\r\n                this.m_pairBuffer.Unique(b2ParticleSystem.MatchPairIndices);\r\n            }\r\n        }\r\n        if (particleFlags & b2ParticleSystem.k_triadFlags) {\r\n            const diagram = new b2VoronoiDiagram(lastIndex - firstIndex);\r\n            ///let necessary_count = 0;\r\n            for (let i = firstIndex; i < lastIndex; i++) {\r\n                const flags = this.m_flagsBuffer.data[i];\r\n                const group = this.m_groupBuffer[i];\r\n                if (!(flags & b2ParticleFlag.b2_zombieParticle) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(flags, group)) {\r\n                    ///if (filter.IsNecessary(i)) {\r\n                    ///++necessary_count;\r\n                    ///}\r\n                    diagram.AddGenerator(pos_data[i], i, filter.IsNecessary(i));\r\n                }\r\n            }\r\n            ///if (necessary_count === 0) {\r\n            /////debugger;\r\n            ///for (let i = firstIndex; i < lastIndex; i++) {\r\n            ///  filter.IsNecessary(i);\r\n            ///}\r\n            ///}\r\n            const stride = this.GetParticleStride();\r\n            diagram.Generate(stride / 2, stride * 2);\r\n            const system = this;\r\n            const callback = /*UpdateTriadsCallback*/ (a, b, c) => {\r\n                if (!system.m_flagsBuffer.data) {\r\n                    throw new Error();\r\n                }\r\n                const af = system.m_flagsBuffer.data[a];\r\n                const bf = system.m_flagsBuffer.data[b];\r\n                const cf = system.m_flagsBuffer.data[c];\r\n                if (((af | bf | cf) & b2ParticleSystem.k_triadFlags) &&\r\n                    filter.ShouldCreateTriad(a, b, c)) {\r\n                    const pa = pos_data[a];\r\n                    const pb = pos_data[b];\r\n                    const pc = pos_data[c];\r\n                    const dab = b2Vec2.SubVV(pa, pb, s_dab);\r\n                    const dbc = b2Vec2.SubVV(pb, pc, s_dbc);\r\n                    const dca = b2Vec2.SubVV(pc, pa, s_dca);\r\n                    const maxDistanceSquared = b2_maxTriadDistanceSquared * system.m_squaredDiameter;\r\n                    if (b2Vec2.DotVV(dab, dab) > maxDistanceSquared ||\r\n                        b2Vec2.DotVV(dbc, dbc) > maxDistanceSquared ||\r\n                        b2Vec2.DotVV(dca, dca) > maxDistanceSquared) {\r\n                        return;\r\n                    }\r\n                    const groupA = system.m_groupBuffer[a];\r\n                    const groupB = system.m_groupBuffer[b];\r\n                    const groupC = system.m_groupBuffer[c];\r\n                    ///b2ParticleTriad& triad = m_system.m_triadBuffer.Append();\r\n                    const triad = system.m_triadBuffer.data[system.m_triadBuffer.Append()];\r\n                    triad.indexA = a;\r\n                    triad.indexB = b;\r\n                    triad.indexC = c;\r\n                    triad.flags = af | bf | cf;\r\n                    triad.strength = b2Min(b2Min(groupA ? groupA.m_strength : 1, groupB ? groupB.m_strength : 1), groupC ? groupC.m_strength : 1);\r\n                    ///let midPoint = b2Vec2.MulSV(1.0 / 3.0, b2Vec2.AddVV(pa, b2Vec2.AddVV(pb, pc, new b2Vec2()), new b2Vec2()), new b2Vec2());\r\n                    const midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\r\n                    const midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\r\n                    ///triad.pa = b2Vec2.SubVV(pa, midPoint, new b2Vec2());\r\n                    triad.pa.x = pa.x - midPoint_x;\r\n                    triad.pa.y = pa.y - midPoint_y;\r\n                    ///triad.pb = b2Vec2.SubVV(pb, midPoint, new b2Vec2());\r\n                    triad.pb.x = pb.x - midPoint_x;\r\n                    triad.pb.y = pb.y - midPoint_y;\r\n                    ///triad.pc = b2Vec2.SubVV(pc, midPoint, new b2Vec2());\r\n                    triad.pc.x = pc.x - midPoint_x;\r\n                    triad.pc.y = pc.y - midPoint_y;\r\n                    triad.ka = -b2Vec2.DotVV(dca, dab);\r\n                    triad.kb = -b2Vec2.DotVV(dab, dbc);\r\n                    triad.kc = -b2Vec2.DotVV(dbc, dca);\r\n                    triad.s = b2Vec2.CrossVV(pa, pb) + b2Vec2.CrossVV(pb, pc) + b2Vec2.CrossVV(pc, pa);\r\n                }\r\n            };\r\n            diagram.GetNodes(callback);\r\n            ///std::stable_sort(m_triadBuffer.Begin(), m_triadBuffer.End(), CompareTriadIndices);\r\n            std_stable_sort(this.m_triadBuffer.data, 0, this.m_triadBuffer.count, b2ParticleSystem.CompareTriadIndices);\r\n            ///m_triadBuffer.Unique(MatchTriadIndices);\r\n            this.m_triadBuffer.Unique(b2ParticleSystem.MatchTriadIndices);\r\n        }\r\n    }\r\n    UpdatePairsAndTriadsWithReactiveParticles() {\r\n        const filter = new b2ParticleSystem.ReactiveFilter(this.m_flagsBuffer);\r\n        this.UpdatePairsAndTriads(0, this.m_count, filter);\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_flagsBuffer.data[i] &= ~b2ParticleFlag.b2_reactiveParticle;\r\n        }\r\n        this.m_allParticleFlags &= ~b2ParticleFlag.b2_reactiveParticle;\r\n    }\r\n    static ComparePairIndices(a, b) {\r\n        const diffA = a.indexA - b.indexA;\r\n        if (diffA !== 0) {\r\n            return diffA < 0;\r\n        }\r\n        return a.indexB < b.indexB;\r\n    }\r\n    static MatchPairIndices(a, b) {\r\n        return a.indexA === b.indexA && a.indexB === b.indexB;\r\n    }\r\n    static CompareTriadIndices(a, b) {\r\n        const diffA = a.indexA - b.indexA;\r\n        if (diffA !== 0) {\r\n            return diffA < 0;\r\n        }\r\n        const diffB = a.indexB - b.indexB;\r\n        if (diffB !== 0) {\r\n            return diffB < 0;\r\n        }\r\n        return a.indexC < b.indexC;\r\n    }\r\n    static MatchTriadIndices(a, b) {\r\n        return a.indexA === b.indexA && a.indexB === b.indexB && a.indexC === b.indexC;\r\n    }\r\n    static InitializeParticleLists(group, nodeBuffer) {\r\n        const bufferIndex = group.GetBufferIndex();\r\n        const particleCount = group.GetParticleCount();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const node = nodeBuffer[i];\r\n            node.list = node;\r\n            node.next = null;\r\n            node.count = 1;\r\n            node.index = i + bufferIndex;\r\n        }\r\n    }\r\n    MergeParticleListsInContact(group, nodeBuffer) {\r\n        const bufferIndex = group.GetBufferIndex();\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            /*const b2ParticleContact&*/\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            if (!group.ContainsParticle(a) || !group.ContainsParticle(b)) {\r\n                continue;\r\n            }\r\n            let listA = nodeBuffer[a - bufferIndex].list;\r\n            let listB = nodeBuffer[b - bufferIndex].list;\r\n            if (listA === listB) {\r\n                continue;\r\n            }\r\n            // To minimize the cost of insertion, make sure listA is longer than\r\n            // listB.\r\n            if (listA.count < listB.count) {\r\n                const _tmp = listA;\r\n                listA = listB;\r\n                listB = _tmp; ///b2Swap(listA, listB);\r\n            }\r\n            // DEBUG: b2Assert(listA.count >= listB.count);\r\n            b2ParticleSystem.MergeParticleLists(listA, listB);\r\n        }\r\n    }\r\n    static MergeParticleLists(listA, listB) {\r\n        // Insert listB between index 0 and 1 of listA\r\n        // Example:\r\n        //     listA => a1 => a2 => a3 => null\r\n        //     listB => b1 => b2 => null\r\n        // to\r\n        //     listA => listB => b1 => b2 => a1 => a2 => a3 => null\r\n        // DEBUG: b2Assert(listA !== listB);\r\n        for (let b = listB;;) {\r\n            b.list = listA;\r\n            const nextB = b.next;\r\n            if (nextB) {\r\n                b = nextB;\r\n            }\r\n            else {\r\n                b.next = listA.next;\r\n                break;\r\n            }\r\n        }\r\n        listA.next = listB;\r\n        listA.count += listB.count;\r\n        listB.count = 0;\r\n    }\r\n    static FindLongestParticleList(group, nodeBuffer) {\r\n        const particleCount = group.GetParticleCount();\r\n        let result = nodeBuffer[0];\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const node = nodeBuffer[i];\r\n            if (result.count < node.count) {\r\n                result = node;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    MergeZombieParticleListNodes(group, nodeBuffer, survivingList) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const particleCount = group.GetParticleCount();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const node = nodeBuffer[i];\r\n            if (node !== survivingList &&\r\n                (this.m_flagsBuffer.data[node.index] & b2ParticleFlag.b2_zombieParticle)) {\r\n                b2ParticleSystem.MergeParticleListAndNode(survivingList, node);\r\n            }\r\n        }\r\n    }\r\n    static MergeParticleListAndNode(list, node) {\r\n        // Insert node between index 0 and 1 of list\r\n        // Example:\r\n        //     list => a1 => a2 => a3 => null\r\n        //     node => null\r\n        // to\r\n        //     list => node => a1 => a2 => a3 => null\r\n        // DEBUG: b2Assert(node !== list);\r\n        // DEBUG: b2Assert(node.list === node);\r\n        // DEBUG: b2Assert(node.count === 1);\r\n        node.list = list;\r\n        node.next = list.next;\r\n        list.next = node;\r\n        list.count++;\r\n        node.count = 0;\r\n    }\r\n    CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const particleCount = group.GetParticleCount();\r\n        const def = new b2ParticleGroupDef();\r\n        def.groupFlags = group.GetGroupFlags();\r\n        def.userData = group.GetUserData();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const list = nodeBuffer[i];\r\n            if (!list.count || list === survivingList) {\r\n                continue;\r\n            }\r\n            // DEBUG: b2Assert(list.list === list);\r\n            const newGroup = this.CreateParticleGroup(def);\r\n            for (let node = list; node; node = node.next) {\r\n                const oldIndex = node.index;\r\n                // DEBUG: const flags = this.m_flagsBuffer.data[oldIndex];\r\n                // DEBUG: b2Assert(!(flags & b2ParticleFlag.b2_zombieParticle));\r\n                const newIndex = this.CloneParticle(oldIndex, newGroup);\r\n                this.m_flagsBuffer.data[oldIndex] |= b2ParticleFlag.b2_zombieParticle;\r\n                node.index = newIndex;\r\n            }\r\n        }\r\n    }\r\n    UpdatePairsAndTriadsWithParticleList(group, nodeBuffer) {\r\n        const bufferIndex = group.GetBufferIndex();\r\n        // Update indices in pairs and triads. If an index belongs to the group,\r\n        // replace it with the corresponding value in nodeBuffer.\r\n        // Note that nodeBuffer is allocated only for the group and the index should\r\n        // be shifted by bufferIndex.\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            const pair = this.m_pairBuffer.data[k];\r\n            const a = pair.indexA;\r\n            const b = pair.indexB;\r\n            if (group.ContainsParticle(a)) {\r\n                pair.indexA = nodeBuffer[a - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(b)) {\r\n                pair.indexB = nodeBuffer[b - bufferIndex].index;\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            const triad = this.m_triadBuffer.data[k];\r\n            const a = triad.indexA;\r\n            const b = triad.indexB;\r\n            const c = triad.indexC;\r\n            if (group.ContainsParticle(a)) {\r\n                triad.indexA = nodeBuffer[a - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(b)) {\r\n                triad.indexB = nodeBuffer[b - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(c)) {\r\n                triad.indexC = nodeBuffer[c - bufferIndex].index;\r\n            }\r\n        }\r\n    }\r\n    ComputeDepth() {\r\n        ///b2ParticleContact* contactGroups = (b2ParticleContact*) this.m_world.m_stackAllocator.Allocate(sizeof(b2ParticleContact) * this.m_contactBuffer.GetCount());\r\n        const contactGroups = []; // TODO: static\r\n        let contactGroupsCount = 0;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const groupA = this.m_groupBuffer[a];\r\n            const groupB = this.m_groupBuffer[b];\r\n            if (groupA && groupA === groupB &&\r\n                (groupA.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth)) {\r\n                contactGroups[contactGroupsCount++] = contact;\r\n            }\r\n        }\r\n        ///b2ParticleGroup** groupsToUpdate = (b2ParticleGroup**) this.m_world.m_stackAllocator.Allocate(sizeof(b2ParticleGroup*) * this.m_groupCount);\r\n        const groupsToUpdate = []; // TODO: static\r\n        let groupsToUpdateCount = 0;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\r\n                groupsToUpdate[groupsToUpdateCount++] = group;\r\n                this.SetGroupFlags(group, group.m_groupFlags &\r\n                    ~b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\r\n                for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                    this.m_accumulationBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        // Compute sum of weight of contacts except between different groups.\r\n        for (let k = 0; k < contactGroupsCount; k++) {\r\n            const contact = contactGroups[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const w = contact.weight;\r\n            this.m_accumulationBuffer[a] += w;\r\n            this.m_accumulationBuffer[b] += w;\r\n        }\r\n        // DEBUG: b2Assert(this.m_depthBuffer !== null);\r\n        for (let i = 0; i < groupsToUpdateCount; i++) {\r\n            const group = groupsToUpdate[i];\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                const w = this.m_accumulationBuffer[i];\r\n                this.m_depthBuffer[i] = w < 0.8 ? 0 : b2_maxFloat;\r\n            }\r\n        }\r\n        // The number of iterations is equal to particle number from the deepest\r\n        // particle to the nearest surface particle, and in general it is smaller\r\n        // than sqrt of total particle number.\r\n        ///int32 iterationCount = (int32)b2Sqrt((float)m_count);\r\n        const iterationCount = b2Sqrt(this.m_count) >> 0;\r\n        for (let t = 0; t < iterationCount; t++) {\r\n            let updated = false;\r\n            for (let k = 0; k < contactGroupsCount; k++) {\r\n                const contact = contactGroups[k];\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                const r = 1 - contact.weight;\r\n                ///float32& ap0 = m_depthBuffer[a];\r\n                const ap0 = this.m_depthBuffer[a];\r\n                ///float32& bp0 = m_depthBuffer[b];\r\n                const bp0 = this.m_depthBuffer[b];\r\n                const ap1 = bp0 + r;\r\n                const bp1 = ap0 + r;\r\n                if (ap0 > ap1) {\r\n                    ///ap0 = ap1;\r\n                    this.m_depthBuffer[a] = ap1;\r\n                    updated = true;\r\n                }\r\n                if (bp0 > bp1) {\r\n                    ///bp0 = bp1;\r\n                    this.m_depthBuffer[b] = bp1;\r\n                    updated = true;\r\n                }\r\n            }\r\n            if (!updated) {\r\n                break;\r\n            }\r\n        }\r\n        for (let i = 0; i < groupsToUpdateCount; i++) {\r\n            const group = groupsToUpdate[i];\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                if (this.m_depthBuffer[i] < b2_maxFloat) {\r\n                    this.m_depthBuffer[i] *= this.m_particleDiameter;\r\n                }\r\n                else {\r\n                    this.m_depthBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        ///this.m_world.m_stackAllocator.Free(groupsToUpdate);\r\n        ///this.m_world.m_stackAllocator.Free(contactGroups);\r\n    }\r\n    GetInsideBoundsEnumerator(aabb) {\r\n        const lowerTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x - 1, this.m_inverseDiameter * aabb.lowerBound.y - 1);\r\n        const upperTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x + 1, this.m_inverseDiameter * aabb.upperBound.y + 1);\r\n        ///const Proxy* beginProxy = m_proxyBuffer.Begin();\r\n        const beginProxy = 0;\r\n        ///const Proxy* endProxy = m_proxyBuffer.End();\r\n        const endProxy = this.m_proxyBuffer.count;\r\n        ///const Proxy* firstProxy = std::lower_bound(beginProxy, endProxy, lowerTag);\r\n        const firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, lowerTag, b2ParticleSystem.Proxy.CompareProxyTag);\r\n        ///const Proxy* lastProxy = std::upper_bound(firstProxy, endProxy, upperTag);\r\n        const lastProxy = std_upper_bound(this.m_proxyBuffer.data, beginProxy, endProxy, upperTag, b2ParticleSystem.Proxy.CompareTagProxy);\r\n        // DEBUG: b2Assert(beginProxy <= firstProxy);\r\n        // DEBUG: b2Assert(firstProxy <= lastProxy);\r\n        // DEBUG: b2Assert(lastProxy <= endProxy);\r\n        return new b2ParticleSystem.InsideBoundsEnumerator(this, lowerTag, upperTag, firstProxy, lastProxy);\r\n    }\r\n    UpdateAllParticleFlags() {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        this.m_allParticleFlags = 0;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_allParticleFlags |= this.m_flagsBuffer.data[i];\r\n        }\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n    }\r\n    UpdateAllGroupFlags() {\r\n        this.m_allGroupFlags = 0;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            this.m_allGroupFlags |= group.m_groupFlags;\r\n        }\r\n        this.m_needsUpdateAllGroupFlags = false;\r\n    }\r\n    AddContact(a, b, contacts) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const s_d = b2ParticleSystem.AddContact_s_d;\r\n        const pos_data = this.m_positionBuffer.data;\r\n        // DEBUG: b2Assert(contacts === this.m_contactBuffer);\r\n        ///b2Vec2 d = m_positionBuffer.data[b] - m_positionBuffer.data[a];\r\n        const d = b2Vec2.SubVV(pos_data[b], pos_data[a], s_d);\r\n        const distBtParticlesSq = b2Vec2.DotVV(d, d);\r\n        if (distBtParticlesSq < this.m_squaredDiameter) {\r\n            let invD = b2InvSqrt(distBtParticlesSq);\r\n            if (!isFinite(invD)) {\r\n                invD = 1.98177537e+019;\r\n            }\r\n            ///b2ParticleContact& contact = contacts.Append();\r\n            const contact = this.m_contactBuffer.data[this.m_contactBuffer.Append()];\r\n            contact.indexA = a;\r\n            contact.indexB = b;\r\n            contact.flags = this.m_flagsBuffer.data[a] | this.m_flagsBuffer.data[b];\r\n            contact.weight = 1 - distBtParticlesSq * invD * this.m_inverseDiameter;\r\n            ///contact.SetNormal(invD * d);\r\n            b2Vec2.MulSV(invD, d, contact.normal);\r\n        }\r\n    }\r\n    FindContacts_Reference(contacts) {\r\n        // DEBUG: b2Assert(contacts === this.m_contactBuffer);\r\n        const beginProxy = 0;\r\n        const endProxy = this.m_proxyBuffer.count;\r\n        this.m_contactBuffer.count = 0;\r\n        for (let a = beginProxy, c = beginProxy; a < endProxy; a++) {\r\n            const rightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 0);\r\n            for (let b = a + 1; b < endProxy; b++) {\r\n                if (rightTag < this.m_proxyBuffer.data[b].tag) {\r\n                    break;\r\n                }\r\n                this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\r\n            }\r\n            const bottomLeftTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, -1, 1);\r\n            for (; c < endProxy; c++) {\r\n                if (bottomLeftTag <= this.m_proxyBuffer.data[c].tag) {\r\n                    break;\r\n                }\r\n            }\r\n            const bottomRightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 1);\r\n            for (let b = c; b < endProxy; b++) {\r\n                if (bottomRightTag < this.m_proxyBuffer.data[b].tag) {\r\n                    break;\r\n                }\r\n                this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\r\n            }\r\n        }\r\n    }\r\n    ///void ReorderForFindContact(FindContactInput* reordered, int alignedCount) const;\r\n    ///void GatherChecksOneParticle(const uint32 bound, const int startIndex, const int particleIndex, int* nextUncheckedIndex, b2GrowableBuffer<FindContactCheck>& checks) const;\r\n    ///void GatherChecks(b2GrowableBuffer<FindContactCheck>& checks) const;\r\n    ///void FindContacts_Simd(b2GrowableBuffer<b2ParticleContact>& contacts) const;\r\n    FindContacts(contacts) {\r\n        this.FindContacts_Reference(contacts);\r\n    }\r\n    ///static void UpdateProxyTags(const uint32* const tags, b2GrowableBuffer<Proxy>& proxies);\r\n    ///static bool ProxyBufferHasIndex(int32 index, const Proxy* const a, int count);\r\n    ///static int NumProxiesWithSameTag(const Proxy* const a, const Proxy* const b, int count);\r\n    ///static bool AreProxyBuffersTheSame(const b2GrowableBuffer<Proxy>& a, const b2GrowableBuffer<Proxy>& b);\r\n    UpdateProxies_Reference(proxies) {\r\n        // DEBUG: b2Assert(proxies === this.m_proxyBuffer);\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const inv_diam = this.m_inverseDiameter;\r\n        for (let k = 0; k < this.m_proxyBuffer.count; ++k) {\r\n            const proxy = this.m_proxyBuffer.data[k];\r\n            const i = proxy.index;\r\n            const p = pos_data[i];\r\n            proxy.tag = b2ParticleSystem.computeTag(inv_diam * p.x, inv_diam * p.y);\r\n        }\r\n    }\r\n    ///void UpdateProxies_Simd(b2GrowableBuffer<Proxy>& proxies) const;\r\n    UpdateProxies(proxies) {\r\n        this.UpdateProxies_Reference(proxies);\r\n    }\r\n    SortProxies(proxies) {\r\n        // DEBUG: b2Assert(proxies === this.m_proxyBuffer);\r\n        ///std::sort(proxies.Begin(), proxies.End());\r\n        std_sort(this.m_proxyBuffer.data, 0, this.m_proxyBuffer.count, b2ParticleSystem.Proxy.CompareProxyProxy);\r\n    }\r\n    FilterContacts(contacts) {\r\n        // Optionally filter the contact.\r\n        const contactFilter = this.GetParticleContactFilter();\r\n        if (contactFilter === null) {\r\n            return;\r\n        }\r\n        /// contacts.RemoveIf(b2ParticleContactRemovePredicate(this, contactFilter));\r\n        // DEBUG: b2Assert(contacts === this.m_contactBuffer);\r\n        const system = this;\r\n        const predicate = (contact) => {\r\n            return ((contact.flags & b2ParticleFlag.b2_particleContactFilterParticle) !== 0) && !contactFilter.ShouldCollideParticleParticle(system, contact.indexA, contact.indexB);\r\n        };\r\n        this.m_contactBuffer.RemoveIf(predicate);\r\n    }\r\n    NotifyContactListenerPreContact(particlePairs) {\r\n        const contactListener = this.GetParticleContactListener();\r\n        if (contactListener === null) {\r\n            return;\r\n        }\r\n        ///particlePairs.Initialize(m_contactBuffer.Begin(), m_contactBuffer.GetCount(), GetFlagsBuffer());\r\n        particlePairs.Initialize(this.m_contactBuffer, this.m_flagsBuffer);\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    NotifyContactListenerPostContact(particlePairs) {\r\n        const contactListener = this.GetParticleContactListener();\r\n        if (contactListener === null) {\r\n            return;\r\n        }\r\n        // Loop through all new contacts, reporting any new ones, and\r\n        // \"invalidating\" the ones that still exist.\r\n        ///const b2ParticleContact* const endContact = m_contactBuffer.End();\r\n        ///for (b2ParticleContact* contact = m_contactBuffer.Begin(); contact < endContact; ++contact)\r\n        for (let k = 0; k < this.m_contactBuffer.count; ++k) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            ///ParticlePair pair;\r\n            ///pair.first = contact.GetIndexA();\r\n            ///pair.second = contact.GetIndexB();\r\n            ///const int32 itemIndex = particlePairs.Find(pair);\r\n            const itemIndex = -1; // TODO\r\n            if (itemIndex >= 0) {\r\n                // Already touching, ignore this contact.\r\n                particlePairs.Invalidate(itemIndex);\r\n            }\r\n            else {\r\n                // Just started touching, inform the listener.\r\n                contactListener.BeginContactParticleParticle(this, contact);\r\n            }\r\n        }\r\n        // Report particles that are no longer touching.\r\n        // That is, any pairs that were not invalidated above.\r\n        ///const int32 pairCount = particlePairs.GetCount();\r\n        ///const ParticlePair* const pairs = particlePairs.GetBuffer();\r\n        ///const int8* const valid = particlePairs.GetValidBuffer();\r\n        ///for (int32 i = 0; i < pairCount; ++i)\r\n        ///{\r\n        ///  if (valid[i])\r\n        ///  {\r\n        ///    contactListener.EndContactParticleParticle(this, pairs[i].first, pairs[i].second);\r\n        ///  }\r\n        ///}\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    static b2ParticleContactIsZombie(contact) {\r\n        return (contact.flags & b2ParticleFlag.b2_zombieParticle) === b2ParticleFlag.b2_zombieParticle;\r\n    }\r\n    UpdateContacts(exceptZombie) {\r\n        this.UpdateProxies(this.m_proxyBuffer);\r\n        this.SortProxies(this.m_proxyBuffer);\r\n        ///b2ParticlePairSet particlePairs(&this.m_world.m_stackAllocator);\r\n        const particlePairs = new b2ParticleSystem.b2ParticlePairSet(); // TODO: static\r\n        this.NotifyContactListenerPreContact(particlePairs);\r\n        this.FindContacts(this.m_contactBuffer);\r\n        this.FilterContacts(this.m_contactBuffer);\r\n        this.NotifyContactListenerPostContact(particlePairs);\r\n        if (exceptZombie) {\r\n            this.m_contactBuffer.RemoveIf(b2ParticleSystem.b2ParticleContactIsZombie);\r\n        }\r\n    }\r\n    NotifyBodyContactListenerPreContact(fixtureSet) {\r\n        const contactListener = this.GetFixtureContactListener();\r\n        if (contactListener === null) {\r\n            return;\r\n        }\r\n        ///fixtureSet.Initialize(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.GetCount(), GetFlagsBuffer());\r\n        fixtureSet.Initialize(this.m_bodyContactBuffer, this.m_flagsBuffer);\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    NotifyBodyContactListenerPostContact(fixtureSet) {\r\n        const contactListener = this.GetFixtureContactListener();\r\n        if (contactListener === null) {\r\n            return;\r\n        }\r\n        // Loop through all new contacts, reporting any new ones, and\r\n        // \"invalidating\" the ones that still exist.\r\n        ///for (b2ParticleBodyContact* contact = m_bodyContactBuffer.Begin(); contact !== m_bodyContactBuffer.End(); ++contact)\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            // DEBUG: b2Assert(contact !== null);\r\n            ///FixtureParticle fixtureParticleToFind;\r\n            ///fixtureParticleToFind.first = contact.fixture;\r\n            ///fixtureParticleToFind.second = contact.index;\r\n            ///const int32 index = fixtureSet.Find(fixtureParticleToFind);\r\n            const index = -1; // TODO\r\n            if (index >= 0) {\r\n                // Already touching remove this from the set.\r\n                fixtureSet.Invalidate(index);\r\n            }\r\n            else {\r\n                // Just started touching, report it!\r\n                contactListener.BeginContactFixtureParticle(this, contact);\r\n            }\r\n        }\r\n        // If the contact listener is enabled, report all fixtures that are no\r\n        // longer in contact with particles.\r\n        ///const FixtureParticle* const fixtureParticles = fixtureSet.GetBuffer();\r\n        ///const int8* const fixtureParticlesValid = fixtureSet.GetValidBuffer();\r\n        ///const int32 fixtureParticleCount = fixtureSet.GetCount();\r\n        ///for (int32 i = 0; i < fixtureParticleCount; ++i)\r\n        ///{\r\n        ///  if (fixtureParticlesValid[i])\r\n        ///  {\r\n        ///    const FixtureParticle* const fixtureParticle = &fixtureParticles[i];\r\n        ///    contactListener.EndContactFixtureParticle(fixtureParticle.first, this, fixtureParticle.second);\r\n        ///  }\r\n        ///}\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    UpdateBodyContacts() {\r\n        const s_aabb = b2ParticleSystem.UpdateBodyContacts_s_aabb;\r\n        // If the particle contact listener is enabled, generate a set of\r\n        // fixture / particle contacts.\r\n        ///FixtureParticleSet fixtureSet(&m_world.m_stackAllocator);\r\n        const fixtureSet = new b2ParticleSystem.FixtureParticleSet(); // TODO: static\r\n        this.NotifyBodyContactListenerPreContact(fixtureSet);\r\n        if (this.m_stuckThreshold > 0) {\r\n            if (!this.m_bodyContactCountBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (!this.m_lastBodyContactStepBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (!this.m_consecutiveContactStepsBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const particleCount = this.GetParticleCount();\r\n            for (let i = 0; i < particleCount; i++) {\r\n                // Detect stuck particles, see comment in\r\n                // b2ParticleSystem::DetectStuckParticle()\r\n                this.m_bodyContactCountBuffer.data[i] = 0;\r\n                if (this.m_timestamp > (this.m_lastBodyContactStepBuffer.data[i] + 1)) {\r\n                    this.m_consecutiveContactStepsBuffer.data[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        this.m_bodyContactBuffer.SetCount(0);\r\n        this.m_stuckParticleBuffer.SetCount(0);\r\n        const aabb = s_aabb;\r\n        this.ComputeAABB(aabb);\r\n        const callback = new b2ParticleSystem.UpdateBodyContactsCallback(this, this.GetFixtureContactFilter());\r\n        this.m_world.QueryAABB(callback, aabb);\r\n        if (this.m_def.strictContactCheck) {\r\n            this.RemoveSpuriousBodyContacts();\r\n        }\r\n        this.NotifyBodyContactListenerPostContact(fixtureSet);\r\n    }\r\n    Solve(step) {\r\n        const s_subStep = b2ParticleSystem.Solve_s_subStep;\r\n        if (this.m_count === 0) {\r\n            return;\r\n        }\r\n        // If particle lifetimes are enabled, destroy particles that are too old.\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            this.SolveLifetimes(step);\r\n        }\r\n        if (this.m_allParticleFlags & b2ParticleFlag.b2_zombieParticle) {\r\n            this.SolveZombie();\r\n        }\r\n        if (this.m_needsUpdateAllParticleFlags) {\r\n            this.UpdateAllParticleFlags();\r\n        }\r\n        if (this.m_needsUpdateAllGroupFlags) {\r\n            this.UpdateAllGroupFlags();\r\n        }\r\n        if (this.m_paused) {\r\n            return;\r\n        }\r\n        for (this.m_iterationIndex = 0; this.m_iterationIndex < step.particleIterations; this.m_iterationIndex++) {\r\n            ++this.m_timestamp;\r\n            const subStep = s_subStep.Copy(step);\r\n            subStep.dt /= step.particleIterations;\r\n            subStep.inv_dt *= step.particleIterations;\r\n            this.UpdateContacts(false);\r\n            this.UpdateBodyContacts();\r\n            this.ComputeWeight();\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\r\n                this.ComputeDepth();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_reactiveParticle) {\r\n                this.UpdatePairsAndTriadsWithReactiveParticles();\r\n            }\r\n            if (this.m_hasForce) {\r\n                this.SolveForce(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_viscousParticle) {\r\n                this.SolveViscous();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_repulsiveParticle) {\r\n                this.SolveRepulsive(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_powderParticle) {\r\n                this.SolvePowder(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_tensileParticle) {\r\n                this.SolveTensile(subStep);\r\n            }\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                this.SolveSolid(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_colorMixingParticle) {\r\n                this.SolveColorMixing();\r\n            }\r\n            this.SolveGravity(subStep);\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_staticPressureParticle) {\r\n                this.SolveStaticPressure(subStep);\r\n            }\r\n            this.SolvePressure(subStep);\r\n            this.SolveDamping(subStep);\r\n            if (this.m_allParticleFlags & b2ParticleSystem.k_extraDampingFlags) {\r\n                this.SolveExtraDamping();\r\n            }\r\n            // SolveElastic and SolveSpring refer the current velocities for\r\n            // numerical stability, they should be called as late as possible.\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_elasticParticle) {\r\n                this.SolveElastic(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_springParticle) {\r\n                this.SolveSpring(subStep);\r\n            }\r\n            this.LimitVelocity(subStep);\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                this.SolveRigidDamping();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_barrierParticle) {\r\n                this.SolveBarrier(subStep);\r\n            }\r\n            // SolveCollision, SolveRigid and SolveWall should be called after\r\n            // other force functions because they may require particles to have\r\n            // specific velocities.\r\n            this.SolveCollision(subStep);\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                this.SolveRigid(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_wallParticle) {\r\n                this.SolveWall();\r\n            }\r\n            // The particle positions can be updated only at the end of substep.\r\n            if (!this.m_positionBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (!this.m_velocityBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                ///m_positionBuffer.data[i] += subStep.dt * m_velocityBuffer.data[i];\r\n                this.m_positionBuffer.data[i].SelfMulAdd(subStep.dt, this.m_velocityBuffer.data[i]);\r\n            }\r\n        }\r\n    }\r\n    SolveCollision(step) {\r\n        const s_aabb = b2ParticleSystem.SolveCollision_s_aabb;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // This function detects particles which are crossing boundary of bodies\r\n        // and modifies velocities of them so that they will move just in front of\r\n        // boundary. This function function also applies the reaction force to\r\n        // bodies as precisely as the numerical stability is kept.\r\n        const aabb = s_aabb;\r\n        aabb.lowerBound.x = +b2_maxFloat;\r\n        aabb.lowerBound.y = +b2_maxFloat;\r\n        aabb.upperBound.x = -b2_maxFloat;\r\n        aabb.upperBound.y = -b2_maxFloat;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            const v = vel_data[i];\r\n            const p1 = pos_data[i];\r\n            ///let p2 = p1 + step.dt * v;\r\n            const p2_x = p1.x + step.dt * v.x;\r\n            const p2_y = p1.y + step.dt * v.y;\r\n            ///aabb.lowerBound = b2Min(aabb.lowerBound, b2Min(p1, p2));\r\n            aabb.lowerBound.x = b2Min(aabb.lowerBound.x, b2Min(p1.x, p2_x));\r\n            aabb.lowerBound.y = b2Min(aabb.lowerBound.y, b2Min(p1.y, p2_y));\r\n            ///aabb.upperBound = b2Max(aabb.upperBound, b2Max(p1, p2));\r\n            aabb.upperBound.x = b2Max(aabb.upperBound.x, b2Max(p1.x, p2_x));\r\n            aabb.upperBound.y = b2Max(aabb.upperBound.y, b2Max(p1.y, p2_y));\r\n        }\r\n        const callback = new b2ParticleSystem.SolveCollisionCallback(this, step);\r\n        this.m_world.QueryAABB(callback, aabb);\r\n    }\r\n    LimitVelocity(step) {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const criticalVelocitySquared = this.GetCriticalVelocitySquared(step);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            const v = vel_data[i];\r\n            const v2 = b2Vec2.DotVV(v, v);\r\n            if (v2 > criticalVelocitySquared) {\r\n                ///v *= b2Sqrt(criticalVelocitySquared / v2);\r\n                v.SelfMul(b2Sqrt(criticalVelocitySquared / v2));\r\n            }\r\n        }\r\n    }\r\n    SolveGravity(step) {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const s_gravity = b2ParticleSystem.SolveGravity_s_gravity;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        ///b2Vec2 gravity = step.dt * m_def.gravityScale * m_world.GetGravity();\r\n        const gravity = b2Vec2.MulSV(step.dt * this.m_def.gravityScale, this.m_world.GetGravity(), s_gravity);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            vel_data[i].SelfAdd(gravity);\r\n        }\r\n    }\r\n    SolveBarrier(step) {\r\n        const s_aabb = b2ParticleSystem.SolveBarrier_s_aabb;\r\n        const s_va = b2ParticleSystem.SolveBarrier_s_va;\r\n        const s_vb = b2ParticleSystem.SolveBarrier_s_vb;\r\n        const s_pba = b2ParticleSystem.SolveBarrier_s_pba;\r\n        const s_vba = b2ParticleSystem.SolveBarrier_s_vba;\r\n        const s_vc = b2ParticleSystem.SolveBarrier_s_vc;\r\n        const s_pca = b2ParticleSystem.SolveBarrier_s_pca;\r\n        const s_vca = b2ParticleSystem.SolveBarrier_s_vca;\r\n        const s_qba = b2ParticleSystem.SolveBarrier_s_qba;\r\n        const s_qca = b2ParticleSystem.SolveBarrier_s_qca;\r\n        const s_dv = b2ParticleSystem.SolveBarrier_s_dv;\r\n        const s_f = b2ParticleSystem.SolveBarrier_s_f;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // If a particle is passing between paired barrier particles,\r\n        // its velocity will be decelerated to avoid passing.\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            const flags = this.m_flagsBuffer.data[i];\r\n            ///if ((flags & b2ParticleSystem.k_barrierWallFlags) === b2ParticleSystem.k_barrierWallFlags)\r\n            if ((flags & b2ParticleSystem.k_barrierWallFlags) !== 0) {\r\n                vel_data[i].SetZero();\r\n            }\r\n        }\r\n        const tmax = b2_barrierCollisionTime * step.dt;\r\n        const mass = this.GetParticleMass();\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            const pair = this.m_pairBuffer.data[k];\r\n            if (pair.flags & b2ParticleFlag.b2_barrierParticle) {\r\n                const a = pair.indexA;\r\n                const b = pair.indexB;\r\n                const pa = pos_data[a];\r\n                const pb = pos_data[b];\r\n                /// b2AABB aabb;\r\n                const aabb = s_aabb;\r\n                ///aabb.lowerBound = b2Min(pa, pb);\r\n                b2Vec2.MinV(pa, pb, aabb.lowerBound);\r\n                ///aabb.upperBound = b2Max(pa, pb);\r\n                b2Vec2.MaxV(pa, pb, aabb.upperBound);\r\n                const aGroup = this.m_groupBuffer[a];\r\n                const bGroup = this.m_groupBuffer[b];\r\n                ///b2Vec2 va = GetLinearVelocity(aGroup, a, pa);\r\n                const va = this.GetLinearVelocity(aGroup, a, pa, s_va);\r\n                ///b2Vec2 vb = GetLinearVelocity(bGroup, b, pb);\r\n                const vb = this.GetLinearVelocity(bGroup, b, pb, s_vb);\r\n                ///b2Vec2 pba = pb - pa;\r\n                const pba = b2Vec2.SubVV(pb, pa, s_pba);\r\n                ///b2Vec2 vba = vb - va;\r\n                const vba = b2Vec2.SubVV(vb, va, s_vba);\r\n                ///InsideBoundsEnumerator enumerator = GetInsideBoundsEnumerator(aabb);\r\n                const enumerator = this.GetInsideBoundsEnumerator(aabb);\r\n                let c;\r\n                while ((c = enumerator.GetNext()) >= 0) {\r\n                    const pc = pos_data[c];\r\n                    const cGroup = this.m_groupBuffer[c];\r\n                    if (aGroup !== cGroup && bGroup !== cGroup) {\r\n                        ///b2Vec2 vc = GetLinearVelocity(cGroup, c, pc);\r\n                        const vc = this.GetLinearVelocity(cGroup, c, pc, s_vc);\r\n                        // Solve the equation below:\r\n                        //   (1-s)*(pa+t*va)+s*(pb+t*vb) = pc+t*vc\r\n                        // which expresses that the particle c will pass a line\r\n                        // connecting the particles a and b at the time of t.\r\n                        // if s is between 0 and 1, c will pass between a and b.\r\n                        ///b2Vec2 pca = pc - pa;\r\n                        const pca = b2Vec2.SubVV(pc, pa, s_pca);\r\n                        ///b2Vec2 vca = vc - va;\r\n                        const vca = b2Vec2.SubVV(vc, va, s_vca);\r\n                        const e2 = b2Vec2.CrossVV(vba, vca);\r\n                        const e1 = b2Vec2.CrossVV(pba, vca) - b2Vec2.CrossVV(pca, vba);\r\n                        const e0 = b2Vec2.CrossVV(pba, pca);\r\n                        let s, t;\r\n                        ///b2Vec2 qba, qca;\r\n                        const qba = s_qba, qca = s_qca;\r\n                        if (e2 === 0) {\r\n                            if (e1 === 0) {\r\n                                continue;\r\n                            }\r\n                            t = -e0 / e1;\r\n                            if (!(t >= 0 && t < tmax)) {\r\n                                continue;\r\n                            }\r\n                            ///qba = pba + t * vba;\r\n                            b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                            ///qca = pca + t * vca;\r\n                            b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                            s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                            if (!(s >= 0 && s <= 1)) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        else {\r\n                            const det = e1 * e1 - 4 * e0 * e2;\r\n                            if (det < 0) {\r\n                                continue;\r\n                            }\r\n                            const sqrtDet = b2Sqrt(det);\r\n                            let t1 = (-e1 - sqrtDet) / (2 * e2);\r\n                            let t2 = (-e1 + sqrtDet) / (2 * e2);\r\n                            ///if (t1 > t2) b2Swap(t1, t2);\r\n                            if (t1 > t2) {\r\n                                const tmp = t1;\r\n                                t1 = t2;\r\n                                t2 = tmp;\r\n                            }\r\n                            t = t1;\r\n                            ///qba = pba + t * vba;\r\n                            b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                            ///qca = pca + t * vca;\r\n                            b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                            ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\r\n                            s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                            if (!(t >= 0 && t < tmax && s >= 0 && s <= 1)) {\r\n                                t = t2;\r\n                                if (!(t >= 0 && t < tmax)) {\r\n                                    continue;\r\n                                }\r\n                                ///qba = pba + t * vba;\r\n                                b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                                ///qca = pca + t * vca;\r\n                                b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                                ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\r\n                                s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                                if (!(s >= 0 && s <= 1)) {\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        }\r\n                        // Apply a force to particle c so that it will have the\r\n                        // interpolated velocity at the collision point on line ab.\r\n                        ///b2Vec2 dv = va + s * vba - vc;\r\n                        const dv = s_dv;\r\n                        dv.x = va.x + s * vba.x - vc.x;\r\n                        dv.y = va.y + s * vba.y - vc.y;\r\n                        ///b2Vec2 f = GetParticleMass() * dv;\r\n                        const f = b2Vec2.MulSV(mass, dv, s_f);\r\n                        if (cGroup && this.IsRigidGroup(cGroup)) {\r\n                            // If c belongs to a rigid group, the force will be\r\n                            // distributed in the group.\r\n                            const mass = cGroup.GetMass();\r\n                            const inertia = cGroup.GetInertia();\r\n                            if (mass > 0) {\r\n                                ///cGroup.m_linearVelocity += 1 / mass * f;\r\n                                cGroup.m_linearVelocity.SelfMulAdd(1 / mass, f);\r\n                            }\r\n                            if (inertia > 0) {\r\n                                ///cGroup.m_angularVelocity += b2Cross(pc - cGroup.GetCenter(), f) / inertia;\r\n                                cGroup.m_angularVelocity += b2Vec2.CrossVV(b2Vec2.SubVV(pc, cGroup.GetCenter(), b2Vec2.s_t0), f) / inertia;\r\n                            }\r\n                        }\r\n                        else {\r\n                            ///m_velocityBuffer.data[c] += dv;\r\n                            vel_data[c].SelfAdd(dv);\r\n                        }\r\n                        // Apply a reversed force to particle c after particle\r\n                        // movement so that momentum will be preserved.\r\n                        ///ParticleApplyForce(c, -step.inv_dt * f);\r\n                        this.ParticleApplyForce(c, f.SelfMul(-step.inv_dt));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveStaticPressure(step) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        this.m_staticPressureBuffer = this.RequestBuffer(this.m_staticPressureBuffer);\r\n        const criticalPressure = this.GetCriticalPressure(step);\r\n        const pressurePerWeight = this.m_def.staticPressureStrength * criticalPressure;\r\n        const maxPressure = b2_maxParticlePressure * criticalPressure;\r\n        const relaxation = this.m_def.staticPressureRelaxation;\r\n        /// Compute pressure satisfying the modified Poisson equation:\r\n        ///   Sum_for_j((p_i - p_j) * w_ij) + relaxation * p_i =\r\n        ///   pressurePerWeight * (w_i - b2_minParticleWeight)\r\n        /// by iterating the calculation:\r\n        ///   p_i = (Sum_for_j(p_j * w_ij) + pressurePerWeight *\r\n        ///         (w_i - b2_minParticleWeight)) / (w_i + relaxation)\r\n        /// where\r\n        ///   p_i and p_j are static pressure of particle i and j\r\n        ///   w_ij is contact weight between particle i and j\r\n        ///   w_i is sum of contact weight of particle i\r\n        for (let t = 0; t < this.m_def.staticPressureIterations; t++) {\r\n            ///memset(m_accumulationBuffer, 0, sizeof(*m_accumulationBuffer) * m_count);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                this.m_accumulationBuffer[i] = 0;\r\n            }\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                const contact = this.m_contactBuffer.data[k];\r\n                if (contact.flags & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    const a = contact.indexA;\r\n                    const b = contact.indexB;\r\n                    const w = contact.weight;\r\n                    this.m_accumulationBuffer[a] += w * this.m_staticPressureBuffer[b]; // a <- b\r\n                    this.m_accumulationBuffer[b] += w * this.m_staticPressureBuffer[a]; // b <- a\r\n                }\r\n            }\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                const w = this.m_weightBuffer[i];\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    const wh = this.m_accumulationBuffer[i];\r\n                    const h = (wh + pressurePerWeight * (w - b2_minParticleWeight)) /\r\n                        (w + relaxation);\r\n                    this.m_staticPressureBuffer[i] = b2Clamp(h, 0.0, maxPressure);\r\n                }\r\n                else {\r\n                    this.m_staticPressureBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ComputeWeight() {\r\n        // calculates the sum of contact-weights for each particle\r\n        // that means dimensionless density\r\n        ///memset(m_weightBuffer, 0, sizeof(*m_weightBuffer) * m_count);\r\n        for (let k = 0; k < this.m_count; k++) {\r\n            this.m_weightBuffer[k] = 0;\r\n        }\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            const w = contact.weight;\r\n            this.m_weightBuffer[a] += w;\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const w = contact.weight;\r\n            this.m_weightBuffer[a] += w;\r\n            this.m_weightBuffer[b] += w;\r\n        }\r\n    }\r\n    SolvePressure(step) {\r\n        const s_f = b2ParticleSystem.SolvePressure_s_f;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // calculates pressure as a linear function of density\r\n        const criticalPressure = this.GetCriticalPressure(step);\r\n        const pressurePerWeight = this.m_def.pressureStrength * criticalPressure;\r\n        const maxPressure = b2_maxParticlePressure * criticalPressure;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            const w = this.m_weightBuffer[i];\r\n            const h = pressurePerWeight * b2Max(0.0, w - b2_minParticleWeight);\r\n            this.m_accumulationBuffer[i] = b2Min(h, maxPressure);\r\n        }\r\n        // ignores particles which have their own repulsive force\r\n        if (this.m_allParticleFlags & b2ParticleSystem.k_noPressureFlags) {\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleSystem.k_noPressureFlags) {\r\n                    this.m_accumulationBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        // static pressure\r\n        if (this.m_allParticleFlags & b2ParticleFlag.b2_staticPressureParticle) {\r\n            // DEBUG: b2Assert(this.m_staticPressureBuffer !== null);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    this.m_accumulationBuffer[i] += this.m_staticPressureBuffer[i];\r\n                }\r\n            }\r\n        }\r\n        // applies pressure between each particles in contact\r\n        const velocityPerPressure = step.dt / (this.m_def.density * this.m_particleDiameter);\r\n        const inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            const b = contact.body;\r\n            const w = contact.weight;\r\n            const m = contact.mass;\r\n            const n = contact.normal;\r\n            const p = pos_data[a];\r\n            const h = this.m_accumulationBuffer[a] + pressurePerWeight * w;\r\n            ///b2Vec2 f = velocityPerPressure * w * m * h * n;\r\n            const f = b2Vec2.MulSV(velocityPerPressure * w * m * h, n, s_f);\r\n            ///m_velocityBuffer.data[a] -= GetParticleInvMass() * f;\r\n            vel_data[a].SelfMulSub(inv_mass, f);\r\n            b.ApplyLinearImpulse(f, p, true);\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const w = contact.weight;\r\n            const n = contact.normal;\r\n            const h = this.m_accumulationBuffer[a] + this.m_accumulationBuffer[b];\r\n            ///b2Vec2 f = velocityPerPressure * w * h * n;\r\n            const f = b2Vec2.MulSV(velocityPerPressure * w * h, n, s_f);\r\n            ///m_velocityBuffer.data[a] -= f;\r\n            vel_data[a].SelfSub(f);\r\n            ///m_velocityBuffer.data[b] += f;\r\n            vel_data[b].SelfAdd(f);\r\n        }\r\n    }\r\n    SolveDamping(step) {\r\n        const s_v = b2ParticleSystem.SolveDamping_s_v;\r\n        const s_f = b2ParticleSystem.SolveDamping_s_f;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // reduces normal velocity of each contact\r\n        const linearDamping = this.m_def.dampingStrength;\r\n        const quadraticDamping = 1 / this.GetCriticalVelocity(step);\r\n        const inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            const b = contact.body;\r\n            const w = contact.weight;\r\n            const m = contact.mass;\r\n            const n = contact.normal;\r\n            const p = pos_data[a];\r\n            ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n            const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n            const vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                const damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\r\n                ///b2Vec2 f = damping * m * vn * n;\r\n                const f = b2Vec2.MulSV(damping * m * vn, n, s_f);\r\n                ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                vel_data[a].SelfMulAdd(inv_mass, f);\r\n                ///b.ApplyLinearImpulse(-f, p, true);\r\n                b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const w = contact.weight;\r\n            const n = contact.normal;\r\n            ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n            const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n            const vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                ///float32 damping = b2Max(linearDamping * w, b2Min(- quadraticDamping * vn, 0.5f));\r\n                const damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\r\n                ///b2Vec2 f = damping * vn * n;\r\n                const f = b2Vec2.MulSV(damping * vn, n, s_f);\r\n                ///this.m_velocityBuffer.data[a] += f;\r\n                vel_data[a].SelfAdd(f);\r\n                ///this.m_velocityBuffer.data[b] -= f;\r\n                vel_data[b].SelfSub(f);\r\n            }\r\n        }\r\n    }\r\n    SolveRigidDamping() {\r\n        const s_t0 = b2ParticleSystem.SolveRigidDamping_s_t0;\r\n        const s_t1 = b2ParticleSystem.SolveRigidDamping_s_t1;\r\n        const s_p = b2ParticleSystem.SolveRigidDamping_s_p;\r\n        const s_v = b2ParticleSystem.SolveRigidDamping_s_v;\r\n        const invMassA = [0.0], invInertiaA = [0.0], tangentDistanceA = [0.0]; // TODO: static\r\n        const invMassB = [0.0], invInertiaB = [0.0], tangentDistanceB = [0.0]; // TODO: static\r\n        // Apply impulse to rigid particle groups colliding with other objects\r\n        // to reduce relative velocity at the colliding point.\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const damping = this.m_def.dampingStrength;\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            const aGroup = this.m_groupBuffer[a];\r\n            if (aGroup && this.IsRigidGroup(aGroup)) {\r\n                const b = contact.body;\r\n                const n = contact.normal;\r\n                const w = contact.weight;\r\n                const p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - aGroup.GetLinearVelocityFromWorldPoint(p);\r\n                const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, s_t0), aGroup.GetLinearVelocityFromWorldPoint(p, s_t1), s_v);\r\n                const vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    // The group's average velocity at particle position 'p' is pushing\r\n                    // the particle into the body.\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, true, aGroup, a, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, p, n);\r\n                    // Calculate b.m_I from public functions of b2Body.\r\n                    ///this.InitDampingParameter(&invMassB, &invInertiaB, &tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\r\n                    this.InitDampingParameter(invMassB, invInertiaB, tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\r\n                    ///float32 f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\r\n                    const f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\r\n                    ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, f, n);\r\n                    this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], true, aGroup, a, f, n);\r\n                    ///b.ApplyLinearImpulse(-f * n, p, true);\r\n                    b.ApplyLinearImpulse(b2Vec2.MulSV(-f, n, b2Vec2.s_t0), p, true);\r\n                }\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const n = contact.normal;\r\n            const w = contact.weight;\r\n            const aGroup = this.m_groupBuffer[a];\r\n            const bGroup = this.m_groupBuffer[b];\r\n            const aRigid = this.IsRigidGroup(aGroup);\r\n            const bRigid = this.IsRigidGroup(bGroup);\r\n            if (aGroup !== bGroup && (aRigid || bRigid)) {\r\n                ///b2Vec2 p = 0.5f * (this.m_positionBuffer.data[a] + this.m_positionBuffer.data[b]);\r\n                const p = b2Vec2.MidVV(pos_data[a], pos_data[b], s_p);\r\n                ///b2Vec2 v = GetLinearVelocity(bGroup, b, p) - GetLinearVelocity(aGroup, a, p);\r\n                const v = b2Vec2.SubVV(this.GetLinearVelocity(bGroup, b, p, s_t0), this.GetLinearVelocity(aGroup, a, p, s_t1), s_v);\r\n                const vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, aRigid, aGroup, a, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, p, n);\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassB, &invInertiaB, &tangentDistanceB, bRigid, bGroup, b, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, p, n);\r\n                    ///float32 f = damping * w * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\r\n                    const f = damping * w * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\r\n                    ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, f, n);\r\n                    this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], aRigid, aGroup, a, f, n);\r\n                    ///this.ApplyDamping(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, -f, n);\r\n                    this.ApplyDamping(invMassB[0], invInertiaB[0], tangentDistanceB[0], bRigid, bGroup, b, -f, n);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveExtraDamping() {\r\n        const s_v = b2ParticleSystem.SolveExtraDamping_s_v;\r\n        const s_f = b2ParticleSystem.SolveExtraDamping_s_f;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // Applies additional damping force between bodies and particles which can\r\n        // produce strong repulsive force. Applying damping force multiple times\r\n        // is effective in suppressing vibration.\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleSystem.k_extraDampingFlags) {\r\n                const b = contact.body;\r\n                const m = contact.mass;\r\n                const n = contact.normal;\r\n                const p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n                const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n                ///float32 vn = b2Dot(v, n);\r\n                const vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    ///b2Vec2 f = 0.5f * m * vn * n;\r\n                    const f = b2Vec2.MulSV(0.5 * m * vn, n, s_f);\r\n                    ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                    vel_data[a].SelfMulAdd(inv_mass, f);\r\n                    ///b.ApplyLinearImpulse(-f, p, true);\r\n                    b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveWall() {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_wallParticle) {\r\n                vel_data[i].SetZero();\r\n            }\r\n        }\r\n    }\r\n    SolveRigid(step) {\r\n        const s_position = b2ParticleSystem.SolveRigid_s_position;\r\n        const s_rotation = b2ParticleSystem.SolveRigid_s_rotation;\r\n        const s_transform = b2ParticleSystem.SolveRigid_s_transform;\r\n        const s_velocityTransform = b2ParticleSystem.SolveRigid_s_velocityTransform;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                group.UpdateStatistics();\r\n                ///b2Rot rotation(step.dt * group.m_angularVelocity);\r\n                const rotation = s_rotation;\r\n                rotation.SetAngle(step.dt * group.m_angularVelocity);\r\n                ///b2Transform transform(group.m_center + step.dt * group.m_linearVelocity - b2Mul(rotation, group.m_center), rotation);\r\n                const position = b2Vec2.AddVV(group.m_center, b2Vec2.SubVV(b2Vec2.MulSV(step.dt, group.m_linearVelocity, b2Vec2.s_t0), b2Rot.MulRV(rotation, group.m_center, b2Vec2.s_t1), b2Vec2.s_t0), s_position);\r\n                const transform = s_transform;\r\n                transform.SetPositionRotation(position, rotation);\r\n                ///group.m_transform = b2Mul(transform, group.m_transform);\r\n                b2Transform.MulXX(transform, group.m_transform, group.m_transform);\r\n                const velocityTransform = s_velocityTransform;\r\n                velocityTransform.p.x = step.inv_dt * transform.p.x;\r\n                velocityTransform.p.y = step.inv_dt * transform.p.y;\r\n                velocityTransform.q.s = step.inv_dt * transform.q.s;\r\n                velocityTransform.q.c = step.inv_dt * (transform.q.c - 1);\r\n                for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                    ///m_velocityBuffer.data[i] = b2Mul(velocityTransform, m_positionBuffer.data[i]);\r\n                    b2Transform.MulXV(velocityTransform, pos_data[i], vel_data[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveElastic(step) {\r\n        const s_pa = b2ParticleSystem.SolveElastic_s_pa;\r\n        const s_pb = b2ParticleSystem.SolveElastic_s_pb;\r\n        const s_pc = b2ParticleSystem.SolveElastic_s_pc;\r\n        const s_r = b2ParticleSystem.SolveElastic_s_r;\r\n        const s_t0 = b2ParticleSystem.SolveElastic_s_t0;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const elasticStrength = step.inv_dt * this.m_def.elasticStrength;\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            const triad = this.m_triadBuffer.data[k];\r\n            if (triad.flags & b2ParticleFlag.b2_elasticParticle) {\r\n                const a = triad.indexA;\r\n                const b = triad.indexB;\r\n                const c = triad.indexC;\r\n                const oa = triad.pa;\r\n                const ob = triad.pb;\r\n                const oc = triad.pc;\r\n                ///b2Vec2 pa = m_positionBuffer.data[a];\r\n                const pa = s_pa.Copy(pos_data[a]);\r\n                ///b2Vec2 pb = m_positionBuffer.data[b];\r\n                const pb = s_pb.Copy(pos_data[b]);\r\n                ///b2Vec2 pc = m_positionBuffer.data[c];\r\n                const pc = s_pc.Copy(pos_data[c]);\r\n                const va = vel_data[a];\r\n                const vb = vel_data[b];\r\n                const vc = vel_data[c];\r\n                ///pa += step.dt * va;\r\n                pa.SelfMulAdd(step.dt, va);\r\n                ///pb += step.dt * vb;\r\n                pb.SelfMulAdd(step.dt, vb);\r\n                ///pc += step.dt * vc;\r\n                pc.SelfMulAdd(step.dt, vc);\r\n                ///b2Vec2 midPoint = (float32) 1 / 3 * (pa + pb + pc);\r\n                const midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\r\n                const midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\r\n                ///pa -= midPoint;\r\n                pa.x -= midPoint_x;\r\n                pa.y -= midPoint_y;\r\n                ///pb -= midPoint;\r\n                pb.x -= midPoint_x;\r\n                pb.y -= midPoint_y;\r\n                ///pc -= midPoint;\r\n                pc.x -= midPoint_x;\r\n                pc.y -= midPoint_y;\r\n                ///b2Rot r;\r\n                const r = s_r;\r\n                r.s = b2Vec2.CrossVV(oa, pa) + b2Vec2.CrossVV(ob, pb) + b2Vec2.CrossVV(oc, pc);\r\n                r.c = b2Vec2.DotVV(oa, pa) + b2Vec2.DotVV(ob, pb) + b2Vec2.DotVV(oc, pc);\r\n                const r2 = r.s * r.s + r.c * r.c;\r\n                let invR = b2InvSqrt(r2);\r\n                if (!isFinite(invR)) {\r\n                    invR = 1.98177537e+019;\r\n                }\r\n                r.s *= invR;\r\n                r.c *= invR;\r\n                ///r.angle = Math.atan2(r.s, r.c); // TODO: optimize\r\n                const strength = elasticStrength * triad.strength;\r\n                ///va += strength * (b2Mul(r, oa) - pa);\r\n                b2Rot.MulRV(r, oa, s_t0);\r\n                b2Vec2.SubVV(s_t0, pa, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                va.SelfAdd(s_t0);\r\n                ///vb += strength * (b2Mul(r, ob) - pb);\r\n                b2Rot.MulRV(r, ob, s_t0);\r\n                b2Vec2.SubVV(s_t0, pb, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                vb.SelfAdd(s_t0);\r\n                ///vc += strength * (b2Mul(r, oc) - pc);\r\n                b2Rot.MulRV(r, oc, s_t0);\r\n                b2Vec2.SubVV(s_t0, pc, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                vc.SelfAdd(s_t0);\r\n            }\r\n        }\r\n    }\r\n    SolveSpring(step) {\r\n        const s_pa = b2ParticleSystem.SolveSpring_s_pa;\r\n        const s_pb = b2ParticleSystem.SolveSpring_s_pb;\r\n        const s_d = b2ParticleSystem.SolveSpring_s_d;\r\n        const s_f = b2ParticleSystem.SolveSpring_s_f;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const springStrength = step.inv_dt * this.m_def.springStrength;\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            const pair = this.m_pairBuffer.data[k];\r\n            if (pair.flags & b2ParticleFlag.b2_springParticle) {\r\n                ///int32 a = pair.indexA;\r\n                const a = pair.indexA;\r\n                ///int32 b = pair.indexB;\r\n                const b = pair.indexB;\r\n                ///b2Vec2 pa = m_positionBuffer.data[a];\r\n                const pa = s_pa.Copy(pos_data[a]);\r\n                ///b2Vec2 pb = m_positionBuffer.data[b];\r\n                const pb = s_pb.Copy(pos_data[b]);\r\n                ///b2Vec2& va = m_velocityBuffer.data[a];\r\n                const va = vel_data[a];\r\n                ///b2Vec2& vb = m_velocityBuffer.data[b];\r\n                const vb = vel_data[b];\r\n                ///pa += step.dt * va;\r\n                pa.SelfMulAdd(step.dt, va);\r\n                ///pb += step.dt * vb;\r\n                pb.SelfMulAdd(step.dt, vb);\r\n                ///b2Vec2 d = pb - pa;\r\n                const d = b2Vec2.SubVV(pb, pa, s_d);\r\n                ///float32 r0 = pair.distance;\r\n                const r0 = pair.distance;\r\n                ///float32 r1 = d.Length();\r\n                const r1 = d.Length();\r\n                ///float32 strength = springStrength * pair.strength;\r\n                const strength = springStrength * pair.strength;\r\n                ///b2Vec2 f = strength * (r0 - r1) / r1 * d;\r\n                const f = b2Vec2.MulSV(strength * (r0 - r1) / r1, d, s_f);\r\n                ///va -= f;\r\n                va.SelfSub(f);\r\n                ///vb += f;\r\n                vb.SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveTensile(step) {\r\n        const s_weightedNormal = b2ParticleSystem.SolveTensile_s_weightedNormal;\r\n        const s_s = b2ParticleSystem.SolveTensile_s_s;\r\n        const s_f = b2ParticleSystem.SolveTensile_s_f;\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // DEBUG: b2Assert(this.m_accumulation2Buffer !== null);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_accumulation2Buffer[i] = new b2Vec2();\r\n            this.m_accumulation2Buffer[i].SetZero();\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_tensileParticle) {\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                const w = contact.weight;\r\n                const n = contact.normal;\r\n                ///b2Vec2 weightedNormal = (1 - w) * w * n;\r\n                const weightedNormal = b2Vec2.MulSV((1 - w) * w, n, s_weightedNormal);\r\n                ///m_accumulation2Buffer[a] -= weightedNormal;\r\n                this.m_accumulation2Buffer[a].SelfSub(weightedNormal);\r\n                ///m_accumulation2Buffer[b] += weightedNormal;\r\n                this.m_accumulation2Buffer[b].SelfAdd(weightedNormal);\r\n            }\r\n        }\r\n        const criticalVelocity = this.GetCriticalVelocity(step);\r\n        const pressureStrength = this.m_def.surfaceTensionPressureStrength * criticalVelocity;\r\n        const normalStrength = this.m_def.surfaceTensionNormalStrength * criticalVelocity;\r\n        const maxVelocityVariation = b2_maxParticleForce * criticalVelocity;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_tensileParticle) {\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                const w = contact.weight;\r\n                const n = contact.normal;\r\n                const h = this.m_weightBuffer[a] + this.m_weightBuffer[b];\r\n                ///b2Vec2 s = m_accumulation2Buffer[b] - m_accumulation2Buffer[a];\r\n                const s = b2Vec2.SubVV(this.m_accumulation2Buffer[b], this.m_accumulation2Buffer[a], s_s);\r\n                const fn = b2Min(pressureStrength * (h - 2) + normalStrength * b2Vec2.DotVV(s, n), maxVelocityVariation) * w;\r\n                ///b2Vec2 f = fn * n;\r\n                const f = b2Vec2.MulSV(fn, n, s_f);\r\n                ///m_velocityBuffer.data[a] -= f;\r\n                vel_data[a].SelfSub(f);\r\n                ///m_velocityBuffer.data[b] += f;\r\n                vel_data[b].SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveViscous() {\r\n        const s_v = b2ParticleSystem.SolveViscous_s_v;\r\n        const s_f = b2ParticleSystem.SolveViscous_s_f;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const viscousStrength = this.m_def.viscousStrength;\r\n        const inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleFlag.b2_viscousParticle) {\r\n                const b = contact.body;\r\n                const w = contact.weight;\r\n                const m = contact.mass;\r\n                const p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n                const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n                ///b2Vec2 f = viscousStrength * m * w * v;\r\n                const f = b2Vec2.MulSV(viscousStrength * m * w, v, s_f);\r\n                ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                vel_data[a].SelfMulAdd(inv_mass, f);\r\n                ///b.ApplyLinearImpulse(-f, p, true);\r\n                b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_viscousParticle) {\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                const w = contact.weight;\r\n                ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n                const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n                ///b2Vec2 f = viscousStrength * w * v;\r\n                const f = b2Vec2.MulSV(viscousStrength * w, v, s_f);\r\n                ///m_velocityBuffer.data[a] += f;\r\n                vel_data[a].SelfAdd(f);\r\n                ///m_velocityBuffer.data[b] -= f;\r\n                vel_data[b].SelfSub(f);\r\n            }\r\n        }\r\n    }\r\n    SolveRepulsive(step) {\r\n        const s_f = b2ParticleSystem.SolveRepulsive_s_f;\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const repulsiveStrength = this.m_def.repulsiveStrength * this.GetCriticalVelocity(step);\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_repulsiveParticle) {\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\r\n                    const w = contact.weight;\r\n                    const n = contact.normal;\r\n                    ///b2Vec2 f = repulsiveStrength * w * n;\r\n                    const f = b2Vec2.MulSV(repulsiveStrength * w, n, s_f);\r\n                    ///m_velocityBuffer.data[a] -= f;\r\n                    vel_data[a].SelfSub(f);\r\n                    ///m_velocityBuffer.data[b] += f;\r\n                    vel_data[b].SelfAdd(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolvePowder(step) {\r\n        const s_f = b2ParticleSystem.SolvePowder_s_f;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const powderStrength = this.m_def.powderStrength * this.GetCriticalVelocity(step);\r\n        const minWeight = 1.0 - b2_particleStride;\r\n        const inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleFlag.b2_powderParticle) {\r\n                const w = contact.weight;\r\n                if (w > minWeight) {\r\n                    const b = contact.body;\r\n                    const m = contact.mass;\r\n                    const p = pos_data[a];\r\n                    const n = contact.normal;\r\n                    const f = b2Vec2.MulSV(powderStrength * m * (w - minWeight), n, s_f);\r\n                    vel_data[a].SelfMulSub(inv_mass, f);\r\n                    b.ApplyLinearImpulse(f, p, true);\r\n                }\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_powderParticle) {\r\n                const w = contact.weight;\r\n                if (w > minWeight) {\r\n                    const a = contact.indexA;\r\n                    const b = contact.indexB;\r\n                    const n = contact.normal;\r\n                    const f = b2Vec2.MulSV(powderStrength * (w - minWeight), n, s_f);\r\n                    vel_data[a].SelfSub(f);\r\n                    vel_data[b].SelfAdd(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveSolid(step) {\r\n        const s_f = b2ParticleSystem.SolveSolid_s_f;\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // applies extra repulsive force from solid particle groups\r\n        this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\r\n        const ejectionStrength = step.inv_dt * this.m_def.ejectionStrength;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\r\n                const w = contact.weight;\r\n                const n = contact.normal;\r\n                const h = this.m_depthBuffer[a] + this.m_depthBuffer[b];\r\n                const f = b2Vec2.MulSV(ejectionStrength * h * w, n, s_f);\r\n                vel_data[a].SelfSub(f);\r\n                vel_data[b].SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveForce(step) {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const velocityPerForce = step.dt * this.GetParticleInvMass();\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            ///m_velocityBuffer.data[i] += velocityPerForce * m_forceBuffer[i];\r\n            vel_data[i].SelfMulAdd(velocityPerForce, this.m_forceBuffer[i]);\r\n        }\r\n        this.m_hasForce = false;\r\n    }\r\n    SolveColorMixing() {\r\n        // mixes color between contacting particles\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_colorBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const colorMixing = 0.5 * this.m_def.colorMixingStrength;\r\n        if (colorMixing) {\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                const contact = this.m_contactBuffer.data[k];\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                if (this.m_flagsBuffer.data[a] & this.m_flagsBuffer.data[b] &\r\n                    b2ParticleFlag.b2_colorMixingParticle) {\r\n                    const colorA = this.m_colorBuffer.data[a];\r\n                    const colorB = this.m_colorBuffer.data[b];\r\n                    // Use the static method to ensure certain compilers inline\r\n                    // this correctly.\r\n                    b2Color.MixColors(colorA, colorB, colorMixing);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveZombie() {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        // removes particles with zombie flag\r\n        let newCount = 0;\r\n        ///int32* newIndices = (int32*) this.m_world.m_stackAllocator.Allocate(sizeof(int32) * this.m_count);\r\n        const newIndices = []; // TODO: static\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            newIndices[i] = b2_invalidParticleIndex;\r\n        }\r\n        // DEBUG: b2Assert(newIndices.length === this.m_count);\r\n        let allParticleFlags = 0;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            const flags = this.m_flagsBuffer.data[i];\r\n            if (flags & b2ParticleFlag.b2_zombieParticle) {\r\n                const destructionListener = this.m_world.m_destructionListener;\r\n                if ((flags & b2ParticleFlag.b2_destructionListenerParticle) && destructionListener) {\r\n                    destructionListener.SayGoodbyeParticle(this, i);\r\n                }\r\n                // Destroy particle handle.\r\n                if (this.m_handleIndexBuffer.data) {\r\n                    const handle = this.m_handleIndexBuffer.data[i];\r\n                    if (handle) {\r\n                        handle.SetIndex(b2_invalidParticleIndex);\r\n                        this.m_handleIndexBuffer.data[i] = null;\r\n                        ///m_handleAllocator.Free(handle);\r\n                    }\r\n                }\r\n                newIndices[i] = b2_invalidParticleIndex;\r\n            }\r\n            else {\r\n                newIndices[i] = newCount;\r\n                if (i !== newCount) {\r\n                    // Update handle to reference new particle index.\r\n                    if (this.m_handleIndexBuffer.data) {\r\n                        const handle = this.m_handleIndexBuffer.data[i];\r\n                        if (handle) {\r\n                            handle.SetIndex(newCount);\r\n                        }\r\n                        this.m_handleIndexBuffer.data[newCount] = handle;\r\n                    }\r\n                    this.m_flagsBuffer.data[newCount] = this.m_flagsBuffer.data[i];\r\n                    if (this.m_lastBodyContactStepBuffer.data) {\r\n                        this.m_lastBodyContactStepBuffer.data[newCount] = this.m_lastBodyContactStepBuffer.data[i];\r\n                    }\r\n                    if (this.m_bodyContactCountBuffer.data) {\r\n                        this.m_bodyContactCountBuffer.data[newCount] = this.m_bodyContactCountBuffer.data[i];\r\n                    }\r\n                    if (this.m_consecutiveContactStepsBuffer.data) {\r\n                        this.m_consecutiveContactStepsBuffer.data[newCount] = this.m_consecutiveContactStepsBuffer.data[i];\r\n                    }\r\n                    this.m_positionBuffer.data[newCount].Copy(this.m_positionBuffer.data[i]);\r\n                    this.m_velocityBuffer.data[newCount].Copy(this.m_velocityBuffer.data[i]);\r\n                    this.m_groupBuffer[newCount] = this.m_groupBuffer[i];\r\n                    if (this.m_hasForce) {\r\n                        this.m_forceBuffer[newCount].Copy(this.m_forceBuffer[i]);\r\n                    }\r\n                    if (this.m_staticPressureBuffer) {\r\n                        this.m_staticPressureBuffer[newCount] = this.m_staticPressureBuffer[i];\r\n                    }\r\n                    if (this.m_depthBuffer) {\r\n                        this.m_depthBuffer[newCount] = this.m_depthBuffer[i];\r\n                    }\r\n                    if (this.m_colorBuffer.data) {\r\n                        this.m_colorBuffer.data[newCount].Copy(this.m_colorBuffer.data[i]);\r\n                    }\r\n                    if (this.m_userDataBuffer.data) {\r\n                        this.m_userDataBuffer.data[newCount] = this.m_userDataBuffer.data[i];\r\n                    }\r\n                    if (this.m_expirationTimeBuffer.data) {\r\n                        this.m_expirationTimeBuffer.data[newCount] = this.m_expirationTimeBuffer.data[i];\r\n                    }\r\n                }\r\n                newCount++;\r\n                allParticleFlags |= flags;\r\n            }\r\n        }\r\n        // predicate functions\r\n        const Test = {\r\n            ///static bool IsProxyInvalid(const Proxy& proxy)\r\n            IsProxyInvalid: (proxy) => {\r\n                return proxy.index < 0;\r\n            },\r\n            ///static bool IsContactInvalid(const b2ParticleContact& contact)\r\n            IsContactInvalid: (contact) => {\r\n                return contact.indexA < 0 || contact.indexB < 0;\r\n            },\r\n            ///static bool IsBodyContactInvalid(const b2ParticleBodyContact& contact)\r\n            IsBodyContactInvalid: (contact) => {\r\n                return contact.index < 0;\r\n            },\r\n            ///static bool IsPairInvalid(const b2ParticlePair& pair)\r\n            IsPairInvalid: (pair) => {\r\n                return pair.indexA < 0 || pair.indexB < 0;\r\n            },\r\n            ///static bool IsTriadInvalid(const b2ParticleTriad& triad)\r\n            IsTriadInvalid: (triad) => {\r\n                return triad.indexA < 0 || triad.indexB < 0 || triad.indexC < 0;\r\n            },\r\n        };\r\n        // update proxies\r\n        for (let k = 0; k < this.m_proxyBuffer.count; k++) {\r\n            const proxy = this.m_proxyBuffer.data[k];\r\n            proxy.index = newIndices[proxy.index];\r\n        }\r\n        this.m_proxyBuffer.RemoveIf(Test.IsProxyInvalid);\r\n        // update contacts\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            contact.indexA = newIndices[contact.indexA];\r\n            contact.indexB = newIndices[contact.indexB];\r\n        }\r\n        this.m_contactBuffer.RemoveIf(Test.IsContactInvalid);\r\n        // update particle-body contacts\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            contact.index = newIndices[contact.index];\r\n        }\r\n        this.m_bodyContactBuffer.RemoveIf(Test.IsBodyContactInvalid);\r\n        // update pairs\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            const pair = this.m_pairBuffer.data[k];\r\n            pair.indexA = newIndices[pair.indexA];\r\n            pair.indexB = newIndices[pair.indexB];\r\n        }\r\n        this.m_pairBuffer.RemoveIf(Test.IsPairInvalid);\r\n        // update triads\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            const triad = this.m_triadBuffer.data[k];\r\n            triad.indexA = newIndices[triad.indexA];\r\n            triad.indexB = newIndices[triad.indexB];\r\n            triad.indexC = newIndices[triad.indexC];\r\n        }\r\n        this.m_triadBuffer.RemoveIf(Test.IsTriadInvalid);\r\n        // Update lifetime indices.\r\n        if (this.m_indexByExpirationTimeBuffer.data) {\r\n            let writeOffset = 0;\r\n            for (let readOffset = 0; readOffset < this.m_count; readOffset++) {\r\n                const newIndex = newIndices[this.m_indexByExpirationTimeBuffer.data[readOffset]];\r\n                if (newIndex !== b2_invalidParticleIndex) {\r\n                    this.m_indexByExpirationTimeBuffer.data[writeOffset++] = newIndex;\r\n                }\r\n            }\r\n        }\r\n        // update groups\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            let firstIndex = newCount;\r\n            let lastIndex = 0;\r\n            let modified = false;\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                const j = newIndices[i];\r\n                if (j >= 0) {\r\n                    firstIndex = b2Min(firstIndex, j);\r\n                    lastIndex = b2Max(lastIndex, j + 1);\r\n                }\r\n                else {\r\n                    modified = true;\r\n                }\r\n            }\r\n            if (firstIndex < lastIndex) {\r\n                group.m_firstIndex = firstIndex;\r\n                group.m_lastIndex = lastIndex;\r\n                if (modified) {\r\n                    if (group.m_groupFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                        this.SetGroupFlags(group, group.m_groupFlags | b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                group.m_firstIndex = 0;\r\n                group.m_lastIndex = 0;\r\n                if (!(group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupCanBeEmpty)) {\r\n                    this.SetGroupFlags(group, group.m_groupFlags | b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed);\r\n                }\r\n            }\r\n        }\r\n        // update particle count\r\n        this.m_count = newCount;\r\n        ///m_world.m_stackAllocator.Free(newIndices);\r\n        this.m_allParticleFlags = allParticleFlags;\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n        // destroy bodies with no particles\r\n        for (let group = this.m_groupList; group;) {\r\n            const next = group.GetNext();\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed) {\r\n                this.DestroyParticleGroup(group);\r\n            }\r\n            group = next;\r\n        }\r\n    }\r\n    /**\r\n     * Destroy all particles which have outlived their lifetimes set\r\n     * by SetParticleLifetime().\r\n     */\r\n    SolveLifetimes(step) {\r\n        if (!this.m_expirationTimeBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_indexByExpirationTimeBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        // Update the time elapsed.\r\n        this.m_timeElapsed = this.LifetimeToExpirationTime(step.dt);\r\n        // Get the floor (non-fractional component) of the elapsed time.\r\n        const quantizedTimeElapsed = this.GetQuantizedTimeElapsed();\r\n        const expirationTimes = this.m_expirationTimeBuffer.data;\r\n        const expirationTimeIndices = this.m_indexByExpirationTimeBuffer.data;\r\n        const particleCount = this.GetParticleCount();\r\n        // Sort the lifetime buffer if it's required.\r\n        if (this.m_expirationTimeBufferRequiresSorting) {\r\n            ///const ExpirationTimeComparator expirationTimeComparator(expirationTimes);\r\n            ///std::sort(expirationTimeIndices, expirationTimeIndices + particleCount, expirationTimeComparator);\r\n            /**\r\n             * Compare the lifetime of particleIndexA and particleIndexB\r\n             * returning true if the lifetime of A is greater than B for\r\n             * particles that will expire.  If either particle's lifetime is\r\n             * infinite (<= 0.0f) this function return true if the lifetime\r\n             * of A is lesser than B. When used with std::sort() this\r\n             * results in an array of particle indicies sorted in reverse\r\n             * order by particle lifetime.\r\n             *\r\n             * For example, the set of lifetimes\r\n             * (1.0, 0.7, 0.3, 0.0, -1.0, 2.0)\r\n             * would be sorted as\r\n             * (0.0, 1.0, -2.0, 1.0, 0.7, 0.3)\r\n             */\r\n            const ExpirationTimeComparator = (particleIndexA, particleIndexB) => {\r\n                const expirationTimeA = expirationTimes[particleIndexA];\r\n                const expirationTimeB = expirationTimes[particleIndexB];\r\n                const infiniteExpirationTimeA = expirationTimeA <= 0.0;\r\n                const infiniteExpirationTimeB = expirationTimeB <= 0.0;\r\n                return infiniteExpirationTimeA === infiniteExpirationTimeB ?\r\n                    expirationTimeA > expirationTimeB : infiniteExpirationTimeA;\r\n            };\r\n            std_sort(expirationTimeIndices, 0, particleCount, ExpirationTimeComparator);\r\n            this.m_expirationTimeBufferRequiresSorting = false;\r\n        }\r\n        // Destroy particles which have expired.\r\n        for (let i = particleCount - 1; i >= 0; --i) {\r\n            const particleIndex = expirationTimeIndices[i];\r\n            const expirationTime = expirationTimes[particleIndex];\r\n            // If no particles need to be destroyed, skip this.\r\n            if (quantizedTimeElapsed < expirationTime || expirationTime <= 0) {\r\n                break;\r\n            }\r\n            // Destroy this particle.\r\n            this.DestroyParticle(particleIndex);\r\n        }\r\n    }\r\n    RotateBuffer(start, mid, end) {\r\n        // move the particles assigned to the given group toward the end of array\r\n        if (start === mid || mid === end) {\r\n            return;\r\n        }\r\n        // DEBUG: b2Assert(mid >= start && mid <= end);\r\n        function newIndices(i) {\r\n            if (i < start) {\r\n                return i;\r\n            }\r\n            else if (i < mid) {\r\n                return i + end - mid;\r\n            }\r\n            else if (i < end) {\r\n                return i + start - mid;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        ///std::rotate(m_flagsBuffer.data + start, m_flagsBuffer.data + mid, m_flagsBuffer.data + end);\r\n        std_rotate(this.m_flagsBuffer.data, start, mid, end);\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            ///std::rotate(m_lastBodyContactStepBuffer.data + start, m_lastBodyContactStepBuffer.data + mid, m_lastBodyContactStepBuffer.data + end);\r\n            std_rotate(this.m_lastBodyContactStepBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            ///std::rotate(m_bodyContactCountBuffer.data + start, m_bodyContactCountBuffer.data + mid, m_bodyContactCountBuffer.data + end);\r\n            std_rotate(this.m_bodyContactCountBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            ///std::rotate(m_consecutiveContactStepsBuffer.data + start, m_consecutiveContactStepsBuffer.data + mid, m_consecutiveContactStepsBuffer.data + end);\r\n            std_rotate(this.m_consecutiveContactStepsBuffer.data, start, mid, end);\r\n        }\r\n        ///std::rotate(m_positionBuffer.data + start, m_positionBuffer.data + mid, m_positionBuffer.data + end);\r\n        std_rotate(this.m_positionBuffer.data, start, mid, end);\r\n        ///std::rotate(m_velocityBuffer.data + start, m_velocityBuffer.data + mid, m_velocityBuffer.data + end);\r\n        std_rotate(this.m_velocityBuffer.data, start, mid, end);\r\n        ///std::rotate(m_groupBuffer + start, m_groupBuffer + mid, m_groupBuffer + end);\r\n        std_rotate(this.m_groupBuffer, start, mid, end);\r\n        if (this.m_hasForce) {\r\n            ///std::rotate(m_forceBuffer + start, m_forceBuffer + mid, m_forceBuffer + end);\r\n            std_rotate(this.m_forceBuffer, start, mid, end);\r\n        }\r\n        if (this.m_staticPressureBuffer) {\r\n            ///std::rotate(m_staticPressureBuffer + start, m_staticPressureBuffer + mid, m_staticPressureBuffer + end);\r\n            std_rotate(this.m_staticPressureBuffer, start, mid, end);\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            ///std::rotate(m_depthBuffer + start, m_depthBuffer + mid, m_depthBuffer + end);\r\n            std_rotate(this.m_depthBuffer, start, mid, end);\r\n        }\r\n        if (this.m_colorBuffer.data) {\r\n            ///std::rotate(m_colorBuffer.data + start, m_colorBuffer.data + mid, m_colorBuffer.data + end);\r\n            std_rotate(this.m_colorBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_userDataBuffer.data) {\r\n            ///std::rotate(m_userDataBuffer.data + start, m_userDataBuffer.data + mid, m_userDataBuffer.data + end);\r\n            std_rotate(this.m_userDataBuffer.data, start, mid, end);\r\n        }\r\n        // Update handle indices.\r\n        if (this.m_handleIndexBuffer.data) {\r\n            ///std::rotate(m_handleIndexBuffer.data + start, m_handleIndexBuffer.data + mid, m_handleIndexBuffer.data + end);\r\n            std_rotate(this.m_handleIndexBuffer.data, start, mid, end);\r\n            for (let i = start; i < end; ++i) {\r\n                const handle = this.m_handleIndexBuffer.data[i];\r\n                if (handle) {\r\n                    handle.SetIndex(newIndices(handle.GetIndex()));\r\n                }\r\n            }\r\n        }\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            ///std::rotate(m_expirationTimeBuffer.data + start, m_expirationTimeBuffer.data + mid, m_expirationTimeBuffer.data + end);\r\n            std_rotate(this.m_expirationTimeBuffer.data, start, mid, end);\r\n            // Update expiration time buffer indices.\r\n            const particleCount = this.GetParticleCount();\r\n            if (!this.m_indexByExpirationTimeBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const indexByExpirationTime = this.m_indexByExpirationTimeBuffer.data;\r\n            for (let i = 0; i < particleCount; ++i) {\r\n                indexByExpirationTime[i] = newIndices(indexByExpirationTime[i]);\r\n            }\r\n        }\r\n        // update proxies\r\n        for (let k = 0; k < this.m_proxyBuffer.count; k++) {\r\n            const proxy = this.m_proxyBuffer.data[k];\r\n            proxy.index = newIndices(proxy.index);\r\n        }\r\n        // update contacts\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            contact.indexA = newIndices(contact.indexA);\r\n            contact.indexB = newIndices(contact.indexB);\r\n        }\r\n        // update particle-body contacts\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            contact.index = newIndices(contact.index);\r\n        }\r\n        // update pairs\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            const pair = this.m_pairBuffer.data[k];\r\n            pair.indexA = newIndices(pair.indexA);\r\n            pair.indexB = newIndices(pair.indexB);\r\n        }\r\n        // update triads\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            const triad = this.m_triadBuffer.data[k];\r\n            triad.indexA = newIndices(triad.indexA);\r\n            triad.indexB = newIndices(triad.indexB);\r\n            triad.indexC = newIndices(triad.indexC);\r\n        }\r\n        // update groups\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            group.m_firstIndex = newIndices(group.m_firstIndex);\r\n            group.m_lastIndex = newIndices(group.m_lastIndex - 1) + 1;\r\n        }\r\n    }\r\n    GetCriticalVelocity(step) {\r\n        return this.m_particleDiameter * step.inv_dt;\r\n    }\r\n    GetCriticalVelocitySquared(step) {\r\n        const velocity = this.GetCriticalVelocity(step);\r\n        return velocity * velocity;\r\n    }\r\n    GetCriticalPressure(step) {\r\n        return this.m_def.density * this.GetCriticalVelocitySquared(step);\r\n    }\r\n    GetParticleStride() {\r\n        return b2_particleStride * this.m_particleDiameter;\r\n    }\r\n    GetParticleMass() {\r\n        const stride = this.GetParticleStride();\r\n        return this.m_def.density * stride * stride;\r\n    }\r\n    GetParticleInvMass() {\r\n        ///return 1.777777 * this.m_inverseDensity * this.m_inverseDiameter * this.m_inverseDiameter;\r\n        // mass = density * stride^2, so we take the inverse of this.\r\n        const inverseStride = this.m_inverseDiameter * (1.0 / b2_particleStride);\r\n        return this.m_inverseDensity * inverseStride * inverseStride;\r\n    }\r\n    /**\r\n     * Get the world's contact filter if any particles with the\r\n     * b2_contactFilterParticle flag are present in the system.\r\n     */\r\n    GetFixtureContactFilter() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_fixtureContactFilterParticle) ?\r\n            this.m_world.m_contactManager.m_contactFilter : null;\r\n    }\r\n    /**\r\n     * Get the world's contact filter if any particles with the\r\n     * b2_particleContactFilterParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetParticleContactFilter() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_particleContactFilterParticle) ?\r\n            this.m_world.m_contactManager.m_contactFilter : null;\r\n    }\r\n    /**\r\n     * Get the world's contact listener if any particles with the\r\n     * b2_fixtureContactListenerParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetFixtureContactListener() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_fixtureContactListenerParticle) ?\r\n            this.m_world.m_contactManager.m_contactListener : null;\r\n    }\r\n    /**\r\n     * Get the world's contact listener if any particles with the\r\n     * b2_particleContactListenerParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetParticleContactListener() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_particleContactListenerParticle) ?\r\n            this.m_world.m_contactManager.m_contactListener : null;\r\n    }\r\n    SetUserOverridableBuffer(buffer, newData, newCapacity) {\r\n        // DEBUG: b2Assert(((newData !== null) && (newCapacity > 0)) || ((newData === null) && (newCapacity === 0)));\r\n        ///if (!buffer.userSuppliedCapacity)\r\n        ///{\r\n        ///this.m_world.m_blockAllocator.Free(buffer.data, sizeof(T) * m_internalAllocatedCapacity);\r\n        ///}\r\n        buffer.data = newData;\r\n        buffer.userSuppliedCapacity = newCapacity;\r\n    }\r\n    SetGroupFlags(group, newFlags) {\r\n        const oldFlags = group.m_groupFlags;\r\n        if ((oldFlags ^ newFlags) & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n            // If the b2_solidParticleGroup flag changed schedule depth update.\r\n            newFlags |= b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth;\r\n        }\r\n        if (oldFlags & ~newFlags) {\r\n            // If any flags might be removed\r\n            this.m_needsUpdateAllGroupFlags = true;\r\n        }\r\n        if (~this.m_allGroupFlags & newFlags) {\r\n            // If any flags were added\r\n            if (newFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\r\n            }\r\n            this.m_allGroupFlags |= newFlags;\r\n        }\r\n        group.m_groupFlags = newFlags;\r\n    }\r\n    static BodyContactCompare(lhs, rhs) {\r\n        if (lhs.index === rhs.index) {\r\n            // Subsort by weight, decreasing.\r\n            return lhs.weight > rhs.weight;\r\n        }\r\n        return lhs.index < rhs.index;\r\n    }\r\n    RemoveSpuriousBodyContacts() {\r\n        // At this point we have a list of contact candidates based on AABB\r\n        // overlap.The AABB query that  generated this returns all collidable\r\n        // fixtures overlapping particle bounding boxes.  This breaks down around\r\n        // vertices where two shapes intersect, such as a \"ground\" surface made\r\n        // of multiple b2PolygonShapes; it potentially applies a lot of spurious\r\n        // impulses from normals that should not actually contribute.  See the\r\n        // Ramp example in Testbed.\r\n        //\r\n        // To correct for this, we apply this algorithm:\r\n        //   * sort contacts by particle and subsort by weight (nearest to farthest)\r\n        //   * for each contact per particle:\r\n        //      - project a point at the contact distance along the inverse of the\r\n        //        contact normal\r\n        //      - if this intersects the fixture that generated the contact, apply\r\n        //         it, otherwise discard as impossible\r\n        //      - repeat for up to n nearest contacts, currently we get good results\r\n        //        from n=3.\r\n        ///std::sort(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleSystem::BodyContactCompare);\r\n        std_sort(this.m_bodyContactBuffer.data, 0, this.m_bodyContactBuffer.count, b2ParticleSystem.BodyContactCompare);\r\n        ///int32 discarded = 0;\r\n        ///std::remove_if(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleBodyContactRemovePredicate(this, &discarded));\r\n        ///\r\n        ///m_bodyContactBuffer.SetCount(m_bodyContactBuffer.GetCount() - discarded);\r\n        const s_n = b2ParticleSystem.RemoveSpuriousBodyContacts_s_n;\r\n        const s_pos = b2ParticleSystem.RemoveSpuriousBodyContacts_s_pos;\r\n        const s_normal = b2ParticleSystem.RemoveSpuriousBodyContacts_s_normal;\r\n        // Max number of contacts processed per particle, from nearest to farthest.\r\n        // This must be at least 2 for correctness with concave shapes; 3 was\r\n        // experimentally arrived at as looking reasonable.\r\n        const k_maxContactsPerPoint = 3;\r\n        const system = this;\r\n        // Index of last particle processed.\r\n        let lastIndex = -1;\r\n        // Number of contacts processed for the current particle.\r\n        let currentContacts = 0;\r\n        // Output the number of discarded contacts.\r\n        // let discarded = 0;\r\n        const b2ParticleBodyContactRemovePredicate = (contact) => {\r\n            // This implements the selection criteria described in\r\n            // RemoveSpuriousBodyContacts().\r\n            // This functor is iterating through a list of Body contacts per\r\n            // Particle, ordered from near to far.  For up to the maximum number of\r\n            // contacts we allow per point per step, we verify that the contact\r\n            // normal of the Body that genenerated the contact makes physical sense\r\n            // by projecting a point back along that normal and seeing if it\r\n            // intersects the fixture generating the contact.\r\n            if (contact.index !== lastIndex) {\r\n                currentContacts = 0;\r\n                lastIndex = contact.index;\r\n            }\r\n            if (currentContacts++ > k_maxContactsPerPoint) {\r\n                // ++discarded;\r\n                return true;\r\n            }\r\n            // Project along inverse normal (as returned in the contact) to get the\r\n            // point to check.\r\n            ///b2Vec2 n = contact.normal;\r\n            const n = s_n.Copy(contact.normal);\r\n            // weight is 1-(inv(diameter) * distance)\r\n            ///n *= system.m_particleDiameter * (1 - contact.weight);\r\n            n.SelfMul(system.m_particleDiameter * (1 - contact.weight));\r\n            ///b2Vec2 pos = system.m_positionBuffer.data[contact.index] + n;\r\n            if (!system.m_positionBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const pos = b2Vec2.AddVV(system.m_positionBuffer.data[contact.index], n, s_pos);\r\n            // pos is now a point projected back along the contact normal to the\r\n            // contact distance. If the surface makes sense for a contact, pos will\r\n            // now lie on or in the fixture generating\r\n            if (!contact.fixture.TestPoint(pos)) {\r\n                const childCount = contact.fixture.GetShape().GetChildCount();\r\n                for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n                    const normal = s_normal;\r\n                    const distance = contact.fixture.ComputeDistance(pos, normal, childIndex);\r\n                    if (distance < b2_linearSlop) {\r\n                        return false;\r\n                    }\r\n                }\r\n                // ++discarded;\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        this.m_bodyContactBuffer.count = std_remove_if(this.m_bodyContactBuffer.data, b2ParticleBodyContactRemovePredicate, this.m_bodyContactBuffer.count);\r\n    }\r\n    DetectStuckParticle(particle) {\r\n        // Detect stuck particles\r\n        //\r\n        // The basic algorithm is to allow the user to specify an optional\r\n        // threshold where we detect whenever a particle is contacting\r\n        // more than one fixture for more than threshold consecutive\r\n        // steps. This is considered to be \"stuck\", and these are put\r\n        // in a list the user can query per step, if enabled, to deal with\r\n        // such particles.\r\n        if (this.m_stuckThreshold <= 0) {\r\n            return;\r\n        }\r\n        if (!this.m_bodyContactCountBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_consecutiveContactStepsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_lastBodyContactStepBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        // Get the state variables for this particle.\r\n        ///int32 * const consecutiveCount = &m_consecutiveContactStepsBuffer.data[particle];\r\n        ///int32 * const lastStep = &m_lastBodyContactStepBuffer.data[particle];\r\n        ///int32 * const bodyCount = &m_bodyContactCountBuffer.data[particle];\r\n        // This is only called when there is a body contact for this particle.\r\n        ///++(*bodyCount);\r\n        ++this.m_bodyContactCountBuffer.data[particle];\r\n        // We want to only trigger detection once per step, the first time we\r\n        // contact more than one fixture in a step for a given particle.\r\n        ///if (*bodyCount === 2)\r\n        if (this.m_bodyContactCountBuffer.data[particle] === 2) {\r\n            ///++(*consecutiveCount);\r\n            ++this.m_consecutiveContactStepsBuffer.data[particle];\r\n            ///if (*consecutiveCount > m_stuckThreshold)\r\n            if (this.m_consecutiveContactStepsBuffer.data[particle] > this.m_stuckThreshold) {\r\n                ///int32& newStuckParticle = m_stuckParticleBuffer.Append();\r\n                ///newStuckParticle = particle;\r\n                this.m_stuckParticleBuffer.data[this.m_stuckParticleBuffer.Append()] = particle;\r\n            }\r\n        }\r\n        ///*lastStep = m_timestamp;\r\n        this.m_lastBodyContactStepBuffer.data[particle] = this.m_timestamp;\r\n    }\r\n    /**\r\n     * Determine whether a particle index is valid.\r\n     */\r\n    ValidateParticleIndex(index) {\r\n        return index >= 0 && index < this.GetParticleCount() &&\r\n            index !== b2_invalidParticleIndex;\r\n    }\r\n    /**\r\n     * Get the time elapsed in\r\n     * b2ParticleSystemDef::lifetimeGranularity.\r\n     */\r\n    GetQuantizedTimeElapsed() {\r\n        ///return (int32)(m_timeElapsed >> 32);\r\n        return Math.floor(this.m_timeElapsed / 0x100000000);\r\n    }\r\n    /**\r\n     * Convert a lifetime in seconds to an expiration time.\r\n     */\r\n    LifetimeToExpirationTime(lifetime) {\r\n        ///return m_timeElapsed + (int64)((lifetime / m_def.lifetimeGranularity) * (float32)(1LL << 32));\r\n        return this.m_timeElapsed + Math.floor(((lifetime / this.m_def.lifetimeGranularity) * 0x100000000));\r\n    }\r\n    ForceCanBeApplied(flags) {\r\n        return !(flags & b2ParticleFlag.b2_wallParticle);\r\n    }\r\n    PrepareForceBuffer() {\r\n        if (!this.m_hasForce) {\r\n            ///memset(m_forceBuffer, 0, sizeof(*m_forceBuffer) * m_count);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                this.m_forceBuffer[i].SetZero();\r\n            }\r\n            this.m_hasForce = true;\r\n        }\r\n    }\r\n    IsRigidGroup(group) {\r\n        return (group !== null) && ((group.m_groupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0);\r\n    }\r\n    GetLinearVelocity(group, particleIndex, point, out) {\r\n        if (group && this.IsRigidGroup(group)) {\r\n            return group.GetLinearVelocityFromWorldPoint(point, out);\r\n        }\r\n        else {\r\n            if (!this.m_velocityBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            ///return m_velocityBuffer.data[particleIndex];\r\n            return out.Copy(this.m_velocityBuffer.data[particleIndex]);\r\n        }\r\n    }\r\n    InitDampingParameter(invMass, invInertia, tangentDistance, mass, inertia, center, point, normal) {\r\n        ///*invMass = mass > 0 ? 1 / mass : 0;\r\n        invMass[0] = mass > 0 ? 1 / mass : 0;\r\n        ///*invInertia = inertia > 0 ? 1 / inertia : 0;\r\n        invInertia[0] = inertia > 0 ? 1 / inertia : 0;\r\n        ///*tangentDistance = b2Cross(point - center, normal);\r\n        tangentDistance[0] = b2Vec2.CrossVV(b2Vec2.SubVV(point, center, b2Vec2.s_t0), normal);\r\n    }\r\n    InitDampingParameterWithRigidGroupOrParticle(invMass, invInertia, tangentDistance, isRigidGroup, group, particleIndex, point, normal) {\r\n        if (group && isRigidGroup) {\r\n            this.InitDampingParameter(invMass, invInertia, tangentDistance, group.GetMass(), group.GetInertia(), group.GetCenter(), point, normal);\r\n        }\r\n        else {\r\n            if (!this.m_flagsBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const flags = this.m_flagsBuffer.data[particleIndex];\r\n            this.InitDampingParameter(invMass, invInertia, tangentDistance, flags & b2ParticleFlag.b2_wallParticle ? 0 : this.GetParticleMass(), 0, point, point, normal);\r\n        }\r\n    }\r\n    ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, normalVelocity) {\r\n        const invMass = invMassA + invInertiaA * tangentDistanceA * tangentDistanceA +\r\n            invMassB + invInertiaB * tangentDistanceB * tangentDistanceB;\r\n        return invMass > 0 ? normalVelocity / invMass : 0;\r\n    }\r\n    ApplyDamping(invMass, invInertia, tangentDistance, isRigidGroup, group, particleIndex, impulse, normal) {\r\n        if (group && isRigidGroup) {\r\n            ///group.m_linearVelocity += impulse * invMass * normal;\r\n            group.m_linearVelocity.SelfMulAdd(impulse * invMass, normal);\r\n            ///group.m_angularVelocity += impulse * tangentDistance * invInertia;\r\n            group.m_angularVelocity += impulse * tangentDistance * invInertia;\r\n        }\r\n        else {\r\n            if (!this.m_velocityBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            ///m_velocityBuffer.data[particleIndex] += impulse * invMass * normal;\r\n            this.m_velocityBuffer.data[particleIndex].SelfMulAdd(impulse * invMass, normal);\r\n        }\r\n    }\r\n}\r\nb2ParticleSystem.xTruncBits = 12;\r\nb2ParticleSystem.yTruncBits = 12;\r\nb2ParticleSystem.tagBits = 8 * 4; // 8u * sizeof(uint32);\r\nb2ParticleSystem.yOffset = 1 << (b2ParticleSystem.yTruncBits - 1);\r\nb2ParticleSystem.yShift = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits;\r\nb2ParticleSystem.xShift = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits - b2ParticleSystem.xTruncBits;\r\nb2ParticleSystem.xScale = 1 << b2ParticleSystem.xShift;\r\nb2ParticleSystem.xOffset = b2ParticleSystem.xScale * (1 << (b2ParticleSystem.xTruncBits - 1));\r\nb2ParticleSystem.yMask = ((1 << b2ParticleSystem.yTruncBits) - 1) << b2ParticleSystem.yShift;\r\nb2ParticleSystem.xMask = ~b2ParticleSystem.yMask;\r\nb2ParticleSystem.DestroyParticlesInShape_s_aabb = new b2AABB();\r\nb2ParticleSystem.CreateParticleGroup_s_transform = new b2Transform();\r\nb2ParticleSystem.ComputeCollisionEnergy_s_v = new b2Vec2();\r\nb2ParticleSystem.QueryShapeAABB_s_aabb = new b2AABB();\r\nb2ParticleSystem.QueryPointAABB_s_aabb = new b2AABB();\r\nb2ParticleSystem.RayCast_s_aabb = new b2AABB();\r\nb2ParticleSystem.RayCast_s_p = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_v = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_n = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_point = new b2Vec2();\r\n/**\r\n * All particle types that require creating pairs\r\n */\r\nb2ParticleSystem.k_pairFlags = b2ParticleFlag.b2_springParticle;\r\n/**\r\n * All particle types that require creating triads\r\n */\r\nb2ParticleSystem.k_triadFlags = b2ParticleFlag.b2_elasticParticle;\r\n/**\r\n * All particle types that do not produce dynamic pressure\r\n */\r\nb2ParticleSystem.k_noPressureFlags = b2ParticleFlag.b2_powderParticle | b2ParticleFlag.b2_tensileParticle;\r\n/**\r\n * All particle types that apply extra damping force with bodies\r\n */\r\nb2ParticleSystem.k_extraDampingFlags = b2ParticleFlag.b2_staticPressureParticle;\r\nb2ParticleSystem.k_barrierWallFlags = b2ParticleFlag.b2_barrierParticle | b2ParticleFlag.b2_wallParticle;\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge = new b2EdgeShape();\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d = new b2Vec2();\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p = new b2Vec2();\r\nb2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb = new b2AABB();\r\nb2ParticleSystem.CreateParticlesFillShapeForGroup_s_p = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dab = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dbc = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dca = new b2Vec2();\r\nb2ParticleSystem.AddContact_s_d = new b2Vec2();\r\nb2ParticleSystem.UpdateBodyContacts_s_aabb = new b2AABB();\r\nb2ParticleSystem.Solve_s_subStep = new b2TimeStep();\r\nb2ParticleSystem.SolveCollision_s_aabb = new b2AABB();\r\nb2ParticleSystem.SolveGravity_s_gravity = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_aabb = new b2AABB();\r\nb2ParticleSystem.SolveBarrier_s_va = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vb = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_pba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vc = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_pca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_qba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_qca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_dv = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_f = new b2Vec2();\r\nb2ParticleSystem.SolvePressure_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveDamping_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_t0 = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_t1 = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_p = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveExtraDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveExtraDamping_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRigid_s_position = new b2Vec2();\r\nb2ParticleSystem.SolveRigid_s_rotation = new b2Rot();\r\nb2ParticleSystem.SolveRigid_s_transform = new b2Transform();\r\nb2ParticleSystem.SolveRigid_s_velocityTransform = new b2Transform();\r\nb2ParticleSystem.SolveElastic_s_pa = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_pb = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_pc = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_r = new b2Rot();\r\nb2ParticleSystem.SolveElastic_s_t0 = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_pa = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_pb = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_d = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_weightedNormal = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_s = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveViscous_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveViscous_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRepulsive_s_f = new b2Vec2();\r\nb2ParticleSystem.SolvePowder_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveSolid_s_f = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_n = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_pos = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_normal = new b2Vec2();\r\n(function (b2ParticleSystem) {\r\n    class UserOverridableBuffer {\r\n        constructor() {\r\n            this.data = null;\r\n            this.userSuppliedCapacity = 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.UserOverridableBuffer = UserOverridableBuffer;\r\n    class Proxy {\r\n        constructor() {\r\n            this.index = b2_invalidParticleIndex;\r\n            this.tag = 0;\r\n        }\r\n        static CompareProxyProxy(a, b) {\r\n            return a.tag < b.tag;\r\n        }\r\n        static CompareTagProxy(a, b) {\r\n            return a < b.tag;\r\n        }\r\n        static CompareProxyTag(a, b) {\r\n            return a.tag < b;\r\n        }\r\n    }\r\n    b2ParticleSystem.Proxy = Proxy;\r\n    class InsideBoundsEnumerator {\r\n        /**\r\n         * InsideBoundsEnumerator enumerates all particles inside the\r\n         * given bounds.\r\n         *\r\n         * Construct an enumerator with bounds of tags and a range of\r\n         * proxies.\r\n         */\r\n        constructor(system, lower, upper, first, last) {\r\n            this.m_system = system;\r\n            this.m_xLower = (lower & b2ParticleSystem.xMask) >>> 0;\r\n            this.m_xUpper = (upper & b2ParticleSystem.xMask) >>> 0;\r\n            this.m_yLower = (lower & b2ParticleSystem.yMask) >>> 0;\r\n            this.m_yUpper = (upper & b2ParticleSystem.yMask) >>> 0;\r\n            this.m_first = first;\r\n            this.m_last = last;\r\n            // DEBUG: b2Assert(this.m_first <= this.m_last);\r\n        }\r\n        /**\r\n         * Get index of the next particle. Returns\r\n         * b2_invalidParticleIndex if there are no more particles.\r\n         */\r\n        GetNext() {\r\n            while (this.m_first < this.m_last) {\r\n                const xTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.xMask) >>> 0;\r\n                // #if B2_ASSERT_ENABLED\r\n                // DEBUG: const yTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.yMask) >>> 0;\r\n                // DEBUG: b2Assert(yTag >= this.m_yLower);\r\n                // DEBUG: b2Assert(yTag <= this.m_yUpper);\r\n                // #endif\r\n                if (xTag >= this.m_xLower && xTag <= this.m_xUpper) {\r\n                    return (this.m_system.m_proxyBuffer.data[this.m_first++]).index;\r\n                }\r\n                this.m_first++;\r\n            }\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.InsideBoundsEnumerator = InsideBoundsEnumerator;\r\n    class ParticleListNode {\r\n        constructor() {\r\n            /**\r\n             * The next node in the list.\r\n             */\r\n            this.next = null;\r\n            /**\r\n             * Number of entries in the list. Valid only for the node at the\r\n             * head of the list.\r\n             */\r\n            this.count = 0;\r\n            /**\r\n             * Particle index.\r\n             */\r\n            this.index = 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.ParticleListNode = ParticleListNode;\r\n    /**\r\n     * @constructor\r\n     */\r\n    class FixedSetAllocator {\r\n        Allocate(itemSize, count) {\r\n            // TODO\r\n            return count;\r\n        }\r\n        Clear() {\r\n            // TODO\r\n        }\r\n        GetCount() {\r\n            // TODO\r\n            return 0;\r\n        }\r\n        Invalidate(itemIndex) {\r\n            // TODO\r\n        }\r\n        GetValidBuffer() {\r\n            // TODO\r\n            return [];\r\n        }\r\n        GetBuffer() {\r\n            // TODO\r\n            return [];\r\n        }\r\n        SetCount(count) {\r\n            // TODO\r\n        }\r\n    }\r\n    b2ParticleSystem.FixedSetAllocator = FixedSetAllocator;\r\n    class FixtureParticle {\r\n        constructor(fixture, particle) {\r\n            this.second = b2_invalidParticleIndex;\r\n            this.first = fixture;\r\n            this.second = particle;\r\n        }\r\n    }\r\n    b2ParticleSystem.FixtureParticle = FixtureParticle;\r\n    class FixtureParticleSet extends b2ParticleSystem.FixedSetAllocator {\r\n        Initialize(bodyContactBuffer, flagsBuffer) {\r\n            // TODO\r\n        }\r\n        Find(pair) {\r\n            // TODO\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.FixtureParticleSet = FixtureParticleSet;\r\n    class ParticlePair {\r\n        constructor(particleA, particleB) {\r\n            this.first = b2_invalidParticleIndex;\r\n            this.second = b2_invalidParticleIndex;\r\n            this.first = particleA;\r\n            this.second = particleB;\r\n        }\r\n    }\r\n    b2ParticleSystem.ParticlePair = ParticlePair;\r\n    class b2ParticlePairSet extends b2ParticleSystem.FixedSetAllocator {\r\n        Initialize(contactBuffer, flagsBuffer) {\r\n            // TODO\r\n        }\r\n        Find(pair) {\r\n            // TODO\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.b2ParticlePairSet = b2ParticlePairSet;\r\n    class ConnectionFilter {\r\n        /**\r\n         * Is the particle necessary for connection?\r\n         * A pair or a triad should contain at least one 'necessary'\r\n         * particle.\r\n         */\r\n        IsNecessary(index) {\r\n            return true;\r\n        }\r\n        /**\r\n         * An additional condition for creating a pair.\r\n         */\r\n        ShouldCreatePair(a, b) {\r\n            return true;\r\n        }\r\n        /**\r\n         * An additional condition for creating a triad.\r\n         */\r\n        ShouldCreateTriad(a, b, c) {\r\n            return true;\r\n        }\r\n    }\r\n    b2ParticleSystem.ConnectionFilter = ConnectionFilter;\r\n    class DestroyParticlesInShapeCallback extends b2QueryCallback {\r\n        constructor(system, shape, xf, callDestructionListener) {\r\n            super();\r\n            this.m_callDestructionListener = false;\r\n            this.m_destroyed = 0;\r\n            this.m_system = system;\r\n            this.m_shape = shape;\r\n            this.m_xf = xf;\r\n            this.m_callDestructionListener = callDestructionListener;\r\n            this.m_destroyed = 0;\r\n        }\r\n        ReportFixture(fixture) {\r\n            return false;\r\n        }\r\n        ReportParticle(particleSystem, index) {\r\n            if (particleSystem !== this.m_system) {\r\n                return false;\r\n            }\r\n            // DEBUG: b2Assert(index >= 0 && index < this.m_system.m_count);\r\n            if (!this.m_system.m_positionBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (this.m_shape.TestPoint(this.m_xf, this.m_system.m_positionBuffer.data[index])) {\r\n                this.m_system.DestroyParticle(index, this.m_callDestructionListener);\r\n                this.m_destroyed++;\r\n            }\r\n            return true;\r\n        }\r\n        Destroyed() {\r\n            return this.m_destroyed;\r\n        }\r\n    }\r\n    b2ParticleSystem.DestroyParticlesInShapeCallback = DestroyParticlesInShapeCallback;\r\n    class JoinParticleGroupsFilter extends b2ParticleSystem.ConnectionFilter {\r\n        constructor(threshold) {\r\n            super();\r\n            this.m_threshold = 0;\r\n            this.m_threshold = threshold;\r\n        }\r\n        /**\r\n         * An additional condition for creating a pair.\r\n         */\r\n        ShouldCreatePair(a, b) {\r\n            return (a < this.m_threshold && this.m_threshold <= b) ||\r\n                (b < this.m_threshold && this.m_threshold <= a);\r\n        }\r\n        /**\r\n         * An additional condition for creating a triad.\r\n         */\r\n        ShouldCreateTriad(a, b, c) {\r\n            return (a < this.m_threshold || b < this.m_threshold || c < this.m_threshold) &&\r\n                (this.m_threshold <= a || this.m_threshold <= b || this.m_threshold <= c);\r\n        }\r\n    }\r\n    b2ParticleSystem.JoinParticleGroupsFilter = JoinParticleGroupsFilter;\r\n    class CompositeShape extends b2Shape {\r\n        constructor(shapes, shapeCount = shapes.length) {\r\n            super(b2ShapeType.e_unknown, 0);\r\n            this.m_shapeCount = 0;\r\n            this.m_shapes = shapes;\r\n            this.m_shapeCount = shapeCount;\r\n        }\r\n        Clone() {\r\n            // DEBUG: b2Assert(false);\r\n            throw new Error();\r\n        }\r\n        GetChildCount() {\r\n            return 1;\r\n        }\r\n        /**\r\n         * @see b2Shape::TestPoint\r\n         */\r\n        TestPoint(xf, p) {\r\n            for (let i = 0; i < this.m_shapeCount; i++) {\r\n                if (this.m_shapes[i].TestPoint(xf, p)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeDistance\r\n         */\r\n        ComputeDistance(xf, p, normal, childIndex) {\r\n            // DEBUG: b2Assert(false);\r\n            return 0;\r\n        }\r\n        /**\r\n         * Implement b2Shape.\r\n         */\r\n        RayCast(output, input, xf, childIndex) {\r\n            // DEBUG: b2Assert(false);\r\n            return false;\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeAABB\r\n         */\r\n        ComputeAABB(aabb, xf, childIndex) {\r\n            const s_subaabb = new b2AABB();\r\n            aabb.lowerBound.x = +b2_maxFloat;\r\n            aabb.lowerBound.y = +b2_maxFloat;\r\n            aabb.upperBound.x = -b2_maxFloat;\r\n            aabb.upperBound.y = -b2_maxFloat;\r\n            // DEBUG: b2Assert(childIndex === 0);\r\n            for (let i = 0; i < this.m_shapeCount; i++) {\r\n                const childCount = this.m_shapes[i].GetChildCount();\r\n                for (let j = 0; j < childCount; j++) {\r\n                    const subaabb = s_subaabb;\r\n                    this.m_shapes[i].ComputeAABB(subaabb, xf, j);\r\n                    aabb.Combine1(subaabb);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeMass\r\n         */\r\n        ComputeMass(massData, density) {\r\n            // DEBUG: b2Assert(false);\r\n        }\r\n        SetupDistanceProxy(proxy, index) {\r\n            // DEBUG: b2Assert(false);\r\n        }\r\n        ComputeSubmergedArea(normal, offset, xf, c) {\r\n            // DEBUG: b2Assert(false);\r\n            return 0;\r\n        }\r\n        Dump(log) {\r\n            // DEBUG: b2Assert(false);\r\n        }\r\n    }\r\n    b2ParticleSystem.CompositeShape = CompositeShape;\r\n    class ReactiveFilter extends b2ParticleSystem.ConnectionFilter {\r\n        constructor(flagsBuffer) {\r\n            super();\r\n            this.m_flagsBuffer = flagsBuffer;\r\n        }\r\n        IsNecessary(index) {\r\n            if (!this.m_flagsBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            return (this.m_flagsBuffer.data[index] & b2ParticleFlag.b2_reactiveParticle) !== 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.ReactiveFilter = ReactiveFilter;\r\n    class UpdateBodyContactsCallback extends b2FixtureParticleQueryCallback {\r\n        constructor(system, contactFilter) {\r\n            super(system); // base class constructor\r\n            this.m_contactFilter = contactFilter;\r\n        }\r\n        ShouldCollideFixtureParticle(fixture, particleSystem, particleIndex) {\r\n            // Call the contact filter if it's set, to determine whether to\r\n            // filter this contact.  Returns true if contact calculations should\r\n            // be performed, false otherwise.\r\n            if (this.m_contactFilter) {\r\n                const flags = this.m_system.GetFlagsBuffer();\r\n                if (flags[particleIndex] & b2ParticleFlag.b2_fixtureContactFilterParticle) {\r\n                    return this.m_contactFilter.ShouldCollideFixtureParticle(fixture, this.m_system, particleIndex);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        ReportFixtureAndParticle(fixture, childIndex, a) {\r\n            const s_n = b2ParticleSystem.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n;\r\n            const s_rp = b2ParticleSystem.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp;\r\n            if (!this.m_system.m_flagsBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (!this.m_system.m_positionBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const ap = this.m_system.m_positionBuffer.data[a];\r\n            const n = s_n;\r\n            const d = fixture.ComputeDistance(ap, n, childIndex);\r\n            if (d < this.m_system.m_particleDiameter && this.ShouldCollideFixtureParticle(fixture, this.m_system, a)) {\r\n                const b = fixture.GetBody();\r\n                const bp = b.GetWorldCenter();\r\n                const bm = b.GetMass();\r\n                const bI = b.GetInertia() - bm * b.GetLocalCenter().LengthSquared();\r\n                const invBm = bm > 0 ? 1 / bm : 0;\r\n                const invBI = bI > 0 ? 1 / bI : 0;\r\n                const invAm = this.m_system.m_flagsBuffer.data[a] &\r\n                    b2ParticleFlag.b2_wallParticle ? 0 : this.m_system.GetParticleInvMass();\r\n                ///b2Vec2 rp = ap - bp;\r\n                const rp = b2Vec2.SubVV(ap, bp, s_rp);\r\n                const rpn = b2Vec2.CrossVV(rp, n);\r\n                const invM = invAm + invBm + invBI * rpn * rpn;\r\n                ///b2ParticleBodyContact& contact = m_system.m_bodyContactBuffer.Append();\r\n                const contact = this.m_system.m_bodyContactBuffer.data[this.m_system.m_bodyContactBuffer.Append()];\r\n                contact.index = a;\r\n                contact.body = b;\r\n                contact.fixture = fixture;\r\n                contact.weight = 1 - d * this.m_system.m_inverseDiameter;\r\n                ///contact.normal = -n;\r\n                contact.normal.Copy(n.SelfNeg());\r\n                contact.mass = invM > 0 ? 1 / invM : 0;\r\n                this.m_system.DetectStuckParticle(a);\r\n            }\r\n        }\r\n    }\r\n    UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n = new b2Vec2();\r\n    UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp = new b2Vec2();\r\n    b2ParticleSystem.UpdateBodyContactsCallback = UpdateBodyContactsCallback;\r\n    class SolveCollisionCallback extends b2FixtureParticleQueryCallback {\r\n        constructor(system, step) {\r\n            super(system); // base class constructor\r\n            this.m_step = step;\r\n        }\r\n        ReportFixtureAndParticle(fixture, childIndex, a) {\r\n            const s_p1 = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_p1;\r\n            const s_output = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_output;\r\n            const s_input = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_input;\r\n            const s_p = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_p;\r\n            const s_v = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_v;\r\n            const s_f = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_f;\r\n            const body = fixture.GetBody();\r\n            if (!this.m_system.m_positionBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (!this.m_system.m_velocityBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const ap = this.m_system.m_positionBuffer.data[a];\r\n            const av = this.m_system.m_velocityBuffer.data[a];\r\n            const output = s_output;\r\n            const input = s_input;\r\n            if (this.m_system.m_iterationIndex === 0) {\r\n                // Put 'ap' in the local space of the previous frame\r\n                ///b2Vec2 p1 = b2MulT(body.m_xf0, ap);\r\n                const p1 = b2Transform.MulTXV(body.m_xf0, ap, s_p1);\r\n                if (fixture.GetShape().GetType() === b2ShapeType.e_circleShape) {\r\n                    // Make relative to the center of the circle\r\n                    ///p1 -= body.GetLocalCenter();\r\n                    p1.SelfSub(body.GetLocalCenter());\r\n                    // Re-apply rotation about the center of the circle\r\n                    ///p1 = b2Mul(body.m_xf0.q, p1);\r\n                    b2Rot.MulRV(body.m_xf0.q, p1, p1);\r\n                    // Subtract rotation of the current frame\r\n                    ///p1 = b2MulT(body.m_xf.q, p1);\r\n                    b2Rot.MulTRV(body.m_xf.q, p1, p1);\r\n                    // Return to local space\r\n                    ///p1 += body.GetLocalCenter();\r\n                    p1.SelfAdd(body.GetLocalCenter());\r\n                }\r\n                // Return to global space and apply rotation of current frame\r\n                ///input.p1 = b2Mul(body.m_xf, p1);\r\n                b2Transform.MulXV(body.m_xf, p1, input.p1);\r\n            }\r\n            else {\r\n                ///input.p1 = ap;\r\n                input.p1.Copy(ap);\r\n            }\r\n            ///input.p2 = ap + m_step.dt * av;\r\n            b2Vec2.AddVMulSV(ap, this.m_step.dt, av, input.p2);\r\n            input.maxFraction = 1;\r\n            if (fixture.RayCast(output, input, childIndex)) {\r\n                const n = output.normal;\r\n                ///b2Vec2 p = (1 - output.fraction) * input.p1 + output.fraction * input.p2 + b2_linearSlop * n;\r\n                const p = s_p;\r\n                p.x = (1 - output.fraction) * input.p1.x + output.fraction * input.p2.x + b2_linearSlop * n.x;\r\n                p.y = (1 - output.fraction) * input.p1.y + output.fraction * input.p2.y + b2_linearSlop * n.y;\r\n                ///b2Vec2 v = m_step.inv_dt * (p - ap);\r\n                const v = s_v;\r\n                v.x = this.m_step.inv_dt * (p.x - ap.x);\r\n                v.y = this.m_step.inv_dt * (p.y - ap.y);\r\n                ///m_system.m_velocityBuffer.data[a] = v;\r\n                this.m_system.m_velocityBuffer.data[a].Copy(v);\r\n                ///b2Vec2 f = m_step.inv_dt * m_system.GetParticleMass() * (av - v);\r\n                const f = s_f;\r\n                f.x = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.x - v.x);\r\n                f.y = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.y - v.y);\r\n                this.m_system.ParticleApplyForce(a, f);\r\n            }\r\n        }\r\n        ReportParticle(system, index) {\r\n            return false;\r\n        }\r\n    }\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_p1 = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_output = new b2RayCastOutput();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_input = new b2RayCastInput();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_p = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_v = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_f = new b2Vec2();\r\n    b2ParticleSystem.SolveCollisionCallback = SolveCollisionCallback;\r\n})(b2ParticleSystem || (b2ParticleSystem = {}));\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQYXJ0aWNsZVN5c3RlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL1BhcnRpY2xlL2IyUGFydGljbGVTeXN0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCx5QkFBeUI7QUFFekIsK0VBQStFO0FBQy9FLE9BQU8sRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFLHVCQUF1QixFQUFFLGtDQUFrQyxFQUFFLDBCQUEwQixFQUFFLHVCQUF1QixFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMxTSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsb0JBQW9CLEVBQUUsbUJBQW1CLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUM1SCxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQU0sTUFBTSxrQkFBa0IsQ0FBQztBQUNuSCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDM0MsT0FBTyxFQUFFLE1BQU0sRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbkYsT0FBTyxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQWMsTUFBTSw2QkFBNkIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFFOUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBSXBELE9BQU8sRUFBc0MsZUFBZSxFQUFxQixNQUFNLDhCQUE4QixDQUFDO0FBQ3RILE9BQU8sRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLGdCQUFnQixFQUFrQixNQUFNLGNBQWMsQ0FBQztBQUMvRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtC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","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_epsilon, b2_maxSubSteps, b2_maxTOIContacts } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Vec2, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2Color, b2DrawFlags } from \"../Common/b2Draw\";\r\nimport { b2AABB, b2RayCastInput, b2RayCastOutput, b2TestOverlapShape } from \"../Collision/b2Collision\";\r\nimport { b2TimeOfImpact, b2TOIInput, b2TOIOutput, b2TOIOutputState } from \"../Collision/b2TimeOfImpact\";\r\nimport { b2ShapeType } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2JointType } from \"./Joints/b2Joint\";\r\nimport { b2AreaJoint } from \"./Joints/b2AreaJoint\";\r\nimport { b2DistanceJoint } from \"./Joints/b2DistanceJoint\";\r\nimport { b2FrictionJoint } from \"./Joints/b2FrictionJoint\";\r\nimport { b2GearJoint } from \"./Joints/b2GearJoint\";\r\nimport { b2MotorJoint } from \"./Joints/b2MotorJoint\";\r\nimport { b2MouseJoint } from \"./Joints/b2MouseJoint\";\r\nimport { b2PrismaticJoint } from \"./Joints/b2PrismaticJoint\";\r\nimport { b2PulleyJoint } from \"./Joints/b2PulleyJoint\";\r\nimport { b2RevoluteJoint } from \"./Joints/b2RevoluteJoint\";\r\nimport { b2RopeJoint } from \"./Joints/b2RopeJoint\";\r\nimport { b2WeldJoint } from \"./Joints/b2WeldJoint\";\r\nimport { b2WheelJoint } from \"./Joints/b2WheelJoint\";\r\nimport { b2Body, b2BodyType } from \"./b2Body\";\r\nimport { b2ContactManager } from \"./b2ContactManager\";\r\nimport { b2Island } from \"./b2Island\";\r\nimport { b2Profile, b2TimeStep } from \"./b2TimeStep\";\r\nimport { b2QueryCallback } from \"./b2WorldCallbacks\";\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_maxFloat } from \"../Common/b2Settings\";\r\nimport { b2CalculateParticleIterations } from \"../Particle/b2Particle\";\r\nimport { b2ParticleSystem } from \"../Particle/b2ParticleSystem\";\r\n// #endif\r\n/// The world class manages all physics entities, dynamic simulation,\r\n/// and asynchronous queries. The world also contains efficient memory\r\n/// management facilities.\r\nexport class b2World {\r\n    // #endif\r\n    /// Construct a world object.\r\n    /// @param gravity the world gravity vector.\r\n    constructor(gravity) {\r\n        // b2BlockAllocator m_blockAllocator;\r\n        // b2StackAllocator m_stackAllocator;\r\n        this.m_newFixture = false;\r\n        this.m_locked = false;\r\n        this.m_clearForces = true;\r\n        this.m_contactManager = new b2ContactManager();\r\n        this.m_bodyList = null;\r\n        this.m_jointList = null;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_particleSystemList = null;\r\n        // #endif\r\n        this.m_bodyCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_gravity = new b2Vec2();\r\n        this.m_allowSleep = true;\r\n        this.m_destructionListener = null;\r\n        this.m_debugDraw = null;\r\n        // This is used to compute the time step ratio to\r\n        // support a variable time step.\r\n        this.m_inv_dt0 = 0;\r\n        // These are for debugging the solver.\r\n        this.m_warmStarting = true;\r\n        this.m_continuousPhysics = true;\r\n        this.m_subStepping = false;\r\n        this.m_stepComplete = true;\r\n        this.m_profile = new b2Profile();\r\n        this.m_island = new b2Island();\r\n        this.s_stack = [];\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        this.m_gravity.Copy(gravity);\r\n    }\r\n    /// Register a destruction listener. The listener is owned by you and must\r\n    /// remain in scope.\r\n    SetDestructionListener(listener) {\r\n        this.m_destructionListener = listener;\r\n    }\r\n    /// Register a contact filter to provide specific control over collision.\r\n    /// Otherwise the default filter is used (b2_defaultFilter). The listener is\r\n    /// owned by you and must remain in scope.\r\n    SetContactFilter(filter) {\r\n        this.m_contactManager.m_contactFilter = filter;\r\n    }\r\n    /// Register a contact event listener. The listener is owned by you and must\r\n    /// remain in scope.\r\n    SetContactListener(listener) {\r\n        this.m_contactManager.m_contactListener = listener;\r\n    }\r\n    /// Register a routine for debug drawing. The debug draw functions are called\r\n    /// inside with b2World::DrawDebugData method. The debug draw object is owned\r\n    /// by you and must remain in scope.\r\n    SetDebugDraw(debugDraw) {\r\n        this.m_debugDraw = debugDraw;\r\n    }\r\n    /// Create a rigid body given a definition. No reference to the definition\r\n    /// is retained.\r\n    /// @warning This function is locked during callbacks.\r\n    CreateBody(def = {}) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const b = new b2Body(def, this);\r\n        // Add to world doubly linked list.\r\n        b.m_prev = null;\r\n        b.m_next = this.m_bodyList;\r\n        if (this.m_bodyList) {\r\n            this.m_bodyList.m_prev = b;\r\n        }\r\n        this.m_bodyList = b;\r\n        ++this.m_bodyCount;\r\n        return b;\r\n    }\r\n    /// Destroy a rigid body given a definition. No reference to the definition\r\n    /// is retained. This function is locked during callbacks.\r\n    /// @warning This automatically deletes all associated shapes and joints.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyBody(b) {\r\n        // DEBUG: b2Assert(this.m_bodyCount > 0);\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        // Delete the attached joints.\r\n        let je = b.m_jointList;\r\n        while (je) {\r\n            const je0 = je;\r\n            je = je.next;\r\n            if (this.m_destructionListener) {\r\n                this.m_destructionListener.SayGoodbyeJoint(je0.joint);\r\n            }\r\n            this.DestroyJoint(je0.joint);\r\n            b.m_jointList = je;\r\n        }\r\n        b.m_jointList = null;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        // @see b2Controller list\r\n        let coe = b.m_controllerList;\r\n        while (coe) {\r\n            const coe0 = coe;\r\n            coe = coe.nextController;\r\n            coe0.controller.RemoveBody(b);\r\n        }\r\n        // #endif\r\n        // Delete the attached contacts.\r\n        let ce = b.m_contactList;\r\n        while (ce) {\r\n            const ce0 = ce;\r\n            ce = ce.next;\r\n            this.m_contactManager.Destroy(ce0.contact);\r\n        }\r\n        b.m_contactList = null;\r\n        // Delete the attached fixtures. This destroys broad-phase proxies.\r\n        let f = b.m_fixtureList;\r\n        while (f) {\r\n            const f0 = f;\r\n            f = f.m_next;\r\n            if (this.m_destructionListener) {\r\n                this.m_destructionListener.SayGoodbyeFixture(f0);\r\n            }\r\n            f0.DestroyProxies();\r\n            f0.Destroy();\r\n            b.m_fixtureList = f;\r\n            b.m_fixtureCount -= 1;\r\n        }\r\n        b.m_fixtureList = null;\r\n        b.m_fixtureCount = 0;\r\n        // Remove world body list.\r\n        if (b.m_prev) {\r\n            b.m_prev.m_next = b.m_next;\r\n        }\r\n        if (b.m_next) {\r\n            b.m_next.m_prev = b.m_prev;\r\n        }\r\n        if (b === this.m_bodyList) {\r\n            this.m_bodyList = b.m_next;\r\n        }\r\n        --this.m_bodyCount;\r\n    }\r\n    static _Joint_Create(def, allocator) {\r\n        switch (def.type) {\r\n            case b2JointType.e_distanceJoint: return new b2DistanceJoint(def);\r\n            case b2JointType.e_mouseJoint: return new b2MouseJoint(def);\r\n            case b2JointType.e_prismaticJoint: return new b2PrismaticJoint(def);\r\n            case b2JointType.e_revoluteJoint: return new b2RevoluteJoint(def);\r\n            case b2JointType.e_pulleyJoint: return new b2PulleyJoint(def);\r\n            case b2JointType.e_gearJoint: return new b2GearJoint(def);\r\n            case b2JointType.e_wheelJoint: return new b2WheelJoint(def);\r\n            case b2JointType.e_weldJoint: return new b2WeldJoint(def);\r\n            case b2JointType.e_frictionJoint: return new b2FrictionJoint(def);\r\n            case b2JointType.e_ropeJoint: return new b2RopeJoint(def);\r\n            case b2JointType.e_motorJoint: return new b2MotorJoint(def);\r\n            case b2JointType.e_areaJoint: return new b2AreaJoint(def);\r\n        }\r\n        throw new Error();\r\n    }\r\n    static _Joint_Destroy(joint, allocator) {\r\n    }\r\n    CreateJoint(def) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const j = b2World._Joint_Create(def, null);\r\n        // Connect to the world list.\r\n        j.m_prev = null;\r\n        j.m_next = this.m_jointList;\r\n        if (this.m_jointList) {\r\n            this.m_jointList.m_prev = j;\r\n        }\r\n        this.m_jointList = j;\r\n        ++this.m_jointCount;\r\n        // Connect to the bodies' doubly linked lists.\r\n        // j.m_edgeA.joint = j;\r\n        // j.m_edgeA.other = j.m_bodyB;\r\n        j.m_edgeA.prev = null;\r\n        j.m_edgeA.next = j.m_bodyA.m_jointList;\r\n        if (j.m_bodyA.m_jointList) {\r\n            j.m_bodyA.m_jointList.prev = j.m_edgeA;\r\n        }\r\n        j.m_bodyA.m_jointList = j.m_edgeA;\r\n        // j.m_edgeB.joint = j;\r\n        // j.m_edgeB.other = j.m_bodyA;\r\n        j.m_edgeB.prev = null;\r\n        j.m_edgeB.next = j.m_bodyB.m_jointList;\r\n        if (j.m_bodyB.m_jointList) {\r\n            j.m_bodyB.m_jointList.prev = j.m_edgeB;\r\n        }\r\n        j.m_bodyB.m_jointList = j.m_edgeB;\r\n        const bodyA = def.bodyA;\r\n        const bodyB = def.bodyB;\r\n        // If the joint prevents collisions, then flag any contacts for filtering.\r\n        if (!def.collideConnected) {\r\n            let edge = bodyB.GetContactList();\r\n            while (edge) {\r\n                if (edge.other === bodyA) {\r\n                    // Flag the contact for filtering at the next time step (where either\r\n                    // body is awake).\r\n                    edge.contact.FlagForFiltering();\r\n                }\r\n                edge = edge.next;\r\n            }\r\n        }\r\n        // Note: creating a joint doesn't wake the bodies.\r\n        return j;\r\n    }\r\n    /// Destroy a joint. This may cause the connected bodies to begin colliding.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyJoint(j) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const collideConnected = j.m_collideConnected;\r\n        // Remove from the doubly linked list.\r\n        if (j.m_prev) {\r\n            j.m_prev.m_next = j.m_next;\r\n        }\r\n        if (j.m_next) {\r\n            j.m_next.m_prev = j.m_prev;\r\n        }\r\n        if (j === this.m_jointList) {\r\n            this.m_jointList = j.m_next;\r\n        }\r\n        // Disconnect from island graph.\r\n        const bodyA = j.m_bodyA;\r\n        const bodyB = j.m_bodyB;\r\n        // Wake up connected bodies.\r\n        bodyA.SetAwake(true);\r\n        bodyB.SetAwake(true);\r\n        // Remove from body 1.\r\n        if (j.m_edgeA.prev) {\r\n            j.m_edgeA.prev.next = j.m_edgeA.next;\r\n        }\r\n        if (j.m_edgeA.next) {\r\n            j.m_edgeA.next.prev = j.m_edgeA.prev;\r\n        }\r\n        if (j.m_edgeA === bodyA.m_jointList) {\r\n            bodyA.m_jointList = j.m_edgeA.next;\r\n        }\r\n        j.m_edgeA.prev = null;\r\n        j.m_edgeA.next = null;\r\n        // Remove from body 2\r\n        if (j.m_edgeB.prev) {\r\n            j.m_edgeB.prev.next = j.m_edgeB.next;\r\n        }\r\n        if (j.m_edgeB.next) {\r\n            j.m_edgeB.next.prev = j.m_edgeB.prev;\r\n        }\r\n        if (j.m_edgeB === bodyB.m_jointList) {\r\n            bodyB.m_jointList = j.m_edgeB.next;\r\n        }\r\n        j.m_edgeB.prev = null;\r\n        j.m_edgeB.next = null;\r\n        b2World._Joint_Destroy(j, null);\r\n        // DEBUG: b2Assert(this.m_jointCount > 0);\r\n        --this.m_jointCount;\r\n        // If the joint prevents collisions, then flag any contacts for filtering.\r\n        if (!collideConnected) {\r\n            let edge = bodyB.GetContactList();\r\n            while (edge) {\r\n                if (edge.other === bodyA) {\r\n                    // Flag the contact for filtering at the next time step (where either\r\n                    // body is awake).\r\n                    edge.contact.FlagForFiltering();\r\n                }\r\n                edge = edge.next;\r\n            }\r\n        }\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    CreateParticleSystem(def) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const p = new b2ParticleSystem(def, this);\r\n        // Add to world doubly linked list.\r\n        p.m_prev = null;\r\n        p.m_next = this.m_particleSystemList;\r\n        if (this.m_particleSystemList) {\r\n            this.m_particleSystemList.m_prev = p;\r\n        }\r\n        this.m_particleSystemList = p;\r\n        return p;\r\n    }\r\n    DestroyParticleSystem(p) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        // Remove world particleSystem list.\r\n        if (p.m_prev) {\r\n            p.m_prev.m_next = p.m_next;\r\n        }\r\n        if (p.m_next) {\r\n            p.m_next.m_prev = p.m_prev;\r\n        }\r\n        if (p === this.m_particleSystemList) {\r\n            this.m_particleSystemList = p.m_next;\r\n        }\r\n    }\r\n    CalculateReasonableParticleIterations(timeStep) {\r\n        if (this.m_particleSystemList === null) {\r\n            return 1;\r\n        }\r\n        function GetSmallestRadius(world) {\r\n            let smallestRadius = b2_maxFloat;\r\n            for (let system = world.GetParticleSystemList(); system !== null; system = system.m_next) {\r\n                smallestRadius = b2Min(smallestRadius, system.GetRadius());\r\n            }\r\n            return smallestRadius;\r\n        }\r\n        // Use the smallest radius, since that represents the worst-case.\r\n        return b2CalculateParticleIterations(this.m_gravity.Length(), GetSmallestRadius(this), timeStep);\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    Step(dt, velocityIterations, positionIterations, particleIterations = this.CalculateReasonableParticleIterations(dt)) {\r\n        // #else\r\n        // public Step(dt: number, velocityIterations: number, positionIterations: number): void {\r\n        // #endif\r\n        const stepTimer = b2World.Step_s_stepTimer.Reset();\r\n        // If new fixtures were added, we need to find the new contacts.\r\n        if (this.m_newFixture) {\r\n            this.m_contactManager.FindNewContacts();\r\n            this.m_newFixture = false;\r\n        }\r\n        this.m_locked = true;\r\n        const step = b2World.Step_s_step;\r\n        step.dt = dt;\r\n        step.velocityIterations = velocityIterations;\r\n        step.positionIterations = positionIterations;\r\n        // #if B2_ENABLE_PARTICLE\r\n        step.particleIterations = particleIterations;\r\n        // #endif\r\n        if (dt > 0) {\r\n            step.inv_dt = 1 / dt;\r\n        }\r\n        else {\r\n            step.inv_dt = 0;\r\n        }\r\n        step.dtRatio = this.m_inv_dt0 * dt;\r\n        step.warmStarting = this.m_warmStarting;\r\n        // Update contacts. This is where some contacts are destroyed.\r\n        const timer = b2World.Step_s_timer.Reset();\r\n        this.m_contactManager.Collide();\r\n        this.m_profile.collide = timer.GetMilliseconds();\r\n        // Integrate velocities, solve velocity constraints, and integrate positions.\r\n        if (this.m_stepComplete && step.dt > 0) {\r\n            const timer = b2World.Step_s_timer.Reset();\r\n            // #if B2_ENABLE_PARTICLE\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                p.Solve(step); // Particle Simulation\r\n            }\r\n            // #endif\r\n            this.Solve(step);\r\n            this.m_profile.solve = timer.GetMilliseconds();\r\n        }\r\n        // Handle TOI events.\r\n        if (this.m_continuousPhysics && step.dt > 0) {\r\n            const timer = b2World.Step_s_timer.Reset();\r\n            this.SolveTOI(step);\r\n            this.m_profile.solveTOI = timer.GetMilliseconds();\r\n        }\r\n        if (step.dt > 0) {\r\n            this.m_inv_dt0 = step.inv_dt;\r\n        }\r\n        if (this.m_clearForces) {\r\n            this.ClearForces();\r\n        }\r\n        this.m_locked = false;\r\n        this.m_profile.step = stepTimer.GetMilliseconds();\r\n    }\r\n    /// Manually clear the force buffer on all bodies. By default, forces are cleared automatically\r\n    /// after each call to Step. The default behavior is modified by calling SetAutoClearForces.\r\n    /// The purpose of this function is to support sub-stepping. Sub-stepping is often used to maintain\r\n    /// a fixed sized time step under a variable frame-rate.\r\n    /// When you perform sub-stepping you will disable auto clearing of forces and instead call\r\n    /// ClearForces after all sub-steps are complete in one pass of your game loop.\r\n    /// @see SetAutoClearForces\r\n    ClearForces() {\r\n        for (let body = this.m_bodyList; body; body = body.m_next) {\r\n            body.m_force.SetZero();\r\n            body.m_torque = 0;\r\n        }\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    DrawParticleSystem(system) {\r\n        if (this.m_debugDraw === null) {\r\n            return;\r\n        }\r\n        const particleCount = system.GetParticleCount();\r\n        if (particleCount) {\r\n            const radius = system.GetRadius();\r\n            const positionBuffer = system.GetPositionBuffer();\r\n            if (system.m_colorBuffer.data) {\r\n                const colorBuffer = system.GetColorBuffer();\r\n                this.m_debugDraw.DrawParticles(positionBuffer, radius, colorBuffer, particleCount);\r\n            }\r\n            else {\r\n                this.m_debugDraw.DrawParticles(positionBuffer, radius, null, particleCount);\r\n            }\r\n        }\r\n    }\r\n    DrawDebugData() {\r\n        if (this.m_debugDraw === null) {\r\n            return;\r\n        }\r\n        const flags = this.m_debugDraw.GetFlags();\r\n        const color = b2World.DrawDebugData_s_color.SetRGB(0, 0, 0);\r\n        if (flags & b2DrawFlags.e_shapeBit) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                const xf = b.m_xf;\r\n                this.m_debugDraw.PushTransform(xf);\r\n                for (let f = b.GetFixtureList(); f; f = f.m_next) {\r\n                    if (!b.IsActive()) {\r\n                        color.SetRGB(0.5, 0.5, 0.3);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                        color.SetRGB(0.5, 0.9, 0.5);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (b.GetType() === b2BodyType.b2_kinematicBody) {\r\n                        color.SetRGB(0.5, 0.5, 0.9);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (!b.IsAwake()) {\r\n                        color.SetRGB(0.6, 0.6, 0.6);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else {\r\n                        color.SetRGB(0.9, 0.7, 0.7);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                }\r\n                this.m_debugDraw.PopTransform(xf);\r\n            }\r\n        }\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (flags & b2DrawFlags.e_particleBit) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                this.DrawParticleSystem(p);\r\n            }\r\n        }\r\n        // #endif\r\n        if (flags & b2DrawFlags.e_jointBit) {\r\n            for (let j = this.m_jointList; j; j = j.m_next) {\r\n                this.DrawJoint(j);\r\n            }\r\n        }\r\n        /*\r\n        if (flags & b2DrawFlags.e_pairBit) {\r\n          color.SetRGB(0.3, 0.9, 0.9);\r\n          for (let contact = this.m_contactManager.m_contactList; contact; contact = contact.m_next) {\r\n            const fixtureA = contact.GetFixtureA();\r\n            const fixtureB = contact.GetFixtureB();\r\n    \r\n            const cA = fixtureA.GetAABB().GetCenter();\r\n            const cB = fixtureB.GetAABB().GetCenter();\r\n    \r\n            this.m_debugDraw.DrawSegment(cA, cB, color);\r\n          }\r\n        }\r\n        */\r\n        if (flags & b2DrawFlags.e_aabbBit) {\r\n            color.SetRGB(0.9, 0.3, 0.9);\r\n            const vs = b2World.DrawDebugData_s_vs;\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                if (!b.IsActive()) {\r\n                    continue;\r\n                }\r\n                for (let f = b.GetFixtureList(); f; f = f.m_next) {\r\n                    for (let i = 0; i < f.m_proxyCount; ++i) {\r\n                        const proxy = f.m_proxies[i];\r\n                        const aabb = proxy.treeNode.aabb;\r\n                        vs[0].Set(aabb.lowerBound.x, aabb.lowerBound.y);\r\n                        vs[1].Set(aabb.upperBound.x, aabb.lowerBound.y);\r\n                        vs[2].Set(aabb.upperBound.x, aabb.upperBound.y);\r\n                        vs[3].Set(aabb.lowerBound.x, aabb.upperBound.y);\r\n                        this.m_debugDraw.DrawPolygon(vs, 4, color);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (flags & b2DrawFlags.e_centerOfMassBit) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                const xf = b2World.DrawDebugData_s_xf;\r\n                xf.q.Copy(b.m_xf.q);\r\n                xf.p.Copy(b.GetWorldCenter());\r\n                this.m_debugDraw.DrawTransform(xf);\r\n            }\r\n        }\r\n        // #if B2_ENABLE_CONTROLLER\r\n        // @see b2Controller list\r\n        if (flags & b2DrawFlags.e_controllerBit) {\r\n            for (let c = this.m_controllerList; c; c = c.m_next) {\r\n                c.Draw(this.m_debugDraw);\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    /// Query the world for all fixtures that potentially overlap the\r\n    /// provided AABB.\r\n    /// @param callback a user implemented callback class.\r\n    /// @param aabb the query box.\r\n    QueryAABB(callback, aabb, fn) {\r\n        this.m_contactManager.m_broadPhase.Query(aabb, (proxy) => {\r\n            const fixture_proxy = proxy.userData;\r\n            // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            if (callback) {\r\n                return callback.ReportFixture(fixture);\r\n            }\r\n            else if (fn) {\r\n                return fn(fixture);\r\n            }\r\n            return true;\r\n        });\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryAABB(callback, aabb);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryAllAABB(aabb, out = []) {\r\n        this.QueryAABB(null, aabb, (fixture) => { out.push(fixture); return true; });\r\n        return out;\r\n    }\r\n    /// Query the world for all fixtures that potentially overlap the\r\n    /// provided point.\r\n    /// @param callback a user implemented callback class.\r\n    /// @param point the query point.\r\n    QueryPointAABB(callback, point, fn) {\r\n        this.m_contactManager.m_broadPhase.QueryPoint(point, (proxy) => {\r\n            const fixture_proxy = proxy.userData;\r\n            // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            if (callback) {\r\n                return callback.ReportFixture(fixture);\r\n            }\r\n            else if (fn) {\r\n                return fn(fixture);\r\n            }\r\n            return true;\r\n        });\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryPointAABB(callback, point);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryAllPointAABB(point, out = []) {\r\n        this.QueryPointAABB(null, point, (fixture) => { out.push(fixture); return true; });\r\n        return out;\r\n    }\r\n    QueryFixtureShape(callback, shape, index, transform, fn) {\r\n        const aabb = b2World.QueryFixtureShape_s_aabb;\r\n        shape.ComputeAABB(aabb, transform, index);\r\n        this.m_contactManager.m_broadPhase.Query(aabb, (proxy) => {\r\n            const fixture_proxy = proxy.userData;\r\n            // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            if (b2TestOverlapShape(shape, index, fixture.GetShape(), fixture_proxy.childIndex, transform, fixture.GetBody().GetTransform())) {\r\n                if (callback) {\r\n                    return callback.ReportFixture(fixture);\r\n                }\r\n                else if (fn) {\r\n                    return fn(fixture);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryAABB(callback, aabb);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryAllFixtureShape(shape, index, transform, out = []) {\r\n        this.QueryFixtureShape(null, shape, index, transform, (fixture) => { out.push(fixture); return true; });\r\n        return out;\r\n    }\r\n    QueryFixturePoint(callback, point, fn) {\r\n        this.m_contactManager.m_broadPhase.QueryPoint(point, (proxy) => {\r\n            const fixture_proxy = proxy.userData;\r\n            // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            if (fixture.TestPoint(point)) {\r\n                if (callback) {\r\n                    return callback.ReportFixture(fixture);\r\n                }\r\n                else if (fn) {\r\n                    return fn(fixture);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryPointAABB(callback, point);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryAllFixturePoint(point, out = []) {\r\n        this.QueryFixturePoint(null, point, (fixture) => { out.push(fixture); return true; });\r\n        return out;\r\n    }\r\n    RayCast(callback, point1, point2, fn) {\r\n        const input = b2World.RayCast_s_input;\r\n        input.maxFraction = 1;\r\n        input.p1.Copy(point1);\r\n        input.p2.Copy(point2);\r\n        this.m_contactManager.m_broadPhase.RayCast(input, (input, proxy) => {\r\n            const fixture_proxy = proxy.userData;\r\n            // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            const index = fixture_proxy.childIndex;\r\n            const output = b2World.RayCast_s_output;\r\n            const hit = fixture.RayCast(output, input, index);\r\n            if (hit) {\r\n                const fraction = output.fraction;\r\n                const point = b2World.RayCast_s_point;\r\n                point.Set((1 - fraction) * point1.x + fraction * point2.x, (1 - fraction) * point1.y + fraction * point2.y);\r\n                if (callback) {\r\n                    return callback.ReportFixture(fixture, point, output.normal, fraction);\r\n                }\r\n                else if (fn) {\r\n                    return fn(fixture, point, output.normal, fraction);\r\n                }\r\n            }\r\n            return input.maxFraction;\r\n        });\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.RayCast(callback, point1, point2);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    RayCastOne(point1, point2) {\r\n        let result = null;\r\n        let min_fraction = 1;\r\n        this.RayCast(null, point1, point2, (fixture, point, normal, fraction) => {\r\n            if (fraction < min_fraction) {\r\n                min_fraction = fraction;\r\n                result = fixture;\r\n            }\r\n            return min_fraction;\r\n        });\r\n        return result;\r\n    }\r\n    RayCastAll(point1, point2, out = []) {\r\n        this.RayCast(null, point1, point2, (fixture, point, normal, fraction) => {\r\n            out.push(fixture);\r\n            return 1;\r\n        });\r\n        return out;\r\n    }\r\n    /// Get the world body list. With the returned body, use b2Body::GetNext to get\r\n    /// the next body in the world list. A NULL body indicates the end of the list.\r\n    /// @return the head of the world body list.\r\n    GetBodyList() {\r\n        return this.m_bodyList;\r\n    }\r\n    /// Get the world joint list. With the returned joint, use b2Joint::GetNext to get\r\n    /// the next joint in the world list. A NULL joint indicates the end of the list.\r\n    /// @return the head of the world joint list.\r\n    GetJointList() {\r\n        return this.m_jointList;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    GetParticleSystemList() {\r\n        return this.m_particleSystemList;\r\n    }\r\n    // #endif\r\n    /// Get the world contact list. With the returned contact, use b2Contact::GetNext to get\r\n    /// the next contact in the world list. A NULL contact indicates the end of the list.\r\n    /// @return the head of the world contact list.\r\n    /// @warning contacts are created and destroyed in the middle of a time step.\r\n    /// Use b2ContactListener to avoid missing contacts.\r\n    GetContactList() {\r\n        return this.m_contactManager.m_contactList;\r\n    }\r\n    /// Enable/disable sleep.\r\n    SetAllowSleeping(flag) {\r\n        if (flag === this.m_allowSleep) {\r\n            return;\r\n        }\r\n        this.m_allowSleep = flag;\r\n        if (!this.m_allowSleep) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                b.SetAwake(true);\r\n            }\r\n        }\r\n    }\r\n    GetAllowSleeping() {\r\n        return this.m_allowSleep;\r\n    }\r\n    /// Enable/disable warm starting. For testing.\r\n    SetWarmStarting(flag) {\r\n        this.m_warmStarting = flag;\r\n    }\r\n    GetWarmStarting() {\r\n        return this.m_warmStarting;\r\n    }\r\n    /// Enable/disable continuous physics. For testing.\r\n    SetContinuousPhysics(flag) {\r\n        this.m_continuousPhysics = flag;\r\n    }\r\n    GetContinuousPhysics() {\r\n        return this.m_continuousPhysics;\r\n    }\r\n    /// Enable/disable single stepped continuous physics. For testing.\r\n    SetSubStepping(flag) {\r\n        this.m_subStepping = flag;\r\n    }\r\n    GetSubStepping() {\r\n        return this.m_subStepping;\r\n    }\r\n    /// Get the number of broad-phase proxies.\r\n    GetProxyCount() {\r\n        return this.m_contactManager.m_broadPhase.GetProxyCount();\r\n    }\r\n    /// Get the number of bodies.\r\n    GetBodyCount() {\r\n        return this.m_bodyCount;\r\n    }\r\n    /// Get the number of joints.\r\n    GetJointCount() {\r\n        return this.m_jointCount;\r\n    }\r\n    /// Get the number of contacts (each may have 0 or more contact points).\r\n    GetContactCount() {\r\n        return this.m_contactManager.m_contactCount;\r\n    }\r\n    /// Get the height of the dynamic tree.\r\n    GetTreeHeight() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeHeight();\r\n    }\r\n    /// Get the balance of the dynamic tree.\r\n    GetTreeBalance() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeBalance();\r\n    }\r\n    /// Get the quality metric of the dynamic tree. The smaller the better.\r\n    /// The minimum is 1.\r\n    GetTreeQuality() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeQuality();\r\n    }\r\n    /// Change the global gravity vector.\r\n    SetGravity(gravity, wake = true) {\r\n        if (!b2Vec2.IsEqualToV(this.m_gravity, gravity)) {\r\n            this.m_gravity.Copy(gravity);\r\n            if (wake) {\r\n                for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                    b.SetAwake(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /// Get the global gravity vector.\r\n    GetGravity() {\r\n        return this.m_gravity;\r\n    }\r\n    /// Is the world locked (in the middle of a time step).\r\n    IsLocked() {\r\n        return this.m_locked;\r\n    }\r\n    /// Set flag to control automatic clearing of forces after each time step.\r\n    SetAutoClearForces(flag) {\r\n        this.m_clearForces = flag;\r\n    }\r\n    /// Get the flag that controls automatic clearing of forces after each time step.\r\n    GetAutoClearForces() {\r\n        return this.m_clearForces;\r\n    }\r\n    /// Shift the world origin. Useful for large worlds.\r\n    /// The body shift formula is: position -= newOrigin\r\n    /// @param newOrigin the new origin with respect to the old origin\r\n    ShiftOrigin(newOrigin) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_xf.p.SelfSub(newOrigin);\r\n            b.m_sweep.c0.SelfSub(newOrigin);\r\n            b.m_sweep.c.SelfSub(newOrigin);\r\n        }\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.ShiftOrigin(newOrigin);\r\n        }\r\n        this.m_contactManager.m_broadPhase.ShiftOrigin(newOrigin);\r\n    }\r\n    /// Get the contact manager for testing.\r\n    GetContactManager() {\r\n        return this.m_contactManager;\r\n    }\r\n    /// Get the current profile.\r\n    GetProfile() {\r\n        return this.m_profile;\r\n    }\r\n    /// Dump the world into the log file.\r\n    /// @warning this should be called outside of a time step.\r\n    Dump(log) {\r\n        if (this.m_locked) {\r\n            return;\r\n        }\r\n        log(\"const g: b2Vec2 = new b2Vec2(%.15f, %.15f);\\n\", this.m_gravity.x, this.m_gravity.y);\r\n        log(\"this.m_world.SetGravity(g);\\n\");\r\n        log(\"const bodies: b2Body[] = [];\\n\");\r\n        log(\"const joints: b2Joint[] = [];\\n\");\r\n        let i = 0;\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_islandIndex = i;\r\n            b.Dump(log);\r\n            ++i;\r\n        }\r\n        i = 0;\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.m_index = i;\r\n            ++i;\r\n        }\r\n        // First pass on joints, skip gear joints.\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            if (j.m_type === b2JointType.e_gearJoint) {\r\n                continue;\r\n            }\r\n            log(\"{\\n\");\r\n            j.Dump(log);\r\n            log(\"}\\n\");\r\n        }\r\n        // Second pass on joints, only gear joints.\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            if (j.m_type !== b2JointType.e_gearJoint) {\r\n                continue;\r\n            }\r\n            log(\"{\\n\");\r\n            j.Dump(log);\r\n            log(\"}\\n\");\r\n        }\r\n    }\r\n    DrawJoint(joint) {\r\n        if (this.m_debugDraw === null) {\r\n            return;\r\n        }\r\n        const bodyA = joint.GetBodyA();\r\n        const bodyB = joint.GetBodyB();\r\n        const xf1 = bodyA.m_xf;\r\n        const xf2 = bodyB.m_xf;\r\n        const x1 = xf1.p;\r\n        const x2 = xf2.p;\r\n        const p1 = joint.GetAnchorA(b2World.DrawJoint_s_p1);\r\n        const p2 = joint.GetAnchorB(b2World.DrawJoint_s_p2);\r\n        const color = b2World.DrawJoint_s_color.SetRGB(0.5, 0.8, 0.8);\r\n        switch (joint.m_type) {\r\n            case b2JointType.e_distanceJoint:\r\n                this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                break;\r\n            case b2JointType.e_pulleyJoint: {\r\n                const pulley = joint;\r\n                const s1 = pulley.GetGroundAnchorA();\r\n                const s2 = pulley.GetGroundAnchorB();\r\n                this.m_debugDraw.DrawSegment(s1, p1, color);\r\n                this.m_debugDraw.DrawSegment(s2, p2, color);\r\n                this.m_debugDraw.DrawSegment(s1, s2, color);\r\n                break;\r\n            }\r\n            case b2JointType.e_mouseJoint: {\r\n                const c = b2World.DrawJoint_s_c;\r\n                c.Set(0.0, 1.0, 0.0);\r\n                this.m_debugDraw.DrawPoint(p1, 4.0, c);\r\n                this.m_debugDraw.DrawPoint(p2, 4.0, c);\r\n                c.Set(0.8, 0.8, 0.8);\r\n                this.m_debugDraw.DrawSegment(p1, p2, c);\r\n                break;\r\n            }\r\n            default:\r\n                this.m_debugDraw.DrawSegment(x1, p1, color);\r\n                this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                this.m_debugDraw.DrawSegment(x2, p2, color);\r\n        }\r\n    }\r\n    DrawShape(fixture, color) {\r\n        if (this.m_debugDraw === null) {\r\n            return;\r\n        }\r\n        const shape = fixture.GetShape();\r\n        switch (shape.m_type) {\r\n            case b2ShapeType.e_circleShape: {\r\n                const circle = shape;\r\n                const center = circle.m_p;\r\n                const radius = circle.m_radius;\r\n                const axis = b2Vec2.UNITX;\r\n                this.m_debugDraw.DrawSolidCircle(center, radius, axis, color);\r\n                break;\r\n            }\r\n            case b2ShapeType.e_edgeShape: {\r\n                const edge = shape;\r\n                const v1 = edge.m_vertex1;\r\n                const v2 = edge.m_vertex2;\r\n                this.m_debugDraw.DrawSegment(v1, v2, color);\r\n                break;\r\n            }\r\n            case b2ShapeType.e_chainShape: {\r\n                const chain = shape;\r\n                const count = chain.m_count;\r\n                const vertices = chain.m_vertices;\r\n                const ghostColor = b2World.DrawShape_s_ghostColor.SetRGBA(0.75 * color.r, 0.75 * color.g, 0.75 * color.b, color.a);\r\n                let v1 = vertices[0];\r\n                this.m_debugDraw.DrawPoint(v1, 4.0, color);\r\n                if (chain.m_hasPrevVertex) {\r\n                    const vp = chain.m_prevVertex;\r\n                    this.m_debugDraw.DrawSegment(vp, v1, ghostColor);\r\n                    this.m_debugDraw.DrawCircle(vp, 0.1, ghostColor);\r\n                }\r\n                for (let i = 1; i < count; ++i) {\r\n                    const v2 = vertices[i];\r\n                    this.m_debugDraw.DrawSegment(v1, v2, color);\r\n                    this.m_debugDraw.DrawPoint(v2, 4.0, color);\r\n                    v1 = v2;\r\n                }\r\n                if (chain.m_hasNextVertex) {\r\n                    const vn = chain.m_nextVertex;\r\n                    this.m_debugDraw.DrawSegment(vn, v1, ghostColor);\r\n                    this.m_debugDraw.DrawCircle(vn, 0.1, ghostColor);\r\n                }\r\n                break;\r\n            }\r\n            case b2ShapeType.e_polygonShape: {\r\n                const poly = shape;\r\n                const vertexCount = poly.m_count;\r\n                const vertices = poly.m_vertices;\r\n                this.m_debugDraw.DrawSolidPolygon(vertices, vertexCount, color);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    Solve(step) {\r\n        // #if B2_ENABLE_PARTICLE\r\n        // update previous transforms\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_xf0.Copy(b.m_xf);\r\n        }\r\n        // #endif\r\n        // #if B2_ENABLE_CONTROLLER\r\n        // @see b2Controller list\r\n        for (let controller = this.m_controllerList; controller; controller = controller.m_next) {\r\n            controller.Step(step);\r\n        }\r\n        // #endif\r\n        this.m_profile.solveInit = 0;\r\n        this.m_profile.solveVelocity = 0;\r\n        this.m_profile.solvePosition = 0;\r\n        // Size the island for the worst case.\r\n        const island = this.m_island;\r\n        island.Initialize(this.m_bodyCount, this.m_contactManager.m_contactCount, this.m_jointCount, null, // this.m_stackAllocator,\r\n        this.m_contactManager.m_contactListener);\r\n        // Clear all the island flags.\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_islandFlag = false;\r\n        }\r\n        for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n            c.m_islandFlag = false;\r\n        }\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.m_islandFlag = false;\r\n        }\r\n        // Build and simulate all awake islands.\r\n        // DEBUG: const stackSize: number = this.m_bodyCount;\r\n        const stack = this.s_stack;\r\n        for (let seed = this.m_bodyList; seed; seed = seed.m_next) {\r\n            if (seed.m_islandFlag) {\r\n                continue;\r\n            }\r\n            if (!seed.IsAwake() || !seed.IsActive()) {\r\n                continue;\r\n            }\r\n            // The seed can be dynamic or kinematic.\r\n            if (seed.GetType() === b2BodyType.b2_staticBody) {\r\n                continue;\r\n            }\r\n            // Reset island and stack.\r\n            island.Clear();\r\n            let stackCount = 0;\r\n            stack[stackCount++] = seed;\r\n            seed.m_islandFlag = true;\r\n            // Perform a depth first search (DFS) on the constraint graph.\r\n            while (stackCount > 0) {\r\n                // Grab the next body off the stack and add it to the island.\r\n                const b = stack[--stackCount];\r\n                if (!b) {\r\n                    throw new Error();\r\n                }\r\n                // DEBUG: b2Assert(b.IsActive());\r\n                island.AddBody(b);\r\n                // Make sure the body is awake. (without resetting sleep timer).\r\n                b.m_awakeFlag = true;\r\n                // To keep islands as small as possible, we don't\r\n                // propagate islands across static bodies.\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    continue;\r\n                }\r\n                // Search all contacts connected to this body.\r\n                for (let ce = b.m_contactList; ce; ce = ce.next) {\r\n                    const contact = ce.contact;\r\n                    // Has this contact already been added to an island?\r\n                    if (contact.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    // Is this contact solid and touching?\r\n                    if (!contact.IsEnabled() || !contact.IsTouching()) {\r\n                        continue;\r\n                    }\r\n                    // Skip sensors.\r\n                    const sensorA = contact.m_fixtureA.m_isSensor;\r\n                    const sensorB = contact.m_fixtureB.m_isSensor;\r\n                    if (sensorA || sensorB) {\r\n                        continue;\r\n                    }\r\n                    island.AddContact(contact);\r\n                    contact.m_islandFlag = true;\r\n                    const other = ce.other;\r\n                    if (!other) {\r\n                        throw new Error();\r\n                    }\r\n                    // Was the other body already added to this island?\r\n                    if (other.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    // DEBUG: b2Assert(stackCount < stackSize);\r\n                    stack[stackCount++] = other;\r\n                    other.m_islandFlag = true;\r\n                }\r\n                // Search all joints connect to this body.\r\n                for (let je = b.m_jointList; je; je = je.next) {\r\n                    if (je.joint.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    const other = je.other;\r\n                    // Don't simulate joints connected to inactive bodies.\r\n                    if (!other.IsActive()) {\r\n                        continue;\r\n                    }\r\n                    island.AddJoint(je.joint);\r\n                    je.joint.m_islandFlag = true;\r\n                    if (other.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    // DEBUG: b2Assert(stackCount < stackSize);\r\n                    stack[stackCount++] = other;\r\n                    other.m_islandFlag = true;\r\n                }\r\n            }\r\n            const profile = new b2Profile();\r\n            island.Solve(profile, step, this.m_gravity, this.m_allowSleep);\r\n            this.m_profile.solveInit += profile.solveInit;\r\n            this.m_profile.solveVelocity += profile.solveVelocity;\r\n            this.m_profile.solvePosition += profile.solvePosition;\r\n            // Post solve cleanup.\r\n            for (let i = 0; i < island.m_bodyCount; ++i) {\r\n                // Allow static bodies to participate in other islands.\r\n                const b = island.m_bodies[i];\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    b.m_islandFlag = false;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < stack.length; ++i) {\r\n            if (!stack[i]) {\r\n                break;\r\n            }\r\n            stack[i] = null;\r\n        }\r\n        const timer = new b2Timer();\r\n        // Synchronize fixtures, check for out of range bodies.\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            // If a body was not in an island then it did not move.\r\n            if (!b.m_islandFlag) {\r\n                continue;\r\n            }\r\n            if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                continue;\r\n            }\r\n            // Update fixtures (for broad-phase).\r\n            b.SynchronizeFixtures();\r\n        }\r\n        // Look for new contacts.\r\n        this.m_contactManager.FindNewContacts();\r\n        this.m_profile.broadphase = timer.GetMilliseconds();\r\n    }\r\n    SolveTOI(step) {\r\n        // b2Island island(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, &m_stackAllocator, m_contactManager.m_contactListener);\r\n        const island = this.m_island;\r\n        island.Initialize(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, null, this.m_contactManager.m_contactListener);\r\n        if (this.m_stepComplete) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                b.m_islandFlag = false;\r\n                b.m_sweep.alpha0 = 0;\r\n            }\r\n            for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n                // Invalidate TOI\r\n                c.m_toiFlag = false;\r\n                c.m_islandFlag = false;\r\n                c.m_toiCount = 0;\r\n                c.m_toi = 1;\r\n            }\r\n        }\r\n        // Find TOI events and solve them.\r\n        for (;;) {\r\n            // Find the first TOI.\r\n            let minContact = null;\r\n            let minAlpha = 1;\r\n            for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n                // Is this contact disabled?\r\n                if (!c.IsEnabled()) {\r\n                    continue;\r\n                }\r\n                // Prevent excessive sub-stepping.\r\n                if (c.m_toiCount > b2_maxSubSteps) {\r\n                    continue;\r\n                }\r\n                let alpha = 1;\r\n                if (c.m_toiFlag) {\r\n                    // This contact has a valid cached TOI.\r\n                    alpha = c.m_toi;\r\n                }\r\n                else {\r\n                    const fA = c.GetFixtureA();\r\n                    const fB = c.GetFixtureB();\r\n                    // Is there a sensor?\r\n                    if (fA.IsSensor() || fB.IsSensor()) {\r\n                        continue;\r\n                    }\r\n                    const bA = fA.GetBody();\r\n                    const bB = fB.GetBody();\r\n                    const typeA = bA.m_type;\r\n                    const typeB = bB.m_type;\r\n                    // DEBUG: b2Assert(typeA !== b2BodyType.b2_staticBody || typeB !== b2BodyType.b2_staticBody);\r\n                    const activeA = bA.IsAwake() && typeA !== b2BodyType.b2_staticBody;\r\n                    const activeB = bB.IsAwake() && typeB !== b2BodyType.b2_staticBody;\r\n                    // Is at least one body active (awake and dynamic or kinematic)?\r\n                    if (!activeA && !activeB) {\r\n                        continue;\r\n                    }\r\n                    const collideA = bA.IsBullet() || typeA !== b2BodyType.b2_dynamicBody;\r\n                    const collideB = bB.IsBullet() || typeB !== b2BodyType.b2_dynamicBody;\r\n                    // Are these two non-bullet dynamic bodies?\r\n                    if (!collideA && !collideB) {\r\n                        continue;\r\n                    }\r\n                    // Compute the TOI for this contact.\r\n                    // Put the sweeps onto the same time interval.\r\n                    let alpha0 = bA.m_sweep.alpha0;\r\n                    if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\r\n                        alpha0 = bB.m_sweep.alpha0;\r\n                        bA.m_sweep.Advance(alpha0);\r\n                    }\r\n                    else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\r\n                        alpha0 = bA.m_sweep.alpha0;\r\n                        bB.m_sweep.Advance(alpha0);\r\n                    }\r\n                    // DEBUG: b2Assert(alpha0 < 1);\r\n                    const indexA = c.GetChildIndexA();\r\n                    const indexB = c.GetChildIndexB();\r\n                    // Compute the time of impact in interval [0, minTOI]\r\n                    const input = b2World.SolveTOI_s_toi_input;\r\n                    input.proxyA.SetShape(fA.GetShape(), indexA);\r\n                    input.proxyB.SetShape(fB.GetShape(), indexB);\r\n                    input.sweepA.Copy(bA.m_sweep);\r\n                    input.sweepB.Copy(bB.m_sweep);\r\n                    input.tMax = 1;\r\n                    const output = b2World.SolveTOI_s_toi_output;\r\n                    b2TimeOfImpact(output, input);\r\n                    // Beta is the fraction of the remaining portion of the .\r\n                    const beta = output.t;\r\n                    if (output.state === b2TOIOutputState.e_touching) {\r\n                        alpha = b2Min(alpha0 + (1 - alpha0) * beta, 1);\r\n                    }\r\n                    else {\r\n                        alpha = 1;\r\n                    }\r\n                    c.m_toi = alpha;\r\n                    c.m_toiFlag = true;\r\n                }\r\n                if (alpha < minAlpha) {\r\n                    // This is the minimum TOI found so far.\r\n                    minContact = c;\r\n                    minAlpha = alpha;\r\n                }\r\n            }\r\n            if (minContact === null || 1 - 10 * b2_epsilon < minAlpha) {\r\n                // No more TOI events. Done!\r\n                this.m_stepComplete = true;\r\n                break;\r\n            }\r\n            // Advance the bodies to the TOI.\r\n            const fA = minContact.GetFixtureA();\r\n            const fB = minContact.GetFixtureB();\r\n            const bA = fA.GetBody();\r\n            const bB = fB.GetBody();\r\n            const backup1 = b2World.SolveTOI_s_backup1.Copy(bA.m_sweep);\r\n            const backup2 = b2World.SolveTOI_s_backup2.Copy(bB.m_sweep);\r\n            bA.Advance(minAlpha);\r\n            bB.Advance(minAlpha);\r\n            // The TOI contact likely has some new contact points.\r\n            minContact.Update(this.m_contactManager.m_contactListener);\r\n            minContact.m_toiFlag = false;\r\n            ++minContact.m_toiCount;\r\n            // Is the contact solid?\r\n            if (!minContact.IsEnabled() || !minContact.IsTouching()) {\r\n                // Restore the sweeps.\r\n                minContact.SetEnabled(false);\r\n                bA.m_sweep.Copy(backup1);\r\n                bB.m_sweep.Copy(backup2);\r\n                bA.SynchronizeTransform();\r\n                bB.SynchronizeTransform();\r\n                continue;\r\n            }\r\n            bA.SetAwake(true);\r\n            bB.SetAwake(true);\r\n            // Build the island\r\n            island.Clear();\r\n            island.AddBody(bA);\r\n            island.AddBody(bB);\r\n            island.AddContact(minContact);\r\n            bA.m_islandFlag = true;\r\n            bB.m_islandFlag = true;\r\n            minContact.m_islandFlag = true;\r\n            // Get contacts on bodyA and bodyB.\r\n            // const bodies: b2Body[] = [bA, bB];\r\n            for (let i = 0; i < 2; ++i) {\r\n                const body = (i === 0) ? (bA) : (bB); // bodies[i];\r\n                if (body.m_type === b2BodyType.b2_dynamicBody) {\r\n                    for (let ce = body.m_contactList; ce; ce = ce.next) {\r\n                        if (island.m_bodyCount === island.m_bodyCapacity) {\r\n                            break;\r\n                        }\r\n                        if (island.m_contactCount === island.m_contactCapacity) {\r\n                            break;\r\n                        }\r\n                        const contact = ce.contact;\r\n                        // Has this contact already been added to the island?\r\n                        if (contact.m_islandFlag) {\r\n                            continue;\r\n                        }\r\n                        // Only add static, kinematic, or bullet bodies.\r\n                        const other = ce.other;\r\n                        if (other.m_type === b2BodyType.b2_dynamicBody &&\r\n                            !body.IsBullet() && !other.IsBullet()) {\r\n                            continue;\r\n                        }\r\n                        // Skip sensors.\r\n                        const sensorA = contact.m_fixtureA.m_isSensor;\r\n                        const sensorB = contact.m_fixtureB.m_isSensor;\r\n                        if (sensorA || sensorB) {\r\n                            continue;\r\n                        }\r\n                        // Tentatively advance the body to the TOI.\r\n                        const backup = b2World.SolveTOI_s_backup.Copy(other.m_sweep);\r\n                        if (!other.m_islandFlag) {\r\n                            other.Advance(minAlpha);\r\n                        }\r\n                        // Update the contact points\r\n                        contact.Update(this.m_contactManager.m_contactListener);\r\n                        // Was the contact disabled by the user?\r\n                        if (!contact.IsEnabled()) {\r\n                            other.m_sweep.Copy(backup);\r\n                            other.SynchronizeTransform();\r\n                            continue;\r\n                        }\r\n                        // Are there contact points?\r\n                        if (!contact.IsTouching()) {\r\n                            other.m_sweep.Copy(backup);\r\n                            other.SynchronizeTransform();\r\n                            continue;\r\n                        }\r\n                        // Add the contact to the island\r\n                        contact.m_islandFlag = true;\r\n                        island.AddContact(contact);\r\n                        // Has the other body already been added to the island?\r\n                        if (other.m_islandFlag) {\r\n                            continue;\r\n                        }\r\n                        // Add the other body to the island.\r\n                        other.m_islandFlag = true;\r\n                        if (other.m_type !== b2BodyType.b2_staticBody) {\r\n                            other.SetAwake(true);\r\n                        }\r\n                        island.AddBody(other);\r\n                    }\r\n                }\r\n            }\r\n            const subStep = b2World.SolveTOI_s_subStep;\r\n            subStep.dt = (1 - minAlpha) * step.dt;\r\n            subStep.inv_dt = 1 / subStep.dt;\r\n            subStep.dtRatio = 1;\r\n            subStep.positionIterations = 20;\r\n            subStep.velocityIterations = step.velocityIterations;\r\n            // #if B2_ENABLE_PARTICLE\r\n            subStep.particleIterations = step.particleIterations;\r\n            // #endif\r\n            subStep.warmStarting = false;\r\n            island.SolveTOI(subStep, bA.m_islandIndex, bB.m_islandIndex);\r\n            // Reset island flags and synchronize broad-phase proxies.\r\n            for (let i = 0; i < island.m_bodyCount; ++i) {\r\n                const body = island.m_bodies[i];\r\n                body.m_islandFlag = false;\r\n                if (body.m_type !== b2BodyType.b2_dynamicBody) {\r\n                    continue;\r\n                }\r\n                body.SynchronizeFixtures();\r\n                // Invalidate all contact TOIs on this displaced body.\r\n                for (let ce = body.m_contactList; ce; ce = ce.next) {\r\n                    ce.contact.m_toiFlag = false;\r\n                    ce.contact.m_islandFlag = false;\r\n                }\r\n            }\r\n            // Commit fixture proxy movements to the broad-phase so that new contacts are created.\r\n            // Also, some contacts can be destroyed.\r\n            this.m_contactManager.FindNewContacts();\r\n            if (this.m_subStepping) {\r\n                this.m_stepComplete = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // #if B2_ENABLE_CONTROLLER\r\n    AddController(controller) {\r\n        // b2Assert(controller.m_world === null, \"Controller can only be a member of one world\");\r\n        // controller.m_world = this;\r\n        controller.m_next = this.m_controllerList;\r\n        controller.m_prev = null;\r\n        if (this.m_controllerList) {\r\n            this.m_controllerList.m_prev = controller;\r\n        }\r\n        this.m_controllerList = controller;\r\n        ++this.m_controllerCount;\r\n        return controller;\r\n    }\r\n    RemoveController(controller) {\r\n        // b2Assert(controller.m_world === this, \"Controller is not a member of this world\");\r\n        if (controller.m_prev) {\r\n            controller.m_prev.m_next = controller.m_next;\r\n        }\r\n        if (controller.m_next) {\r\n            controller.m_next.m_prev = controller.m_prev;\r\n        }\r\n        if (this.m_controllerList === controller) {\r\n            this.m_controllerList = controller.m_next;\r\n        }\r\n        --this.m_controllerCount;\r\n        controller.m_prev = null;\r\n        controller.m_next = null;\r\n        // delete controller.m_world; // = null;\r\n        return controller;\r\n    }\r\n}\r\n// #endif\r\n/// Take a time step. This performs collision detection, integration,\r\n/// and constraint solution.\r\n/// @param timeStep the amount of time to simulate, this should not vary.\r\n/// @param velocityIterations for the velocity constraint solver.\r\n/// @param positionIterations for the position constraint solver.\r\nb2World.Step_s_step = new b2TimeStep();\r\nb2World.Step_s_stepTimer = new b2Timer();\r\nb2World.Step_s_timer = new b2Timer();\r\n// #endif\r\n/// Call this to draw shapes and other debug draw data.\r\nb2World.DrawDebugData_s_color = new b2Color(0, 0, 0);\r\nb2World.DrawDebugData_s_vs = b2Vec2.MakeArray(4);\r\nb2World.DrawDebugData_s_xf = new b2Transform();\r\nb2World.QueryFixtureShape_s_aabb = new b2AABB();\r\n/// Ray-cast the world for all fixtures in the path of the ray. Your callback\r\n/// controls whether you get the closest point, any point, or n-points.\r\n/// The ray-cast ignores shapes that contain the starting point.\r\n/// @param callback a user implemented callback class.\r\n/// @param point1 the ray starting point\r\n/// @param point2 the ray ending point\r\nb2World.RayCast_s_input = new b2RayCastInput();\r\nb2World.RayCast_s_output = new b2RayCastOutput();\r\nb2World.RayCast_s_point = new b2Vec2();\r\nb2World.DrawJoint_s_p1 = new b2Vec2();\r\nb2World.DrawJoint_s_p2 = new b2Vec2();\r\nb2World.DrawJoint_s_color = new b2Color(0.5, 0.8, 0.8);\r\nb2World.DrawJoint_s_c = new b2Color();\r\nb2World.DrawShape_s_ghostColor = new b2Color();\r\nb2World.SolveTOI_s_subStep = new b2TimeStep();\r\nb2World.SolveTOI_s_backup = new b2Sweep();\r\nb2World.SolveTOI_s_backup1 = new b2Sweep();\r\nb2World.SolveTOI_s_backup2 = new b2Sweep();\r\nb2World.SolveTOI_s_toi_input = new b2TOIInput();\r\nb2World.SolveTOI_s_toi_output = new b2TOIOutput();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJXb3JsZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0R5bmFtaWNzL2IyV29ybGQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRiwwREFBMEQ7QUFDMUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRixPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFNLE1BQU0sa0JBQWtCLENBQUM7QUFDM0UsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxPQUFPLEVBQVUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFdkcsT0FBTyxFQUFFLGNBQWMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDeEcsT0FBTyxFQUFXLFdBQVcsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBTW5FLE9BQU8sRUFBd0IsV0FBVyxFQUFlLE1BQU0sa0JBQWtCLENBQUM7QUFDbEYsT0FBTyxFQUFFLFdBQVcsRUFBbUIsTUFBTSxzQkFBc0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsZUFBZSxFQUF1QixNQUFNLDBCQUEwQixDQUFDO0FBQ2hGLE9BQU8sRUFBRSxlQUFlLEVBQXVCLE1BQU0sMEJBQTBCLENBQUM7QUFDaEYsT0FBTyxFQUFFLFdBQVcsRUFBbUIsTUFBTSxzQkFBc0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsWUFBWSxFQUFvQixNQUFNLHVCQUF1QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxZQUFZLEVBQW9CLE1BQU0sdUJBQXVCLENBQUM7QUFDdkUsT0FB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","/*\r\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n/**\r\n * A controller edge is used to connect bodies and controllers\r\n * together in a bipartite graph.\r\n */\r\nexport class b2ControllerEdge {\r\n    constructor(controller, body) {\r\n        this.prevBody = null; ///< the previous controller edge in the controllers's joint list\r\n        this.nextBody = null; ///< the next controller edge in the controllers's joint list\r\n        this.prevController = null; ///< the previous controller edge in the body's joint list\r\n        this.nextController = null; ///< the next controller edge in the body's joint list\r\n        this.controller = controller;\r\n        this.body = body;\r\n    }\r\n}\r\n/**\r\n * Base class for controllers. Controllers are a convience for\r\n * encapsulating common per-step functionality.\r\n */\r\nexport class b2Controller {\r\n    constructor() {\r\n        // m_world: b2World;\r\n        this.m_bodyList = null;\r\n        this.m_bodyCount = 0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n    }\r\n    /**\r\n     * Get the next controller in the world's body list.\r\n     */\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /**\r\n     * Get the previous controller in the world's body list.\r\n     */\r\n    GetPrev() {\r\n        return this.m_prev;\r\n    }\r\n    /**\r\n     * Get the parent world of this body.\r\n     */\r\n    // GetWorld() {\r\n    //   return this.m_world;\r\n    // }\r\n    /**\r\n     * Get the attached body list\r\n     */\r\n    GetBodyList() {\r\n        return this.m_bodyList;\r\n    }\r\n    /**\r\n     * Adds a body to the controller list.\r\n     */\r\n    AddBody(body) {\r\n        const edge = new b2ControllerEdge(this, body);\r\n        //Add edge to controller list\r\n        edge.nextBody = this.m_bodyList;\r\n        edge.prevBody = null;\r\n        if (this.m_bodyList) {\r\n            this.m_bodyList.prevBody = edge;\r\n        }\r\n        this.m_bodyList = edge;\r\n        ++this.m_bodyCount;\r\n        //Add edge to body list\r\n        edge.nextController = body.m_controllerList;\r\n        edge.prevController = null;\r\n        if (body.m_controllerList) {\r\n            body.m_controllerList.prevController = edge;\r\n        }\r\n        body.m_controllerList = edge;\r\n        ++body.m_controllerCount;\r\n    }\r\n    /**\r\n     * Removes a body from the controller list.\r\n     */\r\n    RemoveBody(body) {\r\n        //Assert that the controller is not empty\r\n        if (this.m_bodyCount <= 0) {\r\n            throw new Error();\r\n        }\r\n        //Find the corresponding edge\r\n        /*b2ControllerEdge*/\r\n        let edge = this.m_bodyList;\r\n        while (edge && edge.body !== body) {\r\n            edge = edge.nextBody;\r\n        }\r\n        //Assert that we are removing a body that is currently attached to the controller\r\n        if (edge === null) {\r\n            throw new Error();\r\n        }\r\n        //Remove edge from controller list\r\n        if (edge.prevBody) {\r\n            edge.prevBody.nextBody = edge.nextBody;\r\n        }\r\n        if (edge.nextBody) {\r\n            edge.nextBody.prevBody = edge.prevBody;\r\n        }\r\n        if (this.m_bodyList === edge) {\r\n            this.m_bodyList = edge.nextBody;\r\n        }\r\n        --this.m_bodyCount;\r\n        //Remove edge from body list\r\n        if (edge.nextController) {\r\n            edge.nextController.prevController = edge.prevController;\r\n        }\r\n        if (edge.prevController) {\r\n            edge.prevController.nextController = edge.nextController;\r\n        }\r\n        if (body.m_controllerList === edge) {\r\n            body.m_controllerList = edge.nextController;\r\n        }\r\n        --body.m_controllerCount;\r\n    }\r\n    /**\r\n     * Removes all bodies from the controller list.\r\n     */\r\n    Clear() {\r\n        while (this.m_bodyList) {\r\n            this.RemoveBody(this.m_bodyList.body);\r\n        }\r\n        this.m_bodyCount = 0;\r\n    }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvQ29udHJvbGxlcnMvYjJDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBUUg7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLGdCQUFnQjtJQU8zQixZQUFZLFVBQXdCLEVBQUUsSUFBWTtRQUozQyxhQUFRLEdBQTRCLElBQUksQ0FBQyxDQUFDLGlFQUFpRTtRQUMzRyxhQUFRLEdBQTRCLElBQUksQ0FBQyxDQUFDLDZEQUE2RDtRQUN2RyxtQkFBYyxHQUE0QixJQUFJLENBQUMsQ0FBQywwREFBMEQ7UUFDMUcsbUJBQWMsR0FBNEIsSUFBSSxDQUFDLENBQUMsc0RBQXNEO1FBRTNHLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQUVEOzs7R0FHRztBQUNILE1BQU0sT0FBZ0IsWUFBWTtJQUFsQztRQUNFLG9CQUFvQjtRQUNiLGVBQVUsR0FBNEIsSUFBSSxDQUFDO1FBQzNDLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ3hCLFdBQU0sR0FBd0IsSUFBSSxDQUFDO1FBQ25DLFdBQU0sR0FBd0IsSUFBSSxDQUFDO0lBcUg1QyxDQUFDO0lBekdDOztPQUVHO0lBQ0ksT0FBTztRQUNaLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRUQ7O09BRUc7SUFDSSxPQUFPO1FBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7T0FFRztJQUNILGVBQWU7SUFDZix5QkFBeUI7SUFDekIsSUFBSTtJQUVKOztPQUVHO0lBQ0ksV0FBVztRQUNoQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksT0FBTyxDQUFDLElBQVk7UUFD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","/*\r\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_CONTROLLER\r\nimport { b2Controller } from \"./b2Controller\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2_epsilon } from \"../Common/b2Settings\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\n/**\r\n * Calculates buoyancy forces for fluids in the form of a half\r\n * plane.\r\n */\r\nexport class b2BuoyancyController extends b2Controller {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * The outer surface normal\r\n         */\r\n        this.normal = new b2Vec2(0, 1);\r\n        /**\r\n         * The height of the fluid surface along the normal\r\n         */\r\n        this.offset = 0;\r\n        /**\r\n         * The fluid density\r\n         */\r\n        this.density = 0;\r\n        /**\r\n         * Fluid velocity, for drag calculations\r\n         */\r\n        this.velocity = new b2Vec2(0, 0);\r\n        /**\r\n         * Linear drag co-efficient\r\n         */\r\n        this.linearDrag = 0;\r\n        /**\r\n         * Angular drag co-efficient\r\n         */\r\n        this.angularDrag = 0;\r\n        /**\r\n         * If false, bodies are assumed to be uniformly dense, otherwise\r\n         * use the shapes densities\r\n         */\r\n        this.useDensity = false; //False by default to prevent a gotcha\r\n        /**\r\n         * If true, gravity is taken from the world instead of the\r\n         */\r\n        this.useWorldGravity = true;\r\n        /**\r\n         * Gravity vector, if the world's gravity is not used\r\n         */\r\n        this.gravity = new b2Vec2(0, 0);\r\n    }\r\n    Step(step) {\r\n        if (!this.m_bodyList) {\r\n            return;\r\n        }\r\n        if (this.useWorldGravity) {\r\n            this.gravity.Copy(this.m_bodyList.body.GetWorld().GetGravity());\r\n        }\r\n        for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n            const body = i.body;\r\n            if (!body.IsAwake()) {\r\n                //Buoyancy force is just a function of position,\r\n                //so unlike most forces, it is safe to ignore sleeping bodes\r\n                continue;\r\n            }\r\n            const areac = new b2Vec2();\r\n            const massc = new b2Vec2();\r\n            let area = 0;\r\n            let mass = 0;\r\n            for (let fixture = body.GetFixtureList(); fixture; fixture = fixture.m_next) {\r\n                const sc = new b2Vec2();\r\n                const sarea = fixture.GetShape().ComputeSubmergedArea(this.normal, this.offset, body.GetTransform(), sc);\r\n                area += sarea;\r\n                areac.x += sarea * sc.x;\r\n                areac.y += sarea * sc.y;\r\n                let shapeDensity = 0;\r\n                if (this.useDensity) {\r\n                    //TODO: Expose density publicly\r\n                    shapeDensity = fixture.GetDensity();\r\n                }\r\n                else {\r\n                    shapeDensity = 1;\r\n                }\r\n                mass += sarea * shapeDensity;\r\n                massc.x += sarea * sc.x * shapeDensity;\r\n                massc.y += sarea * sc.y * shapeDensity;\r\n            }\r\n            areac.x /= area;\r\n            areac.y /= area;\r\n            //    b2Vec2 localCentroid = b2MulT(body->GetXForm(),areac);\r\n            massc.x /= mass;\r\n            massc.y /= mass;\r\n            if (area < b2_epsilon) {\r\n                continue;\r\n            }\r\n            //Buoyancy\r\n            const buoyancyForce = this.gravity.Clone().SelfNeg();\r\n            buoyancyForce.SelfMul(this.density * area);\r\n            body.ApplyForce(buoyancyForce, massc);\r\n            //Linear drag\r\n            const dragForce = body.GetLinearVelocityFromWorldPoint(areac, new b2Vec2());\r\n            dragForce.SelfSub(this.velocity);\r\n            dragForce.SelfMul((-this.linearDrag * area));\r\n            body.ApplyForce(dragForce, areac);\r\n            //Angular drag\r\n            //TODO: Something that makes more physical sense?\r\n            body.ApplyTorque((-body.GetInertia() / body.GetMass() * area * body.GetAngularVelocity() * this.angularDrag));\r\n        }\r\n    }\r\n    Draw(debugDraw) {\r\n        const r = 100;\r\n        const p1 = new b2Vec2();\r\n        const p2 = new b2Vec2();\r\n        p1.x = this.normal.x * this.offset + this.normal.y * r;\r\n        p1.y = this.normal.y * this.offset - this.normal.x * r;\r\n        p2.x = this.normal.x * this.offset - this.normal.y * r;\r\n        p2.y = this.normal.y * this.offset + this.normal.x * r;\r\n        const color = new b2Color(0, 0, 0.8);\r\n        debugDraw.DrawSegment(p1, p2, color);\r\n    }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJCdW95YW5jeUNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9Cb3gyRC9Db250cm9sbGVycy9iMkJ1b3lhbmN5Q29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRztBQUVILDJCQUEyQjtBQUUzQixPQUFPLEVBQUUsWUFBWSxFQUFvQixNQUFNLGdCQUFnQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUUxQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbEQsT0FBTyxFQUFVLE9BQU8sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRW5EOzs7R0FHRztBQUNILE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxZQUFZO0lBQXREOztRQUNFOztXQUVHO1FBQ2EsV0FBTSxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMxQzs7V0FFRztRQUNJLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFDbEI7O1dBRUc7UUFDSSxZQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ25COztXQUVHO1FBQ2EsYUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUM1Qzs7V0FFRztRQUNJLGVBQVUsR0FBRyxDQUFDLENBQUM7UUFDdEI7O1dBRUc7UUFDSSxnQkFBVyxHQUFHLENBQUMsQ0FBQztRQUN2Qjs7O1dBR0c7UUFDSSxlQUFVLEdBQUcsS0FBSyxDQUFDLENBQUMsc0NBQXNDO1FBQ2pFOztXQUVHO1FBQ0ksb0JBQWUsR0FBRyxJQUFJLENBQUM7UUFDOUI7O1dBRUc7UUFDYSxZQUFPLEdBQUcsSUFBSSxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBeUU3QyxDQUFDO0lBdkVRLElBQUksQ0FBQyxJQUFnQjtRQUMxQixJQUFJLENBQUMsSUFB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","/*\r\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_CONTROLLER\r\nimport { b2Controller } from \"./b2Controller\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\n/**\r\n * Applies a force every frame\r\n */\r\nexport class b2ConstantAccelController extends b2Controller {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * The acceleration to apply\r\n         */\r\n        this.A = new b2Vec2(0, 0);\r\n    }\r\n    Step(step) {\r\n        const dtA = b2Vec2.MulSV(step.dt, this.A, b2ConstantAccelController.Step_s_dtA);\r\n        for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n            const body = i.body;\r\n            if (!body.IsAwake()) {\r\n                continue;\r\n            }\r\n            body.SetLinearVelocity(b2Vec2.AddVV(body.GetLinearVelocity(), dtA, b2Vec2.s_t0));\r\n        }\r\n    }\r\n    Draw(draw) { }\r\n}\r\nb2ConstantAccelController.Step_s_dtA = new b2Vec2();\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb25zdGFudEFjY2VsQ29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbnRyb2xsZXJzL2IyQ29uc3RhbnRBY2NlbENvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCwyQkFBMkI7QUFFM0IsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUkxQzs7R0FFRztBQUNILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxZQUFZO0lBQTNEOztRQUNFOztXQUVHO1FBQ2EsTUFBQyxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQWV2QyxDQUFDO0lBYlEsSUFBSSxDQUFDLElBQWdCO1FBQzFCLE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLHlCQUF5QixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2hGLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUU7WUFDL0MsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUNuQixTQUFTO2FBQ1Y7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDbEY7SUFDSCxDQUFDO0lBR00sSUFBSSxDQUFDLElBQVksSUFBRyxDQUFDOztBQUZiLG9DQUFVLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQztBQUszQyxTQUFTIn0=","/*\r\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_CONTROLLER\r\nimport { b2Controller } from \"./b2Controller\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\n/**\r\n * Applies a force every frame\r\n */\r\nexport class b2ConstantForceController extends b2Controller {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * The force to apply\r\n         */\r\n        this.F = new b2Vec2(0, 0);\r\n    }\r\n    Step(step) {\r\n        for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n            const body = i.body;\r\n            if (!body.IsAwake()) {\r\n                continue;\r\n            }\r\n            body.ApplyForce(this.F, body.GetWorldCenter());\r\n        }\r\n    }\r\n    Draw(draw) { }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb25zdGFudEZvcmNlQ29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbnRyb2xsZXJzL2IyQ29uc3RhbnRGb3JjZUNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCwyQkFBMkI7QUFFM0IsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUkxQzs7R0FFRztBQUNILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxZQUFZO0lBQTNEOztRQUNFOztXQUVHO1FBQ2EsTUFBQyxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQWF2QyxDQUFDO0lBWFEsSUFBSSxDQUFDLElBQWdCO1FBQzFCLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUU7WUFDL0MsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUNuQixTQUFTO2FBQ1Y7WUFDRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7U0FDaEQ7SUFDSCxDQUFDO0lBRU0sSUFBSSxDQUFDLElBQVksSUFBRyxDQUFDO0NBQzdCO0FBRUQsU0FBUyJ9","/*\r\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_CONTROLLER\r\nimport { b2Controller } from \"./b2Controller\";\r\nimport { b2_epsilon } from \"../Common/b2Settings\";\r\nimport { b2Sqrt, b2Vec2 } from \"../Common/b2Math\";\r\n/**\r\n * Applies simplified gravity between every pair of bodies\r\n */\r\nexport class b2GravityController extends b2Controller {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Specifies the strength of the gravitiation force\r\n         */\r\n        this.G = 1;\r\n        /**\r\n         * If true, gravity is proportional to r^-2, otherwise r^-1\r\n         */\r\n        this.invSqr = true;\r\n    }\r\n    /**\r\n     * @see b2Controller::Step\r\n     */\r\n    Step(step) {\r\n        if (this.invSqr) {\r\n            for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n                const body1 = i.body;\r\n                const p1 = body1.GetWorldCenter();\r\n                const mass1 = body1.GetMass();\r\n                for (let j = this.m_bodyList; j && j !== i; j = j.nextBody) {\r\n                    const body2 = j.body;\r\n                    const p2 = body2.GetWorldCenter();\r\n                    const mass2 = body2.GetMass();\r\n                    const dx = p2.x - p1.x;\r\n                    const dy = p2.y - p1.y;\r\n                    const r2 = dx * dx + dy * dy;\r\n                    if (r2 < b2_epsilon) {\r\n                        continue;\r\n                    }\r\n                    const f = b2GravityController.Step_s_f.Set(dx, dy);\r\n                    f.SelfMul(this.G / r2 / b2Sqrt(r2) * mass1 * mass2);\r\n                    if (body1.IsAwake()) {\r\n                        body1.ApplyForce(f, p1);\r\n                    }\r\n                    if (body2.IsAwake()) {\r\n                        body2.ApplyForce(f.SelfMul(-1), p2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n                const body1 = i.body;\r\n                const p1 = body1.GetWorldCenter();\r\n                const mass1 = body1.GetMass();\r\n                for (let j = this.m_bodyList; j && j !== i; j = j.nextBody) {\r\n                    const body2 = j.body;\r\n                    const p2 = body2.GetWorldCenter();\r\n                    const mass2 = body2.GetMass();\r\n                    const dx = p2.x - p1.x;\r\n                    const dy = p2.y - p1.y;\r\n                    const r2 = dx * dx + dy * dy;\r\n                    if (r2 < b2_epsilon) {\r\n                        continue;\r\n                    }\r\n                    const f = b2GravityController.Step_s_f.Set(dx, dy);\r\n                    f.SelfMul(this.G / r2 * mass1 * mass2);\r\n                    if (body1.IsAwake()) {\r\n                        body1.ApplyForce(f, p1);\r\n                    }\r\n                    if (body2.IsAwake()) {\r\n                        body2.ApplyForce(f.SelfMul(-1), p2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Draw(draw) { }\r\n}\r\nb2GravityController.Step_s_f = new b2Vec2();\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJHcmF2aXR5Q29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbnRyb2xsZXJzL2IyR3Jhdml0eUNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCwyQkFBMkI7QUFFM0IsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTlDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBR2xEOztHQUVHO0FBQ0gsTUFBTSxPQUFPLG1CQUFvQixTQUFRLFlBQVk7SUFBckQ7O1FBQ0U7O1dBRUc7UUFDSSxNQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2I7O1dBRUc7UUFDSSxXQUFNLEdBQUcsSUFBSSxDQUFDO0lBNkR2QixDQUFDO0lBM0RDOztPQUVHO0lBQ0ksSUFBSSxDQUFDLElBQWdCO1FBQzFCLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUU7Z0JBQy9DLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQ3JCLE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFDbEMsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUM5QixLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUU7b0JBQzFELE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7b0JBQ3JCLE1B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","/*\r\n * Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_CONTROLLER\r\nimport { b2Controller } from \"./b2Controller\";\r\nimport { b2Mat22, b2Vec2, b2Max } from \"../Common/b2Math\";\r\nimport { b2_epsilon } from \"../Common/b2Settings\";\r\n/**\r\n * Applies top down linear damping to the controlled bodies\r\n * The damping is calculated by multiplying velocity by a matrix\r\n * in local co-ordinates.\r\n */\r\nexport class b2TensorDampingController extends b2Controller {\r\n    constructor() {\r\n        super(...arguments);\r\n        /// Tensor to use in damping model\r\n        this.T = new b2Mat22();\r\n        /*Some examples (matrixes in format (row1; row2))\r\n        (-a 0; 0 -a)    Standard isotropic damping with strength a\r\n        ( 0 a; -a 0)    Electron in fixed field - a force at right angles to velocity with proportional magnitude\r\n        (-a 0; 0 -b)    Differing x and y damping. Useful e.g. for top-down wheels.\r\n        */\r\n        //By the way, tensor in this case just means matrix, don't let the terminology get you down.\r\n        /// Set this to a positive number to clamp the maximum amount of damping done.\r\n        this.maxTimestep = 0;\r\n    }\r\n    // Typically one wants maxTimestep to be 1/(max eigenvalue of T), so that damping will never cause something to reverse direction\r\n    /**\r\n     * @see b2Controller::Step\r\n     */\r\n    Step(step) {\r\n        let timestep = step.dt;\r\n        if (timestep <= b2_epsilon) {\r\n            return;\r\n        }\r\n        if (timestep > this.maxTimestep && this.maxTimestep > 0) {\r\n            timestep = this.maxTimestep;\r\n        }\r\n        for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n            const body = i.body;\r\n            if (!body.IsAwake()) {\r\n                continue;\r\n            }\r\n            const damping = body.GetWorldVector(b2Mat22.MulMV(this.T, body.GetLocalVector(body.GetLinearVelocity(), b2Vec2.s_t0), b2Vec2.s_t1), b2TensorDampingController.Step_s_damping);\r\n            //    body->SetLinearVelocity(body->GetLinearVelocity() + timestep * damping);\r\n            body.SetLinearVelocity(b2Vec2.AddVV(body.GetLinearVelocity(), b2Vec2.MulSV(timestep, damping, b2Vec2.s_t0), b2Vec2.s_t1));\r\n        }\r\n    }\r\n    Draw(draw) { }\r\n    /**\r\n     * Sets damping independantly along the x and y axes\r\n     */\r\n    SetAxisAligned(xDamping, yDamping) {\r\n        this.T.ex.x = (-xDamping);\r\n        this.T.ex.y = 0;\r\n        this.T.ey.x = 0;\r\n        this.T.ey.y = (-yDamping);\r\n        if (xDamping > 0 || yDamping > 0) {\r\n            this.maxTimestep = 1 / b2Max(xDamping, yDamping);\r\n        }\r\n        else {\r\n            this.maxTimestep = 0;\r\n        }\r\n    }\r\n}\r\nb2TensorDampingController.Step_s_damping = new b2Vec2();\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJUZW5zb3JEYW1waW5nQ29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbnRyb2xsZXJzL2IyVGVuc29yRGFtcGluZ0NvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCwyQkFBMkI7QUFFM0IsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTFELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUdsRDs7OztHQUlHO0FBQ0gsTUFBTSxPQUFPLHlCQUEwQixTQUFRLFlBQVk7SUFBM0Q7O1FBQ0ksa0NBQWtDO1FBQ2xCLE1BQUMsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQ2xDOzs7O1VBSUU7UUFDRiw0RkFBNEY7UUFFNUYsOEVBQThFO1FBQ3ZFLGdCQUFXLEdBQUcsQ0FBQyxDQUFDO0lBaUQzQixDQUFDO0lBaERHLGlJQUFpSTtJQUVqSTs7T0FFRztJQUNJLElBQUksQ0FBQyxJQUFnQjtRQUN4QixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3ZCLElBQUksUUFBUSxJQUFJLFVBQVUsRUFBRTtZQUN4QixPQUFPO1NBQ1Y7UUFDRCxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxFQUFFO1lBQ3JELFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQy9CO1FBQ0QsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRTtZQUM3QyxNQUFNLElBQUksR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUU7Z0JBQ2pCLFNBQVM7YUFDWjtZQUNELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQ25DLE9BQU8sQ0FBQyxLQUFLLENBQ1QsSUFBSSxDQUFDLENBQUMsRUFDTixJQUFJLENBQUMsY0FBYyxDQUNuQixJQUFJLENBQUMsaUJBQWlCLEVBQUUsRUFDeEIsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUNaLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFDaEIseUJBQXlCLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDMUMsOEVBQThFO1lBQzlFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDN0g7SUFDTCxDQUFDO0lBR00sSUFBSSxDQUFDLElBQVksSUFBRyxDQUFDO0lBRTVCOztPQUVHO0lBQ0ksY0FBYyxDQUFDLFFBQWdCLEVBQUUsUUFBZ0I7UUFDdEQsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDaEIsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMxQixJQUFJLFFBQVEsR0FBRyxDQUFDLElBQUksUUFBUSxHQUFHLENBQUMsRUFBRTtZQUNoQyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQ2xEO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztTQUN0QjtJQUNILENBQUM7O0FBakJjLHdDQUFjLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQztBQW9CakQsU0FBUyJ9","/*\r\n* Copyright (c) 2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_pi, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2Atan2, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\n///\r\nexport class b2RopeDef {\r\n    constructor() {\r\n        ///\r\n        this.vertices = [];\r\n        ///\r\n        this.count = 0;\r\n        ///\r\n        this.masses = [];\r\n        ///\r\n        this.gravity = new b2Vec2(0, 0);\r\n        ///\r\n        this.damping = 0.1;\r\n        /// Stretching stiffness\r\n        this.k2 = 0.9;\r\n        /// Bending stiffness. Values above 0.5 can make the simulation blow up.\r\n        this.k3 = 0.1;\r\n    }\r\n}\r\n///\r\nexport class b2Rope {\r\n    constructor() {\r\n        this.m_count = 0;\r\n        this.m_ps = [];\r\n        this.m_p0s = [];\r\n        this.m_vs = [];\r\n        this.m_ims = [];\r\n        this.m_Ls = [];\r\n        this.m_as = [];\r\n        this.m_gravity = new b2Vec2();\r\n        this.m_damping = 0;\r\n        this.m_k2 = 1;\r\n        this.m_k3 = 0.1;\r\n    }\r\n    GetVertexCount() {\r\n        return this.m_count;\r\n    }\r\n    GetVertices() {\r\n        return this.m_ps;\r\n    }\r\n    ///\r\n    Initialize(def) {\r\n        // DEBUG: b2Assert(def.count >= 3);\r\n        this.m_count = def.count;\r\n        // this.m_ps = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_ps = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_p0s = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_p0s = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_vs = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_vs = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_ims = (float32*)b2Alloc(this.m_count * sizeof(float32));\r\n        this.m_ims = b2MakeNumberArray(this.m_count);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_ps[i].Copy(def.vertices[i]);\r\n            this.m_p0s[i].Copy(def.vertices[i]);\r\n            this.m_vs[i].SetZero();\r\n            const m = def.masses[i];\r\n            if (m > 0) {\r\n                this.m_ims[i] = 1 / m;\r\n            }\r\n            else {\r\n                this.m_ims[i] = 0;\r\n            }\r\n        }\r\n        const count2 = this.m_count - 1;\r\n        const count3 = this.m_count - 2;\r\n        // this.m_Ls = (float32*)be2Alloc(count2 * sizeof(float32));\r\n        this.m_Ls = b2MakeNumberArray(count2);\r\n        // this.m_as = (float32*)b2Alloc(count3 * sizeof(float32));\r\n        this.m_as = b2MakeNumberArray(count3);\r\n        for (let i = 0; i < count2; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            this.m_Ls[i] = b2Vec2.DistanceVV(p1, p2);\r\n        }\r\n        for (let i = 0; i < count3; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const p3 = this.m_ps[i + 2];\r\n            const d1 = b2Vec2.SubVV(p2, p1, b2Vec2.s_t0);\r\n            const d2 = b2Vec2.SubVV(p3, p2, b2Vec2.s_t1);\r\n            const a = b2Vec2.CrossVV(d1, d2);\r\n            const b = b2Vec2.DotVV(d1, d2);\r\n            this.m_as[i] = b2Atan2(a, b);\r\n        }\r\n        this.m_gravity.Copy(def.gravity);\r\n        this.m_damping = def.damping;\r\n        this.m_k2 = def.k2;\r\n        this.m_k3 = def.k3;\r\n    }\r\n    ///\r\n    Step(h, iterations) {\r\n        if (h === 0) {\r\n            return;\r\n        }\r\n        const d = Math.exp(-h * this.m_damping);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_p0s[i].Copy(this.m_ps[i]);\r\n            if (this.m_ims[i] > 0) {\r\n                this.m_vs[i].SelfMulAdd(h, this.m_gravity);\r\n            }\r\n            this.m_vs[i].SelfMul(d);\r\n            this.m_ps[i].SelfMulAdd(h, this.m_vs[i]);\r\n        }\r\n        for (let i = 0; i < iterations; ++i) {\r\n            this.SolveC2();\r\n            this.SolveC3();\r\n            this.SolveC2();\r\n        }\r\n        const inv_h = 1 / h;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            b2Vec2.MulSV(inv_h, b2Vec2.SubVV(this.m_ps[i], this.m_p0s[i], b2Vec2.s_t0), this.m_vs[i]);\r\n        }\r\n    }\r\n    SolveC2() {\r\n        const count2 = this.m_count - 1;\r\n        for (let i = 0; i < count2; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const d = b2Vec2.SubVV(p2, p1, b2Rope.s_d);\r\n            const L = d.Normalize();\r\n            const im1 = this.m_ims[i];\r\n            const im2 = this.m_ims[i + 1];\r\n            if (im1 + im2 === 0) {\r\n                continue;\r\n            }\r\n            const s1 = im1 / (im1 + im2);\r\n            const s2 = im2 / (im1 + im2);\r\n            p1.SelfMulSub(this.m_k2 * s1 * (this.m_Ls[i] - L), d);\r\n            p2.SelfMulAdd(this.m_k2 * s2 * (this.m_Ls[i] - L), d);\r\n            // this.m_ps[i] = p1;\r\n            // this.m_ps[i + 1] = p2;\r\n        }\r\n    }\r\n    SetAngle(angle) {\r\n        const count3 = this.m_count - 2;\r\n        for (let i = 0; i < count3; ++i) {\r\n            this.m_as[i] = angle;\r\n        }\r\n    }\r\n    SolveC3() {\r\n        const count3 = this.m_count - 2;\r\n        for (let i = 0; i < count3; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const p3 = this.m_ps[i + 2];\r\n            const m1 = this.m_ims[i];\r\n            const m2 = this.m_ims[i + 1];\r\n            const m3 = this.m_ims[i + 2];\r\n            const d1 = b2Vec2.SubVV(p2, p1, b2Rope.s_d1);\r\n            const d2 = b2Vec2.SubVV(p3, p2, b2Rope.s_d2);\r\n            const L1sqr = d1.LengthSquared();\r\n            const L2sqr = d2.LengthSquared();\r\n            if (L1sqr * L2sqr === 0) {\r\n                continue;\r\n            }\r\n            const a = b2Vec2.CrossVV(d1, d2);\r\n            const b = b2Vec2.DotVV(d1, d2);\r\n            let angle = b2Atan2(a, b);\r\n            const Jd1 = b2Vec2.MulSV((-1 / L1sqr), d1.SelfSkew(), b2Rope.s_Jd1);\r\n            const Jd2 = b2Vec2.MulSV((1 / L2sqr), d2.SelfSkew(), b2Rope.s_Jd2);\r\n            const J1 = b2Vec2.NegV(Jd1, b2Rope.s_J1);\r\n            const J2 = b2Vec2.SubVV(Jd1, Jd2, b2Rope.s_J2);\r\n            const J3 = Jd2;\r\n            let mass = m1 * b2Vec2.DotVV(J1, J1) + m2 * b2Vec2.DotVV(J2, J2) + m3 * b2Vec2.DotVV(J3, J3);\r\n            if (mass === 0) {\r\n                continue;\r\n            }\r\n            mass = 1 / mass;\r\n            let C = angle - this.m_as[i];\r\n            while (C > b2_pi) {\r\n                angle -= 2 * b2_pi;\r\n                C = angle - this.m_as[i];\r\n            }\r\n            while (C < -b2_pi) {\r\n                angle += 2 * b2_pi;\r\n                C = angle - this.m_as[i];\r\n            }\r\n            const impulse = -this.m_k3 * mass * C;\r\n            p1.SelfMulAdd((m1 * impulse), J1);\r\n            p2.SelfMulAdd((m2 * impulse), J2);\r\n            p3.SelfMulAdd((m3 * impulse), J3);\r\n            // this.m_ps[i] = p1;\r\n            // this.m_ps[i + 1] = p2;\r\n            // this.m_ps[i + 2] = p3;\r\n        }\r\n    }\r\n    Draw(draw) {\r\n        const c = new b2Color(0.4, 0.5, 0.7);\r\n        for (let i = 0; i < this.m_count - 1; ++i) {\r\n            draw.DrawSegment(this.m_ps[i], this.m_ps[i + 1], c);\r\n        }\r\n    }\r\n}\r\n///\r\nb2Rope.s_d = new b2Vec2();\r\nb2Rope.s_d1 = new b2Vec2();\r\nb2Rope.s_d2 = new b2Vec2();\r\nb2Rope.s_Jd1 = new b2Vec2();\r\nb2Rope.s_Jd2 = new b2Vec2();\r\nb2Rope.s_J1 = new b2Vec2();\r\nb2Rope.s_J2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/**\r\n * \\mainpage Box2D API Documentation\r\n * \\section intro_sec Getting Started\r\n * For documentation please see http://box2d.org/documentation.html\r\n * For discussion please visit http://box2d.org/forum\r\n */\r\n// These include files constitute the main Box2D API\r\nexport * from \"./Common/b2Settings\";\r\nexport * from \"./Common/b2Math\";\r\nexport * from \"./Common/b2Draw\";\r\nexport * from \"./Common/b2Timer\";\r\nexport * from \"./Common/b2GrowableStack\";\r\nexport * from \"./Common/b2BlockAllocator\";\r\nexport * from \"./Common/b2StackAllocator\";\r\nexport * from \"./Collision/b2Collision\";\r\nexport * from \"./Collision/b2Distance\";\r\nexport * from \"./Collision/b2BroadPhase\";\r\nexport * from \"./Collision/b2DynamicTree\";\r\nexport * from \"./Collision/b2TimeOfImpact\";\r\nexport * from \"./Collision/b2CollideCircle\";\r\nexport * from \"./Collision/b2CollidePolygon\";\r\nexport * from \"./Collision/b2CollideEdge\";\r\nexport * from \"./Collision/Shapes/b2Shape\";\r\nexport * from \"./Collision/Shapes/b2CircleShape\";\r\nexport * from \"./Collision/Shapes/b2PolygonShape\";\r\nexport * from \"./Collision/Shapes/b2EdgeShape\";\r\nexport * from \"./Collision/Shapes/b2ChainShape\";\r\nexport * from \"./Dynamics/b2Fixture\";\r\nexport * from \"./Dynamics/b2Body\";\r\nexport * from \"./Dynamics/b2World\";\r\nexport * from \"./Dynamics/b2WorldCallbacks\";\r\nexport * from \"./Dynamics/b2Island\";\r\nexport * from \"./Dynamics/b2TimeStep\";\r\nexport * from \"./Dynamics/b2ContactManager\";\r\nexport * from \"./Dynamics/Contacts/b2Contact\";\r\nexport * from \"./Dynamics/Contacts/b2ContactFactory\";\r\nexport * from \"./Dynamics/Contacts/b2ContactSolver\";\r\nexport * from \"./Dynamics/Contacts/b2CircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2PolygonContact\";\r\nexport * from \"./Dynamics/Contacts/b2PolygonAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2EdgeAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2EdgeAndPolygonContact\";\r\nexport * from \"./Dynamics/Contacts/b2ChainAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2ChainAndPolygonContact\";\r\nexport * from \"./Dynamics/Joints/b2Joint\";\r\nexport * from \"./Dynamics/Joints/b2AreaJoint\";\r\nexport * from \"./Dynamics/Joints/b2DistanceJoint\";\r\nexport * from \"./Dynamics/Joints/b2FrictionJoint\";\r\nexport * from \"./Dynamics/Joints/b2GearJoint\";\r\nexport * from \"./Dynamics/Joints/b2MotorJoint\";\r\nexport * from \"./Dynamics/Joints/b2MouseJoint\";\r\nexport * from \"./Dynamics/Joints/b2PrismaticJoint\";\r\nexport * from \"./Dynamics/Joints/b2PulleyJoint\";\r\nexport * from \"./Dynamics/Joints/b2RevoluteJoint\";\r\nexport * from \"./Dynamics/Joints/b2RopeJoint\";\r\nexport * from \"./Dynamics/Joints/b2WeldJoint\";\r\nexport * from \"./Dynamics/Joints/b2WheelJoint\";\r\n// #if B2_ENABLE_CONTROLLER\r\nexport * from \"./Controllers/b2Controller\";\r\nexport * from \"./Controllers/b2BuoyancyController\";\r\nexport * from \"./Controllers/b2ConstantAccelController\";\r\nexport * from \"./Controllers/b2ConstantForceController\";\r\nexport * from \"./Controllers/b2GravityController\";\r\nexport * from \"./Controllers/b2TensorDampingController\";\r\n// #endif\r\n// #if B2_ENABLE_PARTICLE\r\nexport * from \"./Particle/b2Particle\";\r\nexport * from \"./Particle/b2ParticleGroup\";\r\nexport * from \"./Particle/b2ParticleSystem\";\r\n// #endif\r\nexport * from \"./Rope/b2Rope\";\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm94MkQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9Cb3gyRC9Cb3gyRC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGOzs7OztHQUtHO0FBRUgsb0RBQW9EO0FBRXBELGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLGlCQUFpQixDQUFDO0FBQ2hDLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLDJCQUEyQixDQUFDO0FBQzFDLGNBQWMsMkJBQTJCLENBQUM7QUFFMUMsY0FBYyx5QkFBeUIsQ0FBQztBQUN4QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyw4QkFBOEIsQ0FBQztBQUM3QyxjQUFjLDJCQUEyQixDQUFDO0FBRTFDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxpQ0FBaUMsQ0FBQztBQUVoRCxjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYyx1QkFBdUIsQ0FBQztBQUN0QyxjQUFjLDZCQUE2QixDQUFDO0FBRTVDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLHFDQUFxQyxDQUFDO0FBQ3BELGNBQWMscUNBQXFDLENBQUM7QUFDcEQsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLCtDQUErQyxDQUFDO0FBQzlELGNBQWMsNENBQTRDLENBQUM7QUFDM0QsY0FBYyw2Q0FBNkMsQ0FBQztBQUM1RCxjQUFjLDZDQUE2QyxDQUFDO0FBQzVELGNBQWMsOENBQThDLENBQUM7QUFFN0QsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsbUNBQW1DLENBQUM7QUFDbEQsY0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLG9DQUFvQyxDQUFDO0FBQ25ELGNBQWMsaUNBQWlDLENBQUM7QUFDaEQsY0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUUvQywyQkFBMkI7QUFDM0IsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLG9DQUFvQyxDQUFDO0FBQ25ELGNBQWMseUNBQXlDLENBQUM7QUFDeEQsY0FBYyx5Q0FBeUMsQ0FBQztBQUN4RCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMseUNBQXlDLENBQUM7QUFDeEQsU0FBUztBQUVULHlCQUF5QjtBQUN6QixjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyw2QkFBNkIsQ0FBQztBQUM1QyxTQUFTO0FBRVQsY0FBYyxlQUFlLENBQUMifQ==","﻿\r\nimport {\r\n\tb2Vec2, b2Transform, b2Rot,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact,\r\n} from \"./Physics.js\";\r\n\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { Rectangle } from \"../math.js\";\r\n\r\n\r\nexport class FootholdChain {\r\n\t/**\r\n\t * @param {number} id\r\n\t */\r\n\tconstructor(id) {\r\n\t\tthis.id = id;\r\n\r\n\t\t/** @type {FootholdSingle[]} */\r\n\t\tthis.footholds = [];\r\n\r\n\t\tthis.bound = new Rectangle();\r\n\r\n\t\tthis.loop = false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {FootholdSingle} head - foothold chain head\r\n\t * @param {FootholdSingle[]} map_footholds - map footholds\r\n\t * @param {function} type - foothold constructor\r\n\t */\r\n\tinit(head, map_footholds, type) {\r\n\t\tlet left, top, right, bottom;\r\n\r\n\t\tleft = head.x1;\r\n\t\ttop = head.y1;\r\n\t\tright = head.x2;\r\n\t\tbottom = head.y2;\r\n\r\n\t\tfor (let fh = head, childIndex = 0; fh != null; fh = map_footholds[fh.next], ++childIndex) {\r\n\t\t\tleft = Math.min(left, fh.x1, fh.x2);\r\n\t\t\ttop = Math.min(top, fh.y1, fh.y2);\r\n\t\t\tright = Math.max(right, fh.x1, fh.x2);\r\n\t\t\tbottom = Math.max(bottom, fh.y1, fh.y2);\r\n\r\n\t\t\tthis.footholds.push(fh);\r\n\r\n\t\t\tif (fh.next == head.id) {\r\n\t\t\t\tthis.loop = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.bound.parse(left, top, right, bottom);\r\n\r\n\t\tthis.FootholdType = type;\r\n\r\n\t\tif (type == FootholdSingle) {\r\n\t\t\tthis.footholds.forEach((fh, childIndex) => {\r\n\t\t\t\tfh.init(this, childIndex);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if (type == FootholdChainChild) {\r\n\t\t\tlet center = this.bound.center;\r\n\t\t\tlet xf = new b2Transform();\r\n\r\n\t\t\txf.SetPositionXY(center.x, center.y);\r\n\r\n\t\t\tthis.footholds.forEach((fh, childIndex) => {\r\n\t\t\t\tfh.init(this, childIndex, xf);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} childIndex\r\n\t * @returns {FootholdChainChild}\r\n\t */\r\n\tgetFootholdFromContact(childIndex) {\r\n\t\treturn this.footholds[childIndex];\r\n\t}\r\n}\r\n\r\nexport class FootholdSingle {\r\n\t/**\r\n\t * @param {object} _raw\r\n\t * @param {number} index\r\n\t * @param {number} layerIndex\r\n\t * @param {number} groupIndex\r\n\t */\r\n\tconstructor(_raw, index, layerIndex, groupIndex) {\r\n\t\tthis._raw = _raw;\r\n\r\n\t\t// ground.footholds\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.layer = layerIndex | 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.group = groupIndex | 0;\r\n\r\n\t\t/** @type {number} - in ground.footholds */\r\n\t\tthis.id = index;\r\n\t\t\r\n\t\t/** @type {number} - prev id */\r\n\t\tthis.prev = _raw.prev ? (_raw.prev - 1) : null;\r\n\r\n\t\t/** @type {number} - next id */\r\n\t\tthis.next = _raw.next ? (_raw.next - 1) : null;\r\n\r\n\t\t// chain.footholds\r\n\r\n\t\t/** @type {FootholdChain} */\r\n\t\tthis.chain = null;\r\n\r\n\t\t/** @type {number} - in chain.footholds */\r\n\t\tthis.childIndex = null;\r\n\r\n\t\t// body\r\n\t\t\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.m_angle = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.m_length = 0;\r\n\r\n\t\t// debug\r\n\r\n\t\t/** @type {number} - this和next_fh的夾角 */\r\n\t\tthis.next_a = undefined;\r\n\r\n\t\tthis.next_a_deg = undefined;\r\n\t\t\r\n\t\tthis.$showDebugInfo = false;\r\n\t}\r\n\t\r\n\tgetFootholdFromContact() {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {FootholdChain} chain\r\n\t * @param {number} childIndex\r\n\t * @param {b2Transform} body_xf\r\n\t */\r\n\tinit(chain, childIndex, body_xf) {\r\n\t\tlet x1, y1, x2, y2;\r\n\t\t\r\n\t\tthis.chain = chain;\r\n\t\tthis.childIndex = childIndex;\r\n\r\n\t\tx1 = this.x1 / $gv.CANVAS_SCALE;\r\n\t\ty1 = this.y1 / $gv.CANVAS_SCALE;\r\n\t\tx2 = this.x2 / $gv.CANVAS_SCALE;\r\n\t\ty2 = this.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\tconst dx = x2 - x1;\r\n\t\tconst dy = y2 - y1;\r\n\r\n\t\tif (dy == 0) {\r\n\t\t\tthis.m_angle = dx < 0 ? Math.PI : 0;\r\n\t\t\tthis.m_length = dx;\r\n\t\t}\r\n\t\telse if (dx == 0) {\r\n\t\t\tthis.m_angle = dy < 0 ? (-Math.PI * 0.5) : (Math.PI * 0.5);\r\n\t\t\tthis.m_length = dy;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.m_angle = Math.atan2(dy, dx);\r\n\t\t\tthis.m_length = Math.sqrt(dy ** 2 + dx ** 2);\r\n\t\t}\r\n\t}\r\n\r\n\tGetVertex1() {\r\n\t\treturn new b2Vec2(this.x1 / $gv.CANVAS_SCALE, this.y1 / $gv.CANVAS_SCALE);\r\n\t}\r\n\r\n\tGetVertex2() {\r\n\t\treturn new b2Vec2(this.x2 / $gv.CANVAS_SCALE, this.y2 / $gv.CANVAS_SCALE);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tGetWorldCenter() {\r\n\t\treturn this.body.GetWorldCenter();\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalPoint(worldPoint, out) {\r\n\t\treturn this.body.GetLocalPoint(worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n\t\treturn this.body.GetLinearVelocityFromWorldPoint(worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldVector\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalVector(worldVector, out) {\r\n\t\treturn this.body.GetLocalVector(worldVector, out);\r\n\t}\r\n\r\n\t/** @type {FootholdSingle} */\r\n\tget next_fh() {\r\n\t\tconst footholds = this.body.m_world.ground.footholds;\r\n\t\treturn footholds[this.next];\r\n\t}\r\n\t/** @type {FootholdSingle} */\r\n\tget prev_fh() {\r\n\t\tconst footholds = this.body.m_world.ground.footholds;\r\n\t\treturn footholds[this.prev];\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget x1() { return this._raw.x1; }\r\n\t/** @type {number} */\r\n\tget y1() { return this._raw.y1; }\r\n\t/** @type {number} */\r\n\tget x2() { return this._raw.x2; }\r\n\t/** @type {number} */\r\n\tget y2() { return this._raw.y2; }\r\n\r\n\tget is_empty() {\r\n\t\treturn this.is_first && this.is_last;\r\n\t}\r\n\tget is_first() {\r\n\t\treturn this._raw.prev == 0;\r\n\t}\r\n\tget is_last() {\r\n\t\treturn this._raw.next == 0;\r\n\t}\r\n\tget is_wall() {\r\n\t\treturn this.x1 == this.x2;\r\n\t}\r\n\tget _is_horizontal_floor() {\r\n\t\treturn this.y1 == this.y2;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLine(ctx) {\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(this.x1, this.y1);\r\n\t\tctx.lineTo(this.x2, this.y2);\r\n\t\tctx.stroke();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLineV01(ctx) {\r\n\t\tif (this.m_hasVertex0) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.moveTo(this.x0, this.y0);\r\n\t\t\tctx.lineTo(this.x1, this.y1);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLineV23(ctx) {\r\n\t\tif (this.m_hasVertex3) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.moveTo(this.x2, this.y2);\r\n\t\t\tctx.lineTo(this.x3, this.y3);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\t$_text_pos(x1, y1, x2, y2) {\r\n\t\treturn {\r\n\t\t\tx: (x2 + x1) / 2,\r\n\t\t\ty: Math.max(y2, y1),\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t$drawDebugInfo(renderer) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst fh = this;\r\n\t\tconst text = `[${fh.id}](${fh.x1}, ${fh.y1})[${fh.group}]{${fh._raw.piece}}∠${fh.next_a_deg}`;\r\n\r\n\t\tconst ta = ctx.textAlign, tb = ctx.textBaseline;\r\n\t\tconst tp = this.$_text_pos(fh.x1, fh.y1, fh.x2, fh.y2);\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"top\";\r\n\r\n\t\tctx.lineWidth = 5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#FF00FF\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.strokeText(text, tp.x, tp.y);\r\n\r\n\t\tctx.fillStyle = \"#FFF\";\r\n\t\tctx.fillText(text, tp.x, tp.y);\r\n\r\n\t\t//ctx.fillText(`[${fh.piece}][1](${fh.x2}, ${fh.y2})`, fh.x2, fh.y2);\r\n\r\n\t\tctx.textAlign = ta;\r\n\t\tctx.textBaseline = tb;\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} color\r\n\t */\r\n\t$drawDebugInfo2(renderer, color) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst fh = this;\r\n\t\tconst text = `${fh.prev}<${fh.id}>${fh.next} C{${fh.chain.id}} (${fh.x1}, ${fh.y1})(${fh.x2}, ${fh.y2}) L[${fh.layer}] G[${fh.group}] P{${fh._raw.piece}}∠${fh.next_a_deg}`;\r\n\r\n\t\tlet ta = ctx.textAlign, tb = ctx.textBaseline;\r\n\t\tconst tp = this.$_text_pos(fh.x1, fh.y1, fh.x2, fh.y2);\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"top\";\r\n\r\n\t\tctx.lineWidth = 5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = color || \"#FF00FF\";\r\n\t\tfh._drawLine(ctx);\r\n\t\t\r\n\t\t//ctx.strokeStyle = \"#FF0\";\r\n\t\t//fh._drawLineV01(ctx);\r\n\t\t//fh._drawLineV23(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.strokeText(text, tp.x, tp.y);\r\n\r\n\t\tctx.fillStyle = \"#FFF\";\r\n\t\tctx.fillText(text, tp.x, tp.y);\r\n\r\n\t\t//ctx.fillText(`[${fh.piece}][1](${fh.x2}, ${fh.y2})`, fh.x2, fh.y2);\r\n\r\n\t\tctx.textAlign = ta;\r\n\t\tctx.textBaseline = tb;\r\n\t}\r\n}\r\n\r\nexport class FootholdChainChild extends FootholdSingle {\r\n\tconstructor(_raw, index, layerIndex, groupIndex) {\r\n\t\tsuper(_raw, index, layerIndex, groupIndex);\r\n\r\n\t\t/** @type {b2Transform} - local */\r\n\t\tthis.m_xf = new b2Transform();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {FootholdChain} chain\r\n\t * @param {number} childIndex\r\n\t * @param {b2Transform} body_xf\r\n\t */\r\n\tinit(chain, childIndex, body_xf) {\r\n\t\tsuper.init(chain, childIndex, body_xf);\r\n\t\t\r\n\t\tb2Vec2.AddVV(this.GetVertex1(), this.GetVertex2(), this.m_xf.p);\r\n\t\tb2Vec2.MulVS(this.m_xf.p, 0.5, this.m_xf.p);\r\n\t\tthis.m_xf.SetRotationAngle(this.m_angle);\r\n\r\n\t\tb2Transform.MulTXX(this.m_xf, body_xf, this.m_xf);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tGetWorldCenter() {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn xf.p;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalPoint(worldPoint, out) {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn b2Transform.MulTXV(xf, worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n\t\tconst body = this.body;\r\n\t\treturn b2Vec2.AddVCrossSV(body.m_linearVelocity, body.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.GetWorldCenter(), b2Vec2.s_t0), out);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldVector\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalVector(worldVector, out) {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn b2Rot.MulTRV(xf.q, worldVector, out);\r\n\t}\r\n}\r\n","﻿\r\nimport {\r\n\tb2_polygonRadius,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2PolygonShape, b2EdgeShape, b2ChainShape,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact, b2Manifold, b2ContactImpulse, b2WorldManifold\r\n} from \"./Physics.js\";\r\n\r\nimport { Vec2, Rectangle } from \"../math.js\";\r\n\r\nimport { World, GRAVITY } from \"./World.js\";\r\nimport { FootholdChain, FootholdSingle, FootholdChainChild} from \"./Foothold.js\";\r\n\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport const Foothold = FootholdSingle;\r\n//export const Foothold = FootholdChainChild;\r\n\r\n\r\n/**\r\n * 可以防止player卡在foothold裡面\r\n */\r\nwindow.CREATE_SOLID_FOOTHOLD = false;\r\n/**\r\n * polygon + edge\r\n */\r\nwindow.CREATE_SOLID_AND_EDGE_FOOTHOLD = false;\r\n\r\n/**\r\n * b2EdgeShape ghost vertex\r\n */\r\nwindow.USE_GHOST_VERTEX = true;\r\n\r\nwindow.FOOTHOLD_IS_BULLET = true;\r\n\r\n/**\r\n * @param {number} left\r\n * @param {number} right\r\n * @param {number} interpolater - 0~1\r\n */\r\nfunction lerp(left, right, interpolater) {\r\n\treturn left + interpolater * (right - left);\r\n}\r\n\r\nexport class Ground {\r\n\tconstructor() {\r\n\t\t/** @type {b2Body[]} */\r\n\t\tthis.bodies = null;\r\n\r\n\t\t/** @type {Foothold[]} */\r\n\t\tthis.footholds = null;\r\n\t\t\r\n\t\t/** @type {Rectangle[]} */\r\n\t\tthis.rectChains = null;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.footholds = [];\r\n\t\tthis.bodies = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {object} data\r\n\t * @param {World} world\r\n\t */\r\n\tload(map_raw_data, world) {\r\n\t\tif (!(\"foothold\" in map_raw_data)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (let layerIndex in map_raw_data.foothold) {\r\n\t\t\tlet groups = map_raw_data.foothold[layerIndex];\r\n\r\n\t\t\t//foothold[5] maybe is Bounding-Box(loop line)\r\n\r\n\t\t\tfor (let groupIndex in groups) {\r\n\t\t\t\tlet segment = groups[groupIndex];\r\n\t\t\t\tfor (let k in segment) {\r\n\t\t\t\t\tconst index = k - 1;\r\n\r\n\t\t\t\t\tlet fh = new Foothold(segment[k], index, layerIndex, groupIndex);\r\n\r\n\t\t\t\t\tthis.footholds[index] = fh;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/** @type {FootholdChain[]} */\r\n\t\tlet chains = [];\r\n\r\n\t\tlet chainId = 0;\r\n\t\tlet rectChains = this.rectChains = [];\r\n\r\n\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\tconst foothold = this.footholds[i];\r\n\t\t\t\r\n\t\t\tif (foothold.chain == null) {\r\n\t\t\t\t/** @type {foothold} */\r\n\t\t\t\tlet head;\r\n\r\n\t\t\t\t//find head\r\n\t\t\t\tfor (let fh = foothold; fh != null; fh = this.footholds[fh.prev]) {\r\n\t\t\t\t\tif (fh.prev != null && fh.prev == foothold.id) {\r\n\t\t\t\t\t\thead = fh;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!head) {\r\n\t\t\t\t\thead = foothold;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet chain = new FootholdChain(chainId);\r\n\r\n\t\t\t\tchain.init(head, this.footholds, Foothold);\r\n\r\n\t\t\t\tif (Foothold == FootholdSingle) {\r\n\t\t\t\t\tif (window.CREATE_SOLID_AND_EDGE_FOOTHOLD) {\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, false);//edge\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, true);//polygon\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, window.CREATE_SOLID_FOOTHOLD);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (Foothold == FootholdChainChild) {\r\n\t\t\t\t\tthis._create_chain(world, chain);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchains.push(chain);\r\n\r\n\t\t\t\trectChains[chainId] = chain.bound;\r\n\t\t\t\t\r\n\t\t\t\tchainId++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @param {FootholdChain} chain\r\n\t */\r\n\t_create_chain(world, chain) {\r\n\t\t/** @type {b2Body} */\r\n\t\tlet body;\r\n\r\n\t\t/** @type {b2ChainShape} */\r\n\t\tlet shape;\r\n\r\n\t\t{\r\n\t\t\tlet bdef = new b2BodyDef();\r\n\r\n\t\t\tconst center = chain.bound.center;\r\n\r\n\t\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\t\tbdef.position.Set(center.x / $gv.CANVAS_SCALE, center.y / $gv.CANVAS_SCALE);\r\n\t\t\tbdef.angle = 0;\r\n\t\t\tbdef.gravityScale = 0;\r\n\t\t\tbdef.linearDamping = 1;\r\n\t\t\tbdef.bullet = true;\r\n\t\t\tbdef.userData = this;\r\n\r\n\t\t\tbody = world.CreateBody(bdef);\r\n\t\t\tbody.$type = \"ground\";\r\n\r\n\t\t\tthis.bodies.push(body);\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tshape = new b2ChainShape();\r\n\r\n\t\t\t/** @type {b2Vec2[]} */\r\n\t\t\tlet vertices = [body.GetLocalPoint(chain.footholds[0].GetVertex1(), new b2Vec2())];\r\n\r\n\t\t\tfor (let i = 0; i < chain.footholds.length; ++i) {\r\n\t\t\t\tconst fh = chain.footholds[i];\r\n\r\n\t\t\t\tvertices.push(body.GetLocalPoint(fh.GetVertex2(), new b2Vec2()));\r\n\r\n\t\t\t\tfh.body = body;\r\n\t\t\t\tfh._chain = chain;\r\n\t\t\t}\r\n\r\n\t\t\tif (chain.loop) {\r\n\t\t\t\tshape.CreateLoop(vertices);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.CreateChain(vertices);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tlet fdef = new b2FixtureDef();\r\n\t\t\tfdef.shape = shape;\r\n\t\t\tfdef.density = 1;\r\n\t\t\tfdef.filter.Copy(FilterHelper.get(\"foothold\"));\r\n\t\t\tfdef.friction = 1;\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tfdef.userData = chain;\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\t//fixture.beginContact = this.beginContact_bodyBase_oneway;\r\n\t\t\tfixture.endContact = this.endContact_bodyBase_oneway;\r\n\t\t\tfixture.preSolve = this.preSolveGround_bodyBase_oneway;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @param {FootholdChain} chain\r\n\t * @param {boolean} is_solid\r\n\t */\r\n\t_create_foothold(world, chain, is_solid) {\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\r\n\t\t/** @type {b2PolygonShape&b2EdgeShape} */\r\n\t\tlet shape;\r\n\r\n\r\n\t\tif (is_solid) {\r\n\t\t\tshape = new b2PolygonShape();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tshape = new b2EdgeShape();\r\n\t\t}\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\tbdef.linearDamping = 1;\r\n\t\tbdef.gravityScale = 0;\r\n\t\tbdef.userData = this;\r\n\t\tbdef.bullet = window.FOOTHOLD_IS_BULLET;\r\n\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.density = 1;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"foothold\"));\r\n\t\tfdef.friction = 1;\r\n\t\tfdef.restitution = 0;\r\n\t\t//fdef.userData = chain;\r\n\r\n\t\tfor (let i = 0; i < chain.footholds.length; ++i) {\r\n\t\t\tconst fh = chain.footholds[i];\r\n\t\t\t//if (fh.is_wall) {\r\n\t\t\t//\tthis._create_wall(fh);\r\n\t\t\t//\tcontinue;\r\n\t\t\t//}\r\n\t\t\tlet x1, y1, x2, y2;\r\n\r\n\t\t\tx1 = fh.x1 / $gv.CANVAS_SCALE;\r\n\t\t\ty1 = fh.y1 / $gv.CANVAS_SCALE;\r\n\t\t\tx2 = fh.x2 / $gv.CANVAS_SCALE;\r\n\t\t\ty2 = fh.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\t\tcreate.call(this, fh);\r\n\t\t\t\r\n\t\t\tconst next = this.footholds[fh.next];\r\n\t\t\tif (next) {\r\n\t\t\t\tlet x1n, y1n, x2n, y2n;\r\n\t\t\t\tlet nx1, ny1, nx2, ny2;\r\n\r\n\t\t\t\tnx1 = next.x1 / $gv.CANVAS_SCALE;\r\n\t\t\t\tny1 = next.y1 / $gv.CANVAS_SCALE;\r\n\t\t\t\tnx2 = next.x2 / $gv.CANVAS_SCALE;\r\n\t\t\t\tny2 = next.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\t\t\tlet v1 = new b2Vec2(x1 - x2, y1 - y2);\r\n\t\t\t\tlet v2 = new b2Vec2(nx2 - nx1, ny2 - ny1);\r\n\t\t\t\tlet a = Math.atan2(b2Vec2.CrossVV(v1, v2), b2Vec2.DotVV(v1, v2));\r\n\r\n\t\t\t\tfh.next_a = a;\r\n\t\t\t\tfh.next_a_deg = Math.abs(Math.trunc(a * 180 / Math.PI)) % 180;\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * @param {Foothold} fh\r\n\t\t * @param {number} x1\r\n\t\t * @param {number} y1\r\n\t\t * @param {number} x2\r\n\t\t * @param {number} y2\r\n\t\t */\r\n\t\tfunction create(fh) {\r\n\t\t\tb2Vec2.AddVV(fh.GetVertex1(), fh.GetVertex2(), bdef.position);\r\n\t\t\tb2Vec2.MulVS(bdef.position, 0.5, bdef.position);\r\n\r\n\t\t\tlet hlen = fh.m_length * 0.5;\r\n\t\t\tbdef.angle = fh.m_angle;\r\n\r\n\t\t\tlet body = world.CreateBody(bdef);\r\n\t\t\tbody.$type = \"ground\";\r\n\r\n\t\t\tif (is_solid) {\r\n\t\t\t\tshape.SetAsBox(hlen, b2_polygonRadius);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.m_vertex1.Set(-hlen, 0)\r\n\t\t\t\tshape.m_vertex2.Set(hlen, 0);\r\n\r\n\t\t\t\tif (window.USE_GHOST_VERTEX) {\r\n\t\t\t\t\tif (fh.prev != null) {\r\n\t\t\t\t\t\tconst prev = this.footholds[fh.prev];\r\n\t\t\t\t\t\tshape.m_hasVertex0 = true;\r\n\t\t\t\t\t\tshape.m_vertex0.Copy(prev.GetVertex2());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (fh.next != null) {\r\n\t\t\t\t\t\tconst next = this.footholds[fh.next];\r\n\t\t\t\t\t\tshape.m_hasVertex3 = true;\r\n\t\t\t\t\t\tshape.m_vertex3.Copy(next.GetVertex1());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfdef.userData = fh;\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\t//fixture.beginContact = this.beginContact_bodyBase_oneway;\r\n\t\t\tfixture.endContact = this.endContact_bodyBase_oneway;\r\n\t\t\tfixture.preSolve = this.preSolveGround_bodyBase_oneway;\r\n\r\n\t\t\tfh.body = body;\r\n\t\t\tthis.bodies.push(body);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {{left: number, right: number}}\r\n\t */\r\n\t_compute_left_right_border() {\r\n\t\tlet left = null, right = null;\r\n\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\tlet fh = this.footholds[i];\r\n\t\t\t//if (fh.layer == 5) {\r\n\t\t\t\tlet x1, x2;\r\n\t\t\t\t\r\n\t\t\t\tif (fh.x1 < fh.x2) {\r\n\t\t\t\t\tx1 = fh.x1;\r\n\t\t\t\t\tx2 = fh.x2;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tx1 = fh.x2;\r\n\t\t\t\t\tx2 = fh.x1;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (left == null || x1 < left) {\r\n\t\t\t\t\tleft = x1;\r\n\t\t\t\t}\r\n\t\t\t\tif (right == null || x2 > right) {\r\n\t\t\t\t\tright = x2;\r\n\t\t\t\t}\r\n\t\t\t\t//if (left != null) {\r\n\t\t\t\t//\tleft = Math.min(left, fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\tleft = Math.min(fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\tright = Math.max(fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t//}\r\n\t\t}\r\n\t\treturn { left, right };\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tbeginContact_bodyBase_oneway(contact, fa, fb, childIndexA, childIndexB) {\r\n\t\tif (fb.$type == \"player\") {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tlet numPoints, worldManifold;\r\n\t\tconst playerBody = fb.GetBody();\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tconst fh = this.getFootholdFromContact(childIndexA);\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = fb.GetUserData();\r\n\t\tif (!player || !player.body || player.body.$type != \"player\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (player.state.ladder) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst $fh = player.$foothold;\r\n\t\tconst player_pos = player.foot_walk.GetWorldCenter();//player.getPosition();\r\n\r\n\t\tif (fh.is_wall) {\r\n\t\t\tcontact.SetFriction(0);\r\n\r\n\t\t\tconst p$fh = player.prev_$fh;\r\n\r\n\t\t\tif ((!$fh || $fh.chain != fh.chain) &&\r\n\t\t\t\tp$fh &&\r\n\t\t\t\tp$fh.chain != fh.chain &&\r\n\t\t\t\tp$fh.layer != fh.layer\r\n\t\t\t) {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (player.state.dropDown && player.leave_$fh != null) {\r\n\t\t\t//HACK: ?? foothold edge\r\n\t\t\tif (player.leave_$fh == $fh && $fh != fh) {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (playerBody.$type == \"pl_ft_walk\" &&// player.leave_$fh &&\r\n\t\t\t\tplayer.leave_$fh.id != fh.id &&\r\n\t\t\t\tplayer.leave_$fh.chain.id != fh.chain.id &&\r\n\t\t\t\t(player.leave_$fh.prev == null || player.leave_$fh.prev != fh.id) &&\r\n\t\t\t\t(player.leave_$fh.next == null || player.leave_$fh.next != fh.id)\r\n\t\t\t) {\r\n\t\t\t\tconst foot = player.foot_walk.GetWorldCenter();\r\n\t\t\t\tnumPoints = contact.GetManifold().pointCount;\r\n\t\t\t\tworldManifold = new b2WorldManifold();\r\n\t\t\t\tcontact.GetWorldManifold(worldManifold);\r\n\r\n\t\t\t\t//check if contact points are moving into platform\r\n\t\t\t\tfor (let i = 0; i < numPoints; ++i) {\r\n\t\t\t\t\tconst cpoint = worldManifold.points[i];\r\n\t\t\t\t\tif (cpoint.y > foot.y) {\r\n\t\t\t\t\t\tplayer.leave_$fh = null;\r\n\t\t\t\t\t\tplayer.state.dropDown = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tplayer.state.dropDown = false;\r\n\t\t}\r\n\r\n\t\tif (player.leave_$fh && player.leave_$fh == fh) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet ccc = $fh && (\r\n\t\t\tfh.is_wall ||\r\n\t\t\t(fh == player._foothold && (fh.y1 < $fh.y1 || fh.y2 < $fh.y2)) ||\r\n\t\t\t(fh != player._foothold && (fh.y1 > $fh.y1 || fh.y2 > $fh.y2))\r\n\t\t);\r\n\t\tif (ccc && $fh != fh && (!player._$fallEdge || player._$fallEdge != $fh)) {\r\n\t\t\tif (fh.chain.id != $fh.chain.id &&\r\n\t\t\t\t(!$fh.prev || $fh.y1 != fh.y2) &&\r\n\t\t\t\t(!$fh.next || $fh.y2 != fh.y1)\r\n\t\t\t) {\r\n\t\t\t\tplayer.leave_$fh = fh;\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (player._$fallEdge && player._$fallEdge == fh) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst relative_position = fh.GetLocalPoint(player_pos, new b2Vec2());\r\n\t\tconst platformFaceY = b2_polygonRadius;\r\n\r\n\t\tconst foot_width = player.chara_profile.foot_width;\r\n\r\n\t\tif (numPoints == null) {\r\n\t\t\tnumPoints = contact.GetManifold().pointCount;\r\n\t\t\tworldManifold = new b2WorldManifold();\r\n\t\t\tcontact.GetWorldManifold(worldManifold);\r\n\t\t}\r\n\r\n\t\t//check if contact points are moving into platform\r\n\t\tfor (let i = 0; i < numPoints; ++i) {\r\n\t\t\tconst cpoint = worldManifold.points[i];\r\n\t\t\tconst pointVelPlatform = fh.GetLinearVelocityFromWorldPoint(cpoint, new b2Vec2());\r\n\t\t\tconst pointVelOther = playerBody.GetLinearVelocityFromWorldPoint(cpoint, new b2Vec2());\r\n\t\t\tconst point = new b2Vec2(pointVelOther.x - pointVelPlatform.x, pointVelOther.y - pointVelPlatform.y);\r\n\t\t\tconst relativeVel = fh.GetLocalVector(point, new b2Vec2());\r\n\t\t\tconst relativePosition = fh.GetLocalPoint(cpoint, new b2Vec2());\r\n\r\n\t\t\tif (relative_position.y <= -(foot_width - platformFaceY) ||\r\n\t\t\t\t(cpoint.y > player_pos.y && relativePosition.y <= platformFaceY)\r\n\t\t\t) {\r\n\t\t\t\tif (relativeVel.y > 1) {//if moving down faster than 1 m/s, handle as before\r\n\t\t\t\t\t//player._foothold = fh;\r\n\t\t\t\t\tif (fh.is_wall || player._which_foothold_contact(fh, cpoint)) {\r\n\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tnormal_contact(cpoint);\r\n\t\t\t\t\t//\treturn;//not primary, normal contact \r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse if (relativeVel.y > -1) { //if moving slower than 1 m/s\r\n\t\t\t\t\t//borderline case, moving only slightly out of platform\r\n\t\t\t\t\t//player._foothold = fh;\r\n\t\t\t\t\tif (fh.is_wall || player._which_foothold_contact(fh, cpoint)) {\r\n\t\t\t\t\t\tif ($fh && $fh.id != fh.id) {\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\treturn;//contact point is less than 5cm inside front face of platfrom\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tnormal_contact(cpoint);\r\n\t\t\t\t\t//\treturn;//not primary, normal contact\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse if (fh.is_wall) {//contact wall's upper vertex\r\n\t\t\t\t\tconst py = player_pos.y * $gv.CANVAS_SCALE;\r\n\t\t\t\t\tif (fh.y2 >= fh.y1) {\r\n\t\t\t\t\t\tif (py <= fh.y1) {\r\n\t\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (py <= fh.y2) {\r\n\t\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//no points are moving into platform, contact should not be solid\r\n\t\tcontact.SetEnabled(false);\r\n\r\n\t\t/**\r\n\t\t * @param {b2Vec2} cpoint\r\n\t\t */\r\n\t\tfunction normal_contact(cpoint) {\r\n\t\t\tif ((fh.prev == null && (cpoint.x * $gv.CANVAS_SCALE) < fh.x1) ||\r\n\t\t\t\t(fh.next == null && (cpoint.x * $gv.CANVAS_SCALE) > fh.x2)\r\n\t\t\t) {\r\n\t\t\t\tplayer.state.jump = true;\r\n\r\n\t\t\t\tplayer._$fallEdge = fh;\r\n\r\n\t\t\t\tplayer._foothold = null;\r\n\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t//\r\n\t\t\t\tplayer.$foothold = null;\r\n\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tendContact_bodyBase_oneway(contact, fa, fb, childIndexA, childIndexB) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = fb.GetUserData();\r\n\t\tif (!player) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tconst fh = this.getFootholdFromContact(childIndexA);\r\n\r\n\t\tplayer.prev_$fh = fh;\r\n\r\n\t\tif (player._foot_contact_list.length) {\r\n\t\t\tplayer._foot_contact_list.forEach((fc, i) => {\r\n\t\t\t\tif (fc.foothold == fh) {\r\n\t\t\t\t\tplayer._foot_contact_list.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif (player._$fallEdge && fh == player._$fallEdge) {\r\n\t\t\tplayer._$fallEdge = null;\r\n\t\t}\r\n\t\telse if (player._foothold && fh == player._foothold) {\r\n\t\t\tif (player._foot_contact_list.length) {\r\n\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\tlet max = player._foot_contact_list.pop();\r\n\t\t\t\tplayer.$foothold = max.foothold;\r\n\t\t\t\tplayer._foothold = max.foothold;\r\n\t\t\t\tplayer._foot_at = max.position;\r\n\t\t\t\tplayer._foothold_priority = max.priority;\r\n\t\t\t\t//console.log(\"end contact: contact old foothold: fh == player._foothold\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tplayer._foothold = null;//正常離開地面\r\n\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t//console.log(\"end contact: 正常離開地面: fh == player._foothold\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (player.$foothold && fh == player.$foothold) {\r\n\t\t\tif (player._foot_contact_list.length) {\r\n\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\tlet max = player._foot_contact_list.pop();\r\n\t\t\t\tplayer.$foothold = max.foothold;\r\n\t\t\t\tplayer._foothold = max.foothold;\r\n\t\t\t\tplayer._foot_at = max.position;\r\n\t\t\t\tplayer._foothold_priority = max.priority;\r\n\t\t\t\t//console.log(\"end contact: contact old foothold: fh == player.$foothold\");\r\n\t\t\t}\r\n\t\t\telse {//afterStep\r\n\t\t\t\tif (player._foothold) {\r\n\t\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\t\tplayer.$foothold = player._foothold;\r\n\t\t\t\t\t//console.log(\"end contact: contact other foothold\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tplayer.$foothold = null;//正常離開地面\r\n\t\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t\t//console.info(\"end contact: 正常離開地面: fh == player.$foothold\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (player.leave_$fh && player.leave_$fh == fh) {\r\n\t\t\tplayer.leave_$fh = null;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tpreSolveGround_bodyBase_oneway(contact, oldManifold, fa, fb, childIndexA, childIndexB) {\r\n\t\t/** @type {Ground} */\r\n\t\tlet that = fa.GetBody().GetUserData();\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tlet target = this;\r\n\r\n\t\tthat.beginContact_bodyBase_oneway.call(target, contact, fa, fb, childIndexA, childIndexB);\r\n\t\t\r\n\t\t//if (contact.IsEnabled() && contact.IsTouching()) {\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\tunload(world) {\r\n\t\tfor (let i = 0; i < this.bodies.length; ++i) {\r\n\t\t\tworld.DestroyBody(this.bodies[i]);\r\n\t\t}\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {object} data\r\n\t */\r\n\taddFoothold(data) {\r\n\t\tthis.footholds.push(new Foothold(data));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t$drawDebugInfo(renderer) {\r\n\t\tif ($gv.m_display_foothold) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.lineCap = \"round\";\r\n\t\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\t\tlet fh = this.footholds[i];\r\n\t\t\t\tif (fh == null) {//line end\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (fh.$showDebugInfo) {\r\n\t\t\t\t\tfh.$drawDebugInfo(renderer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t$showDebugInfo(layer, group, isShow, isHide) {\r\n\t\tif (isShow == null) {\r\n\t\t\tisShow = true;\r\n\t\t}\r\n\t\tif (isHide == null) {\r\n\t\t\tisHide = false;\r\n\t\t}\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tif (fh.layer == layer && fh.group == group) {\r\n\t\t\t\tfh.$showDebugInfo = isShow;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfh.$showDebugInfo = isHide;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t$showDebugInfoByLayer(layer, isShow, isHide) {\r\n\t\tif (isShow == null) {\r\n\t\t\tisShow = true;\r\n\t\t}\r\n\t\tif (isHide == null) {\r\n\t\t\tisHide = false;\r\n\t\t}\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tif (fh.layer == layer) {\r\n\t\t\t\tfh.$showDebugInfo = isShow;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfh.$showDebugInfo = isHide;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//static $showDebugInfoByGroup() {\r\n\t//}\r\n\t$hideAllDebugInfo() {\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tfh.$showDebugInfo = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nGround.Foothold = Foothold;\r\n\r\n/*\r\nmap=100000000\r\n$$hhh = -1.5;\r\nclearInterval($$$si)\r\n$$$si = setInterval(() => {\r\n    chara.$physics.setPosition(113.96875, 7.84375 + $$hhh);\r\n\t$$hhh += 0.005;//1 / $gv.CANVAS_SCALE;\r\n\t$$hhh = $$hhh > 2 ? 0 : $$hhh;\r\n    chara.$physics.body.SetAwake(true);\r\n    setTimeout(() => {\r\n        chara.$physics.state.jump = true;\r\n        $gv.input_keyDown.f = 1;\r\n        setTimeout(() => {\r\n            $gv.input_keyDown.f = 0;\r\n            $gv.input_keyUp.f = 1;\r\n            setTimeout(() => {\r\n                $gv.input_keyUp.f = 0;\r\n            }, 50);\r\n        }, 50);\r\n    }, 140);\r\n}, 1000);\r\n\r\n*/\r\n\r\n/*\r\nmap=100000000\r\nchara.$physics.setPosition(4583/32+3,364/32-3)\r\nchara.$physics.body.m_linearVelocity.Set(-22,15)\r\n\r\n*/\r\n","﻿\r\nimport { Vec2 } from \"../math.js\";\r\n\r\n\r\nexport class ActionAnimationFrameData {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.move = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded raw data\r\n\t * @param {ActionAnimationFrameData} raw\r\n\t * @param {string} action\r\n\t * @param {number} frame\r\n\t */\r\n\t_load(raw, action, frame) {\r\n\t\tthis._raw = raw;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = raw.delay;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tif (raw.move) {\r\n\t\t\tthis.move = new Vec2(raw.move.x, raw.move.y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.move = new Vec2(0, 0);\r\n\t\t}\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = raw.action || action;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = raw.frame || frame;\r\n\t}\r\n}\r\n\r\nexport class ActionAnimation {\r\n\tconstructor(raw) {\r\n\t\t/** @returns {ActionAnimationFrameData[]} */\r\n\t\tthis.frames = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._action = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\r\n\t\t/** @type {number} this.delay = delay < 0 ? -delay:0; if (this.delay == 0) launch attack */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.loop = false;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\t_load(action) {\r\n\t\tthis._action = action;\r\n\t\tthis.frames = ActionAnimation.Adef[action];\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\treload(action) {\r\n\t\tthis.reset();\r\n\t\tthis._load(action);\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * update action delay, target.action, target.action_frame, target.tx, target.ty\r\n\t * @param {number} stamp\r\n\t * @param {CharacterRenderer} target\r\n\t */\r\n\tupdate(stamp, target) {\r\n\t\tif (!this.frames || !stamp) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fdat = this.fdat;\r\n\t\tlet delay = 0;\r\n\r\n\t\tif (!fdat) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.time = this.time + stamp;\r\n\r\n\t\tif (fdat.delay < 0) {\r\n\t\t\tfdat.delay = -fdat.delay;\r\n\t\t}\r\n\r\n\t\tif (fdat.delay > 0) {\r\n\t\t\tdelay = fdat.delay;\r\n\t\t\tthis.delay = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelay = -fdat.delay;\r\n\t\t\tthis.delay = delay;\r\n\t\t}\r\n\r\n\t\tif (this.time > delay) {\r\n\t\t\tthis.frame = ++this.frame;\r\n\t\t\tthis.time = 0;\r\n\t\t}\r\n\r\n\t\t//translate target position\r\n\t\tif (fdat.move) {\r\n\t\t\ttarget.tx = -fdat.move.x * target.front;\r\n\t\t\ttarget.ty = fdat.move.y;//Y 軸相反\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\tif (this.isEnd()) {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// 改變 action & action_frame 會造成迴圈: this.reload(this._action)\r\n\t\tif (!target._ride_action) {\r\n\t\t\ttarget._action = fdat.action;\r\n\t\t}\r\n\t\ttarget._action_frame = fdat.frame;\r\n\r\n\t\tif (!this.frames || this.fdat == null) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t\telse if (!this.loop) {\r\n\t\t\tthis._is_end = false;\r\n\t\t}\r\n\t\tif (this.frames.length <= 1) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\treturn this._is_end;\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.frames.reduce((total, frame) => total + frame.delay, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * frame data\r\n\t * @returns {ActionAnimationFrameData}\r\n\t */\r\n\tget fdat() {\r\n\t\treturn this.frames[this.frame];\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\t/** @type {{[action:string]:ActionAnimationFrameData[]}} */\r\n\t\tlet raw = await $get.data(ActionAnimation._base_path);\r\n\r\n\t\tlet aadef = Object.assign({}, raw);\r\n\t\t\r\n\t\tdelete aadef['info'];\r\n\r\n\t\tfor (let actName in aadef) {\r\n\t\t\tlet aa = aadef[actName];\r\n\t\t\taadef[actName] = Object.values(aa).map((_fdef, frame) => {\r\n\t\t\t\tlet fdef = new ActionAnimationFrameData();\r\n\t\t\t\tfdef._load(_fdef, actName, frame);\r\n\t\t\t\treturn fdef;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//action definition\r\n\t\tActionAnimation.Adef = aadef;\r\n\r\n\t\twindow.CharacterActionAnimationDefinition = aadef;\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Character/00002000\";\r\n\t}\r\n}\r\n/**\r\n * action definition\r\n * @type {{[action:string]:ActionAnimationFrameData[]}}\r\n */\r\nActionAnimation.Adef = null;\r\n\r\n","﻿\r\nimport { ItemCategoryInfo } from \"../../public/javascripts/resource.js\";\r\n\r\nimport { Sprite } from \"./Sprite\";\r\n\r\nimport { KeySlotData } from \"../ui/Basic/KeySlotData.js\";\r\n\r\n\r\n/** @type {$ItemRawData} */\r\nlet _loadedItem = {};\r\n\r\nwindow.$loadedItem = _loadedItem;\r\n\r\n\r\nclass $ItemRawData {\r\n\tconstructor() {\r\n\t}\r\n}\r\n\r\n\r\n//class ItemInfo {\r\n//\t/**\r\n//\t * @param {{}} _rawInfo\r\n//\t */\r\n//\tconstructor(_raw) {\r\n//\t\tthis.icon = new Sprite(_raw.icon);\r\n//\t\tthis.iconRaw = new Sprite(_raw.iconRaw);\r\n//\t}\r\n//\r\n//\t/**\r\n//\t * @param {string} itemId\r\n//\t * @returns {Promise<Sprite[]>}\r\n//\t */\r\n//\tload(itemId, loadSprite = false) {\r\n//\t\tlet url = ItemCategoryInfo.getIconUrl(itemId);\r\n//\t\tlet rawUrl = ItemCategoryInfo.getIconRawUrl(itemId);\r\n//\r\n//\t\tthis.icon._url = url;\r\n//\t\tthis.iconRaw._url = rawUrl;\r\n//\r\n//\t\t// 目前用不到 Sprite\r\n//\t\t// UI 只會用到 _raw, Image\r\n//\r\n//\t\tif (loadSprite) {\r\n//\t\t\t//manual load\r\n//\t\t\tthis.icon.__loadTexture();\r\n//\t\t\tthis.iconRaw.__loadTexture();\r\n//\r\n//\t\t\treturn Promise.all([this.icon.$promise, this.iconRaw.$promise]);\r\n//\t\t}\r\n//\t}\r\n//}\r\n\r\nconst SLOT_EQUIP = 0;\r\nconst SLOT_COS = 1;\r\nconst SLOT_ETC = 2;\r\nconst SLOT_INS = 3;\r\nconst SLOT_CASH = 4;\r\n\r\nconst TYPE_TO_SLOT_MAP = [\r\n\tSLOT_EQUIP, SLOT_EQUIP, SLOT_COS, SLOT_INS, SLOT_ETC, SLOT_CASH\r\n];\r\n\r\nexport class ItemBase {\r\n\t/**\r\n\t * @param {string} itemId\r\n\t * @param {{}} _raw\r\n\t */\r\n\tconstructor(itemId, _raw) {\r\n\t\t//this.assign(this, _raw);\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis._raw = null;\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.id = null;\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t\"_raw\": {\r\n\t\t\t\tvalue: _raw\r\n\t\t\t},\r\n\t\t\t\"id\": {\r\n\t\t\t\tvalue: itemId\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetSlot() {\r\n\t\treturn TYPE_TO_SLOT_MAP[this.id[1]];\r\n\t}\r\n}\r\n\r\nexport class ItemEquip extends ItemBase {\r\n}\r\n\r\nexport class ItemConsume extends ItemBase {\r\n}\r\n\r\nexport class ItemEtc extends ItemBase {\r\n}\r\n\r\nexport class ItemInstall extends ItemBase {\r\n}\r\n\r\nexport class ItemCash extends ItemBase {\r\n\tgetSlot() {\r\n\t\tif (this.id == 7) {\r\n\t\t\treturn TYPE_TO_SLOT_MAP[this.id[0]];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn TYPE_TO_SLOT_MAP[this.id[1]];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * 自訂道具\r\n * @template T\r\n * @param {string} itemId\r\n * @param {...Partial<T>} props\r\n * @returns {Promise<T>}\r\n */\r\nfunction _createItemSync(itemId, ...props) {\r\n\tlet itemPrototype = _loadedItem[itemId];\r\n\tif (!itemPrototype) {\r\n\t\tthrow new TypeError();\r\n\t}\r\n\r\n\t/** @type {string} - 1 digit */\r\n\tlet typeId = itemId[1];\r\n\r\n\t/** @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} */\r\n\tlet _itemType;\r\n\r\n\tswitch (typeId) {\r\n\t\tcase '0':\r\n\t\t\t_itemType = ItemEquip;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"未完成\");\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tlet item = new _itemType(itemId, itemPrototype);\r\n\r\n\tif (props && props.length) {\r\n\t\tObject.assign(item, ...props);\r\n\t}\r\n\r\n\treturn item;\r\n}\r\n\r\n/**\r\n * 載入道具\r\n * @template T\r\n * @param {string} itemId\r\n * @param {...Partial<T>} props\r\n * @returns {Promise<T>}\r\n */\r\nexport async function $createItem(itemId, ...props) {\r\n\tif (itemId.length == 7 && itemId[0] == 5) {\r\n\t\tthrow new Error(\"未完成 pet\");\r\n\t}\r\n\t/** @type {string} - 1 digit */\r\n\tlet typeId = itemId[1];\r\n\r\n\t/** @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} */\r\n\tlet _itemType;\r\n\r\n\tswitch (typeId) {\r\n\t\tcase \"0\":\r\n\t\t\tif (!$gv.m_editor_mode) {\r\n\t\t\t\tthrow new Error(\"$gv.m_editor_mode: %o\" + $gv.m_editor_mode);\r\n\t\t\t}\r\n\t\tcase \"1\":\r\n\t\t\t_itemType = ItemEquip;\r\n\t\t\tbreak;\r\n\t\tcase \"2\":\r\n\t\t\tconsole.error(\"未完成 ItemConsume\");\r\n\t\t\t_itemType = ItemConsume;\r\n\t\t\tbreak;\r\n\t\tcase \"3\":\r\n\t\t\t//TODO: ItemInstall\r\n\t\t\t_itemType = ItemInstall;\r\n\t\t\tbreak;\r\n\t\tcase \"4\":\r\n\t\t\tconsole.error(\"未完成 ItemEtc\");\r\n\t\t\t_itemType = ItemEtc;\r\n\t\t\tbreak;\r\n\t\tcase \"5\":\r\n\t\t\tconsole.error(\"未完成 ItemCash\");\r\n\t\t\t_itemType = ItemCash;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"?? typeId: \" + typeId);\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tlet itemPrototype;\r\n\ttry {\r\n\t\titemPrototype = await ItemCategoryInfo.getItem(itemId);// raw\r\n\t}\r\n\tcatch (ex) {\r\n\t\tthrow ex;\r\n\t}\r\n\tif (!itemPrototype) {\r\n\t\tconsole.warn(\"item not exist: \" + itemId);\r\n\t\treturn null;\r\n\t}\r\n\t_loadedItem[itemId] = itemPrototype;\r\n\r\n\tlet item = new _itemType(itemId, itemPrototype);\r\n\r\n\tif (props && props.length) {\r\n\t\t//TODO: deep copy\r\n\t\tObject.assign(item, ...props);\r\n\t}\r\n\r\n\treturn item;\r\n}\r\n\r\n\r\nexport class ItemSlot extends KeySlotData {\r\n\t/**\r\n\t * @template T\r\n\t * @param {number} itemSlot\r\n\t * @param {number} itemSN\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\tconstructor(itemSlot, itemSN, itemData, amount) {\r\n\t\tsuper();\r\n\r\n\t\tthis.SN = itemSN;\r\n\t\tthis.slot = itemSlot;\r\n\t\tthis.amount = amount;\r\n\t\t\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} - item props\r\n\t\t */\r\n\t\tthis.data = itemData;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @template T\r\n\t * @param {number} itemSlot\r\n\t * @param {number} itemSN\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\tassign(itemSlot, itemSN, itemData, amount) {\r\n\t\tthis.SN = itemSN;\r\n\t\tthis.slot = itemSlot;\r\n\t\tthis.amount = amount;\r\n\r\n\t\tthis.data = itemData;\r\n\t}\r\n\r\n\t_clear() {\r\n\t\tthis.data = null;\r\n\t\tthis.amount = 0;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((!this.data && this.amount) || (this.data && !this.amount)) {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !this.data && !this.amount;\r\n\t}\r\n\r\n\tgetData() {\r\n\t\treturn this.data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} data\r\n\t */\r\n\tsetData(data) {\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t */\r\n\tstatic parse(text) {\r\n\t\tif (text.__proto__ == String.prototype) {\r\n\t\t\tlet iSlot = new ItemSlot();\r\n\t\t\tlet o = JSON.parse(text);\r\n\t\t\t//iSlot.SN = o.SN;\r\n\t\t\t//iSlot.slot = o.slot;\r\n\t\t\t//iSlot.amount = o.amount;\r\n\t\t\t//iSlot.itemId = o.itemId;\r\n\t\t\tObject.assign(iSlot, o);\r\n\t\t\treturn iSlot;\r\n\t\t}\r\n\t\tthrow new TypeError();\r\n\t}\r\n}\r\n","﻿\r\nclass CharacterBaseStat {\r\n\tconstructor() {\r\n\t\tthis.hp = 8855;\r\n\t\tthis.mp = 5246;\r\n\t\tthis.mhp = 28855;\r\n\t\tthis.mmp = 25246;\r\n\t\tthis.exp = 55;\r\n\r\n\t\tthis.str = 123;\r\n\t\tthis.luk = 4;\r\n\t\tthis.dex = 999;\r\n\t\tthis.int = 4;\r\n\t}\r\n}\r\n\r\nclass CharacterTemporaryStat {\r\n}\r\n\r\nconst symbol_job = Symbol(\"job\");\r\nconst symbol_onJobChange = Symbol(\"onJobChange\");\r\n\r\nclass CharacterStat extends CharacterBaseStat {\r\n\tconstructor(sceneChara) {\r\n\t\tsuper();\r\n\r\n\t\tthis._$sceneChara = sceneChara;\r\n\r\n\t\tthis.level = 150;\r\n\r\n\t\t//this._job = 3;\r\n\t\t//this._spec_job = 3;\r\n\r\n\t\t///** @type {number} - 最大屬性攻擊 */\r\n\t\t//this.currentMaxBaseDamage = 10000;\r\n\r\n\t\t///** @type {number} - 最小屬性攻擊 */\r\n\t\t//this.currentMinBaseDamage = 1000;\r\n\r\n\t\t/** @type {number} - 爆擊率 0~100 */\r\n\t\tthis.critRate = 50;\r\n\r\n\t\t/** @type {number} - 爆擊傷害 0~100 */\r\n\t\tthis.critDamage = 80;\r\n\r\n\t\t///** @type {number} - 最大爆擊傷害 0~100 */\r\n\t\t//this.maxCritDamage = 80;\r\n\r\n\t\t///** @type {number} - 最小爆擊傷害 0~100 */\r\n\t\t//this.minCritDamage = 40;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget job() {\r\n\t\treturn this[symbolStatJob];\r\n\t}\r\n\tset job(value) {\r\n\t\tthis[symbolStatJob] = value;\r\n\r\n\t\tconst onJobChange = this[symbol_onJobChange];\r\n\r\n\t\tif (_onJobChange) {\r\n\t\t\t_onJobChange()\r\n\t\t}\r\n\t}\r\n\r\n\t/** @param {function():void} cbfunc */\r\n\tonJobChange(cbfunc) {\r\n\t\tthis[symbol_onJobChange] = cbfunc;\r\n\t}\r\n\r\n\t_getTotalAttack() {\r\n\t\treturn 100;\r\n\t}\r\n\r\n\t/** @returns {number} - 最大屬性攻擊 */\r\n\tgetCurrentMaxBaseDamage() {\r\n\t\t//return this.currentMaxBaseDamage;\r\n\t\treturn 1.30 * (4 * this.dex + this.str) * (this._getTotalAttack() / 100);\r\n\t}\r\n\t/** @returns {number} - 最小屬性攻擊 */\r\n\tgetCurrentMinBaseDamage() {\r\n\t\t//return this.currentMinBaseDamage;\r\n\t\treturn 1.30 * (this.dex + this.str) * (this._getTotalAttack() / 100);\r\n\t}\r\n\t/** @returns {number} - 爆擊率 0~100 */\r\n\tgetCritRate() {\r\n\t\treturn this.critRate;\r\n\t}\r\n\t/** @returns {number} - 爆擊傷害 0~100 */\r\n\tgetCritDamage() {\r\n\t\treturn this.critDamage;\r\n\t}\r\n\t///** @returns {number} - 最大爆擊傷害 0~100 */\r\n\t//getMaxCritDamage() {\r\n\t//\treturn this._$maxCritDamage;\r\n\t//}\r\n\t///** @returns {number} - 最小爆擊傷害 0~100 */\r\n\t//getMinCritDamage() {\r\n\t//\treturn this._$minCritDamage;\r\n\t//}\r\n\r\n\tgetHpPercentS() {\r\n\t\treturn (this.hp * 100 / this.mhp).toFixed(0);\r\n\t}\r\n\tgetMpPercentS() {\r\n\t\treturn (this.mp * 100 / this.mmp).toFixed(0);\r\n\t}\r\n\tgetExpPercentS() {\r\n\t\treturn (this.exp * 100 / this.getNextExp()).toFixed(2);\r\n\t}\r\n\tgetNextExp() {\r\n\t\treturn 100;\r\n\t}\r\n}\r\n\r\n//?? packet\r\nclass $RemotePlayerData {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.id = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.equips_code = null;\r\n\t\t\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.chatBalloonStyle = 0;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.labelStyle = 0;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.damageSkin = \"default\";\r\n\t}\r\n}\r\n//?? packet\r\nclass $PlayerData extends $RemotePlayerData {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t/** @type {CharacterStat} */\r\n\t\tthis.stat = undefined;\r\n\t}\r\n\r\n\tgetRemoteData() {\r\n\t\treturn {\r\n\t\t\tid: this.id,\r\n\t\t\tmapId: this.mapId,\r\n\t\t\tequips_code: this.equips_code,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tCharacterStat,\r\n\t$RemotePlayerData, $PlayerData,\r\n};\r\n","\r\nimport { LayerObject, Layer } from \"./Layer.js\"\r\nimport { RenderingOption } from \"./RenderingOption\";\r\n\r\n\r\n/**\r\n * @implements {LayerObject}\r\n */\r\nclass SceneRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {Layer[]} */\r\n\t\tthis.layers = [];\r\n\t\t\r\n\t\t/** @type {RenderingOption} */\r\n\t\tthis.rendering_option = new RenderingOption();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} amount\r\n\t */\r\n\taddLayerBack(amount) {\r\n\t\tfor (let i = 0; i < amount; ++i) {\r\n\t\t\tthis.layers.push(new Layer()); \r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tfor (let layer of this.layers) {\r\n\t\t\tlayer.update(stamp);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} layerIndex\r\n\t */\r\n\trenderLayer(renderer, layerIndex) {\r\n\t\tconst layer = this.layers[layerIndex];\r\n\t\tlayer.render(renderer, this.rendering_option);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_renderAll(renderer) {\r\n\t\tfor (let layer of this.layers) {\r\n\t\t\tlayer.render(renderer, this.rendering_option);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const sceneRenderer = new SceneRenderer();\r\n\r\nwindow.$sceneRenderer = sceneRenderer;\r\n\r\n","﻿\r\nimport { Rectangle, Vec2 } from \"../math.js\";\r\n\r\nimport {\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2Body, b2Fixture,\r\n\tb2PolygonShape, b2CircleShape,\r\n\tb2Contact, b2Manifold,\r\n\tFixtureContactListener,\r\n} from \"./Physics.js\";\r\n\r\nimport { World } from \"./World.js\";\r\n\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { SceneSkill, SkillEffectAnimation } from \"../Skill.js\";\r\n\r\nimport { AttackInfo } from \"../../Common/AttackInfo.js\";\r\n\r\nimport { BaseSceneCharacter } from \"../SceneCharacter.js\";//?? SceneCharacter, SceneRemoteCharacter\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport class PBullet {\r\n\t/**\r\n\t * @param {PPlayer} owner\r\n\t * @param {SceneSkill} skill\r\n\t * @param {SkillEffectAnimation} bulletRenderer\r\n\t */\r\n\tconstructor(owner, skill, bulletRenderer) {\r\n\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\tif (!owner || !skill || !bulletRenderer) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\talert(\"new PBullet(owner, skill)\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.owner = owner;\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {SceneSkill} */\r\n\t\tthis.skill = skill;\r\n\r\n\t\t/** @type {SkillEffectAnimation} */\r\n\t\tthis.bulletRenderer = bulletRenderer;\r\n\r\n\t\t/** @type {BaseBulletMoveFunc} */\r\n\t\tthis.bulletMoveFunc = null;\r\n\r\n\t\t/** @type {-1|1} */\r\n\t\tthis.front = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Partial<FixtureContactListener>=} listener\r\n\t */\r\n\t_create(listener) {\r\n\t\tconst world = this.owner.body.GetWorld();\r\n\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tconst cx = (this.bulletRenderer.textures[0]._raw.__w * 0.5) / $gv.CANVAS_SCALE;\r\n\t\tconst cy = (this.bulletRenderer.textures[0]._raw.__h * 0.5) / $gv.CANVAS_SCALE;\r\n\r\n\t\tlet { x, y } = this.owner.body.GetWorldCenter();\r\n\t\tconst front = this.owner.state.front;\r\n\r\n\t\t//TODO: set bullet position, front, angle\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;\r\n\t\tif (front > 0) {\r\n\t\t\tbdef.position.Set(x + cx, y);\r\n\t\t}\r\n\t\telse if (front < 0) {\r\n\t\t\tbdef.position.Set(x - cx, y);\r\n\t\t}\r\n\t\telse {//?? center position\r\n\t\t\tbdef.position.Set(x, y);\r\n\t\t}\r\n\t\tbdef.angle = 0;//???\r\n\t\tbdef.gravityScale = 0;\r\n\t\tbdef.allowSleep = false;\r\n\t\tbdef.bullet = true;\r\n\t\tbdef.fixedRotation = true;\r\n\t\tbdef.userData = this;\r\n\r\n\t\tthis.body = world.CreateBody(bdef);\r\n\r\n\t\tshape.SetAsBox(cx, cy);//renderer origin is center\r\n\t\t\r\n\t\t//TODO: implement filter: player_bullet\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"bullet\"));\r\n\t\t//fdef.filter.Copy(FilterHelper.get(\"pvp_bullet\"));\r\n\t\t\r\n\t\tfdef.userData = this;\r\n\r\n\t\tlet fixture = this.body.CreateFixture(fdef);\r\n\r\n\t\tif (listener) {\r\n\t\t\tObject.keys(FixtureContactListener.prototype).forEach(key => fixture[key] = listener[key]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfixture.preSolve = bullet_default_preSolve;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetPosition() {\r\n\t\treturn this.body.GetPosition();\r\n\t}\r\n\r\n\t/**\r\n\t * default is horizontal move front\r\n\t * @param {BaseBulletMoveFunc=} bulletMoveFunc\r\n\t * @param {number=} linearVelocityX - unit is meter\r\n\t * @param {number=} linearVelocityY - unit is meter\r\n\t */\r\n\tlaunch(bulletMoveFunc, linearVelocityX, linearVelocityY) {\r\n\t\tif (bulletMoveFunc) {\r\n\t\t\tdebugger;\r\n\r\n\t\t\tthis.bulletMoveFunc = bulletMoveFunc;\r\n\t\t\t//TODO: this.bulletMoveFunc.Step\r\n\t\t\t//TODO: this.bulletMoveFunc.AfterStep\r\n\r\n\t\t\tthis.body.addStep(bulletMoveFunc.Step.bind(bulletMoveFunc, this));\r\n\t\t\tthis.body.addAfterStep(bulletMoveFunc.AfterStep.bind(bulletMoveFunc, this));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.body.m_linearVelocity.Set(linearVelocityX, linearVelocityY);\r\n\r\n\t\t\t//TODO: time to live, range limit\r\n\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\tthis.body.AfterStep = () => {\r\n\t\t\t\t\tthis.$tick = (this.$tick | 0) + 1;\r\n\t\t\t\t\tif (this.$tick > (window.$FIRE_BULLET_TIME_TO_LIVE || 60)) {\r\n\t\t\t\t\t\tthis.bulletRenderer.destroy();\r\n\t\t\t\t\t\tthis.destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tif (this.body) {\r\n\t\t\tthis.body.m_world.DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\r\n\t\t\t//this.bulletRenderer.destroy();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Manifold} oldManifold\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nfunction bullet_default_preSolve(contact, oldManifold, fa, fb) {\r\n\t/** @type {PPlayer} */\r\n\tconst targetPlayer = fb.m_userData;\r\n\tif (!targetPlayer) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/** @type {BaseSceneCharacter} */\r\n\tconst targetChara = targetPlayer.chara;//not implement yet\r\n\tif (!targetChara) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/** @type {PBullet} */\r\n\tconst that = fa.m_userData;\r\n\r\n\t/** @type {PPlayer} */\r\n\tconst ownerPlayer = that.owner;\r\n\t\r\n\t//not from self\r\n\tif (ownerPlayer == targetPlayer) {\r\n\t\treturn;\r\n\t}\r\n\tthat.skill.addAttack(targetChara);\r\n\r\n\tcontact.SetEnabled(false);\r\n\r\n\tthat.bulletRenderer.destroy();\r\n\tthat.destroy();\r\n}\r\n\r\n\r\n/**\r\n * 子彈的移動方式\r\n */\r\nexport class BaseBulletMoveFunc {\r\n\tconstructor() {\r\n\t}\r\n\r\n\t//TODO: base bullet move function\r\n\r\n\t/**\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tinit(bullet) {\r\n\t}\r\n\r\n\t/**\r\n\t * before update\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tStep(bullet) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tAfterStep(bullet) {\r\n\t}\r\n}\r\n\r\n\r\n\t///**\r\n\t// * b2Vec2(meter) to Vec2 (pixel)\r\n\t// * @returns {Vec2}\r\n\t// */\r\n\t//getPosition() { }","﻿\r\nimport { IRenderer } from \"./IRenderer.js\";\r\nimport { Sprite } from \"./Sprite.js\";\r\nimport { Animation } from \"./Animation\";\r\nimport { SceneObject } from \"./SceneObject\";\r\nimport { ActionAnimation } from './Renderer/CharacterActionAnimation.js';\r\nimport { CharacterAnimationBase } from \"./Renderer/CharacterRenderer.js\";\r\nimport { PPlayer } from \"./Physics/PPlayer.js\";\r\nimport { SceneCharacter } from \"./SceneCharacter.js\";\r\nimport { World } from \"./Physics/World.js\";\r\nimport { PBullet } from \"./Physics/PBullet.js\";\r\nimport { AttackInfo, AttackPair } from \"../Common/AttackInfo.js\";\r\n\r\nimport { Vec2 } from \"./math.js\";//dev\r\n\r\n\r\n// skill timeline\r\n//\r\n// 以 ActionAnimation 控制流程\r\n// skill 必須要有 ActionAnimation 才能正確運作(開始、結束)\r\n//\r\n// # normal skill\r\n// -delay1        | delay2\r\n// _init          | update\r\n// defaultAction  | wait current_action end\r\n//                | SkillEffect\r\n//\r\n// # rapid skill\r\n// delay1      | delay2         | delay3\r\n// _init       | control/update | update\r\n// prepare     | loop           | end\r\n// SkillEffect | SkillEffect    | SkillEffect\r\n\r\n\r\n/**\r\n * 23001002(藝術跳躍)\r\n * 24001002(幻影瞬步)\r\n */\r\nlet jump2_info = {\r\n\ttype: 40,\r\n\tcasterMove: 1,\r\n\tavaliableInJumpingState: 1\r\n};\r\n\r\n/**\r\n * 23121000(伊修塔爾之環): localhost/xml2/Skill/2312/skill/23121000\r\n */\r\nlet rapid_attack_info = {\r\n\ttype: 2,\r\n\tknockbackLimit: 80,\r\n\trapidAttack: 1\r\n};\r\n\r\n\r\nclass _SkillInfo {\r\n\tconstructor() {\r\n\t\tthis.type = 40;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.casterMove = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.avaliableInJumpingState = 1;\r\n\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.areaAttack = 1;\r\n\r\n\t\tthis.knockbackLimit = 80;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.rapidAttack = 1;\r\n\t}\r\n}\r\nclass _SkillCommonData {\r\n\tconstructor() {\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.lt = null;//new Vec2(-200, -113)\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.rb = null;//new Vec2(-10, 0)\r\n\r\n\t\t/** @type {string} - code */\r\n\t\tthis.mpCon = \"3 + d(x / 6)\";\r\n\r\n\t\t/** @type {string} - code */\r\n\t\tthis.damage = \"175 + 8 * x\";\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.mobCount = 6;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.attackCount = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.maxLevel = 20;\r\n\t}\r\n}\r\nclass _SkillData {\r\n\tconstructor() {\r\n\t\t/** @type {{ [actType: number]: string }} */\r\n\t\tthis.action = {\r\n\t\t\t\"0\": \"dualVulcanLoop\"\r\n\t\t};\r\n\r\n\t\t/** @type {_SkillCommonData} */\r\n\t\tthis.common = null;\r\n\r\n\t\t/** @type {_SkillInfo} */\r\n\t\tthis.info = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.effect = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.prepare = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydown = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydown0 = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydownend = null;\r\n\r\n\t\t/** @type {{[skill_id:string]:{[type:number]:number}}} */\r\n\t\tthis.finalAttack = {\r\n\t\t\t\"23100006\": {\r\n\t\t\t\t\"0\": 52\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.masterLevel = 10;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.combatOrders = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.weapon = 52;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.subWeapon = 35;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.psd = 1;\r\n\r\n\t\t/** @type {number} - ?? */\r\n\t\tthis.psdSkill = {\r\n\t\t\t23111002: {}\r\n\t\t};\r\n\r\n\t\t/** @type {{[skill_id:string]:number}} */\r\n\t\tthis.req = {\r\n\t\t\t\"23111000\": 20\r\n\t\t};\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.canJobRidingUse = 1;\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport class SkillEffectAnimation extends Animation {\r\n\tconstructor(raw/*, url*/) {\r\n\t\tsuper(raw/*, url*/);\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {{x: number, y: number, front:-1|1}} */\r\n\t\tthis.targetRenderer = null;\r\n\r\n\t\t/** @type {PBullet} */\r\n\t\tthis.$physics = null;\r\n\r\n\t\tthis.is_loop = false;\r\n\r\n\t\tthis.opacity = 1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string|number} type - ??\r\n\t * @param {string} url - ??\r\n\t * @param {object} raw - ??\r\n\t */\r\n\tload(type) {\r\n\t\tif (!this._raw) {\r\n\t\t\tthrow new TypeError(\"raw\");\r\n\t\t\t//this._url = [this._url, type].join(\"/\");\r\n\t\t\t//return super.load();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (Array.isArray(this._raw[type])) {\r\n\t\t\t\t/** @type {Sprite[]} */\r\n\t\t\t\tthis.textures = this._raw[type];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/** @type {Sprite[]} */\r\n\t\t\t\tthis.textures = this._raw;\r\n\t\t\t}\r\n\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\tif (!(this.textures[0] instanceof Sprite)) {\r\n\t\t\t\t\tthrow new TypeError();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\r\n\t\tthis.$physics = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.update_p(stamp);\r\n\t\t}\r\n\t\telse if (this.targetRenderer) {\r\n\t\t\tthis.update_r(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.render_p(renderer);\r\n\t\t}\r\n\t\telse if (this.targetRenderer) {\r\n\t\t\tthis.render_r(renderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate_p(stamp) {\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender_p(renderer) {\r\n\t\tconst pos = this.$physics.getPosition();\r\n\t\tconst front = this.$physics.front;\r\n\t\tconst x = pos.x * $gv.CANVAS_SCALE;\r\n\t\tconst y = pos.y * $gv.CANVAS_SCALE;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\t//renderer.pushGlobalAlpha();\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tthis.draw(renderer, x, y, 0, front > 0);\r\n\r\n\t\t//renderer.popGlobalAlpha();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate_r(stamp) {\r\n\t\tstamp *= this.targetRenderer.getSpeed();\r\n\t\t\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender_r(renderer) {\r\n\t\tthis.x = this.targetRenderer.x + this.targetRenderer.tx;//TODO: crr.tx and crr.ty ??\r\n\t\tthis.y = this.targetRenderer.y + this.targetRenderer.ty;\r\n\r\n\t\t//renderer.pushGlobalAlpha();\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tthis.draw(renderer, this.x, this.y, 0, this.targetRenderer.front > 0);\r\n\r\n\t\t//renderer.popGlobalAlpha();\r\n\t}\r\n}\r\n\r\nclass SkillHitAnimation extends SkillEffectAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * TODO: SceneObject 取代 EffectManager\r\n */\r\nexport class EffectManager {\r\n\tconstructor() {\r\n\t}\r\n\t\r\n\tstatic AddEffect(effect) {\r\n\t\teffect.update(0);//init effect position\r\n\t\t\r\n\t\tEffectManager._effects.push(effect);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tstatic Update(stamp) {\r\n\t\tconst effects = EffectManager._effects;\r\n\t\t\r\n\t\tEffectManager._effects = effects.filter(function (eff) {\r\n\t\t\tif (!eff.isEnd()) {\r\n\t\t\t\teff.update(stamp);\r\n\t\t\t}\r\n\t\t\tif (eff.isEnd()) {\r\n\t\t\t\teff.destroy();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tstatic Render(renderer) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\tconst effects = EffectManager._effects;\r\n\t\tfor (let i = 0; i < effects.length; ++i) {\r\n\t\t\teffects[i].render(renderer);\r\n\t\t}\r\n\r\n\t\trenderer.popGlobalAlpha();\r\n\t}\r\n}\r\n/** @type {Animation[]} */\r\nEffectManager._effects = [];\r\n\r\nwindow.$EffectManager = EffectManager;\r\n\r\n\r\n\r\n/**\r\n * \r\n */\r\nclass SkillAnimationBase {\r\n\t///**\r\n\t// * @param {object} raw\r\n\t// * @param {string} url\r\n\t// */\r\n\tconstructor(/*raw, url*/) {\r\n\t\t//this._raw = raw;\r\n\r\n\t\t/**\r\n\t\t * @type {_SkillData}\r\n\t\t */\r\n\t\tthis.data = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.url = null;\r\n\t\t\r\n\t\t//this.textures = {\r\n\t\t//\teffect: [],\r\n\t\t//\thit: {\r\n\t\t//\t\t\"0\": []\r\n\t\t//\t},\r\n\t\t//}\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.skillId = null;\r\n\r\n\t\t/**\r\n\t\t * actType = GetJobInfo(chara).avaliableWeapon.indexOf(ItemInfo.get(chara.weapon).type)\r\n\t\t */\r\n\t\tthis.actType = 0;\r\n\t\t\r\n\t\t/** @type {SceneObject} */\r\n\t\tthis._owner = null;\r\n\r\n\t\t/** @type {CharacterAnimationBase} */\r\n\t\tthis._crr = null;\r\n\r\n\t\t/** @type {ActionAnimation} */\r\n\t\tthis._actani = null;\r\n\t\t\r\n\t\t/** @type {number} - skill type */\r\n\t\tthis.type = 0;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis._$is_end = false;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_launch = false;\r\n\t\t\r\n\t\t//if (raw && url) {\r\n\t\t//\tthis.__load(url, raw, null);\r\n\t\t//}\r\n\r\n\t\t/** @type {\"prepare\"|\"keydown\"|\"keydownend\"} */\r\n\t\tthis.state = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t}\r\n\r\n\tget is_end() {\r\n\t\treturn this._$is_end;\r\n\t}\r\n\tset is_end(value) {\r\n\t\tthis._$is_end = value;\r\n\t\tif (value) {\r\n\t\t\tthis.owner.$physics.state.invokeSkill = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {SceneObject} */\r\n\tget owner() {\r\n\t\treturn this._owner;\r\n\t}\r\n\tset owner(value) {\r\n\t\tif (!value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._owner = value;\r\n\r\n\t\tthis._crr = value.renderer;\r\n\t\tif (!this._crr) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//const chara = value; //??\r\n\t\t//this.actType = GetJobInfo(chara).avaliableWeapon.indexOf(ItemInfo.get(chara.weapon).type)\r\n\r\n\t\tthis._actani = this._crr.actani;\r\n\t\tif (!this._actani) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * return this._owner as SceneCharacter\r\n\t * @alias owner\r\n\t * @returns {SceneCharacter}\r\n\t */\r\n\tget _owner_player() {\r\n\t\treturn this._owner;\r\n\t}\r\n\tset _owner_player(value) {\r\n\t\tthis.owner = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} action\r\n\t */\r\n\t_applyAction(action) {\r\n\t\tif (this._actani && this.data) {\r\n\t\t\tconst actions = this.data.action;\r\n\t\t\tthis._actani.reload(action);//action ? 0, 1\r\n\t\t\tthis._actani.loop = false;\r\n\t\t\t\r\n\t\t\tthis.owner.$physics.state.invokeSkill = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\t_getDefaultAction() {\r\n\t\tconst actions = this.data.action;\r\n\t\treturn actions[this.actType];\r\n\t}\r\n\r\n\t/** skill default action */\r\n\t_applyDefaultAction() {\r\n\t\tthis._applyAction(this._getDefaultAction());\r\n\t}\r\n\r\n\t_isFinishDefaultAction() {\r\n\t\tconst act = this._getDefaultAction();\r\n\t\tif (this._actani) {\r\n\t\t\treturn this._actani._action != act;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * download data, load texture\r\n\t * @param {string} skillId\r\n\t */\r\n\tasync _load(skillId) {\r\n\t\tconst jobID = /^(\\d+)\\d{4}$/.exec(skillId)[1];\r\n\r\n\t\tconst url = `${this.constructor._base_path}/${jobID}/skill/${skillId}`;\r\n\r\n\t\tlet raw;\r\n\t\ttry {\r\n\t\t\traw = await $get.data(url);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\tif (!raw) {\r\n\t\t\talert(\"SkillAnimationBase\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.data = raw;\r\n\t\t\r\n\t\tthis.url = url;\r\n\r\n\t\tthis.skillId = skillId;\r\n\r\n\t\tthis.type = this.data.info ? (this.data.info.type || 0) : 0;//const\r\n\r\n\t\tthis.__proto__ = this._decide_type().prototype;\r\n\t\t{\r\n\t\t\tthis._loadTexture(raw);\r\n\r\n\t\t\tthis._init();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * copy\r\n\t * @param {SkillAnimationBase} skill_anim\r\n\t * @param {SkillAnimationBase} proto - skill prototype\r\n\t */\r\n\t_assign(skill_anim, proto) {\r\n\t\tthis.data = skill_anim.data;\r\n\t\t\r\n\t\tthis.url = skill_anim.url;\r\n\r\n\t\tthis.skillId = skill_anim.skillId;\r\n\t\t\r\n\t\tthis.type = skill_anim.type;//const\r\n\r\n\t\tthis.__proto__ = this._decide_type().prototype;\r\n\t\t{\r\n\t\t\tthis._init();\r\n\t\t}\r\n\t}\r\n\t\r\n\t_loadTexture() {\r\n\t\tfor (let effName of this._effect_names) {\r\n\t\t\tlet eff = this.data[effName];\r\n\t\t\tif (eff) {\r\n\t\t\t\tthis.data[effName] = arrNd_texture(eff/*, [this.url, effName].join(\"/\")*/);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction arrNd_texture(arrNd/*, url*/) {\r\n\t\t\tif (\"0\" in arrNd[0]) {\r\n\t\t\t\treturn arr2d_texture(arrNd/*, url*/);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn arr1d_texture(arrNd/*, url*/);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction arr1d_texture(arr1d/*, url*/) {\r\n\t\t\tlet effect = [];\r\n\t\t\tfor (let  i = 0; i in arr1d; ++i) {\r\n\t\t\t\tlet data = arr1d[i];\r\n\t\t\t\tlet tex = new Sprite(data);\r\n\t\t\t\t//tex._url = `${url}/${i}`;\r\n\t\t\t\teffect[i] = tex;\r\n\t\t\t}\r\n\t\t\teffect.action = arr1d.action;\r\n\t\t\treturn effect;\r\n\t\t}\r\n\t\tfunction arr2d_texture(arr2d/*, url*/) {\r\n\t\t\tlet hit = [];\r\n\t\t\tfor (let i = 0; i in arr2d; ++i) {\r\n\t\t\t\t//const url_i = `${url}/${i}`;\r\n\t\t\t\tlet group = arr2d[i];\r\n\t\t\t\thit[i] = [];\r\n\t\t\t\tfor (let  j = 0; j in group; ++j) {\r\n\t\t\t\t\tlet data = group[j];\r\n\t\t\t\t\tlet tex = new Sprite(data);\r\n\t\t\t\t\t//tex._url = `${url_i}/${j}`;\r\n\t\t\t\t\thit[i][j] = tex;\r\n\t\t\t\t}\r\n\t\t\t\thit[i].action = group.action;\r\n\t\t\t}\r\n\t\t\treturn hit;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * reset and restart\r\n\t */\r\n\treset() {\r\n\t\tthis._actani.reset();\r\n\t\tthis.is_launch = false;\r\n\t}\r\n\r\n\t/**\r\n\t * is owner can invoke skill\r\n\t * @virtual\r\n\t * @param {SceneCharacter} owner\r\n\t * @returns {boolean}\r\n\t */\r\n\ttest(owner) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * onKeydown + onKeyup\r\n\t * TODO: 可控制方向的技能\r\n\t * @virtual\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * TODO: 自動攻擊、被動技能、debuf\r\n\t * @virtual\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$promise) {\r\n\t\t\t//Now loading...\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t\tconsole.warn(\"Skill not implement: \" + this.skillId);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * no timer\r\n\t * @param {number} stamp\r\n\t */\r\n\t_default_update(stamp) {\r\n\t\t//stamp *= this.targetRenderer.getSpeed();\r\n\r\n\t\tif (this._actani) {\r\n\t\t\tif (this._actani.delay) {// not start yet\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (!this.is_launch) {\r\n\t\t\t\tthis._addEffect();\r\n\r\n\t\t\t\tthis.is_launch = true;\r\n\t\t\t}\r\n\t\t\tif (this._actani.isEnd()) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneObject} targetObject\r\n\t */\r\n\taddAttack(targetObject) {\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tconst owner = this._owner;\r\n\r\n\t\tlet attack = new AttackPair();\r\n\r\n\t\t//attack.objectid = targetObject.$objectid;\r\n\t\tattack.setTargetObject(targetObject);\r\n\r\n\t\tattack.allDamage.length = this.data.common.attackCount;\r\n\r\n\t\t////apply damage\r\n\t\t//for (let i = 0; i < attack.allDamage.length; ++i) {\r\n\t\t//\ttargetObject.damage(owner, 123);\r\n\t\t//}\r\n\t\t////\r\n\t\t//targetObject.knockback(chara, 16, 16);\r\n\r\n\t\tthis.attackInfo.allAttack.push(attack);\r\n\t}\r\n\t\r\n\tcreateBullet(effectName) {\r\n\t\tlet eff, bullet;\r\n\r\n\t\t//bullet renderer\r\n\t\t{\r\n\t\t\teff = this._addEffect(effectName);\r\n\r\n\t\t\teff.is_loop = true;\r\n\t\t}\r\n\r\n\t\t//bullet physics\r\n\t\t{\r\n\t\t\tbullet = new PBullet(this.owner.$physics, this, eff);\r\n\r\n\t\t\tbullet._create();\r\n\r\n\t\t\tbullet.launch(null, this.owner.$physics.state.front * (window.$BULLET_SPEED | 32), 0);\r\n\t\t}\r\n\r\n\t\t//link renderer and physics\r\n\t\teff.$physics = bullet;\r\n\r\n\t\treturn bullet;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {boolean} [isBullet=false]\r\n\t */\r\n\t_addDefaultEffect(isBullet) {\r\n\t\tthis._applyDefaultAction();\r\n\t\tthis._addEffect(\"effect\", isBullet);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} [effectName=\"effect\"]\r\n\t * @param {boolean} [isBullet=false]\r\n\t */\r\n\t_addEffect(effectName = \"effect\", isBullet) {\r\n\t\tlet action = this.data[effectName].action;\r\n\t\tif (action) {\r\n\t\t\tthis._applyAction(action);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst type = this.actType;\r\n\t\t\tlet effect = new SkillEffectAnimation(this.data[effectName]/*, [this.url, effectName].join(\"/\")*/);\r\n\r\n\t\t\tif (isBullet) {\r\n\t\t\t\t//...??\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\teffect.targetRenderer = this._crr;\r\n\t\t\t}\r\n\t\t\teffect.load(type);\r\n\r\n\t\t\tEffectManager.AddEffect(effect);\r\n\r\n\t\t\treturn effect;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {{x: number, y: number}=} target\r\n\t * @param {number=} type\r\n\t */\r\n\t_addHitEffect(x, y, target, type) {\r\n\t\tlet hit = new SkillHitAnimation();\r\n\t\t\r\n\t\thit.target = target;\r\n\t\t\r\n\t\thit.load(this.url + \"/hit/\" + type, this.data.hit, type);\r\n\t\t\r\n\t\tEffectManager.AddEffect(hit);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @returns {function():(T extends SkillAnimationBase)}\r\n\t */\r\n\t_decide_type() {\r\n\t\tconst info = this.data.info;\r\n\r\n\t\t//TODO: register skill\r\n\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\tcase 2:\r\n\t\t\t\tif (info.rapidAttack) {\r\n\t\t\t\t\treturn _SkillAnimation_RapidAttack;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40:\r\n\t\t\t\tif (info.casterMove && info.avaliableInJumpingState) {\r\n\t\t\t\t\treturn _SkillAnimation_N_Jump;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn _SkillAnimation_Default;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _effect_names() {\r\n\t\treturn [\"effect\", \"hit\"];\r\n\t}\r\n\t\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Skill\";\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_Default extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis._default_update(stamp);\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_RapidAttack extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\r\n\t\tthis.state = \"prepare\";\r\n\t\tthis._state_func = this._prepare;\r\n\t\tthis.current_effect = this._addEffect(this.state);\r\n\r\n\t\t/** animation */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** fire bullet */\r\n\t\tthis.tick = 0;\r\n\r\n\t\tthis.fadeTotalTime = this._actani.getTotalTime();\r\n\r\n\t\tthis._crr.fixed_speed = true;\r\n\t}\r\n\r\n\t_prepare() {\r\n\t\tthis.current_effect.opacity = this.time / this.fadeTotalTime;\r\n\t\tif (this.current_effect.opacity > 1) {\r\n\t\t\tthis.current_effect.opacity = 1;\r\n\t\t}\r\n\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\tthis.current_effect.opacity = 0;//prepare\r\n\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\tthis.state = \"keydown\";\r\n\t\t\tthis._state_func = this._keydown;\r\n\t\t\tthis.current_effect = this._addEffect(this.state);\r\n\r\n\t\t\tthis._actani.loop = true;\r\n\t\t\tthis.current_effect.is_loop = true;\r\n\r\n\t\t\tthis.time = 0;//reset\r\n\t\t}\r\n\t}\r\n\t_keydown() {\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\t//this.current_effect.reset();\r\n\t\t\t//this.current_effect.opacity = 1;\r\n\t\t\t//this._actani.reset();\r\n\t\t\tthis.time = 0;//reset\r\n\t\t}\r\n\t}\r\n\t_keydownend() {\r\n\t\tthis.current_effect.opacity = 1 - (this.time / this.fadeTotalTime);\r\n\t\tif (this.current_effect.opacity < 0) {\r\n\t\t\tthis.current_effect.opacity = 0;\r\n\t\t}\r\n\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\tthis.current_effect.opacity = 0;//keydownend\r\n\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\tthis._crr.fixed_speed = false;\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * is owner can invoke skill\r\n\t * @override\r\n\t * @param {SceneCharacter} owner\r\n\t * @returns {boolean}\r\n\t */\r\n\ttest(owner) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t\tswitch (this.state) {\r\n\t\t\tcase \"prepare\":\r\n\t\t\tcase \"keydown\":\r\n\t\t\t\tif (!keyDown || keyUp) {\r\n\t\t\t\t\tthis.current_effect.opacity = 0;//keydown\r\n\t\t\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\t\t\tthis.state = \"keydownend\";\r\n\t\t\t\t\tthis._state_func = this._keydownend;\r\n\t\t\t\t\tthis.current_effect = this._addEffect(this.state);\r\n\t\t\t\t\tthis.fadeTotalTime = this._actani.getTotalTime();\r\n\r\n\t\t\t\t\tthis._actani.loop = false;\r\n\t\t\t\t\tthis.time = 0;//reset\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\t//keydown(first step): prepare\r\n\t\t//keydown(second step): keydown + keydown0\r\n\t\t//keyup: keydownend\r\n\r\n\t\tstamp *= this._crr.getSpeed();\r\n\t\tthis.time += stamp;\r\n\r\n\t\t++this.tick;\r\n\r\n\t\tthis._state_func();\r\n\r\n\t\tif (this.tick % (window.$FIRE_BULLET_T | 3) == (window.$FIRE_BULLET_T2 | 2) && this.state != \"keydownend\") {\r\n\t\t\tthis.createBullet(\"ball\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _effect_names() {\r\n\t\treturn [\"prepare\", \"keydown\", \"keydownend\", \"hit\", \"ball\"];\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_N_Jump extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis.jump_max_count = (window.jump_max_count || 2);\r\n\t}\r\n\r\n\tjump2() {\r\n\t\tconst crr = this._crr;\r\n\t\t//const body = this._owner_player.$physics.body;\r\n\t\tconst foot_walk = this._owner_player.$physics.foot_walk;\r\n\r\n\t\tconst pos = this._owner_player.$physics.getPosition();\r\n\t\tconsole.log(\"pos: { x: %o, y: %o }\", pos.x, pos.y);\r\n\r\n\t\t//body.ConstantVelocityWorldCenter2((window.$NJmpX || 40) * crr.front, (window.$NJmpY || 0));\r\n\t\tfoot_walk.ConstantVelocityWorldCenter2((window.$NJmpX || 40) * crr.front, (window.$NJmpY || 0));\r\n\r\n\t\tthis._addDefaultEffect();\r\n\t}\r\n\r\n\t/**\r\n\t * is owner can invoke skill\r\n\t * @override\r\n\t * @param {SceneCharacter} owner\r\n\t * @returns {boolean}\r\n\t */\r\n\ttest(owner) {\r\n\t\tconst $physics = owner.$physics;\r\n\t\tconst state = owner.$physics.state;\r\n\t\treturn !$physics.$foothold && state.jump && state.jump_count < this.jump_max_count;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t\tif (!this._owner_player) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (keyDown == 1 && this.test(this._owner_player)) {\r\n\t\t\tconst $physics = this._owner_player.$physics;\r\n\t\t\t\r\n\t\t\t$physics.state.jump_count += $physics.state.jump_count ? 1 : 2;\r\n\r\n\t\t\tthis.jump2()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst $physics = this._owner_player.$physics;\r\n\r\n\t\tif (this._isFinishDefaultAction()) {\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ($physics.$foothold) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t\telse if (!$physics.state.jump) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * TODO: add skill\r\n */\r\nclass __SkillAnimation_Template extends SkillAnimationBase {\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t\t// ...\r\n\t}\r\n\r\n\t/**\r\n\t * is owner can invoke skill\r\n\t * @override\r\n\t * @param {SceneCharacter} owner\r\n\t * @returns {boolean}\r\n\t */\r\n\ttest(owner) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t}\r\n}\r\n\r\nexport class SceneSkill extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {AttackInfo} */\r\n\t\tthis.attackInfo = new AttackInfo();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @param {SceneObject} owner\r\n\t */\r\n\tasync load(skillId, owner) {\r\n\t\tthis.owner = owner;\r\n\r\n\t\tif (!skillId) {\r\n\t\t\tthrow new Error(\"1 argument required\");\r\n\t\t}\r\n\t\t\r\n\t\tif (String(skillId).length <= 4) {\r\n\t\t\tthrow new Error(\"skill ID format\");\r\n\t\t}\r\n\t\t//skillId = 1120017;//1001005;// jobId + 4-digit\r\n\r\n\t\tthis.attackInfo.skillId = skillId;\r\n\t\t\r\n\t\tthis.update = this.wait_loading;\r\n\t\tthis.control = this.wait_loading;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tlet loaded_skill = SceneSkill.__loaded_skill[skillId];\r\n\t\t\tif (loaded_skill) {\r\n\t\t\t\tif (loaded_skill.$promise) {\r\n\t\t\t\t\tthis.$promise = loaded_skill.$promise;\r\n\t\t\t\t\tawait loaded_skill.$promise;\r\n\t\t\t\t\tdelete this.$promise;\r\n\t\t\t\t}\r\n\t\t\t\tthis._assign(loaded_skill);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet promise = this._load(skillId/*, owner*/);//owner ??\r\n\r\n\t\t\t\tthis.$promise = promise;\r\n\r\n\t\t\t\tSceneSkill.__loaded_skill[skillId] = this;\r\n\r\n\t\t\t\tawait promise;\r\n\r\n\t\t\t\tdelete this.$promise;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(\"can not load skill: %o, owner: %o\", skillId, owner);\r\n\t\t\tdelete this.$promise;\r\n\t\t\tthis.update = this.__load_failed;//debug\r\n\t\t\tthis.control = this.__load_failed;//debug\r\n\t\t\t//delete SceneSkill.__loaded_skill[skillId];//try reload\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\tdelete this.update;\r\n\t\tdelete this.control;\r\n\t}\r\n\t\r\n\twait_loading() {\r\n\t}\r\n\t\r\n\t/**\r\n\t * debug\r\n\t */\r\n\t__load_failed() {\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @returns {SceneSkill}\r\n\t */\r\n\tstatic preload(skillId) {\r\n\t\ttry {\r\n\t\t\tlet loaded_skill = SceneSkill.__loaded_skill[skillId];\r\n\t\t\tif (loaded_skill) {\r\n\t\t\t\treturn loaded_skill;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet skill = new SceneSkill();\r\n\t\t\t\t\r\n\t\t\t\tskill.load(skillId, \"static preload no owner\");\r\n\t\t\t\t\r\n\t\t\t\treturn skill;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(\"can not preload skill: %o\", skillId);\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t}\r\n}\r\nSceneSkill.__loaded_skill = {};\r\n\r\nwindow.$SceneSkill = SceneSkill;\r\n\r\nclass _ArrowKey {\r\n\tconstructor() {\r\n\t\tthis.left = 0;\r\n\t\tthis.up = 0;\r\n\t\tthis.right = 0;\r\n\t\tthis.down = 0;\r\n\t}\r\n}\r\n","﻿/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\nimport {\r\n\tb2_pi,\r\n\tb2Vec2, b2Rot, b2DegToRad, b2Transform, b2AABB,\r\n\tb2Color, b2Draw, b2DrawFlags,\r\n\tb2Body, b2Fixture,\r\n\tb2Joint,\r\n} from \"./Physics.js\";\r\nimport { Rectangle } from \"../math.js\";\r\n\r\n\r\nfunction setFlags(flags, bit, flag) {\r\n\treturn flag ? (flags | bit):(flags & ~bit);\r\n}\r\n\r\nclass DebugDraw extends b2Draw {\r\n\t/**\r\n\t * This class implements debug drawing callbacks that are\r\n\t * invoked inside b2World::Step.\r\n\t * @export\r\n\t * @constructor\r\n\t * @extends {b2Draw}\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\tconstructor(ctx) {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/**\r\n\t\t * @type {CanvasRenderingContext2D}\r\n\t\t */\r\n\t\tthis.m_ctx = ctx;\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.axis_length = 1;\r\n\r\n\t\t/**\r\n\t\t * @type {b2Rot}\r\n\t\t */\r\n\t\tthis.viewRotation = new b2Rot(b2DegToRad(0));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.viewZoom = 1;\r\n\t\t\r\n\t\tthis.flag_drawShape = true;\r\n\t\tthis.flag_drawJoint = true;\r\n\t\tthis.flag_drawAabb = false;\r\n\t\tthis.flag_drawCenterOfMass = true;\r\n\t\tthis.flag_drawController = true;\r\n\t\tthis.flag_drawParticle = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tget canvasScale() {\r\n\t\treturn $gv.CANVAS_SCALE;\r\n\t}\r\n\tset canvasScale(value) {\r\n\t\t$gv.CANVAS_SCALE = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {Rectangle}\r\n\t */\r\n\tget viewRect() {\r\n\t\treturn $gv.m_viewRect;\r\n\t}\r\n\r\n\tset flag_drawAll(flag) { this.m_drawFlags = flag ? b2DrawFlags.e_all : b2DrawFlags.e_none;  }\r\n\tset flag_drawShape(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_shapeBit, flag); }\r\n\tset flag_drawJoint(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_jointBit, flag); }\r\n\tset flag_drawAabb(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_aabbBit, flag); }\r\n\tset flag_drawPair(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_pairBit, flag); }\r\n\tset flag_drawCenterOfMass(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_centerOfMassBit, flag); }\r\n\tset flag_drawParticle(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_particleBit, flag); }\r\n\tset flag_drawController(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_controllerBit, flag); }\r\n\t\r\n\tget flag_drawAll() { this.m_drawFlags; }\r\n\tget flag_drawShape() { return this.m_drawFlags & b2DrawFlags.e_shapeBit; }\r\n\tget flag_drawJoint() { return this.m_drawFlags & b2DrawFlags.e_jointBit; }\r\n\tget flag_drawAabb() { return this.m_drawFlags & b2DrawFlags.e_aabbBit; }\r\n\tget flag_drawPair() { return this.m_drawFlags & b2DrawFlags.e_pairBit; }\r\n\tget flag_drawCenterOfMass() { return this.m_drawFlags & b2DrawFlags.e_centerOfMassBit; }\r\n\tget flag_drawParticle() { return this.m_drawFlags & b2DrawFlags.e_particleBit; }\r\n\tget flag_drawController() { return this.m_drawFlags & b2DrawFlags.e_controllerBit; }\r\n\r\n\tget flagNames() {\r\n\t\treturn [\r\n\t\t\t\"flag_drawAll\",\r\n\t\t\t\"flag_drawShape\",\r\n\t\t\t\"flag_drawJoint\",\r\n\t\t\t\"flag_drawAabb\",\r\n\t\t\t\"flag_drawPair\",\r\n\t\t\t\"flag_drawCenterOfMass\",\r\n\t\t\t\"flag_drawParticle\",\r\n\t\t\t\"flag_drawController\",\r\n\t\t];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.PushTransform = function (xf)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tctx.save();\r\n\t//ctx.translate(xf.p.x, xf.p.y);\r\n\t//ctx.rotate(xf.q.GetAngle());\r\n\tctx.transform(xf.q.c, xf.q.s, -xf.q.s, xf.q.c, xf.p.x, xf.p.y);\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.PopTransform = function (xf)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tctx.restore();\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2[]} vertices\r\n * @param {number} vertexCount\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawPolygon = function (vertices, vertexCount, color)\r\n{\r\n\tif (!vertexCount) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(vertices[0].x, vertices[0].y);\r\n\tfor (let i = 1; i < vertexCount; i++)\r\n\t{\r\n\t\tctx.lineTo(vertices[i].x, vertices[i].y);\r\n\t}\r\n\tctx.closePath();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} vertices\r\n * @param {number} vertexCount\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSolidPolygon = function (vertices, vertexCount, color)\r\n{\r\n\tif (!vertexCount) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(vertices[0].x, vertices[0].y);\r\n\tfor (let i = 1; i < vertexCount; i++)\r\n\t{\r\n\t\tctx.lineTo(vertices[i].x, vertices[i].y);\r\n\t}\r\n\tctx.closePath();\r\n\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\tctx.fill();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} center\r\n * @param {number} radius\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawCircle = function (center, radius, color)\r\n{\r\n\tif (!radius) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.arc(center.x, center.y, radius, 0, b2_pi * 2, true);\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} center\r\n * @param {number} radius\r\n * @param {b2Vec2} axis\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSolidCircle = function (center, radius, axis, color)\r\n{\r\n\tif (!radius) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tlet cx = center.x;\r\n\tlet cy = center.y;\r\n\tctx.beginPath();\r\n\tctx.arc(cx, cy, radius, 0, b2_pi * 2, true);\r\n\tctx.moveTo(cx, cy);\r\n\tctx.lineTo((cx + axis.x * radius), (cy + axis.y * radius));\r\n\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\tctx.fill();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} centers\r\n * @param {number} radius\r\n * @param {b2Color} colors\r\n * @param {number} count\r\n */\r\nDebugDraw.prototype.DrawParticles = function (centers, radius, colors, count) {\r\n\tconst ctx = this.m_ctx;\r\n\tif (ctx) {\r\n\t\tif (colors !== null) {\r\n\t\t\tfor (let i = 0; i < count; ++i) {\r\n\t\t\t\tlet center = centers[i];\r\n\t\t\t\t/** @type {b2Color} */let color = colors[i];\r\n\t\t\t\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\t\t\t\tctx.fillRect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n\t\t\t\t///ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, box2d.b2_pi * 2, true); ctx.fill();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n\t\t\tctx.beginPath();\r\n\t\t\tfor (let i = 0; i < count; ++i) {\r\n\t\t\t\tlet center = centers[i];\r\n\t\t\t\tctx.rect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n\t\t\t\t///ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, box2d.b2_pi * 2, true); ctx.fill();\r\n\t\t\t}\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} p1\r\n * @param {b2Vec2} p2\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSegment = function (p1, p2, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(p1.x, p1.y);\r\n\tctx.lineTo(p2.x, p2.y);\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.DrawTransform = function (xf)\r\n{\r\n\tif (this.axis_length == 0) {\r\n\t\treturn;\r\n\t}\r\n\t// viewport -> canvas\r\n\tlet cs = this.canvasScale;\r\n\tif (!this.viewRect.collide4f2(xf.p.x * cs, xf.p.y * cs, this.axis_length * cs, this.axis_length * cs)) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tthis.PushTransform(xf);\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(0, 0);\r\n\tctx.lineTo(this.axis_length, 0);\r\n\tctx.strokeStyle = b2Color.RED.MakeStyleString(1);\r\n\tctx.stroke();\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(0, 0);\r\n\tctx.lineTo(0, this.axis_length);\r\n\tctx.strokeStyle = b2Color.GREEN.MakeStyleString(1);\r\n\tctx.stroke();\r\n\r\n\tthis.PopTransform(xf);\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} p\r\n * @param {number} size\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawPoint = function (p, size, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.fillStyle = color.MakeStyleString();\r\n\tsize /= this.viewZoom;\r\n\tsize /= this.canvasScale;\r\n\tlet hsize = size / 2;\r\n\tctx.fillRect(p.x - hsize, p.y - hsize, size, size);\r\n}\r\n\r\n/**\r\n * @export\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {string} format\r\n * @param {...string|number} var_args\r\n */\r\nDebugDraw.prototype.DrawString = function (x, y, format, var_args)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tconst font = ctx.font;\r\n\r\n\tlet args = Array.prototype.slice.call(arguments);\r\n\tlet string = goog.string.format.apply(null, args.slice(2));\r\n\r\n\tctx.save();\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.font = '18pt helvetica';//'9pt lucida console';\r\n\t\tlet color = DebugDraw.prototype.DrawString.s_color;\r\n\t\tctx.fillStyle = color.MakeStyleString();\r\n\t\tctx.fillText(string, x, y);\r\n\tctx.restore();\r\n\r\n\tctx.font = font;\r\n}\r\nDebugDraw.prototype.DrawString.s_color = new b2Color(0.9, 0.6, 0.6);\r\n\r\n/**\r\n * @export\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {string} format\r\n * @param {...string|number} var_args\r\n */\r\nDebugDraw.prototype.DrawStringWorld = function (x, y, format, var_args)\r\n{\r\n\tlet p = DebugDraw.prototype.DrawStringWorld.s_p.Set(x, y);\r\n\r\n\t// world -> viewport\r\n\tlet vt = this.viewCenter;\r\n\tb2Vec2.SubVV(p, vt, p);\r\n\tlet vr = this.viewRotation;\r\n\tb2Rot.MulTRV(vr, p, p);\r\n\tlet vs = this.viewZoom;\r\n\tb2Vec2.MulSV(vs, p, p);\r\n\r\n\t// viewport -> canvas\r\n\tlet cs = this.canvasScale;\r\n\tb2Vec2.MulSV(cs, p, p);\r\n\tp.y *= -1;\r\n\tlet cc = DebugDraw.prototype.DrawStringWorld.s_cc.Set(0.5 * this.m_canvas.width, 0.5 * this.m_canvas.height);\r\n\tb2Vec2.AddVV(p, cc, p);\r\n\r\n\tlet ctx = this.m_ctx;\r\n\tconst font = ctx.font;\r\n\r\n\tlet args = Array.prototype.slice.call(arguments);\r\n\tlet string = goog.string.format.apply(null, args.slice(2));\r\n\r\n\tctx.save();\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.font = '18pt helvetica';//'9pt lucida console';\r\n\t\tlet color = DebugDraw.prototype.DrawStringWorld.s_color;\r\n\t\tctx.fillStyle = color.MakeStyleString();\r\n\t\tctx.fillText(string, p.x, p.y);\r\n\tctx.restore();\r\n\r\n\tctx.font = font;\r\n}\r\nDebugDraw.prototype.DrawStringWorld.s_p = new b2Vec2();\r\nDebugDraw.prototype.DrawStringWorld.s_cc = new b2Vec2();\r\nDebugDraw.prototype.DrawStringWorld.s_color = new b2Color(0.5, 0.9, 0.5);\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2AABB} aabb\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawAABB = function (aabb, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.strokeStyle = color.MakeStyleString();\r\n\tlet x = aabb.lowerBound.x;\r\n\tlet y = aabb.lowerBound.y;\r\n\tlet w = aabb.upperBound.x - aabb.lowerBound.x;\r\n\tlet h = aabb.upperBound.y - aabb.lowerBound.y;\r\n\tctx.strokeRect(x, y, w, h);\r\n}\r\n\r\nexport default DebugDraw;\r\n","﻿\r\nimport {\r\n\tb2_linearSlop,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2PolygonShape, b2EdgeShape,\r\n\tb2Body,\r\n\tb2Contact, b2Manifold, b2ContactImpulse, b2WorldManifold\r\n} from \"./Physics.js\";\r\n\r\nimport { World } from \"./World\";\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport class MapLadderRope {\r\n\tconstructor(raw) {\r\n\t\t/** @type {number} - is ladder ? 1 : 0 */\r\n\t\tthis.l = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.uf = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.x = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y1 = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y2 = null;\r\n\r\n\t\t/** @type {number} - ?? */\r\n\t\tthis.page = null;\r\n\r\n\t\t/** @type {number} - select obj from layeredObject[layer] where obj.piece == piece */\r\n\t\tthis.piece = null;\r\n\r\n\t\tObject.assign(this, raw);\r\n\t}\r\n\r\n\tisLadder() {\r\n\t\treturn !!this.l;\r\n\t}\r\n}\r\n\r\n\r\nexport class LadderRope extends MapLadderRope {\r\n\tconstructor(raw) {\r\n\t\tsuper(raw);\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\t}\r\n\r\n\tcalcHeight() {\r\n\t\treturn (this.y2 - this.y1);\r\n\t}\r\n\tcalcHalfHeight() {\r\n\t\treturn (this.y2 - this.y1) * 0.5;\r\n\t}\r\n\tcalcWidth() {\r\n\t\treturn (this.isLadder() ? 16 : 4);\r\n\t}\r\n\tcalcHalfWidth() {\r\n\t\treturn (this.isLadder() ? 16 : 4) * 0.5;\r\n\t}\r\n\tcalcLength() {\r\n\t\treturn (this.y2 - this.y1) / $gv.CANVAS_SCALE;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\t_create(world) {\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tconst x = this.x / $gv.CANVAS_SCALE;\r\n\t\tconst y1 = this.y1 / $gv.CANVAS_SCALE;\r\n\t\tconst y2 = this.y2 / $gv.CANVAS_SCALE;\r\n\t\tconst hwidth = this.calcHalfWidth() / $gv.CANVAS_SCALE;\r\n\t\tconst hheight = (y2 - y1) * 0.5;\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\tbdef.position.Set(x, y1);\r\n\r\n\t\tbdef.angle = 0;\r\n\t\tbdef.gravityScale = 0;\r\n\t\t//bdef.allowSleep = true;\r\n\t\t//bdef.bullet = true;\r\n\t\tbdef.fixedRotation = true;\r\n\t\tbdef.userData = this;\r\n\r\n\t\tthis.body = world.CreateBody(bdef);\r\n\r\n\t\tshape.SetAsBox(hwidth, hheight + 0.5, new b2Vec2(0, hheight - 0.5), 0);\r\n\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"ladder\"));\r\n\r\n\t\tfdef.isSensor = true;\r\n\t\tfdef.userData = this;\r\n\r\n\t\tlet fixture = this.body.CreateFixture(fdef);\r\n\r\n\t\tfixture.beginContact = this.beginContact.bind(this);\r\n\t\tfixture.endContact = this.endContact.bind(this);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tbeginContact(contact, fa, fb) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst targetPlayer = fb.m_userData;\r\n\t\tif (!targetPlayer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!targetPlayer.state.ladder) {\r\n\t\t\ttargetPlayer.contactLadder(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tendContact(contact, fa, fb) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst targetPlayer = fb.m_userData;\r\n\t\tif (!targetPlayer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttargetPlayer.leaveLadder();\r\n\t}\r\n}\r\n\r\n\r\nexport class MapLadderRopeLoader {\r\n\t/**\r\n\t * @param {{[prop:string]:any}} map_raw_data\r\n\t * @param {World} world\r\n\t * @returns {LadderRope[]}\r\n\t */\r\n\tstatic load(map_raw_data, world) {\r\n\t\t/** @type {LadderRope[]} */\r\n\t\tlet ladderRopes = [];\r\n\r\n\t\tfor (let i in map_raw_data.ladderRope) {\r\n\t\t\tlet raw = map_raw_data.ladderRope[i];\r\n\t\t\tlet idx = parseInt(i, 10) - 1;\r\n\t\t\tif (idx >= 0 && Number.isSafeInteger(idx)) {\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: ?? ladderRope\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t\tlet ladderRope = new LadderRope(raw);\r\n\t\t\tladderRope._$index = i;\r\n\t\t\tladderRope._create(world);\r\n\t\t\tladderRopes.push(ladderRope);\r\n\t\t};\r\n\r\n\t\treturn ladderRopes;\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { PRemoteCharacter } from \"./PPlayer.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\n\r\n\r\nwindow.$MobAction_Move_Priority = 2;\r\nwindow.$MobAction_Jump_Priority = 1;\r\n\r\n\r\nexport class MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\t/** @type {string} - ?? */\r\n\t\tthis._name = null;\r\n\r\n\t\t/** @type {Animation} */\r\n\t\tthis._ani = animation;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\tinit() {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tisEnd(pMob) {\r\n\t\tlet end = this._ani.isEnd();\r\n\t\tif (end) {\r\n\t\t\tthis.onEnd(pMob);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tonEnd(pMob) {\r\n\t}\r\n}\r\n\r\nexport class MobAction_Stand extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"stand\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\t//保持停止。\r\n\t\tpMob.ikey[\"left\"] = 0;\r\n\t\tpMob.ikey[\"right\"] = 0;\r\n\t}\r\n}\r\n\r\nexport class _MobAction_Move extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"move\";\r\n\t\tthis.front = 0;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn window.$MobAction_Move_Priority;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\tlet name = pMob.action._name;\r\n\r\n\t\t//switch (pMob.action._name) {\r\n\t\t//\tcase \"attack\":\r\n\t\t//\t\treturn false;\r\n\t\t//\tdefault:\r\n\t\t\t\tif (name.startsWith(\"attack\")) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t//\t\tbreak;\r\n\t\t//}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport class MobAction_MoveLeft extends _MobAction_Move {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis.front = -1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn super.isValid(pMob) && (!pMob.state.jump || this.front == pMob.state.front);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tpMob.ikey[\"left\"] = 1;\r\n\t\tpMob.ikey[\"right\"] = 0;\r\n\t}\r\n\t\r\n\t///**\r\n\t// * @param {PMob} pMob\r\n\t// */\r\n\t//onEnd(pMob) {\r\n\t//\tpMob.ikey[\"left\"] = 0;//不停止移動，下個動作在處理。\r\n\t//}\r\n}\r\n\r\nexport class MobAction_MoveRight extends _MobAction_Move {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis.front = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn super.isValid(pMob) && (!pMob.state.jump || this.front == pMob.state.front);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tpMob.ikey[\"left\"] = 0;\r\n\t\tpMob.ikey[\"right\"] = 1;\r\n\t}\r\n\t\r\n\t///**\r\n\t// * @param {PMob} pMob\r\n\t// */\r\n\t//onEnd(pMob) {\r\n\t//\tpMob.ikey[\"right\"] = 0;//不停止移動，下個動作在處理。\r\n\t//}\r\n}\r\n\r\nexport class MobAction_Jump extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"jump\";\r\n\t\t//this.move = false;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn window.$MobAction_Jump_Priority;\r\n\t}\r\n\r\n\tinit() {\r\n\t\t//this.move = 1 || Math.random() > 0.5;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\tlet name = pMob.action._name;\r\n\r\n\t\tswitch (pMob.action._name) {\r\n\t\t\tcase \"attack\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tif (name.startsWith(\"attack\")) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn !pMob.state.jump;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tif (pMob.state.walk) {\r\n\t\t\tif (pMob.state.front < 0) {\r\n\t\t\t\tpMob.ikey[\"left\"] = 1;\r\n\t\t\t}\r\n\t\t\telse if (pMob.state.front > 0) {\r\n\t\t\t\tpMob.ikey[\"right\"] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tpMob.ikey[\"jump\"] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tonEnd(pMob) {\r\n\t\t//if (this.move) {\r\n\t\t//\tif (pMob.state.front < 0) {\r\n\t\t//\t\tpMob.ikey[\"left\"] = 0;\r\n\t\t//\t}\r\n\t\t//\telse if (pMob.state.front > 0) {\r\n\t\t//\t\tpMob.ikey[\"right\"] = 0;\r\n\t\t//\t}\r\n\t\t//}\r\n\t\tpMob.ikey[\"jump\"] = 0;\r\n\t}\r\n}\r\n\r\nexport class MobAction_Attack extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"attack\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn pMob.action.isEnd();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t}\r\n}\r\n\r\nexport class PMob extends PRemoteCharacter {\r\n\t/**\r\n\t * @param {MapMob} mapMob\r\n\t */\r\n\tconstructor(mapMob) {\r\n\t\tsuper();\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.attackTarget = true;\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis._enable_rx = false;\r\n\t\t\r\n\t\t/** @type {MapMob} */\r\n\t\tthis.chara = mapMob;\r\n\r\n\t\t//TODO: move this code to ??\r\n\t\tif (mapMob) {\r\n\t\t\tif (mapMob.renderer.isFlyMob()) {\r\n\t\t\t\tthis.setMovementSpeed(this._info.flySpeed);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setMovementSpeed(this._info.speed);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.activityRegion = null;\r\n\t\t\r\n\t\tthis.$debugControl = false;\r\n\r\n\t\t/** @type {{[action:string]:number}} */\r\n\t\tthis.ikey = {};\r\n\r\n\t\t/** @type {MobActionController[]} */\r\n\t\tthis.actions = [];\r\n\r\n\t\t/** @type {MobActionController} */\r\n\t\tthis.action = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {} param - ??\r\n\t */\r\n\t_registerAction(param) {\r\n\t\tthis.actions.push(param);\r\n\t}\r\n\r\n\t/**\r\n\t * {[action:string]:{ controller:MobActionController, renderer:Animation }}\r\n\t * @param {{[action:string]:Animation}} actions\r\n\t * @param {{[action:string]:MobActionController[]} =act_map\r\n\t */\r\n\t_loadAction(actions, act_map) {\r\n\t\tact_map = act_map || {\r\n\t\t\tstand: [MobAction_Stand],\r\n\t\t\tmove: [MobAction_MoveLeft, MobAction_MoveRight],\r\n\t\t\tjump: [MobAction_Jump],\r\n\t\t};\r\n\t\t\r\n\t\tObject.keys(actions).forEach(key => {\r\n\t\t\tif (actions[key] && act_map[key]) {\r\n\t\t\t\tconst list = act_map[key];\r\n\t\t\t\tfor (let type of list) {\r\n\t\t\t\t\tlet controller = new type(actions[key]);\r\n\t\t\t\t\tlet priority = controller.priority;\r\n\r\n\t\t\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\t\t\tif (!(Number.isSafeInteger(priority) && priority > 0)) {\r\n\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0; i < priority; ++i) {\r\n\t\t\t\t\t\tthis._registerAction(controller);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.warn(\"未完成 MobActionController: \" + key);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.action = this.actions[0];\r\n\t\tif (!this.action) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _info() {\r\n\t\treturn this.chara.renderer._raw.info;\r\n\t}\r\n\tget hasBodyDamage() {\r\n\t\tif (this._info.bodyAttack != 0 && this._info.bodyAttack != 1) {\r\n\t\t\talert(\"bodyAttack:\" + this._info.bodyAttack);\r\n\t\t}\r\n\t\treturn this._info.bodyAttack != 0;\r\n\t}\r\n\tget _speed() {\r\n\t\treturn this._info.speed;\r\n\t}\r\n\tget _pushed() {\r\n\t\treturn this._info.pushed;\r\n\t}\r\n\tget _fs() {\r\n\t\treturn this._info.fs;\r\n\t}\r\n\tget _category() {\r\n\t\treturn this._info.category;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {string}\r\n\t */\r\n\tget _body_category() {\r\n\t\treturn \"mob\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\t\t\r\n\t\tthis.setPosition(this.chara.x / $gv.CANVAS_SCALE, this.chara.y / $gv.CANVAS_SCALE, true);\r\n\t\t\r\n\t\tthis._appleMobCategory(this._category);\r\n\t}\r\n\t_appleMobCategory(category) {\r\n\t\tswitch (category) {\r\n\t\t\tcase 1:\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.__setAsWalkOnlyMob();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.__setAsJumpDropMob();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.__setAsWalkOnlyMob();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.chara.front = this.chara.spawn.f ? 1:-1;\r\n\t}\r\n\t__setAsWalkOnlyMob() {\r\n\t\tconst ground = this.body.GetWorld().ground;\r\n\t\t\r\n\t\tconst fhId = this.chara.spawn.fh;\r\n\t\t\r\n\t\tif (fhId >= 0) {\r\n\t\t\tlet fh = ground.footholds[fhId];\r\n\r\n\t\t\tthis.activityRegion = ground.rectChains[fh.chain];\r\n\t\t}\r\n\t}\r\n\t__setAsJumpDropMob() {\r\n\t}\r\n\t\r\n\tisCanMove() {\r\n\t\treturn !(this._info.ignoreMoveImpact || this._walker_omega == 0 || this._info.noFlip);\r\n\t}\r\n\t\r\n\t/** @override */\r\n\tcontrol() {\r\n\t\tif (this.isCanMove()) {\r\n\t\t\tswitch (this._category) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tthis._control_basic(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tthis._control_basic(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._control_basic(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//this.ikey[\"jump\"] = 0;\r\n\t\t\t//this.ikey[\"left\"] = 0;\r\n\t\t\t//this.ikey[\"right\"] = 0;\r\n\r\n\t\t\tsuper.control(this.ikey);\r\n\t\t}\r\n\t}\r\n\t_control_basic(isAllowJump) {\r\n\t\tif (this.action) {\r\n\t\t\tif (this.action.isEnd(this)) {\r\n\t\t\t\tlet actions = this.actions.filter(act => act.isValid(this));\r\n\t\t\t\tlet next = Math.trunc(Math.random() * 100) % actions.length;\r\n\r\n\t\t\t\tthis.action = actions[next];\r\n\r\n\t\t\t\tif (!this.action) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.action.init();\r\n\r\n\t\t\t\t//console.log(\"mob: \" + this.action.name);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t}\r\n\r\n\t\t\tthis.action.update(this);\r\n\t\t}\r\n\t}\r\n\r\n\tstop() {\r\n\t\tconst empty = {};\r\n\t\tthis.ikey = empty;\r\n\t\tsuper.control(empty);\r\n\t}\r\n\t\r\n\tStep() {\t\t\r\n\t\tsuper.Step();\r\n\t\t\r\n\t\tthis.control();\r\n\t\t\r\n\t\tlet rx0, rx1, limit_action;\r\n\t\t\r\n\t\tif (this.attackTarget && this.activityRegion) {\r\n\t\t\trx0 = this.activityRegion.left;\r\n\t\t\trx1 = this.activityRegion.right;\r\n\t\t\tlimit_action = true;\r\n\t\t}\r\n\t\telse if (!this._enable_rx) {\r\n\t\t\trx0 = this.chara.spawn.rx0;\r\n\t\t\trx1 = this.chara.spawn.rx1;\r\n\t\t\tlimit_action = false;\r\n\t\t}\r\n\t\t\r\n\t\tif (limit_action) {\r\n\t\t\tconst cbpos = this.body.GetPosition();\r\n\t\t\tconst x = cbpos.x * $gv.CANVAS_SCALE;\r\n\t\t\tconst y = cbpos.y * $gv.CANVAS_SCALE;\r\n\t\t\tconst dx0 = rx0 - x;\r\n\t\t\tconst dx1 = x - rx1;\r\n\t\t\t\r\n\t\t\tif (dx0 > 0) {\r\n\t\t\t\tconst fwpos = this.foot_walk.GetPosition();\r\n\t\t\t\tthis.body.SetPositionXY(rx0 / $gv.CANVAS_SCALE, cbpos.y);\r\n\t\t\t\tthis.foot_walk.SetPositionXY(rx0 / $gv.CANVAS_SCALE, fwpos.y);\r\n\t\t\t}\r\n\t\t\telse if (dx1 > 0) {\r\n\t\t\t\tconst fwpos = this.foot_walk.GetPosition();\r\n\t\t\t\tthis.body.SetPositionXY(rx1 / $gv.CANVAS_SCALE, cbpos.y);\r\n\t\t\t\tthis.foot_walk.SetPositionXY(rx1 / $gv.CANVAS_SCALE, fwpos.y);\r\n\r\n\t\t\t\tif (!this.attackTarget) {\r\n\t\t\t\t\tthis.state.front *= -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tAfterStep() {\r\n\t\tsuper.AfterStep();\r\n\t\t\r\n\t\tconst pos = this.getPosition();\r\n\t\tconst x = pos.x * $gv.CANVAS_SCALE;\r\n\t\tconst y = pos.y * $gv.CANVAS_SCALE;\r\n\t\t\r\n\t\tthis.chara.x = x;\r\n\t\tthis.chara.y = y;\r\n\t\t\r\n\t\tif (!this._info.noFlip) {\r\n\t\t\tthis.chara.front = -this.state.front;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nexport class MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tthis.createDelay = 0;\r\n\t\tthis.collisionDelay = 0;\r\n\t\tthis.duration = 0;\r\n\t\t\r\n\t\tthis.moveSpeed = 0;\r\n\t\tthis.angle = 0;\r\n\t\t\r\n\t\tthis.flip = false;\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis._speed_x = 0;//uint: px/second\r\n\t\tthis._speed_y = 0;//uint: px/second\r\n\t}\r\n}\r\n\r\nexport class MobSkillBallBase extends SceneObject {\r\n\t/**\r\n\t * @param {MobSkillBallDefinition} ballDef\r\n\t * @param {{[x:string]:Animation} animations\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tballDef = Object.assign(new this._BallDefinition(), ballDef);\r\n\t\t\r\n\t\tthis.createDelay = ballDef.createDelay;\r\n\t\tthis.collisionDelay = ballDef.collisionDelay;\r\n\t\tthis.duration = ballDef.duration;\r\n\t\t\r\n\t\tthis.moveSpeed = ballDef.moveSpeed;\r\n\t\tthis.angle = ballDef.angle * Math.PI / 180;//deg to rad\r\n\t\t\r\n\t\tthis.x = ballDef.x;\r\n\t\tthis.y = ballDef.y;\r\n\t\t\r\n\t\tif (this.moveSpeed) {\r\n\t\t\tthis._speed_x = Math.cos(this.angle + Math.PI) * this.moveSpeed;//uint: px/second\r\n\t\t\tthis._speed_y = Math.sin(this.angle + Math.PI) * this.moveSpeed;//uint: px/second\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._speed_x = 0;//uint: px/second\r\n\t\t\tthis._speed_y = 0;//uint: px/second\r\n\t\t}\r\n\t\t\r\n\t\tthis.state = this.E_BEFORE_CREATE;\r\n\t}\r\n\t\r\n\tget E_BEFORE_CREATE() { return 0; }\r\n\tget E_CREATED() { return 1; }\r\n\tget E_BEGIN_COLLISION() { return 2; }\r\n\tget E_ENG_COLLISION() { return 3; }\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.state = this.E_CREATED;\r\n\t\tif (this.collisionDelay > 0) {\r\n\t\t\tthis.enablePhysics = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tbegin_collision() {\r\n\t\tthis.enablePhysics = true;\r\n\t\tthis.state = this.E_BEGIN_COLLISION;\r\n\t}\r\n\t\r\n\tend_collision() {\r\n\t\tthis.enablePhysics = false;\r\n\t\tthis.state = this.E_ENG_COLLISION;\r\n\t}\r\n\t\r\n\t/**\r\n\t * debug\r\n\t * @param {PWorld} pWorld\r\n\t */\r\n\tupdate(stamp, pWorld) {\r\n\t\tif (this.state == this.E_BEFORE_CREATE) {\r\n\t\t\tthis.createDelay -= stamp;\r\n\t\t\tif (this.createDelay <= 0) {\r\n\t\t\t\tthis.create();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state == this.E_CREATED) {\r\n\t\t\t\tthis.collisionDelay -= stamp;\r\n\t\t\t\tif (this.collisionDelay <= 0) {\r\n\t\t\t\t\tthis.begin_collision();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.state == this.E_BEGIN_COLLISION) {\r\n\t\t\t\tif (this.duration > 0) {\r\n\t\t\t\t\tthis.duration -= stamp;\r\n\t\t\t\t\tif (this.duration) {\r\n\t\t\t\t\t\tthis.end_collision();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!window.$stop) {//debug\r\n\t\t\t\tthis.x += this._speed_x * stamp / 1000;//debug\r\n\t\t\t\tthis.y += this._speed_y * stamp / 1000;//debug\r\n\t\t\t}\r\n\t\t\tthis.renderer.update(stamp);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} engine\r\n\t */\r\n\trender(engine) {\r\n\t\tif (this.state != this.E_BEFORE_CREATE) {\r\n\t\t\tconst flip = this.flip;\r\n\t\t\tthis.renderer.draw(engine, this.x, this.y, this.angle, flip);\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nexport class MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tthis._raw = _raw;\r\n\t\tthis._url = _url;\r\n\t\t\r\n\t\tthis.level = null;\r\n\t\t\r\n\t\tthis.animations = {};\r\n\t}\r\n\t\r\n\t/** @param {number} level */\r\n\tasync load(level) {\r\n\t\tthis.level = level;\r\n\t\t\r\n\t\tif (!this._raw && !this._url) {\r\n\t\t\tthis._url = [this._base_path, level].join(\"/\");\r\n\t\t\t\r\n\t\t\tthis._raw = await $get.data(this._url);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let name of this._anima_name_list) {\r\n\t\t\t//name = \"ball0\";\r\n\t\t\tlet anima = new Animation(this._raw[name], [this._url, name].join(\"/\"));\r\n\t\t\tanima.is_loop = true;\r\n\t\t\tanima.load();\r\n\t\t\tthis.animations[name] = anima;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {void} */\r\n\tinvoke() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/** @returns {string} */\r\n\tget _base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\n","﻿\r\nexport class KeySlotData {\r\n}\r\n\r\n","\r\nwindow.DownloadData = (function () {\r\n\tlet a = document.createElement(\"a\");\r\n\tdocument.body.appendChild(a);\r\n\ta.style = \"display: none\";\r\n\ta.target = \"_blank\";\r\n\treturn function (text, type, fileName) {\r\n\t\tlet blob = new Blob([text], { type: type || \"octet/stream\" });\r\n\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\tif (fileName && fileName != \"\") {\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = fileName;\r\n\t\t\ta.click();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//a.href = url;\r\n\t\t\t//a.click();\r\n\t\t\twindow.open(url, '_blank');\r\n\t\t}\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n}());\r\n\r\nwindow.SelectText = function (elem) {\r\n\tvar range, selection;\r\n\r\n\tif (document.body.createTextRange) {\r\n\t\trange = document.body.createTextRange();\r\n\t\trange.moveToElementText(elem);\r\n\t\trange.select();\r\n\t}\r\n\telse if (window.getSelection) {\r\n\t\tselection = window.getSelection();\r\n\t\trange = document.createRange();\r\n\t\trange.selectNodeContents(elem);\r\n\t\tselection.removeAllRanges();\r\n\t\tselection.addRange(range);\r\n\t}\r\n}\r\nwindow.copyToClipboard = function (text) {\r\n\tvar $temp = $(\"<input>\");\r\n\t$(\"body\").append($temp);\r\n\t$temp.val(text).select();\r\n\tdocument.execCommand(\"copy\");\r\n\t$temp.remove();\r\n}\r\n\r\n/**\r\n * disable textNode \"#text\"\r\n * @param {string} xml - xml\r\n * @param {string[]=} arrayTags - optional\r\n * @returns {object}\r\n */\r\nfunction parseXml(xml, arrayTags) {\r\n\tvar dom = null;\r\n\tif (window.DOMParser) {\r\n\t\tdom = (new DOMParser()).parseFromString(xml, \"text/xml\");\r\n\t}\r\n\telse if (window.ActiveXObject) {\r\n\t\tdom = new ActiveXObject('Microsoft.XMLDOM');\r\n\t\tdom.async = false;\r\n\t\tif (!dom.loadXML(xml)) {\r\n\t\t\tthrow dom.parseError.reason + \" \" + dom.parseError.srcText;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tthrow \"cannot parse xml string!\";\r\n\t}\r\n\r\n\tfunction isArray(o) {\r\n\t\treturn Object.prototype.toString.apply(o) === '[object Array]';\r\n\t}\r\n\r\n\tfunction parseNode(xmlNode, result) {\r\n\t\tif (xmlNode.nodeName == \"#text\" && xmlNode.nodeValue.trim() == \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar jsonNode = {};\r\n\t\tvar existing = result[xmlNode.nodeName];\r\n\t\tif (existing) {\r\n\t\t\tif (!isArray(existing)) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [existing, jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName].push(jsonNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName] = jsonNode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (xmlNode.attributes) {\r\n\t\t\tvar length = xmlNode.attributes.length;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tvar attribute = xmlNode.attributes[i];\r\n\t\t\t\tjsonNode[attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar length = xmlNode.childNodes.length;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tparseNode(xmlNode.childNodes[i], jsonNode);\r\n\t\t}\r\n\t}\r\n\r\n\tvar result = {};\r\n\tif (dom.childNodes.length) {\r\n\t\tparseNode(dom.childNodes[0], result);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n","\r\n/**\r\n * usage:\r\n *\tvar fairyDust = new FairyDust();\r\n *\tfairyDust.load(4).then(()=>fairyDust.invoke());\r\n */\r\n\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { MobSkillBallDefinition, MobSkillBallBase, MobSkillBase } from \"./MobSkillBase.js\";\r\n\r\n\r\nclass FairyDustBallDefinition extends MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.scale = 0;// 1~3\r\n\t}\r\n}\r\n\r\nexport class FairyDustBall extends MobSkillBallBase {\r\n\t/**\r\n\t * @param {FairyDustBallDefinition} ballDef\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper(ballDef, animations);\r\n\t\t\r\n\t\tthis.x = 1000;\r\n\t\tthis.y = -80;\r\n\t\t\r\n\t\t//this.scale = ballDef.scale;\r\n\t\t\r\n\t\tthis.renderer = animations[\"ball\" + ballDef.scale].clone();\r\n\t}\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.$physics = {// make dummy for debug\r\n\t\t\tstate: {}\r\n\t\t};\r\n\t\t\r\n\t\tsuper.create(pWorld);//complete create\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\treturn FairyDustBallDefinition;\r\n\t}\r\n}\r\nexport class FairyDustBallHit extends SceneObject {\r\n\tconstructor(target, animations) {\r\n\t\tsuper();\r\n\t\t//MouseJoint\r\n\t\t//World.CreateJoint()\r\n\t}\r\n}\r\n\r\nexport class FairyDust extends MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t}\r\n\t\r\n\t/** @param {4|10} level */\r\n\t\r\n\tinvoke() {\r\n\t\tconst s = this._raw.s;\r\n\t\tconst s2 = this._raw.s2;\r\n\t\tconst v = this._raw.v;\r\n\t\tconst v2 = this._raw.v2;\r\n\t\tconst w = this._raw.w;\r\n\t\tconst w2 = this._raw.w2;\r\n\t\tconst u = this._raw.u;\r\n\t\tlet x = this._raw.x;\r\n\t\t\r\n\t\tfor (let i = 0, max = Randomizer.randInt(w, w + w2); i < max; i++) {\r\n\t\t\tx += Randomizer.nextInt(x);\r\n\t\t\tlet ball = new FairyDustBall({\r\n\t\t\t\tscale: Randomizer.nextInt(3),\r\n\t\t\t\tcreateDelay: u,\r\n\t\t\t\tmoveSpeed: v + Randomizer.nextInt(v2),\r\n\t\t\t\tangle: x + Randomizer.randInt(s, s2),\r\n\t\t\t}, this.animations);\r\n\t\t\t$gv.SceneObjectMgr.addToScene(10, ball);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\treturn [\"ball0\", \"ball1\", \"ball2\"];\r\n\t}\r\n\t\r\n\tget _base_path() {\r\n\t\treturn \"/Skill/MobSkill/238/level\";\r\n\t}\r\n}\r\n\r\nexport class _FairyDust extends FairyDust {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t}\r\n\t/** @override */\r\n\tload(level) {\r\n\t\tif (!this._raw && !this._url) {\r\n\t\t\tthis._raw = window.MOB_SKILL_RAW[238].level[level];\r\n\t\t\tthis._url = [this._base_path, level].join(\"/\");\r\n\t\t}\r\n\t\tsuper.load(level);\r\n\t}\r\n}\r\n\r\n","﻿\r\nlet LoginPacket = require(\"./LoginPacket.js\");\r\nlet ChatPacket = require(\"./ChatPacket.js\");\r\nlet CharacterPacket = require(\"./CharacterPacket.js\");\r\n\r\nlet ex = Object.assign({},\r\n\tLoginPacket,\r\n\tChatPacket,\r\n\tCharacterPacket\r\n);\r\n\r\nmodule.exports = ex;\r\n","﻿\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { Sprite } from \"../Sprite.js\";\r\nimport { LayerObject, Layer } from \"./Layer.js\";\r\nimport { RenderingOption } from \"./RenderingOption.js\";\r\nimport { DamagePair, AttackInfo } from \"../../Common/AttackInfo.js\";\r\n\r\n// 123\r\n// NoRed[1][1], NoRed[0][2], NoRed[0][3], ...\r\n\r\nclass _DamageSkin {\r\n\tconstructor() {\r\n\t\t/** @type {DamageNumberTextures} */\r\n\t\tthis.NoRed = null;\r\n\t\t/** @type {DamageNumberTextures} */\r\n\t\tthis.NoCri = null;\r\n\t}\r\n}\r\nclass _DamageSkinDefault extends _DamageSkin {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoBlue = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoViolet = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoProduction = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoKite = null;\r\n\t}\r\n}\r\n\r\n\r\n/** @type {{default:_DamageSkinDefault,[skin:string]:_DamageSkin}} */\r\nconst loaded_skin = {};\r\n\r\nclass DamageNumberTextures {\r\n\tconstructor() {\r\n\t\t/** @type {Sprite} */\r\n\t\tfor (let i = 0; i <= 9; ++i) {\r\n\t\t\tthis[i] = null;\r\n\t\t}\r\n\t\tthis.addedCanvasH = 0;\r\n\t}\r\n\t/**\r\n\t * @param {string} path\r\n\t */\r\n\tasync _load(path) {\r\n\t\tconst _raw = await $get.data(path);\r\n\t\t\r\n\t\tObject.keys(_raw).forEach(key => {\r\n\t\t\tlet texture = new Sprite(_raw[key]);\r\n\r\n\t\t\ttexture._url = [path, key].join(\"/\");\r\n\r\n\t\t\tthis[key] = texture;\r\n\t\t});\r\n\r\n\t\tthis.addedCanvasH = _raw.addedCanvasH | 0;\r\n\t}\r\n}\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.Miss = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.guard = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.shot = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.effect = null;\r\n\r\n\r\nfunction font_adv(texture) {\r\n\treturn texture.width * 3 / 4;\r\n}\r\n\r\nfunction draw_axis(ctx, x, y) {\r\n\tctx.strokeStyle = \"#F00\";\r\n\tctx.beginPath();\r\n\tctx.moveTo(x, y);\r\n\tctx.lineTo(x, y + 10);\r\n\tctx.stroke();\r\n\r\n\tctx.strokeStyle = \"#0F0\";\r\n\tctx.beginPath();\r\n\tctx.moveTo(x, y);\r\n\tctx.lineTo(x + 10, y);\r\n\tctx.stroke();\r\n}\r\n\r\nclass DamageNumberRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.style = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.skin = null;\r\n\r\n\t\t/** @type {DamageNumberTextures[]} - this.textures[is_first_num ? 1:0][num] */\r\n\t\tthis.textures = [];\r\n\r\n\t\t/** @type {number[]} */\r\n\t\tthis.rand_y = [0];\r\n\t\tfor (let i = 1, sign = Math.random() > 0.5 ? -1:1; i < DamageNumberRenderer.max_display_digit; ++i) {\r\n\t\t\tthis.rand_y[i] = Math.random() * DamageNumberRenderer.max_rand_y * sign;\r\n\t\t\tsign *= -1;\r\n\t\t}\r\n\r\n\t\t///** @type {Promise<void>} */\r\n\t\t//this._$promise = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {DamageNumberRenderer} other\r\n\t */\r\n\t_copy(other) {\r\n\t\tthis._url = other._url;\r\n\t\tthis.skin = other.skin;\r\n\t\tthis.style = other.style;\r\n\t\tthis.textures = other.textures;\r\n\r\n\t\t//loading\r\n\t\tif (this._$promise) {\r\n\t\t\tthis._$promise = other._$promise;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @returns {Promise<DamageNumberRenderer>}\r\n\t */\r\n\tasync _load(skin, style) {\r\n\t\tlet tasks = [];\r\n\t\tlet url;\r\n\r\n\t\tif (skin == \"default\") {\r\n\t\t\turl = this._default_base_path + style;\r\n\t\t}\r\n\t\telse {\r\n\t\t\turl = this._skin_base_path + [skin, style].join(\"/\");\r\n\t\t}\r\n\r\n\t\tif (!loaded_skin[skin]) {\r\n\t\t\tloaded_skin[skin] = {};\r\n\t\t}\r\n\t\tloaded_skin[skin][style] = this;\r\n\r\n\t\tthis._url = url;\r\n\t\tthis.skin = skin;\r\n\t\tthis.style = style;\r\n\r\n\t\tfor (let i = 0; i <= 1; ++i) {\r\n\t\t\tconst sPath = url + i;\r\n\t\t\t\r\n\t\t\tthis.textures[i] = new DamageNumberTextures();\r\n\r\n\t\t\ttasks[i] = this.textures[i]._load(sPath);\r\n\t\t}\r\n\r\n\t\tawait Promise.all(tasks);\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @returns {Promise<DamageNumberRenderer>}\r\n\t */\r\n\tasync load(skin, style) {\r\n\t\tlet loaded;\r\n\r\n\t\tif (loaded_skin[skin]) {\r\n\t\t\tloaded = loaded_skin[skin][style];\r\n\t\t}\r\n\r\n\t\tif (loaded) {\r\n\t\t\tthis._copy(skin, loaded);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._$promise = this._load(skin, style);\r\n\r\n\t\t\tawait this._$promise;\r\n\r\n\t\t\tdelete this._$promise;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} damage\r\n\t * @param {boolean} critical\r\n\t * @param {number} cx\r\n\t * @param {number} cy\r\n\t */\r\n\tdraw(renderer, damage, critical, cx, cy) {\r\n\t\tlet str_damage = damage.toFixed(0);\r\n\r\n\t\t/** @type {Sprite} */\r\n\t\tlet texture;\r\n\t\tlet text_width = 0;\r\n\r\n\t\t{\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\ttext_width += -texture.x;\r\n\t\t\ttext_width += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length - 1; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\ttext_width += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tlet x = cx - text_width / 2;\r\n\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\ttexture.draw2(x, cy);\r\n\t\t\tx += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\ttexture.draw2(x, cy + this.rand_y[i]);\r\n\r\n\t\t\t\tx += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._display_axis) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\t\t\tlet x = cx - text_width / 2;\r\n\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\tdraw_axis(ctx, x, cy);\r\n\t\t\tx += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\tdraw_axis(ctx, x, cy + this.rand_y[i]);\r\n\r\n\t\t\t\tx += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget _default_base_path() {\r\n\t\treturn \"/Effect/BasicEff/\";\r\n\t}\r\n\tget _skin_base_path() {\r\n\t\treturn \"/Effect/BasicEff/damageSkin/\";\r\n\t}\r\n}\r\nDamageNumberRenderer.loaded_skin = loaded_skin;\r\nDamageNumberRenderer.max_display_digit = Math.trunc(Math.log10(Number.MAX_SAFE_INTEGER) + 1);\r\nDamageNumberRenderer.max_rand_y = 5;\r\n\r\n\r\nexport class DamageNumber extends LayerObject {\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @param {DamagePair} damagePair\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t */\r\n\tconstructor(skin, style, damagePair, x, y, delay) {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\tthis.vy = DamageNumber.move_y / DamageNumber.time_tt;\r\n\r\n\t\tthis.delay = delay;\r\n\t\tthis.time = 0;\r\n\t\tthis.state = 0;\r\n\r\n\t\tthis.damagePair = damagePair;\r\n\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.renderer;\r\n\r\n\t\tthis._load(skin, style);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @param {number} recursive\r\n\t */\r\n\t_load(skin, style, recursive) {\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tlet loaded;\r\n\t\t\r\n\t\tif (loaded_skin[skin]) {\r\n\t\t\tloaded = loaded_skin[skin][style];\r\n\t\t}\r\n\r\n\t\tif (loaded) {\r\n\t\t\tthis.renderer = loaded;\r\n\r\n\t\t\tthis._$promise = this.renderer._$promise;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderer = new DamageNumberRenderer();\r\n\t\t\tthis._$promise = this.renderer.load(skin, style);\r\n\t\t}\r\n\t\tif (this._$promise) {\r\n\t\t\tthis.render = this.$noRender;\r\n\r\n\t\t\tthis._$promise\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tdelete this.render;\r\n\t\t\t\t\tdelete this._$promise;\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\tdelete this._$promise;\r\n\t\t\t\t\tconsole.error(`Can't load damageSkin[${skin}][${style}]`);\r\n\r\n\t\t\t\t\tif (recursive) {\r\n\t\t\t\t\t\tthrow Error();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log(`try load damageSkin[\"default\"][${style}]`);\r\n\t\t\t\t\t\tthis._load(\"default\", style, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t$noRender() {\r\n\t\t// nothing\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.state = 2;\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\treturn this.state >= 1 && this.time > 1000;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.time += stamp;\r\n\r\n\t\tif (this.delay && this.time >= this.delay) {\r\n\t\t\tthis.time = 0;\r\n\t\t\tthis.delay = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.y += this.vy * stamp;\r\n\r\n\t\t\tif (this.state == 0) {\r\n\t\t\t\tthis.vy = this.vy * DamageNumber.move_avy;\r\n\r\n\t\t\t\tif (this.time > DamageNumber.time_d1) {\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.state = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.state == 1) {\r\n\t\t\t\tthis.vy = this.vy * DamageNumber.move_avy2;\r\n\r\n\t\t\t\tif (this.time < DamageNumber.time_d2) {\r\n\t\t\t\t\tthis.opacity = 1 - (this.time / DamageNumber.time_d2);\r\n\t\t\t\t\t//this.opacity = Math.clamp(this.opacity, 0, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.opacity = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\trenderer.globalAlpha = this.opacity * option.opacity;\r\n\t\tthis.renderer.draw(renderer, this.damagePair.realDamage, this.damagePair.critical, this.x, this.y);\r\n\t}\r\n}\r\nDamageNumber.time_d1 = 1000;\r\nDamageNumber.time_d2 = 1000;\r\nDamageNumber.time_tt = DamageNumber.time_d1 + DamageNumber.time_d2;\r\nDamageNumber.move_y = -300;\r\nDamageNumber.move_avy = 1.001;\r\nDamageNumber.move_avy2 = 0.99;\r\n\r\nexport class DamageNumberTest extends DamageNumber {\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t}\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n}\r\n\r\nexport class DamageNumberLayer extends Layer {\r\n\t//constructor() {\r\n\t//\tsuper();\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {number} critical\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t */\r\n\t_addTest(realDamage = 9876543210, critical = false, x = 0, y = 0, delay = 0, skin = null, style = \"NoRed\") {\r\n\t\tthis.objects.push(new DamageNumber(skin, style, new DamagePair(realDamage, critical), x, y, delay));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {number} critical\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t */\r\n\t_addTest2(realDamage = 9876543210, critical = false, x = 0, y = 0, delay = 0, skin = null, style = \"NoRed\") {\r\n\t\tthis.objects.push(new DamageNumberTest(skin, style, new DamagePair(realDamage, critical), x, y, delay));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {AttackInfo} attackInfo\r\n\t */\r\n\t_addAttack(skin, style, attackInfo) {\r\n\t\tattackInfo.allAttack.forEach(attack => {\r\n\t\t\tlet target = attack.getTargetObject();\r\n\t\t\tif (target) {\r\n\t\t\t\tconst pos = target.$physics.getPosition();\r\n\t\t\t\tlet x, y;\r\n\r\n\t\t\t\tx = pos.x * $gv.CANVAS_SCALE;\r\n\t\t\t\ty = pos.y * $gv.CANVAS_SCALE - 70;\r\n\r\n\t\t\t\tattack.allDamage.forEach(damage => {\r\n\t\t\t\t\tthis.addDamagePair(skin, style, damage, x, y);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @template K\r\n\t * @param {string} skin\r\n\t * @param {K extends keyof loaded_skin[skin] ? K:never} style\r\n\t * @param {DamagePair} damagePair\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t */\r\n\taddDamagePair(skin, style, damagePair, x, y, delay = 0) {\r\n\t\tthis.objects.push(new DamageNumber(skin, style, damagePair, x, y, delay));\r\n\t}\r\n}\r\n\r\n\r\nexport const damageNumberLayer = new DamageNumberLayer();\r\n\r\nwindow.$damageNumberLayer = damageNumberLayer;\r\nwindow.$DamageNumber = DamageNumber\r\nwindow.$DamageNumberTest = DamageNumberTest;\r\nwindow.$DamageNumberRenderer = DamageNumberRenderer;\r\n//DamageNumberRenderer.prototype._display_axis = true;\r\n\r\n","\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { MobSkillBallDefinition, MobSkillBallBase, MobSkillBase } from \"./MobSkillBase.js\";\r\n\r\nclass FlowerTrapBallDefinition extends MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.size = 0;// 1~3\r\n\t}\r\n}\r\n\r\nexport class FlowerTrapBall extends MobSkillBallBase {\r\n\t/**\r\n\t * @param {FlowerTrapBallDefinition} ballDef\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper(ballDef, animations);\r\n\t\t\r\n\t\tthis.renderer = animations[ballDef.size].clone();\r\n\t}\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.$physics = {// make dummy for debug\r\n\t\t\tstate: {}\r\n\t\t};\r\n\t\t\r\n\t\tsuper.create(pWorld);//complete create\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\treturn FlowerTrapBallDefinition;\r\n\t}\r\n}\r\n\r\nexport class FlowerTrap extends MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t\tthis.patterns = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} pattern - 0~2 int\r\n\t * @param {number} x - int\r\n\t * @param {number} y - int\r\n\t * @param {boolean} flip - not sure\r\n\t */\r\n\t_invoke(pattern, x, y, flip) {\r\n\t\tconst pats = this._raw[\"pattern\" + pattern];\r\n\t\tfor (let i = 0; i in pats; ++i) {\r\n\t\t\tconst pat = pats[i];\r\n\t\t\tlet mx, my, angle;\r\n\t\t\t\r\n\t\t\tmx = x + (flip ? (-pat.pos.x) : (pat.pos.x));\r\n\t\t\tmy = y + pat.pos.y;\r\n\t\t\tangle = pat.angle - 90;//texture is vertical, angle - 90deg\r\n\t\t\t\r\n\t\t\tlet ball = new FlowerTrapBall({\r\n\t\t\t\tx: mx, y: my, angle: angle,\r\n\t\t\t\tsize: pat.size,\r\n\t\t\t\tcreateDelay: pat.createDelay,\r\n\t\t\t\tcollisionDelay: pat.collisionDelay,\r\n\t\t\t\tduration: pat.duration\r\n\t\t\t}, this.animations);\r\n\t\t\t\r\n\t\t\t$gv.SceneObjectMgr.addToScene(10, ball);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {void} */\r\n\tinvoke() {\r\n\t\tthis._invoke(Randomizer.nextInt(3), 1000, 48, Randomizer.nextBoolean());\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\treturn [\"XL\", \"L\", \"M\", \"S\"];\r\n\t}\r\n\t\r\n\t/** @returns {string} */\r\n\tget _base_path() {\r\n\t\treturn \"/Skill/MobSkill/238/level\";\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { CharacterStat, $RemotePlayerData, $PlayerData } from \"../../Common/PlayerData\";\r\n\r\nexport class $RequestPacket_SelectChara {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.charaId = undefined;\r\n\t}\r\n}\r\nexport class $ResponsePacket_SelectChara {\r\n\tconstructor() {\r\n\t\t/** @type {$PlayerData} */\r\n\t\tthis.charaData = null;\r\n\r\n\t\t/** @type {$RemotePlayerData[]} */\r\n\t\tthis.remoteCharacters = null;\r\n\t}\r\n}\r\n","﻿\r\n\r\nexport class $Packet_CharacterChat {\r\n\tconstructor() {\r\n\t\t/** @type {number} - chat type */\r\n\t\tthis.type = null;\r\n\r\n\t\t/** @type {number} - ChatBalloon style */\r\n\t\tthis.$style = null;\r\n\r\n\t\t/** @type {string} - chat text */\r\n\t\tthis.text = null;\r\n\t}\r\n}\r\n","﻿\r\nimport { CharacterMoveElem } from \"../../Client/PMovePath\";\r\n\r\n/**\r\n * @type {{[x:string]:string}[]}\r\n */\r\nconst keyboard_map = [{\r\n\tArrowUp: \"up\",\r\n\tArrowLeft: \"left\",\r\n\tArrowDown: \"down\",\r\n\tArrowRight: \"right\",\r\n\tz: \"jump\",\r\n\tx: \"skill_1\",\r\n\tc: \"skill_2\",\r\n\tv: \"skill_3\",\r\n},\r\n{\r\n\tw: \"up\",\r\n\ta: \"left\",\r\n\ts: \"down\",\r\n\td: \"right\",\r\n\tq: \"jump\",\r\n\tx: \"skill_1\",\r\n\tc: \"skill_2\",\r\n\tv: \"skill_3\",\r\n}];\r\n\r\nexport class $Packet_CharacterMove {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.id = undefined;\r\n\r\n\t\t/** @type {CharacterMoveElem[]} */\r\n\t\tthis.path = [];\r\n\r\n\t\t/** @type {number} - time stamp */\r\n\t\tthis.stamp = (new Date().getTime());\r\n\t}\r\n\tcapture(chara) {\r\n\t\tconst phy = chara.$physics;\r\n\t\tconst body = phy.body;\r\n\t\tlet elem = new CharacterMoveElem();\r\n\r\n\t\t{\r\n\t\t\tconst crr = chara.renderer;\r\n\r\n\t\t\telem.action = crr.action;\r\n\t\t\t//elem.action_frame = crr.action_frame;\r\n\t\t\telem.emotion = crr.emotion;\r\n\t\t\t//elem.emotion_frame = crr.emotion_frame;\r\n\t\t}\r\n\r\n\t\telem.isAwake = body.IsAwake();\r\n\t\tif (elem.isAwake) {\r\n\r\n\t\t\tlet pos = phy.getPosition();\r\n\t\t\tlet vel = body.GetLinearVelocity();\r\n\r\n\t\t\telem.x = pos.x;\r\n\t\t\telem.y = pos.y;\r\n\t\t\telem.vx = vel.x;\r\n\t\t\telem.vy = vel.y;\r\n\t\t\t//elem.fx = force.x;\r\n\t\t\t//elem.fy = force.y;\r\n\r\n\t\t\telem.pState = phy.state;\r\n\r\n\t\t\telem.elapsed = (new Date().getTime()) - this.stamp;\r\n\t\t}\r\n\r\n\t\tthis.path.push(elem);\r\n\t}\r\n}\r\n\r\nclass $CharacterMoveItemElem {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.from = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.to = null;\r\n\r\n\t\t/** @type {string} - equip id */\r\n\t\tthis.item = null;\r\n\t}\r\n}\r\nclass $Packet_CharacterMoveItem {\r\n\tconstructor() {\r\n\t\t/** @type {$CharacterMoveItemElem} */\r\n\t\tthis.elem = [];\r\n\t}\r\n}\r\n\r\nclass $Packet_CharacterSkill {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.skillId = null;\r\n\t}\r\n}\r\n","﻿\r\nimport io from \"socket.io-client\";\r\n\r\nimport { GameStateManager } from \"../game/GameState.js\";\r\n\r\nimport { SceneMap } from \"../game/Map.js\";\r\nimport { SceneCharacter, SceneRemoteCharacter } from \"../game/SceneCharacter.js\";\r\n\r\nimport { CharacterMoveElem } from \"../Client/PMovePath.js\";//debug\r\nimport { $RequestPacket_SelectChara, $ResponsePacket_SelectChara,\r\n\t\t $Packet_RemoteChat,\r\n\t\t $Packet_CharacterMove,\r\n\t\t} from \"../Common/Packet\";//debug\r\n\r\nimport { app as gApp } from \"../index.js\";//debug\r\n\r\nclass $Socket {\r\n\t/**\r\n\t * socket.emit(eventName[, ...args])\r\n\t * return server answer\r\n\t * @param {string} eventName\r\n\t * @param {any} data\r\n\t * @returns {Promise<any>}\r\n\t */\r\n\temit(eventName, data) {\r\n\t}\r\n\ton(eventName, callback) {\r\n\t}\r\n\tonce(eventName, data) {\r\n\t}\r\n}\r\n\r\nexport class Client {\r\n\tconstructor() {\r\n\t\t/** @type {$Socket} */\r\n\t\tthis.socket = null;\r\n\r\n\t\t/** @type {{[id:string]:SceneCharacter}} */\r\n\t\tthis.charaMap = {};\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} charaId\r\n\t * @param {function(SceneCharacter)} cbfunc\r\n\t */\r\n\t_findChara(charaId, cbfunc) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (typeof cbfunc != 'function') {\r\n\t\t\t\tconsole.error(new TypeError());\r\n\t\t\t}\r\n\t\t}\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tlet chara = this.charaMap[charaId];\r\n\r\n\t\tif (chara) {\r\n\t\t\tcbfunc.call(this, chara);\r\n\t\t}\r\n\t\t//else {\r\n\t\t//\talert(`chara['${charaId}'] not exist`);\r\n\t\t//}\r\n\t}\r\n\t/**\r\n\t * _addRemoteCharaPacketListener(eventName, fnAck(...))\r\n\t * @param {string} eventName\r\n\t * @param {function(...any, function(...any):void)} listener\r\n\t */\r\n\t_addRemoteCharaPacketListener(eventName, listener) {\r\n\t\tthis.socket.on(eventName, (...args) => {\r\n\t\t\t/** @type {string} */\r\n\t\t\tlet charaId = args[0].id;\r\n\r\n\t\t\t/** @type {SceneCharacter} */\r\n\t\t\tlet chara = this.charaMap[charaId];\r\n\r\n\t\t\tif (chara) {\r\n\t\t\t\tlistener.call(this, chara, ...args);//listener(chara, packet[, ...packet], fnAck)\r\n\t\t\t}\r\n\t\t\t//else {\r\n\t\t\t//\talert(`chara['${charaId}'] not exist`);\r\n\t\t\t//}\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @type {string} server_href\r\n\t * @returns {Promise<$Socket>}\r\n\t */\r\n\tasync connect(server_href) {\r\n\t\treturn await new Promise((resolve, reject) => {\r\n\t\t\tlet socket;\r\n\t\t\t\r\n\t\t\tsocket = io(server_href);\r\n\t\t\t\r\n\t\t\tsocket.on(\"connect\", () => {\r\n\t\t\t\tthis.socket = socket;\r\n\t\t\t\t\r\n\t\t\t\twindow.$io = this.socket;\r\n\t\t\t\t\r\n\t\t\t\tconst emit = socket.$emit = socket.emit;\r\n\t\t\t\t\r\n\t\t\t\tsocket.emit = function (eventName, data) {\r\n\t\t\t\t\t//let cbfunc = arguments[arguments.length - 1];\r\n\t\t\t\t\t//if (typeof cbfunc == 'function') {\r\n\t\t\t\t\t//\temit(eventName, data, cbfunc);\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\t\t\t\temit.call(socket, eventName, data, function (...args) {\r\n\t\t\t\t\t\t\t\tresolve.apply(this, args);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t//}\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tresolve(socket);\r\n\t\t\t});\r\n\t\t\tsocket.on(\"connect_error\", error => {\r\n\t\t\t\tsocket.disconnect();\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/** @type {SceneMap} */\r\n\tget $scene_map() {\r\n\t\treturn window.scene_map;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} account\r\n\t * @param {string} password\r\n\t */\r\n\tasync login(account, password) {\r\n\t\tlet result = await this.socket.emit(\"login\", {\r\n\t\t\taccount: \"aaa\",\r\n\t\t\tpassword: \"aaa\",\r\n\t\t});\r\n\t\tif (result) {\r\n\t\t\tconsole.info(\"login\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.info(\"login failed\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} world\r\n\t * @param {number} channel\r\n\t */\r\n\tasync selectWorld(world, channel) {\r\n\t\tlet result = await this.socket.emit(\"selectWorld\", {\r\n\t\t\tworld: 0,\r\n\t\t\tchannel: 0,\r\n\t\t});\r\n\t\tif (result) {\r\n\t\t\tconsole.info(\"selectWorld\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.info(\"selectWorld failed\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {any} charID\r\n\t */\r\n\tasync selectChara(charID) {\r\n\t\t/** @type {$RequestPacket_SelectChara} */\r\n\t\tlet req = new $RequestPacket_SelectChara();\r\n\t\t\r\n\t\t/** @type {$Packet_SelectChara} */\r\n\t\tlet ackPacket = await this.socket.emit(\"selectChara\", {\r\n\t\t\tid: 123,\r\n\t\t});\r\n\t\tconst charaData = ackPacket.charaData;\r\n\t\tconst remoteCharacters = ackPacket.remoteCharacters;\r\n\r\n\t\tif (charaData) {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.$scene_map.load(charaData.mapId);\r\n\t\t\t\t\r\n\t\t\t\tlet task1 = this._CreateMyCharacter(charaData);\r\n\t\t\t\tlet task2 = this.onEnterRemoteChara(remoteCharacters);\r\n\t\t\t\t\r\n\t\t\t\tawait Promise.all([task1, task2]);\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert(\"selectChara: chara not exist\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * online mode\r\n\t */\r\n\tasync _CreateMyCharacter(charaData) {\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tlet chara = await gApp.store.dispatch('_createChara', {\r\n\t\t\templace: {\r\n\t\t\t\tid: charaData.id,\r\n\t\t\t\tcode: charaData.equips_code,\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.chara = chara;\r\n\r\n\t\tchara._$data = chara._$data || {\r\n\t\t\tguildId: \"\",//guildId == guildName\r\n\t\t\tpartyId: \"\",//partyId == partyName\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * offline mode\r\n\t * @param {{id:string,equips_code:string}} charaData\r\n\t */\r\n\tstatic async _CreateMyCharacter(charaData) {//??\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tlet chara = await gApp.store.dispatch('_createChara', {\r\n\t\t\templace: {\r\n\t\t\t\tid: charaData.id,\r\n\t\t\t\tcode: charaData.equips_code,\r\n\t\t\t}\r\n\t\t});\r\n\t\tchara = chara;\r\n\r\n\t\tchara._$data = chara._$data || {\r\n\t\t\tguildId: \"\",//guildId == guildName\r\n\t\t\tpartyId: \"\",//partyId == partyName\r\n\t\t}\r\n\r\n\t\treturn chara;\r\n\t}\r\n\t/**\r\n\t * @param {$RemotePlayerData[]} packet - characters\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tonEnterRemoteChara(packet) {\r\n\t\tconst characters = packet;\r\n\r\n\t\tlet tasks = characters.map(charaData => {\r\n\t\t\treturn gApp.store.dispatch('_createChara', {\r\n\t\t\t\tremote_chara: {\r\n\t\t\t\t\tid: charaData.id,\r\n\t\t\t\t\tcode: charaData.equips_code,\r\n\t\t\t\t}\r\n\t\t\t}).then((...args) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst world = this.$scene_map.controller;\r\n\r\n\t\t\t\t\t/** @type {SceneRemoteCharacter} */\r\n\t\t\t\t\tlet chara = args[0];\r\n\r\n\t\t\t\t\tthis.charaMap[chara.id] = chara;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ex) {\r\n\t\t\t\t\talert(err.message);\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t * @param {$Packet_RemoteChat} packet\r\n\t * @param {function(...any):void} fnAck\r\n\t */\r\n\tonRemoteChat(chara, packet, fnAck) {\r\n\t\tchara.chatCtrl.style = packet.style;\r\n\t\tchara.chatCtrl.enter(packet.text);\r\n\t\tapp.vue.$refs.statusBar.pushChatHistory(packet.type, packet.style, packet.text);\r\n\t}\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t * @param {$Packet_CharacterMove} packet\r\n\t * @param {function(...any):void} fnAck\r\n\t */\r\n\tonRemoteCharaMove(chara, packet, fnAck) {\r\n\t\tchara.$move(packet);\r\n\t}\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t * @param {$Packet_RemoteCharaAnim} packet\r\n\t * @param {function(...any):void} fnAck\r\n\t */\r\n\tonRemoteCharaAnim(chara, packet, fnAck) {\r\n\t\tchara.$anim(packet);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t * @param {} packet\r\n\t * @param {function(...any):void} fnAck\r\n\t */\r\n\tonRemoteCharaSkill(chara, packet, fnAck) {\r\n\t\tchara.invokeSkill(packet.skillId);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t * @param {} packet\r\n\t * @param {function(...any):void} fnAck\r\n\t */\r\n\tonRemoteAvatarModified(chara, packet, fnAck) {\r\n\t\tchara.renderer.use(packet.itemId);\r\n\t}\r\n\r\n\tasync $test() {\r\n\t\tthis.socket.on(\"enterRemoteChara\", this.onEnterRemoteChara.bind(this));\r\n\t\tthis._addRemoteCharaPacketListener(\"remoteChat\", this.onRemoteChat);\r\n\t\tthis._addRemoteCharaPacketListener(\"remoteCharaMove\", this.onRemoteCharaMove);\r\n\t\tthis._addRemoteCharaPacketListener(\"remoteCharaAnim\", this.onRemoteCharaAnim);\r\n\t\tthis._addRemoteCharaPacketListener(\"remoteCharaSkill\", this.onRemoteCharaSkill);\r\n\t\tthis._addRemoteCharaPacketListener(\"remoteAvatarModified\", this.onRemoteAvatarModified);\r\n\r\n\t\tawait this.login(\"aaa\", \"aaa\");\r\n\r\n\t\tawait this.selectWorld(0, 0);\r\n\r\n\t\tawait this.selectChara(0);\r\n\t}\r\n}\r\n\r\n\r\n\r\n","﻿\r\nimport { SceneMap } from \"./Map.js\";\r\nimport { SceneCharacter } from \"./SceneCharacter.js\";\r\n\r\nimport { Client } from \"../Client/Client.js\";//debug\r\n\r\nimport { app as gApp } from \"../index.js\";//debug\r\n\r\n\r\nexport class GameState {\r\n\tconstructor(scene, chara) {\r\n\t\t/** @type {string} */\r\n\t\tthis.map_id = scene.map_id;\r\n\r\n\t\tif (chara.renderer) {\r\n\t\t\t/** @type {string} */\r\n\t\t\tthis.chara = chara.renderer._stringify(false);\r\n\t\t\turl += \"&chara=\" + this.chara;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class GameStateManager {\r\n\tconstructor() {\r\n\t\tthrow new Error(\"\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneMap} scene\r\n\t * @param {SceneCharacter} chara\r\n\t */\r\n\tstatic PushState(scene, chara) {\r\n\t\tif (!scene) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet state = {};\r\n\t\tlet url = \"?map=\" + scene.map_id;\r\n\r\n\t\tstate.map_id = scene.map_id;\r\n\r\n\t\tif (chara && chara.renderer) {\r\n\t\t\tstate.chara = chara.renderer._stringify(false);\r\n\t\t\turl += \"&chara=\" + state.chara;\r\n\t\t}\r\n\r\n\t\thistory.pushState(state, scene._window_title, url);\r\n\r\n\t\tdocument.title = scene._window_title;\r\n\t}\r\n\t/**\r\n\t * @param {string} map_id\r\n\t * @param {string} chara_code\r\n\t */\r\n\tstatic PushStateString(map_id, chara_code) {\r\n\t\tif (!map_id) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet state = {};\r\n\r\n\t\tlet url = \"?map=\" + map_id;\r\n\t\tstate.map_id = map_id;\r\n\r\n\t\tif (chara_code) {\r\n\t\t\tstate.chara = chara_code;\r\n\t\t\turl += \"&chara=\" + state.chara;\r\n\t\t}\r\n\r\n\t\thistory.pushState(state, scene._window_title, url);\r\n\r\n\t\tdocument.title = scene._window_title;\r\n\t}\r\n\tstatic async PopState(state) {\r\n\t\tif (!state) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (state.chara && window.chara && window.chara.renderer) {\r\n\t\t\tlet _old_c = window.chara.renderer._stringify(false);\r\n\t\t\tif (state.chara != _old_c) {\r\n\t\t\t\twindow.chara.renderer._parse(state.chara);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tClient._CreateMyCharacter({\r\n\t\t\t\tid: \"chara_1\",\r\n\t\t\t\tequips_code: state.chara,\r\n\t\t\t});\r\n\t\t\t//await gApp.store.dispatch('_createChara', {\r\n\t\t\t//\templace: {\r\n\t\t\t//\t\tid: \"chara_1\",\r\n\t\t\t//\t\tcode: state.chara,\r\n\t\t\t//\t}\r\n\t\t\t//});\r\n\t\t}\r\n\r\n\t\tif (scene_map && scene_map.map_id != state.map_id) {\r\n\t\t\tawait scene_map.load(state.map_id);\r\n\t\t}\r\n\t}\r\n}\r\n","\r\n\r\nexport class CursorPicker {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.type = null;\r\n\t\t/** @type {any} */\r\n\t\tthis.data = null;\r\n\t}\r\n}\r\n\r\n\r\nexport class CursorAnimationFrame {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.url = null;\r\n\t\t/** @type {number} */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} */\r\n\t\tthis.y = 0;\r\n\t\t/** @type {number} - time in millisecond */\r\n\t\tthis.delay = 0;\r\n\t}\r\n}\r\n\r\nexport class CursorAnimationData {\r\n\tconstructor() {\r\n\t\t/** @type {CursorAnimationFrame[]} */\r\n\t\tthis.frames = [];\r\n\r\n\t\t/** @type {number} - time in millisecond */\r\n\t\tthis.duration = 0;\r\n\t}\r\n\t/**\r\n\t * @param {string} url\r\n\t * @returns {Promise<number>} - index\r\n\t */\r\n\tasync addFrameFromUrl(url) {\r\n\t\tlet raw = await $get.data(url);\r\n\t\treturn this.addFrame(\"images\" + url, raw.origin.x, raw.origin.y, raw.delay);\r\n\t}\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} delay\r\n\t * @returns {number} - index\r\n\t */\r\n\taddFrame(url, x, y, delay) {\r\n\t\tif (!url) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tconst i = this.frames.length;\r\n\t\tlet frame = new CursorAnimationFrame();\r\n\r\n\t\tframe.url = url;\r\n\t\tframe.x = x | 0;\r\n\t\tframe.y = y | 0;\r\n\t\tframe.delay = delay | 0;\r\n\r\n\t\tthis.frames.push(frame);\r\n\r\n\t\tthis.duration += frame.delay; \r\n\r\n\t\treturn i;\r\n\t}\r\n\tasync load(url) {\r\n\t\tlet raw = await $get.data(url);\r\n\r\n\t\tfor (let i = 0, frame = raw[i]; frame; ++i, frame = raw[i]) {\r\n\t\t\tlet img = {};\r\n\r\n\t\t\tthis.addFrame(\r\n\t\t\t\t[\"images\", url, i].join(\"/\"),\r\n\t\t\t\tframe.origin.x,\r\n\t\t\t\tframe.origin.y,\r\n\t\t\t\tframe.delay\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class Cursor  {\r\n\tconstructor(/*raw, url*/) {\r\n\t\t///** @type {Animation} */\r\n\t\t//this.ani = null;\r\n\t}\r\n\t//async createAnimation(url) {\r\n\t//\tlet raw = await $get.data(url);\r\n\t//\tthis.ani = new Animation(raw, url);\r\n\t//\tawait this.ani.load();\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CursorAnimationData} data\r\n\t * @param {string} selector\r\n\t * @param {string} keyword\r\n\t */\r\n\tstatic createToCSS(data, selector, keyword) {\r\n\t\tconst id = \"Cursor\" + Math.trunc(Math.random() * 0xFFFFFFFF).toString(16);\r\n\r\n\t\tconst { frames, duration } = data;\r\n\r\n\t\tlet cssText = `${selector}:hover {\\n`;\r\n\r\n\t\tcssText += `cursor: url(${frames[0].url}) ${frames[0].x} ${frames[0].y}, ${keyword};\\n`;\r\n\r\n\t\tif (duration) {\r\n\t\t\tcssText += `animation-name: ${id}_keyframes;\\n`;\r\n\t\t\tcssText += `animation-duration: ${duration}ms;\\n`;\r\n\t\t\tcssText += `animation-iteration-count: infinite;\\n`;\r\n\t\t\tcssText += \"}\\n\";\r\n\r\n\t\t\tlet tt = 0;\r\n\t\t\t{\r\n\t\t\t\tcssText += `@keyframes ${id}_keyframes {\\n`;\r\n\r\n\t\t\t\tfor (let i = 0; i < frames.length; ++i) {\r\n\t\t\t\t\tconst frame = frames[i];\r\n\r\n\t\t\t\t\tlet start = Math.trunc((tt / duration) * 100);\r\n\r\n\t\t\t\t\tcssText += `${start}% { cursor: url(${frames[i].url}) ${frames[i].x} ${frames[i].y}, ${keyword}; }\\n`;\r\n\r\n\t\t\t\t\ttt += frame.delay;\r\n\t\t\t\t}\r\n\t\t\t\t//cssText += `100% { cursor: url(${frames[0].url}) ${frames[0].x} ${frames[0].y}; }\\n`;\r\n\r\n\t\t\t\tcssText += \"}\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcssText += \"}\";\r\n\t\t}\r\n\t\t\r\n\t\tvar x = document.createElement(\"STYLE\");\r\n\t\tvar t = document.createTextNode(cssText);\r\n\t\tx.id = id;\r\n\t\tx.appendChild(t);\r\n\t\tdocument.head.appendChild(x);\r\n\r\n\t\treturn x;\r\n\t}\r\n}\r\n","\r\nimport { } from './init.js';\r\nimport { Vec2, Rectangle } from './math.js';\r\nimport { IGraph, IRenderer } from './IRenderer.js';\r\nimport { engine, Graph } from './Engine.js';\r\nimport { Animation } from './Animation.js';\r\n\r\nimport { GameStateManager } from './GameState.js';\r\nimport { SceneMap } from './Map.js';\r\n//import { SceneCharacter } from './SceneCharacter.js';\r\n\r\nimport { EffectManager } from \"./Skill.js\";\r\nimport { } from \"./MobSkill/238.FairyDust.js\";\r\n\r\nimport { damageNumberLayer } from \"./Renderer/DamageNumber.js\";\r\nimport { sceneRenderer, SceneRenderer } from \"./Renderer/SceneRenderer.js\";\r\n\r\nimport { Cursor, CursorAnimationData } from \"./Cursor.js\";\r\n\r\nimport { Client } from \"../Client/Client.js\";\r\n\r\n\r\nimport { SceneCharacter } from \"./SceneCharacter.js\";//debug\r\nimport { app as gApp } from \"../index.js\";//debug\r\n\r\n\r\nsceneRenderer.addLayerBack(12);\r\n\r\nwindow.SCREEN_PRINTLN = function (getText, getValue) {\r\n\tif (arguments.length == 2) {\r\n\t\twindow._SCREEN_PRINTLN.push({ getText, getValue });\r\n\t}\r\n\telse if (arguments.length == 1) {\r\n\t\twindow._SCREEN_PRINTLN.push(arguments[0]);\r\n\t}\r\n}\r\nwindow._SCREEN_PRINTLN = [];\r\n\r\nvar animationRequestID = null;\r\n\r\nwindow.addEventListener(\"popstate\", function (e) {\r\n\tGameStateManager.PopState(e.state);\r\n});\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction createCursor_clickable() {\r\n\tlet data = new CursorAnimationData();\r\n\r\n\tlet task1 = data.addFrameFromUrl(\"/UI/Basic/Cursor/0/0\").then(function (i) {\r\n\t\tdata.frames[i].delay = 200;\r\n\t});\r\n\r\n\tlet task2 = data.addFrameFromUrl(\"/UI/Basic/Cursor/12/0\").then(function (i) {\r\n\t\tdata.frames[i].delay = 200;\r\n\t});\r\n\r\n\treturn Promise.all([task1, task2]).then(function () {\r\n\t\tdata.duration = 400;\r\n\r\n\t\tCursor.createToCSS(data, \".ui-clickable\", \"pointer\");\r\n\t});\r\n}\r\n\r\ncreateCursor_clickable();\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * @param {KeyboardEvent} e\r\n */\r\nwindow.onkeydown = function (e) {\r\n\tif (e.target != document.body) {\r\n\t\treturn;\r\n\t}\r\n\tlet k = e.key;\r\n\r\n\tif (k != null && !$gv.input_keyDown[k]) {\r\n\t\t$gv.input_keyDown[k] != null ? (++$gv.input_keyDown[k]) : ($gv.input_keyDown[k] = 1);\r\n\t}\r\n\r\n\tif (e.code == 'Space') {\r\n\t\t$(\"#m_is_run\").click();\r\n\t}\r\n\tif (e.code == \"F2\") {\r\n\t\t$gv.m_editor_mode = !$gv.m_editor_mode;\r\n\t}\r\n}\r\n\r\nwindow.onkeyup = function (e) {\r\n\tif (e.target != document.body) {\r\n\t\treturn;\r\n\t}\r\n\tlet k = e.key;\r\n\r\n\tif (k != null && $gv.input_keyDown[k]) {\r\n\t\t$gv.input_keyDown[k] = 0;\r\n\t\t$gv.input_keyUp[k] = 1;\r\n\t}\r\n}\r\n\r\nObject.defineProperty(window, \"$m_is_run\", {\r\n\tget: function () {\r\n\t\treturn $(\"#m_is_run\").attr(\"checked\");\r\n\t}, \r\n\tset: function (value) {\r\n\t\t$(\"#m_is_run\").attr(\"checked\", !value);\r\n\t\t$(\"#m_is_run\").click();\r\n\t}\r\n});\r\n\r\n/**\r\n * @param {MouseEvent} e\r\n */\r\nwindow.onmousedown = function (e) {\r\n\tif ($gv.m_editor_mode) {\r\n\t\tif (!e.target.classList.contains(\"Editor\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tif (e.which == 1) {\r\n\t\t$gv.mouse_dl = 1;\r\n\t\t$gv.mouse_ul = 0;\r\n\t}\r\n\telse if (e.which == 2) {\r\n\t\t$gv.mouse_dm = 1;\r\n\t\t$gv.mouse_um = 0;\r\n\t}\r\n\telse if (e.which == 3) {\r\n\t\t$gv.mouse_dr = 1;\r\n\t\t$gv.mouse_ur = 0;\r\n\t}\r\n\t$gv.mouse_x = e.pageX;\r\n\t$gv.mouse_y = e.pageY;\r\n}\r\n\r\n/**\r\n * @param {MouseEvent} e\r\n */\r\nwindow.onmouseup = function (e) {\r\n\tif ($gv.m_editor_mode) {\r\n\t\tif (!e.target.classList.contains(\"Editor\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tif (e.which == 1) {\r\n\t\t$gv.mouse_dl = 0;\r\n\t\t$gv.mouse_ul = 1;\r\n\t}\r\n\telse if (e.which == 2) {\r\n\t\t$gv.mouse_dm = 0;\r\n\t\t$gv.mouse_um = 1;\r\n\t}\r\n\telse if (e.which == 3) {\r\n\t\t$gv.mouse_dr = 0;\r\n\t\t$gv.mouse_ur = 1;\r\n\t}\r\n\t$gv.mouse_x = e.pageX;\r\n\t$gv.mouse_y = e.pageY;\r\n}\r\n\r\n/**\r\n * @param {MouseEvent} e\r\n */\r\nwindow.onmousemove = function (e) {\r\n\tif ($gv.m_editor_mode) {\r\n\t\tif (!e.target.classList.contains(\"Editor\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t$gv.mouse_x = e.pageX;\r\n\t$gv.mouse_y = e.pageY;\r\n\t$gv.mouse_move = 1;\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class Game {\r\n\tconstructor() {\r\n\t\tthis.timer = 0;\r\n\t\tthis.timer_ = 0;\r\n\t\tthis._dTimer = 0;\r\n\t\tthis.fps_arr = [];\r\n\t\tthis.frame_s_arr = [];\r\n\t\t\r\n\t\t//this.chara = null;\r\n\t\t\r\n\t\t/** @type {SceneMap} */\r\n\t\tthis.scene_map = new SceneMap();\r\n\r\n\t\twindow.scene_map = this.scene_map;\r\n\t\t$gv.scene_map = window;\r\n\r\n\t\tscene_map.onload = function () {\r\n\t\t\tGameStateManager.PushState(this, window.chara);\r\n\t\t}\r\n\t\t\r\n\t\tthis._loop = this._loop.bind(this);\r\n\t\t\r\n\t\tdocument.getElementById(\"m_is_run\").onchange = (function (e) {\r\n\t\t\tthis.m_is_run = e.target.checked ? true : false;\r\n\t\t\tif (this.m_is_run) {\r\n\t\t\t\tanimationRequestID = requestAnimationFrame(this._loop);\r\n\t\t\t\tdocument.getElementById(\"Screenshot\").innerHTML = \"\";\r\n\t\t\t}\r\n\t\t}).bind(this);\r\n\r\n\t\tthis._$moveViewportSpeed = 10;//debug\r\n\t}\r\n\t\r\n\tmoveViewport(inBound) {\r\n\t\tconst scene_map = this.scene_map;\r\n\r\n\t\tconst speed = $gv.input_keyDown['z'] ? (this._$moveViewportSpeed * 10) : this._$moveViewportSpeed;\r\n\r\n\t\t//$gv.m_viewRect = scene_map.viewArea(new Vec2($gv.m_viewRect.left, $gv.m_viewRect.top));\r\n\r\n\t\tif ($gv.input_keyDown['ArrowLeft'] > 0) {\r\n\t\t\t$gv.m_viewRect.left -= speed;\r\n\t\t}\r\n\t\tif ($gv.input_keyDown['ArrowRight'] > 0) {\r\n\t\t\t$gv.m_viewRect.left += speed;\r\n\t\t}\r\n\t\tif ($gv.input_keyDown['ArrowUp'] > 0) {\r\n\t\t\t$gv.m_viewRect.top -= speed;\r\n\t\t}\r\n\t\tif ($gv.input_keyDown['ArrowDown'] > 0) {\r\n\t\t\t$gv.m_viewRect.top += speed;\r\n\t\t}\r\n\r\n\t\tlet { left, top, right, bottom } = scene_map.mapBound;\r\n\r\n\t\tif (inBound) {\r\n\t\t\tif ($gv.m_viewRect.left < left) {\r\n\t\t\t\t$gv.m_viewRect.left = left;\r\n\t\t\t}\r\n\t\t\tif ($gv.m_viewRect.right > right) {\r\n\t\t\t\t$gv.m_viewRect.left = right - $gv.m_viewRect.width;\r\n\t\t\t}\r\n\t\t\tif ($gv.m_viewRect.top < top) {\r\n\t\t\t\t$gv.m_viewRect.top = top;\r\n\t\t\t}\r\n\t\t\tif ($gv.m_viewRect.bottom > bottom) {\r\n\t\t\t\t$gv.m_viewRect.top = bottom - $gv.m_viewRect.height;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} server\r\n\t */\r\n\tasync _$startClient(server) {\r\n\t\tif (scene_map) {\r\n\t\t\tlet client = new Client();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tawait client.connect(server);\r\n\t\t\t\tconsole.log(\"start client\");\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\t\t\t\tconsole.warn(err);\r\n\t\t\t\tconsole.log(\"start offline\");\r\n\t\t\t\tthis._$start_offline();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgApp.client = client;\r\n\t\t\tclient.$test();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\t_$start_offline() {\r\n\t\tlet params = _parseUrlParameter();\r\n\t\tlet map_id;\r\n\t\r\n\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\tmap_id = params[\"map\"] || window.DEFAULT_MAP_ID;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmap_id = params[\"map\"] || \"000000000\";//450003000\r\n\t\t}\r\n\t\r\n\t\tlet chara_code = params[\"chara\"] || \"c,00002012,00012012,00026509|00026509,00034873|00034873,01051429,01072392\";\r\n\t\r\n\t\tGameStateManager.PopState({\r\n\t\t\tmap_id: map_id,\r\n\t\t\tchara: chara_code,\r\n\t\t});\r\n\t}\r\n\r\n\t/** @type {boolean} */\r\n\tget _isMapReady() {\r\n\t\tconst scene_map = this.scene_map;\r\n\t\treturn scene_map && scene_map.isLoaded();\r\n\t}\r\n\t\r\n\tasync run() {\r\n\t\tconsole.log(\"begin render\");\r\n\t\tthis._loop(0);//start render\r\n\t}\r\n\t\r\n\tasync forceUpdateScreen() {\r\n\t\tconst chara = this.chara;\r\n\t\t\r\n\t\tchara.renderer.__forceUpdate(0);\r\n\t\t\r\n\t\tif (this.m_is_run) {\r\n\t\t\tawait chara.renderer.waitLoaded();\r\n\t\t\tchara.renderer.__require_update = true;//update once\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tawait chara.renderer.waitLoaded();\r\n\t\tawait chara.renderer._waitFrameTexturesLoaded();\r\n\t\tawait IGraph.waitAllLoaded();\r\n\t\t\r\n\t\tdocument.getElementById(\"Screenshot\").innerHTML = \"\";\r\n\t\t\r\n\t\tchara.renderer.__require_update = true;//update once\r\n\t\t\r\n\t\tthis._loop(0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\t_calcFPS(stamp) {\r\n\t\ttry {\r\n\t\t\tif ((this.timer - this.timer_) >= 1000) {\r\n\t\t\t\tif (this.fps_arr.length) {\r\n\t\t\t\t\tlet sum = this.fps_arr.reduce(function (a, b) { return a + b; });\r\n\t\t\t\t\tlet avg = sum / this.fps_arr.length;\r\n\t\t\t\t\t\r\n\t\t\t\t\t$gv.FPS = avg;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdocument.getElementById(\"FPS\").innerHTML = avg.toFixed(2);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.frame_s_arr.length) {\r\n\t\t\t\t\tlet sum = this.frame_s_arr.reduce(function (a, b) { return a + b; });\r\n\t\t\t\t\tlet avg = sum / this.frame_s_arr.length;\r\n\t\t\t\t\t\r\n\t\t\t\t\t$gv.frameCount = avg;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdocument.getElementById(\"frame\").innerHTML = avg.toFixed(2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.frame_s_arr = [];\r\n\t\t\t\tthis.fps_arr = [];\r\n\r\n\t\t\t\tthis.timer_ = this.timer;\r\n\t\t\t}\r\n\t\t\telse if (stamp > 0 && Number.isFinite(stamp)) {\r\n\t\t\t\tthis.fps_arr.push(1000 / stamp);\r\n\t\t\t\tthis.frame_s_arr.push(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t\tdocument.getElementById(\"FPS\").innerHTML = \"-\";\r\n\t\t\tdocument.getElementById(\"frame\").innerHTML = \"-\";\r\n\t\t\tthis.fps_arr = [];\r\n\t\t\tthis.frame_s_arr = [];\r\n\t\t}\r\n\t}\r\n\r\n\t_requestNextFrame() {\r\n\t\tif (this.m_is_run) {\r\n\t\t\tanimationRequestID = requestAnimationFrame(this._loop);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//async\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tlet elem = new Image();\r\n\t\t\t\telem.src = engine._canvas.toDataURL();\r\n\t\t\t\tengine.ctx.clearRect(0, 0, engine.ctx.width, engine.ctx.height);\r\n\t\t\t\tdocument.getElementById(\"Screenshot\").appendChild(elem);\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\t_updateScene(stamp) {\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tconst chara = this.chara;\r\n\r\n\t\t/** @type {SceneCharacter[]} */\r\n\t\tconst charaList = this.charaList;\r\n\r\n\t\t{\r\n\t\t\tif (this._isMapReady) {\r\n\t\t\t\tscene_map.update(stamp);//include world.update\r\n\t\t\t}\r\n\r\n\t\t\t// before world.update ??\r\n\t\t\tfor (let i = 0; i < charaList.length; ++i) {\r\n\t\t\t\tcharaList[i].update(stamp);\r\n\t\t\t}\r\n\r\n\t\t\t$gv.SceneObjectMgr.Update(stamp);\r\n\r\n\t\t\tEffectManager.Update(stamp);\r\n\t\t}\r\n\t\t{\r\n\t\t\tconst client = gApp.client;//not offline character\r\n\r\n\t\t\tif (client && client.chara) {\r\n\t\t\t\t/** @type {SceneCharacter} */\r\n\t\t\t\tconst ch = client.chara;\r\n\t\t\t\t\r\n\t\t\t\tch.$emit(window.$io);\r\n\r\n\t\t\t\tch.$recMove();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsceneRenderer.update(stamp);\r\n\t\t\r\n\t\tdamageNumberLayer.update(stamp);\r\n\t}\r\n\t\r\n\t_renderScene() {\r\n\t\tif (this._isMapReady) {\r\n\t\t\tthis._render_map_ready();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._render_map_loading();\r\n\t\t}\r\n\t}\r\n\t_render_map_ready() {\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tconst chara = this.chara;\r\n\r\n\t\t/** @type {SceneCharacter[]} */\r\n\t\tconst charaList = this.charaList;\r\n\t\t\r\n\t\tengine.beginScene();\r\n\t\t{\r\n\t\t\tengine.loadIdentity();\r\n\t\t\tengine.clearDrawScreen();\r\n\t\t\t\r\n\t\t\t$gv.m_viewRect.size = engine.screen_size;\r\n\t\t\tif (!$gv.m_editor_mode) {\r\n\t\t\t\tif (chara && chara.renderer) {\r\n\t\t\t\t\t$gv.m_viewRect.setCenter(chara.renderer.x, chara.renderer.y);\r\n\t\t\t\t}\r\n\t\t\t\telse if (scene_map.controller.player) {\r\n\t\t\t\t\tconst pos = scene_map.controller.player.getPosition();\r\n\t\t\t\t\tconst px = Math.trunc(pos.x * $gv.CANVAS_SCALE + 0.5);\r\n\t\t\t\t\tconst py = Math.trunc(pos.y * $gv.CANVAS_SCALE + 0.5);\r\n\t\t\t\t\t$gv.m_viewRect.setCenter(px, py);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($gv.m_editor_mode) {\r\n\t\t\t\tthis.moveViewport(false);\r\n\t\t\t}\r\n\t\t\tif ($gv.m_is_rendering_map) {\r\n\t\t\t\tscene_map.beginRender(engine);\r\n\t\t\t\t{\r\n\t\t\t\t\tscene_map.renderBackground(engine);\r\n\t\t\t\t\t//if ($gv.m_display_life && scene_map._raw.info.mirror_Bottom) {\r\n\t\t\t\t\t//\tengine.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\t\t\t//\tengine.ctx.translate(Math.trunc(-$gv.m_viewRect.x), Math.trunc(-$gv.m_viewRect.y));\r\n\t\t\t\t\t//\tengine.ctx.scale(1, -1);\r\n\t\t\t\t\t//\tfor (let i = 0; i < scene_map.layeredObject.length; ++i) {\r\n\t\t\t\t\t//\t\tscene_map.renderLife(engine, i);\r\n\t\t\t\t\t//\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t\tfor (let i = 0; i < scene_map.layeredObject.length; ++i) {\r\n\t\t\t\t\t\tscene_map.renderLayeredObject(engine, i);\r\n\t\t\t\t\t\tscene_map.renderLayeredTile(engine, i);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif ($gv.m_display_other_player) {\r\n\t\t\t\t\t\t\t\tfor (let chara_index = 0; chara_index < charaList.length; ++chara_index) {\r\n\t\t\t\t\t\t\t\t\tif (charaList[chara_index] == chara) {\r\n\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (charaList[chara_index].$layer == i) {\r\n\t\t\t\t\t\t\t\t\t\tcharaList[chara_index].render(engine);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tscene_map.renderLife(engine, i);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif ($gv.m_display_player && chara) {\r\n\t\t\t\t\t\t\t\tif ((chara.$layer == null || chara.$layer == i) && chara.renderer) {\r\n\t\t\t\t\t\t\t\t\tchara.render(engine);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t$gv.SceneObjectMgr.RenderLayer(engine, i);\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tsceneRenderer.renderLayer(engine, i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor (let i = scene_map.layeredObject.length; i < 12; ++i) {\r\n\t\t\t\t\t\t\t$gv.SceneObjectMgr.RenderLayer(engine, i);\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tsceneRenderer.renderLayer(engine, i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tscene_map.endRender(engine);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: layer\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < sceneRenderer.layers.length; ++i) {\r\n\t\t\t\t\tsceneRenderer.renderLayer(engine, i);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif ($gv.m_display_other_player || $gv.m_display_player) {\r\n\t\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < charaList.length; ++i) {\r\n\t\t\t\t\t\tif (charaList[i] != chara && $gv.m_display_other_player) {\r\n\t\t\t\t\t\t\tcharaList[i].render(engine);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($gv.m_display_player && chara) {\r\n\t\t\t\t\t\tchara.render(engine);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tEffectManager.Render(engine);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdamageNumberLayer.render(engine);\r\n\r\n\t\t\tfor (let i = 0; i < charaList.length; ++i) {\r\n\t\t\t\tcharaList[i]._$drawName(engine);\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < charaList.length; ++i) {\r\n\t\t\t\tcharaList[i]._$drawChatBalloon(engine);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ($gv.m_is_rendering_map) {\r\n\t\t\t\tscene_map.beginRender(engine);\r\n\t\t\t\t{\r\n\t\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tscene_map.renderPortal(engine);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tscene_map.renderFrontground(engine);\r\n\t\t\t\t}\r\n\t\t\t\tscene_map.endRender(engine);\r\n\t\t\t\t\r\n\t\t\t\tscene_map.renderParticle(engine);\r\n\r\n\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t{\r\n\t\t\t\t\tEffectManager.Render(engine);\r\n\t\t\t\t}\r\n\t\t\t\tengine.loadIdentity();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t{\r\n\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t\r\n\t\t\t\tif ($gv.m_display_debug_info) {\r\n\t\t\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\t\t\tconst ctx = engine.ctx;\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t\t\tctx.fillStyle = \"white\";\r\n\t\t\t\t\t\tctx.fillRect(0, 0, 96, 50);\r\n\r\n\t\t\t\t\t\tctx.fillStyle = \"black\";\r\n\t\t\t\t\t\tctx.fillText(\"map origin\", 5, 14, 96);\r\n\r\n\t\t\t\t\t\tctx.fillText(\"view-x: \" + $gv.m_viewRect.x.toFixed(0), 5, 30, 96);\r\n\r\n\t\t\t\t\t\tctx.fillText(\"view-y: \" + $gv.m_viewRect.y.toFixed(0), 5, 46, 96);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tscene_map.controller.render(engine);\r\n\t\t\t\t\r\n\t\t\t\tengine.loadIdentity();\r\n\t\t\t\t\r\n\t\t\t\tif ($gv.m_display_debug_info) {\r\n\t\t\t\t\tthis._render_debug_info();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tengine.endScene();\r\n\t}\r\n\t_render_map_loading() {\r\n\t\tconst ctx = engine.ctx;\r\n\t\tconst screen_width = engine.screen_size.x;\r\n\t\tconst screen_height = engine.screen_size.y;\r\n\t\tconst scr_hw = screen_width * 0.5;\r\n\t\tconst scr_hh = screen_height * 0.5;\r\n\t\t\r\n\t\tctx.font = \"2em 微軟正黑體\";\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"center\";\r\n\t\t\r\n\t\tctx.fillStyle = \"white\";\r\n\t\tctx.fillText(\"loading...\", scr_hw, scr_hh);\r\n\t\t\r\n\t\tctx.strokeStyle = \"black\";\r\n\t\tctx.fillText(\"loading...\", scr_hw, scr_hh);\r\n\t}\r\n\r\n\t_render_debug_info() {\r\n\t\tif (!(scene_map.controller && scene_map.controller.player)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = engine.ctx;\r\n\r\n\t\tconst ta = ctx.textAlign, tb = ctx.textBaseline, lw = ctx.lineWidth;\r\n\t\tctx.textBaseline = \"top\";\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tlet x = 400, y = 5;\r\n\t\tfor (let line of window._SCREEN_PRINTLN) {\r\n\t\t\tconst val = line.getValue();\r\n\t\t\tconst text = line.getText();\r\n\r\n\t\t\tctx.fillStyle = \"#FFF\";\r\n\t\t\t{\r\n\t\t\t\tctx.textAlign = \"right\";\r\n\t\t\t\tctx.strokeText(text, x - 2, y);\r\n\t\t\t\tctx.fillText(text, x - 2, y);\r\n\r\n\t\t\t\tctx.textAlign = \"center\";\r\n\t\t\t\tctx.strokeText(\":\", x, y);\r\n\t\t\t\tctx.fillText(\":\", x, y);\r\n\r\n\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\tctx.strokeText(val, x + 2, y);\r\n\t\t\t\tctx.fillText(val, x + 2, y);\r\n\t\t\t}\r\n\r\n\t\t\tif (\"_val\" in line) {\r\n\t\t\t\tlet _val;\r\n\t\t\t\tif (line._val != val) {\r\n\t\t\t\t\t_val = line._val;//display new value\r\n\t\t\t\t\tline.__val = line._val;\r\n\t\t\t\t\tline._val = val;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t_val = line.__val;//display old value\r\n\t\t\t\t}\r\n\t\t\t\tif (_val != val) {\r\n\t\t\t\t\tctx.fillStyle = \"#0FF\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.fillStyle = \"#FFF\";\r\n\t\t\t\t{\r\n\t\t\t\t\tctx.textAlign = \"right\";\r\n\t\t\t\t\tctx.strokeText(text, x - 2 + 200, y);\r\n\t\t\t\t\tctx.fillText(text, x - 2 + 200, y);\r\n\r\n\t\t\t\t\tctx.textAlign = \"center\";\r\n\t\t\t\t\tctx.strokeText(\":\", x + 200, y);\r\n\t\t\t\t\tctx.fillText(\":\", x + 200, y);\r\n\r\n\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\tctx.strokeText(_val, x + 2 + 200, y);\r\n\t\t\t\t\tctx.fillText(_val, x + 2 + 200, y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tline.__val = val;\r\n\t\t\t\tline._val = val;\r\n\t\t\t}\r\n\r\n\t\t\ty += 16;\r\n\t\t}\r\n\t\tctx.textAlign = ta;\r\n\t\tctx.textBaseline = tb;\r\n\t\tctx.lineWidth = lw;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {DOMHighResTimeStamp} timeStamp\r\n\t */\r\n\t_loop(timeStamp) {\r\n\t\tconst scene_map = this.scene_map;\r\n\t\tlet stamp = timeStamp - this.timer;\r\n\t\t\r\n\t\tthis.timer = timeStamp;\r\n\r\n\t\tthis._requestNextFrame();\r\n\r\n\t\tthis._calcFPS(stamp);\r\n\t\r\n\t\tthis._updateScene(stamp);\r\n\r\n\t\tthis._renderScene();\r\n\t\t\r\n\t\tfor (let i in $gv.input_keyDown) {\r\n\t\t\tif ($gv.input_keyDown[i] > 0) {\r\n\t\t\t\t++$gv.input_keyDown[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i in $gv.input_keyUp) {\r\n\t\t\t$gv.input_keyUp[i] = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\tget chara() {\r\n\t\treturn window.chara;\r\n\t}\r\n\t//set chara(value) {\r\n\t//\twindow.chara = value;\r\n\t//}\r\n\r\n\tget charaList() {\r\n\t\treturn gApp.store.state.charaList;\r\n\t}\r\n\t\r\n\tget m_is_run() {\r\n\t\treturn window.m_is_run;\r\n\t}\r\n\tset m_is_run(value) {\r\n\t\twindow.m_is_run = value;\r\n\t}\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction _parseUrlParameter() {\r\n\tlet sPageURL = decodeURIComponent(window.location.search.substring(1));\r\n\tlet sURLVariables = sPageURL.split(\"&\");\r\n\tlet params = {};\r\n\r\n\tfor (let i = 0; i < sURLVariables.length; ++i) {\r\n\t\tlet sParameter = sURLVariables[i].split(\"=\");\r\n\r\n\t\tparams[sParameter[0]] = sParameter[1];\r\n\t}\r\n\r\n\treturn params;\r\n};\r\n\r\n"],"sourceRoot":""}