{"version":3,"sources":["webpack:///./src/game/init.js","webpack:///./src/Client/Client.js","webpack:///./src/game/GameState.js","webpack:///./src/game/Cursor.js","webpack:///./src/game/main.js"],"names":["GlobalVar","[object Object]","isMobile","test","navigator","userAgent","this","is_mobile","m_is_run","MAX_FPS","FRAME_ELAPSED","CANVAS_SCALE","m_editor_mode","m_display_foothold","m_display_physics_debug","m_display_debug_info","m_debugDraw","_Physics_DebugDraw_js__WEBPACK_IMPORTED_MODULE_4__","m_display_selected_object","m_selected_object","m_hover_object","m_viewRect","_math_js__WEBPACK_IMPORTED_MODULE_3__","m_is_rendering_map","m_display_back","m_display_front","m_display_mapobj","m_display_maptile","m_display_particle_system","m_display_skeletal_anim","m_display_portal","m_display_name_label","m_display_player","m_display_other_player","m_display_life","m_display_npc","m_display_mob","NameLabel_default_style","ChatBalloon_default_style","ChatBalloon_display_duration","input_keyDown","input_keyUp","mouse_move","mouse_x","mouse_y","mouse_dl","mouse_ul","mouse_dm","mouse_um","mouse_dr","mouse_ur","SceneObjectMgr","layeredObjects","i","lo","Object","defineProperty","enumerable","writable","value","Update","stamp","layer","length","uid","update","RenderLayer","engine","render","addToScene","obj","Number","isSafeInteger","TypeError","$layer","$objectid","destroy","$gv","window","Client_Client","socket","charaMap","charaId","cbfunc","chara","call","eventName","listener","on","args","id","server_href","Promise","resolve","reject","lib_default","$io","emit","$emit","data","apply","error","disconnect","$scene_map","scene_map","account","password","console","info","world","channel","charID","Packet","ackPacket","charaData","remoteCharacters","load","mapId","task1","_CreateMyCharacter","task2","onEnterRemoteChara","all","ex","alert","src","store","dispatch","emplace","code","equips_code","_$data","guildId","partyId","packet","tasks","map","remote_chara","then","controller","err","message","fnAck","chatCtrl","style","enter","text","app","vue","$refs","statusBar","pushChatHistory","type","$move","$anim","invokeSkill","skillId","renderer","use","itemId","bind","_addRemoteCharaPacketListener","onRemoteChat","onRemoteCharaMove","onRemoteCharaAnim","onRemoteCharaSkill","onRemoteAvatarModified","login","selectWorld","selectChara","GameState_GameStateManager","Error","scene","state","url","map_id","_stringify","history","pushState","_window_title","document","title","chara_code","_old_c","_parse","CursorAnimationFrame","x","y","delay","CursorAnimationData","frames","duration","raw","$get","addFrame","origin","frame","push","join","Cursor","selector","keyword","Math","trunc","random","toString","cssText","tt","createElement","t","createTextNode","appendChild","head","SceneRenderer","addLayerBack","SCREEN_PRINTLN","getText","getValue","arguments","_SCREEN_PRINTLN","addEventListener","e","PopState","addFrameFromUrl","createToCSS","createCursor_clickable","onkeydown","target","body","k","key","$","click","onkeyup","get","attr","set","onmousedown","classList","contains","which","pageX","pageY","onmouseup","onmousemove","main_Game","timer","timer_","_dTimer","fps_arr","frame_s_arr","Map","onload","PushState","_loop","getElementById","onchange","checked","requestAnimationFrame","innerHTML","_$moveViewportSpeed","inBound","speed","left","top","right","bottom","mapBound","width","height","server","client","connect","log","warn","_$start_offline","$test","params","sURLVariables","decodeURIComponent","location","search","substring","split","sParameter","_parseUrlParameter","DEFAULT_MAP_ID","_isMapReady","isLoaded","__forceUpdate","waitLoaded","__require_update","_waitFrameTexturesLoaded","IRenderer","waitAllLoaded","avg","reduce","a","b","FPS","toFixed","frameCount","isFinite","setTimeout","elem","Image","Engine","_canvas","toDataURL","ctx","clearRect","charaList","Skill","ch","$recMove","DamageNumber","_render_map_ready","_render_map_loading","beginScene","loadIdentity","clearDrawScreen","size","screen_size","setCenter","player","pos","getPosition","px","py","moveViewport","beginRender","renderBackground","layeredObject","renderLayeredObject","renderLayeredTile","applyCamera","chara_index","renderLife","renderLayer","endRender","layers","Render","_$drawName","_$drawChatBalloon","renderPortal","renderFrontground","renderParticle","beginPath","fillStyle","fillRect","fillText","_render_debug_info","endScene","scr_hw","scr_hh","font","textAlign","textBaseline","strokeStyle","ta","tb","lw","lineWidth","line","val","strokeText","_val","__val","timeStamp","_requestNextFrame","_calcFPS","_updateScene","_renderScene"],"mappings":"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","file":"19.js","sourcesContent":["﻿\r\n\r\nimport { } from '../../public/javascripts/resource.js';\r\n\r\nimport { IGraph } from \"./IRenderer.js\";\r\nimport { engine } from './Engine.js';\r\nimport { Vec2, Rectangle } from './math.js';\r\nimport DebugDraw from './Physics/DebugDraw.js';\r\n\r\nexport class GlobalVar {\r\n\tconstructor() {\r\n\t\tlet isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\t\tif (isMobile) {\r\n\t\t\tthis.is_mobile = true;\r\n\t\t}\r\n\r\n\t\tif (isMobile) {\r\n\t\t\tthis.m_is_run = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.m_is_run = true;\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tthis.MAX_FPS = 60;\r\n\t\t\tthis.FRAME_ELAPSED = 1000 / 60;\r\n\t\t\tthis.CANVAS_SCALE = 32;\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\t\tthis.m_editor_mode = false;\r\n\r\n\t\t\t\tthis.m_display_foothold = false;\r\n\r\n\t\t\t\tthis.m_display_physics_debug = false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.m_editor_mode = false;\r\n\r\n\t\t\t\tthis.m_display_foothold = false;\r\n\r\n\t\t\t\tthis.m_display_physics_debug = true;\r\n\t\t\t}\r\n\t\t\tthis.m_display_debug_info = false;\r\n\r\n\t\t\tthis.m_debugDraw = new DebugDraw(/*renderer_ctx2d*/);\r\n\r\n\t\t\tthis.m_display_selected_object = false;\r\n\t\t\tthis.m_selected_object = null;\r\n\t\t\tthis.m_hover_object = null;\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tthis.m_viewRect = new Rectangle(0, -768 / 2, 1366, 768);\r\n\r\n\t\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\t\tthis.m_is_rendering_map = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.m_is_rendering_map = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.m_display_back = true;\r\n\t\t\tthis.m_display_front = true;\r\n\t\t\tthis.m_display_mapobj = true;\r\n\t\t\tthis.m_display_maptile = true;\r\n\t\t\tthis.m_display_particle_system = true;\r\n\r\n\t\t\tthis.m_display_skeletal_anim = true;\r\n\r\n\t\t\tthis.m_display_portal = true;\r\n\r\n\t\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\t\tthis.m_display_name_label = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.m_display_name_label = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.m_display_player = true;\r\n\t\t\tthis.m_display_other_player = true;\r\n\t\t\tthis.m_display_life = true;\r\n\t\t\tthis.m_display_npc = true;//??\r\n\t\t\tthis.m_display_mob = true;//??\r\n\r\n\t\t\t//this.m_display_skill;\r\n\t\t\t//this.m_display_mob_skill;\r\n\t\t\t//this.m_display_mob_effect = true;\r\n\t\t\t//this.m_display_mob_etc = true;\r\n\t\t}\r\n\t\t\r\n\t\t{\r\n\t\t\tthis.NameLabel_default_style = \"214\";\r\n\r\n\t\t\tthis.ChatBalloon_default_style = 212;\r\n\t\t\tthis.ChatBalloon_display_duration = 5000;\r\n\t\t}\r\n\t\t\r\n\t\t{\r\n\t\t\tthis.input_keyDown = {};\r\n\t\t\tthis.input_keyUp = {};\r\n\r\n\t\t\tthis.mouse_move = 0;\r\n\t\t\tthis.mouse_x = 0;\r\n\t\t\tthis.mouse_y = 0;\r\n\t\t\tthis.mouse_dl = 0;\r\n\t\t\tthis.mouse_ul = 0;\r\n\t\t\tthis.mouse_dm = 0;\r\n\t\t\tthis.mouse_um = 0;\r\n\t\t\tthis.mouse_dr = 0;\r\n\t\t\tthis.mouse_ur = 0;\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tlet SceneObjectMgr = {};\r\n\r\n\t\t\tSceneObjectMgr.layeredObjects = [];\r\n\t\t\tfor (let i = 0; i < 12; ++i) {\r\n\t\t\t\tlet lo = SceneObjectMgr.layeredObjects[i] = {};\r\n\t\t\t\tObject.defineProperty(lo, \"length\", {\r\n\t\t\t\t\tenumerable: false,\r\n\t\t\t\t\twritable: true,\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tSceneObjectMgr.Update = function (stamp) {\r\n\t\t\t\tfor (let layer = 0; layer < SceneObjectMgr.layeredObjects.length; ++layer) {\r\n\t\t\t\t\tconst lo = SceneObjectMgr.layeredObjects[layer];\r\n\t\t\t\t\tfor (let uid in lo) {\r\n\t\t\t\t\t\tlet obj = lo[uid];\r\n\t\t\t\t\t\tobj.update(stamp);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tSceneObjectMgr.RenderLayer = function (engine, layer) {\r\n\t\t\t\tconst lo = SceneObjectMgr.layeredObjects[layer];\r\n\t\t\t\tfor (let uid in lo) {\r\n\t\t\t\t\tlet obj = lo[uid];\r\n\t\t\t\t\tobj.render(engine);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tSceneObjectMgr.addToScene = function (layer, obj) {\r\n\t\t\t\tif (Number.isSafeInteger(layer) && layer in SceneObjectMgr.layeredObjects) {\r\n\t\t\t\t\tconst lo = SceneObjectMgr.layeredObjects[layer];\r\n\r\n\t\t\t\t\tobj.$layer = layer;\r\n\t\t\t\t\tobj.$objectid = lo.length;\r\n\r\n\t\t\t\t\tlo[obj.$objectid] = obj;\r\n\r\n\t\t\t\t\tlo.length++;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new TypeError(\"layer\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tSceneObjectMgr.destroy = function (obj) {\r\n\t\t\t\tconst layer = obj.$layer;\r\n\t\t\t\tconst uid = obj.$objectid;\r\n\t\t\t\tconst lo = SceneObjectMgr.layeredObjects[layer];\r\n\r\n\t\t\t\tobj.destroy();\r\n\r\n\t\t\t\tdelete lo[uid];\r\n\t\t\t}\r\n\r\n\t\t\tthis.SceneObjectMgr = SceneObjectMgr;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const $gv = new GlobalVar();\r\n\r\nwindow.$gv = $gv;\r\n","﻿\r\nimport io from \"socket.io-client\";\r\n\r\nimport { GameStateManager } from \"../game/GameState.js\";\r\n\r\nimport { SceneMap } from \"../game/Map.js\";\r\nimport { SceneCharacter, SceneRemoteCharacter } from \"../game/SceneCharacter.js\";\r\n\r\nimport { CharacterMoveElem } from \"../Client/PMovePath.js\";//debug\r\nimport { $RequestPacket_SelectChara, $ResponsePacket_SelectChara,\r\n\t\t $Packet_RemoteChat,\r\n\t\t $Packet_CharacterMove,\r\n\t\t} from \"../Common/Packet\";//debug\r\n\r\nimport { app as gApp } from \"../index.js\";//debug\r\n\r\nclass $Socket {\r\n\t/**\r\n\t * socket.emit(eventName[, ...args])\r\n\t * return server answer\r\n\t * @param {string} eventName\r\n\t * @param {any} data\r\n\t * @returns {Promise<any>}\r\n\t */\r\n\temit(eventName, data) {\r\n\t}\r\n\ton(eventName, callback) {\r\n\t}\r\n\tonce(eventName, data) {\r\n\t}\r\n}\r\n\r\nexport class Client {\r\n\tconstructor() {\r\n\t\t/** @type {$Socket} */\r\n\t\tthis.socket = null;\r\n\r\n\t\t/** @type {{[id:string]:SceneCharacter}} */\r\n\t\tthis.charaMap = {};\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} charaId\r\n\t * @param {function(SceneCharacter)} cbfunc\r\n\t */\r\n\t_findChara(charaId, cbfunc) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (typeof cbfunc != 'function') {\r\n\t\t\t\tconsole.error(new TypeError());\r\n\t\t\t}\r\n\t\t}\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tlet chara = this.charaMap[charaId];\r\n\r\n\t\tif (chara) {\r\n\t\t\tcbfunc.call(this, chara);\r\n\t\t}\r\n\t\t//else {\r\n\t\t//\talert(`chara['${charaId}'] not exist`);\r\n\t\t//}\r\n\t}\r\n\t/**\r\n\t * _addRemoteCharaPacketListener(eventName, fnAck(...))\r\n\t * @param {string} eventName\r\n\t * @param {function(...any, function(...any):void)} listener\r\n\t */\r\n\t_addRemoteCharaPacketListener(eventName, listener) {\r\n\t\tthis.socket.on(eventName, (...args) => {\r\n\t\t\t/** @type {string} */\r\n\t\t\tlet charaId = args[0].id;\r\n\r\n\t\t\t/** @type {SceneCharacter} */\r\n\t\t\tlet chara = this.charaMap[charaId];\r\n\r\n\t\t\tif (chara) {\r\n\t\t\t\tlistener.call(this, chara, ...args);//listener(chara, packet[, ...packet], fnAck)\r\n\t\t\t}\r\n\t\t\t//else {\r\n\t\t\t//\talert(`chara['${charaId}'] not exist`);\r\n\t\t\t//}\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @type {string} server_href\r\n\t * @returns {Promise<$Socket>}\r\n\t */\r\n\tasync connect(server_href) {\r\n\t\treturn await new Promise((resolve, reject) => {\r\n\t\t\tlet socket;\r\n\t\t\t\r\n\t\t\tsocket = io(server_href);\r\n\t\t\t\r\n\t\t\tsocket.on(\"connect\", () => {\r\n\t\t\t\tthis.socket = socket;\r\n\t\t\t\t\r\n\t\t\t\twindow.$io = this.socket;\r\n\t\t\t\t\r\n\t\t\t\tconst emit = socket.$emit = socket.emit;\r\n\t\t\t\t\r\n\t\t\t\tsocket.emit = function (eventName, data) {\r\n\t\t\t\t\t//let cbfunc = arguments[arguments.length - 1];\r\n\t\t\t\t\t//if (typeof cbfunc == 'function') {\r\n\t\t\t\t\t//\temit(eventName, data, cbfunc);\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\t\t\t\temit.call(socket, eventName, data, function (...args) {\r\n\t\t\t\t\t\t\t\tresolve.apply(this, args);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t//}\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tresolve(socket);\r\n\t\t\t});\r\n\t\t\tsocket.on(\"connect_error\", error => {\r\n\t\t\t\tsocket.disconnect();\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/** @type {SceneMap} */\r\n\tget $scene_map() {\r\n\t\treturn window.scene_map;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} account\r\n\t * @param {string} password\r\n\t */\r\n\tasync login(account, password) {\r\n\t\tlet result = await this.socket.emit(\"login\", {\r\n\t\t\taccount: \"aaa\",\r\n\t\t\tpassword: \"aaa\",\r\n\t\t});\r\n\t\tif (result) {\r\n\t\t\tconsole.info(\"login\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.info(\"login failed\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} world\r\n\t * @param {number} channel\r\n\t */\r\n\tasync selectWorld(world, channel) {\r\n\t\tlet result = await this.socket.emit(\"selectWorld\", {\r\n\t\t\tworld: 0,\r\n\t\t\tchannel: 0,\r\n\t\t});\r\n\t\tif (result) {\r\n\t\t\tconsole.info(\"selectWorld\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.info(\"selectWorld failed\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {any} charID\r\n\t */\r\n\tasync selectChara(charID) {\r\n\t\t/** @type {$RequestPacket_SelectChara} */\r\n\t\tlet req = new $RequestPacket_SelectChara();\r\n\t\t\r\n\t\t/** @type {$Packet_SelectChara} */\r\n\t\tlet ackPacket = await this.socket.emit(\"selectChara\", {\r\n\t\t\tid: 123,\r\n\t\t});\r\n\t\tconst charaData = ackPacket.charaData;\r\n\t\tconst remoteCharacters = ackPacket.remoteCharacters;\r\n\r\n\t\tif (charaData) {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.$scene_map.load(charaData.mapId);\r\n\t\t\t\t\r\n\t\t\t\tlet task1 = this._CreateMyCharacter(charaData);\r\n\t\t\t\tlet task2 = this.onEnterRemoteChara(remoteCharacters);\r\n\t\t\t\t\r\n\t\t\t\tawait Promise.all([task1, task2]);\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert(\"selectChara: chara not exist\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * online mode\r\n\t */\r\n\tasync _CreateMyCharacter(charaData) {\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tlet chara = await gApp.store.dispatch('_createChara', {\r\n\t\t\templace: {\r\n\t\t\t\tid: charaData.id,\r\n\t\t\t\tcode: charaData.equips_code,\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.chara = chara;\r\n\r\n\t\tchara._$data = chara._$data || {\r\n\t\t\tguildId: \"\",//guildId == guildName\r\n\t\t\tpartyId: \"\",//partyId == partyName\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * offline mode\r\n\t * @param {{id:string,equips_code:string}} charaData\r\n\t */\r\n\tstatic async _CreateMyCharacter(charaData) {//??\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tlet chara = await gApp.store.dispatch('_createChara', {\r\n\t\t\templace: {\r\n\t\t\t\tid: charaData.id,\r\n\t\t\t\tcode: charaData.equips_code,\r\n\t\t\t}\r\n\t\t});\r\n\t\tchara = chara;\r\n\r\n\t\tchara._$data = chara._$data || {\r\n\t\t\tguildId: \"\",//guildId == guildName\r\n\t\t\tpartyId: \"\",//partyId == partyName\r\n\t\t}\r\n\r\n\t\treturn chara;\r\n\t}\r\n\t/**\r\n\t * @param {$RemotePlayerData[]} packet - characters\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tonEnterRemoteChara(packet) {\r\n\t\tconst characters = packet;\r\n\r\n\t\tlet tasks = characters.map(charaData => {\r\n\t\t\treturn gApp.store.dispatch('_createChara', {\r\n\t\t\t\tremote_chara: {\r\n\t\t\t\t\tid: charaData.id,\r\n\t\t\t\t\tcode: charaData.equips_code,\r\n\t\t\t\t}\r\n\t\t\t}).then((...args) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst world = this.$scene_map.controller;\r\n\r\n\t\t\t\t\t/** @type {SceneRemoteCharacter} */\r\n\t\t\t\t\tlet chara = args[0];\r\n\r\n\t\t\t\t\tthis.charaMap[chara.id] = chara;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ex) {\r\n\t\t\t\t\talert(err.message);\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t * @param {$Packet_RemoteChat} packet\r\n\t * @param {function(...any):void} fnAck\r\n\t */\r\n\tonRemoteChat(chara, packet, fnAck) {\r\n\t\tchara.chatCtrl.style = packet.style;\r\n\t\tchara.chatCtrl.enter(packet.text);\r\n\t\tapp.vue.$refs.statusBar.pushChatHistory(packet.type, packet.style, packet.text);\r\n\t}\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t * @param {$Packet_CharacterMove} packet\r\n\t * @param {function(...any):void} fnAck\r\n\t */\r\n\tonRemoteCharaMove(chara, packet, fnAck) {\r\n\t\tchara.$move(packet);\r\n\t}\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t * @param {$Packet_RemoteCharaAnim} packet\r\n\t * @param {function(...any):void} fnAck\r\n\t */\r\n\tonRemoteCharaAnim(chara, packet, fnAck) {\r\n\t\tchara.$anim(packet);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t * @param {} packet\r\n\t * @param {function(...any):void} fnAck\r\n\t */\r\n\tonRemoteCharaSkill(chara, packet, fnAck) {\r\n\t\tchara.invokeSkill(packet.skillId);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t * @param {} packet\r\n\t * @param {function(...any):void} fnAck\r\n\t */\r\n\tonRemoteAvatarModified(chara, packet, fnAck) {\r\n\t\tchara.renderer.use(packet.itemId);\r\n\t}\r\n\r\n\tasync $test() {\r\n\t\tthis.socket.on(\"enterRemoteChara\", this.onEnterRemoteChara.bind(this));\r\n\t\tthis._addRemoteCharaPacketListener(\"remoteChat\", this.onRemoteChat);\r\n\t\tthis._addRemoteCharaPacketListener(\"remoteCharaMove\", this.onRemoteCharaMove);\r\n\t\tthis._addRemoteCharaPacketListener(\"remoteCharaAnim\", this.onRemoteCharaAnim);\r\n\t\tthis._addRemoteCharaPacketListener(\"remoteCharaSkill\", this.onRemoteCharaSkill);\r\n\t\tthis._addRemoteCharaPacketListener(\"remoteAvatarModified\", this.onRemoteAvatarModified);\r\n\r\n\t\tawait this.login(\"aaa\", \"aaa\");\r\n\r\n\t\tawait this.selectWorld(0, 0);\r\n\r\n\t\tawait this.selectChara(0);\r\n\t}\r\n}\r\n\r\n\r\n\r\n","﻿\r\nimport { SceneMap } from \"./Map.js\";\r\nimport { SceneCharacter } from \"./SceneCharacter.js\";\r\n\r\nimport { Client } from \"../Client/Client.js\";//debug\r\n\r\nimport { app as gApp } from \"../index.js\";//debug\r\n\r\n\r\nexport class GameState {\r\n\tconstructor(scene, chara) {\r\n\t\t/** @type {string} */\r\n\t\tthis.map_id = scene.map_id;\r\n\r\n\t\tif (chara.renderer) {\r\n\t\t\t/** @type {string} */\r\n\t\t\tthis.chara = chara.renderer._stringify(false);\r\n\t\t\turl += \"&chara=\" + this.chara;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class GameStateManager {\r\n\tconstructor() {\r\n\t\tthrow new Error(\"\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneMap} scene\r\n\t * @param {SceneCharacter} chara\r\n\t */\r\n\tstatic PushState(scene, chara) {\r\n\t\tif (!scene) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet state = {};\r\n\t\tlet url = \"?map=\" + scene.map_id;\r\n\r\n\t\tstate.map_id = scene.map_id;\r\n\r\n\t\tif (chara && chara.renderer) {\r\n\t\t\tstate.chara = chara.renderer._stringify(false);\r\n\t\t\turl += \"&chara=\" + state.chara;\r\n\t\t}\r\n\r\n\t\thistory.pushState(state, scene._window_title, url);\r\n\r\n\t\tdocument.title = scene._window_title;\r\n\t}\r\n\t/**\r\n\t * @param {string} map_id\r\n\t * @param {string} chara_code\r\n\t */\r\n\tstatic PushStateString(map_id, chara_code) {\r\n\t\tif (!map_id) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet state = {};\r\n\r\n\t\tlet url = \"?map=\" + map_id;\r\n\t\tstate.map_id = map_id;\r\n\r\n\t\tif (chara_code) {\r\n\t\t\tstate.chara = chara_code;\r\n\t\t\turl += \"&chara=\" + state.chara;\r\n\t\t}\r\n\r\n\t\thistory.pushState(state, scene._window_title, url);\r\n\r\n\t\tdocument.title = scene._window_title;\r\n\t}\r\n\tstatic async PopState(state) {\r\n\t\tif (!state) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (state.chara && window.chara && window.chara.renderer) {\r\n\t\t\tlet _old_c = window.chara.renderer._stringify(false);\r\n\t\t\tif (state.chara != _old_c) {\r\n\t\t\t\twindow.chara.renderer._parse(state.chara);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tClient._CreateMyCharacter({\r\n\t\t\t\tid: \"chara_1\",\r\n\t\t\t\tequips_code: state.chara,\r\n\t\t\t});\r\n\t\t\t//await gApp.store.dispatch('_createChara', {\r\n\t\t\t//\templace: {\r\n\t\t\t//\t\tid: \"chara_1\",\r\n\t\t\t//\t\tcode: state.chara,\r\n\t\t\t//\t}\r\n\t\t\t//});\r\n\t\t}\r\n\r\n\t\tif (scene_map && scene_map.map_id != state.map_id) {\r\n\t\t\tawait scene_map.load(state.map_id);\r\n\t\t}\r\n\t}\r\n}\r\n","\r\n\r\nexport class CursorPicker {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.type = null;\r\n\t\t/** @type {any} */\r\n\t\tthis.data = null;\r\n\t}\r\n}\r\n\r\n\r\nexport class CursorAnimationFrame {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.url = null;\r\n\t\t/** @type {number} */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} */\r\n\t\tthis.y = 0;\r\n\t\t/** @type {number} - time in millisecond */\r\n\t\tthis.delay = 0;\r\n\t}\r\n}\r\n\r\nexport class CursorAnimationData {\r\n\tconstructor() {\r\n\t\t/** @type {CursorAnimationFrame[]} */\r\n\t\tthis.frames = [];\r\n\r\n\t\t/** @type {number} - time in millisecond */\r\n\t\tthis.duration = 0;\r\n\t}\r\n\t/**\r\n\t * @param {string} url\r\n\t * @returns {Promise<number>} - index\r\n\t */\r\n\tasync addFrameFromUrl(url) {\r\n\t\tlet raw = await $get.data(url);\r\n\t\treturn this.addFrame(\"images\" + url, raw.origin.x, raw.origin.y, raw.delay);\r\n\t}\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} delay\r\n\t * @returns {number} - index\r\n\t */\r\n\taddFrame(url, x, y, delay) {\r\n\t\tif (!url) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tconst i = this.frames.length;\r\n\t\tlet frame = new CursorAnimationFrame();\r\n\r\n\t\tframe.url = url;\r\n\t\tframe.x = x | 0;\r\n\t\tframe.y = y | 0;\r\n\t\tframe.delay = delay | 0;\r\n\r\n\t\tthis.frames.push(frame);\r\n\r\n\t\tthis.duration += frame.delay; \r\n\r\n\t\treturn i;\r\n\t}\r\n\tasync load(url) {\r\n\t\tlet raw = await $get.data(url);\r\n\r\n\t\tfor (let i = 0, frame = raw[i]; frame; ++i, frame = raw[i]) {\r\n\t\t\tlet img = {};\r\n\r\n\t\t\tthis.addFrame(\r\n\t\t\t\t[\"images\", url, i].join(\"/\"),\r\n\t\t\t\tframe.origin.x,\r\n\t\t\t\tframe.origin.y,\r\n\t\t\t\tframe.delay\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class Cursor  {\r\n\tconstructor(/*raw, url*/) {\r\n\t\t///** @type {Animation} */\r\n\t\t//this.ani = null;\r\n\t}\r\n\t//async createAnimation(url) {\r\n\t//\tlet raw = await $get.data(url);\r\n\t//\tthis.ani = new Animation(raw, url);\r\n\t//\tawait this.ani.load();\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CursorAnimationData} data\r\n\t * @param {string} selector\r\n\t * @param {string} keyword\r\n\t */\r\n\tstatic createToCSS(data, selector, keyword) {\r\n\t\tconst id = \"Cursor\" + Math.trunc(Math.random() * 0xFFFFFFFF).toString(16);\r\n\r\n\t\tconst { frames, duration } = data;\r\n\r\n\t\tlet cssText = `${selector}:hover {\\n`;\r\n\r\n\t\tcssText += `cursor: url(${frames[0].url}) ${frames[0].x} ${frames[0].y}, ${keyword};\\n`;\r\n\r\n\t\tif (duration) {\r\n\t\t\tcssText += `animation-name: ${id}_keyframes;\\n`;\r\n\t\t\tcssText += `animation-duration: ${duration}ms;\\n`;\r\n\t\t\tcssText += `animation-iteration-count: infinite;\\n`;\r\n\t\t\tcssText += \"}\\n\";\r\n\r\n\t\t\tlet tt = 0;\r\n\t\t\t{\r\n\t\t\t\tcssText += `@keyframes ${id}_keyframes {\\n`;\r\n\r\n\t\t\t\tfor (let i = 0; i < frames.length; ++i) {\r\n\t\t\t\t\tconst frame = frames[i];\r\n\r\n\t\t\t\t\tlet start = Math.trunc((tt / duration) * 100);\r\n\r\n\t\t\t\t\tcssText += `${start}% { cursor: url(${frames[i].url}) ${frames[i].x} ${frames[i].y}, ${keyword}; }\\n`;\r\n\r\n\t\t\t\t\ttt += frame.delay;\r\n\t\t\t\t}\r\n\t\t\t\t//cssText += `100% { cursor: url(${frames[0].url}) ${frames[0].x} ${frames[0].y}; }\\n`;\r\n\r\n\t\t\t\tcssText += \"}\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcssText += \"}\";\r\n\t\t}\r\n\t\t\r\n\t\tvar x = document.createElement(\"STYLE\");\r\n\t\tvar t = document.createTextNode(cssText);\r\n\t\tx.id = id;\r\n\t\tx.appendChild(t);\r\n\t\tdocument.head.appendChild(x);\r\n\r\n\t\treturn x;\r\n\t}\r\n}\r\n","\r\nimport { } from './init.js';\r\nimport { Vec2, Rectangle } from './math.js';\r\nimport { IGraph, IRenderer } from './IRenderer.js';\r\nimport { engine, Graph } from './Engine.js';\r\nimport { Animation } from './Animation.js';\r\n\r\nimport { GameStateManager } from './GameState.js';\r\nimport { SceneMap } from './Map.js';\r\n//import { SceneCharacter } from './SceneCharacter.js';\r\n\r\nimport { EffectManager } from \"./Skill.js\";\r\nimport { } from \"./MobSkill/238.FairyDust.js\";\r\n\r\nimport { damageNumberLayer } from \"./Renderer/DamageNumber.js\";\r\nimport { sceneRenderer, SceneRenderer } from \"./Renderer/SceneRenderer.js\";\r\n\r\nimport { Cursor, CursorAnimationData } from \"./Cursor.js\";\r\n\r\nimport { Client } from \"../Client/Client.js\";\r\n\r\n\r\nimport { SceneCharacter } from \"./SceneCharacter.js\";//debug\r\nimport { app as gApp } from \"../index.js\";//debug\r\n\r\n\r\nsceneRenderer.addLayerBack(12);\r\n\r\nwindow.SCREEN_PRINTLN = function (getText, getValue) {\r\n\tif (arguments.length == 2) {\r\n\t\twindow._SCREEN_PRINTLN.push({ getText, getValue });\r\n\t}\r\n\telse if (arguments.length == 1) {\r\n\t\twindow._SCREEN_PRINTLN.push(arguments[0]);\r\n\t}\r\n}\r\nwindow._SCREEN_PRINTLN = [];\r\n\r\nvar animationRequestID = null;\r\n\r\nwindow.addEventListener(\"popstate\", function (e) {\r\n\tGameStateManager.PopState(e.state);\r\n});\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction createCursor_clickable() {\r\n\tlet data = new CursorAnimationData();\r\n\r\n\tlet task1 = data.addFrameFromUrl(\"/UI/Basic/Cursor/0/0\").then(function (i) {\r\n\t\tdata.frames[i].delay = 200;\r\n\t});\r\n\r\n\tlet task2 = data.addFrameFromUrl(\"/UI/Basic/Cursor/12/0\").then(function (i) {\r\n\t\tdata.frames[i].delay = 200;\r\n\t});\r\n\r\n\treturn Promise.all([task1, task2]).then(function () {\r\n\t\tdata.duration = 400;\r\n\r\n\t\tCursor.createToCSS(data, \".ui-clickable\", \"pointer\");\r\n\t});\r\n}\r\n\r\ncreateCursor_clickable();\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * @param {KeyboardEvent} e\r\n */\r\nwindow.onkeydown = function (e) {\r\n\tif (e.target != document.body) {\r\n\t\treturn;\r\n\t}\r\n\tlet k = e.key;\r\n\r\n\tif (k != null && !$gv.input_keyDown[k]) {\r\n\t\t$gv.input_keyDown[k] != null ? (++$gv.input_keyDown[k]) : ($gv.input_keyDown[k] = 1);\r\n\t}\r\n\r\n\tif (e.code == 'Space') {\r\n\t\t$(\"#m_is_run\").click();\r\n\t}\r\n\tif (e.code == \"F2\") {\r\n\t\t$gv.m_editor_mode = !$gv.m_editor_mode;\r\n\t}\r\n}\r\n\r\nwindow.onkeyup = function (e) {\r\n\tif (e.target != document.body) {\r\n\t\treturn;\r\n\t}\r\n\tlet k = e.key;\r\n\r\n\tif (k != null && $gv.input_keyDown[k]) {\r\n\t\t$gv.input_keyDown[k] = 0;\r\n\t\t$gv.input_keyUp[k] = 1;\r\n\t}\r\n}\r\n\r\nObject.defineProperty(window, \"$m_is_run\", {\r\n\tget: function () {\r\n\t\treturn $(\"#m_is_run\").attr(\"checked\");\r\n\t}, \r\n\tset: function (value) {\r\n\t\t$(\"#m_is_run\").attr(\"checked\", !value);\r\n\t\t$(\"#m_is_run\").click();\r\n\t}\r\n});\r\n\r\n/**\r\n * @param {MouseEvent} e\r\n */\r\nwindow.onmousedown = function (e) {\r\n\tif ($gv.m_editor_mode) {\r\n\t\tif (!e.target.classList.contains(\"Editor\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tif (e.which == 1) {\r\n\t\t$gv.mouse_dl = 1;\r\n\t\t$gv.mouse_ul = 0;\r\n\t}\r\n\telse if (e.which == 2) {\r\n\t\t$gv.mouse_dm = 1;\r\n\t\t$gv.mouse_um = 0;\r\n\t}\r\n\telse if (e.which == 3) {\r\n\t\t$gv.mouse_dr = 1;\r\n\t\t$gv.mouse_ur = 0;\r\n\t}\r\n\t$gv.mouse_x = e.pageX;\r\n\t$gv.mouse_y = e.pageY;\r\n}\r\n\r\n/**\r\n * @param {MouseEvent} e\r\n */\r\nwindow.onmouseup = function (e) {\r\n\tif ($gv.m_editor_mode) {\r\n\t\tif (!e.target.classList.contains(\"Editor\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tif (e.which == 1) {\r\n\t\t$gv.mouse_dl = 0;\r\n\t\t$gv.mouse_ul = 1;\r\n\t}\r\n\telse if (e.which == 2) {\r\n\t\t$gv.mouse_dm = 0;\r\n\t\t$gv.mouse_um = 1;\r\n\t}\r\n\telse if (e.which == 3) {\r\n\t\t$gv.mouse_dr = 0;\r\n\t\t$gv.mouse_ur = 1;\r\n\t}\r\n\t$gv.mouse_x = e.pageX;\r\n\t$gv.mouse_y = e.pageY;\r\n}\r\n\r\n/**\r\n * @param {MouseEvent} e\r\n */\r\nwindow.onmousemove = function (e) {\r\n\tif ($gv.m_editor_mode) {\r\n\t\tif (!e.target.classList.contains(\"Editor\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t$gv.mouse_x = e.pageX;\r\n\t$gv.mouse_y = e.pageY;\r\n\t$gv.mouse_move = 1;\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport class Game {\r\n\tconstructor() {\r\n\t\tthis.timer = 0;\r\n\t\tthis.timer_ = 0;\r\n\t\tthis._dTimer = 0;\r\n\t\tthis.fps_arr = [];\r\n\t\tthis.frame_s_arr = [];\r\n\t\t\r\n\t\t//this.chara = null;\r\n\t\t\r\n\t\t/** @type {SceneMap} */\r\n\t\tthis.scene_map = new SceneMap();\r\n\r\n\t\twindow.scene_map = this.scene_map;\r\n\t\t$gv.scene_map = window;\r\n\r\n\t\tscene_map.onload = function () {\r\n\t\t\tGameStateManager.PushState(this, window.chara);\r\n\t\t}\r\n\t\t\r\n\t\tthis._loop = this._loop.bind(this);\r\n\t\t\r\n\t\tdocument.getElementById(\"m_is_run\").onchange = (function (e) {\r\n\t\t\tthis.m_is_run = e.target.checked ? true : false;\r\n\t\t\tif (this.m_is_run) {\r\n\t\t\t\tanimationRequestID = requestAnimationFrame(this._loop);\r\n\t\t\t\tdocument.getElementById(\"Screenshot\").innerHTML = \"\";\r\n\t\t\t}\r\n\t\t}).bind(this);\r\n\r\n\t\tthis._$moveViewportSpeed = 10;//debug\r\n\t}\r\n\t\r\n\tmoveViewport(inBound) {\r\n\t\tconst scene_map = this.scene_map;\r\n\r\n\t\tconst speed = $gv.input_keyDown['z'] ? (this._$moveViewportSpeed * 10) : this._$moveViewportSpeed;\r\n\r\n\t\t//$gv.m_viewRect = scene_map.viewArea(new Vec2($gv.m_viewRect.left, $gv.m_viewRect.top));\r\n\r\n\t\tif ($gv.input_keyDown['ArrowLeft'] > 0) {\r\n\t\t\t$gv.m_viewRect.left -= speed;\r\n\t\t}\r\n\t\tif ($gv.input_keyDown['ArrowRight'] > 0) {\r\n\t\t\t$gv.m_viewRect.left += speed;\r\n\t\t}\r\n\t\tif ($gv.input_keyDown['ArrowUp'] > 0) {\r\n\t\t\t$gv.m_viewRect.top -= speed;\r\n\t\t}\r\n\t\tif ($gv.input_keyDown['ArrowDown'] > 0) {\r\n\t\t\t$gv.m_viewRect.top += speed;\r\n\t\t}\r\n\r\n\t\tlet { left, top, right, bottom } = scene_map.mapBound;\r\n\r\n\t\tif (inBound) {\r\n\t\t\tif ($gv.m_viewRect.left < left) {\r\n\t\t\t\t$gv.m_viewRect.left = left;\r\n\t\t\t}\r\n\t\t\tif ($gv.m_viewRect.right > right) {\r\n\t\t\t\t$gv.m_viewRect.left = right - $gv.m_viewRect.width;\r\n\t\t\t}\r\n\t\t\tif ($gv.m_viewRect.top < top) {\r\n\t\t\t\t$gv.m_viewRect.top = top;\r\n\t\t\t}\r\n\t\t\tif ($gv.m_viewRect.bottom > bottom) {\r\n\t\t\t\t$gv.m_viewRect.top = bottom - $gv.m_viewRect.height;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} server\r\n\t */\r\n\tasync _$startClient(server) {\r\n\t\tif (scene_map) {\r\n\t\t\tlet client = new Client();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tawait client.connect(server);\r\n\t\t\t\tconsole.log(\"start client\");\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\t\t\t\tconsole.warn(err);\r\n\t\t\t\tconsole.log(\"start offline\");\r\n\t\t\t\tthis._$start_offline();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgApp.client = client;\r\n\t\t\tclient.$test();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\t_$start_offline() {\r\n\t\tlet params = _parseUrlParameter();\r\n\t\tlet map_id;\r\n\t\r\n\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\tmap_id = params[\"map\"] || window.DEFAULT_MAP_ID;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmap_id = params[\"map\"] || \"000000000\";//450003000\r\n\t\t}\r\n\t\r\n\t\tlet chara_code = params[\"chara\"] || \"c,00002012,00012012,00026509|00026509,00034873|00034873,01051429,01072392\";\r\n\t\r\n\t\tGameStateManager.PopState({\r\n\t\t\tmap_id: map_id,\r\n\t\t\tchara: chara_code,\r\n\t\t});\r\n\t}\r\n\r\n\t/** @type {boolean} */\r\n\tget _isMapReady() {\r\n\t\tconst scene_map = this.scene_map;\r\n\t\treturn scene_map && scene_map.isLoaded();\r\n\t}\r\n\t\r\n\tasync run() {\r\n\t\tconsole.log(\"begin render\");\r\n\t\tthis._loop(0);//start render\r\n\t}\r\n\t\r\n\tasync forceUpdateScreen() {\r\n\t\tconst chara = this.chara;\r\n\t\t\r\n\t\tchara.renderer.__forceUpdate(0);\r\n\t\t\r\n\t\tif (this.m_is_run) {\r\n\t\t\tawait chara.renderer.waitLoaded();\r\n\t\t\tchara.renderer.__require_update = true;//update once\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tawait chara.renderer.waitLoaded();\r\n\t\tawait chara.renderer._waitFrameTexturesLoaded();\r\n\t\tawait IGraph.waitAllLoaded();\r\n\t\t\r\n\t\tdocument.getElementById(\"Screenshot\").innerHTML = \"\";\r\n\t\t\r\n\t\tchara.renderer.__require_update = true;//update once\r\n\t\t\r\n\t\tthis._loop(0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\t_calcFPS(stamp) {\r\n\t\ttry {\r\n\t\t\tif ((this.timer - this.timer_) >= 1000) {\r\n\t\t\t\tif (this.fps_arr.length) {\r\n\t\t\t\t\tlet sum = this.fps_arr.reduce(function (a, b) { return a + b; });\r\n\t\t\t\t\tlet avg = sum / this.fps_arr.length;\r\n\t\t\t\t\t\r\n\t\t\t\t\t$gv.FPS = avg;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdocument.getElementById(\"FPS\").innerHTML = avg.toFixed(2);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.frame_s_arr.length) {\r\n\t\t\t\t\tlet sum = this.frame_s_arr.reduce(function (a, b) { return a + b; });\r\n\t\t\t\t\tlet avg = sum / this.frame_s_arr.length;\r\n\t\t\t\t\t\r\n\t\t\t\t\t$gv.frameCount = avg;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdocument.getElementById(\"frame\").innerHTML = avg.toFixed(2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.frame_s_arr = [];\r\n\t\t\t\tthis.fps_arr = [];\r\n\r\n\t\t\t\tthis.timer_ = this.timer;\r\n\t\t\t}\r\n\t\t\telse if (stamp > 0 && Number.isFinite(stamp)) {\r\n\t\t\t\tthis.fps_arr.push(1000 / stamp);\r\n\t\t\t\tthis.frame_s_arr.push(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t\tdocument.getElementById(\"FPS\").innerHTML = \"-\";\r\n\t\t\tdocument.getElementById(\"frame\").innerHTML = \"-\";\r\n\t\t\tthis.fps_arr = [];\r\n\t\t\tthis.frame_s_arr = [];\r\n\t\t}\r\n\t}\r\n\r\n\t_requestNextFrame() {\r\n\t\tif (this.m_is_run) {\r\n\t\t\tanimationRequestID = requestAnimationFrame(this._loop);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//async\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tlet elem = new Image();\r\n\t\t\t\telem.src = engine._canvas.toDataURL();\r\n\t\t\t\tengine.ctx.clearRect(0, 0, engine.ctx.width, engine.ctx.height);\r\n\t\t\t\tdocument.getElementById(\"Screenshot\").appendChild(elem);\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\t_updateScene(stamp) {\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tconst chara = this.chara;\r\n\r\n\t\t/** @type {SceneCharacter[]} */\r\n\t\tconst charaList = this.charaList;\r\n\r\n\t\t{\r\n\t\t\tif (this._isMapReady) {\r\n\t\t\t\tscene_map.update(stamp);//include world.update\r\n\t\t\t}\r\n\r\n\t\t\t// before world.update ??\r\n\t\t\tfor (let i = 0; i < charaList.length; ++i) {\r\n\t\t\t\tcharaList[i].update(stamp);\r\n\t\t\t}\r\n\r\n\t\t\t$gv.SceneObjectMgr.Update(stamp);\r\n\r\n\t\t\tEffectManager.Update(stamp);\r\n\t\t}\r\n\t\t{\r\n\t\t\tconst client = gApp.client;//not offline character\r\n\r\n\t\t\tif (client && client.chara) {\r\n\t\t\t\t/** @type {SceneCharacter} */\r\n\t\t\t\tconst ch = client.chara;\r\n\t\t\t\t\r\n\t\t\t\tch.$emit(window.$io);\r\n\r\n\t\t\t\tch.$recMove();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsceneRenderer.update(stamp);\r\n\t\t\r\n\t\tdamageNumberLayer.update(stamp);\r\n\t}\r\n\t\r\n\t_renderScene() {\r\n\t\tif (this._isMapReady) {\r\n\t\t\tthis._render_map_ready();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._render_map_loading();\r\n\t\t}\r\n\t}\r\n\t_render_map_ready() {\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tconst chara = this.chara;\r\n\r\n\t\t/** @type {SceneCharacter[]} */\r\n\t\tconst charaList = this.charaList;\r\n\t\t\r\n\t\tengine.beginScene();\r\n\t\t{\r\n\t\t\tengine.loadIdentity();\r\n\t\t\tengine.clearDrawScreen();\r\n\t\t\t\r\n\t\t\t$gv.m_viewRect.size = engine.screen_size;\r\n\t\t\tif (!$gv.m_editor_mode) {\r\n\t\t\t\tif (chara && chara.renderer) {\r\n\t\t\t\t\t$gv.m_viewRect.setCenter(chara.renderer.x, chara.renderer.y);\r\n\t\t\t\t}\r\n\t\t\t\telse if (scene_map.controller.player) {\r\n\t\t\t\t\tconst pos = scene_map.controller.player.getPosition();\r\n\t\t\t\t\tconst px = Math.trunc(pos.x * $gv.CANVAS_SCALE + 0.5);\r\n\t\t\t\t\tconst py = Math.trunc(pos.y * $gv.CANVAS_SCALE + 0.5);\r\n\t\t\t\t\t$gv.m_viewRect.setCenter(px, py);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($gv.m_editor_mode) {\r\n\t\t\t\tthis.moveViewport(false);\r\n\t\t\t}\r\n\t\t\tif ($gv.m_is_rendering_map) {\r\n\t\t\t\tscene_map.beginRender(engine);\r\n\t\t\t\t{\r\n\t\t\t\t\tscene_map.renderBackground(engine);\r\n\t\t\t\t\t//if ($gv.m_display_life && scene_map._raw.info.mirror_Bottom) {\r\n\t\t\t\t\t//\tengine.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\t\t\t//\tengine.ctx.translate(Math.trunc(-$gv.m_viewRect.x), Math.trunc(-$gv.m_viewRect.y));\r\n\t\t\t\t\t//\tengine.ctx.scale(1, -1);\r\n\t\t\t\t\t//\tfor (let i = 0; i < scene_map.layeredObject.length; ++i) {\r\n\t\t\t\t\t//\t\tscene_map.renderLife(engine, i);\r\n\t\t\t\t\t//\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t\tfor (let i = 0; i < scene_map.layeredObject.length; ++i) {\r\n\t\t\t\t\t\tscene_map.renderLayeredObject(engine, i);\r\n\t\t\t\t\t\tscene_map.renderLayeredTile(engine, i);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif ($gv.m_display_other_player) {\r\n\t\t\t\t\t\t\t\tfor (let chara_index = 0; chara_index < charaList.length; ++chara_index) {\r\n\t\t\t\t\t\t\t\t\tif (charaList[chara_index] == chara) {\r\n\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (charaList[chara_index].$layer == i) {\r\n\t\t\t\t\t\t\t\t\t\tcharaList[chara_index].render(engine);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tscene_map.renderLife(engine, i);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif ($gv.m_display_player && chara) {\r\n\t\t\t\t\t\t\t\tif ((chara.$layer == null || chara.$layer == i) && chara.renderer) {\r\n\t\t\t\t\t\t\t\t\tchara.render(engine);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t$gv.SceneObjectMgr.RenderLayer(engine, i);\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tsceneRenderer.renderLayer(engine, i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor (let i = scene_map.layeredObject.length; i < 12; ++i) {\r\n\t\t\t\t\t\t\t$gv.SceneObjectMgr.RenderLayer(engine, i);\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tsceneRenderer.renderLayer(engine, i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tscene_map.endRender(engine);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: layer\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < sceneRenderer.layers.length; ++i) {\r\n\t\t\t\t\tsceneRenderer.renderLayer(engine, i);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif ($gv.m_display_other_player || $gv.m_display_player) {\r\n\t\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < charaList.length; ++i) {\r\n\t\t\t\t\t\tif (charaList[i] != chara && $gv.m_display_other_player) {\r\n\t\t\t\t\t\t\tcharaList[i].render(engine);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($gv.m_display_player && chara) {\r\n\t\t\t\t\t\tchara.render(engine);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tEffectManager.Render(engine);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdamageNumberLayer.render(engine);\r\n\r\n\t\t\tfor (let i = 0; i < charaList.length; ++i) {\r\n\t\t\t\tcharaList[i]._$drawName(engine);\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < charaList.length; ++i) {\r\n\t\t\t\tcharaList[i]._$drawChatBalloon(engine);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ($gv.m_is_rendering_map) {\r\n\t\t\t\tscene_map.beginRender(engine);\r\n\t\t\t\t{\r\n\t\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tscene_map.renderPortal(engine);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tscene_map.renderFrontground(engine);\r\n\t\t\t\t}\r\n\t\t\t\tscene_map.endRender(engine);\r\n\t\t\t\t\r\n\t\t\t\tscene_map.renderParticle(engine);\r\n\r\n\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t{\r\n\t\t\t\t\tEffectManager.Render(engine);\r\n\t\t\t\t}\r\n\t\t\t\tengine.loadIdentity();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t{\r\n\t\t\t\tscene_map.applyCamera(engine);\r\n\t\t\t\t\r\n\t\t\t\tif ($gv.m_display_debug_info) {\r\n\t\t\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\t\t\tconst ctx = engine.ctx;\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t\t\tctx.fillStyle = \"white\";\r\n\t\t\t\t\t\tctx.fillRect(0, 0, 96, 50);\r\n\r\n\t\t\t\t\t\tctx.fillStyle = \"black\";\r\n\t\t\t\t\t\tctx.fillText(\"map origin\", 5, 14, 96);\r\n\r\n\t\t\t\t\t\tctx.fillText(\"view-x: \" + $gv.m_viewRect.x.toFixed(0), 5, 30, 96);\r\n\r\n\t\t\t\t\t\tctx.fillText(\"view-y: \" + $gv.m_viewRect.y.toFixed(0), 5, 46, 96);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tscene_map.controller.render(engine);\r\n\t\t\t\t\r\n\t\t\t\tengine.loadIdentity();\r\n\t\t\t\t\r\n\t\t\t\tif ($gv.m_display_debug_info) {\r\n\t\t\t\t\tthis._render_debug_info();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tengine.endScene();\r\n\t}\r\n\t_render_map_loading() {\r\n\t\tconst ctx = engine.ctx;\r\n\t\tconst screen_width = engine.screen_size.x;\r\n\t\tconst screen_height = engine.screen_size.y;\r\n\t\tconst scr_hw = screen_width * 0.5;\r\n\t\tconst scr_hh = screen_height * 0.5;\r\n\t\t\r\n\t\tctx.font = \"2em 微軟正黑體\";\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"center\";\r\n\t\t\r\n\t\tctx.fillStyle = \"white\";\r\n\t\tctx.fillText(\"loading...\", scr_hw, scr_hh);\r\n\t\t\r\n\t\tctx.strokeStyle = \"black\";\r\n\t\tctx.fillText(\"loading...\", scr_hw, scr_hh);\r\n\t}\r\n\r\n\t_render_debug_info() {\r\n\t\tif (!(scene_map.controller && scene_map.controller.player)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = engine.ctx;\r\n\r\n\t\tconst ta = ctx.textAlign, tb = ctx.textBaseline, lw = ctx.lineWidth;\r\n\t\tctx.textBaseline = \"top\";\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tlet x = 400, y = 5;\r\n\t\tfor (let line of window._SCREEN_PRINTLN) {\r\n\t\t\tconst val = line.getValue();\r\n\t\t\tconst text = line.getText();\r\n\r\n\t\t\tctx.fillStyle = \"#FFF\";\r\n\t\t\t{\r\n\t\t\t\tctx.textAlign = \"right\";\r\n\t\t\t\tctx.strokeText(text, x - 2, y);\r\n\t\t\t\tctx.fillText(text, x - 2, y);\r\n\r\n\t\t\t\tctx.textAlign = \"center\";\r\n\t\t\t\tctx.strokeText(\":\", x, y);\r\n\t\t\t\tctx.fillText(\":\", x, y);\r\n\r\n\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\tctx.strokeText(val, x + 2, y);\r\n\t\t\t\tctx.fillText(val, x + 2, y);\r\n\t\t\t}\r\n\r\n\t\t\tif (\"_val\" in line) {\r\n\t\t\t\tlet _val;\r\n\t\t\t\tif (line._val != val) {\r\n\t\t\t\t\t_val = line._val;//display new value\r\n\t\t\t\t\tline.__val = line._val;\r\n\t\t\t\t\tline._val = val;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t_val = line.__val;//display old value\r\n\t\t\t\t}\r\n\t\t\t\tif (_val != val) {\r\n\t\t\t\t\tctx.fillStyle = \"#0FF\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.fillStyle = \"#FFF\";\r\n\t\t\t\t{\r\n\t\t\t\t\tctx.textAlign = \"right\";\r\n\t\t\t\t\tctx.strokeText(text, x - 2 + 200, y);\r\n\t\t\t\t\tctx.fillText(text, x - 2 + 200, y);\r\n\r\n\t\t\t\t\tctx.textAlign = \"center\";\r\n\t\t\t\t\tctx.strokeText(\":\", x + 200, y);\r\n\t\t\t\t\tctx.fillText(\":\", x + 200, y);\r\n\r\n\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\tctx.strokeText(_val, x + 2 + 200, y);\r\n\t\t\t\t\tctx.fillText(_val, x + 2 + 200, y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tline.__val = val;\r\n\t\t\t\tline._val = val;\r\n\t\t\t}\r\n\r\n\t\t\ty += 16;\r\n\t\t}\r\n\t\tctx.textAlign = ta;\r\n\t\tctx.textBaseline = tb;\r\n\t\tctx.lineWidth = lw;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {DOMHighResTimeStamp} timeStamp\r\n\t */\r\n\t_loop(timeStamp) {\r\n\t\tconst scene_map = this.scene_map;\r\n\t\tlet stamp = timeStamp - this.timer;\r\n\t\t\r\n\t\tthis.timer = timeStamp;\r\n\r\n\t\tthis._requestNextFrame();\r\n\r\n\t\tthis._calcFPS(stamp);\r\n\t\r\n\t\tthis._updateScene(stamp);\r\n\r\n\t\tthis._renderScene();\r\n\t\t\r\n\t\tfor (let i in $gv.input_keyDown) {\r\n\t\t\tif ($gv.input_keyDown[i] > 0) {\r\n\t\t\t\t++$gv.input_keyDown[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i in $gv.input_keyUp) {\r\n\t\t\t$gv.input_keyUp[i] = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\tget chara() {\r\n\t\treturn window.chara;\r\n\t}\r\n\t//set chara(value) {\r\n\t//\twindow.chara = value;\r\n\t//}\r\n\r\n\tget charaList() {\r\n\t\treturn gApp.store.state.charaList;\r\n\t}\r\n\t\r\n\tget m_is_run() {\r\n\t\treturn window.m_is_run;\r\n\t}\r\n\tset m_is_run(value) {\r\n\t\twindow.m_is_run = value;\r\n\t}\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction _parseUrlParameter() {\r\n\tlet sPageURL = decodeURIComponent(window.location.search.substring(1));\r\n\tlet sURLVariables = sPageURL.split(\"&\");\r\n\tlet params = {};\r\n\r\n\tfor (let i = 0; i < sURLVariables.length; ++i) {\r\n\t\tlet sParameter = sURLVariables[i].split(\"=\");\r\n\r\n\t\tparams[sParameter[0]] = sParameter[1];\r\n\t}\r\n\r\n\treturn params;\r\n};\r\n\r\n"],"sourceRoot":""}