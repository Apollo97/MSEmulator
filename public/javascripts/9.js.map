{"version":3,"sources":["webpack:///./src/init.js","webpack:///./src/util.js"],"names":["window","jQuery","jquery__WEBPACK_IMPORTED_MODULE_0___default","a","$","onwheel","init_tasks","AddInitTask","task","push","InitAll","Promise","all","DownloadData","document","createElement","body","appendChild","style","target","text","type","fileName","blob","Blob","url","URL","createObjectURL","href","download","click","open","revokeObjectURL","SelectText","elem","range","selection","createTextRange","moveToElementText","select","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","copyToClipboard","$temp","append","val","execCommand","remove"],"mappings":"gTAsBAA,OAAAC,OAAAC,EAAAC,EACAH,OAAAI,EAAAF,EAAAC,EAEAH,OAAAK,UACAL,OAAAK,QAAA,cAIA,IAAAC,KAEA,SAAAC,EAAAC,GACAF,EAAAG,KAAAD,GAGA,SAAAE,IACA,IAAAP,EAAAQ,QAAAC,IAAAN,GAEA,OADAA,KACAH,sBCtCAH,OAAAa,aAAA,WACA,IAAAV,EAAAW,SAAAC,cAAA,KAIA,OAHAD,SAAAE,KAAAC,YAAAd,GACAA,EAAAe,MAAA,gBACAf,EAAAgB,OAAA,SACA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAAJ,IAA+BC,QAAA,iBAC/BI,EAAAzB,OAAA0B,IAAAC,gBAAAJ,GACAD,GAAA,IAAAA,GACAnB,EAAAyB,KAAAH,EACAtB,EAAA0B,SAAAP,EACAnB,EAAA2B,SAKA9B,OAAA+B,KAAAN,EAAA,UAEAzB,OAAA0B,IAAAM,gBAAAP,IAlBA,GAsBAzB,OAAAiC,WAAA,SAAAC,GACA,IAAAC,EAAAC,EAEAtB,SAAAE,KAAAqB,kBACAF,EAAArB,SAAAE,KAAAqB,mBACAC,kBAAAJ,GACAC,EAAAI,UAEAvC,OAAAwC,eACAJ,EAAApC,OAAAwC,gBACAL,EAAArB,SAAA2B,eACAC,mBAAAR,GACAE,EAAAO,kBACAP,EAAAQ,SAAAT,KAGAnC,OAAA6C,gBAAA,SAAAzB,GACA,IAAA0B,EAAA1C,EAAA,WACAA,EAAA,QAAA2C,OAAAD,GACAA,EAAAE,IAAA5B,GAAAmB,SACAzB,SAAAmC,YAAA,QACAH,EAAAI","file":"9.js","sourcesContent":["\r\nimport jQuery from \"jquery\";\r\n\r\nimport \"jquery-ui/themes/base/core.css\";\r\nimport \"jquery-ui/themes/base/theme.css\";\r\nimport \"jquery-ui/themes/base/selectable.css\";\r\nimport \"jquery-ui/themes/base/sortable.css\";\r\nimport \"jquery-ui/themes/base/draggable.css\";\r\n\r\nimport \"jquery-ui/ui/core\";\r\nimport \"jquery-ui/ui/widgets/selectable\";\r\nimport \"jquery-ui/ui/widgets/sortable\";\r\nimport \"jquery-ui/ui/widgets/draggable\";\r\nimport \"jquery-ui/ui/disable-selection\";\r\nimport \"jquery-ui/ui/position\";\r\nimport \"jquery-ui/ui/effect\";\r\n\r\nimport { } from \"./util.js\";\r\n\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nwindow.jQuery = jQuery;\r\nwindow.$ = jQuery;\r\n\r\nif (!window.onwheel) {\r\n\twindow.onwheel = function () {\r\n\t}\r\n}\r\n\r\nlet init_tasks = [];\r\n\r\nexport function AddInitTask(task) {\r\n\tinit_tasks.push(task);\r\n}\r\n\r\nexport function InitAll() {\r\n\tlet a = Promise.all(init_tasks);\r\n\tinit_tasks = [];\r\n\treturn a;\r\n}\r\n","\r\nwindow.DownloadData = (function () {\r\n\tlet a = document.createElement(\"a\");\r\n\tdocument.body.appendChild(a);\r\n\ta.style = \"display: none\";\r\n\ta.target = \"_blank\";\r\n\treturn function (text, type, fileName) {\r\n\t\tlet blob = new Blob([text], { type: type || \"octet/stream\" });\r\n\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\tif (fileName && fileName != \"\") {\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = fileName;\r\n\t\t\ta.click();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//a.href = url;\r\n\t\t\t//a.click();\r\n\t\t\twindow.open(url, '_blank');\r\n\t\t}\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n}());\r\n\r\nwindow.SelectText = function (elem) {\r\n\tvar range, selection;\r\n\r\n\tif (document.body.createTextRange) {\r\n\t\trange = document.body.createTextRange();\r\n\t\trange.moveToElementText(elem);\r\n\t\trange.select();\r\n\t}\r\n\telse if (window.getSelection) {\r\n\t\tselection = window.getSelection();\r\n\t\trange = document.createRange();\r\n\t\trange.selectNodeContents(elem);\r\n\t\tselection.removeAllRanges();\r\n\t\tselection.addRange(range);\r\n\t}\r\n}\r\nwindow.copyToClipboard = function (text) {\r\n\tvar $temp = $(\"<input>\");\r\n\t$(\"body\").append($temp);\r\n\t$temp.val(text).select();\r\n\tdocument.execCommand(\"copy\");\r\n\t$temp.remove();\r\n}\r\n\r\n/**\r\n * disable textNode \"#text\"\r\n * @param {string} xml - xml\r\n * @param {string[]=} arrayTags - optional\r\n * @returns {object}\r\n */\r\nfunction parseXml(xml, arrayTags) {\r\n\tvar dom = null;\r\n\tif (window.DOMParser) {\r\n\t\tdom = (new DOMParser()).parseFromString(xml, \"text/xml\");\r\n\t}\r\n\telse if (window.ActiveXObject) {\r\n\t\tdom = new ActiveXObject('Microsoft.XMLDOM');\r\n\t\tdom.async = false;\r\n\t\tif (!dom.loadXML(xml)) {\r\n\t\t\tthrow dom.parseError.reason + \" \" + dom.parseError.srcText;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tthrow \"cannot parse xml string!\";\r\n\t}\r\n\r\n\tfunction isArray(o) {\r\n\t\treturn Object.prototype.toString.apply(o) === '[object Array]';\r\n\t}\r\n\r\n\tfunction parseNode(xmlNode, result) {\r\n\t\tif (xmlNode.nodeName == \"#text\" && xmlNode.nodeValue.trim() == \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar jsonNode = {};\r\n\t\tvar existing = result[xmlNode.nodeName];\r\n\t\tif (existing) {\r\n\t\t\tif (!isArray(existing)) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [existing, jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName].push(jsonNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName] = jsonNode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (xmlNode.attributes) {\r\n\t\t\tvar length = xmlNode.attributes.length;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tvar attribute = xmlNode.attributes[i];\r\n\t\t\t\tjsonNode[attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar length = xmlNode.childNodes.length;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tparseNode(xmlNode.childNodes[i], jsonNode);\r\n\t\t}\r\n\t}\r\n\r\n\tvar result = {};\r\n\tif (dom.childNodes.length) {\r\n\t\tparseNode(dom.childNodes[0], result);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n"],"sourceRoot":""}