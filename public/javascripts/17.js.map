{"version":3,"sources":["webpack:///./src/game/Animation.js","webpack:///./src/game/Sprite.js"],"names":["window","m_draw_animation_texture_info","IAnimation","[object Object]","raw","url","this","_raw","_url","frame","time","delta","textures","is_loop","is_end","reduce","pv","cv","delay","newAnim","constructor","Error","stamp","texture","AnimationBase","super","i","_Sprite_js__WEBPACK_IMPORTED_MODULE_2__","isLoaded","__loadTexture","fc","length","reset","renderer","x","y","angle","flip","drawRotaGraph","Animation","draw","_draw_and_preload","SpriteBase","_Engine_js__WEBPACK_IMPORTED_MODULE_2__","width","__w","height","__h","isTexture","hasOwnProperty","__isEmpty","console","group","warn","groupEnd","startsWith","z","value","_order","defaultValue","propertyName","converter","_engine","drawGraph","drawGraph2","Math","trunc","Sprite","origin","_get","_math_js__WEBPACK_IMPORTED_MODULE_0__","get","Number","w","h","ctx","save","rect","clip","left","right","bottom","j","draw2","ex","error","restore","sw","sh","top","sx","_drawImage","sy","drawPattern","drawHorizontalPattern","drawVerticalPattern","_drawPattern","_drawHorizontalPattern","_drawVerticalPattern"],"mappings":"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","file":"17.js","sourcesContent":["﻿\r\nimport { Vec2 } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\n\r\n\r\nwindow.m_draw_animation_texture_info = false;\r\n\r\nclass IAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tthis._raw = raw;\r\n\t\tthis._url = url;\r\n\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** elapsed time */\r\n\t\tthis.delta = 0;\r\n\r\n\t\t/** @type {Sprite[]} */\r\n\t\tthis.textures = [];\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_loop = true;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_end = false;\r\n\r\n\t\tif (!this._url) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.textures.reduce((pv, cv) => pv + cv.delay, 0);\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet newAnim = new this.constructor(this._raw, this._url);\r\n\t\tnewAnim.textures = this.textures;\r\n\t\treturn newAnim;\r\n\t}\r\n\t\r\n\tload() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** reset frame */\r\n\t_resetFrame() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t}\r\n\r\n\t/** restart */\r\n\treset() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.is_end = false;\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * remove at nextStep\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.is_loop = false;//防止重複\r\n\t\tthis.is_end = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * process animation\r\n */\r\nexport class AnimationBase extends IAnimation {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {Promise<Sprite>}\r\n\t */\r\n\tasync load() {\r\n\t\t//if (!this._raw) {\r\n\t\t//\tthis._raw = await $get.data(this._url);\r\n\t\t//}\r\n\r\n\t\tfor (let i = 0; i in this._raw; ++i) {\r\n\t\t\tlet url = this._url + \"/\" + i;\r\n\r\n\t\t\tlet texture = new Sprite(this._raw[i]);\r\n\r\n\t\t\ttexture._url = url;\r\n\r\n\t\t\tthis.textures[i] = texture;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.textures[0]) {\r\n\t\t\tif (!this.textures[0].isLoaded()) {\r\n\t\t\t\tthis.textures[0].__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * aways loop\r\n\t * @param {number} stamp\r\n\t */\r\n\t_update(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame % fc;\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = this.frame + 1;\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tif (this.is_loop) {\r\n\t\t\t\t\t\tthis.reset();//make loop\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//防止錯誤\r\n\t\t\t\t\t\tthis.frame = fc - 1;//this._resetFrame();\r\n\r\n\t\t\t\t\t\tthis.is_end = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, x, y, angle, flip) {\r\n\t\tlet texture = this.texture;\r\n\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\treturn this.textures[this.frame];\r\n\t}\r\n}\r\n\r\n/**\r\n * animation rendering\r\n */\r\nexport class Animation extends AnimationBase {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tthis.draw = this._draw_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * draw and load next frame\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\t_draw_and_preload(renderer, x, y, angle, flip) {\r\n\t\tlet frame;\r\n\r\n\t\t// if current frame is not loaded then render prev frame\r\n\t\tfor (frame = this.frame; frame >= 0; --frame) {\r\n\t\t\tlet texture = this.textures[frame];\r\n\r\n\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//preload next frame\r\n\t\tlet texture = this.textures[++frame];\r\n\t\tif (texture) {//if frame < this.textures.length\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {//if all testure are loaded\r\n\t\t\tdelete this.draw;\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGrpah, IRenderer, IGraph } from \"./IRenderer.js\";\r\n\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\n\r\n/**\r\n * @extends {IGraph}\r\n */\r\nexport class SpriteBase extends Graph {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tif (raw) {\r\n\t\t\tsuper(url, {\r\n\t\t\t\twidth: raw.__w,\r\n\t\t\t\theight: raw.__h,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\t//this.src is broken;\r\n\r\n\t\tif (url) {\r\n\t\t\tdebugger\r\n\t\t\tthis._url = url;\r\n\t\t\t//this._loadTexture(url);//_loadTexture: undefined\r\n\t\t}\r\n\t\telse if (SpriteBase.isTexture(raw) !== false) {\r\n\t\t\tthis._url = raw[\"\"];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isTexture(raw) {\r\n\t\tif (raw) {\r\n\t\t\tif (raw.hasOwnProperty(\"\")) {\r\n\t\t\t\tif (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!raw.__isEmpty) {\r\n\t\t\t\t\tconsole.group(\"no texture\");\r\n\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\tthrow new Error(\"no texture\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic isTextureHasData(raw) {\r\n\t\treturn raw && typeof raw[\"\"] == 'string' && raw[\"\"].startsWith(\"data:image/\");\r\n\t}\r\n\r\n\tset z(value) {\r\n\t\tthis._order = value;\r\n\t}\r\n\tget z() {\r\n\t\treturn this._order;\r\n\t}\r\n\t\r\n\t/**\r\n\t * try construct value from raw data\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (!this._raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\telse if (propertyName in this._raw) {\r\n\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis._engine.drawGraph(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthis._engine.drawGraph2(this, x - this.x, y - this.y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t */\r\n\tdraw2i(x, y) {\r\n\t\tthis._engine.drawGraph2(this, Math.trunc(x - this.x + 0.5), Math.trunc(y - this.y + 0.5));\r\n\t}\r\n}\r\n\r\n\r\nexport class Sprite extends SpriteBase {\r\n\t/**\r\n\t * sprite = new Sprite(rawData);//不會載入image\r\n\t * sprite._url = img_url;//不會載入image\r\n\t *\r\n\t * 會觸發載入image的method\r\n\t * draw(), isLoaded(), get width(), get height()\r\n\t * \r\n\t * 手動載入image: __loadTexture()\r\n\t * \r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tvar origin = this._get(new Vec2(0, 0), \"origin\", Vec2.get);\r\n\t\tthis.x = origin.x;\r\n\t\tthis.y = origin.y;\r\n\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\tthis.delay = this._get(100, \"delay\", Number);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tctx.rect(x, y, w, h);\r\n\t\t\tctx.clip();\r\n\r\n\t\t\tlet left = x;\r\n\t\t\tlet top = y;\r\n\t\t\tlet right = x + w;\r\n\t\t\tlet bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\tdrawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst left = x;\r\n\t\t\tconst right = x + w;\r\n\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\tdrawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst top = y;\r\n\t\t\tconst bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tthis.draw2(x, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\t_drawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t\r\n\t\tconst sw = Math.trunc(w / this.width) * this.width;\r\n\t\tconst sh = Math.trunc(h / this.height) * this.height;\r\n\t\t\r\n\t\tconst left = x;\r\n\t\tconst top = y;\r\n\t\tconst right = x + sw;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tlet i, j;\r\n\r\n\t\tif (h >= this.height) {\r\n\t\t\tfor (i = top; i < bottom; i += this.height) {\r\n\t\t\t\tif (w >= this.width) {\r\n\t\t\t\t\tfor (j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet sx = w - sw;\r\n\t\t\t\t\tif (sx > 0) {\r\n\t\t\t\t\t\tthis._engine._drawImage(this, 0, 0, sx, this.height, j - this.x, i - this.y, sx, this.height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._engine._drawImage(this, 0, 0, w, this.height, left - this.x, i - this.y, w, this.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet sy = h - sh;\r\n\t\t\tif (sy > 0) {\r\n\t\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\t\tthis._engine._drawImage(this, 0, 0, this.width, sy, left - this.x, i - this.y, this.width, sy);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\tthis._engine._drawImage(this, 0, 0, this.width, h, left - this.x, top - this.y, this.width, h);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\t_drawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst right = x + w;\r\n\r\n\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\tthis.draw2(j, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\t_drawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst top = y;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tthis.draw2(x, i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawPattern4i(x, y, w, h) {\r\n\t\tthis.drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\tdrawHorizontalPattern3i(x, y, w) {\r\n\t\tthis.drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawVerticalPattern3i(x, y, h) {\r\n\t\tthis.drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawPattern4i(x, y, w, h) {\r\n\t\tthis._drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\t_drawHorizontalPattern3i(x, y, w) {\r\n\t\tthis._drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawVerticalPattern3i(x, y, h) {\r\n\t\tthis._drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n}\r\n\r\nexport class _$PatternSprite_Loaded extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._direction = null;\r\n\r\n\t\t/** @type {CanvasPattern} */\r\n\t\tthis._pattern = null;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget direction() {\r\n\t\treturn this._direction;\r\n\t}\r\n\tset direction(value) {\r\n\t\tif (value && this._direction != value) {\r\n\t\t\tthis._direction = value;\r\n\t\r\n\t\t\t//reload;\r\n\t\t\tthis._pattern = null;\r\n\t\t\tthis.__proto__ = $PatternSprite.prototype;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(-this.x, -this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(x - this.x, y - this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"repeat\"} */\r\n\tget e_repeat() {\r\n\t\treturn \"repeat\";\r\n\t}\r\n\t/** @returns {\"repeat-x\"} */\r\n\tget e_repeat_x() {\r\n\t\treturn \"repeat-x\";\r\n\t}\r\n\t/** @returns {\"repeat-y\"} */\r\n\tget e_repeat_y() {\r\n\t\treturn \"repeat-y\";\r\n\t}\r\n\t/** @returns {\"no-repeat\"} */\r\n\tget e_noRepeat() {\r\n\t\treturn \"no-repeat\";\r\n\t}\r\n}\r\n\r\nexport class $PatternSprite extends _$PatternSprite_Loaded {\r\n\tdrawPattern(w, h) {\r\n\t\tthis.drawPattern2(0, 0, w, h);\r\n\t}\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.isLoaded()) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t{\r\n\t\t\t\tctx.rect(x, y, w, h);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tlet left = x;\r\n\t\t\t\tlet top = y;\r\n\t\t\t\tlet right = x + w;\r\n\t\t\t\tlet bottom = y + h;\r\n\r\n\t\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern(w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern2(x, y, w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}