{"version":3,"sources":["webpack:///./src/game/Renderer/PanelRenderer.js","webpack:///./src/game/Renderer/NameLabel.js","webpack:///./src/game/Sprite.js"],"names":["PanelRenderer_PanelRenderer","[object Object]","this","_raw","url","Object","defineProperty","value","$get","data","nw","Sprite","n","ne","w","c","e","sw","s","se","arrow","defCol","color","clr","toString","renderer","cx","bottom","hwidth","height","tw","draw2","_drawPatterncx","x","xw","width","_drawPattern","r_adj","arrow_hw","Math","trunc","hw_arrow_hw","draw2i","NameLabel_NameLabel","super","style","TypeError","path","_base_path","join","promise","_load","cache","$promise","_load_center","_load_color","text","y","ctx","fillStyle","font","textAlign","textBaseline","measureText","max","cy","min","fillText","labelStyle","label","load","window","$images_NameLabel","SpriteBase","_Engine_js__WEBPACK_IMPORTED_MODULE_2__","raw","__w","__h","_url","isTexture","hasOwnProperty","__isEmpty","console","group","warn","groupEnd","Error","startsWith","z","_order","defaultValue","propertyName","converter","_engine","drawGraph","drawGraph2","origin","_get","_math_js__WEBPACK_IMPORTED_MODULE_0__","get","Number","delay","h","isLoaded","save","rect","clip","left","right","i","j","ex","error","restore","sh","top","sx","_drawImage","sy","drawPattern","drawHorizontalPattern","drawVerticalPattern","_drawHorizontalPattern","_drawVerticalPattern"],"mappings":"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","file":"16.js","sourcesContent":["\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\n\r\n\r\nexport class PanelRenderer {\r\n\tconstructor() {\r\n\t\tthis._raw = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tasync _load(url) {\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: await $get.data(url),\r\n\t\t});\r\n\t}\r\n\t\r\n\t_load_top() {\r\n\t\tthis.nw = new Sprite(this._raw.nw);\r\n\t\t//this.nw._url = url + \"/nw\";\r\n\r\n\t\tthis.n = new Sprite(this._raw.n);\r\n\t\t//this.n._url = url + \"/n\";\r\n\r\n\t\tthis.ne = new Sprite(this._raw.ne);\r\n\t\t//this.ne._url = url + \"/ne\";\r\n\t}\r\n\t\r\n\t_load_center() {\r\n\t\tthis.w = new Sprite(this._raw.w);\r\n\t\t//this.w._url = url + \"/w\";\r\n\r\n\t\tthis.c = new Sprite(this._raw.c);\r\n\t\t//this.c._url = url + \"/c\";\r\n\r\n\t\tthis.e = new Sprite(this._raw.e);\r\n\t\t//this.e._url = url + \"/e\";\r\n\t}\r\n\t\r\n\t_load_bottom() {\r\n\t\tthis.sw = new Sprite(this._raw.sw);\r\n\t\t//this.sw._url = url + \"/sw\";\r\n\r\n\t\tthis.s = new Sprite(this._raw.s);\r\n\t\t//this.s._url = url + \"/s\";\r\n\r\n\t\tthis.se = new Sprite(this._raw.se);\r\n\t\t//this.se._url = url + \"/se\";\r\n\t}\r\n\t\r\n\t_load_arrow() {\r\n\t\tthis.arrow = new Sprite(this._raw.arrow);\r\n\t\t//this.arrow._url = url + \"/arrow\";\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} defCol\r\n\t */\r\n\t_load_color(defCol) {\r\n\t\tthis.color = (this._raw.clr == -1 || !this._raw.clr) ? defCol : (\"#\" + (this._raw.clr >>> 0).toString(16));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_top(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tthis.nw.draw2(cx, bottom);\r\n\t\tthis.n._drawPatterncx(x, bottom, tw, this.n.height);\r\n\t\tthis.ne.draw2(cx + tw, bottom);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_center(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tconst xw = this.w.width - this.w.x;\r\n\r\n\t\tthis.w._drawPattern(cx + xw, bottom, this.w.width, height);\r\n\t\tthis.c._drawPattern(cx + xw, bottom, tw, height);\r\n\t\tthis.e._drawPattern(cx + xw + tw, bottom, this.e.width, height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_bottom(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tthis.sw.draw2(cx, bottom + height);\r\n\t\tthis.s._drawPattern(cx, bottom + height, hwidth, this.s.height);\r\n\t\tthis.se.draw2(cx + tw, bottom + height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_bottom_and_arrow(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tconst r_adj = this.arrow.width & 1;\r\n\t\tconst arrow_hw = Math.trunc(this.arrow.width / 2);\r\n\t\tconst hw_arrow_hw = hwidth - arrow_hw;\r\n\t\r\n\t\tthis.sw.draw2(cx, bottom + height);\r\n\t\tthis.s._drawPattern(cx, bottom + height, hw_arrow_hw, this.s.height);\r\n\t\tthis.s._drawPattern(cx + hwidth + arrow_hw + r_adj, bottom + height, hw_arrow_hw - r_adj, this.s.height);\r\n\t\tthis.se.draw2(cx + tw, bottom + height);\r\n\r\n\t\tthis.arrow.draw2i(cx - arrow_hw + hwidth, bottom + height);\r\n\t}\r\n}\r\n","\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\nimport { PanelRenderer } from './PanelRenderer.js';\r\n\r\n\r\nexport class NameLabel extends PanelRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.style = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.color = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.w = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.c = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.e = null;\r\n\t}\r\n\t\r\n\tasync load(style) {\r\n\t\tif (style == null) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tconst path = [this._base_path, style].join(\"/\");\r\n\t\t\r\n\t\tthis.style = style;\r\n\t\t\r\n\t\tlet promise = this._load(path);\r\n\t\tNameLabel.cache[style] = this;\r\n\t\tthis.$promise = promise;\r\n\t\t\r\n\t\tawait promise;\r\n\t\t\r\n\t\tthis._load_center();\r\n\t\tthis._load_color(\"white\");\r\n\t\t\r\n\t\tdelete this.$promise;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} text\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, text, x, y) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\t\r\n\t\tctx.fillStyle = this.color;\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"hanging\";//top\r\n\t\t\r\n\t\tlet height = this.c.height;\r\n\t\tlet width = ctx.measureText(text).width;\r\n\t\twidth = Math.max(this.c.width * 2, width);\r\n\t\t\r\n\t\tconst hw = width / 2;\r\n\t\t\r\n\t\tconst cx = x - hw;\r\n\t\tconst cy = y + Math.min(this.w.y, this.e.y);\r\n\t\t\r\n\t\tthis.w.draw2(cx, cy);\r\n\t\tthis.c._drawPattern(cx, cy, width - this.e.x, height);\r\n\t\tthis.e.draw2(cx + width, cy);\r\n\t\t\r\n\t\tctx.fillText(text, x, cy);\r\n\t}\r\n\t\r\n\tget _base_path() {\r\n\t\treturn \"/UI/NameTag\";\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} NameLabel\r\n\t * @returns {Promise<NameLabel>}\r\n\t */\r\n\tstatic get(labelStyle) {\r\n\t\tlet label = NameLabel.cache[labelStyle];\r\n\t\tif (!label) {\r\n\t\t\tlabel = new NameLabel();\r\n\t\t\tlabel.load(labelStyle);\r\n\t\t}\r\n\t\treturn label;\r\n\t}\r\n}\r\n\r\n/** @type {{[style:number]:NameLabel}} */\r\nNameLabel.cache = window.$images_NameLabel || {};\r\n\r\nwindow.$images_NameLabel = NameLabel.cache;\r\n\r\nif (module.hot) {\r\n\tObject.values(NameLabel.cache).forEach(a => {\r\n\t\ta.__proto__ = NameLabel.prototype;\r\n\t\t//a.load(a.style);\r\n\t});\r\n\tmodule.hot.accept();\r\n}\r\n","﻿\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGrpah, IRenderer, IGraph } from \"./IRenderer.js\";\r\n\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\n\r\n/**\r\n * @extends {IGraph}\r\n */\r\nexport class SpriteBase extends Graph {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tif (raw) {\r\n\t\t\tsuper(url, {\r\n\t\t\t\twidth: raw.__w,\r\n\t\t\t\theight: raw.__h,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\t//this.src is broken;\r\n\r\n\t\tif (url) {\r\n\t\t\tdebugger\r\n\t\t\tthis._url = url;\r\n\t\t\t//this._loadTexture(url);//_loadTexture: undefined\r\n\t\t}\r\n\t\telse if (SpriteBase.isTexture(raw) !== false) {\r\n\t\t\tthis._url = raw[\"\"];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isTexture(raw) {\r\n\t\tif (raw) {\r\n\t\t\tif (raw.hasOwnProperty(\"\")) {\r\n\t\t\t\tif (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!raw.__isEmpty) {\r\n\t\t\t\t\tconsole.group(\"no texture\");\r\n\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\tthrow new Error(\"no texture\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic isTextureHasData(raw) {\r\n\t\treturn raw && typeof raw[\"\"] == 'string' && raw[\"\"].startsWith(\"data:image/\");\r\n\t}\r\n\r\n\tset z(value) {\r\n\t\tthis._order = value;\r\n\t}\r\n\tget z() {\r\n\t\treturn this._order;\r\n\t}\r\n\t\r\n\t/**\r\n\t * try construct value from raw data\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (!this._raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\telse if (propertyName in this._raw) {\r\n\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis._engine.drawGraph(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthis._engine.drawGraph2(this, x - this.x, y - this.y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t */\r\n\tdraw2i(x, y) {\r\n\t\tthis._engine.drawGraph2(this, Math.trunc(x - this.x + 0.5), Math.trunc(y - this.y + 0.5));\r\n\t}\r\n}\r\n\r\n\r\nexport class Sprite extends SpriteBase {\r\n\t/**\r\n\t * sprite = new Sprite(rawData);//不會載入image\r\n\t * sprite._url = img_url;//不會載入image\r\n\t *\r\n\t * 會觸發載入image的method\r\n\t * draw(), isLoaded(), get width(), get height()\r\n\t * \r\n\t * 手動載入image: __loadTexture()\r\n\t * \r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tvar origin = this._get(new Vec2(0, 0), \"origin\", Vec2.get);\r\n\t\tthis.x = origin.x;\r\n\t\tthis.y = origin.y;\r\n\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\tthis.delay = this._get(100, \"delay\", Number);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tctx.rect(x, y, w, h);\r\n\t\t\tctx.clip();\r\n\r\n\t\t\tlet left = x;\r\n\t\t\tlet top = y;\r\n\t\t\tlet right = x + w;\r\n\t\t\tlet bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\tdrawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst left = x;\r\n\t\t\tconst right = x + w;\r\n\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\tdrawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst top = y;\r\n\t\t\tconst bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tthis.draw2(x, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\t_drawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t\r\n\t\tconst sw = Math.trunc(w / this.width) * this.width;\r\n\t\tconst sh = Math.trunc(h / this.height) * this.height;\r\n\t\t\r\n\t\tconst left = x;\r\n\t\tconst top = y;\r\n\t\tconst right = x + sw;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tlet i, j;\r\n\r\n\t\tif (h >= this.height) {\r\n\t\t\tfor (i = top; i < bottom; i += this.height) {\r\n\t\t\t\tif (w >= this.width) {\r\n\t\t\t\t\tfor (j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet sx = w - sw;\r\n\t\t\t\t\tif (sx > 0) {\r\n\t\t\t\t\t\tthis._engine._drawImage(this, 0, 0, sx, this.height, j - this.x, i - this.y, sx, this.height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._engine._drawImage(this, 0, 0, w, this.height, left - this.x, i - this.y, w, this.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet sy = h - sh;\r\n\t\t\tif (sy > 0) {\r\n\t\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\t\tthis._engine._drawImage(this, 0, 0, this.width, sy, left - this.x, i - this.y, this.width, sy);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\tthis._engine._drawImage(this, 0, 0, this.width, h, left - this.x, top - this.y, this.width, h);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\t_drawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst right = x + w;\r\n\r\n\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\tthis.draw2(j, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\t_drawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst top = y;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tthis.draw2(x, i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawPattern4i(x, y, w, h) {\r\n\t\tthis.drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\tdrawHorizontalPattern3i(x, y, w) {\r\n\t\tthis.drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawVerticalPattern3i(x, y, h) {\r\n\t\tthis.drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawPattern4i(x, y, w, h) {\r\n\t\tthis._drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\t_drawHorizontalPattern3i(x, y, w) {\r\n\t\tthis._drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawVerticalPattern3i(x, y, h) {\r\n\t\tthis._drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n}\r\n\r\nexport class _$PatternSprite_Loaded extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._direction = null;\r\n\r\n\t\t/** @type {CanvasPattern} */\r\n\t\tthis._pattern = null;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget direction() {\r\n\t\treturn this._direction;\r\n\t}\r\n\tset direction(value) {\r\n\t\tif (value && this._direction != value) {\r\n\t\t\tthis._direction = value;\r\n\t\r\n\t\t\t//reload;\r\n\t\t\tthis._pattern = null;\r\n\t\t\tthis.__proto__ = $PatternSprite.prototype;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(-this.x, -this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(x - this.x, y - this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"repeat\"} */\r\n\tget e_repeat() {\r\n\t\treturn \"repeat\";\r\n\t}\r\n\t/** @returns {\"repeat-x\"} */\r\n\tget e_repeat_x() {\r\n\t\treturn \"repeat-x\";\r\n\t}\r\n\t/** @returns {\"repeat-y\"} */\r\n\tget e_repeat_y() {\r\n\t\treturn \"repeat-y\";\r\n\t}\r\n\t/** @returns {\"no-repeat\"} */\r\n\tget e_noRepeat() {\r\n\t\treturn \"no-repeat\";\r\n\t}\r\n}\r\n\r\nexport class $PatternSprite extends _$PatternSprite_Loaded {\r\n\tdrawPattern(w, h) {\r\n\t\tthis.drawPattern2(0, 0, w, h);\r\n\t}\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.isLoaded()) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t{\r\n\t\t\t\tctx.rect(x, y, w, h);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tlet left = x;\r\n\t\t\t\tlet top = y;\r\n\t\t\t\tlet right = x + w;\r\n\t\t\t\tlet bottom = y + h;\r\n\r\n\t\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern(w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern2(x, y, w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}