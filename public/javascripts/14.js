(window.webpackJsonp=window.webpackJsonp||[]).push([[14,1,12,13],{332:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Vec2", function() { return Vec2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rectangle", function() { return Rectangle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Randomizer", function() { return Randomizer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clamp", function() { return clamp; });\n\ufeff\r\nclass Vec2 {\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tconstructor(x, y) {\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\t\telse if (arguments.length == 1 && x != null) {\r\n\t\t\tthis.x = x.x | 0;\r\n\t\t\tthis.y = x.y | 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t}\r\n\t}\r\n\tstatic get() {\r\n\t\treturn new Vec2(...arguments);\r\n\t}\r\n\tstatic get empty() {\r\n\t\treturn new Vec2(0, 0);\r\n\t}\r\n\t/**\r\n\t * @returns {Vec2}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor(this.x, this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {...Vec2} v2\r\n\t * @returns {Vec2}\r\n\t */\r\n\tadd(v2) {\r\n\t\tlet x = this.x, y = this.y;\r\n\t\tfor (let v of arguments) {\r\n\t\t\tif (v == null)\r\n\t\t\t\tcontinue;\r\n\t\t\tx = x + v.x;\r\n\t\t\ty = y + v.y;\r\n\t\t}\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\t/**\r\n\t * @param {...Vec2} v2\r\n\t * @returns {Vec2}\r\n\t */\r\n\tsub(v2) {\r\n\t\tlet x = this.x, y = this.y;\r\n\t\tfor (let v of arguments) {\r\n\t\t\tif (v == null)\r\n\t\t\t\tcontinue;\r\n\t\t\tx = x - v.x;\r\n\t\t\ty = y - v.y;\r\n\t\t}\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\r\n\t/** @param {Vec2} v */\r\n\tplus(v) {\r\n\t\treturn new Vec2(this.x + v.x, this.y + v.y);\r\n\t}\r\n\t/** @param {Vec2} v */\r\n\tminus(v) {\r\n\t\treturn new Vec2(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tplus2(x, y) {\r\n\t\treturn new Vec2(this.x + x, this.y + y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tminus2(x, y) {\r\n\t\treturn new Vec2(this.x - x, this.y - y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} floatVar\r\n\t */\r\n\tmul(floatVar) {\r\n\t\treturn new Vec2(this.x * floatVar, this.y * floatVar);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} s\r\n\t */\r\n\tscale(s) {\r\n\t\treturn new Vec2(this.x * s, this.y * s);\r\n\t}\r\n\r\n\trotate(ang) {\r\n\t\tlet x = Math.cos(ang) * this.x - Math.sin(ang) * this.y;\r\n\t\tlet y = Math.sin(ang) * this.x + Math.cos(ang) * this.y;\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\r\n\tnormalize() {\r\n\t\tlet r = Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t\treturn new Vec2(this.x / r, this.y / r);\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn Math.sqrt(x ** 2 + y ** 2);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} p2\r\n\t */\r\n\tdistance_sq(p2) {\r\n\t\tlet lx = this.x - p2.x;\r\n\t\tlet ly = this.y - p2.y;\r\n\t\treturn lx * lx + ly * ly;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} p2\r\n\t */\r\n\tdistance(p2) {\r\n\t\tlet lx = this.x - p2.x;\r\n\t\tlet ly = this.y - p2.y;\r\n\t\treturn Math.sqrt(lx * lx + ly * ly);\r\n\t}\r\n}\r\n\r\nclass Rectangle {\r\n\t/**\r\n\t * Rectangle(left: number, top: number, width: number, height: number)\r\n\t * Rectangle(position: Vec2, size: Vec2)\r\n\t * Rectangle(rect: Rectangle)\r\n\t * Rectangle() => Rectangle(0, 0, 0, 0)\r\n\t */\r\n\tconstructor() {\r\n\t\tif (arguments.length == 4) {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = arguments[0];//x\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = arguments[1];//y\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = arguments[2];//w\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = arguments[3];//h\r\n\t\t}\r\n\t\telse if (arguments.length == 2) {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = arguments[0].x;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = arguments[0].y;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = arguments[1].x;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = arguments[1].y;\r\n\t\t}\r\n\t\telse if (arguments[0] instanceof Rectangle) {\r\n\t\t\tconst r = arguments[0];\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = r.left;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = r.top;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = r.width;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = r.height;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Rectangle} other\r\n\t */\r\n\tcopy(other) {\r\n\t\tthis.left = other.left;\r\n\t\tthis.top = other.top;\r\n\t\tthis.width = other.width;\r\n\t\tthis.height = other.height;\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\treturn new Rectangle(this);\r\n\t}\r\n\r\n\tget x() { return this.left; }\r\n\tset x(value) { this.left = value; }\r\n\r\n\tget y() { return this.top; }\r\n\tset y(value) { this.top = value; }\r\n\r\n\tget right() { return this.left + this.width; }\r\n\tset right(value) { this.width = value - this.left; }\r\n\r\n\tget bottom() { return this.top + this.height; }\r\n\tset bottom(value) { this.height = value - this.top; }\r\n\r\n\tget size() {\r\n\t\treturn new Vec2(this.width, this.height);\r\n\t}\r\n\tset size(value) {\r\n\t\tthis.width = value.width || value.x;\r\n\t\tthis.height = value.height || value.y;\r\n\t}\r\n\r\n\tget center() {\r\n\t\treturn new Vec2(this.left + this.width * 0.5, this.top + this.height * 2 / 3);\r\n\t}\r\n\tset center(value) {\r\n\t\tlet w2 = this.width * 0.5;\r\n\t\tlet h23 = this.height * 2 / 3;\r\n\r\n\t\tthis.left = value.x - w2;\r\n\t\tthis.top = value.y - h23;\r\n\t}\r\n\tsetCenter(cx, cy) {\r\n\t\tlet w2 = this.width * 0.5;\r\n\t\tlet h23 = this.height * 2 / 3;\r\n\r\n\t\tthis.left = cx - w2;\r\n\t\tthis.top = cy - h23;\r\n\t}\r\n\t\r\n\tcollide(other) {\r\n\t\treturn (this.left < other.right && this.right > other.left && this.top < other.bottom && this.bottom > other.top);\r\n\t}\r\n\t\r\n\tcollide4f(left, right, top, bottom) {\r\n\t\treturn (this.left < right && this.right > left && this.top < bottom && this.bottom > top);\r\n\t}\r\n\tcollide4f2(x, y, hwidth, hheight) {\r\n\t\tconst left = x - hwidth;\r\n\t\tconst top = y - hheight;\r\n\t\tconst right = x + hwidth;\r\n\t\tconst bottom = y + hheight;\r\n\t\treturn (this.left < right && this.right > left && this.top < bottom && this.bottom > top);\r\n\t}\r\n\tcollide2f2x(x, hwidth) {\r\n\t\tconst left = x - hwidth;\r\n\t\tconst right = x + hwidth;\r\n\t\treturn (this.left < right && this.right > left);\r\n\t}\r\n\tcollide2f2y(y, hheight) {\r\n\t\tconst top = y - hheight;\r\n\t\tconst bottom = y + hheight;\r\n\t\treturn (this.top < bottom && this.bottom > top);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} left\r\n\t * @param {number} top\r\n\t * @param {number} right\r\n\t * @param {number} bottom\r\n\t */\r\n\tparse(left, top, right, bottom) {\r\n\t\tthis.left = left;\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} left\r\n\t * @param {number} top\r\n\t * @param {number} right\r\n\t * @param {number} bottom\r\n\t */\r\n\tstatic parse(left, top, right, bottom) {\r\n\t\treturn new Rectangle(left, top, right - left, bottom - top);\r\n\t}\r\n}\r\n\r\nclass Randomizer {\r\n\tstatic nextInt(r) {\r\n\t\treturn Math.trunc(Math.random() * 100 % r);\r\n\t}\r\n\tstatic randInt(min, max) {\r\n\t\treturn Math.trunc(min + Math.random() * 100 % (max - min + 1));\r\n\t}\r\n\tstatic nextBoolean() {\r\n\t\treturn !(Math.trunc(Math.random() * 100) & 1);\r\n\t}\r\n}\r\n\r\nfunction clamp(value, min, max) {\r\n\treturn Math.max(min, Math.min(value, max));\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///332\n')},333:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorRGB", function() { return ColorRGB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorHSV", function() { return ColorHSV; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ImageFilter", function() { return _ImageFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageFilter", function() { return ImageFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IGraph", function() { return IGraph; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IRenderer", function() { return IRenderer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageDataHelper", function() { return ImageDataHelper; });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(332);\n\ufeff\r\n\r\n\r\nfunction colorInt24Parse2(col) {\r\n\treturn "#" + [((col >> 16) & 0xFF), ((col >> 8) & 0xFF), (col & 0xFF)].map(a=>a.toString(16).padStart(2, "0")).join("");\r\n}\r\nfunction colorInt24Parse(col) {\r\n\treturn "#" + [((col >> 16) & 0xFF), ((col >> 8) & 0xFF), (col & 0xFF)].map(a=>a.toString(16).padStart(2, "0")).join("");\r\n}\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nclass IColor {\r\n\ttoFilter() {\r\n\t}\r\n\ttoFilterLimit() {\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IColor}\r\n */\r\nclass ColorRGB {\r\n\tconstructor(r = 0, g = 0, b = 0) {\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.r = r;\r\n\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.g = g;\r\n\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.b = b;\r\n\t}\r\n\tclone() {\r\n\t\treturn new this.constructor(this.r, this.g, this.b);\r\n\t}\r\n\tselfAdd(rgb) {\r\n\t\tthis.r += rgb.r;\r\n\t\tthis.g += rgb.g;\r\n\t\tthis.b += rgb.b;\r\n\t\treturn this;\r\n\t}\r\n\tselfSub(rgb) {\r\n\t\tthis.r += rgb.r;\r\n\t\tthis.g += rgb.g;\r\n\t\tthis.b += rgb.b;\r\n\t\treturn this;\r\n\t}\r\n\tselfScale(s) {\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\t\treturn this;\r\n\t}\r\n\tstatic add(rgb, rgb2) {\r\n\t\treturn new ColorRGB(rgb.r + rgb2.r, rgb.g + rgb2.g, rgb.b + rgb2.b);\r\n\t}\r\n\tstatic sub(rgb, rgb2) {\r\n\t\treturn new ColorRGB(rgb.r - rgb2.r, rgb.g - rgb2.g, rgb.b - rgb2.b);\r\n\t}\r\n\tstatic scale(rgb, s) {\r\n\t\treturn new ColorRGB(rgb.r * s, rgb.g * s, rgb.b * s);\r\n\t}\r\n\ttoString() {\r\n\t\tconst r = Math.trunc(this.r);\r\n\t\tconst g = Math.trunc(this.g);\r\n\t\tconst b = Math.trunc(this.b);\r\n\t\treturn "rgb(" + r + "," + g + "," + b + ")";\r\n\t}\r\n\tstatic fromInt24(col) {\r\n\t\treturn new ColorRGB((col >> 16) & 0xFF, (col >> 8) & 0xFF, col & 0xFF);\r\n\t}\r\n\t/**\r\n\t * source: https://gist.github.com/mjackson/5311256#file-color-conversion-algorithms-js-L84\r\n\t * Converts an RGB color value to HSV. Conversion formula\r\n\t * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n\t * Assumes r, g, and b are contained in the set [0, 255] and\r\n\t * returns h, s, and v in the set [0, 1].\r\n\t *\r\n\t * @returns {ColorHSV}\r\n\t */\r\n\ttoHSV() {\r\n\t\tlet r = this.r /= 255, g = this.g /= 255, b = this.b /= 255;\r\n\r\n\t\tlet max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n\t\tlet h, s, v = max;\r\n\r\n\t\tlet d = max - min;\r\n\t\ts = max == 0 ? 0 : d / max;\r\n\r\n\t\tif (max == min) {\r\n\t\t\th = 0; // achromatic\r\n\t\t} else {\r\n\t\t\tswitch (max) {\r\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\r\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\r\n\t\t\t}\r\n\r\n\t\t\th /= 6;\r\n\t\t}\r\n\r\n\t\treturn new ColorHSV(h, s, v);\r\n\t}\r\n\t/**\r\n\t * source: https://gist.github.com/mjackson/5311256#file-color-conversion-algorithms-js-L119\r\n\t * Converts an HSV color value to RGB. Conversion formula\r\n\t * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n\t * Assumes h, s, and v are contained in the set [0, 1] and\r\n\t * returns r, g, and b in the set [0, 255].\r\n\t *\r\n\t * @param {number} h The hue\r\n\t * @param {number} s The saturation\r\n\t * @param {number} v The value\r\n\t */\r\n\tfromHsv(h, s, v) {\r\n\t\tlet r, g, b;\r\n\r\n\t\tlet i = Math.floor(h * 6);\r\n\t\tlet f = h * 6 - i;\r\n\t\tlet p = v * (1 - s);\r\n\t\tlet q = v * (1 - f * s);\r\n\t\tlet t = v * (1 - (1 - f) * s);\r\n\r\n\t\tswitch (i % 6) {\r\n\t\t\tcase 0: r = v, g = t, b = p; break;\r\n\t\t\tcase 1: r = q, g = v, b = p; break;\r\n\t\t\tcase 2: r = p, g = v, b = t; break;\r\n\t\t\tcase 3: r = p, g = q, b = v; break;\r\n\t\t\tcase 4: r = t, g = p, b = v; break;\r\n\t\t\tcase 5: r = v, g = p, b = q; break;\r\n\t\t}\r\n\r\n\t\tthis.r = r * 255;\r\n\t\tthis.g = g * 255;\r\n\t\tthis.b = b * 255;\r\n\t}\r\n\tstatic fromHsv(h, s, v) {\r\n\t\tlet r, g, b;\r\n\r\n\t\tlet i = Math.floor(h * 6);\r\n\t\tlet f = h * 6 - i;\r\n\t\tlet p = v * (1 - s);\r\n\t\tlet q = v * (1 - f * s);\r\n\t\tlet t = v * (1 - (1 - f) * s);\r\n\r\n\t\tswitch (i % 6) {\r\n\t\t\tcase 0: r = v, g = t, b = p; break;\r\n\t\t\tcase 1: r = q, g = v, b = p; break;\r\n\t\t\tcase 2: r = p, g = v, b = t; break;\r\n\t\t\tcase 3: r = p, g = q, b = v; break;\r\n\t\t\tcase 4: r = t, g = p, b = v; break;\r\n\t\t\tcase 5: r = v, g = p, b = q; break;\r\n\t\t}\r\n\r\n\t\treturn new ColorRGB(r * 255, g * 255, b * 255);\r\n\t}\r\n\ttoFilter() {\r\n\t\tlet { h, s, v } = this.toHSV();\r\n\t\treturn `hue-rotate(${h*Math.PI*2}rad) saturate(${s}) brightness(${v})`;\r\n\t}\r\n\ttoFilterLimit() {\r\n\t\treturn `hue-rotate(${h * 360}deg) saturate(${Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["clamp"])(Math.trunc(s * 100), 0, 100)}%) brightness(${Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["clamp"])(Math.trunc(v * 100), 0, 100)}%)`;\r\n\t}\r\n\ttoFilter_HueRotate() {\r\n\t\tconst { h, s, v } = this;\r\n\t\t//return `hue-rotate(${h*Math.PI*2}rad)`;\r\n\t\treturn `hue-rotate(${h * 360}deg)`;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IColor}\r\n */\r\nclass ColorHSV {\r\n\tconstructor(h = 0, s = 0, v = 0) {\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.h = h;\r\n\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.s = s;\r\n\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.v = v;\r\n\t}\r\n\tclone() {\r\n\t\treturn new this.constructor(this.h, this.s, this.v);\r\n\t}\r\n\tselfAdd(hsv) {\r\n\t\tthis.h += hsv.h;\r\n\t\tthis.s += hsv.s;\r\n\t\tthis.v += hsv.v;\r\n\t\treturn this;\r\n\t}\r\n\tselfSub(hsv) {\r\n\t\tthis.h += hsv.h;\r\n\t\tthis.s += hsv.s;\r\n\t\tthis.v += hsv.v;\r\n\t\treturn this;\r\n\t}\r\n\tselfScale(s) {\r\n\t\tthis.h *= s;\r\n\t\tthis.s *= s;\r\n\t\tthis.v *= s;\r\n\t\treturn this;\r\n\t}\r\n\tstatic add(hsv, hsv2) {\r\n\t\treturn new ColorHSV(hsv.s + hsv2.s, hsv.s + hsv2.s, hsv.v + hsv2.v);\r\n\t}\r\n\tstatic sub(hsv, hsv2) {\r\n\t\treturn new ColorHSV(hsv.s - hsv2.s, hsv.s - hsv2.s, hsv.v - hsv2.v);\r\n\t}\r\n\tstatic scale(hsv, s) {\r\n\t\treturn new ColorHSV(hsv.h * s, hsv.s * s, hsv.v * s);\r\n\t}\r\n\ttoString() {\r\n\t\tconst { h, s, v } = this;\r\n\t\treturn "hsv(" + h + "," + s + "," + v + ")";\r\n\t}\r\n\r\n\t//toRgb() {\r\n\t//}\r\n\t//fromRgb(r, g, b) {\r\n\t//}\r\n\r\n\t//static fromRgb(r, g, b) {\r\n\t//}\r\n\r\n\ttoFilter() {\r\n\t\tconst { h, s, v } = this;\r\n\t\treturn `hue-rotate(${h*Math.PI*2}rad) saturate(${s}) brightness(${v})`;\r\n\t}\r\n\ttoFilterLimit() {\r\n\t\treturn `hue-rotate(${h * 360}deg) saturate(${Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["clamp"])(Math.trunc(s * 100), 0, 100)}%) brightness(${Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["clamp"])(Math.trunc(v * 100), 0, 100)}%)`;\r\n\t}\r\n\ttoFilter_HueRotate() {\r\n\t\tconst { h, s, v } = this;\r\n\t\t//return `hue-rotate(${h*Math.PI*2}rad)`;\r\n\t\treturn `hue-rotate(${h * 360}deg)`;\r\n\t}\r\n}\r\n\r\nclass _ImageFilter {\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t * @param {number} contrast 0 ~ 100\r\n\t */\r\n\tconstructor(hue = 0, sat = 100, bri = 100, contrast = 100) {\r\n\t\tthis._hue = hue;\r\n\t\tthis._sat = sat;\r\n\t\tthis._bri = bri;\r\n\t\tthis._contrast = contrast;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hue() {\r\n\t\treturn this._hue;\r\n\t}\r\n\tset hue(value) {\r\n\t\tthis._hue = value % 360;\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget sat() {\r\n\t\treturn this._sat;\r\n\t}\r\n\tset sat(value) {\r\n\t\tthis._sat = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget bri() {\r\n\t\treturn this._bri;\r\n\t}\r\n\tset bri(value) {\r\n\t\tthis._bri = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget contrast() {\r\n\t\treturn this._contrast;\r\n\t}\r\n\tset contrast(value) {\r\n\t\tthis._contrast = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\ttoRgb() {\r\n\t\treturn ColorRGB.fromHsv(this._hue / 360, this._sat / 100, this._bri / 100);\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn `hue-rotate(${this._hue}deg) saturate(${this._sat}%) brightness(${this._bri}%) contrast(${this._contrast}%)`;// + ImageFilter.globalFilter\r\n\t}\r\n}\r\n\r\n/**\r\n * default no filter\r\n */\r\nclass ImageFilter extends _ImageFilter {\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t * @param {number} contrast 0 ~ 100\r\n\t */\r\n\tconstructor(hue = 0, sat = 100, bri = 100, contrast = 100) {\r\n\t\tsuper(hue, sat, bri, contrast);\r\n\t\tif (arguments.length) {\r\n\t\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hue() {\r\n\t\treturn 0;\r\n\t}\r\n\tset hue(value) {\r\n\t\tthis._hue = value % 360;\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget sat() {\r\n\t\treturn 100;\r\n\t}\r\n\tset sat(value) {\r\n\t\tthis._sat = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget bri() {\r\n\t\treturn 100;\r\n\t}\r\n\tset bri(value) {\r\n\t\tthis._bri = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget contrast() {\r\n\t\treturn 100;\r\n\t}\r\n\tset contrast(value) {\r\n\t\tthis._contrast = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\r\n\ttoRgb() {\r\n\t\treturn new ColorRGB(255, 255, 255);\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn "none";//ImageFilter.globalFilter ? ImageFilter.globalFilter : "none";\r\n\t}\r\n\r\n\tget isEmpty() {\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n_ImageFilter.prototype.reset = function () {\r\n\tthis._hue = 0;\r\n\tthis._sat = 100;\r\n\tthis._bri = 100;\r\n\tthis._contrast = 100;\r\n\tthis.__proto__ = ImageFilter.prototype;\r\n}\r\n\r\n/**\r\n * @param {number} hue 0 ~ 360\r\n * @param {number} sat 0 ~ 100\r\n * @param {number} bri 0 ~ 100\r\n * @param {number} contrast 0 ~ 100\r\n */\r\n_ImageFilter.prototype.set = function (hue, sat, bri, contrast) {\r\n\tif ((hue % 360 == 0) && sat == 100 && bri == 100 && contrast == 100) {\r\n\t\tthis.reset();\r\n\t}\r\n\telse {\r\n\t\tthis.hue = hue;\r\n\t\tthis.sat = sat;\r\n\t\tthis.bri = bri;\r\n\t\tthis._contrast = contrast;\r\n\t}\r\n}\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass IGraph {\r\n\tconstructor(url, info) {\r\n\t\t/** @type {number} */\r\n\t\tlet width;\r\n\t\t/** @type {number} */\r\n\t\tlet height;\r\n\r\n\t\t/** @type {{ src: string, naturalWidth: number, naturalHeight: number }} */\r\n\t\tthis.texture = null;\r\n\t\t\r\n\t\t/** @type {Promise} if loaded will delete */\r\n\t\tthis.$promise = undefined;\r\n\t\t\r\n\t\t/** @type {WebGLBuffer} */\r\n\t\tthis._vbo = undefined;\r\n\r\n\t\t/** @type {number} - origin.x */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} - origin.y */\r\n\t\tthis.y = 0;\r\n\r\n\t\tif (info) {\r\n\t\t\tif (info.width > 0) {\r\n\t\t\t\twidth = Number(info.width);\r\n\t\t\t}\r\n\t\t\tif (info.height > 0) {\r\n\t\t\t\theight = Number(info.height);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\twidth = 0;\r\n\t\t\theight = 0;\r\n\t\t}\r\n\t\t/** @type {number} */\r\n\t\tthis.width = width;\r\n\t\t/** @type {number} */\r\n\t\tthis.height = height;\r\n\t\t//\r\n\t\tObject.defineProperty(this, "width", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis._isLoaded_or_doload();\r\n\t\t\t\treturn width;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(this, "height", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis._isLoaded_or_doload();\r\n\t\t\t\treturn height;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/** @type {WebGLTexture} */\r\n\t\t/** this.texture = null; */\r\n\t\tObject.defineProperty(this, "texture", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis.__isLoading_or_doload();\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.isLoaded = this._isLoaded_or_doload;\r\n\r\n\t\t/** @type {function():void} */\r\n\t\t//this._onload = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = "";\r\n\t\tif (url) {\r\n\t\t\tthis.src = url;\r\n\t\t}\r\n\t}\r\n\t_dispose() {\r\n\t\t//only check is loaded\r\n\t\tif (this._isLoaded()) {\r\n\t\t\t//this._engine.deleteGraph(this);\r\n\r\n\t\t\tif (this._gl) {\r\n\t\t\t\talert("gl.deleteTexture(this.texture)");\r\n\t\t\t\tthis._gl.deleteTexture(this.texture);\r\n\t\t\t}\r\n\t\t\tthis.texture = null;\r\n\t\t}\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthrow new Error("Not Implement");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthrow new Error("Not Implement");\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {IRenderer}\r\n\t */\r\n\tget _engine() {\r\n\t\tthrow new Error("Not Implement");\r\n\t}\r\n\t/**\r\n\t * @returns {WebGLRenderingContext}\r\n\t */\r\n\tget _gl() {\r\n\t\tthrow new Error("Not Implement");\r\n\t}\r\n\t/**\r\n\t * @returns {CanvasRenderingContext2D}\r\n\t */\r\n\tget _ctx() {\r\n\t\tthrow new Error("Not Implement");\r\n\t}\r\n\r\n\t//get width() { return this.matrix[0]; }\r\n\t//set width(val) { this.matrix[0] = val; }\r\n\r\n\t//get height() { return this.matrix[5]; }\r\n\t//set height(val) { this.matrix[5] = val; }\r\n\r\n\t//get x() { return this.matrix[12]; }\r\n\t//set x(val) { this.matrix[12] = val; }\r\n\r\n\t//get y() { return this.matrix[13]; }\r\n\t//set y(val) { this.matrix[13] = val; }\r\n\r\n\t/** ?? */\r\n\tget z() { return 0; }\r\n\t//get z() { return this.matrix[14]; }\r\n\t//set z(val) { this.matrix[14] = val; }\r\n\r\n\t/** ?? */\r\n\tset src(url) {\r\n\t\tdebugger;//this.src is broken;\r\n\t\t\r\n\t\tthis._dispose();\r\n\t\tthis._url = url;\r\n\t}\r\n\r\n\t_isLoaded() {\r\n\t\treturn this.texture != null;\r\n\t}\r\n\t_isLoaded_or_doload() {\r\n\t\tif (!this.texture) {\r\n\t\t\tthis.__loadTexture();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t__isLoading_or_doload() {\r\n\t\tif (this.$promise === null) {\r\n\t\t\tthis.__loadTexture();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t__loadTexture() {\r\n\t\tif (this.$promise) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._url == "") {\r\n\t\t\tdebugger;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet image = new Image();\r\n\r\n\t\tthis.$promise = new Promise((resolve, reject) => {\r\n\t\t\tconst engine = this._engine;\r\n\r\n\t\t\timage.addEventListener("load", e => {\r\n\t\t\t\tif (!e.target.naturalWidth || !e.target.naturalHeight) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.isLoaded = this._isLoaded;//end\r\n\r\n\t\t\t\tdelete this.width;\r\n\t\t\t\tthis.width = e.target.naturalWidth;\r\n\r\n\t\t\t\tdelete this.height;\r\n\t\t\t\tthis.height = e.target.naturalHeight;\r\n\r\n\t\t\t\tdelete this.texture;\r\n\t\t\t\tthis.texture = engine._handleImageLoaded(e.target, this);\r\n\t\t\t\t\t\r\n\t\t\t\tdelete this.$promise;\r\n\r\n\t\t\t\tresolve(this);\r\n\t\t\t}, false);\r\n\r\n\t\t\timage.addEventListener("error", e => {\r\n\t\t\t\tthis.isLoaded = this._isLoaded;//no try again\r\n\r\n\t\t\t\tif (this._graph_rect) {\r\n\t\t\t\t\tdelete this.texture;\r\n\t\t\t\t\tthis.texture = this._graph_rect;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.error("404: " + image.src);\r\n\r\n\t\t\t\tresolve(this);\r\n\t\t\t}, false);\r\n\t\t});\r\n\r\n\t\tIGraph.$all_promise.push(this.$promise);\r\n\r\n\t\timage.src = $get.imageUrl(this._url);\r\n\t}\r\n\r\n\tstatic async waitAllLoaded(cbfunc) {\r\n\t\tlet tasks = IGraph.$all_promise;\r\n\t\tconsole.log("image loaded: " + IGraph.$all_promise.length);\r\n\t\tIGraph.$all_promise = [];\r\n\t\tawait Promise.all(tasks);\r\n\t\tif (cbfunc) {\r\n\t\t\tcbfunc();\r\n\t\t}\r\n\t}\r\n}\r\nIGraph.$all_promise = [];\r\n\r\nclass IRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {IGraph} */\r\n\t\tthis._GraphType = null;\r\n\r\n\t\t/**\r\n\t\t * @type {CanvasRenderingContext2D}\r\n\t\t */\r\n\t\tthis.ctx = null;\r\n\t\t\r\n\t\tthis._globalAlpha = 1;\r\n\t\tthis._globalAlphaStack = [];\r\n\t\t\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.screen_size = new _math_js__WEBPACK_IMPORTED_MODULE_0__["Vec2"](0, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tinit(id) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\t/** @type {IGraph} */\r\n\tget Graph() {\r\n\t\tthrow new Error("Not implement");\r\n\t\treturn new IGraph();\r\n\t}\r\n\r\n\t/**\r\n\t * swap Canvas and Canvas2\r\n\t * if (imageSmoothingEnabled) this._ctx2.imageSmoothingEnabled = true;\r\n\t * @param {boolean} imageSmoothingEnabled\r\n\t */\r\n\t$swapCanvas(imageSmoothingEnabled) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\t/** @type {HTMLCanvasElement} */\r\n\tget _canvas() {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLImageElement} image\r\n\t * @param {IGraph} graph\r\n\t * @param {Object} texture\r\n\t */\r\n\t_handleImageLoaded(image, graph) {\r\n\t\tthrow new Error("Not implement");\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} r\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t * @param {number} sx\r\n\t * @param {number} sy\r\n\t */\r\n\tsetRotationTranslationScale(r, dx, dy, sx, sy) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} m11\r\n\t * @param {number} m12\r\n\t * @param {number} m21\r\n\t * @param {number} m22\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t */\r\n\tsetTransform(m11, m12, m21, m22, dx, dy) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\tloadIdentity() {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\tpushMatrix() {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\tpopMatrix() {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\ttranslate(x, y) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\ttranslate3d(x, y, z) {\r\n\t\talert("\'translate3d\' is deprecated");\r\n\t\tthrow new Error("\'translate3d\' is deprecated");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tscale(x, y) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\tscale3d(x, y, z) {\r\n\t\talert("\'scale3d\' is deprecated");\r\n\t\tthrow new Error("\'scale3d\' is deprecated");\r\n\t}\r\n\t/**\r\n\t * @param {number} r - rad\r\n\t */\r\n\trotate(r) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\t/** @type {number[]} */\r\n\tget color() {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\t/** @type {number[]} - 4fv */\r\n\tset color(f4v) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {vec4} f4v - vec4: array\r\n\t */\r\n\tColor4fv(f4v) {\r\n\t\talert("\'Color4fv\' is deprecated");\r\n\t\tthrow new Error("\'Color4fv\' is deprecated");\r\n\t}\r\n\r\n\t/**\r\n\t * @type {number} global alpha\r\n\t */\r\n\tget globalAlpha() {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\tset globalAlpha(value) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\tpushGlobalAlpha() {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\tpopGlobalAlpha(value) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\tclearDrawScreen() {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t */\r\n\tdrawGraph(graph) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\tdrawGraph2(graph, x, y, z) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawRect(x, y, w, h) {\r\n\t\tif (arguments.length != 4) {\r\n\t\t\tconsole.error("drawRect(x, y, w, h) need 4 param");\r\n\t\t}\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {ColorRGB} color\r\n\t */\r\n\tdrawColoredGraph(graph, x, y, color) {\r\n\t\tthrow new Error("Not implement");\r\n\t}\r\n}\r\n\r\nclass ImageDataHelper {\r\n\tconstructor() {\r\n\t\tthis.canvas = document.createElement(\'canvas\');\r\n\t\tthis.ctx = this.canvas.getContext(\'2d\');\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} width\r\n\t * @param {number} height\r\n\t */\r\n\tresize(width, height) {\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {HTMLImageElement} image\r\n\t * @returns {ImageData}\r\n\t */\r\n\timageToImagedata(image) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = image.width;\r\n\t\tcanvas.height = image.height;\r\n\t\tctx.drawImage(image, 0, 0);\r\n\r\n\t\treturn ctx.getImageData(0, 0, image.width, image.height);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ImageData} imagedata\r\n\t * @returns {string}\r\n\t */\r\n\timagedataToDataURL(imagedata) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = imagedata.width;\r\n\t\tcanvas.height = imagedata.height;\r\n\t\tctx.putImageData(imagedata, 0, 0);\r\n\t\t\r\n\t\treturn canvas.toDataURL();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ImageData} imagedata\r\n\t * @returns {HTMLImageElement}\r\n\t */\r\n\timagedataToImage(imagedata) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = imagedata.width;\r\n\t\tcanvas.height = imagedata.height;\r\n\t\tctx.putImageData(imagedata, 0, 0);\r\n\r\n\t\tlet image = new Image();\r\n\t\timage.src = canvas.toDataURL();\r\n\t\treturn image;\r\n\t}\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///333\n')},335:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/gl-matrix/src/gl-matrix.js + 8 modules\nvar gl_matrix = __webpack_require__(430);\n\n// EXTERNAL MODULE: ./src/game/math.js\nvar math = __webpack_require__(332);\n\n// EXTERNAL MODULE: ./src/game/IRenderer.js\nvar IRenderer = __webpack_require__(333);\n\n// CONCATENATED MODULE: ./src/game/Canvas2DRenderer.js\n\ufeff\r\n\r\n\r\n\r\n\r\n//import WebGL2D from "./WebGL2D/WebGL2D.js";\r\n//window.$WebGL2D = WebGL2D;\r\n\r\nwindow._experimental_particle = true;\r\n\r\nclass Canvas2DRenderer_MyMatrix2D {\r\n\tconstructor() {\r\n\t\tthis.$temp_vec2 = gl_matrix["d" /* vec2 */].create();\r\n\r\n\t\t/** @type {mat2d} */\r\n\t\tthis.$transform = gl_matrix["a" /* mat2d */].create();\r\n\t}\r\n\tloadIdentity() {\r\n\t\tgl_matrix["a" /* mat2d */].identity(this.$transform);\r\n\t}\r\n\t/**\r\n\t * @param {number} m11\r\n\t * @param {number} m12\r\n\t * @param {number} m21\r\n\t * @param {number} m22\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t */\r\n\tsetTransform(m11, m12, m21, m22, dx, dy) {\r\n\t\tthis.$transform[0] = m11;\r\n\t\tthis.$transform[1] = m12;\r\n\t\tthis.$transform[2] = m21;\r\n\t\tthis.$transform[3] = m22;\r\n\t\tthis.$transform[4] = dx;\r\n\t\tthis.$transform[5] = dy;\r\n\t}\r\n\t/**\r\n\t * @param {Canvas2DContextAttributes} ctx\r\n\t */\r\n\tapplyTransform(ctx) {\r\n\t\tconst m11 = this.$transform[0], m12 = this.$transform[1],\r\n\t\t\tm21 = this.$transform[2], m22 = this.$transform[3],\r\n\t\t\tdx = this.$transform[4], dy = this.$transform[5];\r\n\t\tctx.setTransform(m11, m12, m21, m22, dx, dy);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\ttranslate(x, y) {\r\n\t\tthis.$temp_vec2[0] = x;\r\n\t\tthis.$temp_vec2[1] = y;\r\n\t\tgl_matrix["a" /* mat2d */].translate(this.$transform, this.$transform, this.$temp_vec2);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tscale(x, y) {\r\n\t\tthis.$temp_vec2[0] = x;\r\n\t\tthis.$temp_vec2[1] = y;\r\n\t\tgl_matrix["a" /* mat2d */].scale(this.$transform, this.$transform, this.$temp_vec2);\r\n\t}\r\n\t/**\r\n\t * @param {number} r - rad\r\n\t */\r\n\trotate(r) {\r\n\t\tgl_matrix["a" /* mat2d */].rotate(this.$transform, this.$transform, a);\r\n\t}\r\n\r\n\ttoMat4() {\r\n\t\tgl_matrix["b" /* mat4 */].fromScaling\r\n\t}\r\n}\r\n\r\nwindow.$mat2d = gl_matrix["a" /* mat2d */];\r\nwindow.$mat4 = gl_matrix["b" /* mat4 */];\r\nwindow.$quat = gl_matrix["c" /* quat */];\r\n\r\n/**\r\n * @implements {IRenderer}\r\n */\r\nclass Canvas2DRenderer_Engine extends IRenderer["IRenderer"] {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tthis.ctx = null;\r\n\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tthis._ctx2 = null;\r\n\t\t/** @type {HTMLCanvasElement} */\r\n\t\tthis._canvas2 = null;\r\n\r\n\t\t(function (that) {\r\n\t\t\tthat._GraphType = class Graph extends IRenderer["IGraph"] {\r\n\t\t\t\tget _engine() {\r\n\t\t\t\t\treturn that;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tinit(id) {\r\n\t\tlet canvas = document.getElementById(id);\r\n\t\tlet canvas2 = this._canvas2 = document.getElementById(id + "2");\r\n\r\n\t\tthis.ctx = canvas.getContext("2d", { alpha: true });//new WebGL2D(canvas);//\r\n\t\tthis._ctx2 = canvas2.getContext("2d", { alpha: true });\r\n\r\n\t\tthis.ctx.imageSmoothingEnabled = false;\r\n\t\tthis._ctx2.imageSmoothingEnabled = true;\r\n\r\n\t\t_resize_canvas(canvas, window.innerWidth, window.innerHeight);\r\n\t\t_resize_canvas(canvas2, window.innerWidth, window.innerHeight);\r\n\r\n\t\twindow.onresize = e => {\r\n\t\t\tconst width = window.innerWidth;\r\n\t\t\tconst height = window.innerHeight;\r\n\r\n\t\t\t_resize_canvas(canvas, width, height);\r\n\t\t\t_resize_canvas(canvas2, width, height);\r\n\r\n\t\t\tdocument.getElementById("screen_width").innerHTML = width;\r\n\t\t\tdocument.getElementById("screen_height").innerHTML = height;\r\n\r\n\t\t\tthis.screen_size.x = width;\r\n\t\t\tthis.screen_size.y = height;\r\n\t\t}\r\n\t\twindow.onresize();\r\n\r\n\t\tfunction _resize_canvas(canvas, width, height) {\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\t}\r\n\r\n\t\tthis._graph_rect = new this.Graph();\r\n\t\tthis._graph_rect._url = $get.imageUrl("/1x1");\r\n\t}\r\n\r\n\t/** @type {IGraph} */\r\n\tget Graph() {\r\n\t\treturn this._GraphType;\r\n\t}\r\n\r\n\t/** @type {HTMLCanvasElement} */\r\n\tget _canvas() {\r\n\t\treturn this.ctx.canvas;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLImageElement} image\r\n\t * @param {IGraph} graph\r\n\t * @param {HTMLImageElement} texture\r\n\t */\r\n\t_handleImageLoaded(image, graph) {\r\n\t\treturn image;\r\n\t}\r\n\r\n\t/**\r\n\t * swap Canvas and Canvas2\r\n\t * if (imageSmoothingEnabled) this._ctx2.imageSmoothingEnabled = true;\r\n\t * @param {boolean} imageSmoothingEnabled\r\n\t */\r\n\t$swapCanvas(imageSmoothingEnabled) {\r\n\t\tif (imageSmoothingEnabled) {\r\n\t\t\tthis.ctx.imageSmoothingEnabled = false;\r\n\t\t\tthis._ctx2.imageSmoothingEnabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.ctx.imageSmoothingEnabled = false;\r\n\t\t\tthis._ctx2.imageSmoothingEnabled = false;\r\n\t\t}\r\n\r\n\t\t//swap\r\n\t\tconst ctx2 = this._ctx2;\r\n\t\tthis._ctx2 = this.ctx;\r\n\t\tthis.ctx = ctx2;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} m11\r\n\t * @param {number} m12\r\n\t * @param {number} m21\r\n\t * @param {number} m22\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t */\r\n\tsetTransform(m11, m12, m21, m22, dx, dy) {\r\n\t\tthis.ctx.setTransform(m11, m12, m21, m22, dx, dy);\r\n\t}\r\n\r\n\tloadIdentity() {\r\n\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t}\r\n\tpushMatrix() {\r\n\t\tthis.ctx.save();\r\n\t}\r\n\tpopMatrix() {\r\n\t\tthis.ctx.restore();\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\ttranslate(x, y) {\r\n\t\tthis.ctx.translate(x, y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tscale(x, y) {\r\n\t\tthis.ctx.scale(x, y);\r\n\t}\r\n\t/**\r\n\t * @param {number} r - rad\r\n\t */\r\n\trotate(r) {\r\n\t\tthis.ctx.rotate(r);\r\n\t}\r\n\r\n\t///** @type {number[]} */\r\n\t//get color() {\r\n\t//\treturn this._color;\r\n\t//}\r\n\r\n\t/** @type {number[]} - 4fv */\r\n\tset color(f4v) {\r\n\t\t//f4v = [...f4v];\r\n\r\n\t\tconst red = Math.trunc(f4v[0] * 255);\r\n\t\tconst green = Math.trunc(f4v[1] * 255);\r\n\t\tconst blue = Math.trunc(f4v[2] * 255);\r\n\t\tconst alpha = f4v[3].toFixed(3);\r\n\r\n\t\tthis.ctx.fillStyle = `rgba(${red},${green},${blue},${alpha})`;\r\n\t\tthis.ctx.strokeStyle = this.ctx.fillStyle;\r\n\r\n\t\t//f4v.r = red;\r\n\t\t//f4v.g = green;\r\n\t\t//f4v.b = blue;\r\n\t\t//f4v.a = alpha;\r\n\t\t//this._color = f4v;\r\n\t}\r\n\r\n\tget globalAlpha() {\r\n\t\treturn this._globalAlpha;//this.ctx.globalAlpha;\r\n\t}\r\n\tset globalAlpha(value) {\r\n\t\tif (false) {}\r\n\t\tif (this._globalAlpha != value) {\r\n\t\t\tthis._globalAlpha = value;\r\n\t\t\tthis.ctx.globalAlpha = value;\r\n\t\t}\r\n\t}\r\n\tpushGlobalAlpha() {\r\n\t\tthis._globalAlphaStack.push(this.ctx.globalAlpha);\r\n\t}\r\n\tpopGlobalAlpha(value) {\r\n\t\tthis.ctx.globalAlpha = this._globalAlphaStack.pop();\r\n\t}\r\n\r\n\tbeginScene() {\r\n\t\t// nothing\r\n\t}\r\n\r\n\tendScene() {\r\n\t\t// nothing\r\n\t}\r\n\r\n\tclearDrawScreen() {\r\n\t\tconst c = this.ctx.canvas;\r\n\t\tthis.ctx.clearRect(0, 0, c.width, c.height);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawRect(x, y, w, h) {\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tlet ctx = this.ctx;\r\n\r\n\t\tif (arguments.length == 4) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillRect(x, y, w, h);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t */\r\n\tdrawGraph(graph) {\r\n\t\tif (graph.isLoaded()) {\r\n\t\t\tthis.ctx.drawImage(graph.texture, 0, 0);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\tdrawGraph2(graph, x, y, z) {\r\n\t\tif (graph.isLoaded()) {\r\n\t\t\tthis.ctx.drawImage(graph.texture, x, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} sx - The x coordinate where to start clipping\r\n\t * @param {number} sy - The y coordinate where to start clipping\r\n\t * @param {number} swidth - The width of the clipped image\r\n\t * @param {number} sheight - The height of the clipped image\r\n\t * @param {number} x - The x coordinate where to place the image on the canvas\r\n\t * @param {number} y - The y coordinate where to place the image on the canvas\r\n\t * @param {number} width - The width of the image to use (stretch or reduce the image)\r\n\t * @param {number} height - The height of the image to use (stretch or reduce the image)\r\n\t */\r\n\t_drawImage(graph, sx, sy, swidth, sheight, x, y, width, height) {\r\n\t\tif (graph.isLoaded()) {\r\n\t\t\tthis.ctx.drawImage(graph.texture, sx, sy, swidth, sheight, x, y, width, height);\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * https://stackoverflow.com/a/42856420\r\n\t */\r\n\t__drawMirrorImage(ctx, image, x = 0, y = 0, horizontal = false, vertical = false){\r\n\t\tctx.save();  // save the current canvas state\r\n\t\tctx.setTransform(\r\n\t\t\thorizontal ? -1 : 1, 0, // set the direction of x axis\r\n\t\t\t0, vertical ? -1 : 1,   // set the direction of y axis\r\n\t\t\tx + horizontal ? image.width : 0, // set the x origin\r\n\t\t\ty + vertical ? image.height : 0   // set the y origin\r\n\t\t\t);\r\n\t\tctx.drawImage(image,0,0);\r\n\t\tctx.restore(); // restore the state as it was when this function was called\r\n\t}\r\n\t\r\n\t/**\r\n\t * whitout save/restore canvas\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\t_drawRotaGraph(graph, x, y, angle, flip) {\r\n\t\t// this.ctx.lineWidth = 1;\r\n\t\t\t\r\n\t\t// this.ctx.beginPath();\r\n\t\t// this.ctx.moveTo(0, 0);\r\n\t\t// this.ctx.lineTo(32, 0);\r\n\t\t// this.ctx.strokeStyle = "darkred";\r\n\t\t// this.ctx.stroke();\r\n\t\t\r\n\t\t// this.ctx.beginPath();\r\n\t\t// this.ctx.moveTo(0, 0);\r\n\t\t// this.ctx.lineTo(0, 32);\r\n\t\t// this.ctx.strokeStyle = "darkgreen";\r\n\t\t// this.ctx.stroke();\r\n\t\t\r\n\t\t// this.ctx.beginPath();\r\n\t\t// this.ctx.rect(0, 0, 32, 32);\r\n\t\t// this.ctx.fillStyle = "rgba(66,66,66,0.5)";\r\n\t\t// this.ctx.fill();\r\n\t\t\r\n\t\t//if (flip || angle > 0.001 || angle < -0.001) {\r\n\t\t\tif (1) {\r\n\t\t\t\tthis.translate(x, y);//zorder ? graph.z\r\n\r\n\t\t\t\tthis.rotate(angle);\r\n\r\n\t\t\t\tthis.scale(flip ? -1 : 1, 1);\r\n\r\n\t\t\t\tthis.translate(-graph.x, -graph.y);//reset rotation center\r\n\r\n\t\t\t\tthis.drawGraph(graph);\r\n\t\t\t}\r\n\t\t\telse {}\r\n\t\t\t// {\r\n\t\t\t\t// this.ctx.beginPath();\r\n\t\t\t\t// this.ctx.moveTo(cx, cy);\r\n\t\t\t\t// this.ctx.lineTo(cx + 32, cy);\r\n\t\t\t\t// this.ctx.strokeStyle = "red";\r\n\t\t\t\t// this.ctx.stroke();\r\n\t\t\t\t\r\n\t\t\t\t// this.ctx.beginPath();\r\n\t\t\t\t// this.ctx.moveTo(cx, cy);\r\n\t\t\t\t// this.ctx.lineTo(cx, cy + 32);\r\n\t\t\t\t// this.ctx.strokeStyle = "#0f0";\r\n\t\t\t\t// this.ctx.stroke();\r\n\t\t\t// }\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\tthis.drawGraph2(graph, x - graph.x, y - graph.y);\r\n\t\t//}\r\n\t}\r\n\t/**\r\n\t * whit save/restore canvas\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\tdrawRotaGraph(graph, x, y, angle, flip) {\r\n\t\t//if (flip || angle > 0.001 || angle < -0.001) {\r\n\t\t\tthis.pushMatrix();\r\n\t\t\tthis._drawRotaGraph(graph, x, y, angle, flip);\r\n\t\t\tthis.popMatrix();\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\tthis.drawGraph2(graph, x - graph.x, y - graph.y);\r\n\t\t//}\r\n\t}\r\n\t/**\r\n\t * whitout save/restore canvas\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} clip\r\n\t * @param {boolean} flip\r\n\t */\r\n\t_drawRotaClipGraph(graph, x, y, angle, center, clip, flip) {\r\n\t\tconst orix = center.x;\r\n\t\tconst oriy = center.y;\r\n\r\n\t\tconst px = (x - (flip ? -orix + clip.width : orix));\r\n\t\tconst py = (y - oriy);\r\n\r\n\t\tconst cx = clip.width * 0.5;\r\n\t\tconst cy = clip.height * 0.5;\r\n\r\n\t\tthis.translate(px, py);//zorder ? graph.z\r\n\r\n\t\tthis.translate(cx, cy);//回転行列の中心 (rotationCenter)\r\n\t\tthis.rotate(angle);\r\n\r\n\t\tthis.scale(flip ? -1 : 1, 1);\r\n\r\n\t\tthis.translate(-cx, -cy);//reset rotation center\r\n\r\n\t\tthis._drawImage(graph, clip.x, clip.y, clip.width, clip.height, 0, 0, clip.width, clip.height);\r\n\t}\r\n\t/**\r\n\t * whit save/restore canvas\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} clip\r\n\t * @param {boolean} flip\r\n\t */\r\n\tdrawRotaClipGraph(graph, x, y, angle, center, clip, flip) {\r\n\t\tthis.pushMatrix();\r\n\t\tthis._drawRotaClipGraph(graph, x, y, angle, center, clip, flip);\r\n\t\tthis.popMatrix();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {ColorRGB} color\r\n\t */\r\n\tdrawColoredGraph(graph, x, y, color) {//destination\r\n\t\tif (graph.isLoaded()) {\r\n\t\t\tif (_experimental_particle) {\r\n\t\t\t\tthis.ctx.filter = color.toFilter();\r\n\t\t\t\tthis.ctx.drawImage(graph.texture, x - graph.x, y - graph.y);\r\n\t\t\t\tthis.ctx.filter = "none";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst _ctx = this._ctx2;\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = "copy";\r\n\t\t\t\t_ctx.drawImage(graph.texture, 0, 0);\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = "darken";\r\n\t\t\t\t_ctx.fillStyle = color.toString();\r\n\t\t\t\t_ctx.beginPath();\r\n\t\t\t\t//_ctx.arc(graph.width / 2, graph.width / 2, graph.width / 2, 0, Math.PI * 2);\r\n\t\t\t\t_ctx.rect(0, 0, graph.width, graph.width);\r\n\t\t\t\t_ctx.fill();\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = "destination-atop";\r\n\t\t\t\t_ctx.drawImage(graph.texture, 0, 0);\r\n\r\n\t\t\t\tthis.ctx.drawImage(this._canvas2, x - graph.x, y - graph.y);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} scaleX\r\n\t * @param {number} scaleY\r\n\t * @param {ColorRGB} color\r\n\t */\r\n\tdrawColoredGraph2(graph, x, y, scaleX, scaleY, color) {//destination\r\n\t\tif (graph.isLoaded()) {\r\n\t\t\tconst width = graph.width;\r\n\t\t\tconst height = graph.height;\r\n\t\t\tconst swidth = width * scaleX;\r\n\t\t\tconst sheight = height * scaleY;\r\n\r\n\t\t\tif (_experimental_particle) {\r\n\t\t\t\tthis.ctx.filter = color.toFilter();\r\n\t\t\t\tthis.ctx.drawImage(graph.texture, 0, 0, width, height, x - graph.x, y - graph.y, swidth, sheight);\r\n\t\t\t\tthis.ctx.filter = "none";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst _ctx = this._ctx2;\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = "copy";\r\n\t\t\t\t_ctx.drawImage(graph.texture, 0, 0, swidth, swidth);\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = "darken";\r\n\t\t\t\t_ctx.fillStyle = color.toString();\r\n\t\t\t\t_ctx.beginPath();\r\n\t\t\t\t//_ctx.arc(graph.width / 2, graph.height / 2, graph.width / 2, 0, Math.PI * 2);\r\n\t\t\t\t_ctx.rect(0, 0, swidth, swidth);\r\n\t\t\t\t_ctx.fill();\r\n\r\n\t\t\t\t_ctx.globalCompositeOperation = "destination-atop";\r\n\t\t\t\t_ctx.drawImage(graph.texture, 0, 0, swidth, swidth);\r\n\r\n\t\t\t\tthis.ctx.drawImage(this._canvas2, 0, 0, swidth, sheight, x - graph.x, y - graph.y, swidth, sheight);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/game/Engine.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "engine", function() { return engine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Graph", function() { return Graph; });\n\ufeff\r\n\r\n//import { Engine } from "./WebGLRenderer.js";\r\n\r\nconst engine = new Canvas2DRenderer_Engine();\r\n\r\nwindow.$engine = engine;\r\n\r\n/**\r\n * @type {IGraph}\r\n */\r\nconst Graph = engine.Graph;\r\n\r\n\r\nengine.init("glcanvas");\r\n\r\nif (SSAnim) {\r\n\tif (engine.ctx) {\r\n\t\tSSAnim.SetRenderingContext(engine.ctx);\r\n\t}\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///335\n')}}]);