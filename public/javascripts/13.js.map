{"version":3,"sources":["webpack:///./src/game/math.js"],"names":["Vec2","[object Object]","x","y","arguments","length","this","empty","constructor","v2","v","floatVar","s","ang","Math","cos","sin","r","sqrt","p2","lx","ly","Rectangle","left","top","width","height","other","value","right","bottom","size","center","w2","h23","cx","cy","hwidth","hheight","Randomizer","trunc","random","min","max","clamp"],"mappings":"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","file":"13.js","sourcesContent":["ï»¿\r\nexport class Vec2 {\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tconstructor(x, y) {\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\t\telse if (arguments.length == 1 && x != null) {\r\n\t\t\tthis.x = x.x | 0;\r\n\t\t\tthis.y = x.y | 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t}\r\n\t}\r\n\tstatic get() {\r\n\t\treturn new Vec2(...arguments);\r\n\t}\r\n\tstatic get empty() {\r\n\t\treturn new Vec2(0, 0);\r\n\t}\r\n\t/**\r\n\t * @returns {Vec2}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor(this.x, this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {...Vec2} v2\r\n\t * @returns {Vec2}\r\n\t */\r\n\tadd(v2) {\r\n\t\tlet x = this.x, y = this.y;\r\n\t\tfor (let v of arguments) {\r\n\t\t\tif (v == null)\r\n\t\t\t\tcontinue;\r\n\t\t\tx = x + v.x;\r\n\t\t\ty = y + v.y;\r\n\t\t}\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\t/**\r\n\t * @param {...Vec2} v2\r\n\t * @returns {Vec2}\r\n\t */\r\n\tsub(v2) {\r\n\t\tlet x = this.x, y = this.y;\r\n\t\tfor (let v of arguments) {\r\n\t\t\tif (v == null)\r\n\t\t\t\tcontinue;\r\n\t\t\tx = x - v.x;\r\n\t\t\ty = y - v.y;\r\n\t\t}\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\r\n\t/** @param {Vec2} v */\r\n\tplus(v) {\r\n\t\treturn new Vec2(this.x + v.x, this.y + v.y);\r\n\t}\r\n\t/** @param {Vec2} v */\r\n\tminus(v) {\r\n\t\treturn new Vec2(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tplus2(x, y) {\r\n\t\treturn new Vec2(this.x + x, this.y + y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tminus2(x, y) {\r\n\t\treturn new Vec2(this.x - x, this.y - y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} floatVar\r\n\t */\r\n\tmul(floatVar) {\r\n\t\treturn new Vec2(this.x * floatVar, this.y * floatVar);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} s\r\n\t */\r\n\tscale(s) {\r\n\t\treturn new Vec2(this.x * s, this.y * s);\r\n\t}\r\n\r\n\trotate(ang) {\r\n\t\tlet x = Math.cos(ang) * this.x - Math.sin(ang) * this.y;\r\n\t\tlet y = Math.sin(ang) * this.x + Math.cos(ang) * this.y;\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\r\n\tnormalize() {\r\n\t\tlet r = Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t\treturn new Vec2(this.x / r, this.y / r);\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn Math.sqrt(x ** 2 + y ** 2);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} p2\r\n\t */\r\n\tdistance_sq(p2) {\r\n\t\tlet lx = this.x - p2.x;\r\n\t\tlet ly = this.y - p2.y;\r\n\t\treturn lx * lx + ly * ly;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} p2\r\n\t */\r\n\tdistance(p2) {\r\n\t\tlet lx = this.x - p2.x;\r\n\t\tlet ly = this.y - p2.y;\r\n\t\treturn Math.sqrt(lx * lx + ly * ly);\r\n\t}\r\n}\r\n\r\nexport class Rectangle {\r\n\t/**\r\n\t * Rectangle(left: number, top: number, width: number, height: number)\r\n\t * Rectangle(position: Vec2, size: Vec2)\r\n\t * Rectangle(rect: Rectangle)\r\n\t * Rectangle() => Rectangle(0, 0, 0, 0)\r\n\t */\r\n\tconstructor() {\r\n\t\tif (arguments.length == 4) {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = arguments[0];//x\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = arguments[1];//y\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = arguments[2];//w\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = arguments[3];//h\r\n\t\t}\r\n\t\telse if (arguments.length == 2) {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = arguments[0].x;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = arguments[0].y;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = arguments[1].x;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = arguments[1].y;\r\n\t\t}\r\n\t\telse if (arguments[0] instanceof Rectangle) {\r\n\t\t\tconst r = arguments[0];\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = r.left;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = r.top;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = r.width;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = r.height;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Rectangle} other\r\n\t */\r\n\tcopy(other) {\r\n\t\tthis.left = other.left;\r\n\t\tthis.top = other.top;\r\n\t\tthis.width = other.width;\r\n\t\tthis.height = other.height;\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\treturn new Rectangle(this);\r\n\t}\r\n\r\n\tget x() { return this.left; }\r\n\tset x(value) { this.left = value; }\r\n\r\n\tget y() { return this.top; }\r\n\tset y(value) { this.top = value; }\r\n\r\n\tget right() { return this.left + this.width; }\r\n\tset right(value) { this.width = value - this.left; }\r\n\r\n\tget bottom() { return this.top + this.height; }\r\n\tset bottom(value) { this.height = value - this.top; }\r\n\r\n\tget size() {\r\n\t\treturn new Vec2(this.width, this.height);\r\n\t}\r\n\tset size(value) {\r\n\t\tthis.width = value.width || value.x;\r\n\t\tthis.height = value.height || value.y;\r\n\t}\r\n\r\n\tget center() {\r\n\t\treturn new Vec2(this.left + this.width * 0.5, this.top + this.height * 2 / 3);\r\n\t}\r\n\tset center(value) {\r\n\t\tlet w2 = this.width * 0.5;\r\n\t\tlet h23 = this.height * 2 / 3;\r\n\r\n\t\tthis.left = value.x - w2;\r\n\t\tthis.top = value.y - h23;\r\n\t}\r\n\tsetCenter(cx, cy) {\r\n\t\tlet w2 = this.width * 0.5;\r\n\t\tlet h23 = this.height * 2 / 3;\r\n\r\n\t\tthis.left = cx - w2;\r\n\t\tthis.top = cy - h23;\r\n\t}\r\n\t\r\n\tcollide(other) {\r\n\t\treturn (this.left < other.right && this.right > other.left && this.top < other.bottom && this.bottom > other.top);\r\n\t}\r\n\t\r\n\tcollide4f(left, right, top, bottom) {\r\n\t\treturn (this.left < right && this.right > left && this.top < bottom && this.bottom > top);\r\n\t}\r\n\tcollide4f2(x, y, hwidth, hheight) {\r\n\t\tconst left = x - hwidth;\r\n\t\tconst top = y - hheight;\r\n\t\tconst right = x + hwidth;\r\n\t\tconst bottom = y + hheight;\r\n\t\treturn (this.left < right && this.right > left && this.top < bottom && this.bottom > top);\r\n\t}\r\n\tcollide2f2x(x, hwidth) {\r\n\t\tconst left = x - hwidth;\r\n\t\tconst right = x + hwidth;\r\n\t\treturn (this.left < right && this.right > left);\r\n\t}\r\n\tcollide2f2y(y, hheight) {\r\n\t\tconst top = y - hheight;\r\n\t\tconst bottom = y + hheight;\r\n\t\treturn (this.top < bottom && this.bottom > top);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} left\r\n\t * @param {number} top\r\n\t * @param {number} right\r\n\t * @param {number} bottom\r\n\t */\r\n\tparse(left, top, right, bottom) {\r\n\t\tthis.left = left;\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} left\r\n\t * @param {number} top\r\n\t * @param {number} right\r\n\t * @param {number} bottom\r\n\t */\r\n\tstatic parse(left, top, right, bottom) {\r\n\t\treturn new Rectangle(left, top, right - left, bottom - top);\r\n\t}\r\n}\r\n\r\nexport class Randomizer {\r\n\tstatic nextInt(r) {\r\n\t\treturn Math.trunc(Math.random() * 100 % r);\r\n\t}\r\n\tstatic randInt(min, max) {\r\n\t\treturn Math.trunc(min + Math.random() * 100 % (max - min + 1));\r\n\t}\r\n\tstatic nextBoolean() {\r\n\t\treturn !(Math.trunc(Math.random() * 100) & 1);\r\n\t}\r\n}\r\n\r\nexport function clamp(value, min, max) {\r\n\treturn Math.max(min, Math.min(value, max));\r\n}\r\n\r\n"],"sourceRoot":""}