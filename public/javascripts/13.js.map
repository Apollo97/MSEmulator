{"version":3,"sources":["webpack:///./src/game/math.js","webpack:///./src/game/IRenderer.js"],"names":["Vec2","[object Object]","x","y","arguments","length","this","empty","constructor","v2","v","floatVar","s","ang","Math","cos","sin","r","sqrt","p2","lx","ly","Rectangle","left","top","width","height","other","value","right","bottom","size","center","w2","h23","cx","cy","hwidth","hheight","Randomizer","trunc","random","min","max","clamp","ColorRGB","g","b","rgb","rgb2","col","h","d","ColorHSV","i","floor","f","p","q","t","toHSV","PI","Object","_math_js__WEBPACK_IMPORTED_MODULE_0__","hsv","hsv2","_ImageFilter","hue","sat","bri","contrast","_hue","_sat","_bri","_contrast","reset","fromHsv","ImageFilter","super","__proto__","prototype","isEmpty","set","IGraph","url","info","$promise","undefined","_vbo","Number","defineProperty","configurable","enumerable","get","_isLoaded_or_doload","__isLoading_or_doload","isLoaded","_url","src","_isLoaded","_gl","alert","deleteTexture","texture","Error","_engine","_ctx","z","_dispose","__loadTexture","image","Image","Promise","resolve","reject","engine","addEventListener","e","target","naturalWidth","naturalHeight","_handleImageLoaded","_graph_rect","console","error","$all_promise","push","$get","imageUrl","cbfunc","tasks","log","all","IRenderer","_GraphType","ctx","_globalAlpha","_globalAlphaStack","screen_size","id","Graph","imageSmoothingEnabled","_canvas","graph","dx","dy","sx","sy","m11","m12","m21","m22","color","f4v","globalAlpha","w","ImageDataHelper","canvas","document","createElement","getContext","clearRect","drawImage","getImageData","imagedata","putImageData","toDataURL"],"mappings":"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","file":"13.js","sourcesContent":["﻿\r\nexport class Vec2 {\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tconstructor(x, y) {\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\t\telse if (arguments.length == 1 && x != null) {\r\n\t\t\tthis.x = x.x | 0;\r\n\t\t\tthis.y = x.y | 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t}\r\n\t}\r\n\tstatic get() {\r\n\t\treturn new Vec2(...arguments);\r\n\t}\r\n\tstatic get empty() {\r\n\t\treturn new Vec2(0, 0);\r\n\t}\r\n\t/**\r\n\t * @returns {Vec2}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor(this.x, this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {...Vec2} v2\r\n\t * @returns {Vec2}\r\n\t */\r\n\tadd(v2) {\r\n\t\tlet x = this.x, y = this.y;\r\n\t\tfor (let v of arguments) {\r\n\t\t\tif (v == null)\r\n\t\t\t\tcontinue;\r\n\t\t\tx = x + v.x;\r\n\t\t\ty = y + v.y;\r\n\t\t}\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\t/**\r\n\t * @param {...Vec2} v2\r\n\t * @returns {Vec2}\r\n\t */\r\n\tsub(v2) {\r\n\t\tlet x = this.x, y = this.y;\r\n\t\tfor (let v of arguments) {\r\n\t\t\tif (v == null)\r\n\t\t\t\tcontinue;\r\n\t\t\tx = x - v.x;\r\n\t\t\ty = y - v.y;\r\n\t\t}\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\r\n\t/** @param {Vec2} v */\r\n\tplus(v) {\r\n\t\treturn new Vec2(this.x + v.x, this.y + v.y);\r\n\t}\r\n\t/** @param {Vec2} v */\r\n\tminus(v) {\r\n\t\treturn new Vec2(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tplus2(x, y) {\r\n\t\treturn new Vec2(this.x + x, this.y + y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tminus2(x, y) {\r\n\t\treturn new Vec2(this.x - x, this.y - y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} floatVar\r\n\t */\r\n\tmul(floatVar) {\r\n\t\treturn new Vec2(this.x * floatVar, this.y * floatVar);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} s\r\n\t */\r\n\tscale(s) {\r\n\t\treturn new Vec2(this.x * s, this.y * s);\r\n\t}\r\n\r\n\trotate(ang) {\r\n\t\tlet x = Math.cos(ang) * this.x - Math.sin(ang) * this.y;\r\n\t\tlet y = Math.sin(ang) * this.x + Math.cos(ang) * this.y;\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\r\n\tnormalize() {\r\n\t\tlet r = Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t\treturn new Vec2(this.x / r, this.y / r);\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn Math.sqrt(x ** 2 + y ** 2);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} p2\r\n\t */\r\n\tdistance_sq(p2) {\r\n\t\tlet lx = this.x - p2.x;\r\n\t\tlet ly = this.y - p2.y;\r\n\t\treturn lx * lx + ly * ly;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} p2\r\n\t */\r\n\tdistance(p2) {\r\n\t\tlet lx = this.x - p2.x;\r\n\t\tlet ly = this.y - p2.y;\r\n\t\treturn Math.sqrt(lx * lx + ly * ly);\r\n\t}\r\n}\r\n\r\nexport class Rectangle {\r\n\t/**\r\n\t * Rectangle(left: number, top: number, width: number, height: number)\r\n\t * Rectangle(position: Vec2, size: Vec2)\r\n\t * Rectangle(rect: Rectangle)\r\n\t * Rectangle() => Rectangle(0, 0, 0, 0)\r\n\t */\r\n\tconstructor() {\r\n\t\tif (arguments.length == 4) {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = arguments[0];//x\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = arguments[1];//y\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = arguments[2];//w\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = arguments[3];//h\r\n\t\t}\r\n\t\telse if (arguments.length == 2) {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = arguments[0].x;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = arguments[0].y;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = arguments[1].x;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = arguments[1].y;\r\n\t\t}\r\n\t\telse if (arguments[0] instanceof Rectangle) {\r\n\t\t\tconst r = arguments[0];\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = r.left;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = r.top;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = r.width;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = r.height;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Rectangle} other\r\n\t */\r\n\tcopy(other) {\r\n\t\tthis.left = other.left;\r\n\t\tthis.top = other.top;\r\n\t\tthis.width = other.width;\r\n\t\tthis.height = other.height;\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\treturn new Rectangle(this);\r\n\t}\r\n\r\n\tget x() { return this.left; }\r\n\tset x(value) { this.left = value; }\r\n\r\n\tget y() { return this.top; }\r\n\tset y(value) { this.top = value; }\r\n\r\n\tget right() { return this.left + this.width; }\r\n\tset right(value) { this.width = value - this.left; }\r\n\r\n\tget bottom() { return this.top + this.height; }\r\n\tset bottom(value) { this.height = value - this.top; }\r\n\r\n\tget size() {\r\n\t\treturn new Vec2(this.width, this.height);\r\n\t}\r\n\tset size(value) {\r\n\t\tthis.width = value.width || value.x;\r\n\t\tthis.height = value.height || value.y;\r\n\t}\r\n\r\n\tget center() {\r\n\t\treturn new Vec2(this.left + this.width * 0.5, this.top + this.height * 2 / 3);\r\n\t}\r\n\tset center(value) {\r\n\t\tlet w2 = this.width * 0.5;\r\n\t\tlet h23 = this.height * 2 / 3;\r\n\r\n\t\tthis.left = value.x - w2;\r\n\t\tthis.top = value.y - h23;\r\n\t}\r\n\tsetCenter(cx, cy) {\r\n\t\tlet w2 = this.width * 0.5;\r\n\t\tlet h23 = this.height * 2 / 3;\r\n\r\n\t\tthis.left = cx - w2;\r\n\t\tthis.top = cy - h23;\r\n\t}\r\n\t\r\n\tcollide(other) {\r\n\t\treturn (this.left < other.right && this.right > other.left && this.top < other.bottom && this.bottom > other.top);\r\n\t}\r\n\t\r\n\tcollide4f(left, right, top, bottom) {\r\n\t\treturn (this.left < right && this.right > left && this.top < bottom && this.bottom > top);\r\n\t}\r\n\tcollide4f2(x, y, hwidth, hheight) {\r\n\t\tconst left = x - hwidth;\r\n\t\tconst top = y - hheight;\r\n\t\tconst right = x + hwidth;\r\n\t\tconst bottom = y + hheight;\r\n\t\treturn (this.left < right && this.right > left && this.top < bottom && this.bottom > top);\r\n\t}\r\n\tcollide2f2x(x, hwidth) {\r\n\t\tconst left = x - hwidth;\r\n\t\tconst right = x + hwidth;\r\n\t\treturn (this.left < right && this.right > left);\r\n\t}\r\n\tcollide2f2y(y, hheight) {\r\n\t\tconst top = y - hheight;\r\n\t\tconst bottom = y + hheight;\r\n\t\treturn (this.top < bottom && this.bottom > top);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} left\r\n\t * @param {number} top\r\n\t * @param {number} right\r\n\t * @param {number} bottom\r\n\t */\r\n\tparse(left, top, right, bottom) {\r\n\t\tthis.left = left;\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} left\r\n\t * @param {number} top\r\n\t * @param {number} right\r\n\t * @param {number} bottom\r\n\t */\r\n\tstatic parse(left, top, right, bottom) {\r\n\t\treturn new Rectangle(left, top, right - left, bottom - top);\r\n\t}\r\n}\r\n\r\nexport class Randomizer {\r\n\tstatic nextInt(r) {\r\n\t\treturn Math.trunc(Math.random() * 100 % r);\r\n\t}\r\n\tstatic randInt(min, max) {\r\n\t\treturn Math.trunc(min + Math.random() * 100 % (max - min + 1));\r\n\t}\r\n\tstatic nextBoolean() {\r\n\t\treturn !(Math.trunc(Math.random() * 100) & 1);\r\n\t}\r\n}\r\n\r\nexport function clamp(value, min, max) {\r\n\treturn Math.max(min, Math.min(value, max));\r\n}\r\n\r\n","﻿\r\nimport { Vec2, clamp } from './math.js';\r\n\r\nfunction colorInt24Parse2(col) {\r\n\treturn \"#\" + [((col >> 16) & 0xFF), ((col >> 8) & 0xFF), (col & 0xFF)].map(a=>a.toString(16).padStart(2, \"0\")).join(\"\");\r\n}\r\nfunction colorInt24Parse(col) {\r\n\treturn \"#\" + [((col >> 16) & 0xFF), ((col >> 8) & 0xFF), (col & 0xFF)].map(a=>a.toString(16).padStart(2, \"0\")).join(\"\");\r\n}\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nclass IColor {\r\n\ttoFilter() {\r\n\t}\r\n\ttoFilterLimit() {\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IColor}\r\n */\r\nexport class ColorRGB {\r\n\tconstructor(r = 0, g = 0, b = 0) {\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.r = r;\r\n\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.g = g;\r\n\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.b = b;\r\n\t}\r\n\tclone() {\r\n\t\treturn new this.constructor(this.r, this.g, this.b);\r\n\t}\r\n\tselfAdd(rgb) {\r\n\t\tthis.r += rgb.r;\r\n\t\tthis.g += rgb.g;\r\n\t\tthis.b += rgb.b;\r\n\t\treturn this;\r\n\t}\r\n\tselfSub(rgb) {\r\n\t\tthis.r += rgb.r;\r\n\t\tthis.g += rgb.g;\r\n\t\tthis.b += rgb.b;\r\n\t\treturn this;\r\n\t}\r\n\tselfScale(s) {\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\t\treturn this;\r\n\t}\r\n\tstatic add(rgb, rgb2) {\r\n\t\treturn new ColorRGB(rgb.r + rgb2.r, rgb.g + rgb2.g, rgb.b + rgb2.b);\r\n\t}\r\n\tstatic sub(rgb, rgb2) {\r\n\t\treturn new ColorRGB(rgb.r - rgb2.r, rgb.g - rgb2.g, rgb.b - rgb2.b);\r\n\t}\r\n\tstatic scale(rgb, s) {\r\n\t\treturn new ColorRGB(rgb.r * s, rgb.g * s, rgb.b * s);\r\n\t}\r\n\ttoString() {\r\n\t\tconst r = Math.trunc(this.r);\r\n\t\tconst g = Math.trunc(this.g);\r\n\t\tconst b = Math.trunc(this.b);\r\n\t\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n\t}\r\n\tstatic fromInt24(col) {\r\n\t\treturn new ColorRGB((col >> 16) & 0xFF, (col >> 8) & 0xFF, col & 0xFF);\r\n\t}\r\n\t/**\r\n\t * source: https://gist.github.com/mjackson/5311256#file-color-conversion-algorithms-js-L84\r\n\t * Converts an RGB color value to HSV. Conversion formula\r\n\t * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n\t * Assumes r, g, and b are contained in the set [0, 255] and\r\n\t * returns h, s, and v in the set [0, 1].\r\n\t *\r\n\t * @returns {ColorHSV}\r\n\t */\r\n\ttoHSV() {\r\n\t\tlet r = this.r /= 255, g = this.g /= 255, b = this.b /= 255;\r\n\r\n\t\tlet max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n\t\tlet h, s, v = max;\r\n\r\n\t\tlet d = max - min;\r\n\t\ts = max == 0 ? 0 : d / max;\r\n\r\n\t\tif (max == min) {\r\n\t\t\th = 0; // achromatic\r\n\t\t} else {\r\n\t\t\tswitch (max) {\r\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\r\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\r\n\t\t\t}\r\n\r\n\t\t\th /= 6;\r\n\t\t}\r\n\r\n\t\treturn new ColorHSV(h, s, v);\r\n\t}\r\n\t/**\r\n\t * source: https://gist.github.com/mjackson/5311256#file-color-conversion-algorithms-js-L119\r\n\t * Converts an HSV color value to RGB. Conversion formula\r\n\t * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n\t * Assumes h, s, and v are contained in the set [0, 1] and\r\n\t * returns r, g, and b in the set [0, 255].\r\n\t *\r\n\t * @param {number} h The hue\r\n\t * @param {number} s The saturation\r\n\t * @param {number} v The value\r\n\t */\r\n\tfromHsv(h, s, v) {\r\n\t\tlet r, g, b;\r\n\r\n\t\tlet i = Math.floor(h * 6);\r\n\t\tlet f = h * 6 - i;\r\n\t\tlet p = v * (1 - s);\r\n\t\tlet q = v * (1 - f * s);\r\n\t\tlet t = v * (1 - (1 - f) * s);\r\n\r\n\t\tswitch (i % 6) {\r\n\t\t\tcase 0: r = v, g = t, b = p; break;\r\n\t\t\tcase 1: r = q, g = v, b = p; break;\r\n\t\t\tcase 2: r = p, g = v, b = t; break;\r\n\t\t\tcase 3: r = p, g = q, b = v; break;\r\n\t\t\tcase 4: r = t, g = p, b = v; break;\r\n\t\t\tcase 5: r = v, g = p, b = q; break;\r\n\t\t}\r\n\r\n\t\tthis.r = r * 255;\r\n\t\tthis.g = g * 255;\r\n\t\tthis.b = b * 255;\r\n\t}\r\n\tstatic fromHsv(h, s, v) {\r\n\t\tlet r, g, b;\r\n\r\n\t\tlet i = Math.floor(h * 6);\r\n\t\tlet f = h * 6 - i;\r\n\t\tlet p = v * (1 - s);\r\n\t\tlet q = v * (1 - f * s);\r\n\t\tlet t = v * (1 - (1 - f) * s);\r\n\r\n\t\tswitch (i % 6) {\r\n\t\t\tcase 0: r = v, g = t, b = p; break;\r\n\t\t\tcase 1: r = q, g = v, b = p; break;\r\n\t\t\tcase 2: r = p, g = v, b = t; break;\r\n\t\t\tcase 3: r = p, g = q, b = v; break;\r\n\t\t\tcase 4: r = t, g = p, b = v; break;\r\n\t\t\tcase 5: r = v, g = p, b = q; break;\r\n\t\t}\r\n\r\n\t\treturn new ColorRGB(r * 255, g * 255, b * 255);\r\n\t}\r\n\ttoFilter() {\r\n\t\tlet { h, s, v } = this.toHSV();\r\n\t\treturn `hue-rotate(${h*Math.PI*2}rad) saturate(${s}) brightness(${v})`;\r\n\t}\r\n\ttoFilterLimit() {\r\n\t\treturn `hue-rotate(${h * 360}deg) saturate(${clamp(Math.trunc(s * 100), 0, 100)}%) brightness(${clamp(Math.trunc(v * 100), 0, 100)}%)`;\r\n\t}\r\n\ttoFilter_HueRotate() {\r\n\t\tconst { h, s, v } = this;\r\n\t\t//return `hue-rotate(${h*Math.PI*2}rad)`;\r\n\t\treturn `hue-rotate(${h * 360}deg)`;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IColor}\r\n */\r\nexport class ColorHSV {\r\n\tconstructor(h = 0, s = 0, v = 0) {\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.h = h;\r\n\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.s = s;\r\n\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.v = v;\r\n\t}\r\n\tclone() {\r\n\t\treturn new this.constructor(this.h, this.s, this.v);\r\n\t}\r\n\tselfAdd(hsv) {\r\n\t\tthis.h += hsv.h;\r\n\t\tthis.s += hsv.s;\r\n\t\tthis.v += hsv.v;\r\n\t\treturn this;\r\n\t}\r\n\tselfSub(hsv) {\r\n\t\tthis.h += hsv.h;\r\n\t\tthis.s += hsv.s;\r\n\t\tthis.v += hsv.v;\r\n\t\treturn this;\r\n\t}\r\n\tselfScale(s) {\r\n\t\tthis.h *= s;\r\n\t\tthis.s *= s;\r\n\t\tthis.v *= s;\r\n\t\treturn this;\r\n\t}\r\n\tstatic add(hsv, hsv2) {\r\n\t\treturn new ColorHSV(hsv.s + hsv2.s, hsv.s + hsv2.s, hsv.v + hsv2.v);\r\n\t}\r\n\tstatic sub(hsv, hsv2) {\r\n\t\treturn new ColorHSV(hsv.s - hsv2.s, hsv.s - hsv2.s, hsv.v - hsv2.v);\r\n\t}\r\n\tstatic scale(hsv, s) {\r\n\t\treturn new ColorHSV(hsv.h * s, hsv.s * s, hsv.v * s);\r\n\t}\r\n\ttoString() {\r\n\t\tconst { h, s, v } = this;\r\n\t\treturn \"hsv(\" + h + \",\" + s + \",\" + v + \")\";\r\n\t}\r\n\r\n\t//toRgb() {\r\n\t//}\r\n\t//fromRgb(r, g, b) {\r\n\t//}\r\n\r\n\t//static fromRgb(r, g, b) {\r\n\t//}\r\n\r\n\ttoFilter() {\r\n\t\tconst { h, s, v } = this;\r\n\t\treturn `hue-rotate(${h*Math.PI*2}rad) saturate(${s}) brightness(${v})`;\r\n\t}\r\n\ttoFilterLimit() {\r\n\t\treturn `hue-rotate(${h * 360}deg) saturate(${clamp(Math.trunc(s * 100), 0, 100)}%) brightness(${clamp(Math.trunc(v * 100), 0, 100)}%)`;\r\n\t}\r\n\ttoFilter_HueRotate() {\r\n\t\tconst { h, s, v } = this;\r\n\t\t//return `hue-rotate(${h*Math.PI*2}rad)`;\r\n\t\treturn `hue-rotate(${h * 360}deg)`;\r\n\t}\r\n}\r\n\r\nexport class _ImageFilter {\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t * @param {number} contrast 0 ~ 100\r\n\t */\r\n\tconstructor(hue = 0, sat = 100, bri = 100, contrast = 100) {\r\n\t\tthis._hue = hue;\r\n\t\tthis._sat = sat;\r\n\t\tthis._bri = bri;\r\n\t\tthis._contrast = contrast;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hue() {\r\n\t\treturn this._hue;\r\n\t}\r\n\tset hue(value) {\r\n\t\tthis._hue = value % 360;\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget sat() {\r\n\t\treturn this._sat;\r\n\t}\r\n\tset sat(value) {\r\n\t\tthis._sat = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget bri() {\r\n\t\treturn this._bri;\r\n\t}\r\n\tset bri(value) {\r\n\t\tthis._bri = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget contrast() {\r\n\t\treturn this._contrast;\r\n\t}\r\n\tset contrast(value) {\r\n\t\tthis._contrast = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\ttoRgb() {\r\n\t\treturn ColorRGB.fromHsv(this._hue / 360, this._sat / 100, this._bri / 100);\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn `hue-rotate(${this._hue}deg) saturate(${this._sat}%) brightness(${this._bri}%) contrast(${this._contrast}%)`;// + ImageFilter.globalFilter\r\n\t}\r\n}\r\n\r\n/**\r\n * default no filter\r\n */\r\nexport class ImageFilter extends _ImageFilter {\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t * @param {number} contrast 0 ~ 100\r\n\t */\r\n\tconstructor(hue = 0, sat = 100, bri = 100, contrast = 100) {\r\n\t\tsuper(hue, sat, bri, contrast);\r\n\t\tif (arguments.length) {\r\n\t\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hue() {\r\n\t\treturn 0;\r\n\t}\r\n\tset hue(value) {\r\n\t\tthis._hue = value % 360;\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget sat() {\r\n\t\treturn 100;\r\n\t}\r\n\tset sat(value) {\r\n\t\tthis._sat = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget bri() {\r\n\t\treturn 100;\r\n\t}\r\n\tset bri(value) {\r\n\t\tthis._bri = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget contrast() {\r\n\t\treturn 100;\r\n\t}\r\n\tset contrast(value) {\r\n\t\tthis._contrast = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\r\n\ttoRgb() {\r\n\t\treturn new ColorRGB(255, 255, 255);\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn \"none\";//ImageFilter.globalFilter ? ImageFilter.globalFilter : \"none\";\r\n\t}\r\n\r\n\tget isEmpty() {\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n_ImageFilter.prototype.reset = function () {\r\n\tthis._hue = 0;\r\n\tthis._sat = 100;\r\n\tthis._bri = 100;\r\n\tthis._contrast = 100;\r\n\tthis.__proto__ = ImageFilter.prototype;\r\n}\r\n\r\n/**\r\n * @param {number} hue 0 ~ 360\r\n * @param {number} sat 0 ~ 100\r\n * @param {number} bri 0 ~ 100\r\n * @param {number} contrast 0 ~ 100\r\n */\r\n_ImageFilter.prototype.set = function (hue, sat, bri, contrast) {\r\n\tif ((hue % 360 == 0) && sat == 100 && bri == 100 && contrast == 100) {\r\n\t\tthis.reset();\r\n\t}\r\n\telse {\r\n\t\tthis.hue = hue;\r\n\t\tthis.sat = sat;\r\n\t\tthis.bri = bri;\r\n\t\tthis._contrast = contrast;\r\n\t}\r\n}\r\n\r\n/**\r\n * @abstract\r\n */\r\nexport class IGraph {\r\n\tconstructor(url, info) {\r\n\t\t/** @type {number} */\r\n\t\tlet width;\r\n\t\t/** @type {number} */\r\n\t\tlet height;\r\n\t\t\r\n\t\t/** @type {Promise} if loaded will delete */\r\n\t\tthis.$promise = undefined;\r\n\t\t\r\n\t\t/** @type {WebGLBuffer} */\r\n\t\tthis._vbo = undefined;\r\n\r\n\t\t/** @type {number} - origin.x */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} - origin.y */\r\n\t\tthis.y = 0;\r\n\r\n\t\tif (info) {\r\n\t\t\tif (info.width > 0) {\r\n\t\t\t\twidth = Number(info.width);\r\n\t\t\t}\r\n\t\t\tif (info.height > 0) {\r\n\t\t\t\theight = Number(info.height);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\twidth = 0;\r\n\t\t\theight = 0;\r\n\t\t}\r\n\t\t/** @type {number} */\r\n\t\tthis.width = width;\r\n\t\t/** @type {number} */\r\n\t\tthis.height = height;\r\n\t\t//\r\n\t\tObject.defineProperty(this, \"width\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis._isLoaded_or_doload();\r\n\t\t\t\treturn width;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(this, \"height\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis._isLoaded_or_doload();\r\n\t\t\t\treturn height;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/** @type {WebGLTexture} */\r\n\t\t/** this.texture = null; */\r\n\t\tObject.defineProperty(this, \"texture\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis.__isLoading_or_doload();\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.isLoaded = this._isLoaded_or_doload;\r\n\r\n\t\t/** @type {function():void} */\r\n\t\t//this._onload = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = \"\";\r\n\t\tif (url) {\r\n\t\t\tthis.src = url;\r\n\t\t}\r\n\t}\r\n\t_dispose() {\r\n\t\t//only check is loaded\r\n\t\tif (this._isLoaded()) {\r\n\t\t\t//this._engine.deleteGraph(this);\r\n\r\n\t\t\tif (this._gl) {\r\n\t\t\t\talert(\"gl.deleteTexture(this.texture)\");\r\n\t\t\t\tthis._gl.deleteTexture(this.texture);\r\n\t\t\t}\r\n\t\t\tthis.texture = null;\r\n\t\t}\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {IRenderer}\r\n\t */\r\n\tget _engine() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\t/**\r\n\t * @returns {WebGLRenderingContext}\r\n\t */\r\n\tget _gl() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\t/**\r\n\t * @returns {CanvasRenderingContext2D}\r\n\t */\r\n\tget _ctx() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t//get width() { return this.matrix[0]; }\r\n\t//set width(val) { this.matrix[0] = val; }\r\n\r\n\t//get height() { return this.matrix[5]; }\r\n\t//set height(val) { this.matrix[5] = val; }\r\n\r\n\t//get x() { return this.matrix[12]; }\r\n\t//set x(val) { this.matrix[12] = val; }\r\n\r\n\t//get y() { return this.matrix[13]; }\r\n\t//set y(val) { this.matrix[13] = val; }\r\n\r\n\t/** ?? */\r\n\tget z() { return 0; }\r\n\t//get z() { return this.matrix[14]; }\r\n\t//set z(val) { this.matrix[14] = val; }\r\n\r\n\t/** ?? */\r\n\tset src(url) {\r\n\t\tdebugger;//this.src is broken;\r\n\t\t\r\n\t\tthis._dispose();\r\n\t\tthis._url = url;\r\n\t}\r\n\r\n\t_isLoaded() {\r\n\t\treturn this.texture != null;\r\n\t}\r\n\t_isLoaded_or_doload() {\r\n\t\tif (!this.texture) {\r\n\t\t\tthis.__loadTexture();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t__isLoading_or_doload() {\r\n\t\tif (this.$promise === null) {\r\n\t\t\tthis.__loadTexture();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t__loadTexture() {\r\n\t\tif (this.$promise) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._url == \"\") {\r\n\t\t\tdebugger;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet image = new Image();\r\n\r\n\t\tthis.$promise = new Promise((resolve, reject) => {\r\n\t\t\tconst engine = this._engine;\r\n\r\n\t\t\timage.addEventListener(\"load\", e => {\r\n\t\t\t\tif (!e.target.naturalWidth || !e.target.naturalHeight) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.isLoaded = this._isLoaded;//end\r\n\r\n\t\t\t\tdelete this.width;\r\n\t\t\t\tthis.width = e.target.naturalWidth;\r\n\r\n\t\t\t\tdelete this.height;\r\n\t\t\t\tthis.height = e.target.naturalHeight;\r\n\r\n\t\t\t\tdelete this.texture;\r\n\t\t\t\tthis.texture = engine._handleImageLoaded(e.target, this);\r\n\t\t\t\t\t\r\n\t\t\t\tdelete this.$promise;\r\n\r\n\t\t\t\tresolve(this);\r\n\t\t\t}, false);\r\n\r\n\t\t\timage.addEventListener(\"error\", e => {\r\n\t\t\t\tthis.isLoaded = this._isLoaded;//no try again\r\n\r\n\t\t\t\tif (this._graph_rect) {\r\n\t\t\t\t\tdelete this.texture;\r\n\t\t\t\t\tthis.texture = this._graph_rect;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.error(\"404: \" + image.src);\r\n\r\n\t\t\t\tresolve(this);\r\n\t\t\t}, false);\r\n\t\t});\r\n\r\n\t\tIGraph.$all_promise.push(this.$promise);\r\n\r\n\t\timage.src = $get.imageUrl(this._url);\r\n\t}\r\n\r\n\tstatic async waitAllLoaded(cbfunc) {\r\n\t\tlet tasks = IGraph.$all_promise;\r\n\t\tconsole.log(\"image loaded: \" + IGraph.$all_promise.length);\r\n\t\tIGraph.$all_promise = [];\r\n\t\tawait Promise.all(tasks);\r\n\t\tif (cbfunc) {\r\n\t\t\tcbfunc();\r\n\t\t}\r\n\t}\r\n}\r\nIGraph.$all_promise = [];\r\n\r\nexport class IRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {IGraph} */\r\n\t\tthis._GraphType = null;\r\n\r\n\t\t/**\r\n\t\t * @type {CanvasRenderingContext2D}\r\n\t\t */\r\n\t\tthis.ctx = null;\r\n\t\t\r\n\t\tthis._globalAlpha = 1;\r\n\t\tthis._globalAlphaStack = [];\r\n\t\t\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.screen_size = new Vec2(0, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tinit(id) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {IGraph} */\r\n\tget Graph() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\treturn new IGraph();\r\n\t}\r\n\r\n\t/**\r\n\t * swap Canvas and Canvas2\r\n\t * if (imageSmoothingEnabled) this._ctx2.imageSmoothingEnabled = true;\r\n\t * @param {boolean} imageSmoothingEnabled\r\n\t */\r\n\t$swapCanvas(imageSmoothingEnabled) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {HTMLCanvasElement} */\r\n\tget _canvas() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLImageElement} image\r\n\t * @param {IGraph} graph\r\n\t * @param {Object} texture\r\n\t */\r\n\t_handleImageLoaded(image, graph) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} r\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t * @param {number} sx\r\n\t * @param {number} sy\r\n\t */\r\n\tsetRotationTranslationScale(r, dx, dy, sx, sy) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} m11\r\n\t * @param {number} m12\r\n\t * @param {number} m21\r\n\t * @param {number} m22\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t */\r\n\tsetTransform(m11, m12, m21, m22, dx, dy) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tloadIdentity() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\tpushMatrix() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\tpopMatrix() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\ttranslate(x, y) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\ttranslate3d(x, y, z) {\r\n\t\talert(\"'translate3d' is deprecated\");\r\n\t\tthrow new Error(\"'translate3d' is deprecated\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tscale(x, y) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\tscale3d(x, y, z) {\r\n\t\talert(\"'scale3d' is deprecated\");\r\n\t\tthrow new Error(\"'scale3d' is deprecated\");\r\n\t}\r\n\t/**\r\n\t * @param {number} r - rad\r\n\t */\r\n\trotate(r) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {number[]} */\r\n\tget color() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {number[]} - 4fv */\r\n\tset color(f4v) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {vec4} f4v - vec4: array\r\n\t */\r\n\tColor4fv(f4v) {\r\n\t\talert(\"'Color4fv' is deprecated\");\r\n\t\tthrow new Error(\"'Color4fv' is deprecated\");\r\n\t}\r\n\r\n\t/**\r\n\t * @type {number} global alpha\r\n\t */\r\n\tget globalAlpha() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\tset globalAlpha(value) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tpushGlobalAlpha() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tpopGlobalAlpha(value) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tclearDrawScreen() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t */\r\n\tdrawGraph(graph) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\tdrawGraph2(graph, x, y, z) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawRect(x, y, w, h) {\r\n\t\tif (arguments.length != 4) {\r\n\t\t\tconsole.error(\"drawRect(x, y, w, h) need 4 param\");\r\n\t\t}\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {ColorRGB} color\r\n\t */\r\n\tdrawColoredGraph(graph, x, y, color) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nexport class ImageDataHelper {\r\n\tconstructor() {\r\n\t\tthis.canvas = document.createElement('canvas');\r\n\t\tthis.ctx = this.canvas.getContext('2d');\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} width\r\n\t * @param {number} height\r\n\t */\r\n\tresize(width, height) {\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {HTMLImageElement} image\r\n\t * @returns {ImageData}\r\n\t */\r\n\timageToImagedata(image) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = image.width;\r\n\t\tcanvas.height = image.height;\r\n\t\tctx.drawImage(image, 0, 0);\r\n\r\n\t\treturn ctx.getImageData(0, 0, image.width, image.height);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ImageData} imagedata\r\n\t * @returns {string}\r\n\t */\r\n\timagedataToDataURL(imagedata) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = imagedata.width;\r\n\t\tcanvas.height = imagedata.height;\r\n\t\tctx.putImageData(imagedata, 0, 0);\r\n\t\t\r\n\t\treturn canvas.toDataURL();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ImageData} imagedata\r\n\t * @returns {HTMLImageElement}\r\n\t */\r\n\timagedataToImage(imagedata) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = imagedata.width;\r\n\t\tcanvas.height = imagedata.height;\r\n\t\tctx.putImageData(imagedata, 0, 0);\r\n\r\n\t\tlet image = new Image();\r\n\t\timage.src = canvas.toDataURL();\r\n\t\treturn image;\r\n\t}\r\n}\r\n"],"sourceRoot":""}