{"version":3,"sources":["webpack:///./src/game/IRenderer.js","webpack:///./src/game/math.js"],"names":["ColorRGB","[object Object]","r","g","b","this","constructor","rgb","s","rgb2","Math","trunc","col","h","max","min","v","d","ColorHSV","i","floor","f","p","q","t","toHSV","PI","Object","_math_js__WEBPACK_IMPORTED_MODULE_0__","hsv","hsv2","_ImageFilter","hue","sat","bri","contrast","_hue","_sat","_bri","_contrast","value","reset","fromHsv","ImageFilter","super","arguments","length","__proto__","prototype","isEmpty","set","IGraph","url","info","width","height","$promise","undefined","_vbo","x","y","Number","defineProperty","configurable","enumerable","get","_isLoaded_or_doload","__isLoading_or_doload","isLoaded","_url","src","_isLoaded","_gl","alert","deleteTexture","texture","Error","_engine","_ctx","z","_dispose","__loadTexture","image","Image","Promise","resolve","reject","engine","addEventListener","e","target","naturalWidth","naturalHeight","_handleImageLoaded","_graph_rect","console","error","$all_promise","push","$get","imageUrl","cbfunc","tasks","log","all","IRenderer","_GraphType","ctx","_globalAlpha","_globalAlphaStack","screen_size","id","Graph","imageSmoothingEnabled","_canvas","graph","dx","dy","sx","sy","m11","m12","m21","m22","color","f4v","globalAlpha","w","ImageDataHelper","canvas","document","createElement","getContext","clearRect","drawImage","getImageData","imagedata","putImageData","toDataURL","Vec2","empty","v2","floatVar","ang","cos","sin","sqrt","p2","lx","ly","Rectangle","left","top","other","right","bottom","size","center","w2","h23","cx","cy","hwidth","hheight","Randomizer","random","clamp"],"mappings":"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","file":"13.js","sourcesContent":["﻿\r\nimport { Vec2, clamp } from './math.js';\r\n\r\nfunction colorInt24Parse2(col) {\r\n\treturn \"#\" + [((col >> 16) & 0xFF), ((col >> 8) & 0xFF), (col & 0xFF)].map(a=>a.toString(16).padStart(2, \"0\")).join(\"\");\r\n}\r\nfunction colorInt24Parse(col) {\r\n\treturn \"#\" + [((col >> 16) & 0xFF), ((col >> 8) & 0xFF), (col & 0xFF)].map(a=>a.toString(16).padStart(2, \"0\")).join(\"\");\r\n}\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nclass IColor {\r\n\ttoFilter() {\r\n\t}\r\n\ttoFilterLimit() {\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IColor}\r\n */\r\nexport class ColorRGB {\r\n\tconstructor(r = 0, g = 0, b = 0) {\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.r = r;\r\n\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.g = g;\r\n\r\n\t\t/** @type {number} - int value: 0 ~ 255 */\r\n\t\tthis.b = b;\r\n\t}\r\n\tclone() {\r\n\t\treturn new this.constructor(this.r, this.g, this.b);\r\n\t}\r\n\tselfAdd(rgb) {\r\n\t\tthis.r += rgb.r;\r\n\t\tthis.g += rgb.g;\r\n\t\tthis.b += rgb.b;\r\n\t\treturn this;\r\n\t}\r\n\tselfSub(rgb) {\r\n\t\tthis.r += rgb.r;\r\n\t\tthis.g += rgb.g;\r\n\t\tthis.b += rgb.b;\r\n\t\treturn this;\r\n\t}\r\n\tselfScale(s) {\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\t\treturn this;\r\n\t}\r\n\tstatic add(rgb, rgb2) {\r\n\t\treturn new ColorRGB(rgb.r + rgb2.r, rgb.g + rgb2.g, rgb.b + rgb2.b);\r\n\t}\r\n\tstatic sub(rgb, rgb2) {\r\n\t\treturn new ColorRGB(rgb.r - rgb2.r, rgb.g - rgb2.g, rgb.b - rgb2.b);\r\n\t}\r\n\tstatic scale(rgb, s) {\r\n\t\treturn new ColorRGB(rgb.r * s, rgb.g * s, rgb.b * s);\r\n\t}\r\n\ttoString() {\r\n\t\tconst r = Math.trunc(this.r);\r\n\t\tconst g = Math.trunc(this.g);\r\n\t\tconst b = Math.trunc(this.b);\r\n\t\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n\t}\r\n\tstatic fromInt24(col) {\r\n\t\treturn new ColorRGB((col >> 16) & 0xFF, (col >> 8) & 0xFF, col & 0xFF);\r\n\t}\r\n\t/**\r\n\t * source: https://gist.github.com/mjackson/5311256#file-color-conversion-algorithms-js-L84\r\n\t * Converts an RGB color value to HSV. Conversion formula\r\n\t * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n\t * Assumes r, g, and b are contained in the set [0, 255] and\r\n\t * returns h, s, and v in the set [0, 1].\r\n\t *\r\n\t * @returns {ColorHSV}\r\n\t */\r\n\ttoHSV() {\r\n\t\tlet r = this.r /= 255, g = this.g /= 255, b = this.b /= 255;\r\n\r\n\t\tlet max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n\t\tlet h, s, v = max;\r\n\r\n\t\tlet d = max - min;\r\n\t\ts = max == 0 ? 0 : d / max;\r\n\r\n\t\tif (max == min) {\r\n\t\t\th = 0; // achromatic\r\n\t\t} else {\r\n\t\t\tswitch (max) {\r\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\r\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\r\n\t\t\t}\r\n\r\n\t\t\th /= 6;\r\n\t\t}\r\n\r\n\t\treturn new ColorHSV(h, s, v);\r\n\t}\r\n\t/**\r\n\t * source: https://gist.github.com/mjackson/5311256#file-color-conversion-algorithms-js-L119\r\n\t * Converts an HSV color value to RGB. Conversion formula\r\n\t * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n\t * Assumes h, s, and v are contained in the set [0, 1] and\r\n\t * returns r, g, and b in the set [0, 255].\r\n\t *\r\n\t * @param {number} h The hue\r\n\t * @param {number} s The saturation\r\n\t * @param {number} v The value\r\n\t */\r\n\tfromHsv(h, s, v) {\r\n\t\tlet r, g, b;\r\n\r\n\t\tlet i = Math.floor(h * 6);\r\n\t\tlet f = h * 6 - i;\r\n\t\tlet p = v * (1 - s);\r\n\t\tlet q = v * (1 - f * s);\r\n\t\tlet t = v * (1 - (1 - f) * s);\r\n\r\n\t\tswitch (i % 6) {\r\n\t\t\tcase 0: r = v, g = t, b = p; break;\r\n\t\t\tcase 1: r = q, g = v, b = p; break;\r\n\t\t\tcase 2: r = p, g = v, b = t; break;\r\n\t\t\tcase 3: r = p, g = q, b = v; break;\r\n\t\t\tcase 4: r = t, g = p, b = v; break;\r\n\t\t\tcase 5: r = v, g = p, b = q; break;\r\n\t\t}\r\n\r\n\t\tthis.r = r * 255;\r\n\t\tthis.g = g * 255;\r\n\t\tthis.b = b * 255;\r\n\t}\r\n\tstatic fromHsv(h, s, v) {\r\n\t\tlet r, g, b;\r\n\r\n\t\tlet i = Math.floor(h * 6);\r\n\t\tlet f = h * 6 - i;\r\n\t\tlet p = v * (1 - s);\r\n\t\tlet q = v * (1 - f * s);\r\n\t\tlet t = v * (1 - (1 - f) * s);\r\n\r\n\t\tswitch (i % 6) {\r\n\t\t\tcase 0: r = v, g = t, b = p; break;\r\n\t\t\tcase 1: r = q, g = v, b = p; break;\r\n\t\t\tcase 2: r = p, g = v, b = t; break;\r\n\t\t\tcase 3: r = p, g = q, b = v; break;\r\n\t\t\tcase 4: r = t, g = p, b = v; break;\r\n\t\t\tcase 5: r = v, g = p, b = q; break;\r\n\t\t}\r\n\r\n\t\treturn new ColorRGB(r * 255, g * 255, b * 255);\r\n\t}\r\n\ttoFilter() {\r\n\t\tlet { h, s, v } = this.toHSV();\r\n\t\treturn `hue-rotate(${h*Math.PI*2}rad) saturate(${s}) brightness(${v})`;\r\n\t}\r\n\ttoFilterLimit() {\r\n\t\treturn `hue-rotate(${h * 360}deg) saturate(${clamp(Math.trunc(s * 100), 0, 100)}%) brightness(${clamp(Math.trunc(v * 100), 0, 100)}%)`;\r\n\t}\r\n\ttoFilter_HueRotate() {\r\n\t\tconst { h, s, v } = this;\r\n\t\t//return `hue-rotate(${h*Math.PI*2}rad)`;\r\n\t\treturn `hue-rotate(${h * 360}deg)`;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IColor}\r\n */\r\nexport class ColorHSV {\r\n\tconstructor(h = 0, s = 0, v = 0) {\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.h = h;\r\n\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.s = s;\r\n\r\n\t\t/** @type {number} - float value: 0 ~ 1 */\r\n\t\tthis.v = v;\r\n\t}\r\n\tclone() {\r\n\t\treturn new this.constructor(this.h, this.s, this.v);\r\n\t}\r\n\tselfAdd(hsv) {\r\n\t\tthis.h += hsv.h;\r\n\t\tthis.s += hsv.s;\r\n\t\tthis.v += hsv.v;\r\n\t\treturn this;\r\n\t}\r\n\tselfSub(hsv) {\r\n\t\tthis.h += hsv.h;\r\n\t\tthis.s += hsv.s;\r\n\t\tthis.v += hsv.v;\r\n\t\treturn this;\r\n\t}\r\n\tselfScale(s) {\r\n\t\tthis.h *= s;\r\n\t\tthis.s *= s;\r\n\t\tthis.v *= s;\r\n\t\treturn this;\r\n\t}\r\n\tstatic add(hsv, hsv2) {\r\n\t\treturn new ColorHSV(hsv.s + hsv2.s, hsv.s + hsv2.s, hsv.v + hsv2.v);\r\n\t}\r\n\tstatic sub(hsv, hsv2) {\r\n\t\treturn new ColorHSV(hsv.s - hsv2.s, hsv.s - hsv2.s, hsv.v - hsv2.v);\r\n\t}\r\n\tstatic scale(hsv, s) {\r\n\t\treturn new ColorHSV(hsv.h * s, hsv.s * s, hsv.v * s);\r\n\t}\r\n\ttoString() {\r\n\t\tconst { h, s, v } = this;\r\n\t\treturn \"hsv(\" + h + \",\" + s + \",\" + v + \")\";\r\n\t}\r\n\r\n\t//toRgb() {\r\n\t//}\r\n\t//fromRgb(r, g, b) {\r\n\t//}\r\n\r\n\t//static fromRgb(r, g, b) {\r\n\t//}\r\n\r\n\ttoFilter() {\r\n\t\tconst { h, s, v } = this;\r\n\t\treturn `hue-rotate(${h*Math.PI*2}rad) saturate(${s}) brightness(${v})`;\r\n\t}\r\n\ttoFilterLimit() {\r\n\t\treturn `hue-rotate(${h * 360}deg) saturate(${clamp(Math.trunc(s * 100), 0, 100)}%) brightness(${clamp(Math.trunc(v * 100), 0, 100)}%)`;\r\n\t}\r\n\ttoFilter_HueRotate() {\r\n\t\tconst { h, s, v } = this;\r\n\t\t//return `hue-rotate(${h*Math.PI*2}rad)`;\r\n\t\treturn `hue-rotate(${h * 360}deg)`;\r\n\t}\r\n}\r\n\r\nexport class _ImageFilter {\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t * @param {number} contrast 0 ~ 100\r\n\t */\r\n\tconstructor(hue = 0, sat = 100, bri = 100, contrast = 100) {\r\n\t\tthis._hue = hue;\r\n\t\tthis._sat = sat;\r\n\t\tthis._bri = bri;\r\n\t\tthis._contrast = contrast;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hue() {\r\n\t\treturn this._hue;\r\n\t}\r\n\tset hue(value) {\r\n\t\tthis._hue = value % 360;\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget sat() {\r\n\t\treturn this._sat;\r\n\t}\r\n\tset sat(value) {\r\n\t\tthis._sat = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget bri() {\r\n\t\treturn this._bri;\r\n\t}\r\n\tset bri(value) {\r\n\t\tthis._bri = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget contrast() {\r\n\t\treturn this._contrast;\r\n\t}\r\n\tset contrast(value) {\r\n\t\tthis._contrast = Math.max(0, value);\r\n\t\tif ((this._hue % 360 == 0) && this._sat == 100 && this._bri == 100 && this._contrast == 100) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\ttoRgb() {\r\n\t\treturn ColorRGB.fromHsv(this._hue / 360, this._sat / 100, this._bri / 100);\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn `hue-rotate(${this._hue}deg) saturate(${this._sat}%) brightness(${this._bri}%) contrast(${this._contrast}%)`;// + ImageFilter.globalFilter\r\n\t}\r\n}\r\n\r\n/**\r\n * default no filter\r\n */\r\nexport class ImageFilter extends _ImageFilter {\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t * @param {number} contrast 0 ~ 100\r\n\t */\r\n\tconstructor(hue = 0, sat = 100, bri = 100, contrast = 100) {\r\n\t\tsuper(hue, sat, bri, contrast);\r\n\t\tif (arguments.length) {\r\n\t\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hue() {\r\n\t\treturn 0;\r\n\t}\r\n\tset hue(value) {\r\n\t\tthis._hue = value % 360;\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget sat() {\r\n\t\treturn 100;\r\n\t}\r\n\tset sat(value) {\r\n\t\tthis._sat = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\t/** @returns {number} */\r\n\tget bri() {\r\n\t\treturn 100;\r\n\t}\r\n\tset bri(value) {\r\n\t\tthis._bri = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget contrast() {\r\n\t\treturn 100;\r\n\t}\r\n\tset contrast(value) {\r\n\t\tthis._contrast = Math.max(0, value);\r\n\t\tthis.__proto__ = _ImageFilter.prototype;\r\n\t}\r\n\r\n\ttoRgb() {\r\n\t\treturn new ColorRGB(255, 255, 255);\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn \"none\";//ImageFilter.globalFilter ? ImageFilter.globalFilter : \"none\";\r\n\t}\r\n\r\n\tget isEmpty() {\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n_ImageFilter.prototype.reset = function () {\r\n\tthis._hue = 0;\r\n\tthis._sat = 100;\r\n\tthis._bri = 100;\r\n\tthis._contrast = 100;\r\n\tthis.__proto__ = ImageFilter.prototype;\r\n}\r\n\r\n/**\r\n * @param {number} hue 0 ~ 360\r\n * @param {number} sat 0 ~ 100\r\n * @param {number} bri 0 ~ 100\r\n * @param {number} contrast 0 ~ 100\r\n */\r\n_ImageFilter.prototype.set = function (hue, sat, bri, contrast) {\r\n\tif ((hue % 360 == 0) && sat == 100 && bri == 100 && contrast == 100) {\r\n\t\tthis.reset();\r\n\t}\r\n\telse {\r\n\t\tthis.hue = hue;\r\n\t\tthis.sat = sat;\r\n\t\tthis.bri = bri;\r\n\t\tthis._contrast = contrast;\r\n\t}\r\n}\r\n\r\n/**\r\n * @abstract\r\n */\r\nexport class IGraph {\r\n\tconstructor(url, info) {\r\n\t\t/** @type {number} */\r\n\t\tlet width;\r\n\t\t/** @type {number} */\r\n\t\tlet height;\r\n\t\t\r\n\t\t/** @type {Promise} if loaded will delete */\r\n\t\tthis.$promise = undefined;\r\n\t\t\r\n\t\t/** @type {WebGLBuffer} */\r\n\t\tthis._vbo = undefined;\r\n\r\n\t\t/** @type {number} - origin.x */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} - origin.y */\r\n\t\tthis.y = 0;\r\n\r\n\t\tif (info) {\r\n\t\t\tif (info.width > 0) {\r\n\t\t\t\twidth = Number(info.width);\r\n\t\t\t}\r\n\t\t\tif (info.height > 0) {\r\n\t\t\t\theight = Number(info.height);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\twidth = 0;\r\n\t\t\theight = 0;\r\n\t\t}\r\n\t\t/** @type {number} */\r\n\t\tthis.width = width;\r\n\t\t/** @type {number} */\r\n\t\tthis.height = height;\r\n\t\t//\r\n\t\tObject.defineProperty(this, \"width\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis._isLoaded_or_doload();\r\n\t\t\t\treturn width;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(this, \"height\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis._isLoaded_or_doload();\r\n\t\t\t\treturn height;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/** @type {WebGLTexture} */\r\n\t\t/** this.texture = null; */\r\n\t\tObject.defineProperty(this, \"texture\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\tthis.__isLoading_or_doload();\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tdebugger;//not override\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.isLoaded = this._isLoaded_or_doload;\r\n\r\n\t\t/** @type {function():void} */\r\n\t\t//this._onload = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = \"\";\r\n\t\tif (url) {\r\n\t\t\tthis.src = url;\r\n\t\t}\r\n\t}\r\n\t_dispose() {\r\n\t\t//only check is loaded\r\n\t\tif (this._isLoaded()) {\r\n\t\t\t//this._engine.deleteGraph(this);\r\n\r\n\t\t\tif (this._gl) {\r\n\t\t\t\talert(\"gl.deleteTexture(this.texture)\");\r\n\t\t\t\tthis._gl.deleteTexture(this.texture);\r\n\t\t\t}\r\n\t\t\tthis.texture = null;\r\n\t\t}\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {IRenderer}\r\n\t */\r\n\tget _engine() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\t/**\r\n\t * @returns {WebGLRenderingContext}\r\n\t */\r\n\tget _gl() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\t/**\r\n\t * @returns {CanvasRenderingContext2D}\r\n\t */\r\n\tget _ctx() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t//get width() { return this.matrix[0]; }\r\n\t//set width(val) { this.matrix[0] = val; }\r\n\r\n\t//get height() { return this.matrix[5]; }\r\n\t//set height(val) { this.matrix[5] = val; }\r\n\r\n\t//get x() { return this.matrix[12]; }\r\n\t//set x(val) { this.matrix[12] = val; }\r\n\r\n\t//get y() { return this.matrix[13]; }\r\n\t//set y(val) { this.matrix[13] = val; }\r\n\r\n\t/** ?? */\r\n\tget z() { return 0; }\r\n\t//get z() { return this.matrix[14]; }\r\n\t//set z(val) { this.matrix[14] = val; }\r\n\r\n\t/** ?? */\r\n\tset src(url) {\r\n\t\tdebugger;//this.src is broken;\r\n\t\t\r\n\t\tthis._dispose();\r\n\t\tthis._url = url;\r\n\t}\r\n\r\n\t_isLoaded() {\r\n\t\treturn this.texture != null;\r\n\t}\r\n\t_isLoaded_or_doload() {\r\n\t\tif (!this.texture) {\r\n\t\t\tthis.__loadTexture();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t__isLoading_or_doload() {\r\n\t\tif (this.$promise === null) {\r\n\t\t\tthis.__loadTexture();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t__loadTexture() {\r\n\t\tif (this.$promise) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._url == \"\") {\r\n\t\t\tdebugger;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet image = new Image();\r\n\r\n\t\tthis.$promise = new Promise((resolve, reject) => {\r\n\t\t\tconst engine = this._engine;\r\n\r\n\t\t\timage.addEventListener(\"load\", e => {\r\n\t\t\t\tif (!e.target.naturalWidth || !e.target.naturalHeight) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.isLoaded = this._isLoaded;//end\r\n\r\n\t\t\t\tdelete this.width;\r\n\t\t\t\tthis.width = e.target.naturalWidth;\r\n\r\n\t\t\t\tdelete this.height;\r\n\t\t\t\tthis.height = e.target.naturalHeight;\r\n\r\n\t\t\t\tdelete this.texture;\r\n\t\t\t\tthis.texture = engine._handleImageLoaded(e.target, this);\r\n\t\t\t\t\t\r\n\t\t\t\tdelete this.$promise;\r\n\r\n\t\t\t\tresolve(this);\r\n\t\t\t}, false);\r\n\r\n\t\t\timage.addEventListener(\"error\", e => {\r\n\t\t\t\tthis.isLoaded = this._isLoaded;//no try again\r\n\r\n\t\t\t\tif (this._graph_rect) {\r\n\t\t\t\t\tdelete this.texture;\r\n\t\t\t\t\tthis.texture = this._graph_rect;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.error(\"404: \" + image.src);\r\n\r\n\t\t\t\tresolve(this);\r\n\t\t\t}, false);\r\n\t\t});\r\n\r\n\t\tIGraph.$all_promise.push(this.$promise);\r\n\r\n\t\timage.src = $get.imageUrl(this._url);\r\n\t}\r\n\r\n\tstatic async waitAllLoaded(cbfunc) {\r\n\t\tlet tasks = IGraph.$all_promise;\r\n\t\tconsole.log(\"image loaded: \" + IGraph.$all_promise.length);\r\n\t\tIGraph.$all_promise = [];\r\n\t\tawait Promise.all(tasks);\r\n\t\tif (cbfunc) {\r\n\t\t\tcbfunc();\r\n\t\t}\r\n\t}\r\n}\r\nIGraph.$all_promise = [];\r\n\r\nexport class IRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {IGraph} */\r\n\t\tthis._GraphType = null;\r\n\r\n\t\t/**\r\n\t\t * @type {CanvasRenderingContext2D}\r\n\t\t */\r\n\t\tthis.ctx = null;\r\n\t\t\r\n\t\tthis._globalAlpha = 1;\r\n\t\tthis._globalAlphaStack = [];\r\n\t\t\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.screen_size = new Vec2(0, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tinit(id) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {IGraph} */\r\n\tget Graph() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\treturn new IGraph();\r\n\t}\r\n\r\n\t/**\r\n\t * swap Canvas and Canvas2\r\n\t * if (imageSmoothingEnabled) this._ctx2.imageSmoothingEnabled = true;\r\n\t * @param {boolean} imageSmoothingEnabled\r\n\t */\r\n\t$swapCanvas(imageSmoothingEnabled) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {HTMLCanvasElement} */\r\n\tget _canvas() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {HTMLImageElement} image\r\n\t * @param {IGraph} graph\r\n\t * @param {Object} texture\r\n\t */\r\n\t_handleImageLoaded(image, graph) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} r\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t * @param {number} sx\r\n\t * @param {number} sy\r\n\t */\r\n\tsetRotationTranslationScale(r, dx, dy, sx, sy) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} m11\r\n\t * @param {number} m12\r\n\t * @param {number} m21\r\n\t * @param {number} m22\r\n\t * @param {number} dx\r\n\t * @param {number} dy\r\n\t */\r\n\tsetTransform(m11, m12, m21, m22, dx, dy) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tloadIdentity() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\tpushMatrix() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\tpopMatrix() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\ttranslate(x, y) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\ttranslate3d(x, y, z) {\r\n\t\talert(\"'translate3d' is deprecated\");\r\n\t\tthrow new Error(\"'translate3d' is deprecated\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tscale(x, y) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\tscale3d(x, y, z) {\r\n\t\talert(\"'scale3d' is deprecated\");\r\n\t\tthrow new Error(\"'scale3d' is deprecated\");\r\n\t}\r\n\t/**\r\n\t * @param {number} r - rad\r\n\t */\r\n\trotate(r) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {number[]} */\r\n\tget color() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** @type {number[]} - 4fv */\r\n\tset color(f4v) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {vec4} f4v - vec4: array\r\n\t */\r\n\tColor4fv(f4v) {\r\n\t\talert(\"'Color4fv' is deprecated\");\r\n\t\tthrow new Error(\"'Color4fv' is deprecated\");\r\n\t}\r\n\r\n\t/**\r\n\t * @type {number} global alpha\r\n\t */\r\n\tget globalAlpha() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\tset globalAlpha(value) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tpushGlobalAlpha() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tpopGlobalAlpha(value) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tclearDrawScreen() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t */\r\n\tdrawGraph(graph) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} z\r\n\t */\r\n\tdrawGraph2(graph, x, y, z) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawRect(x, y, w, h) {\r\n\t\tif (arguments.length != 4) {\r\n\t\t\tconsole.error(\"drawRect(x, y, w, h) need 4 param\");\r\n\t\t}\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IGraph} graph\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {ColorRGB} color\r\n\t */\r\n\tdrawColoredGraph(graph, x, y, color) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nexport class ImageDataHelper {\r\n\tconstructor() {\r\n\t\tthis.canvas = document.createElement('canvas');\r\n\t\tthis.ctx = this.canvas.getContext('2d');\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} width\r\n\t * @param {number} height\r\n\t */\r\n\tresize(width, height) {\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {HTMLImageElement} image\r\n\t * @returns {ImageData}\r\n\t */\r\n\timageToImagedata(image) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = image.width;\r\n\t\tcanvas.height = image.height;\r\n\t\tctx.drawImage(image, 0, 0);\r\n\r\n\t\treturn ctx.getImageData(0, 0, image.width, image.height);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ImageData} imagedata\r\n\t * @returns {string}\r\n\t */\r\n\timagedataToDataURL(imagedata) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = imagedata.width;\r\n\t\tcanvas.height = imagedata.height;\r\n\t\tctx.putImageData(imagedata, 0, 0);\r\n\t\t\r\n\t\treturn canvas.toDataURL();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ImageData} imagedata\r\n\t * @returns {HTMLImageElement}\r\n\t */\r\n\timagedataToImage(imagedata) {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst ctx = this.ctx;\r\n\r\n\t\tcanvas.width = imagedata.width;\r\n\t\tcanvas.height = imagedata.height;\r\n\t\tctx.putImageData(imagedata, 0, 0);\r\n\r\n\t\tlet image = new Image();\r\n\t\timage.src = canvas.toDataURL();\r\n\t\treturn image;\r\n\t}\r\n}\r\n","﻿\r\nexport class Vec2 {\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tconstructor(x, y) {\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\t\telse if (arguments.length == 1 && x != null) {\r\n\t\t\tthis.x = x.x | 0;\r\n\t\t\tthis.y = x.y | 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t}\r\n\t}\r\n\tstatic get() {\r\n\t\treturn new Vec2(...arguments);\r\n\t}\r\n\tstatic get empty() {\r\n\t\treturn new Vec2(0, 0);\r\n\t}\r\n\t/**\r\n\t * @returns {Vec2}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor(this.x, this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {...Vec2} v2\r\n\t * @returns {Vec2}\r\n\t */\r\n\tadd(v2) {\r\n\t\tlet x = this.x, y = this.y;\r\n\t\tfor (let v of arguments) {\r\n\t\t\tif (v == null)\r\n\t\t\t\tcontinue;\r\n\t\t\tx = x + v.x;\r\n\t\t\ty = y + v.y;\r\n\t\t}\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\t/**\r\n\t * @param {...Vec2} v2\r\n\t * @returns {Vec2}\r\n\t */\r\n\tsub(v2) {\r\n\t\tlet x = this.x, y = this.y;\r\n\t\tfor (let v of arguments) {\r\n\t\t\tif (v == null)\r\n\t\t\t\tcontinue;\r\n\t\t\tx = x - v.x;\r\n\t\t\ty = y - v.y;\r\n\t\t}\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\r\n\t/** @param {Vec2} v */\r\n\tplus(v) {\r\n\t\treturn new Vec2(this.x + v.x, this.y + v.y);\r\n\t}\r\n\t/** @param {Vec2} v */\r\n\tminus(v) {\r\n\t\treturn new Vec2(this.x - v.x, this.y - v.y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tplus2(x, y) {\r\n\t\treturn new Vec2(this.x + x, this.y + y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tminus2(x, y) {\r\n\t\treturn new Vec2(this.x - x, this.y - y);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} floatVar\r\n\t */\r\n\tmul(floatVar) {\r\n\t\treturn new Vec2(this.x * floatVar, this.y * floatVar);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} s\r\n\t */\r\n\tscale(s) {\r\n\t\treturn new Vec2(this.x * s, this.y * s);\r\n\t}\r\n\r\n\trotate(ang) {\r\n\t\tlet x = Math.cos(ang) * this.x - Math.sin(ang) * this.y;\r\n\t\tlet y = Math.sin(ang) * this.x + Math.cos(ang) * this.y;\r\n\t\treturn new Vec2(x, y);\r\n\t}\r\n\r\n\tnormalize() {\r\n\t\tlet r = Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t\treturn new Vec2(this.x / r, this.y / r);\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn Math.sqrt(x ** 2 + y ** 2);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} p2\r\n\t */\r\n\tdistance_sq(p2) {\r\n\t\tlet lx = this.x - p2.x;\r\n\t\tlet ly = this.y - p2.y;\r\n\t\treturn lx * lx + ly * ly;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} p2\r\n\t */\r\n\tdistance(p2) {\r\n\t\tlet lx = this.x - p2.x;\r\n\t\tlet ly = this.y - p2.y;\r\n\t\treturn Math.sqrt(lx * lx + ly * ly);\r\n\t}\r\n}\r\n\r\nexport class Rectangle {\r\n\t/**\r\n\t * Rectangle(left: number, top: number, width: number, height: number)\r\n\t * Rectangle(position: Vec2, size: Vec2)\r\n\t * Rectangle(rect: Rectangle)\r\n\t * Rectangle() => Rectangle(0, 0, 0, 0)\r\n\t */\r\n\tconstructor() {\r\n\t\tif (arguments.length == 4) {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = arguments[0];//x\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = arguments[1];//y\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = arguments[2];//w\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = arguments[3];//h\r\n\t\t}\r\n\t\telse if (arguments.length == 2) {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = arguments[0].x;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = arguments[0].y;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = arguments[1].x;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = arguments[1].y;\r\n\t\t}\r\n\t\telse if (arguments[0] instanceof Rectangle) {\r\n\t\t\tconst r = arguments[0];\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = r.left;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = r.top;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = r.width;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = r.height;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.left = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.top = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.width = 0;\r\n\t\t\t/** @type {number} */\r\n\t\t\tthis.height = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Rectangle} other\r\n\t */\r\n\tcopy(other) {\r\n\t\tthis.left = other.left;\r\n\t\tthis.top = other.top;\r\n\t\tthis.width = other.width;\r\n\t\tthis.height = other.height;\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\treturn new Rectangle(this);\r\n\t}\r\n\r\n\tget x() { return this.left; }\r\n\tset x(value) { this.left = value; }\r\n\r\n\tget y() { return this.top; }\r\n\tset y(value) { this.top = value; }\r\n\r\n\tget right() { return this.left + this.width; }\r\n\tset right(value) { this.width = value - this.left; }\r\n\r\n\tget bottom() { return this.top + this.height; }\r\n\tset bottom(value) { this.height = value - this.top; }\r\n\r\n\tget size() {\r\n\t\treturn new Vec2(this.width, this.height);\r\n\t}\r\n\tset size(value) {\r\n\t\tthis.width = value.width || value.x;\r\n\t\tthis.height = value.height || value.y;\r\n\t}\r\n\r\n\tget center() {\r\n\t\treturn new Vec2(this.left + this.width * 0.5, this.top + this.height * 2 / 3);\r\n\t}\r\n\tset center(value) {\r\n\t\tlet w2 = this.width * 0.5;\r\n\t\tlet h23 = this.height * 2 / 3;\r\n\r\n\t\tthis.left = value.x - w2;\r\n\t\tthis.top = value.y - h23;\r\n\t}\r\n\tsetCenter(cx, cy) {\r\n\t\tlet w2 = this.width * 0.5;\r\n\t\tlet h23 = this.height * 2 / 3;\r\n\r\n\t\tthis.left = cx - w2;\r\n\t\tthis.top = cy - h23;\r\n\t}\r\n\t\r\n\tcollide(other) {\r\n\t\treturn (this.left < other.right && this.right > other.left && this.top < other.bottom && this.bottom > other.top);\r\n\t}\r\n\t\r\n\tcollide4f(left, right, top, bottom) {\r\n\t\treturn (this.left < right && this.right > left && this.top < bottom && this.bottom > top);\r\n\t}\r\n\tcollide4f2(x, y, hwidth, hheight) {\r\n\t\tconst left = x - hwidth;\r\n\t\tconst top = y - hheight;\r\n\t\tconst right = x + hwidth;\r\n\t\tconst bottom = y + hheight;\r\n\t\treturn (this.left < right && this.right > left && this.top < bottom && this.bottom > top);\r\n\t}\r\n\tcollide2f2x(x, hwidth) {\r\n\t\tconst left = x - hwidth;\r\n\t\tconst right = x + hwidth;\r\n\t\treturn (this.left < right && this.right > left);\r\n\t}\r\n\tcollide2f2y(y, hheight) {\r\n\t\tconst top = y - hheight;\r\n\t\tconst bottom = y + hheight;\r\n\t\treturn (this.top < bottom && this.bottom > top);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} left\r\n\t * @param {number} top\r\n\t * @param {number} right\r\n\t * @param {number} bottom\r\n\t */\r\n\tparse(left, top, right, bottom) {\r\n\t\tthis.left = left;\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} left\r\n\t * @param {number} top\r\n\t * @param {number} right\r\n\t * @param {number} bottom\r\n\t */\r\n\tstatic parse(left, top, right, bottom) {\r\n\t\treturn new Rectangle(left, top, right - left, bottom - top);\r\n\t}\r\n}\r\n\r\nexport class Randomizer {\r\n\tstatic nextInt(r) {\r\n\t\treturn Math.trunc(Math.random() * 100 % r);\r\n\t}\r\n\tstatic randInt(min, max) {\r\n\t\treturn Math.trunc(min + Math.random() * 100 % (max - min + 1));\r\n\t}\r\n\tstatic nextBoolean() {\r\n\t\treturn !(Math.trunc(Math.random() * 100) & 1);\r\n\t}\r\n}\r\n\r\nexport function clamp(value, min, max) {\r\n\treturn Math.max(min, Math.min(value, max));\r\n}\r\n\r\n"],"sourceRoot":""}