{"version":3,"sources":["webpack:///./src/game/Animation.js","webpack:///./src/game/Renderer/CharacterRenderer.js","webpack:///./src/game/Renderer/ChatBalloon.js","webpack:///./src/game/Renderer/PanelRenderer.js","webpack:///./src/game/Renderer/NameLabel.js","webpack:///./src/editor/editor.vue?d19e","webpack:///./src/components/ui-sortable.vue?b47b","webpack:///src/components/ui-sortable.vue","webpack:///./src/components/ui-sortable.vue","webpack:///./src/components/ui-sortable.vue?9108","webpack:///./src/components/ui-trigger.vue?25aa","webpack:///src/components/ui-trigger.vue","webpack:///./src/components/ui-trigger.vue","webpack:///./src/components/ui-trigger.vue?94ec","webpack:///./src/components/CorePosition.js","webpack:///./src/components/ui-menu.vue?b0c7","webpack:///src/components/ui-menu.vue","webpack:///./src/components/ui-menu.vue","webpack:///./src/components/ui-menu.vue?a4f1","webpack:///./src/components/ui-button-group.vue?a16d","webpack:///src/components/ui-button-group.vue","webpack:///./src/components/ui-button-group.vue","webpack:///./src/components/ui-button-group.vue?5045","webpack:///src/editor/ui-equip-box.vue","webpack:///./src/editor/ui-equip-box.vue?396c","webpack:///./src/editor/ui-equip-box.vue","webpack:///./src/editor/ui-equip-box.vue?c755","webpack:///./src/editor/ui-character.vue?12d3","webpack:///src/editor/ui-character.vue","webpack:///./src/editor/ui-character.vue","webpack:///./src/editor/ui-character.vue?b2a6","webpack:///./src/editor/ui-character-svg.vue?f107","webpack:///src/editor/ui-character-svg.vue","webpack:///./src/editor/ui-character-svg.vue","webpack:///./src/editor/ui-character-svg.vue?b140","webpack:///./src/editor/ui-character-attribute.vue?6a03","webpack:///src/editor/ui-character-attribute.vue","webpack:///./src/editor/ui-character-attribute.vue","webpack:///./src/editor/ui-character-attribute.vue?0796","webpack:///src/editor/ui-mob-list.vue","webpack:///./src/editor/ui-mob-list.vue?22b4","webpack:///./src/editor/ui-mob-list.vue","webpack:///./src/editor/ui-mob-list.vue?8734","webpack:///./src/editor/ui-map-editor.vue?f2e6","webpack:///src/editor/ui-map-editor.vue","webpack:///./src/editor/ui-map-editor.vue","webpack:///./src/editor/ui-map-editor.vue?f2a3","webpack:///src/editor/editor.vue","webpack:///./src/editor/editor.vue?9915","webpack:///./src/editor/editor.vue","webpack:///./src/game/Sprite.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./public/javascripts/resource.js","webpack:///./src/game/Physics/PPlayer.js","webpack:///./src/game/SceneObject.js","webpack:///./src/game/Physics/Physics.js","webpack:///./src/game/Physics/Filter.js","webpack:///./src/game/Physics/World.js","webpack:///./src/game/Renderer/MobRenderer.js","webpack:///./src/game/Renderer/NpcRenderer.js","webpack:///./src/game/Renderer/ParticleSystem.js","webpack:///./src/game/Map.js","webpack:///./src/ui/Basic/KeySlot.js","webpack:///./src/game/InputKey.js","webpack:///./src/game/Renderer/Chair.js","webpack:///./src/game/SceneCharacter.js","webpack:///./src/Common/AttackInfo.js","webpack:///./src/game/Renderer/RenderingOption.js","webpack:///./src/Client/PMovePath.js","webpack:///./src/init.js","webpack:///./src/game/Renderer/LifeRenderer.js","webpack:///./src/game/Renderer/Layer.js","webpack:///./src/box2d.ts/build/Common/b2Settings.js","webpack:///./src/box2d.ts/build/Common/b2Math.js","webpack:///./src/box2d.ts/build/Common/b2Draw.js","webpack:///./src/box2d.ts/build/Common/b2Timer.js","webpack:///./src/box2d.ts/build/Common/b2GrowableStack.js","webpack:///./src/box2d.ts/build/Common/b2BlockAllocator.js","webpack:///./src/box2d.ts/build/Common/b2StackAllocator.js","webpack:///./src/box2d.ts/build/Collision/b2Distance.js","webpack:///./src/box2d.ts/build/Collision/b2Collision.js","webpack:///./src/box2d.ts/build/Collision/b2DynamicTree.js","webpack:///./src/box2d.ts/build/Collision/b2BroadPhase.js","webpack:///./src/box2d.ts/build/Collision/b2TimeOfImpact.js","webpack:///./src/box2d.ts/build/Collision/b2CollideCircle.js","webpack:///./src/box2d.ts/build/Collision/b2CollidePolygon.js","webpack:///./src/box2d.ts/build/Collision/b2CollideEdge.js","webpack:///./src/box2d.ts/build/Collision/Shapes/b2Shape.js","webpack:///./src/box2d.ts/build/Dynamics/b2Body.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2Joint.js","webpack:///./src/box2d.ts/build/Collision/Shapes/b2CircleShape.js","webpack:///./src/box2d.ts/build/Collision/Shapes/b2PolygonShape.js","webpack:///./src/box2d.ts/build/Collision/Shapes/b2EdgeShape.js","webpack:///./src/box2d.ts/build/Collision/Shapes/b2ChainShape.js","webpack:///./src/box2d.ts/build/Dynamics/b2Fixture.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2DistanceJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2AreaJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2FrictionJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2GearJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2MotorJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2MouseJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2PrismaticJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2PulleyJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2RevoluteJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2RopeJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2WeldJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Joints/b2WheelJoint.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2Contact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2CircleContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2PolygonContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2PolygonAndCircleContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2EdgeAndCircleContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2EdgeAndPolygonContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2ChainAndCircleContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2ChainAndPolygonContact.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2ContactFactory.js","webpack:///./src/box2d.ts/build/Dynamics/b2WorldCallbacks.js","webpack:///./src/box2d.ts/build/Dynamics/b2ContactManager.js","webpack:///./src/box2d.ts/build/Dynamics/b2TimeStep.js","webpack:///./src/box2d.ts/build/Dynamics/Contacts/b2ContactSolver.js","webpack:///./src/box2d.ts/build/Dynamics/b2Island.js","webpack:///./src/box2d.ts/build/Particle/b2Particle.js","webpack:///./src/box2d.ts/build/Particle/b2ParticleGroup.js","webpack:///./src/box2d.ts/build/Particle/b2StackQueue.js","webpack:///./src/box2d.ts/build/Particle/b2VoronoiDiagram.js","webpack:///./src/box2d.ts/build/Particle/b2ParticleSystem.js","webpack:///./src/box2d.ts/build/Dynamics/b2World.js","webpack:///./src/box2d.ts/build/Controllers/b2Controller.js","webpack:///./src/box2d.ts/build/Controllers/b2BuoyancyController.js","webpack:///./src/box2d.ts/build/Controllers/b2ConstantAccelController.js","webpack:///./src/box2d.ts/build/Controllers/b2ConstantForceController.js","webpack:///./src/box2d.ts/build/Controllers/b2GravityController.js","webpack:///./src/box2d.ts/build/Controllers/b2TensorDampingController.js","webpack:///./src/box2d.ts/build/Rope/b2Rope.js","webpack:///./src/box2d.ts/build/Box2D.js","webpack:///./src/game/Physics/Foothold.js","webpack:///./src/game/Physics/Ground.js","webpack:///./src/game/Renderer/CharacterActionAnimation.js","webpack:///./src/game/Item.js","webpack:///./src/Common/PlayerData.js","webpack:///./src/game/Renderer/SceneRenderer.js","webpack:///./src/game/Physics/PBullet.js","webpack:///./src/game/Skill.js","webpack:///./src/game/Physics/DebugDraw.js","webpack:///./src/game/Physics/LadderRope.js","webpack:///./src/game/Physics/PMob.js","webpack:///./src/game/MobSkill/MobSkillBase.js","webpack:///./src/ui/Basic/KeySlotData.js","webpack:///./src/util.js","webpack:///./src/game/MobSkill/238.FairyDust.js","webpack:///./src/Common/Packet/index.js","webpack:///./src/game/Renderer/DamageNumber.js","webpack:///./src/components/ui-draggable.vue?1fda","webpack:///./src/components/ui-resizable.vue?5128","webpack:///./src/components/ui-dialog.vue?d584","webpack:///./src/components/ui-sortable.vue?e333","webpack:///./src/components/ui-trigger.vue?3fd0","webpack:///./src/components/ui-menu.vue?1e26","webpack:///./src/components/ui-button-group.vue?ea58","webpack:///./src/editor/ui-equip-box.vue?a67f","webpack:///./src/editor/ui-character.vue?6bd2","webpack:///./src/editor/ui-character-svg.vue?360a","webpack:///./src/editor/ui-character-attribute.vue?0010","webpack:///./src/editor/ui-mob-list.vue?74c2","webpack:///./src/editor/ui-map-editor.vue?6a39","webpack:///./src/editor/editor.vue?4012","webpack:///src/components/ui-draggable.vue","webpack:///./src/components/ui-draggable.vue?0d95","webpack:///./src/components/ui-draggable.vue","webpack:///./src/components/ui-draggable.vue?75f1","webpack:///./src/game/MobSkill/238.FlowerTrap.js","webpack:///./src/Common/Packet/LoginPacket.js","webpack:///./src/Common/Packet/ChatPacket.js","webpack:///./src/Common/Packet/CharacterPacket.js","webpack:///./src/components/ui-dialog.vue?7db1","webpack:///src/components/ui-resizable.vue","webpack:///./src/components/ui-resizable.vue?050b","webpack:///./src/components/ui-resizable.vue","webpack:///./src/components/ui-resizable.vue?0fa7","webpack:///src/components/ui-dialog.vue","webpack:///./src/components/ui-dialog.vue?9232","webpack:///./src/components/ui-dialog.vue","webpack:///./src/components/ui-draggable.vue?9385","webpack:///./src/components/ui-draggable.vue?eb3f","webpack:///./src/components/ui-resizable.vue?ed40","webpack:///./src/components/ui-resizable.vue?a0be","webpack:///./src/components/ui-dialog.vue?beb3","webpack:///./src/components/ui-dialog.vue?0104","webpack:///./src/components/ui-sortable.vue?bc72","webpack:///./src/components/ui-sortable.vue?8988","webpack:///./src/components/ui-trigger.vue?6479","webpack:///./src/components/ui-trigger.vue?705e","webpack:///./src/components/ui-menu.vue?6bca","webpack:///./src/components/ui-menu.vue?501f","webpack:///./src/components/ui-button-group.vue?d78a","webpack:///./src/components/ui-button-group.vue?4ed0","webpack:///./src/editor/ui-equip-box.vue?d030","webpack:///./src/editor/ui-equip-box.vue?b767","webpack:///./src/editor/ui-character.vue?9939","webpack:///./src/editor/ui-character.vue?4118","webpack:///./src/editor/ui-character-svg.vue?3a46","webpack:///./src/editor/ui-character-svg.vue?4231","webpack:///./src/editor/ui-character-attribute.vue?a83b","webpack:///./src/editor/ui-character-attribute.vue?e355","webpack:///./src/editor/ui-mob-list.vue?1a0a","webpack:///./src/editor/ui-mob-list.vue?fde6","webpack:///./src/editor/ui-map-editor.vue?4b39","webpack:///./src/editor/ui-map-editor.vue?1e30","webpack:///./src/editor/editor.vue?f559","webpack:///./src/editor/editor.vue?4fcf"],"names":["window","m_draw_animation_texture_info","IAnimation","[object Object]","raw","url","this","_raw","_url","Object","defineProperties","value","frame","time","delta","textures","is_loop","is_end","reduce","pv","cv","delay","newAnim","constructor","Error","stamp","texture","AnimationBase","super","i","_Sprite_js__WEBPACK_IMPORTED_MODULE_2__","isLoaded","__loadTexture","fc","length","reset","renderer","x","y","angle","flip","drawRotaGraph","Animation","draw","_draw_and_preload","zMap","sMap","FragmentTexture","_Sprite_js__WEBPACK_IMPORTED_MODULE_5__","full_path","origin","__proto__","_math_js__WEBPACK_IMPORTED_MODULE_6__","prototype","map","relative","calcRelative","_calcRelative","filter","_IRenderer_js__WEBPACK_IMPORTED_MODULE_4__","opacity","visible","_slot","_place","classList","z","not_value","console","error","order","TypeError","empty","brow","neck","navel","hand","handMove","_earBelowHead","earBelowHead","_earOverHead","earOverHead","that","base","anchor","minus","plus","chara","body","head","_getRelativeFunction","isHasAnchor","isAnchorNeck","_calcRelative_neck","isAnchorBrow","_calcRelative_brow","isAnchorNavel","slots","_getOrigin","_calcRelative_navel","isAnchorHand","_calcRelative_hand","isAnchorHandMove","lastIndexOf","_calcRelative_handMove_lHand","_calcRelative_handMove","_calcRelativeEmpty","_anchor","fragments","arm","getTexture","tamingMob","adj_pos","globalAlpha","isEmpty","drawGraph2","ctx","toString","BodyFragmentTexture","update","hideBody","HairFragmentTexture","args","graph2","graph3","_render","ItemEffectAnimation","_Animation__WEBPACK_IMPORTED_MODULE_2__","defineProperty","__getAttr","load","attr","defVal","actionExceptRotation","oy","height","ItemEffect","animation","action","fixed","enable","itemEffectList","_list","$get","list","clear","forEach","id","add","parseInt","ex","equipID","Number","has","eff","data","_load","render","front","__construct","join","Set","CharacterFragmentBase","CharacterBodyFragment","getFrameTexture","action_frame","CharacterFaceFragment","emotion_frame","emotion","CharacterTamingMobFragment","_action_frame","_ride_action","EquipImageFilter","equip","hue","j","k","ft","sat","bri","contrast","ICharacterAppearanceBase","CharacterAppearanceBase","effect","_onload","categoryInfo","slot_order","islot","vslot","toJSON","__onload","func","call","cateInfo","use_category","_public_javascripts_resource_js__WEBPACK_IMPORTED_MODULE_0__","isEquipExist","getItem","load_extern_item_data","__load_slot","__load_fragments","then","a","FragmentConstructor","action_list","keys","_raw_textures","_base_path","__load_frame_textures","fragment_textures","place","frag","__load_place_textures","path","FragmentTextureConstructor","slot","info","islots","match","vslots","icon","getIconUrl","iconRaw","getIconRawUrl","_animation_type","CharacterAppearance","d","isSafeInteger","CharacterEquip","CharacterHeadBase","CharacterHair","CharacterFaceBase","face","_info","FragmentType","elfEarFragment","lefEarFragment","highlefEarFragment","ear","lefEar","highlefEar","elfEar","slice","type","actionMap","characterAction","emotionMap","characterEmotion","tm","Math","trunc","CharacterSlots","_ordered_slot","hair","_hair2","_hairMix2","_hair3","_hairMix3","cap","accessoryFace","accessoryEyes","accessoryEars","coat","longcoat","pants","shoes","glove","cape","shield","weapon","configurable","writable","enumerable","get","_hair","set","hairColor2","hairMix2","hairColor3","hairMix3","color","getColorHairID","undefined","getHairColor","hc2Id","$promise_hair2","__loadColoredHair","hair2","Promise","resolve","item","ori","hc3Id","$promise_hair3","hair3","loadedEquip","alert","_unload","warn","slotName","push","ha","enumerate_equip","CharacterChangeLog","useEquip","unuseEquip","weaponType","CharacterAnimationBase","_$dirty","job","subJob","actani","_CharacterActionAnimation_js__WEBPACK_IMPORTED_MODULE_7__","speed","fixed_speed","pause","_action","_emotion","_emotion_frame","_emotion_time","_emotion_frame_sequence","__require_update","__frag_list","$$changeLog","name","nc","tasks","count","getFrameCount","_isLoaded_or_doload","$promise","all","act","_act","reload","action_frame_count","emo","circularSequence","emotion_frame_count","random","next","f","emotion_time","emotion_delay","getDelay","_stamp","getSpeed","isEnd","loop","_update","__update_frag_list","pushGlobalAlpha","__draw_list","popGlobalAlpha","pushMatrix","translate","rotate","m_a","scale","popMatrix","__add_equip_to_frag_list","is_back","fts","startsWith","__add_frag_to_list","ae","_calcBoundBox","left","top","right","bottom","x0","y0","x1","width","y1","min","max","_boundBox","obj","CharacterRenderer","tx","ty","__load_task","result","Init","reverse","use","initAnimation","waitLoaded","_draw","__forceUpdate","_waitFrameTexturesLoaded","category","getJobWeaponCategory","isCashWeapon","task","_use","_unuse","code","es","split","_clear","v","indexOf","ss","cate","h2","h3","hc","c2","m2","c3","m3","hairMix4","apply","isFinite","hairColor","col","faceColor","getFaceColor","getColorFaceID","changeLog","unuse","genCode","_stringify","link","enumerate","log","animationName","itemList","JSON","stringify","values","transformItemData","encodeURI","Boolean","region","version","__v","m","toUpperCase","itemId","saturation","strNum","brightness","alpha","toFixed","val","open","_outlink","__texture_to_base64","frag_list","file_name","svg","clz","DownloadData","filename","bound","size","$swapCanvas","c2w","_ctx2","canvas","c2h","base64","toDataURL","elem","document","createElement","download","href","appendChild","click","removeChild","$src","src","reject","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","onerror","ev","readAsDataURL","response","responseType","send","_init_js__WEBPACK_IMPORTED_MODULE_1__","ChatBalloon","style","cache","cb","assign","promise","argb","clr","defCol","str_rgba","padStart","nw","_Sprite_js__WEBPACK_IMPORTED_MODULE_1__","n","ne","w","c","e","sw","s","se","arrow","text","lines","LINE_HEIGHT","fillStyle","font","textAlign","textBaseline","min_width","_tw","line","measureText","hw","tw","th","draw2","_drawPattern","xw","r_adj","arrow_hw","hw_arrow_hw","cy","fillText","$images_ChatBalloon","PanelRenderer_PanelRenderer","Sprite","cx","hwidth","_drawPatterncx","NameLabel_NameLabel","label","_load_center","_load_color","labelStyle","$images_NameLabel","components_ui_sortablevue_type_script_lang_js_","props","methods","getValue","$","$el","sortable","items","item_map","new_list","$emit","mounted","$$el","bind","disableSelection","beforeUpdate","$nextTick","el","remove","append","updated","watch","newValue","component","componentNormalizer","_vm","_h","$createElement","_self","_c","_l","index","_t","options","__file","ui_sortable","components_ui_triggervue_type_script_lang_js_","active","ui_trigger_component","class","ui_trigger","components_ui_menuvue_type_script_lang_js_","mixins","position","default","my","at","collision","calcPosition","rel","mypos","pos","replace","setPosition","handler","of","deep","show","_cp_onclick","on","off","ui_menu_component","staticClass","attrs","_e","ui_menu","components_ui_button_groupvue_type_script_lang_js_","buttons","Array","required","String","onclick","selected","splice","btns","_update_element","actives","isInteger","querySelectorAll","querySelector","toggle","ui_button_group_component","data-id","$event","ui_button_group","filter_buttons","face_color_buttons","background","hair_color_buttons","ItemFilter","cash","gender","reqJob","fn","editor_ui_equip_boxvue_type_script_lang_js_","search_text","search_next","loaded_equip_list","loaded_category","equip_list","search_equip_result","selected_category","filters","face_color","hair_color","hair_color2","hair_mix2","page","face_names","hair_names","onlyShowSearchResult","displayMode","countOfItemsPerPage","isShowSetting","zIndex","computed","DATA_TAG_VERSION","DATA_TAG","DATA_VERSION","categoryGroupList","ks","resource","cat","group","_g","toLocaleLowerCase","categoryName","key","listPath","__count_of_item_in_page","start","__count_of_page","ceil","__set_z_index","clip-path","copyImageUrl","img","currentTarget","confirm","copyToClipboard","copyInnerText","innerText","SelectText","copyText","search_equip","async","clearSearch","loadList","old_search_equip_result","rr","si","_is_category_hair","black","b1","$page","_is_category_face","regexp","RegExp","test","localeCompare","sort","b","sa","sb","toLowerCase","searchNextText","change_page","location","hash","$refs","input_search","focus","content","scrollTop","__get_category_slot","cateinfo","__get_color","prefix","coloredPath","parse","asset","concat_external_resource","cash_weapon","wt","va","__t","concat","_equip","fnFilter","__get_filter","count_of_page","fnFilters","every","__get_item","first","__get_item_id","__get_item_name","__get_item_name_ex","_name","__get_item_icon_url","__face_or_hair_img_onerror","sp","ls","clickItem","num","groupCollapsed","groupEnd","event","hoverItem","mouseleaveItem","selected_category_onchange","oldVal","mix","directives","inserted","components","ui-button-group","ui_equip_box_component","ref","staticStyle","display","rawName","expression","flex","change","$$selectedVal","target","o","_value","multiple","og","domProps","id_prefix","_v","_s","placeholder","keydown","_k","keyCode","input","composing","padding","title","modifiers","number","_n","blur","$forceUpdate","checked","isArray","_i","$$a","$$c","$$i","update:active","scopedSlots","_u","alt","font-family","text-shadow","border-spacing","getHairMixColor1CSS","step","__r","getHairMixColor2CSS","preventDefault","button","mousemove","mouseleave","contextmenu","rowspan","mousedown","$foreign","pre","ui_equip_box","editor_ui_charactervue_type_script_lang_js_","arr","newVal","get_ft_src","get_ft_style","visibility","ui_character_component","ui_character","editor_ui_character_svgvue_type_script_lang_js_","is_loading","is_processing","fake","vm","setTimeout","download2","innerHTML","cursor","ui_character_svg_component","xmlns","xmlns:xlink","transform","xlink:href","ui_character_svg","editor_ui_character_attributevue_type_script_lang_js_","isShowDebug","isShowEquipImageFilter","max_value","actions","character_action_list","emotions","character_emotion_list","sceneChara","chara_angle","round","degrees","deg","radians","isEquip","getEquipCategoryName","imageUrl","showEquipImageFilter","$set","scrollIntoView","behavior","block","inline","click_scrollIntoView","tagName","oninput","onwheel","amount","sign","deltaY","ui_character_attribute_component","vertical-align","border-collapse","enablePhysics","disabled","wheel","colspan","_q","user-select","max-width","ui_character_attribute","editor_ui_mob_listvue_type_script_lang_js_","store","vuex_esm","Store","state","spawns","mobTime","hide","fh","rx0","rx1","is_clear","onCollapsed","hidePreview","showPreview","smallTip","$root","desc","Map","loadLifeDesc","html","addSpawn","scene_map","lifeMgr","spawnPoints","removeAll","killAll","entities","life","die","$on","ui_mob_list_component","float","_m","mouseover","spawn","text-align","for","ui_mob_list","editor_ui_map_editorvue_type_script_lang_js_","aaaa","isShowRX","typeb","isShowRY","isShowCX","isShowCY","get_ObjPath_style","display_aabb","aabb_color","center","aabb","$gv","m_viewRect","setCenter","$select","fupdate","ui_map_editor_component","model","callback","$$v","_texture_base_path","__h","movetype","endsWith","ui_map_editor","editor_editorvue_type_script_lang_js_","charaList","_last_id","progressValue","progressMaximum","getters","lastId","mutations","increaseProgress","payload","increaseProgressMax","isIdExist","context","sortCharaById","get_n","selectChara","selected_chara","$remote","$physics","CANVAS_SCALE","_addChara","SceneCharacter","__synchronize","dispatch","commit","_createChara","$io","remote_chara","emplace","_parse","_setup_test","addChara","createChara","loadCharacters","localStorage","savedChara","saveCharacters","ls_charaList","setItem","innerWidth","innerHeight","dirty","is_show_chara_dl_menu","mapEditorMode","selectedLayer","wnd_debug_style","wnds","menu","visable","character_list","character_attribute","equip_box","spawnpoint","debug_window","gv","mapState","$store","addNewChara","addCloneChara","oninput_sort","app","updateScreen","$hairMixColor2","catch","reason","params","useItem","openCharacterDLMenu","chara_dl_menu","closeCharacterDLMenu","copyCharaCode","_save_as_png","Engine","getElementById","bgm_outer","scr_rat_x","is_mobile","scr_rat_y","_to_css_px","CSS","px","setStyle","minWidth","em","vh","vw","beforeDestroy","ui-draggable","ui_draggable","ui-dialog","ui_dialog","ui-sortable","ui-trigger","ui-menu","ui-character","ui-character-svg","ui-character-attribute","ui-equip-box","ui-mob-list","ui-map-editor","editor_component","wnd","requireOrder","m_is_rendering_map","m_display_back","m_display_front","m_display_mapobj","m_display_maptile","m_display_portal","m_display_particle_system","m_display_skeletal_anim","m_display_life","m_display_player","m_display_other_player","m_display_name_label","m_display_foothold","m_display_selected_object","m_display_debug_info","m_display_physics_debug","m_debugDraw","flagName","resize","reset_content_style","layer","objs","z-index","close","_save_as_svg","__webpack_exports__","SpriteBase","_Engine_js__WEBPACK_IMPORTED_MODULE_2__","__w","isTexture","hasOwnProperty","__isEmpty","_order","defaultValue","propertyName","converter","_engine","drawGraph","_get","_math_js__WEBPACK_IMPORTED_MODULE_0__","h","save","rect","clip","restore","sh","sx","_drawImage","sy","drawPattern","drawHorizontalPattern","drawVerticalPattern","_drawHorizontalPattern","_drawVerticalPattern","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","exports","__webpack_require__","$failed_urls","$archive","ItemCategoryInfo","imgDir","stringPath","dataDir","stringDir","iconPath","iconRawPath","results","_id","$ItemCategoryInfo","Equip","Consume","Etc","Install","Cash","typeName","0","1","2","3","4","typeId","0000","0001","0002","0003","0004","0100","0101","0102","0103","0104","0105","0106","0107","0108","0109","0110","0121","0122","0123","0124","0125","0126","0127","0128","0130","0131","0132","0133","0134","013526","013530","0136","0137","0138","0140","0141","0142","0143","0144","0145","0146","0147","0148","0149","0150","0151","0152","0153","0154","0155","0156","0157","0158","0170","019","0301","_categoryList","info_map","ResourceManager","dp","equip_map","$setValue","timeout","status","responseText","ontimeout","onabort","root_path","$ROOT_PATH","archive","failed_urls","ps","lastIndex","origin_value","$getValue","$ResourceManager","symbol_isPack","Symbol","url_startsWith_protocol","_setValueByPath","is_pack","_getValueFromArchiveByPath","_path","_getDataPathByUrl","$getValueAsync","pack","packUrl","jsonText","packSync","dataUrl","dataSync","listUrl","listSync","soundMp3Url","soundWavUrl","assetUrl","ItemAttrNormalize","g","regexp_getHairStyleID","regexp_getFaceStyleID","regexp_getHairColor","regexp_getFaceColor","CharacterRenderConfig","id_1","id_2","ItemTypeInfo","Hat","Cape","Top","Overall","Glove","Bottom","Shield","Shoes","Eye Decoration","Earrings","Face Accessory","Face","Hair","external","load_external_resource","_external_raw","typeInfo","overallCategory","subCategory","it","isCash","","external_resource_promise","_concat_external_resource_p","origin_data","_concat_external_resource","id_map","ori_item","_desc","trigger_update_external_equip_list","default_","frameBooks","frames","effects","_frags","frags","_frag","image","originOrZero","mapOffset","metaInfo","DEGTORAD","PI","b2Vec2_temp","_Physics_js__WEBPACK_IMPORTED_MODULE_0__","chara_profile","density","foot_width","foot_j_width","JUMP_FORCE","MOVEMENT_VELOCITY","$LADDER_SPEED","PLAYER_USE_WHEEL_WALKER","FOOT_FRICTION","MOVEMENT_POWER","MOVEMENT_STOP_POWER","PORTAL_COOLDOWN","PPlayerState","_begin_jump","jump","jump_count","_drop","walk","prone","dropDown","_fly","brake","ladder","ladder_move_dir","invincible","freeze","invokeSkill","portal_cooldown","knockback","outOfControl","FootContact","foothold","priority","PCharacterBase","setMovementSpeed","foot_walk","walker","$foothold","prev_$fh","leave_$fh","_foothold","_foot_at","_foothold_priority","_foot_contact_list","portal","_walker_omega","jump_force","clearForce","by","fy","SetPositionXY","ConstantVelocity","GetPosition","mapRenderer","mapController","controller","map_id","getMap","exeScript","reg","tn","cmd","fromTn","toPortal","portalMgr","portals","find","pn","_gotoPortal","tpid","tp","doAfterStep","unload","m_world","onceUnlock","_useLadder","contactLadder","flag","world","$ladder_pj","ladderBody","GetAngle","GetAngularVelocity","SetAngle","SetFixedRotation","SetAwake","SetLinearVelocity2","m_type","b2_kinematicBody","SetMotorSpeed","calcHeight","getPosition","pjd","bodyA","bodyB","localAxisA","lowerTranslation","upperTranslation","enableLimit","maxMotorForce","_getMass","pj","CreateJoint","b2_dynamicBody","DestroyJoint","$sticky_pj","_isCanMove","up","down","EnableMotor","mass","useLadder","ApplyLinearImpulseToCenter2","_usePortal","GetLocalPoint","wheel_sp","velocity","GetLinearVelocity","actionDropdown","SetMaxMotorTorque","remove_sticky","vx","止滑","sticky","_isCanJump","actionJump","isDrop","increment_percent","isNaN","_setWalkerOmegaFromVelocity","movement_velocity","GetWorld","GetGravity","GetMass","SetGravityScale","_body_category","first_pos","jmp_body_pos_y","bdef","fdef","shape","bullet","userData","CreateBody","$type","Copy","_Filter_js__WEBPACK_IMPORTED_MODULE_7__","SetAsBox","ZERO","friction","restitution","fixture","CreateFixture","circle","m_p","m_radius","_set_foot_listener","jd","Initialize","enableMotor","maxMotorTorque","lowerAngle","upperAngle","referenceAngle","frequencyHz","dampingRatio","addStep","Step","addAfterStep","AfterStep","setjumpForce","DestroyBody","fa","fb","GetBody","GetUserData","contact","_isFromSelfContact","SetEnabled","foot_fixture","beginContact","__beginContact_walker","endContact","__endContact_walker","preSolve","__preSolve_walker","_ignoreSelfContact","targetBody","m_body","_beginContactPortal","m_userData","_endContactPortal","oldManifold","script","foot_at","is_wall","chain","prev","y2","__priority_foothold_contact","Clone","foot_contact","mapBound_body","_endContactFootholdList","_$fallEdge","force","ApplyForceToCenter","upper","GetUpperLimit","lower","GetLowerLimit","translation","GetJointTranslation","m_awakeFlag","pop","PCharacter","arguments","moveX","moveY","move","ApplyLinearImpulseToCenter","kbTime","fx","forceMove","md","ground","bodies","maxForce","moveElem","elapsed","ConstantVelocityWorldCenter2","vy","ALPHA","ONE_MINUS_ALPHA","dx","dy","FRAME_ELAPSED","oldVel","pState","setGravityScale","PPlayer","_create","SCREEN_PRINTLN","m_linearVelocity","input_keyDown","mouse_dl","mouse_x","py","mouse_y","SetLinearVelocity","mouse_dm","_$renderer","PRemoteCharacter","_create_anchor","moveTo","m_targetA","SceneObject","$objectid","$layer","damage","_Renderer_NameLabel_js__WEBPACK_IMPORTED_MODULE_2__","crr","__drawName_default","bgColor","_left","_top","_right","_bottom","beginPath","lineTo","arcTo","fill","box2d","FilterHelper","b2Vec2","b2Body","b2Fixture","b2Contact","b2Manifold","b2ContactImpulse","b2ContactListener","$box2d","_on_step","_on_after_step","ApplyForceToCenter2","Acceleration","desiredVel","sourceVel","point","GetWorldCenter","velChange","SubVV","ix","iy","impulse","ApplyLinearImpulse","AccelerationX","desiredVelX","velChangeX","AccelerationY","desiredVelY","velChangeY","ConstantVelocity2","pointX","pointY","ConstantVelocityX","ConstantVelocityY","postSolve","getOwnerID","host","owner","module","FixtureContactListener","filter_preset","next_category","_box2d_ts_build_Box2D_js__WEBPACK_IMPORTED_MODULE_0__","preset","maskBits","categoryBits","debugName","debugCategory","groupIndex","filter_table","filter_list","registerCategory","contactFilter","Fixture","filterName","GetFilterData","GetType","ShouldCollideConnected","ShouldCollide","$gravityAcc","$positionIterations","$velocityIterations","$particleIterations","$particleRadius","GRAVITY","ContactListener","m_fixtureA","m_fixtureB","childIndexA","m_indexA","childIndexB","m_indexB","World","SetDebugDraw","SetContactListener","_Ground_js__WEBPACK_IMPORTED_MODULE_2__","ladderRope","stop","$_mouseJoint","_onceAfterStep","_destryBodyList","_DestroyBody","m_locked","draw_foothold_path_count","particleType","b2_elasticParticle","particleSystemDef","m_particleSystem","CreateParticleSystem","SetRadius","SetDamping","pd","flags","CreateParticleGroup","b2_colorMixingParticle","ColorParticleGroup","$vbo_ps","map_raw_data","_LadderRope_js__WEBPACK_IMPORTED_MODULE_3__","IsLocked","mapMob","mob","_PMob_js__WEBPACK_IMPORTED_MODULE_5__","_destroy","mapNpc","compute_rectangle","_Filter_js__WEBPACK_IMPORTED_MODULE_8__","b2_staticBody","MAP_PORTAL_FULL_SIZE","isSensor","bb","m_vertex1","m_vertex2","player","sceneObject","_PPlayer_js__WEBPACK_IMPORTED_MODULE_4__","p","lowerBound","AddVV","upperBound","hit_fixture","QueryAABB","TestPoint","ReportParticle","system","ShouldQueryParticleSystem","SetTarget","$_mouseDown","mouse_ul","$_mouseUp","mouse_move","$_mouseMove","$_onMouseEvent","GetBodyList","m_next","MAX_FPS","debugDraw","m_ctx","canvasScale","lineWidth","viewZoom","DrawDebugData","fillRect","m_display_particleSystem","gl","GetParticleCount","buf","GetPositionBuffer","vertices","Float32Array","bufferData","ARRAY_BUFFER","STATIC_DRAW","vbo","createBuffer","bindBuffer","m_groupList","particleCount","instanceOffset","GetBufferIndex","drawArrays","POINTS","m_positionBuffer","m_colorBuffer","m_weightBuffer","r","r2","$particle_grd","grd","createRadialGradient","addColorStop","m_firstIndex","m_lastIndex","setTransform","$ladderRope","$drawDebugInfo","$drawDebugInfo2","strokeStyle","footholds","_drawLine","lr","calcWidth","MobAnimationSpeed","$mob_name","MobRenderer_MobRenderer","LifeRenderer","__info","noFlip","level","maxHP","maxMP","PADamage","PDRate","MADamage","MDRate","acc","eva","pushed","fs","summonType","elemAttr","mobType","firstAttack","hideHP","boss","hpTagColor","hpTagBgcolor","showNotRemoteDam","defaultHP","defaultMP","ignoreMoveImpact","_get_desc_base_path","flySpeed","_animations","NpcAnimationSpeed","NpcRenderer_NpcRenderer","rand_r","range","rand_color2i","colorVar","IRenderer","fromInt24","ParticleSystem_Particle","_initParam","math","startScale","lifeMax","lifeVar","angleVar","startColor","startColorVar","color_d","endColor","endColorVar","selfSub","sizeX","sizeY","startSize","startSizeVar","endScale","endSize","endSizeVar","scale_d","startX","posX","posVarX","startY","posY","posVarY","emitterMode","emitterType","gravity","speedVar","dir","cos","sin","radialAccel","radialAccelVar","tangentialAccel","tangentialAccelVar","rotationIsDir","dt","radial","tangential","normalize","clone","mul","newy","_radial","_dir","mx","toHSV","drawColoredGraph2","ParticleSystem_ParticleGroupData","duration","totalParticle","ParticleSystem_ParticleGroup","particles","Infinity","pg","totalTime","particle","t","particle_name","particleName","_particle_path","_experimental_particle","Image","helper","imagedata","imageToImagedata","imagedataToDataURL","whiteToRed","encodeURIComponent","naturalWidth","naturalHeight","URL","viewRect","blendFuncDst","blendFuncSrc","globalCompositeOperation","hh","collide4f2","enable_skeletal_anim","map_sprite","Back","Obj","Tile","map_load_package","$map_sprite","allQuest","Map_MapTexture","texture0","raw_default","a0","a1","movew","moveh","movep","mover","ratio","loadIdentity","_drawRotaGraph","Map_MapObjectBase","quest","qid","_load_object_info","_load_back_info","_load_tile_info","zM","rx","ry","backTags","flow","_load_texture","_texture_raw","__calc_aabb","compute_max_rectangle","sqrt","hr","m_editor_mode","$editor_mouse","next_texture","mcx","mcy","m_selected_object","m_hover_object","$unselect","index_of_texture","collide","setLineDash","lineDashOffset","stroke","__draw_texture","horizontal","vertical","x2","yy","xx","__draw","mrx","mry","MapObject","_update_and_preload","oS","l0","l1","l2","Map_MapParticle","groups","evaluate","mapRawData","sceneMap","particleList","particleRaw","mpp","Map_MapObjectSkeletalAnim","ssanim","_fname","_folder","SSAnim","spineRandomStart","anim_length","setAnimTime","MapTile","tS","u","no","MapPortal","states","skin","_loadTexture","__display_mode","_portals_raw","_type_map","pt","editor","game","_getTexturePath","_script","MapPortalManager","createPortal","MapBackBase","MapBack","bS","MapBackAnimation","MapBackSkeletalAnim","ob","LifeSpawnPoint","spawnId","Map_MapLifeEntity","lifeSpawnPoint","lifeId","is_dead","Map_MapMob","Map_MapNpc","loadDescription","skills","hp","createMob","_loadAction","_load_skill_by_mob_id","_load_skill_info","attack","skill_map","firstSkillInfo","skill_list","skill","_applyState","m_display_mob","skill1","sname","anim","skill_info","$anim","mob_id","FlowerTrap","FairyDust","5","invoke","6","7","8","9","10","skill_map_action","lev","skill_id","unknow skill","decreaseLife","destroyMob","m_display_npc","destroyNpc","MapLifeEntityCapacityRate","MapLifeManager","entity","increaseLife","destroyLife","Create","npcID","is_dummy","mobID","whereLayer","Map_SceneMap","frontground","layeredObject","layeredTile","namedObject","mapBound","$load_tasks","$loading_status","$_mapString","$mapString","$region","_map_names","$MapNames","_Init","loading_task_map","back","ani","objIsEmpty","__constructLayeredObject_obj","tiles","__constructLayeredObject_tile","tile","ti","spineAni","objtb","__compute_top_bottom_border","tiletb","reCalc","VRLeft","VRTop","VRRight","VRBottom","tb","_compute_top_bottom_border","_compute_left_right_border","_window_title","mapName","streetName","_route_load","_get_map_data_url","url2","_loadBgm","_constructBack","_constructLayeredObject","mapobj","__constructMiniMap","construct","_compute_map_bound","viewCenter","_createMapBound","spawnMob","bgmPath","bgm","elem_bgm","_getBgmPath","_bgm_path","autoplay","play","miniMap","centerX","centerY","mouse_dr","player_spawns","isActivated","layerIndex","init","KeySlot","KeySlot_ActionSlot","KeySlotData","KeySlot_SkillSlot","InputKey","inputCommand","_skip_prev","keyDownMap","keyName","_equals_input","iCmd","command","Chair_ChairEffect","_offset","_host","offset","_player","chair","sceneRenderer","layers","option","Chair_Chair","bodyRelMove","_addToScene","$addItem_repeatEquip","SceneCharacter_ChatController","$outputText","_isDisplay","isDisplay","$displayDuration","displayDuration","chatBalloonStyle","ChatBalloon_default_style","$colon","colon","boundBox","$maxLength","ChatBalloon_display_duration","keyboard_map","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","q","SceneCharacter_PlayerJob","inputKey","_update_command_skill","frontKey","SceneCharacter_PlayerJob_2300","activeSkills","Skill","preload","control","SceneCharacter_BaseSceneCharacter","stat","PlayerData","damageSkin","jobController","skillControllers","chatCtrl","$inPacket","$outPacket","_move","shift","isAwake","equipId","from","to","chairId","addToScene","SceneRenderer","sitAction","sitEmotion","skillId","cbfunc","__invokeSkill_offline","__invokeSkill_client","isValid","emit","_handleSkill","_player_control","getLayer","__drawName","NameLabel_default_style","player_state","fly","isLadder","_is_end","attackInfoList","delete","allAttack","attackInfo","shiftAllAttack","AttackInfo","__handleAttack_client","__handleAttack_offline","targetObject","getTargetObject","allDamage","damVar","getCurrentMaxBaseDamage","getCurrentMinBaseDamage","realDamage","critRate","critDamage","critical","DamageNumber","addDamagePair","SceneCharacter_SceneCharacter","scene","$createPlayer","Item","onJobChange","_onJobChange","newJob","$recMove","key_map","ikey","can_use_skill","keySlot","keyDown","input_keyUp","ck","noSit","itemSlot","keyUp","__addItem_offline","incDEXr","timeLimited","Date","_addItem","err","itemData","slotType","getSlot","_removeItem","itemInfo","__useItem_client","__useItem_offline","update_renderer","findItem","_consume","isChair","sitChair","addItem","$style","enter","socket","charaMove","Packet","capture","SceneCharacter_SceneRemoteCharacter","$createRemotePlayer","_remote_control","symbol_targetObject","AttackPair","objectid","setTargetObject","DamagePair","RenderingOption","other","BaseMoveElem","CharacterMoveElem","vue__WEBPACK_IMPORTED_MODULE_14___default","config","productionTip","vuex__WEBPACK_IMPORTED_MODULE_15__","jQuery","jquery__WEBPACK_IMPORTED_MODULE_0___default","init_tasks","AddInitTask","InitAll","promise_list","stand","_construct_actions","getDefaultAction","$index","eval","_Animation_js__WEBPACK_IMPORTED_MODULE_1__","engine","LayerObject","Layer","objects","rendering_option","_RenderingOption__WEBPACK_IMPORTED_MODULE_2__","destroy","opt","b2Assert","condition","b2Maybe","def","b2_maxFloat","b2_epsilon","b2_epsilon_sq","b2_pi","b2_maxManifoldPoints","b2_maxPolygonVertices","b2_aabbExtension","b2_aabbMultiplier","b2_linearSlop","b2_angularSlop","b2_polygonRadius","b2_maxSubSteps","b2_maxTOIContacts","b2_velocityThreshold","b2_maxLinearCorrection","b2_maxAngularCorrection","b2_maxTranslation","b2_maxTranslationSquared","b2_maxRotation","b2_maxRotationSquared","b2_baumgarte","b2_toiBaumgarte","b2_invalidParticleIndex","b2_particleStride","b2_minParticleWeight","b2_maxParticlePressure","b2_maxParticleForce","b2_maxTriadDistanceSquared","b2_minParticleSystemBufferCapacity","b2_barrierCollisionTime","b2_timeToSleep","b2_linearSleepTolerance","b2_angularSleepTolerance","b2Alloc","b2Free","mem","b2Log","message","b2Version","major","minor","revision","b2_version","b2ParseInt","b2ParseUInt","abs","b2MakeArray","b2MakeNullArray","b2MakeNumberArray","b2_pi_over_180","b2_180_over_pi","b2_two_pi","b2Abs","b2Min","b2Max","b2Clamp","lo","hi","b2Swap","tmp","b2IsValid","b2Sq","b2InvSqrt","b2Sqrt","b2Pow","pow","b2DegToRad","b2RadToDeg","b2Cos","b2Sin","b2Acos","acos","b2Asin","asin","b2Atan2","atan2","b2NextPowerOfTwo","b2IsPowerOfTwo","b2Random","b2RandomRange","b2Math_b2Vec2","Length","inv_length","out","v_x","v_y","c_x","c_y","UNITX","UNITY","s_t0","s_t1","s_t2","s_t3","b2Vec2_zero","b2Vec3","a_x","a_y","a_z","b_x","b_y","b_z","b2Mat22","ey","c1","SetVV","r1c1","r1c2","r2c1","r2c2","SetSSSS","SetZero","det","a11","a12","a21","a22","SelfAbs","GetInverse","M","SelfAdd","SelfSub","M_ex","M_ey","A","B","A_ex","A_ey","B_ex","B_ey","A_ex_x","A_ex_y","A_ey_x","A_ey_y","B_ex_x","B_ex_y","B_ey_x","B_ey_y","IDENTITY","b2Mat33","ez","SetXYZ","a31","a32","a13","a23","a33","DotV3V3","CrossV3V3","v_z","b2Rot","q_c","q_s","r_c","r_s","b2Transform","SetIdentity","rotation","T","T_q_c","T_q_s","p_x","p_y","MulRR","MulRV","MulTRR","MulTRV","b2Sweep","localCenter","c0","alpha0","xf","beta","one_minus_beta","floor","b2Color","gg","aa","SetRGBA","mixColor","strength","MixColors","colorA","colorB","dr","dg","db","da","MakeStyleString","b2DrawFlags","RED","GREEN","BLUE","b2Draw","m_drawFlags","b2Timer","m_start","now","b2Counter","m_count","m_min_count","m_max_count","b2GrowableStack_b2GrowableStack","N","m_stack","element","b2BlockAllocator","b2StackAllocator","b2Distance_b2DistanceProxy","m_buffer","MakeArray","m_vertices","SetupDistanceProxy","radius","bestIndex","bestValue","DotVV","b2SimplexCache","metric","indexA","indexB","b2Distance_b2DistanceInput","proxyA","proxyB","transformA","transformB","useRadii","Reset","b2Distance_b2DistanceOutput","pointA","pointB","distance","iterations","b2Distance_b2ShapeCastInput","translationB","b2Distance_b2ShapeCastOutput","normal","lambda","b2_gjkCalls","b2_gjkIters","b2_gjkMaxIters","b2_gjk_reset","b2Distance_b2SimplexVertex","wA","wB","b2Distance_b2Simplex","m_v1","m_v2","m_v3","wALocal","GetVertex","wBLocal","MulXV","metric1","metric2","GetMetric","NegV","e12","CrossVV","CrossOneV","CrossVOne","pA","pB","DistanceVV","w1","w2","s_e12","d12_2","d12_1","inv_d12","w3","w1e12","e13","s_e13","w1e13","d13_1","d13_2","e23","s_e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","b2Distance_s_simplex","b2Distance_s_saveA","b2Distance_s_saveB","b2Distance_s_p","b2Distance_s_d","b2Distance_s_normal","b2Distance_s_supportA","b2Distance_s_supportB","b2Distance","output","simplex","ReadCache","saveA","saveB","saveCount","iter","Solve2","Solve3","GetSearchDirection","LengthSquared","vertex","GetSupport","duplicate","GetWitnessPoints","WriteCache","rA","rB","Normalize","SelfMulAdd","SelfMulSub","MidVV","b2ShapeCast_s_n","b2ShapeCast_s_simplex","b2ShapeCast_s_wA","b2ShapeCast_s_wB","b2ShapeCast_s_v","b2ShapeCast_s_p","b2ShapeCast_s_pointA","b2ShapeCast_s_pointB","b2ShapeCast","xfA","xfB","sigma","tolerance","vp","vr","SelfNeg","GetClosestPoint","b2ContactFeatureType","b2ManifoldType","b2PointState","b2ContactFeature","_key","_key_invalid","_indexA","_indexB","_typeA","_typeB","typeA","typeB","b2ContactID","cf","b2Collision_b2ManifoldPoint","localPoint","normalImpulse","tangentImpulse","b2Collision_b2Manifold","points","localNormal","e_unknown","pointCount","b2Collision_b2WorldManifold","separations","manifold","radiusA","radiusB","e_circles","Initialize_s_pointA","Initialize_s_pointB","DistanceSquaredVV","SelfNormalize","cA","AddVMulSV","Initialize_s_cA","cB","SubVMulSV","Initialize_s_cB","e_faceA","planePoint","Initialize_s_planePoint","clipPoint","Initialize_s_clipPoint","e_faceB","b2GetPointStates","state1","state2","manifold1","manifold2","b2_removeState","jct","b2_persistState","b2_nullState","b2_addState","b2Collision_b2ClipVertex","b2Collision_b2RayCastInput","p1","p2","maxFraction","b2Collision_b2RayCastOutput","fraction","b2Collision_b2AABB","m_cache_center","m_cache_extent","d_x","d_y","valid","IsValid","ExtVV","aabb1","aabb2","Combine2","tmin","tmax","absD_x","absD_y","inv_d","t1","t2","t3","d1_x","d1_y","d2_x","d2_y","b2TestOverlapAABB","b2ClipSegmentToLine","vOut","vIn","vertexIndexA","numOut","vIn0","vIn1","distance0","distance1","interp","e_vertex","e_face","b2TestOverlapShape_s_input","b2TestOverlapShape_s_simplexCache","b2TestOverlapShape_s_output","b2TestOverlapShape","shapeA","shapeB","SetShape","simplexCache","verify","b2DynamicTree_b2TreeNode","m_id","child1","child2","b2DynamicTree_b2DynamicTree","m_root","m_freeList","m_path","m_insertionCount","stack","Push","GetCount","node","Pop","TestOverlap","IsLeaf","TestContain","s_r","s_v","abs_v","AbsV","s_abs_v","segmentAABB","s_segmentAABB","t_x","t_y","GetCenter","GetExtents","subInput","s_subInput","s_node_id","AllocateNode","r_x","r_y","InsertLeaf","proxy","RemoveLeaf","FreeNode","displacement","Contains","leaf","leafAABB","area","GetPerimeter","combinedAABB","s_combinedAABB","combinedArea","cost","inheritanceCost","cost1","s_aabb","oldArea","newArea","cost2","sibling","oldParent","newParent","index2","Balance","grandParent","C","balance","F","G","D","E","GetAreaNode","rootArea","height1","ComputeHeightNode","height2","ValidateStructure","ValidateMetrics","maxBalance","GetMaxBalanceNode","Validate","newOrigin","ShiftOriginNode","b2Pair","b2BroadPhase_b2BroadPhase","m_tree","m_proxyCount","m_moveCount","m_moveBuffer","m_pairCount","m_pairBuffer","CreateProxy","BufferMove","UnBufferMove","DestroyProxy","MoveProxy","queryProxy","fatAABB","Query","pair","b2PairLessThan","primaryPair","QueryPoint","RayCast","GetHeight","GetMaxBalance","GetAreaRatio","ShiftOrigin","pair1","pair2","b2_toiTime","b2_toiMaxTime","b2_toiCalls","b2_toiIters","b2_toiMaxIters","b2_toiRootIters","b2_toiMaxRootIters","b2_toi_reset","b2TimeOfImpact_s_xfA","b2TimeOfImpact_s_xfB","b2TimeOfImpact_s_pointA","b2TimeOfImpact_s_pointB","b2TimeOfImpact_s_normal","b2TimeOfImpact_s_axisA","b2TimeOfImpact_s_axisB","b2TimeOfImpact_b2TOIInput","sweepA","sweepB","tMax","b2TOIOutputState","b2SeparationFunctionType","b2TOIOutput","b2TimeOfImpact_b2SeparationFunction","m_sweepA","m_sweepB","m_localPoint","m_axis","m_proxyA","m_proxyB","GetTransform","e_points","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","axisA","axisB","b2TimeOfImpact_s_timer","b2TimeOfImpact_s_cache","b2TimeOfImpact_s_distanceInput","b2TimeOfImpact_s_distanceOutput","b2TimeOfImpact_s_fcn","b2TimeOfImpact_s_indexA","b2TimeOfImpact_s_indexB","b2TimeOfImpact_s_sweepA","b2TimeOfImpact_s_sweepB","b2TimeOfImpact","timer","maxVertices","totalRadius","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","done","pushBackIter","s2","FindMinSeparation","e_separated","s1","Evaluate","e_failed","rootIterCount","a2","GetMilliseconds","b2CollideCircles_s_pA","b2CollideCircles_s_pB","b2CollideCircles","circleA","circleB","distSqr","b2CollidePolygonAndCircle_s_c","b2CollidePolygonAndCircle_s_cLocal","b2CollidePolygonAndCircle_s_faceCenter","b2CollidePolygonAndCircle","polygonA","cLocal","MulTXV","normalIndex","separation","vertexCount","normals","m_normals","vertIndex1","vertIndex2","v1","v2","u1","u2","faceCenter","b2EdgeSeparation_s_normal1World","b2EdgeSeparation_s_normal1","b2EdgeSeparation_s_v1","b2EdgeSeparation_s_v2","b2EdgeSeparation","poly1","xf1","edge1","poly2","xf2","vertices1","normals1","count2","vertices2","normal1World","normal1","minDot","dot","b2FindMaxSeparation_s_d","b2FindMaxSeparation_s_dLocal1","b2FindMaxSeparation","edgeIndex","count1","m_centroid","dLocal1","edge","maxDot","prevEdge","sPrev","nextEdge","sNext","bestEdge","bestSeparation","increment","b2FindIncidentEdge_s_normal1","b2CollidePolygons_s_incidentEdge","b2CollidePolygons_s_clipPoints1","b2CollidePolygons_s_clipPoints2","b2CollidePolygons_s_edgeA","b2CollidePolygons_s_edgeB","b2CollidePolygons_s_localTangent","b2CollidePolygons_s_localNormal","b2CollidePolygons_s_planePoint","b2CollidePolygons_s_normal","b2CollidePolygons_s_tangent","b2CollidePolygons_s_ntangent","b2CollidePolygons_s_v11","b2CollidePolygons_s_v12","b2CollidePolygons","polyA","polyB","edgeA","separationA","edgeB","separationB","incidentEdge","normals2","i1","i2","cf0","cf1","b2FindIncidentEdge","iv1","iv2","local_v11","local_v12","localTangent","tangent","v11","v12","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","np","cp","b2CollideEdgeAndCircle_s_Q","b2CollideEdgeAndCircle_s_e","b2CollideEdgeAndCircle_s_d","b2CollideEdgeAndCircle_s_e1","b2CollideEdgeAndCircle_s_e2","b2CollideEdgeAndCircle_s_P","b2CollideEdgeAndCircle_s_n","b2CollideEdgeAndCircle_s_id","b2CollideEdgeAndCircle","Q","P","m_hasVertex0","A1","m_vertex0","B1","e1","m_hasVertex3","B2","m_vertex3","A2","e2","den","b2EPAxis","b2TempPolygon","b2CollideEdge_b2EPCollider","m_polygonB","m_xf","m_centroidB","m_v0","m_normal0","m_normal1","m_normal2","m_normal","m_type1","m_type2","m_lowerLimit","m_upperLimit","m_front","polygonB","MulTXX","hasVertex0","hasVertex3","s_edge1","offset1","offset0","offset2","convex1","convex2","edge0","s_edge0","edge2","s_edge2","edgeAxis","ComputeEdgeSeparation","s_edgeAxis","polygonAxis","ComputePolygonSeparation","s_polygonAxis","primaryAxis","ie","s_ie","rf","s_rf","ie0","ie1","sideNormal1","sideNormal2","s_clipPoints1","s_clipPoints2","axis","perp","s_perp","s_n","b2CollideEdgeAndPolygon_s_collider","b2CollideEdgeAndPolygon","Collide","b2Shape_b2MassData","I","b2ShapeType","b2BodyType","b2JointType","b2LimitState","b2Shape","b2CircleShape_b2CircleShape","e_circleShape","TestPoint_s_center","TestPoint_s_d","childIndex","ComputeDistance_s_center","RayCast_s_position","RayCast_s_s","RayCast_s_r","ComputeAABB_s_p","massData","radius_sq","l","com","b2PolygonShape_b2PolygonShape","e_polygonShape","unique","i0","hull","ih","Set_s_r","Set_s_v","vertexi1","vertexi2","ComputeCentroid","hx","hy","SetPosition","SetRotationAngle","pLocal","TestPoint_s_pLocal","ComputeDistance_s_pLocal","maxDistance","normalForMaxDistance","ComputeDistance_s_normalForMaxDistance","minDistance","ComputeDistance_s_minDistance","minDistance2","ComputeDistance_s_distance","distance2","RayCast_s_p1","RayCast_s_p2","RayCast_s_d","numerator","denominator","ComputeAABB_s_v","MinV","MaxV","SelfSubXY","SelfAddXY","ComputeMass_s_center","ComputeMass_s_s","SelfMul","ComputeMass_s_e1","ComputeMass_s_e2","triangleArea","MulSV","ex1","ey1","ex2","ey2","Validate_s_e","Validate_s_v","normalL","ComputeSubmergedArea_s_normalL","offsetL","depths","diveCount","intoIndex","outoIndex","lastSubmerged","isSubmerged","ComputeSubmergedArea_s_md","ComputeMass","intoIndex2","outoIndex2","intoLamdda","outoLamdda","intoVec","ComputeSubmergedArea_s_intoVec","outoVec","ComputeSubmergedArea_s_outoVec","ComputeSubmergedArea_s_center","p3","vs","pRef","ComputeCentroid_s_pRef","ComputeCentroid_s_e1","ComputeCentroid_s_e2","b2EdgeShape_b2EdgeShape","e_edgeShape","ComputeDistance_s_v1","ComputeDistance_s_v2","ComputeDistance_s_d","ComputeDistance_s_s","ds","RayCast_s_e","RayCast_s_q","ComputeAABB_s_v1","ComputeAABB_s_v2","b2ChainShape_b2ChainShape","e_chainShape","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","prevVertex","nextVertex","CreateChain","ComputeDistance_s_edgeShape","GetChildEdge","ComputeDistance","edgeShape","RayCast_s_edgeShape","b2Filter","DEFAULT","b2FixtureDef","b2Fixture_b2FixtureProxy","b2Fixture_b2Fixture","m_density","m_friction","m_restitution","m_proxies","m_filter","m_isSensor","m_shape","sensor","Refilter","GetContactList","fixtureA","GetFixtureA","fixtureB","GetFixtureB","FlagForFiltering","broadPhase","m_contactManager","m_broadPhase","TouchProxy","treeNode","bodyIndex","Dump","GetChildCount","ComputeAABB","proxyCount","transform1","transform2","Synchronize_s_aabb1","Synchronize_s_aabb2","Synchronize_s_displacement","b2Body_b2BodyDef","linearVelocity","angularVelocity","linearDamping","angularDamping","allowSleep","awake","fixedRotation","gravityScale","b2Body_b2Body","bd","m_islandFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_toiFlag","m_islandIndex","m_xf0","m_sweep","m_angularVelocity","m_force","m_torque","m_prev","m_fixtureList","m_fixtureCount","m_jointList","m_contactList","m_mass","m_invMass","m_I","m_invI","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_controllerList","m_controllerCount","CreateFixtureShapeDensity","CreateFixtureDef","CreateProxies","ResetMassData","m_newFixture","CreateFixtureShapeDensity_s_def","ppF","Destroy","DestroyProxies","SetTransformXY","Synchronize","FindNewContacts","SetTransformVec","wake","torque","oldCenter","SetMassData_s_oldCenter","AddVCrossSV","ResetMassData_s_localCenter","GetMassData","ResetMassData_s_massData","ResetMassData_s_oldCenter","localVector","worldPoint","worldVector","GetLinearVelocityFromWorldPoint","GetWorldPoint","SynchronizeFixtures","ce","ce0","TouchProxies","IsActive","type_str","SynchronizeFixtures_s_xf1","jn","joint","m_collideConnected","Advance","b2Joint_b2Jacobian","linear","angularA","angularB","b2JointEdge","b2JointDef","e_unknownJoint","collideConnected","b2Joint_b2Joint","m_index","m_edgeA","m_edgeB","m_bodyA","m_bodyB","b2DistanceJoint_b2DistanceJointDef","e_distanceJoint","localAnchorA","localAnchorB","b2","anchor1","anchor2","b2DistanceJoint_b2DistanceJoint","m_frequencyHz","m_dampingRatio","m_bias","m_localAnchorA","m_localAnchorB","m_gamma","m_impulse","m_length","m_u","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_qA","m_qB","m_lalcA","m_lalcB","inv_dt","hz","positions","aA","vA","velocities","aB","vB","qA","qB","crAu","crBu","invMass","omega","warmStarting","dtRatio","InitVelocityConstraints_s_P","vpA","SolveVelocityConstraints_s_vpA","vpB","SolveVelocityConstraints_s_vpB","Cdot","SolveVelocityConstraints_s_P","SolvePositionConstraints_s_P","b2AreaJoint_b2AreaJointDef","e_areaJoint","b2AreaJoint_b2AreaJoint","m_targetArea","m_bodies","m_targetLengths","m_joints","m_deltas","m_delta","djd","body_c","next_c","SetFrequency","SetDampingRatio","prev_c","body_v","dotMassSum","crossMassSum","perimeter","dist","toExtrude","next_i","norm_sq","b2FrictionJoint_b2FrictionJointDef","e_frictionJoint","maxTorque","bA","bB","b2FrictionJoint_b2FrictionJoint","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","m_K","mA","mB","iA","iB","K","oldImpulse","maxImpulse","Cdot_v2","SolveVelocityConstraints_s_Cdot_v2","impulseV","MulMV","SolveVelocityConstraints_s_impulseV","oldImpulseV","SolveVelocityConstraints_s_oldImpulseV","b2GearJoint_b2GearJointDef","e_gearJoint","b2GearJoint_b2GearJoint","coordinateA","coordinateB","m_typeA","m_typeB","m_localAnchorC","m_localAnchorD","m_localAxisC","m_localAxisD","m_referenceAngleA","m_referenceAngleB","m_constant","m_ratio","m_indexC","m_indexD","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","m_qC","m_qD","m_lalcC","m_lalcD","m_joint1","joint1","m_joint2","joint2","m_bodyC","GetBodyA","GetBodyB","xfC","aC","e_revoluteJoint","revolute","m_referenceAngle","prismatic","m_localXAxisA","pC","m_bodyD","xfD","aD","pD","vC","wC","vD","wD","qC","qD","InitVelocityConstraints_s_u","rC","InitVelocityConstraints_s_rC","InitVelocityConstraints_s_rA","rD","InitVelocityConstraints_s_rD","InitVelocityConstraints_s_rB","cC","cD","JvAC","JvBD","JwA","JwB","JwC","JwD","SolvePositionConstraints_s_u","SolvePositionConstraints_s_rC","SolvePositionConstraints_s_rA","SolvePositionConstraints_s_rD","SolvePositionConstraints_s_rB","index1","b2MotorJoint_b2MotorJointDef","e_motorJoint","linearOffset","angularOffset","correctionFactor","angleA","angleB","b2MotorJoint_b2MotorJoint","m_linearOffset","m_angularOffset","m_correctionFactor","m_linearError","m_angularError","IsEqualToV","inv_h","CrossSV","impulse_v2","SolveVelocityConstraints_s_impulse_v2","oldImpulse_v2","SolveVelocityConstraints_s_oldImpulse_v2","b2MouseJoint_b2MouseJointDef","e_mouseJoint","b2MouseJoint_b2MouseJoint","m_beta","m_C","IsAwake","SolveVelocityConstraints_s_Cdot","SolveVelocityConstraints_s_impulse","SolveVelocityConstraints_s_oldImpulse","b2PrismaticJoint_b2PrismaticJointDef","e_prismaticJoint","motorSpeed","GetLocalVector","b2PrismaticJoint_b2PrismaticJoint","m_localYAxisA","m_motorImpulse","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_motorSpeed","m_enableLimit","m_enableMotor","m_limitState","e_inactiveLimit","m_perp","m_s1","m_s2","m_a1","m_a2","m_K3","m_K2","m_motorMass","InitVelocityConstraints_s_d","jointTranslation","e_equalLimits","e_atLowerLimit","e_atUpperLimit","LA","LB","Cdot1_x","Cdot1_y","Cdot2","f1","SolveVelocityConstraints_s_f1","df3","Solve33","SolveVelocityConstraints_s_df3","f2r","Solve22","SolveVelocityConstraints_s_f2r","df2","SolveVelocityConstraints_s_df2","SolvePositionConstraints_s_d","SolvePositionConstraints_s_impulse","C1_x","C1_y","linearError","angularError","C2","k11","k12","k13","k22","k23","k33","K2","impulse1","Solve","SolvePositionConstraints_s_impulse1","GetJointTranslation_s_pA","GetJointTranslation_s_pB","GetJointTranslation_s_d","GetWorldVector","GetJointTranslation_s_axis","b2PulleyJoint_b2PulleyJointDef","e_pulleyJoint","groundAnchorA","groundAnchorB","lengthA","lengthB","groundA","groundB","anchorA","anchorB","b2PulleyJoint_b2PulleyJoint","m_groundAnchorA","m_groundAnchorB","m_lengthA","m_lengthB","m_uA","m_uB","ruA","ruB","PA","InitVelocityConstraints_s_PA","PB","InitVelocityConstraints_s_PB","SolveVelocityConstraints_s_PA","SolveVelocityConstraints_s_PB","uA","uB","SolvePositionConstraints_s_PA","SolvePositionConstraints_s_PB","GetCurrentLengthA_s_p","GetCurrentLengthB_s_p","b2RevoluteJoint_b2RevoluteJointDef","b2RevoluteJoint_b2RevoluteJoint","m_maxMotorTorque","m_lowerAngle","m_upperAngle","jointAngle","Cdot1","SolveVelocityConstraints_s_Cdot1","impulse_v3","SolveVelocityConstraints_s_impulse_v3","rhs_x","rhs_y","reduced_v2","SolveVelocityConstraints_s_reduced_v2","positionError","limitImpulse","C_v2","SolvePositionConstraints_s_C_v2","b2RopeJoint_b2RopeJointDef","e_ropeJoint","maxLength","b2RopeJoint_b2RopeJoint","m_maxLength","m_state","crA","crB","b2WeldJoint_b2WeldJointDef","e_weldJoint","b2WeldJoint_b2WeldJoint","GetInverse22","invM","GetSymInverse33","impulse2","MulM33XY","SolveVelocityConstraints_s_impulse1","MulM33XYZ","C1","SolvePositionConstraints_s_C1","b2WheelJoint_b2WheelJointDef","e_wheelJoint","b2WheelJoint_b2WheelJoint","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","m_springMass","damp","ay","sAy","sBy","GetPrismaticJointTranslation","GetPrismaticJointSpeed","GetRevoluteJointAngle","GetRevoluteJointSpeed","b2MixFriction","friction1","friction2","b2MixRestitution","restitution1","restitution2","b2ContactEdge","b2Contact_b2Contact","m_touchingFlag","m_enabledFlag","m_filterFlag","m_bulletHitFlag","m_manifold","m_toiCount","m_toi","m_tangentSpeed","m_oldManifold","m_nodeA","m_nodeB","worldManifold","GetShape","listener","tManifold","touching","wasTouching","sensorA","IsSensor","sensorB","mp2","id2","mp1","BeginContact","EndContact","PreSolve","ComputeTOI_s_input","ComputeTOI_s_output","b2CircleContact_b2CircleContact","allocator","b2PolygonContact_b2PolygonContact","b2PolygonAndCircleContact_b2PolygonAndCircleContact","b2EdgeAndCircleContact_b2EdgeAndCircleContact","b2EdgeAndPolygonContact_b2EdgeAndPolygonContact","b2ChainAndCircleContact_b2ChainAndCircleContact","Evaluate_s_edge","b2ChainAndPolygonContact_b2ChainAndPolygonContact","b2ContactRegister","createFcn","destroyFcn","primary","b2ContactFactory_b2ContactFactory","m_allocator","InitializeRegisters","type1","type2","pool","poolCreateFcn","poolDestroyFcn","m_registers","e_shapeTypeCount","AddType","b2DestructionListener","b2WorldCallbacks_b2ContactFilter","filter1","filter2","b2_defaultFilter","b2WorldCallbacks_b2ContactImpulse","normalImpulses","tangentImpulses","b2_defaultListener","b2QueryCallback","b2RayCastCallback","b2ContactManager_b2ContactManager","m_contactCount","m_contactFilter","m_contactListener","m_contactFactory","fA","fB","GetChildIndexA","GetChildIndexB","UpdatePairs","AddPair","IsTouching","cNuke","activeA","activeB","Update","b2Profile","solve","solveInit","solveVelocity","solvePosition","broadphase","solveTOI","b2TimeStep","velocityIterations","positionIterations","particleIterations","b2TimeStep_b2Position","b2TimeStep_b2Velocity","b2SolverData","g_blockSolve","b2ContactSolver_b2VelocityConstraintPoint","normalMass","tangentMass","velocityBias","b2ContactSolver_b2ContactVelocityConstraint","invMassA","invMassB","invIA","invIB","tangentSpeed","contactIndex","b2ContactSolver_b2ContactPositionConstraint","localPoints","localCenterA","localCenterB","b2ContactSolver_b2ContactSolverDef","b2ContactSolver_b2PositionSolverManifold","pc","b2ContactSolver_b2ContactSolver","m_step","m_positionConstraints","m_velocityConstraints","new_length","m_positions","m_velocities","m_contacts","contacts","GetManifold","vc","vcp","InitializeVelocityConstraints_s_xfA","InitializeVelocityConstraints_s_xfB","InitializeVelocityConstraints_s_worldManifold","rnA","rnB","kNormal","rtA","rtB","kTangent","vRel","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","WarmStart_s_P","dv","SolveVelocityConstraints_s_dv","dv1","SolveVelocityConstraints_s_dv1","dv2","SolveVelocityConstraints_s_dv2","SolveVelocityConstraints_s_a","SolveVelocityConstraints_s_b","SolveVelocityConstraints_s_x","SolveVelocityConstraints_s_d","P1","SolveVelocityConstraints_s_P1","P2","SolveVelocityConstraints_s_P2","P1P2","SolveVelocityConstraints_s_P1P2","vt","maxFriction","newImpulse","vn","cp1","cp2","vn1","vn2","SolvePositionConstraints_s_xfA","SolvePositionConstraints_s_xfB","psm","SolvePositionConstraints_s_psm","minSeparation","toiIndexA","toiIndexB","SolveTOIPositionConstraints_s_xfA","SolveTOIPositionConstraints_s_xfB","SolveTOIPositionConstraints_s_psm","SolveTOIPositionConstraints_s_rA","SolveTOIPositionConstraints_s_rB","SolveTOIPositionConstraints_s_P","b2Island_b2Island","m_bodyCount","m_jointCount","m_bodyCapacity","m_contactCapacity","m_jointCapacity","bodyCapacity","contactCapacity","jointCapacity","m_listener","profile","s_timer","solverData","s_solverData","contactSolverDef","s_contactSolverDef","contactSolver","s_contactSolver","InitializeVelocityConstraints","WarmStart","InitVelocityConstraints","SolveVelocityConstraints","StoreImpulses","s_translation","positionSolved","contactsOkay","SolvePositionConstraints","jointsOkay","jointOkay","SynchronizeTransform","Report","minSleepTime","linTolSqr","angTolSqr","subStep","SolveTOIPositionConstraints","constraints","s_impulse","PostSolve","b2ParticleFlag","b2ParticleGroupFlag","b2Particle_b2ParticleDef","lifetime","b2CalculateParticleIterations","timeStep","b2Particle_b2ParticleHandle","b2ParticleGroup_b2ParticleGroupDef","groupFlags","shapeCount","stride","b2ParticleGroup_b2ParticleGroup","m_groupFlags","m_strength","m_timestamp","m_inertia","m_center","m_transform","m_system","m_flagsBuffer","b2_particleGroupInternalMask","SetGroupFlags","UpdateStatistics","GetLinearVelocityFromWorldPoint_s_t0","ApplyForce","callDestructionListener","DestroyParticle","m_velocityBuffer","GetParticleMass","inv_mass","b2StackQueue_b2StackQueue","capacity","m_back","m_capacity","b2VoronoiDiagram_b2VoronoiDiagram","generatorCapacity","m_generatorCapacity","m_generatorCount","m_countX","m_countY","m_diagram","m_generatorBuffer","Generator","tag","necessary","margin","inverseRadius","necessary_count","queue","Task","Empty","Front","m_x","m_y","m_i","m_generator","ax","bx","std_iter_swap","array","default_compare","std_sort","len","cmp","pivot","std_stable_sort","std_remove_if","predicate","std_lower_bound","last","std_upper_bound","std_rotate","n_first","b2VoronoiDiagram","b2ParticleSystem_b2GrowableBuffer","Grow","newCapacity","Reserve","newEnd","newCount","pred","std_unique","b2ParticleSystem_b2FixtureParticleQueryCallback","childCount","GetAABB","enumerator","GetInsideBoundsEnumerator","GetNext","ReportFixtureAndParticle","b2ParticleSystem_b2ParticleContact","weight","rhs","IsEqual","b2ParticleSystem_b2ParticleBodyContact","b2ParticlePair","b2ParticleSystem_b2ParticleTriad","indexC","pa","pb","ka","kb","kc","b2ParticleSystemDef","strictContactCheck","maxCount","pressureStrength","dampingStrength","elasticStrength","springStrength","viscousStrength","surfaceTensionPressureStrength","surfaceTensionNormalStrength","repulsiveStrength","powderStrength","ejectionStrength","staticPressureStrength","staticPressureRelaxation","staticPressureIterations","colorMixingStrength","destroyByAge","lifetimeGranularity","b2ParticleSystem_b2ParticleSystem","m_paused","m_allParticleFlags","m_needsUpdateAllParticleFlags","m_allGroupFlags","m_needsUpdateAllGroupFlags","m_hasForce","m_iterationIndex","m_inverseDensity","m_particleDiameter","m_inverseDiameter","m_squaredDiameter","m_internalAllocatedCapacity","m_handleIndexBuffer","UserOverridableBuffer","m_forceBuffer","m_staticPressureBuffer","m_accumulationBuffer","m_accumulation2Buffer","m_depthBuffer","m_groupBuffer","m_userDataBuffer","m_stuckThreshold","m_lastBodyContactStepBuffer","m_bodyContactCountBuffer","m_consecutiveContactStepsBuffer","m_stuckParticleBuffer","m_proxyBuffer","Proxy","m_contactBuffer","m_bodyContactBuffer","m_triadBuffer","m_expirationTimeBuffer","m_indexByExpirationTimeBuffer","m_timeElapsed","m_expirationTimeBufferRequiresSorting","m_groupCount","m_def","SetStrictContactCheck","SetDensity","SetMaxParticleCount","SetDestructionByAge","yOffset","yShift","xScale","xOffset","xShift","DestroyParticleGroup","FreeUserOverridableBuffer","FreeBuffer","ReallocateInternalAllocatedBuffers","DestroyOldestParticle","SolveZombie","IsZero","RequestBuffer","Append","finiteLifetime","SetParticleLifetime","ExpirationTimeToLifetime","GetQuantizedTimeElapsed","RotateBuffer","SetParticleFlags","handle","SetIndex","b2_zombieParticle","b2_destructionListenerParticle","oldestFiniteLifetimeParticle","oldestInfiniteLifetimeParticle","DestroyParticlesInShape_s_aabb","DestroyParticlesInShapeCallback","Destroyed","groupDef","s_transform","CreateParticleGroup_s_transform","SetPositionAngle","firstIndex","CreateParticlesWithShapeForGroup","shapes","CreateParticlesWithShapesForGroup","positionData","CreateParticleForGroup","ConnectionFilter","UpdateContacts","UpdatePairsAndTriads","JoinParticleGroups","groupA","groupB","JoinParticleGroupsFilter","nodeBuffer","ParticleListNode","InitializeParticleLists","MergeParticleListsInContact","survivingList","FindLongestParticleList","MergeZombieParticleListNodes","CreateParticleGroupsFromParticleList","UpdatePairsAndTriadsWithParticleList","paused","damping","newFlags","b2_tensileParticle","buffer","SetUserOverridableBuffer","steps","Data","ComputeCollisionEnergy_s_v","vel_data","sum_v2","enabled","initializeExpirationTimes","quantizedLifetime","newExpirationTime","GetExpirationTimeBuffer","expirationTime","GetParticleLifetime","totalMass","velocityDelta","IsSignificantForce","ForceCanBeApplied","PrepareForceBuffer","distributedForce","endProxy","firstProxy","computeTag","CompareProxyTag","lastProxy","CompareTagProxy","pos_data","QueryShapeAABB_s_aabb","slop","QueryPointAABB_s_aabb","point1","point2","RayCast_s_aabb","s_p","RayCast_s_p","RayCast_s_v","RayCast_s_n","s_point","RayCast_s_point","determinant","sqrtDeterminant","userSuppliedCapacity","oldBuffer","oldCapacity","newBuffer","deferred","ReallocateBuffer3","ReallocateBuffer5","ReallocateBuffer4","LimitCapacity","ReallocateHandleBuffers","stuck","particleDef","CreateParticle","s_edge","CreateParticlesStrokeShapeForGroup_s_edge","s_d","CreateParticlesStrokeShapeForGroup_s_d","CreateParticlesStrokeShapeForGroup_s_p","GetParticleStride","positionOnEdge","edgeLength","CreateParticlesFillShapeForGroup_s_aabb","CreateParticlesFillShapeForGroup_s_p","identity","CreateParticlesStrokeShapeForGroup","CreateParticlesFillShapeForGroup","compositeShape","CompositeShape","oldIndex","newIndex","m_destructionListener","SayGoodbyeParticleGroup","b2_wallParticle","b2_springParticle","GetGroupFlags","b2_rigidParticleGroup","s_dab","UpdatePairsAndTriads_s_dab","s_dbc","UpdatePairsAndTriads_s_dbc","s_dca","UpdatePairsAndTriads_s_dca","particleFlags","k_pairFlags","af","bf","IsNecessary","ParticleCanBeConnected","ShouldCreatePair","ComparePairIndices","Unique","MatchPairIndices","k_triadFlags","diagram","AddGenerator","Generate","ShouldCreateTriad","dab","dbc","dca","maxDistanceSquared","groupC","triad","midPoint_x","midPoint_y","GetNodes","CompareTriadIndices","MatchTriadIndices","ReactiveFilter","b2_reactiveParticle","diffA","diffB","bufferIndex","ContainsParticle","listA","listB","_tmp","MergeParticleLists","nextB","MergeParticleListAndNode","newGroup","CloneParticle","contactGroups","contactGroupsCount","b2_particleGroupNeedsUpdateDepth","groupsToUpdate","groupsToUpdateCount","iterationCount","ap0","bp0","ap1","bp1","lowerTag","upperTag","InsideBoundsEnumerator","AddContact_s_d","distBtParticlesSq","invD","rightTag","computeRelativeTag","AddContact","bottomLeftTag","bottomRightTag","FindContacts_Reference","proxies","inv_diam","UpdateProxies_Reference","CompareProxyProxy","GetParticleContactFilter","RemoveIf","b2_particleContactFilterParticle","ShouldCollideParticleParticle","particlePairs","GetParticleContactListener","contactListener","itemIndex","Invalidate","BeginContactParticleParticle","exceptZombie","UpdateProxies","SortProxies","b2ParticlePairSet","NotifyContactListenerPreContact","FindContacts","FilterContacts","NotifyContactListenerPostContact","b2ParticleContactIsZombie","fixtureSet","GetFixtureContactListener","BeginContactFixtureParticle","UpdateBodyContacts_s_aabb","FixtureParticleSet","NotifyBodyContactListenerPreContact","SetCount","UpdateBodyContactsCallback","GetFixtureContactFilter","RemoveSpuriousBodyContacts","NotifyBodyContactListenerPostContact","s_subStep","Solve_s_subStep","SolveLifetimes","UpdateAllParticleFlags","UpdateAllGroupFlags","UpdateBodyContacts","ComputeWeight","ComputeDepth","UpdatePairsAndTriadsWithReactiveParticles","SolveForce","b2_viscousParticle","SolveViscous","b2_repulsiveParticle","SolveRepulsive","b2_powderParticle","SolvePowder","SolveTensile","b2_solidParticleGroup","SolveSolid","SolveColorMixing","SolveGravity","b2_staticPressureParticle","SolveStaticPressure","SolvePressure","SolveDamping","k_extraDampingFlags","SolveExtraDamping","SolveElastic","SolveSpring","LimitVelocity","SolveRigidDamping","b2_barrierParticle","SolveBarrier","SolveCollision","SolveRigid","SolveWall","SolveCollision_s_aabb","p2_x","p2_y","SolveCollisionCallback","criticalVelocitySquared","GetCriticalVelocitySquared","s_gravity","SolveGravity_s_gravity","SolveBarrier_s_aabb","s_va","SolveBarrier_s_va","s_vb","SolveBarrier_s_vb","s_pba","SolveBarrier_s_pba","s_vba","SolveBarrier_s_vba","s_vc","SolveBarrier_s_vc","s_pca","SolveBarrier_s_pca","s_vca","SolveBarrier_s_vca","s_qba","SolveBarrier_s_qba","s_qca","SolveBarrier_s_qca","s_dv","SolveBarrier_s_dv","s_f","SolveBarrier_s_f","k_barrierWallFlags","aGroup","bGroup","vb","pba","vba","cGroup","pca","vca","e0","qba","qca","sqrtDet","IsRigidGroup","inertia","GetInertia","ParticleApplyForce","criticalPressure","GetCriticalPressure","pressurePerWeight","maxPressure","relaxation","SolvePressure_s_f","k_noPressureFlags","velocityPerPressure","GetParticleInvMass","SolveDamping_s_v","SolveDamping_s_f","quadraticDamping","GetCriticalVelocity","SolveRigidDamping_s_t0","SolveRigidDamping_s_t1","SolveRigidDamping_s_p","SolveRigidDamping_s_v","invInertiaA","tangentDistanceA","invInertiaB","tangentDistanceB","InitDampingParameterWithRigidGroupOrParticle","InitDampingParameter","GetLocalCenter","ComputeDampingImpulse","ApplyDamping","aRigid","bRigid","SolveExtraDamping_s_v","SolveExtraDamping_s_f","s_position","SolveRigid_s_position","s_rotation","SolveRigid_s_rotation","SolveRigid_s_transform","s_velocityTransform","SolveRigid_s_velocityTransform","SetPositionRotation","MulXX","velocityTransform","s_pa","SolveElastic_s_pa","s_pb","SolveElastic_s_pb","s_pc","SolveElastic_s_pc","SolveElastic_s_r","SolveElastic_s_t0","oa","oc","invR","SolveSpring_s_pa","SolveSpring_s_pb","SolveSpring_s_d","SolveSpring_s_f","r0","r1","s_weightedNormal","SolveTensile_s_weightedNormal","s_s","SolveTensile_s_s","SolveTensile_s_f","weightedNormal","criticalVelocity","normalStrength","maxVelocityVariation","SolveViscous_s_v","SolveViscous_s_f","SolveRepulsive_s_f","SolvePowder_s_f","minWeight","SolveSolid_s_f","velocityPerForce","colorMixing","newIndices","allParticleFlags","destructionListener","SayGoodbyeParticle","Test","writeOffset","readOffset","modified","b2_particleGroupCanBeEmpty","b2_particleGroupWillBeDestroyed","LifetimeToExpirationTime","quantizedTimeElapsed","expirationTimes","expirationTimeIndices","particleIndexA","particleIndexB","expirationTimeA","expirationTimeB","infiniteExpirationTimeA","particleIndex","mid","end","GetIndex","indexByExpirationTime","inverseStride","b2_fixtureContactFilterParticle","b2_fixtureContactListenerParticle","b2_particleContactListenerParticle","newData","oldFlags","lhs","BodyContactCompare","RemoveSpuriousBodyContacts_s_n","s_pos","RemoveSpuriousBodyContacts_s_pos","s_normal","RemoveSpuriousBodyContacts_s_normal","currentContacts","invInertia","tangentDistance","isRigidGroup","normalVelocity","xTruncBits","yTruncBits","tagBits","yMask","xMask","b2ParticleSystem","m_xLower","m_xUpper","m_yLower","m_yUpper","m_first","m_last","xTag","FixedSetAllocator","itemSize","FixtureParticle","second","bodyContactBuffer","flagsBuffer","ParticlePair","particleA","particleB","contactBuffer","m_callDestructionListener","m_destroyed","particleSystem","threshold","m_threshold","m_shapeCount","m_shapes","s_subaabb","subaabb","Combine1","GetFlagsBuffer","ShouldCollideFixtureParticle","ReportFixtureAndParticle_s_n","s_rp","ReportFixtureAndParticle_s_rp","ap","bp","bm","bI","invBm","invBI","invAm","rp","rpn","DetectStuckParticle","s_p1","ReportFixtureAndParticle_s_p1","s_output","ReportFixtureAndParticle_s_output","s_input","ReportFixtureAndParticle_s_input","ReportFixtureAndParticle_s_p","ReportFixtureAndParticle_s_v","ReportFixtureAndParticle_s_f","av","b2World_b2World","m_clearForces","m_bodyList","m_particleSystemList","m_gravity","m_allowSleep","m_inv_dt0","m_warmStarting","m_continuousPhysics","m_subStepping","m_stepComplete","m_profile","m_island","s_stack","je","je0","SayGoodbyeJoint","coe","coe0","nextController","RemoveBody","f0","SayGoodbyeFixture","_Joint_Create","_Joint_Destroy","smallestRadius","GetParticleSystemList","GetRadius","GetSmallestRadius","CalculateReasonableParticleIterations","stepTimer","Step_s_stepTimer","Step_s_step","Step_s_timer","SolveTOI","ClearForces","positionBuffer","colorBuffer","GetColorBuffer","DrawParticles","GetFlags","DrawDebugData_s_color","SetRGB","e_shapeBit","PushTransform","GetFixtureList","DrawShape","PopTransform","e_particleBit","DrawParticleSystem","e_jointBit","DrawJoint","e_aabbBit","DrawDebugData_s_vs","DrawPolygon","e_centerOfMassBit","DrawDebugData_s_xf","DrawTransform","e_controllerBit","Draw","ReportFixture","QueryPointAABB","QueryFixtureShape_s_aabb","fixture_proxy","QueryFixtureShape","QueryFixturePoint","RayCast_s_input","RayCast_s_output","min_fraction","GetProxyCount","GetTreeHeight","GetTreeBalance","GetTreeQuality","GetAnchorA","DrawJoint_s_p1","GetAnchorB","DrawJoint_s_p2","DrawJoint_s_color","DrawSegment","pulley","GetGroundAnchorA","GetGroundAnchorB","DrawJoint_s_c","DrawPoint","DrawSolidCircle","ghostColor","DrawShape_s_ghostColor","DrawCircle","poly","DrawSolidPolygon","island","seed","Clear","stackCount","AddBody","IsEnabled","AddJoint","minContact","minAlpha","collideA","IsBullet","collideB","SolveTOI_s_toi_input","SolveTOI_s_toi_output","backup1","SolveTOI_s_backup1","backup2","SolveTOI_s_backup2","backup","SolveTOI_s_backup","SolveTOI_s_subStep","b2ControllerEdge","prevBody","nextBody","prevController","b2Controller","b2BuoyancyController_b2BuoyancyController","linearDrag","angularDrag","useDensity","useWorldGravity","areac","massc","sc","sarea","ComputeSubmergedArea","shapeDensity","GetDensity","buoyancyForce","dragForce","ApplyTorque","b2ConstantAccelController_b2ConstantAccelController","dtA","Step_s_dtA","b2ConstantForceController_b2ConstantForceController","b2GravityController_b2GravityController","invSqr","body1","mass1","body2","mass2","Step_s_f","b2TensorDampingController_b2TensorDampingController","maxTimestep","timestep","Step_s_damping","xDamping","yDamping","b2Rope_b2RopeDef","masses","k2","k3","b2Rope_b2Rope","m_ps","m_p0s","m_vs","m_ims","m_Ls","m_as","m_damping","m_k2","m_k3","count3","d1","d2","exp","SolveC2","SolveC3","L","im1","im2","m1","s_d1","s_d2","L1sqr","L2sqr","Jd1","SelfSkew","s_Jd1","Jd2","s_Jd2","J1","s_J1","J2","s_J2","J3","Foothold_FootholdChain","map_footholds","FootholdType","Foothold_FootholdSingle","Foothold_FootholdChainChild","Physics","m_angle","next_a","next_a_deg","$showDebugInfo","body_xf","next_fh","prev_fh","is_empty","is_first","is_last","_is_horizontal_floor","x3","y3","piece","ta","$_text_pos","strokeText","GetVertex1","GetVertex2","MulVS","Foothold","CREATE_SOLID_FOOTHOLD","CREATE_SOLID_AND_EDGE_FOOTHOLD","USE_GHOST_VERTEX","FOOTHOLD_IS_BULLET","Ground_Ground","rectChains","segment","chains","chainId","_create_foothold","_create_chain","_chain","CreateLoop","Filter","endContact_bodyBase_oneway","preSolveGround_bodyBase_oneway","is_solid","create","nx1","ny1","nx2","ny2","hlen","numPoints","playerBody","getFootholdFromContact","$fh","player_pos","SetFriction","p$fh","foot","GetWorldManifold","relative_position","platformFaceY","cpoint","pointVelPlatform","pointVelOther","relativeVel","relativePosition","_which_foothold_contact","normal_contact","beginContact_bodyBase_oneway","lineJoin","lineCap","isShow","isHide","ActionAnimationFrameData","ActionAnimation","Adef","fdat","total","aadef","actName","_fdef","CharacterActionAnimationDefinition","_loadedItem","$loadedItem","TYPE_TO_SLOT_MAP","ItemBase","ItemEquip","ItemConsume","ItemEtc","ItemInstall","ItemCash","$createItem","_itemType","itemPrototype","ItemSlot","_ui_Basic_KeySlotData_js__WEBPACK_IMPORTED_MODULE_2__","itemSN","SN","iSlot","CharacterBaseStat","mp","mhp","mmp","str","luk","dex","int","symbol_onJobChange","$RemotePlayerData","equips_code","CharacterStat","_$sceneChara","symbolStatJob","_getTotalAttack","getNextExp","$PlayerData","mapId","_RenderingOption__WEBPACK_IMPORTED_MODULE_1__","_Layer_js__WEBPACK_IMPORTED_MODULE_0__","$sceneRenderer","PBullet_PBullet","bulletRenderer","bulletMoveFunc","bullet_default_preSolve","linearVelocityX","linearVelocityY","targetPlayer","targetChara","addAttack","Skill_SkillEffectAnimation","targetRenderer","update_p","update_r","render_p","render_r","SkillHitAnimation","EffectManager","_effects","$EffectManager","Skill_SkillAnimationBase","actType","_owner","_crr","_actani","_$is_end","is_launch","_applyDefaultAction","_owner_player","_applyAction","_getDefaultAction","jobID","exec","_decide_type","_init","skill_anim","proto","effName","_effect_names","arrNd_texture","arrNd","arr2d","hit","tex","arr2d_texture","arr1d","arr1d_texture","_addEffect","common","attackCount","effectName","launch","$BULLET_SPEED","isBullet","AddEffect","rapidAttack","_SkillAnimation_RapidAttack","casterMove","avaliableInJumpingState","_SkillAnimation_N_Jump","_SkillAnimation_Default","_default_update","_state_func","_prepare","current_effect","tick","fadeTotalTime","getTotalTime","_keydown","_keydownend","$FIRE_BULLET_T","$FIRE_BULLET_T2","createBullet","jump_max_count","$NJmpX","$NJmpY","_addDefaultEffect","jump2","_isFinishDefaultAction","Skill_SceneSkill","wait_loading","loaded_skill","__loaded_skill","_assign","__load_failed","$SceneSkill","setFlags","bit","DebugDraw","axis_length","viewRotation","flag_drawShape","flag_drawJoint","flag_drawAabb","flag_drawCenterOfMass","flag_drawController","flag_drawParticle","flag_drawAll","e_all","e_none","flag_drawPair","e_pairBit","flagNames","closePath","arc","centers","colors","cs","hsize","DrawString","format","var_args","string","goog","s_color","DrawStringWorld","cc","s_cc","m_canvas","DrawAABB","strokeRect","MapLadderRope","uf","LadderRope","calcHalfWidth","hheight","_Filter_js__WEBPACK_IMPORTED_MODULE_3__","leaveLadder","MapLadderRopeLoader","ladderRopes","idx","_$index","$MobAction_Move_Priority","$MobAction_Jump_Priority","MobActionController","_ani","pMob","onEnd","MobAction_Stand","_MobAction_Move","MobAction_MoveLeft","MobAction_MoveRight","MobAction_Jump","PMob","_PPlayer_js__WEBPACK_IMPORTED_MODULE_0__","attackTarget","_enable_rx","isFlyMob","activityRegion","$debugControl","param","act_map","_registerAction","hasBodyDamage","bodyAttack","_speed","_pushed","_fs","_category","_appleMobCategory","__setAsWalkOnlyMob","__setAsJumpDropMob","fhId","isCanMove","_control_basic","isAllowJump","limit_action","cbpos","dx1","fwpos","MobSkillBallDefinition","createDelay","collisionDelay","moveSpeed","_speed_x","_speed_y","MobSkillBallBase","_SceneObject_js__WEBPACK_IMPORTED_MODULE_2__","ballDef","animations","_BallDefinition","E_BEFORE_CREATE","E_CREATED","E_BEGIN_COLLISION","E_ENG_COLLISION","pWorld","begin_collision","end_collision","$stop","MobSkillBase","_anima_name_list","anima","fileName","blob","Blob","createObjectURL","revokeObjectURL","selection","createTextRange","moveToElementText","select","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","$temp","execCommand","FairyDustBallDefinition","_MobSkillBase_js__WEBPACK_IMPORTED_MODULE_3__","FairyDustBall","FairyDustBallHit","randInt","nextInt","ball","SceneObjectMgr","_FairyDust","MOB_SKILL_RAW","LoginPacket","ChatPacket","CharacterPacket","loaded_skin","DamageNumberTextures","addedCanvasH","font_adv","draw_axis","Miss","guard","shot","DamageNumberRenderer","rand_y","max_display_digit","max_rand_y","_$promise","_default_base_path","_skin_base_path","sPath","loaded","_copy","str_damage","text_width","_display_axis","log10","MAX_SAFE_INTEGER","_Layer_js__WEBPACK_IMPORTED_MODULE_2__","damagePair","move_y","time_tt","recursive","$noRender","move_avy","time_d1","move_avy2","time_d2","DamageNumberTest","damageNumberLayer","_Common_AttackInfo_js__WEBPACK_IMPORTED_MODULE_4__","$damageNumberLayer","$DamageNumber","$DamageNumberTest","$DamageNumberRenderer","locals","reset_mouse","mouse_um","mouse_ur","components_ui_draggablevue_type_script_lang_js_","description","mouse_x0","mouse_y0","origin_x","origin_y","old_width","old_height","handle_mousemove","handle_mouseup","which","clientX","clientY","pw","parentElement","offsetWidth","ph","offsetHeight","ox","offsetLeft","offsetTop","ow","oh","mouseup","contains","get_relative_position","addEventListener","removeEventListener","onTouch","evt","tt","touches","newEvt","createEvent","touch","changedTouches","initMouseEvent","ownerDocument","defaultView","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","dispatchEvent","ori_pos","_calc_origin_pos","position.x","position.y","touchstart","touchmove","touchend","FlowerTrapBallDefinition","FlowerTrapBall","patterns","pattern","pats","pat","_invoke","nextBoolean","$RequestPacket_SelectChara","charaId","$ResponsePacket_SelectChara","charaData","remoteCharacters","$Packet_CharacterChat","$Packet_CharacterMove","getTime","phy","_Client_PMovePath__WEBPACK_IMPORTED_MODULE_0__","vel","resizable_target","resizable_current_target","resizable_orientation","resizable_local_left","resizable_local_top","resizable_local_right","resizable_local_bottom","resizable_onresize","components_ui_resizablevue_type_script_lang_js_","boxSizing","borderRadius","cssPropName","entries","getBoundingClientRect","setMinSize","minHeight","CSSUnitValue","resizable_mousedown","orientation","className","pageX","pageY","resizable_mouseup","width1","rect_content","computedStyleMap","bw","bh","ui_resizable","zIndices","components_ui_dialogvue_type_script_lang_js_","min-width","min-height","content_style","header_style","minimum","_$width","_$height","updateDialogPosition","header","bbb","ResizeHolder","ui-resizable","ui_dialog_component","overflow-x"],"mappings":"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","file":"10.js","sourcesContent":["﻿\r\nimport { Vec2 } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\n\r\n\r\nwindow.m_draw_animation_texture_info = false;\r\n\r\nclass IAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tthis._raw = null;\r\n\t\tthis._url = null;\r\n\t\t\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t_raw: {\r\n\t\t\t\tvalue: raw\r\n\t\t\t},\r\n\t\t\t_url: {\r\n\t\t\t\tvalue: url\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** elapsed time */\r\n\t\tthis.delta = 0;\r\n\r\n\t\t/** @type {Sprite[]} */\r\n\t\tthis.textures = [];\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_loop = true;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_end = false;\r\n\r\n\t\tif (!raw && !this._url) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.textures.reduce((pv, cv) => pv + cv.delay, 0);\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet newAnim = new this.constructor(this._raw, this._url);\r\n\t\tnewAnim.textures = this.textures;\r\n\t\treturn newAnim;\r\n\t}\r\n\t\r\n\tload() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** reset frame */\r\n\t_resetFrame() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t}\r\n\r\n\t/** restart */\r\n\treset() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.is_end = false;\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * remove at nextStep\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.is_loop = false;//防止重複\r\n\t\tthis.is_end = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * process animation\r\n */\r\nexport class AnimationBase extends IAnimation {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n\r\n\tload() {\r\n\t\tif (!this._raw) {\r\n\t\t\t//this._raw = await $get.data(this._url);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i in this._raw; ++i) {\r\n\t\t\t//let url = this._url + \"/\" + i;\r\n\r\n\t\t\tlet texture = new Sprite(this._raw[i]);\r\n\r\n\t\t\t//texture._url = url;\r\n\r\n\t\t\tthis.textures[i] = texture;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.textures[0]) {\r\n\t\t\tif (!this.textures[0].isLoaded()) {\r\n\t\t\t\tthis.textures[0].__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * aways loop\r\n\t * @param {number} stamp\r\n\t */\r\n\t_update(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame % fc;\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = this.frame + 1;\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tif (this.is_loop) {\r\n\t\t\t\t\t\tthis.reset();//make loop\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//防止錯誤\r\n\t\t\t\t\t\tthis.frame = fc - 1;//this._resetFrame();\r\n\r\n\t\t\t\t\t\tthis.is_end = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, x, y, angle, flip) {\r\n\t\tlet texture = this.texture;\r\n\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\treturn this.textures[this.frame];\r\n\t}\r\n}\r\n\r\n/**\r\n * animation rendering\r\n */\r\nexport class Animation extends AnimationBase {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tthis.draw = this._draw_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * draw and load next frame\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\t_draw_and_preload(renderer, x, y, angle, flip) {\r\n\t\tlet frame;\r\n\r\n\t\t// if current frame is not loaded then render prev frame\r\n\t\tfor (frame = this.frame; frame >= 0; --frame) {\r\n\t\t\tlet texture = this.textures[frame];\r\n\r\n\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//preload next frame\r\n\t\tlet texture = this.textures[++frame];\r\n\t\tif (texture) {//if frame < this.textures.length\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {//if all testure are loaded\r\n\t\t\tdelete this.draw;\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\nimport { CharacterRenderConfig, ItemCategoryInfo, ResourceManager } from '../../../public/javascripts/resource.js';\r\nimport { AddInitTask } from \"../../init.js\";\r\nimport { Animation } from \"../Animation\";\r\nimport { engine } from '../Engine.js';\r\nimport { IRenderer, ImageFilter } from '../IRenderer.js';\r\nimport { Sprite, SpriteBase } from '../Sprite.js';\r\nimport { Rectangle, Vec2 } from '../math.js';\r\nimport { ActionAnimation } from './CharacterActionAnimation.js';\r\n\r\n\r\nlet zMap = {};\r\nlet sMap = {};\r\n\r\n\r\n/**\r\n * 00026623.blink[1].brow has bug\r\n * 'Weapon/01702694' is Longcoat(islot)\r\n * how to use cash-weapon (ex: 01702504|0152)\r\n */\r\n\r\n/**\r\n * multi-image-sprite\r\n */\r\nclass FragmentTexture extends SpriteBase {\r\n\t/**\r\n\t * @param {wzproperty} raw\r\n\t * @param {string} full_path\r\n\t */\r\n\tconstructor(raw, full_path) {\r\n\t\tsuper(raw, full_path);\r\n\r\n\t\tif (this._raw.origin) {\r\n\t\t\tthis._raw.origin.__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\tfor (let i in this._raw.map) {\r\n\t\t\tthis._raw.map[i].__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * if this.relative == null then remove this\r\n\t\t * @type {Vec2}\r\n\t\t */\r\n\t\tthis.relative = new Vec2(0, 0);\r\n\t\t\r\n\t\tthis.calcRelative = this._calcRelative;//this._getRelativeFunction();//this.__old_calcRelative;//\r\n\r\n\t\tthis.filter = new ImageFilter();\r\n\t\tthis.opacity = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.visible = true;\r\n\r\n\r\n\t\t/** @type {string} - extra property. */\r\n\t\tthis._slot = null;\r\n\r\n\t\t/** @type {string} - extra property. 在哪個部位 */\r\n\t\tthis._place = null;\r\n\r\n\t\t/** @type {string} - extra property: _slot itemId, _place, _raw.z z */\r\n\t\tthis.classList = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget z() {\r\n\t\treturn zMap[this._raw.z] || 1;\r\n\t}\r\n\tset z(not_value) {\r\n\t\tconsole.error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\tdebugger;\r\n\t\treturn this.z;\r\n\t}\r\n\tset order(not_value) {\r\n\t\tdebugger;\r\n\t\tconsole.error(new TypeError(\"Not implement\"));\r\n\t}\r\n\r\n\t/** @returns {Vec2} */\r\n\tget origin() { return this._raw.origin || Vec2.empty; }\r\n\r\n\tisHasAnchor() { return !!this._raw.map; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget brow() { return this._raw.map.brow; }\r\n\tisAnchorBrow() { return !!this._raw.map.brow; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget neck() { return this._raw.map.neck; }\r\n\tisAnchorNeck() { return !!this._raw.map.neck; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget navel() { return this._raw.map.navel; }\r\n\tisAnchorNavel() { return !!this._raw.map.navel; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget hand() { return this._raw.map.hand; }\r\n\tisAnchorHand() { return !!this._raw.map.hand; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget handMove() { return this._raw.map.handMove; }\r\n\tisAnchorHandMove() { return !!this._raw.map.handMove; }\r\n\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earBelowHead() { return this._raw.map.earBelowHead; }\r\n\tisAnchor_EarBelowHead() { return !!this._raw.map.earBelowHead; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earOverHead() { return this._raw.map.earOverHead; }\r\n\tisAnchor_EarOverHead() { return !!this._raw.map.earOverHead; }\r\n\r\n\t/**\r\n\t * @param {FragmentTexture} that - this\r\n\t * @param {FragmentTexture} base - parent\r\n\t * @param {string} anchor - anchor name\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_anchor(that, base, anchor) {\r\n\t\treturn base[anchor].minus(that[anchor]).plus(base.origin.minus(that.origin));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative(chara, body, head) {\r\n\t\tthis.calcRelative = this._getRelativeFunction(chara);\r\n\t\treturn this.calcRelative(chara, body, head);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getRelativeFunction(chara) {\r\n\t\tif (!this.isHasAnchor()) {\r\n\t\t\treturn this._calcRelativeEmpty;\r\n\t\t}\r\n\t\tif (this.isAnchorNeck()) {\r\n\t\t\treturn this._calcRelative_neck;\r\n\t\t}\r\n\t\tif (this.isAnchorBrow()) {\r\n\t\t\treturn this._calcRelative_brow;\r\n\t\t}\r\n\t\tif (this.isAnchorNavel()) {\r\n\t\t\tif (this == chara.slots.body) {\r\n\t\t\t\treturn this._getOrigin;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_navel;\r\n\t\t}\r\n\t\tif (this.isAnchorHand()) {\r\n\t\t\treturn this._calcRelative_hand;\r\n\t\t}\r\n\t\tif (this.isAnchorHandMove()) {\r\n\t\t\tif (this._url.lastIndexOf(\"lHand\") > 0) {\r\n\t\t\t\treturn this._calcRelative_handMove_lHand;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_handMove;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelativeEmpty(chara, body, head) {\r\n\t\treturn Vec2.empty;\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getOrigin(chara, body, head) {\r\n\t\treturn this.origin;\r\n\t}\r\n\t/**\r\n\t * neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_neck(chara, body, head) {\r\n\t\treturn this._anchor(this, body, \"neck\").minus(body.origin);\r\n\t}\r\n\t/**\r\n\t * brow on the head & head on the neck & neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_brow(chara, body, head) {\r\n\t\treturn this._anchor(this, head, \"brow\").plus(this._anchor(head, body, \"neck\")).minus(body.origin);//anchor_brow+(-7,-33)\r\n\t}\r\n\t/**\r\n\t * this is origin point, no anchor\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_navel(chara, body, head) {\r\n\t\treturn body.navel.minus(this.navel).minus(this.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_hand(chara, body, head) {\r\n\t\tconst hand = chara.slots.body.fragments.arm.getTexture(chara);\r\n\t\tif (hand == null) {\r\n\t\t\treturn Vec2.empty.minus(this.hand).minus(this.origin).minus(body.origin);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this._anchor(this, hand, \"hand\").minus(this._anchor(body, hand, \"navel\")).minus(body.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove(chara, body, head) {\r\n\t\treturn Vec2.empty.minus(this.origin).minus(this.handMove);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove_lHand(chara, body, head) {\r\n\t\treturn Vec2.empty.minus(this.origin);\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tif (chara.slots.body && chara.slots.head) {\r\n\t\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\t\tconst head = chara.slots.head.fragments.head.getTexture(chara);\r\n\t\t\tif (body && head) {\r\n\t\t\t\tthis.relative = this.calcRelative(chara, body, head);\r\n\r\n\t\t\t\tconst tamingMob = chara.slots.tamingMob;\r\n\t\t\t\tif (tamingMob) {\r\n\t\t\t\t\tthis.relative = tamingMob.adj_pos(this.relative, body, chara);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!(this.relative && this.visible)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass BodyFragmentTexture extends FragmentTexture {\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tsuper.update(chara);\r\n\t\tthis.visible = !chara.hideBody;\r\n\t}\r\n}\r\n\r\nclass HairFragmentTexture extends FragmentTexture {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph2 = null;\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph3 = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tif (chara.slots.body && chara.slots.head) {\r\n\t\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\t\tconst head = chara.slots.head.fragments.head.getTexture(chara);\r\n\t\t\tif (body && head) {\r\n\t\t\t\tthis.relative = this.calcRelative(chara, body, head);\r\n\r\n\t\t\t\tconst tamingMob = chara.slots.tamingMob;\r\n\t\t\t\tif (tamingMob) {\r\n\t\t\t\t\tthis.relative = tamingMob.adj_pos(this.relative, body, chara);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.graph2) {\r\n\t\t\t\t\tthis.graph2.relative = this.relative;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.graph3) {\r\n\t\t\t\t\tthis.graph3.relative = this.relative;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!this.relative) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\trenderer.globalAlpha = this.opacity || 1;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\tthis._render(renderer);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\tthis._render(renderer);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n\t_render(renderer) {\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.drawGraph2(this, x, y);\r\n\r\n\t\tif (this.graph2 && this.graph2.opacity) {//color2\r\n\t\t\trenderer.globalAlpha = this.graph2.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph2, x, y);\r\n\t\t}\r\n\t\tif (this.graph3 && this.graph3.opacity) {//color3\r\n\t\t\trenderer.globalAlpha = this.graph3.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph3, x, y);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nclass ItemEffectAnimation extends Animation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t\t\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\t//this._url = this._url;\r\n\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"pos\", 1);\r\n\r\n\t\tsuper.load();\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} actionExceptRotation\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\trender(renderer, actionExceptRotation, angle, flip) {\r\n\t\tif (actionExceptRotation) {\r\n\t\t\tthis.draw(renderer, 0, 0, -angle, flip);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst oy = -this.texture.height * 0.25;\r\n\t\t\tthis.draw(renderer, 0, oy, 0, flip);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\t/data/Effect/ItemEff/1102918\r\nclass ItemEffect {\r\n\tconstructor() {\r\n\t\tthis._url = null;\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {{[animationName:string]:ItemEffectAnimation}} */\r\n\t\tthis.animation = {};\r\n\r\n\t\tthis.action = null;\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\r\n\t\tthis.fixed = 0;\r\n\t\tthis.z = -2;\r\n\t\tthis.action = 1;\r\n\t\tthis.actionExceptRotation = 0;\r\n\t\t\r\n\t\tthis.enable = true;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\ttry {\r\n\t\t\t/** @type {Set<string>} */\r\n\t\t\tlet itemEffectList = ItemEffect._list;\r\n\r\n\t\t\t/** @type {string[]} */\r\n\t\t\tlet raw = await $get.list(\"/Effect/ItemEff\");\r\n\r\n\t\t\titemEffectList.clear();\r\n\r\n\t\t\traw.forEach(id => {\r\n\t\t\t\titemEffectList.add(parseInt(id, 10));\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<ItemEffect>}\r\n\t */\r\n\tstatic async load(equipID) {\r\n\t\tconst id = Number(equipID);\r\n\r\n\t\tif (ItemEffect._list.has(id)) {\r\n\t\t\tlet eff = new ItemEffect();\r\n\t\t\tawait eff.load(equipID);\r\n\t\t\treturn eff;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tasync load(equipID) {\r\n\t\tconst id = Number(equipID);\r\n\t\tconst url = `/Effect/ItemEff/${id}/effect`;\r\n\t\tlet raw;\r\n\r\n\t\ttry {\r\n\t\t\traw = await $get.data(url);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\r\n\t\tif (raw) {\r\n\t\t\treturn this._load(equipID, url, raw);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t * @param {string} action\r\n\t */\r\n\tupdate(stamp, action) {\r\n\t\tif (action in this.animation) {\r\n\t\t\tthis.action = action;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.action = \"default\";\r\n\t\t}\r\n\r\n\t\tif (this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterRenderer} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (this.animation && this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].render(renderer, this.actionExceptRotation, chara.angle, chara.front > 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} equipID\r\n\t * @param {object} raw_data\r\n\t */\r\n\t_load(equipID, url, raw) {\r\n\t\tthis.id = equipID;\r\n\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tthis.__construct();\r\n\t}\r\n\t__construct() {\r\n\t\tthis.__getAttr(\"fixed\", 0);\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"action\", 1);\r\n\t\tthis.__getAttr(\"actionExceptRotation\", 0);\r\n\r\n\t\tfor (let i in this._raw) {\r\n\t\t\tif (this._raw[i] && typeof this._raw[i] == \"object\" && '0' in this._raw[i]) {//animation has frames\r\n\t\t\t\tthis.animation[i] = new ItemEffectAnimation(this._raw[i], [this._url, i].join(\"/\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n}\r\n/** @type {Set<string>} */\r\nItemEffect._list = new Set();\r\n\r\nclass CharacterFragmentBase {\r\n\t/**\r\n\t * @param {{[action:string]: FragmentTexture[]}} textures\r\n\t */\r\n\tconstructor(textures) {\r\n\t\t/** @type {{[action:string]: FragmentTexture[]}} - textures[action:string][frame:number] */\r\n\t\tthis.textures = textures;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterBodyFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.action_frame);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.action in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet ft = this.textures[chara.action][frame];//if frame not exist then return undefined\r\n\t\treturn ft;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tif (this.textures[chara.action]) {\r\n\t\t\treturn this.textures[chara.action].length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterFaceFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.emotion_frame);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.emotion in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet ft = this.textures[chara.emotion][frame];\r\n\t\treturn ft;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tif (this.textures[chara.emotion]) {\r\n\t\t\treturn this.textures[chara.emotion].length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterTamingMobFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara._action_frame);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara._ride_action in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet ft = this.textures[chara._ride_action][frame];//if frame not exist then return undefined\r\n\t\treturn ft;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tif (this.textures[chara._ride_action]) {\r\n\t\t\treturn this.textures[chara._ride_action].length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\nclass EquipImageFilter {\r\n\t/**\r\n\t * @param {CharacterAppearanceBase} equip\r\n\t */\r\n\tconstructor(equip) {\r\n\t\tthis.equip = equip;\r\n\t}\r\n\r\n\tget hue() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.hue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset hue(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget sat() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.sat;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset sat(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.sat = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget bri() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset bri(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.bri = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget contrast() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.contrast;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset contrast(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.contrast = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\thue: this.hue,\r\n\t\t\tsat: this.sat,\r\n\t\t\tbri: this.bri,\r\n\t\t\tcontrast: this.contrast,\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * @interface\r\n */\r\nclass ICharacterAppearanceBase {\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tisLoaded() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_unload() {\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\ttoJSON() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\treturn {\r\n\t\t\tid: -1,//invalid ID\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * ??\r\n */\r\nclass _CharacterAppearanceBaseSlotLink extends ICharacterAppearanceBase {\r\n\tconstructor(slot_link) {\r\n\t\tsuper();\r\n\t\tthis.slot_link = slot_link;//??\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: slot_link,//??\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * character loader\r\n */\r\nclass CharacterAppearanceBase extends ICharacterAppearanceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\t\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\t//this._url = null;\r\n\t\t\t\r\n\t\t/** @type {ItemEffect} */\r\n\t\tthis.effect = null;\r\n\r\n\t\t/**\r\n\t\t * @type {{[place:string]:CharacterFragmentBase}}\r\n\t\t */\r\n\t\tthis.fragments = null;\r\n\r\n\t\tthis._onload = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tthis.categoryInfo = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.slot_order = 0;\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.islot = {};\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.vslot = {};\r\n\r\n\t\tthis.filter = new EquipImageFilter(this);\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: this.id,\r\n\t\t\tfilter: this.filter.toJSON(),\r\n\t\t};\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn this.fragments != null;\r\n\t}\r\n\r\n\t/** @type {function(CharacterAppearanceBase):void} */\r\n\tget _onload() {\r\n\t\treturn this.__onload;\r\n\t}\r\n\tset _onload(func) {\r\n\t\tthis.__onload = func;\r\n\t\tif (this.isLoaded()) {\r\n\t\t\tthis.__onload.call(this, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {void} use_category - no use\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tlet raw;\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.categoryInfo = cateInfo;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (ResourceManager.isEquipExist(id, cateInfo)) {\r\n\t\t\t\traw = await ItemCategoryInfo.getItem(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!raw && load_extern_item_data) {\r\n\t\t\t\traw = await load_extern_item_data(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tthis.__load_slot();\r\n\r\n\t\tthis.__load_fragments();\r\n\r\n\t\tif (this._onload) {\r\n\t\t\tthis._onload.call(this, this);\r\n\t\t}\r\n\r\n\t\t//// if not body, head, face, hair then try load effect\r\n\t\t//if (id >= \"00050000\") {\r\n\t\t\t// load if exist\r\n\t\t\tItemEffect.load(this.id).then(a => this.effect = a);//01102918\t//01102915\r\n\t\t//}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tconst FragmentConstructor = this.FragmentConstructor;\r\n\r\n\t\t//Object.keys(this._raw_textures).map(k => { return '0' in this._raw_textures[k]; })\r\n\r\n\t\tlet action_list = Object.keys(this._raw_textures);\r\n\r\n\t\tlet textures = {};\r\n\t\tfor (let action of action_list) {\r\n\t\t\tif (typeof this._raw_textures[action] == \"object\" && \"0\" in this._raw_textures[action]) {\r\n\t\t\t\tlet _url = this._base_path + action;\r\n\r\n\t\t\t\ttextures[action] = this.__load_frame_textures(this._raw_textures[action], _url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragment_textures = {};\r\n\t\tfor (let action in textures) {\r\n\t\t\tfor (let frame in textures[action]) {\r\n\t\t\t\tfor (let place in textures[action][frame]) {\r\n\t\t\t\t\tif (!(place in fragment_textures)) {\r\n\t\t\t\t\t\tfragment_textures[place] = {};\r\n\t\t\t\t\t\t//fragment_textures[place].visible = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!(action in fragment_textures[place])) {\r\n\t\t\t\t\t\tfragment_textures[place][action] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfragment_textures[place][action][frame] = textures[action][frame][place];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragments = {};\r\n\t\tfor (let frag in fragment_textures) {\r\n\t\t\tfragments[frag] = new FragmentConstructor(fragment_textures[frag]);\r\n\t\t}\r\n\t\tthis.fragments = fragments;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {{[place:string]:FragmentTexture}[]} - array - textures[frame][place]\r\n\t */\r\n\t__load_frame_textures(_raw, _url) {\r\n\t\tlet textures = [];\r\n\t\tfor (let frame = 0; frame in _raw; ++frame) {\r\n\t\t\tlet url = `${_url}/${frame}`;\r\n\t\t\ttextures[frame] = this.__load_place_textures(_raw[frame], url);\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {{[place:string]:FragmentTexture}} - object - textures[place]\r\n\t */\r\n\t__load_place_textures(_raw, _url) {\r\n\t\tlet textures = {};\r\n\t\tfor (let place in _raw) {\r\n\t\t\tlet path = `${_url}/${place}`;\r\n\t\t\tlet raw = _raw[place];\r\n\r\n\t\t\tif (raw) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tconst FragmentTextureConstructor = this.FragmentTextureConstructor;\r\n\t\t\t\tlet ft;\r\n\t\t\t\tif (raw[\"\"] == \"\") {\r\n\t\t\t\t\tft._url = path;\r\n\t\t\t\t\t//ft._url = path;\r\n\t\t\t\t\ttextures[place] = ft\r\n\t\t\t\t}\r\n\t\t\t\telse if (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\tft = new FragmentTextureConstructor(raw);\r\n\t\t\t\t\t//ft._url = raw[\"\"];\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\telse if (place == \"hairShade\") {\r\n\t\t\t\t\tft = new FragmentTextureConstructor(raw[0]);\r\n\t\t\t\t\t//ft._url = path + \"/0\";\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tft._slot = this.categoryInfo.slot;\r\n\t\t\t\t\tft._place = place;\r\n\r\n\t\t\t\t\tft.classList = [\r\n\t\t\t\t\t\tft._slot,\r\n\t\t\t\t\t\t\"item\" + this.id,\r\n\t\t\t\t\t\tft._place,\r\n\t\t\t\t\t\tft._raw.z,\r\n\t\t\t\t\t\t'z' + ft.z\r\n\t\t\t\t\t].join(' ');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\t__load_slot() {\r\n\t\tif (!this._raw.info.islot) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet islots = this._raw.info.islot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in islots) {\r\n\t\t\tconst slot = islots[i];\r\n\t\t\tconst slot_order = zMap[slot];\r\n\t\t\tthis.islot[slot] = slot_order;\r\n\t\t\t\t\r\n\t\t\tif (slot_order > this.slot_order) {//this.slot_order = Math.max(this.slot_order, slot_order);\r\n\t\t\t\tthis.slot_order = slot_order;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet vslots = this._raw.info.vslot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in vslots) {\r\n\t\t\tconst slot = vslots[i];\r\n\t\t\tthis.vslot[slot] = slot;\r\n\t\t}\r\n\t}\r\n\r\n\t_unload() {\r\n\t\tthis.fragments = null;\r\n\t\tthis.effect == null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget opacity() {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} opacity\r\n\t */\r\n\tset opacity(opacity) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.opacity = opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t */\r\n\tsetFilter(hue, sat, bri) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = hue;\r\n\t\t\t\t\t\tft.filter.sat = sat;\r\n\t\t\t\t\t\tft.filter.bri = bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get icon url\r\n\t * @see {@link ItemCategoryInfo.getIconUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconUrl() {\r\n\t\tconst icon = this._raw.info.icon;\r\n\t\tif (icon) {\r\n\t\t\treturn icon[\"\"];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t\treturn ItemCategoryInfo.getIconUrl(this.id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get iconRaw url\r\n\t * @see {@link ItemCategoryInfo.getIconRawUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconRawUrl() {\r\n\t\tconst iconRaw = this._raw.info.iconRaw;\r\n\t\tif (iconRaw) {\r\n\t\t\treturn iconRaw[\"\"];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t\treturn ItemCategoryInfo.getIconRawUrl(this.id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @type {string}\r\n\t */\r\n\tget _animation_type() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @returns {typeof CharacterFragmentBase}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @returns {typeof FragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {{[actions:string]:{[\"0\"]:Sprite,[frames:string]:Sprite}}} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw;\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass CharacterAppearance extends CharacterAppearanceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"face\" || k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn chara.slots.body.fragments.body.textures[chara.action].length;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tconst d = this._raw[chara.action][chara.action_frame].delay;\r\n\t\tif (Number.isSafeInteger(d)) {\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 120;\r\n\t}\r\n}\r\n\r\nclass CharacterBody extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof BodyFragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn BodyFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterEquip extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof BodyFragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn BodyFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipCashWeapon extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.use_category = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {string} use_category - cash-weapon as [category]\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tif (!use_category && use_category != \"\") {\r\n\t\t\tthrow new TypeError(\"use_category\");\r\n\t\t}\r\n\r\n\t\tthis.use_category = use_category.slice(2, 4);\r\n\r\n\t\treturn super.load(url, id, cateInfo);\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {object} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw[this.use_category];\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url + this.use_category;\r\n\t}\r\n}\r\n\r\n\r\nclass CharacterHeadBase extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof FragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn FragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterHead extends CharacterHeadBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.elfEarFragment = null;\r\n\t\tthis.lefEarFragment = null;\r\n\t\tthis.highlefEarFragment = null;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tsuper.__load_fragments()\r\n\t\t\r\n\t\tif (this.fragments) {\r\n\t\t\tif (this.fragments.ear) {\r\n\t\t\t\tthis.elfEarFragment = this.fragments.ear;\r\n\t\t\t\tdelete this.fragments.ear;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.lefEar) {\r\n\t\t\t\tthis.lefEarFragment = this.fragments.lefEar;\r\n\t\t\t\tdelete this.fragments.lefEar;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.highlefEar) {\r\n\t\t\t\tthis.highlefEarFragment = this.fragments.highlefEar;\r\n\t\t\t\tdelete this.fragments.highlefEar;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget elfEar() {\r\n\t\treturn this.fragments.ear != null;\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (!this.elfEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.ear = this.elfEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.ear;\r\n\t\t}\r\n\t}\r\n\r\n\tget lefEar() {\r\n\t\treturn this.fragments.lefEar != null;\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (!this.lefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.lefEar = this.lefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.lefEar;\r\n\t\t}\r\n\t}\r\n\r\n\tget highlefEar() {\r\n\t\treturn this.fragments.highlefEar != null;\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (!this.highlefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.highlefEar = this.highlefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.highlefEar;\r\n\t\t}\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterHair extends CharacterHeadBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * hair color mix\r\n\t * @override\r\n\t * @returns {typeof HairFragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn HairFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterFaceBase extends CharacterHeadBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn chara.slots.face.fragments.face.textures[chara.emotion].length;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tconst d = this._raw[chara.emotion][chara.emotion_frame].delay;\r\n\t\tif (d != null) {//!isNaN(d) && isFinite(d)\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n}\r\nclass CharacterFace extends CharacterFaceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"emotion\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterFaceFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterFaceFragment;\r\n\t}\r\n}\r\nclass CharacterFaceAcc extends CharacterFaceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"emotion\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterFaceFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterFaceFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterTamingMob extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget type() {\r\n\t\treturn this._raw.info.tamingMob;\r\n\t}\r\n\r\n\tget actionMap() {\r\n\t\treturn this._raw.characterAction;\r\n\t}\r\n\r\n\tget emotionMap() {\r\n\t\treturn this._raw.characterEmotion;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} relative\r\n\t * @param {FragmentTexture} body\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\tadj_pos(relative, body, chara) {\r\n\t\tconst frag = this.fragments[0];//default\r\n\t\tif (frag) {\r\n\t\t\tconst tm = frag.getTexture(chara);\r\n\t\t\tif (tm) {\r\n\t\t\t\treturn relative.plus(tm.navel.minus(body.navel));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn relative;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn chara.slots.body.fragments.body.textures[chara._ride_action].length;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tconst d = Math.trunc(this._raw[chara._ride_action][chara.action_frame].delay);//?? _ride_action_frame => action_frame\r\n\t\tif (Number.isSafeInteger(d)) {\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 120;\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"_ride_action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterTamingMobFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterTamingMobFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof FragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn FragmentTexture;\r\n\t}\r\n}\r\n\r\n\r\nItemCategoryInfo._info['0000'].FragmentType = CharacterBody;\t\t//\tbody\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0001'].FragmentType = CharacterHead;\t\t//\telfEar\t\t\t-> CharacterHeadBase -> CharacterHead\r\nItemCategoryInfo._info['0002'].FragmentType = CharacterFace;\t\t//\tFace\t\t\t-> CharacterHeadBase -> CharacterFaceBase -> CharacterFace\r\nItemCategoryInfo._info['0003'].FragmentType = CharacterHair;\t\t//\tHair\t\t\t-> CharacterHeadBase -> CharacterHair\r\nItemCategoryInfo._info['0004'].FragmentType = CharacterHair;\t\t//\tHair\t\t\t-> CharacterHeadBase -> CharacterHair\r\n\r\nItemCategoryInfo._info['0100'].FragmentType = CharacterEquip;\t\t//\tCap\t\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0101'].FragmentType = CharacterFaceAcc;\t\t//\taccessoryFace\t-> CharacterHeadBase -> CharacterFaceBase -> CharacterFaceAcc\r\nItemCategoryInfo._info['0102'].FragmentType = CharacterEquip;\t\t//\taccessoryEyes\t-> CharacterEquip\r\nItemCategoryInfo._info['0103'].FragmentType = CharacterEquip;\t\t//\taccessoryEars\t-> CharacterEquip\r\nItemCategoryInfo._info['0104'].FragmentType = CharacterEquip;\t\t//\tCoat\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0105'].FragmentType = CharacterEquip;\t\t//\tLongcoat\t\t-> CharacterBody\r\nItemCategoryInfo._info['0106'].FragmentType = CharacterEquip;\t\t//\tPants\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0107'].FragmentType = CharacterEquip;\t\t//\tShoes\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0108'].FragmentType = CharacterEquip;\t\t//\tGlove\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0109'].FragmentType = CharacterEquip;\t\t//\tShield\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0110'].FragmentType = CharacterEquip;\t\t//\tCape\t\t\t-> CharacterBody\r\n\r\nItemCategoryInfo._info['0170'].FragmentType = CharacterEquipCashWeapon;\t//\tcash-weapon\t-> CharacterEquip\r\n\r\nItemCategoryInfo._info['019'].FragmentType = CharacterTamingMob;\t//\tTamingMob\t\t-> CharacterTamingMob\r\n\r\n\r\nclass CharacterSlots {\r\n\tconstructor() {\r\n\t\t\t\r\n\t\t/** @type {CharacterAppearanceBase[]} */\r\n\t\tthis._ordered_slot = [];\r\n\r\n\r\n\t\t/** @type {CharacterHair} */\r\n\t\tthis.hair = null;\r\n\t\t/** @type {CharacterHair} */\r\n\t\tthis._hair2 = null;\r\n\t\t/** @type {CharacterHair} 0~1.0 */\r\n\t\tthis._hairMix2 = null;\r\n\t\t/** @type {CharacterHair} */\r\n\t\tthis._hair3 = null;\r\n\t\t/** @type {CharacterHair} 0~1.0 */\r\n\t\tthis._hairMix3 = null;\r\n\r\n\r\n\t\t/** @type {CharacterEquipBody} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.head = null;\r\n\r\n\t\t/** @type {CharacterFace} */\r\n\t\tthis.face = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.hair = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 1 */\r\n\t\tthis.cap = null;\r\n\r\n\t\t/** @type {CharacterFace} - 2 */\r\n\t\tthis.accessoryFace = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 3*/\r\n\t\tthis.accessoryEyes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 4 */\r\n\t\tthis.accessoryEars = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.coat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.longcoat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 6 */\r\n\t\tthis.pants = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 7 */\r\n\t\tthis.shoes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 8 */\r\n\t\tthis.glove = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 9 */\r\n\t\tthis.cape = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 10 */\r\n\t\tthis.shield = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 11 */\r\n\t\tthis.weapon = null;\r\n\t\t\r\n\t\t/** @type {CharacterTamingMob} */\r\n\t\tthis.tamingMob = null;\r\n\t\t\r\n\t\t{\r\n\t\t\tObject.defineProperty(this, \"_ordered_slot\", {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: []\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tObject.defineProperty(this, \"_hair\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"hair\", {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this._hair;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tthis._hair = value;\r\n\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\tif (this._hair2 && this._hairMix2) {\r\n\t\t\t\t\t\t\tthis.hairColor2 = this.hairColor2;//force reload\r\n\t\t\t\t\t\t\tthis.hairMix2 = this.hairMix2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this._hair3 && this._hairMix3) {\r\n\t\t\t\t\t\t\tthis.hairColor3 = this.hairColor3;//force reload\r\n\t\t\t\t\t\t\tthis.hairMix3 = this.hairMix3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tObject.defineProperty(this, \"_hair\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair2\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix2\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair3\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix3\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tasync __loadColoredHair(color) {\r\n\t\tconst id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tconst url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\" : \"\") + id}`;\r\n\t\t\tconst use_category = undefined;\r\n\r\n\t\t\tlet hair = new CharacterHair();\r\n\r\n\t\t\tawait hair.load(url, id, cateInfo, use_category);\r\n\r\n\t\t\treturn hair;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget hairColor2() {\r\n\t\tif (this._hair2) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair2.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor2(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc2Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair2 || hc2Id != this._hair2.id) {\r\n\t\t\tif (hc2Id == this._hair.id) {\r\n\t\t\t\tthis._hair2 = null;\r\n\t\t\t\tthis.hairMix2 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair2 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair2.then(hair2 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair2;\r\n\r\n\t\t\t\t\tthis._hair2 = hair2;\r\n\t\t\t\t\tif (this._hair2 && this.hairMix2 != null) {\r\n\t\t\t\t\t\tthis.hairMix2 = this.hairMix2;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix2 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairMix2() {\r\n\t\treturn this._hairMix2;\r\n\t}\r\n\tset hairMix2(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair2).then(() => {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this._hair2;\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph2 = ft;\r\n\t\t\t\t\t\t\tori.graph2.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix2 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairColor3() {\r\n\t\tif (this._hair3) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair3.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor3(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc3Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair3 || this._hair3.id != hc3Id) {\r\n\t\t\tif (this._hair.id == hc3Id || this._hair2.id == hc3Id) {\r\n\t\t\t\tthis._hair3 = null;\r\n\t\t\t\tthis.hairMix3 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair3 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair3.then(hair3 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair3;\r\n\r\n\t\t\t\t\tthis._hair3 = hair3;\r\n\t\t\t\t\tif (this._hair3 && this.hairMix3 != null) {\r\n\t\t\t\t\t\tthis.hairMix3 = this.hairMix3;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix3 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hairMix3() {\r\n\t\treturn this._hairMix3;\r\n\t}\r\n\tset hairMix3(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair3).then(() => {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this._hair3;\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph3 = ft;\r\n\t\t\t\t\t\t\tori.graph3.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix3 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t//__order_slot() {\r\n\t//\tlet slot_map = new Map();\r\n\t//\r\n\t//\tfor (let i in this) {\r\n\t//\t\tlet equip = this[i];\r\n\t//\r\n\t//\t\tequip.cs\r\n\t//\t}\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {CharacterAppearanceBase} loadedEquip\r\n\t * @param {string} use_category - category which used of cash-weapon\r\n\t */\r\n\tasync _use(id, loadedEquip, use_category) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tlet url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\":\"\") + id}`;\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item;\r\n\r\n\t\t\tif (loadedEquip instanceof CharacterAppearanceBase) {\r\n\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\tdebugger;\r\n\t\t\t\titem = loadedEquip;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (loadedEquip) {\r\n\t\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tconst fragmentType = cateInfo.FragmentType || CharacterEquip;\r\n\r\n\t\t\t\titem = new fragmentType();\r\n\t\t\t}\r\n\t\t\t/** _use_loaded_equip */\r\n\t\t\tif (0) {\r\n\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t}\r\n\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t}\r\n\r\n\t\t\tlet is_exist = loadedEquip || await item.load(url, id, cateInfo, use_category);\r\n\t\t\tif (is_exist) {\r\n\t\t\t\t/** _use_loaded_equip */\r\n\t\t\t\tif (1) {\r\n\t\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.warn(\"item(\" + id + \") is not exist\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {boolean}\r\n\t */\r\n\t_unuse(id) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet cateInfo, equip;\r\n\r\n\t\tif (id instanceof CharacterAppearanceBase) {\r\n\t\t\tequip = id;\r\n\t\t\tid = equip.id;\r\n\t\t\tcateInfo = equip.categoryInfo;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcateInfo = ItemCategoryInfo.get(id);\r\n\t\t}\r\n\t\t\r\n\t\tconst slotName = cateInfo.slot;\r\n\r\n\t\tif (slotName != \"head\" && slotName != \"body\") {\r\n\t\t\tif (this[slotName] && this[slotName].id == id) {\r\n\t\t\t\tequip = this[slotName];\r\n\t\t\t\tfor (let slot in equip.islot) {\r\n\t\t\t\t\tlet order = equip.islot[slot];\r\n\t\t\t\t\tif (this._ordered_slot[order]) {\r\n\t\t\t\t\t\tthis._ordered_slot[order]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._ordered_slot[order];\r\n\t\t\t\t}\r\n\t\t\t\tthis[slotName] = null;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t_clear() {\r\n\t\t//this.body = null;\r\n\t\t//this.head = null;\r\n\t\tthis.face = null;\r\n\t\tthis.hair = null;\r\n\t\tthis.cap = null;\r\n\t\tthis.accessoryFace = null;\r\n\t\tthis.accessoryEyes = null;\r\n\t\tthis.accessoryEars = null;\r\n\t\tthis.coat = null;\r\n\t\tthis.longcoat = null;\r\n\t\tthis.pants = null;\r\n\t\tthis.shoes = null;\r\n\t\tthis.glove = null;\r\n\t\tthis.cape = null;\r\n\t\tthis.shield = null;\r\n\r\n\t\t//temp\r\n\t\tlet head = this.head;\r\n\t\tlet body = this.body;\r\n\r\n\t\t//clear\r\n\t\tthis._ordered_slot = [];\r\n\r\n\t\t//restore\r\n\t\tif (head) {\r\n\t\t\tthis._ordered_slot[head.slot_order] = head;\r\n\t\t}\r\n\t\tif (body) {\r\n\t\t\tthis._ordered_slot[body.slot_order] = body;\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify() {\r\n\t\tlet slots = [\"c\"];\r\n\t\t\t\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id + \"|\" + this.face.id);\r\n\t\tif (this.hair) {\r\n\t\t\tlet ha = [];\r\n\t\t\tha.push(this.hair.id);\r\n\t\t\tif (this.hairColor2 && this.hairMix2 > 0) ha.push(this.hairColor2 + \"%\" + Math.trunc(this.hairMix2 * 100));\r\n\t\t\tif (this.hairColor3 && this.hairMix3 > 0) ha.push(this.hairColor3 + \"%\" + Math.trunc(this.hairMix3 * 100));\r\n\t\t\tslots.push(ha.join(\"|\"));\r\n\t\t}\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots.join(\",\");\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\tlet slots = [];\r\n\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id);\r\n\t\tif (this.hair) slots.push(this.hair.id);\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots;\r\n\t}\r\n\r\n\t/**\r\n\t * returns: [face, hair, cap, ..., weapon]\r\n\t */\r\n\t*enumerate() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.hair) yield this.hair;\r\n\r\n\t\tyield* this.enumerate_equip();\r\n\t}\r\n\t*enumerate_equip() {\r\n\t\tif (this.cap) yield this.cap;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t\tif (this.accessoryEyes) yield this.accessoryEyes;\r\n\t\tif (this.accessoryEars) yield this.accessoryEars;\r\n\t\tif (this.coat) yield this.coat;\r\n\t\tif (this.longcoat) yield this.longcoat;\r\n\t\tif (this.pants) yield this.pants;\r\n\t\tif (this.shoes) yield this.shoes;\r\n\t\tif (this.glove) yield this.glove;\r\n\t\tif (this.shield) yield this.shield;\r\n\t\tif (this.cape) yield this.cape;\r\n\t\tif (this.weapon) yield this.weapon;\r\n\t}\r\n\t*enumerate_face() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t}\r\n}\r\n\r\nclass CharacterChangeLog {\r\n\tconstructor() {\r\n\t\t/** @type {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\t\tthis.ear = undefined;\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.useEquip = [];\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.unuseEquip = [];\r\n\t\t\r\n\t\t/** @type {string} - hair2 id */\r\n\t\tthis.hair2 = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.hairMix2 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hair3 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hairMix3 = undefined;\r\n\r\n\t\t/** @type {string} weapon => equip id */\r\n\t\tthis.weapon = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.ear = undefined;\r\n\t\tthis.useEquip = [];\r\n\t\tthis.unuseEquip = [];\r\n\t\tthis.hair2 = undefined;\r\n\t\tthis.hairMix2 = undefined;\r\n\t\t//this.hair3 = undefined;\r\n\t\t//this.hairMix3 = undefined;\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n}\r\n\r\nexport class CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tthis._$dirty = 0;//force update vue\r\n\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.job = null;\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.subJob = null;\r\n\r\n\r\n\t\t/** @type {ActionAnimation} */\r\n\t\tthis.actani = new ActionAnimation();\r\n\r\n\t\t/** @type {number} - animation speed rate */\r\n\t\tthis.speed = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.fixed_speed = false;\r\n\r\n\t\t/** @type {boolean} - pause animation */\r\n\t\tthis.pause = false;\r\n\r\n\r\n\t\tthis.hideBody = false;\r\n\r\n\t\tthis._ride_action = \"stand1\";\r\n\t\t\r\n\t\tthis._action = \"stand1\";\r\n\t\tthis._action_frame = 0;\r\n\r\n\t\tthis._emotion = \"blink\";\r\n\t\tthis._emotion_frame = 0;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis._emotion_frame_sequence = [0, 1, 2, 1];\r\n\r\n\t\t/** @type {CharacterSlots} */\r\n\t\tthis.slots = new CharacterSlots();\r\n\r\n\t\t/**\r\n\t\t * is require update render data\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.__require_update = true;\r\n\r\n\t\t/** @type {FragmentTexture[]} */\r\n\t\tthis.__frag_list = [];\r\n\r\n\t\t/** @type {CharacterChangeLog} **/\r\n\t\tthis.$$changeLog = new CharacterChangeLog();\r\n\t}\r\n\r\n\t_clone() {\r\n\t\talert(this.constructor.name + \"::_clone\");\r\n\r\n\t\t/** @type {CharacterAnimationBase} */\r\n\t\tlet nc = new this.constructor();//not must CharacterRender\r\n\t\tif (!nc) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnc.speed = 0;\r\n\r\n\t\tnc.x = this.x;\r\n\t\tnc.y = this.y;\r\n\t\tnc.angle = this.angle;\r\n\r\n\t\tnc.action = this.action;\r\n\t\tnc.action_frame = this.action_frame;\r\n\r\n\t\tnc.emotion = this._emotion;\r\n\t\tnc.emotion_frame = this.emotion_frame;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tnc.slots[i] = this.slots[i];//not need colne ?\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nc;\r\n\t}\r\n\t\t\r\n\t_waitFrameTexturesLoaded() {\r\n\t\tlet tasks = [];\r\n\t\tfor (let i in this.slots) {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\t\tlet frag = item.fragments[j];\r\n\t\t\t\t\tlet count = frag.getFrameCount(this);\r\n\t\t\t\t\tfor (let k = 0; k < count; ++k) {\r\n\t\t\t\t\t\tlet ft = frag.getFrameTexture(this, k);\r\n\t\t\t\t\t\tif (ft && !ft._isLoaded_or_doload()) {\r\n\t\t\t\t\t\t\ttasks.push(ft.$promise);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * init animation status\r\n\t */\r\n\tinitAnimation() {\r\n\t\t/** @type {string} */\r\n\t\tthis.action = \"stand1\";\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._action_frame = 0;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.emotion = \"blink\";\r\n\t\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_frame = 0;\r\n\t}\r\n\r\n\t/** @type {number} - 0~1 */\r\n\tgetSpeed() {\r\n\t\tif (this.pause) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.fixed_speed ? 1 : this.speed;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget elfEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.elfEar;\r\n\t\t}\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.elfEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget lefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar;\r\n\t\t}\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.lefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget highlefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.highlefEar;\r\n\t\t}\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.highlefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\tget ear() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar ? \"lef\" : (this.slots.head.elfEar ? \"elf\" : (this.slots.head.highlefEar ? \"highlef\" : \"human\"));\r\n\t\t}\r\n\t}\r\n\tset ear(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tif (value == \"elf\") {\r\n\t\t\t\tthis.slots.head.elfEar = true;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"lef\") {\r\n\t\t\t\tthis.slots.head.lefEar = true;\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"highlef\") {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = true;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = \"human\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.$$changeLog.ear = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget action() {\r\n\t\t//if (this.slots.tamingMob) {\r\n\t\t//\tconst actmap = this.slots.tamingMob.actionMap;\r\n\t\t//\tif (actmap) {\r\n\t\t//\t\treturn actmap[this._action];\r\n\t\t//\t}\r\n\t\t//\treturn \"sit\";//default\r\n\t\t//}\r\n\t\treturn this._action;\r\n\t}\r\n\tset action(act) {\r\n\t\tif (this.slots.tamingMob) {\r\n\t\t\tlet _act;\r\n\r\n\t\t\tthis._ride_action = act;\r\n\r\n\t\t\tif (this.slots.tamingMob.actionMap) {\r\n\t\t\t\t_act = this.slots.tamingMob.actionMap[act];\r\n\r\n\t\t\t\tif (_act == \"hideBody\") {\r\n\t\t\t\t\tthis.hideBody = true;\r\n\r\n\t\t\t\t\t//TODO: hideBody act=?\r\n\r\n\t\t\t\t\tthis._action = act;\r\n\t\t\t\t\tif (this.actani._action != act) {\r\n\t\t\t\t\t\tthis.actani.reload(act);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.__require_update |= true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.hideBody = false;\r\n\r\n\t\t\t\t\tthis._action = _act;\r\n\t\t\t\t\tif (this.actani._action != _act) {\r\n\t\t\t\t\t\tthis.actani.reload(_act);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.__require_update |= true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (act == \"rope\") {\r\n\t\t\t\t\tthis._action = \"rope\";//default\r\n\t\t\t\t}\r\n\t\t\t\telse if (act == \"ladder\") {\r\n\t\t\t\t\tthis._action = \"ladder\";//default\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._action = \"sit\";//default\r\n\t\t\t\t}\r\n\t\t\t\tif (this.actani._action != act) {\r\n\t\t\t\t\tthis.actani.reload(act);\r\n\t\t\t\t}\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.hideBody = false;\r\n\t\t\tthis._ride_action = null;\r\n\r\n\t\t\tif (this.actani._action != act && this.slots.body) {\r\n\t\t\t\tthis._action = act;\r\n\t\t\t\tthis.actani.reload(act);\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame() {\r\n\t\treturn this._action_frame;\r\n\t}\r\n\tset action_frame(value) {\r\n\t\tif (value === \"\") {//from $(\"input\")\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._action_frame = Number(value) | 0;\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._action_frame = value;\r\n\t\tthis.__require_update |= true;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.body) {\r\n\t\t\t\treturn this.slots.body.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget emotion() {\r\n\t\treturn this._emotion;\r\n\t}\r\n\tset emotion(emo) {\r\n\t\tif (this._emotion != emo && this.slots.face && this.slots.face.fragments.face.textures[emo]) {\r\n\t\t\tthis._emotion = emo;\r\n\t\t\tthis._emotion_frame = 0;\r\n\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\tthis._emotion_frame_sequence = [...circularSequence(this.emotion_frame_count)];\r\n\r\n\t\t\tthis.__require_update |= true;\r\n\t\t}\r\n\t}\r\n\r\n\t*emotion_frame_sequence_generator(length) {\r\n\t\tfor (; ;) {\r\n\t\t\t//TODO: random blink\r\n\t\t\tyield* circularSequence(length);\r\n\r\n\t\t\tfor (; Math.random() < 0.5;) {\r\n\t\t\t\tyield 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t/** @type {number} */\r\n\tget emotion_frame() {\r\n\t\tlet f = this._emotion_frame_sequence[this._emotion_frame % this._emotion_frame_sequence.length];\r\n\t\treturn f;\r\n\t}\r\n\tset emotion_frame(value) {\r\n\t\tif (value === \"\") {//from $(\"input\")\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._emotion_frame = Number(value) | 0;\r\n\t\t\t\tthis._emotion_time = 0;\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._emotion_frame = value;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis.__require_update |= true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} next\r\n\t */\r\n\t_get_emotion_next_frame(next) {\r\n\t\tlet f = this._emotion_frame + next;\r\n\t\tf = f < 0 ? (this._emotion_frame_sequence.length - 1) : (f % this._emotion_frame_sequence.length);\r\n\t\treturn this._emotion_frame_sequence[f];\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_time() {\r\n\t\treturn this._emotion_time;\r\n\t}\r\n\tset emotion_time(time) {\r\n\t\tif (this.emotion_frame_count) {\r\n\t\t\tif (time < this.emotion_delay) {\r\n\t\t\t\tthis._emotion_time = time;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\t\t++this._emotion_frame;\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget emotion_delay() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn this.slots.face.getDelay(this);\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.face) {\r\n\t\t\t\treturn this.slots.face.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp - 0 <= stamp < Infinity\r\n\t */\r\n\t_update(_stamp) {\r\n\t\tif (this.pause) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet stamp = _stamp * this.getSpeed();\r\n\t\t\r\n\t\tif (this.actani) {\r\n\t\t\tif (this.actani.isEnd() && this.actani.loop) {\r\n\t\t\t\tthis.actani.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.actani.update(stamp, this);\r\n\t\t}\r\n\r\n\t\tthis.emotion_time += _stamp;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet equip = this.slots[i];\r\n\t\t\tif (equip && equip.effect && equip.effect.enable) {\r\n\t\t\t\tequip.effect.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis._update(stamp);\r\n\t}\r\n\r\n\t__forceUpdate(stamp) {\r\n\t\tthis._$dirty = Math.random();\r\n\t\tthis._update(stamp | 0);\r\n\t\tthis.__update_frag_list();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} x\r\n\t * @param {number} y, \r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\t_draw(renderer, x, y, angle, flip) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\tif (this.__require_update) {\r\n\t\t\tthis.__update_frag_list();\r\n\t\t\tthis.__require_update = false;\r\n\t\t}\r\n\r\n\t\t//list.filter(a=>a&&a._raw.map).forEach(a=>{ for (let i in a._raw.map) { if (q[i]) { q[i].push(a); } else { q[i] = [a]; } } })\r\n\t\tthis.__draw_list(renderer, this.__frag_list, x, y, angle, flip);\r\n\r\n\t\trenderer.popGlobalAlpha();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {FragmentTexture[]} list\r\n\t */\r\n\t__draw_list(renderer, list, x, y, angle, flip) {\r\n\t\trenderer.pushMatrix();\r\n\r\n\t\trenderer.translate(x, y);\r\n\t\t\r\n\t\tif (0) {\r\n\t\t\tlet ctx = renderer.ctx;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(100, 0);\r\n\t\t\tctx.strokeStyle = \"#F00\";\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(0, 100);\r\n\t\t\tctx.strokeStyle = \"#0F0\";\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t\trenderer.rotate(window.m_a || angle);\r\n\r\n\t\tif (flip) {\r\n\t\t\trenderer.scale(-1, 1);\r\n\t\t}\r\n\t\t//{\r\n\t\t//\tlet ctx = renderer.ctx;\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(100, 0);\r\n\t\t//\tctx.strokeStyle = \"#F00\";\r\n\t\t//\tctx.stroke();\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(0, 100);\r\n\t\t//\tctx.strokeStyle = \"#0F0\";\r\n\t\t//\tctx.stroke();\r\n\t\t//}\r\n\r\n\t\t{\r\n\t\t\tfor (let i in this.slots) {\r\n\t\t\t\tlet equip = this.slots[i];\r\n\t\t\t\tif (equip && equip.effect) {\r\n\t\t\t\t\tequip.effect.render(renderer, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i in list) {\r\n\t\t\t\tlet ft = list[i];\r\n\t\t\t\tft.render(renderer, this);\r\n\t\t\t}\r\n\t\t}\r\n\t\trenderer.popMatrix();\r\n\t}\r\n\t__update_frag_list() {\r\n\t\tthis.__frag_list = [];\r\n\t\t\r\n\t\t/** @type {Array<CharacterAppearanceBase>[]} */\r\n\t\tlet slots = {};\r\n\t\t\r\n\t\tfor (let i = 2; i <= 3; ++i) {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this.slots[\"_hair\" + i];\r\n\t\t\t\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\t\tfor (let i in this.slots._ordered_slot) {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this.slots._ordered_slot[i];\r\n\t\t\t\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\t\t\r\n\t\t{//back\r\n\t\t\tlet is_back = false;\r\n\t\t\t\r\n\t\t\tfor (let i in slots) {\r\n\t\t\t\t/** @type {FragmentTexture[]} */\r\n\t\t\t\tlet fts = slots[i];\r\n\t\t\t\tfor (let j in fts) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = fts[j];\r\n\t\t\t\t\tif (is_back) {\r\n\t\t\t\t\t\tif (ft._place.startsWith(\"face\")) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ft._place.startsWith(\"backHair\")) {\r\n\t\t\t\t\t\tis_back = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t{\r\n\t\t\tlet ae = this.__frag_list[114];//HACK: Ae\r\n\t\t\tif (ae) {\r\n\t\t\t\tthis.__frag_list.push(ae);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._calcBoundBox();\r\n\t}\r\n\t/**\r\n\t * @param {Array<CharacterAppearanceBase>[]} slots\r\n\t * @param {CharacterAppearanceBase} item\r\n\t */\r\n\t__add_equip_to_frag_list(slots, item) {\r\n\t\t// if equip not use then value is mumber(slot_order) where this.slots._ordered_slot\r\n\t\tif (item == null) {\r\n\t\t\treturn;//debugger;\r\n\t\t}\r\n\t\telse if (item > 0) {// typeof item == 'number'; item != null && (item instanceof CharacterAppearanceBase || item >= 0)\r\n\t\t\treturn;//continue;\r\n\t\t}\r\n\r\n\t\t// init slots\r\n\t\tfor (let j in item.vslot) {\r\n\t\t\tlet slot = item.vslot[j];\r\n\t\t\tslots[slot] = [];\r\n\t\t}\r\n\r\n\t\tfor (let j in item.fragments) {//foreach equip place\r\n\t\t\tlet slot = sMap[j];\r\n\t\t\tif (slot != null) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (j == \"default\") {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tslot = item._raw.info.islot;\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//item.fragments[j].visible = true;\r\n\t\t}\r\n\t}\r\n\t/** @param {FragmentTexture} ft */\r\n\t__add_frag_to_list(ft) {\r\n\t\tft.update(this);\r\n\t\tthis.__frag_list[ft.z] = ft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * calc current frame bound box and restore result\r\n\t * @returns {Rectangle}\r\n\t */\r\n\t_calcBoundBox() {\r\n\t\tlet left = 0, top = 0, right = 0, bottom = 0;\r\n\r\n\t\tfor (let i in this.__frag_list) {\r\n\t\t\tlet ft = this.__frag_list[i];\r\n\t\t\tif (ft.texture && ft.relative) {\r\n\t\t\t\tlet x0 = ft.relative.x;\r\n\t\t\t\tlet y0 = ft.relative.y;\r\n\t\t\t\tlet x1 = x0 + ft.width;\r\n\t\t\t\tlet y1 = y0 + ft.height;\r\n\r\n\t\t\t\tleft = Math.min(left, x0);\r\n\t\t\t\ttop = Math.min(top, y0);\r\n\t\t\t\tright = Math.max(right, x1);\r\n\t\t\t\tbottom = Math.max(bottom, y1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._boundBox = new Rectangle(\r\n\t\t\tMath.trunc(left),\r\n\t\t\tMath.trunc(top),\r\n\t\t\tMath.trunc(right - left),\r\n\t\t\tMath.trunc(bottom - top)\r\n\t\t);\r\n\t\treturn this._boundBox;\r\n\t}\r\n\t\r\n\ttoJSON() {\r\n\t\tlet obj = {\r\n\t\t\thair2: this.slots._hair2.id,\r\n\t\t\thairMix2: this.slots.hairMix2,\r\n\t\t\tslots: this.slots.toJSON(),\r\n\t\t};\r\n\r\n\t\tif (this.slots.head.elfEar) {\r\n\t\t\tobj.ear = \"elf\";\r\n\t\t}\r\n\t\telse if (this.slots.head.lefEar) {\r\n\t\t\tobj.ear = \"lef\";\r\n\t\t}\r\n\t\telse if (this.slots.head.highlefEar) {\r\n\t\t\tobj.ear = \"highlef\";\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nexport class CharacterRenderer extends CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {number} - position x */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} - position y */\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {number} - where layer */\r\n\t\tthis.z = 5;\r\n\r\n\t\t/** @type {number} - translate x once frame */\r\n\t\tthis.tx = 0;\r\n\t\t/** @type {number} - translate y once frame */\r\n\t\tthis.ty = 0;\r\n\t\t\r\n\t\tthis.angle = 0;\r\n\t\tthis.front = -1;\r\n\r\n\t\t/** @type {Promise<void>[]} */\r\n\t\tthis.__load_task = [];\r\n\r\n\t\t/** @type {function(IRenderer)} */\r\n\t\tthis.render = function (renderer) {\r\n\t\t\t//not ready to render\r\n\t\t\t//if load then set load render = _render\r\n\t\t}\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis._boundBox = null;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\tlet result = await Promise.all([\r\n\t\t\t$get.data(\"/zmap\"),\r\n\t\t\t$get.data(\"/smap\"),\r\n\t\t\tItemEffect.Init(),\r\n\t\t\tActionAnimation.Init(),//action definition\r\n\t\t]);\r\n\t\t\r\n\t\tzMap = {};\r\n\t\tObject.keys(result[0]).reverse().forEach((k, i) => zMap[k] = i + 1);\r\n\r\n\t\tsMap = result[1];\r\n\t}\r\n\r\n\tload() {\r\n\t\t//load body and head for calc relative position\r\n\t\tthis.use(\"00002012\");\r\n\t\tthis.use(\"00012012\");\r\n\r\n\t\tlet $promise = Promise.all([...this.__load_task]);\r\n\t\t(function (that, $promise) {\r\n\t\t\t$promise.then(function (result) {\r\n\t\t\t\tthat.initAnimation();\r\n\t\t\t\tthat.render = that._render;\r\n\t\t\t});\r\n\t\t})(this, $promise);\r\n\r\n\t\treturn $promise;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.waitLoaded();\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_render(renderer) {\r\n\t\tconst x = Math.trunc(this.x + this.tx);\r\n\t\tconst y = Math.trunc(this.y + this.ty);\r\n\t\t\r\n\t\tthis._draw(renderer, x, y, this.angle, this.front > 0);\r\n\t\t\r\n\t\t//this.tx = 0;//auto clear\r\n\t\t//this.ty = 0;//auto clear\r\n\t}\r\n\t\r\n\t_setup_test() {\r\n\t\tthis.use(\"00026509\");\r\n\r\n\t\tthis.use(\"00044041\");\r\n\r\n\t\t//this.use(\"01022274\");\r\n\r\n\t\tthis.use(\"01053169\");\r\n\r\n\t\tthis.use(\"01071077\");\r\n\r\n\t\t//this.use(\"01102960\");\r\n\t}\r\n\r\n\t\r\n\tasync __synchronize(stamp) {\r\n\t\tthis.__forceUpdate(stamp);\r\n\t\r\n\t\tawait this.waitLoaded();\r\n\t\tawait this._waitFrameTexturesLoaded();\r\n\t}\r\n\tasync waitLoaded() {\r\n\t\tlet tasks = this.__load_task;\r\n\t\tif (tasks && tasks.length) {\r\n\t\t\tawait Promise.all(tasks).then(() => {\r\n\t\t\t\tthis.__load_task = [];\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t//isLoading() {\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {string} category - category of cash-weapon\r\n\t */\r\n\tasync use(id, category) {\r\n\t\tif (!category) {\r\n\t\t\tcategory = ItemCategoryInfo.getJobWeaponCategory(this.job);\r\n\t\t}\r\n\t\tconst item_type = id[0];\r\n\t\tswitch (item_type) {\r\n\t\t\tcase \"0\"://equip\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ItemCategoryInfo.isCashWeapon(id)) {\r\n\t\t\t\t\t\t//this.$$changeLog.weaponType = ss[1];/??\r\n\t\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\r\n\t\t\t\t\tlet task = this.slots._use(id, null, category);\r\n\t\t\t\t\tthis.__load_task.push(task);\r\n\t\t\t\t\tawait task;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (id.startsWith(\"019\")) {\r\n\t\t\t\t\t\tthis.action = this.action;//force update action\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.__update_frag_list();\r\n\t\t\t\t\tthis._calcBoundBox();\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tunuse(id) {\r\n\t\tdebugger;\r\n\t\tif (id[0] == \"0\") {//equip\r\n\t\t\tlet result = this.slots._unuse(id);\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.$$changeLog.unuseEquip.push(id);\r\n\t\t\t\tthis._calcBoundBox();\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t_parse(code) {\r\n\t\tif (!code) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet es = code.split(\",\");\r\n\t\tthis.slots._clear();\r\n\t\tes.forEach((v, i, a) => {\r\n\t\t\tif (v.indexOf(\"|\") >= 0) {\r\n\t\t\t\tconst ss = v.split(\"|\");\r\n\t\t\t\tconst cate = ItemCategoryInfo.get(ss[0]);\r\n\t\t\t\tlet id;\r\n\t\t\t\tif (cate.slot == \"face\") {\r\n\t\t\t\t\tid = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"hair\") {\r\n\t\t\t\t\tconst slots = this.slots;\r\n\t\t\t\t\tlet h2 = ss[1];\r\n\t\t\t\t\tlet h3 = ss[2];\r\n\t\t\t\t\t//\r\n\t\t\t\t\tid = ss[0];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id).then(() => {\r\n\t\t\t\t\t\tif (h2 && h2.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h2.split(\"%\");\r\n\t\t\t\t\t\t\tconst c2 = hc[0];\r\n\t\t\t\t\t\t\tconst m2 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair2 = c2;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix2 = m2;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor2 = c2;\r\n\t\t\t\t\t\t\tslots.hairMix2 = m2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (h3 && h3.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h3.split(\"%\");\r\n\t\t\t\t\t\t\tconst c3 = hc[0];\r\n\t\t\t\t\t\t\tconst m3 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair3 = c3;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix3 = m3;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor3 = hc[0];\r\n\t\t\t\t\t\t\tslots.hairMix4 = hc[1] / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"weapon\") {\r\n\t\t\t\t\tthis.$$changeLog.weaponType = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t\tthis.use.apply(this, ss, ss[1]);//this.use(ss[0], ss[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (Number.isFinite(parseInt(v, 10))) {\r\n\t\t\t\tthis.use(v);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @type {string} col\r\n\t */\r\n\tget hairColor() {\r\n\t\tif (this.slots.hair) {\r\n\t\t\treturn CharacterRenderConfig.getHairColor(this.slots.hair.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset hairColor(col) {\r\n\t\tif (this.slots.hair && col != this.hairColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorHairID(this.slots.hair.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} col\r\n\t */\r\n\tget faceColor() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn CharacterRenderConfig.getFaceColor(this.slots.face.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset faceColor(col) {\r\n\t\tif (this.slots.face && col != this.faceColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorFaceID(this.slots.face.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterChangeLog} changeLog\r\n\t */\r\n\tcommitChange(changeLog) {\r\n\t\tif (changeLog.ear) {\r\n\t\t\tthis.ear = changeLog.ear;\r\n\t\t}\r\n\r\n\t\tif (this.useEquip) {\r\n\t\t\tfor (let id of this.useEquip) {\r\n\t\t\t\tthis.use(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.unuseEquip) {\r\n\t\t\tfor (let id of this.unuseEquip) {\r\n\t\t\t\tthis.unuse(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair2 && changeLog.hairMix2) {\r\n\t\t\tthis.slots.hairColor2 = changeLog.hair2;\r\n\t\t\tthis.slots.hairMix2 = changeLog.hairMix2;\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair3 && changeLog.hairMix3) {\r\n\t\t\t//this.slots.hairColor3 = changeLog.hair3;\r\n\t\t\t//this.slots.hairMix3 = changeLog.hairMix3;\r\n\t\t}\r\n\t\t\r\n\t\tif (changeLog.weapon && changeLog.weaponType) {\r\n\t\t\tthis.use(changeLog.weapon, changeLog.weaponType);\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify(genCode) {\r\n\t\tlet result = this.slots._stringify();\r\n\t\tif (genCode) {\r\n\t\t\treturn `chara._parse('${result}')`;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_outlink_old() {\r\n\t\tif (this.slots.body && this.slots.body.id && this.slots.face && this.slots.face.id && this.action && this.emotion) {\r\n\t\t\tlet link = \"https://labs.maplestory.io/api/GMS/latest/character/center/\" + this.slots.body.id + \"/\";\r\n\t\t\tlet slots = [...this.slots.enumerate()].map(a => parseInt(a.id, 10));\r\n\r\n\t\t\tslots[0] = this.slots.face.id + \":\" + this.emotion;\r\n\r\n\t\t\tlink += slots.join(\",\");\r\n\r\n\t\t\tlink += \"/\" + this.action + \"?showears=\" + (this.elfEar ? \"true\" : \"false\");\r\n\r\n\t\t\tlink += \"&showLefEars=\" + (this.lefEar ? \"true\" : \"false\");\r\n\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\tconsole.log(\"character need body, face, action, emotion\");\r\n\t}\r\n\t\r\n\t_outlink(name) {\r\n\t\tconst animationName = this.action;\r\n\t\tconst frame = this.action_frame;\r\n\t\tconst slots = this.slots;\r\n\t\tconst itemList = JSON.stringify(makeItemList.call());\r\n\t\treturn encodeURI(\r\n\t\t\t\t\"https://maplestory.io/api/character/\" +\r\n\t\t\t\titemList.slice(1, itemList.length - 1) +    // not array\r\n\t\t\t\t\"/\" + animationName + \"/\" + frame + \"?\" +\r\n\t\t\t\t\"showears=\" + this.elfEar +\r\n\t\t\t\t\"&showLefEars=\" + this.lefEar +\r\n\t\t\t\t\"&resize=1\" +\r\n\t\t\t\t(name ? (\"&name=\" + name) : \"\") +\r\n\t\t\t\t\"&flipX=\" + Boolean(this.front > 0) +\r\n\t\t\t\t\"&bgColor=0,0,0,0\"\r\n\t\t\t\t);\r\n\t\tfunction makeItemList() {\r\n\t\t\treturn Object.values(slots).filter(a => a).map(transformItemData);\r\n\t\t}\r\n\t\tfunction transformItemData(item) {\r\n\t\t\tlet region, version;\r\n\t\t\tif (item._raw.info.__v) {\r\n\t\t\t\tconst m = item._raw.info.__v.toUpperCase().match(/([A-Z]*)([0-9]*)/);\r\n\t\t\t\tregion = m[1] == \"TWMS\" ? \"TMS\" : m[1];\r\n\t\t\t\tversion = \"latest\";//m[2];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tregion =\"TMS\";\r\n\t\t\t\tversion = \"latest\";\r\n\t\t\t}\r\n\t\t\tconst filter = item.filter;\r\n\t\t\treturn {\r\n\t\t\t\titemId:        Number(item.id),\r\n\t\t\t\tregion:        region,\r\n\t\t\t\tversion:       version,\r\n\t\t\t\thue:           filter.hue,\r\n\t\t\t\tsaturation:    strNum(filter.sat),\r\n\t\t\t\tbrightness:    strNum(filter.bri),\r\n\t\t\t\tcontrast:      strNum(filter.contrast),\r\n\t\t\t\talpha:         Number(item.opacity.toFixed(1)),\r\n\t\t\t\tanimationName: animationName,\r\n\t\t\t};\r\n\t\t}\r\n\t\tfunction strNum(val) {\r\n\t\t\treturn (val / 100).toFixed(1);\r\n\t\t}\r\n\t}\r\n\t\r\n\t_download() {\r\n\t\twindow.open(this._outlink());\r\n\t}\r\n\r\n\t_save_as_svg() {\r\n\t\tthis.__texture_to_base64().then(frag_list => {\r\n\t\t\tlet file_name = this.id + \".svg\";\r\n\t\t\t//let frag_list = this.__frag_list;\r\n\t\r\n\t\t\tlet svg = '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" >';\r\n\r\n\t\t\tsvg += '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink= \"http://www.w3.org/1999/xlink\">\\n';// width=\"64\" height=\"96\"\r\n\r\n\t\t\tsvg += '<g transform=\"translate(32, 96)\">';\r\n\t\t\tfrag_list.forEach(function (ft) {\r\n\t\t\t\tif (ft && ft.relative) {\r\n\t\t\t\t\tlet clz = ft.classList;\r\n\t\t\t\t\tsvg += `\\t<image class=\"${clz}\" opacity=\"${ft.visible ? ft.opacity : 0}\" x=\"${ft.relative.x}\" y=\"${ft.relative.y}\" width=\"${ft.width}\" height=\"${ft.height}\" xlink:href=\"${ft._url}\"></image>\\n`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsvg += '</g>';\r\n\r\n\t\t\tsvg += '<text x=\"0\" y=\"122\" fill=\"transparent\">' + this._stringify(false) + '</text>';\r\n\r\n\t\t\tsvg += '</svg>';\r\n\r\n\t\t\t//let url = \"data:text/plain;utf8,\" + svg;\r\n\r\n\t\t\tdebugger;\r\n\r\n\t\t\t//window.open(url);\r\n\t\t\tDownloadData(svg, \"image/svg+xml;utf8\", file_name);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * \"data:image/png;base64,[...]\"\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} filename\r\n\t * @returns {string}\r\n\t */\r\n\t_save_as_png(renderer, filename) {\r\n\t\tlet bound = this._calcBoundBox();\r\n\t\tlet size = bound.size;\r\n\t\tlet x = -bound.left;\r\n\t\tlet y = bound.height;\r\n\t\tlet angle = 0;\r\n\t\tlet front = false;\r\n\r\n\t\t// use Canvas2, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//save Canvas2 size, current ctx is _ctx2\r\n\t\tconst c2w = renderer._ctx2.canvas.width;\r\n\t\tconst c2h = renderer._ctx2.canvas.height;\r\n\t\t//\r\n\t\trenderer.ctx.canvas.width = size.x;\r\n\t\trenderer.ctx.canvas.height = size.y;\r\n\r\n\t\ttry {\r\n\t\t\tthis._draw(renderer, x, y, angle, front);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\tlet base64 = renderer.ctx.canvas.toDataURL(\"image/png\");\r\n\t\t{\r\n\t\t\tlet elem = document.createElement(\"a\");\r\n\r\n\t\t\tlet name = `${filename ? (filename+\".\"):\"\"}${this.action}[${this.action_frame}].${this.emotion}[${this.emotion_frame}].png`;\r\n\r\n\t\t\telem.id = name;\r\n\t\t\telem.download = name;\r\n\t\t\telem.href = base64;\r\n\r\n\t\t\tdocument.body.appendChild(elem);\r\n\t\t\telem.click();\r\n\t\t\tdocument.body.removeChild(elem);\r\n\t\t}\r\n\r\n\t\t//restore Canvas2 size, current ctx is _ctx2\r\n\t\trenderer.ctx.canvas.width = c2w;\r\n\t\trenderer.ctx.canvas.height = c2h;\r\n\r\n\t\t// restore Canvas, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\treturn base64;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {Promise<FragmentTexture[]>}\r\n\t */\r\n\tasync __texture_to_base64() {\r\n\t\tlet frag_list = this.__frag_list;\r\n\t\tlet tasks = [];\r\n\r\n\t\tfrag_list.forEach(function (ft) {\r\n\t\t\tif (!ft) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!ft._url.startsWith(\"data:\")) {\r\n\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\tft._url = await toDataURL(ft._url);\r\n\t\t\t\t\treturn ft;\r\n\t\t\t\t})());\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttasks.push(ft);\r\n\t\t\t}\r\n\t\t\tif (ft.graph2) {\r\n\t\t\t\tlet src = ft.graph2._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph2._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph2;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ft.graph3) {\r\n\t\t\t\tlet src = ft.graph3._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph3._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph3;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n}\r\nAddInitTask(CharacterRenderer.Init);\r\n\r\nfunction* circularSequence(length) {\r\n\tlet i = 0;\r\n\tfor (; i < length; ++i) {//a: 0, 1, 2, 3, ...b\r\n\t\tyield i;\r\n\t}\r\n\tfor (i -= 2; i > 0; --i) {//b: 2, 1, ...a\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction* linearSequence(length) {\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction extract_number(input) {\r\n\treturn String(input).match(/(-?\\d+\\.?\\d*)|(\\.\\d*)/g);\r\n}\r\n\r\n/**\r\n * image href to data url\r\n */\r\nfunction toDataURL(url) {\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tlet xhr = new XMLHttpRequest();\r\n\t\txhr.onload = function () {\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\treader.onloadend = function () {\r\n\t\t\t\tresolve(reader.result);\r\n\t\t\t}\r\n\t\t\treader.onerror = function (ev) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treject(ev);\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(xhr.response);\r\n\t\t};\r\n\t\txhr.open('GET', url);\r\n\t\txhr.responseType = 'blob';\r\n\t\txhr.send();\r\n\t});\r\n}\r\n","﻿\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\n\r\n\r\nexport class ChatBalloon {\r\n\tconstructor() {\r\n\t\tthis._raw = null;\r\n\t\tthis.style = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {any} style\r\n\t */\r\n\tasync load(style) {\r\n\t\tif (style == null) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tif (ChatBalloon.cache[style]) {\r\n\t\t\tlet cb = ChatBalloon.cache[style];\r\n\t\t\tObject.assign(this, cb);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst path = [this._base_path, style].join(\"/\");\r\n\r\n\t\t\tthis.style = style;\r\n\t\t\t\r\n\t\t\tlet promise = $get.data(path);\r\n\t\t\tChatBalloon.cache[style] = this;\r\n\t\t\tthis.$promise = promise;\r\n\t\t\t\r\n\t\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\t\tvalue: await promise,\r\n\t\t\t});\r\n\t\t\tdelete this.$promise;\r\n\r\n\t\t\tconst argb = Number(\"clr\" in this._raw ? this._raw.clr : defCol);\r\n\t\t\tconst rgba = (((argb & 0xFF000000) >>> 24) | ((argb & 0x00FFFFFF) << 8)) >>> 0;\r\n\t\t\tconst str_rgba = rgba.toString(16).padStart(8, \"0\");\r\n\t\t\tthis.color = (this._raw.clr == -1 || !this._raw.clr) ? (\"white\") : (\"#\" + str_rgba);\r\n\r\n\t\t\tthis.nw = new Sprite(this._raw.nw);\r\n\t\t\t//this.nw._url = path + \"/nw\";\r\n\r\n\t\t\tthis.n = new Sprite(this._raw.n);\r\n\t\t\t//this.n._url = path + \"/n\";\r\n\r\n\t\t\tthis.ne = new Sprite(this._raw.ne);\r\n\t\t\t//this.ne._url = path + \"/ne\";\r\n\r\n\t\t\tthis.w = new Sprite(this._raw.w);\r\n\t\t\t//this.w._url = path + \"/w\";\r\n\r\n\t\t\tthis.c = new Sprite(this._raw.c);\r\n\t\t\t//this.c._url = path + \"/c\";\r\n\r\n\t\t\tthis.e = new Sprite(this._raw.e);\r\n\t\t\t//this.e._url = path + \"/e\";\r\n\r\n\t\t\tthis.sw = new Sprite(this._raw.sw);\r\n\t\t\t//this.sw._url = path + \"/sw\";\r\n\r\n\t\t\tthis.s = new Sprite(this._raw.s);\r\n\t\t\t//this.s._url = path + \"/s\";\r\n\r\n\t\t\tthis.se = new Sprite(this._raw.se);\r\n\t\t\t//this.se._url = path + \"/se\";\r\n\r\n\t\t\tthis.arrow = new Sprite(this._raw.arrow);\r\n\t\t\t//this.arrow._url = path + \"/arrow\";\r\n\r\n\t\t\t//this._pat_c = ctx.createPattern(this.c, \"repeat\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/*\r\n\t1 12345 12345 1 : 5\r\n\t2 12345 12345 12345\r\n\t3 12345 12345 12345\r\n\t4 12345 12345 12345\r\n\t5 12345 12345 12345\r\n\t6 xxx12 34512 34\r\n\t */\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} text - length = chat.value.length + \" : \".length + name.length = 70 + 3 + name.length\r\n\t * @param {number} x - chat balloon arrow bottom pos.x\r\n\t * @param {number} y - chat balloon arrow bottom pos.y\r\n\t */\r\n\tdraw(renderer, text, x, y) {\r\n\t\tlet lines = text.match(/(.{1,12})/g);\r\n\t\tif (!lines.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst LINE_HEIGHT = this.c.height;// = fontSize(12) + PADDING_TOP(2)\r\n\t\tconst PADDING_LEFT = 0, PADDING_TOP = 0, PADDING_RIGHT = 0, PADDING_BOTTOM = 0;\r\n\r\n\t\tctx.fillStyle = this.color;\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"hanging\";//top\r\n\t\t\r\n\t\tconst min_width = this.n.width * 3;\r\n\t\tlet _tw = Math.max.apply(null, lines.map(line => ctx.measureText(line).width + PADDING_LEFT + PADDING_RIGHT));\r\n\t\tif (_tw < min_width) {\r\n\t\t\t_tw = min_width;\r\n\t\t}\r\n\t\tconst hw = Math.trunc((_tw / 2) / this.n.width) * this.n.width;\r\n\t\tconst tw = hw * 2;\r\n\t\tconst th = lines.length * LINE_HEIGHT + PADDING_TOP + PADDING_BOTTOM;\r\n\t\r\n\t\tx = (x - hw);\r\n\t\ty = (y - th) - this.arrow.height;\r\n\r\n\t\t{//top\r\n\t\t\tthis.nw.draw2(x, y);\r\n\t\t\tthis.n._drawPattern(x, y, tw, this.n.height);\r\n\t\t\tthis.ne.draw2(x + tw, y);\r\n\t\t}\r\n\t\t{//center\r\n\t\t\tconst xw = this.w.width - this.w.x;\r\n\r\n\t\t\tthis.w._drawPattern(x + xw, y, this.w.width, th);\r\n\t\t\tthis.c._drawPattern(x + xw, y, tw, th);\r\n\t\t\tthis.e._drawPattern(x + xw + tw, y, this.e.width, th);\r\n\t\t}\r\n\t\t{//bottom\r\n\t\t\tconst r_adj = this.arrow.width & 1;\r\n\t\t\tconst arrow_hw = Math.trunc(this.arrow.width / 2);\r\n\t\t\tconst hw_arrow_hw = hw - arrow_hw;\r\n\t\t\r\n\t\t\tthis.sw.draw2(x, y + th);\r\n\t\t\tthis.s._drawPattern(x, y + th, hw_arrow_hw, this.s.height);//clip\r\n\t\t\tthis.s._drawPattern(x + hw + arrow_hw + r_adj, y + th, hw_arrow_hw - r_adj, this.s.height);//clip\r\n\t\t\tthis.se.draw2(x + tw, y + th);\r\n\r\n\t\t\tthis.arrow.draw2(x - arrow_hw + hw, y + th);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0, cy = y; i < lines.length; ++i, cy += LINE_HEIGHT) {\r\n\t\t\tlet line = lines[i];\r\n\r\n\t\t\t//if (this.constructor.DEBUG) {\r\n\t\t\t//\tctx.beginPath();\r\n\t\t\t//\tctx.strokeStyle = \"red\";\r\n\t\t\t//\tctx.strokeRect(x + PADDING_LEFT, cy + PADDING_TOP, tw, LINE_HEIGHT);\r\n\t\t\t//}\r\n\t\t\t//ctx.fillStyle = \"black\";\r\n\r\n\t\t\tctx.fillText(line, x + hw + PADDING_LEFT, cy + PADDING_TOP);\r\n\t\t}\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn \"/UI/ChatBalloon\";\r\n\t}\r\n\r\n\t//static get DEBUG() {\r\n\t//\treturn false;\r\n\t//}\r\n}\r\n\r\n/** @type {{[style:number]:ChatBalloon}} */\r\nChatBalloon.cache = window.$images_ChatBalloon || {};\r\n\r\nwindow.$images_ChatBalloon = ChatBalloon.cache;\r\n\r\nif (module.hot) {\r\n\tObject.values(ChatBalloon.cache).forEach(a => {\r\n\t\ta.__proto__ = ChatBalloon.prototype;\r\n\t\t//a.load(a.style);\r\n\t});\r\n\tmodule.hot.accept();\r\n}\r\n","\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\n\r\n\r\nexport class PanelRenderer {\r\n\tconstructor() {\r\n\t\tthis._raw = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tasync _load(url) {\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: await $get.data(url),\r\n\t\t});\r\n\t}\r\n\t\r\n\t_load_top() {\r\n\t\tthis.nw = new Sprite(this._raw.nw);\r\n\t\t//this.nw._url = url + \"/nw\";\r\n\r\n\t\tthis.n = new Sprite(this._raw.n);\r\n\t\t//this.n._url = url + \"/n\";\r\n\r\n\t\tthis.ne = new Sprite(this._raw.ne);\r\n\t\t//this.ne._url = url + \"/ne\";\r\n\t}\r\n\t\r\n\t_load_center() {\r\n\t\tthis.w = new Sprite(this._raw.w);\r\n\t\t//this.w._url = url + \"/w\";\r\n\r\n\t\tthis.c = new Sprite(this._raw.c);\r\n\t\t//this.c._url = url + \"/c\";\r\n\r\n\t\tthis.e = new Sprite(this._raw.e);\r\n\t\t//this.e._url = url + \"/e\";\r\n\t}\r\n\t\r\n\t_load_bottom() {\r\n\t\tthis.sw = new Sprite(this._raw.sw);\r\n\t\t//this.sw._url = url + \"/sw\";\r\n\r\n\t\tthis.s = new Sprite(this._raw.s);\r\n\t\t//this.s._url = url + \"/s\";\r\n\r\n\t\tthis.se = new Sprite(this._raw.se);\r\n\t\t//this.se._url = url + \"/se\";\r\n\t}\r\n\t\r\n\t_load_arrow() {\r\n\t\tthis.arrow = new Sprite(this._raw.arrow);\r\n\t\t//this.arrow._url = url + \"/arrow\";\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} defCol\r\n\t */\r\n\t_load_color(defCol) {\r\n\t\tconst argb = Number(\"clr\" in this._raw ? this._raw.clr : defCol);\r\n\t\tconst rgba = (((argb & 0xFF000000) >>> 24) | ((argb & 0x00FFFFFF) << 8)) >>> 0;\r\n\t\tconst str_rgba = rgba.toString(16).padStart(8, \"0\");\r\n\t\tthis.color = (this._raw.clr == -1 || !this._raw.clr) ? (\"white\") : (\"#\" + str_rgba);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_top(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tthis.nw.draw2(cx, bottom);\r\n\t\tthis.n._drawPatterncx(x, bottom, tw, this.n.height);\r\n\t\tthis.ne.draw2(cx + tw, bottom);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_center(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tconst xw = this.w.width - this.w.x;\r\n\r\n\t\tthis.w._drawPattern(cx + xw, bottom, this.w.width, height);\r\n\t\tthis.c._drawPattern(cx + xw, bottom, tw, height);\r\n\t\tthis.e._drawPattern(cx + xw + tw, bottom, this.e.width, height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_bottom(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tthis.sw.draw2(cx, bottom + height);\r\n\t\tthis.s._drawPattern(cx, bottom + height, hwidth, this.s.height);\r\n\t\tthis.se.draw2(cx + tw, bottom + height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_bottom_and_arrow(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tconst r_adj = this.arrow.width & 1;\r\n\t\tconst arrow_hw = Math.trunc(this.arrow.width / 2);\r\n\t\tconst hw_arrow_hw = hwidth - arrow_hw;\r\n\t\r\n\t\tthis.sw.draw2(cx, bottom + height);\r\n\t\tthis.s._drawPattern(cx, bottom + height, hw_arrow_hw, this.s.height);\r\n\t\tthis.s._drawPattern(cx + hwidth + arrow_hw + r_adj, bottom + height, hw_arrow_hw - r_adj, this.s.height);\r\n\t\tthis.se.draw2(cx + tw, bottom + height);\r\n\r\n\t\tthis.arrow.draw2(cx - arrow_hw + hwidth, bottom + height);\r\n\t}\r\n}\r\n","\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\nimport { PanelRenderer } from './PanelRenderer.js';\r\n\r\n\r\nexport class NameLabel extends PanelRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.style = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.color = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.w = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.c = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.e = null;\r\n\t}\r\n\t\r\n\tasync load(style) {\r\n\t\tif (style == null) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tif (NameLabel.cache[style]) {\r\n\t\t\tlet label = NameLabel.cache[style];\r\n\t\t\tObject.assign(this, label);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst path = [this._base_path, style].join(\"/\");\r\n\t\t\t\r\n\t\t\tthis.style = style;\r\n\t\t\t\r\n\t\t\tlet promise = this._load(path);\r\n\t\t\tNameLabel.cache[style] = this;\r\n\t\t\tthis.$promise = promise;\r\n\t\t\t\r\n\t\t\tawait promise;\r\n\t\t\tdelete this.$promise;\r\n\t\t\t\r\n\t\t\tthis._load_center();\r\n\t\t\tthis._load_color(\"white\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} text\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, text, x, y) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\t\r\n\t\tctx.fillStyle = this.color;\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"hanging\";//top\r\n\t\t\r\n\t\tlet height = this.c.height;\r\n\t\tlet width = ctx.measureText(text).width;\r\n\t\twidth = Math.max(this.c.width * 2, width);\r\n\t\t\r\n\t\tconst hw = width / 2;\r\n\t\t\r\n\t\tconst cx = x - hw;\r\n\t\tconst cy = y + Math.min(this.w.y, this.e.y);\r\n\t\t\r\n\t\tthis.w.draw2(cx, cy);\r\n\t\tthis.c._drawPattern(cx, cy, width - this.e.x, height);\r\n\t\tthis.e.draw2(cx + width, cy);\r\n\t\t\r\n\t\tctx.fillText(text, x, cy);\r\n\t}\r\n\t\r\n\tget _base_path() {\r\n\t\treturn \"/UI/NameTag\";\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} NameLabel\r\n\t * @returns {NameLabel}\r\n\t */\r\n\tstatic get(labelStyle) {\r\n\t\tlet label = NameLabel.cache[labelStyle];\r\n\t\tif (!label) {\r\n\t\t\tlabel = new NameLabel();\r\n\t\t\tlabel.load(labelStyle);\r\n\t\t}\r\n\t\treturn label;\r\n\t}\r\n}\r\n\r\n/** @type {{[style:number]:NameLabel}} */\r\nNameLabel.cache = window.$images_NameLabel || {};\r\n\r\nwindow.$images_NameLabel = NameLabel.cache;\r\n\r\nif (module.hot) {\r\n\tObject.values(NameLabel.cache).forEach(a => {\r\n\t\ta.__proto__ = NameLabel.prototype;\r\n\t\t//a.load(a.style);\r\n\t});\r\n\tmodule.hot.accept();\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dialog-group Editor\",on:{\"contextmenu\":function($event){if($event.target !== $event.currentTarget){ return null; }$event.preventDefault();}}},[_c('ui-dialog',{ref:\"menu\",attrs:{\"title\":_vm.wnds.menu.name}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\tMenu\\n\\t\\t\")]),_vm._v(\" \"),[_c('details',{attrs:{\"open\":\"\"}},[_c('summary',[_vm._v(\"bgm\")]),_vm._v(\" \"),_c('div',{ref:\"bgm_outer\"})]),_vm._v(\" \"),_c('details',{attrs:{\"open\":\"\"}},[_c('summary',[_vm._v(\"window\")]),_vm._v(\" \"),_c('p'),_vm._l((_vm.wnds),function(wnd,key){return (!wnd.name.startsWith('$'))?_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(wnd.visable),expression:\"wnd.visable\"}],attrs:{\"type\":\"checkbox\",\"checked\":\"\"},domProps:{\"checked\":Array.isArray(wnd.visable)?_vm._i(wnd.visable,null)>-1:(wnd.visable)},on:{\"click\":function($event){_vm.$refs[key]?_vm.$refs[key].requireOrder($event):undefined},\"change\":function($event){var $$a=wnd.visable,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(wnd, \"visable\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(wnd, \"visable\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(wnd, \"visable\", $$c)}}}}),_vm._v(\" \"+_vm._s(wnd.name)+\"\\n\\t\\t\\t\\t\\t\\t\")])]):_vm._e()}),_vm._v(\" \"),_c('p')],2)],_vm._v(\" \"),[_c('details',[_c('summary',[_vm._v(\"scene\")]),_vm._v(\" \"),_c('p'),_c('div',[_c('label',[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t\\tMap \"),_c('input',{on:{\"keydown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }_vm.gv.scene_map.load($event.target.value.padStart(9, '0'))}}})])]),_vm._v(\" \"),_c('div',[_c('fieldset',[_c('legend',[_vm._v(\"map\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_is_rendering_map),expression:\"gv.m_is_rendering_map\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_is_rendering_map)?_vm._i(_vm.gv.m_is_rendering_map,null)>-1:(_vm.gv.m_is_rendering_map)},on:{\"change\":function($event){var $$a=_vm.gv.m_is_rendering_map,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_is_rendering_map\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_is_rendering_map\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_is_rendering_map\", $$c)}}}}),_vm._v(\"Map\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_back),expression:\"gv.m_display_back\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_back)?_vm._i(_vm.gv.m_display_back,null)>-1:(_vm.gv.m_display_back)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_back,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_back\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_back\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_back\", $$c)}}}}),_vm._v(\"back\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_front),expression:\"gv.m_display_front\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_front)?_vm._i(_vm.gv.m_display_front,null)>-1:(_vm.gv.m_display_front)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_front,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_front\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_front\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_front\", $$c)}}}}),_vm._v(\"front\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_mapobj),expression:\"gv.m_display_mapobj\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_mapobj)?_vm._i(_vm.gv.m_display_mapobj,null)>-1:(_vm.gv.m_display_mapobj)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_mapobj,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_mapobj\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_mapobj\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_mapobj\", $$c)}}}}),_vm._v(\"object\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_maptile),expression:\"gv.m_display_maptile\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_maptile)?_vm._i(_vm.gv.m_display_maptile,null)>-1:(_vm.gv.m_display_maptile)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_maptile,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_maptile\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_maptile\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_maptile\", $$c)}}}}),_vm._v(\"tile\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_portal),expression:\"gv.m_display_portal\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_portal)?_vm._i(_vm.gv.m_display_portal,null)>-1:(_vm.gv.m_display_portal)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_portal,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_portal\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_portal\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_portal\", $$c)}}}}),_vm._v(\"portal\")])]),_vm._v(\" \"),_c('fieldset',[_c('legend',[_vm._v(\"map\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_particle_system),expression:\"gv.m_display_particle_system\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_particle_system)?_vm._i(_vm.gv.m_display_particle_system,null)>-1:(_vm.gv.m_display_particle_system)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_particle_system,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_particle_system\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_particle_system\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_particle_system\", $$c)}}}}),_vm._v(\"particle system\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_skeletal_anim),expression:\"gv.m_display_skeletal_anim\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_skeletal_anim)?_vm._i(_vm.gv.m_display_skeletal_anim,null)>-1:(_vm.gv.m_display_skeletal_anim)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_skeletal_anim,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_skeletal_anim\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_skeletal_anim\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_skeletal_anim\", $$c)}}}}),_vm._v(\"skeletal animation\")])]),_vm._v(\" \"),_c('fieldset',[_c('legend',[_vm._v(\"life\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_life),expression:\"gv.m_display_life\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_life)?_vm._i(_vm.gv.m_display_life,null)>-1:(_vm.gv.m_display_life)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_life,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_life\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_life\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_life\", $$c)}}}}),_vm._v(\"life\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_player),expression:\"gv.m_display_player\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_player)?_vm._i(_vm.gv.m_display_player,null)>-1:(_vm.gv.m_display_player)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_player,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_player\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_player\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_player\", $$c)}}}}),_vm._v(\"player\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_other_player),expression:\"gv.m_display_other_player\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_other_player)?_vm._i(_vm.gv.m_display_other_player,null)>-1:(_vm.gv.m_display_other_player)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_other_player,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_other_player\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_other_player\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_other_player\", $$c)}}}}),_vm._v(\"other player\")])]),_vm._v(\" \"),_c('fieldset',[_c('legend',[_vm._v(\"character\")]),_vm._v(\" \"),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_name_label),expression:\"gv.m_display_name_label\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_name_label)?_vm._i(_vm.gv.m_display_name_label,null)>-1:(_vm.gv.m_display_name_label)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_name_label,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_name_label\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_name_label\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_name_label\", $$c)}}}}),_vm._v(\"顯示名牌\")])]),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"名牌\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.NameLabel_default_style),expression:\"gv.NameLabel_default_style\"}],attrs:{\"type\":\"number\",\"min\":\"0\"},domProps:{\"value\":(_vm.gv.NameLabel_default_style)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.gv, \"NameLabel_default_style\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"聊天\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.gv.ChatBalloon_default_style),expression:\"gv.ChatBalloon_default_style\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\"},domProps:{\"value\":(_vm.gv.ChatBalloon_default_style)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.gv, \"ChatBalloon_default_style\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])]),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"聊天顯示時間\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.gv.ChatBalloon_display_duration),expression:\"gv.ChatBalloon_display_duration\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\"},domProps:{\"value\":(_vm.gv.ChatBalloon_display_duration)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.gv, \"ChatBalloon_display_duration\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\"毫秒\")])])])]),_vm._v(\" \"),_c('p')]),_vm._v(\" \"),_c('details',[_c('summary',[_vm._v(\"editor\")]),_vm._v(\" \"),_c('p',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_foothold),expression:\"gv.m_display_foothold\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_foothold)?_vm._i(_vm.gv.m_display_foothold,null)>-1:(_vm.gv.m_display_foothold)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_foothold,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_foothold\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_foothold\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_foothold\", $$c)}}}}),_vm._v(\" foothold\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_selected_object),expression:\"gv.m_display_selected_object\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_selected_object)?_vm._i(_vm.gv.m_display_selected_object,null)>-1:(_vm.gv.m_display_selected_object)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_selected_object,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_selected_object\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_selected_object\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_selected_object\", $$c)}}}}),_vm._v(\" selected object\")])])]),_vm._v(\" \"),_c('details',[_c('summary',[_vm._v(\"debug\")]),_vm._v(\" \"),_c('p'),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_debug_info),expression:\"gv.m_display_debug_info\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_debug_info)?_vm._i(_vm.gv.m_display_debug_info,null)>-1:(_vm.gv.m_display_debug_info)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_debug_info,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_debug_info\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_debug_info\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_debug_info\", $$c)}}}}),_vm._v(\" debug info\")])]),_vm._v(\" \"),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_physics_debug),expression:\"gv.m_display_physics_debug\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_physics_debug)?_vm._i(_vm.gv.m_display_physics_debug,null)>-1:(_vm.gv.m_display_physics_debug)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_physics_debug,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_physics_debug\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_physics_debug\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_physics_debug\", $$c)}}}}),_vm._v(\" physics debug\")])]),_vm._v(\" \"),_vm._l((_vm.gv.m_debugDraw.flagNames),function(flagName){return _c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.gv.m_debugDraw[flagName]),expression:\"gv.m_debugDraw[flagName]\",modifiers:{\"number\":true}}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_debugDraw[flagName])?_vm._i(_vm.gv.m_debugDraw[flagName],null)>-1:(_vm.gv.m_debugDraw[flagName])},on:{\"change\":function($event){var $$a=_vm.gv.m_debugDraw[flagName],$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=_vm._n(null),$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv.m_debugDraw, flagName, $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv.m_debugDraw, flagName, $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv.m_debugDraw, flagName, $$c)}}}}),_vm._v(\" \"+_vm._s(flagName.slice(5)))])])}),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"axis length \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_debugDraw.axis_length),expression:\"gv.m_debugDraw.axis_length\"}],attrs:{\"type\":\"number\",\"step\":\"0.1\"},domProps:{\"value\":(_vm.gv.m_debugDraw.axis_length)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.gv.m_debugDraw, \"axis_length\", $event.target.value)}}})])]),_vm._v(\" \"),_c('p')],2)]],2),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.character_list.visable),expression:\"wnds.character_list.visable\"}],ref:\"character_list\",attrs:{\"title\":_vm.wnds.character_list.name}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\t\\tCharacters\\n\\t\\t\\t\\t\"),(_vm.progressMaximum)?[_vm._v(\"\\n\\t\\t\\t\\t\\t[loading: \"+_vm._s(_vm.progressValue)+\" / \"+_vm._s(_vm.progressMaximum)+\"]\\n\\t\\t\\t\\t\")]:_vm._e()],2),_vm._v(\" \"),_c('template',{slot:\"content\"},[_c('div',{style:({filter: 'blur(' + (_vm.progressMaximum?3:0) + 'px)'})},[_c('div',[_c('span',[_vm._v(_vm._s(_vm.charaList.length)+\" characters\")]),_vm._v(\" \"),_c('div',{staticClass:\"chara-ls-btn-group\"},[_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Add new\"},on:{\"click\":_vm.addNewChara}},[_c('img',{attrs:{\"src\":\"images/toolstrip_character.png\",\"alt\":\"Add new\"}})]),_vm._v(\" \"),_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Add clone\"},on:{\"click\":_vm.addCloneChara}},[_c('img',{attrs:{\"src\":\"images/toolstrip_duplicate.png\",\"alt\":\"Add clone\"}})]),_vm._v(\" \"),_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Load\"},on:{\"click\":_vm.loadCharacters}},[_c('span',{staticClass:\"ui-icon ui-icon-folder-open\",attrs:{\"alt\":\"📂\"}})]),_vm._v(\" \"),_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Save all\"},on:{\"click\":_vm.saveCharacters}},[_c('img',{attrs:{\"src\":\"images/toolstrip_save_all.png\",\"alt\":\"Save all\"}})])])]),_vm._v(\" \"),_c('ui-sortable',{staticClass:\"ui-character-list\",attrs:{\"items\":_vm.charaList},on:{\"input\":_vm.oninput_sort},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar item = ref.item;\nvar index = ref.index;\nreturn [_c('li',{key:item.id,class:[(_vm.selected == item.id ? 'active':''), item.id].join(' '),staticStyle:{\"width\":\"100%\"},attrs:{\"id\":item.id,\"title\":item.id},on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.selectChara(item.id)}}},[_c('table',{staticStyle:{\"width\":\"100%\"}},[_c('tr',{on:{\"contextmenu\":function($event){$event.preventDefault();_vm.openCharacterDLMenu($event, item.id);}}},[_c('td',[_vm._v(_vm._s(index))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(item.id))]),_vm._v(\" \"),_c('td',{staticStyle:{\"position\":\"relative\"}},[_c('ui-character',{attrs:{\"chara\":item.renderer}})],1)])])])]}}])})],1),_vm._v(\" \"),(_vm.progressMaximum)?_c('div',{staticClass:\"loading\"},[_c('div',[_c('progress',{attrs:{\"max\":_vm.progressMaximum},domProps:{\"value\":_vm.progressValue}}),_vm._v(\" \"),_c('div',[_vm._v(\"loading [\"+_vm._s(_vm.progressValue)+\" / \"+_vm._s(_vm.progressMaximum)+\"]\")])])]):_vm._e()])],2)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.character_attribute.visable),expression:\"wnds.character_attribute.visable\"}],ref:\"character_attribute\",attrs:{\"title\":_vm.wnds.character_attribute.name}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\t\\tCharacter attribute\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('template',{slot:\"content\"},[(_vm.chara!=null)?_c('div',[_c('ui-character-attribute',{attrs:{\"sceneChara\":_vm.chara}})],1):_vm._e()])],2)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.spawnpoint.visable),expression:\"wnds.spawnpoint.visable\"}],ref:\"spawnpoint\",attrs:{\"title\":_vm.wnds.spawnpoint.name}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\t\\tSpawn point\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('template',{slot:\"content\"},[_c('ui-mob-list',{on:{\"resize\":function($event){_vm.$refs.spawnpoint.reset_content_style()}}})],1)],2)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.equip_box.visable),expression:\"wnds.equip_box.visable\"}],ref:\"equip_box\",attrs:{\"title\":_vm.wnds.equip_box.name}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\t\\tEquip box\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('template',{slot:\"content\"},[_c('ui-equip-box',{on:{\"clickItem\":_vm.clickItem,\"hoverItem\":_vm.hoverItem,\"mouseleaveItem\":_vm.mouseleaveItem,\"faceColor\":_vm.faceColor,\"hairColor\":_vm.hairColor,\"hairColor2\":_vm.hairColor2,\"hairMix2\":_vm.hairMix2}})],1)],2)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.mapEditorMode.startsWith('layered'))?[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.debug_window.visable),expression:\"wnds.debug_window.visable\"}],ref:\"debug_window\",attrs:{\"title\":_vm.wnds.debug_window.name}},[_c('template',{slot:\"header\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mapEditorMode),expression:\"mapEditorMode\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.mapEditorMode=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"background\"}},[_vm._v(\"background\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"frontground\"}},[_vm._v(\"frontground\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredObject\"}},[_vm._v(\"layered object\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredTile\"}},[_vm._v(\"layered tile\")])]),_vm._v(\"\\n\\t\\t\\t\\t\\tmode \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.displayMode),expression:\"displayMode\"}],staticStyle:{\"width\":\"1.8em\"},attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"2\"},domProps:{\"value\":(_vm.displayMode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.displayMode=$event.target.value}}}),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){_vm.dirty++}}},[_vm._v(_vm._s(_vm.dirty))])]),_vm._v(\" \"),_c('template',{slot:\"content\"},[(_vm.scene_map() && _vm.scene_map()[_vm.mapEditorMode].length)?_c('div',{style:(_vm.wnd_debug_style)},[_c('div',{staticStyle:{\"background\":\"white\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.wnd_debug_style.background),expression:\"wnd_debug_style.background\"}],attrs:{\"type\":\"color\",\"title\":\"window background color\"},domProps:{\"value\":(_vm.wnd_debug_style.background)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.wnd_debug_style, \"background\", $event.target.value)}}}),_vm._v(\" \"),_c('label',[_vm._v(\"layer \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedLayer),expression:\"selectedLayer\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedLayer=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.scene_map()[_vm.mapEditorMode].length),function(layer){return _c('option',[_vm._v(_vm._s(layer - 1))])}))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.scene_map()[_vm.mapEditorMode][_vm.selectedLayer].length)+\" objs\")])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('ui-map-editor',{attrs:{\"objs\":_vm.scene_map()[_vm.mapEditorMode][_vm.selectedLayer],\"displayMode\":_vm.displayMode}})],1):_vm._e()])],2)]:[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.debug_window.visable),expression:\"wnds.debug_window.visable\"}],attrs:{\"title\":_vm.wnds.debug_window.name}},[_c('template',{slot:\"header\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mapEditorMode),expression:\"mapEditorMode\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.mapEditorMode=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"background\"}},[_vm._v(\"background\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"frontground\"}},[_vm._v(\"frontground\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredObject\"}},[_vm._v(\"layered object\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredTile\"}},[_vm._v(\"layered tile\")])]),_vm._v(\"\\n\\t\\t\\t\\t\\ttex info \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.displayMode),expression:\"displayMode\"}],staticStyle:{\"width\":\"1.8em\"},attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"2\"},domProps:{\"value\":(_vm.displayMode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.displayMode=$event.target.value}}}),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){_vm.dirty--}}},[_vm._v(_vm._s(_vm.dirty))])]),_vm._v(\" \"),_c('template',{slot:\"content\"},[(_vm.scene_map() && _vm.scene_map()[_vm.mapEditorMode].length)?_c('div',{style:(_vm.wnd_debug_style)},[_c('div',{staticStyle:{\"background\":\"white\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.wnd_debug_style.background),expression:\"wnd_debug_style.background\"}],attrs:{\"type\":\"color\"},domProps:{\"value\":(_vm.wnd_debug_style.background)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.wnd_debug_style, \"background\", $event.target.value)}}})]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('ui-map-editor',{attrs:{\"objs\":_vm.scene_map()[_vm.mapEditorMode],\"displayMode\":_vm.displayMode}})],1):_vm._e()])],2)]],2),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-menu',{ref:\"chara_dl_menu\",staticStyle:{\"position\":\"absolute\",\"width\":\"8em\",\"z-index\":\"99999\"},attrs:{\"show\":_vm.is_show_chara_dl_menu},on:{\"close\":_vm.closeCharacterDLMenu}},[(_vm.chara)?[_c('a',{on:{\"click\":_vm._save_as_png}},[_vm._v(\"Save as PNG\")]),_vm._v(\" \"),_c('a',{on:{\"click\":function($event){_vm.chara.renderer._save_as_svg()}}},[_vm._v(\"Save as SVG\")]),_vm._v(\" \"),(_vm.progressMaximum == 0 || _vm.progressValue >= _vm.progressMaximum)?[_c('a',{attrs:{\"href\":_vm.chara.renderer._outlink()}},[_vm._v(\"Outlink\")])]:[_c('div',{attrs:{\"title\":\"loading...\"}},[_vm._v(\"Outlink\")])],_vm._v(\" \"),_c('a',{on:{\"click\":_vm.copyCharaCode}},[_vm._v(\"Copy code\")])]:[_c('a',{staticClass:\"disable\"},[_vm._v(\"Save as SVG\")]),_vm._v(\" \"),_c('a',{staticClass:\"disable\",attrs:{\"href\":\"javascript:void(0)\"}},[_vm._v(\"Outlink\")]),_vm._v(\" \"),_c('a',{staticClass:\"disable\"},[_vm._v(\"Copy code\")])]],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<ul>\r\n\t\t<slot v-for=\"(item, index) in items\" :item=\"item\" :index=\"index\"></slot>\r\n\t</ul>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: ['items'],\r\n\t\t//render: function (createElement) {\r\n\t\t//\tlet es = [];\r\n\t\t//\tlet render = this.render;\r\n\t\t//\tif (render && this.order) {\r\n\t\t//\t\tfor (let i = 0; i < this.order.length; ++i) {\r\n\t\t//\t\t\tthis.i = i;\r\n\t\t//\t\t\tes.push(render.apply(this, arguments));\r\n\t\t//\t\t}\r\n\t\t//\t}\r\n\t\t//\treturn createElement(\"ul\", es);\r\n\t\t//},\r\n\t\tmethods: {\r\n\t\t\tgetValue: function () {\r\n\t\t\t\tlet order = $(this.$el).sortable(\"toArray\");\r\n\t\t\t\tif (order.length != this.items.length) {\r\n\t\t\t\t\tthrow new Error(\"Can't get value before update.\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet item_map = {};\r\n\t\t\t\tfor (let i = 0; i < this.items.length; ++i) {\r\n\t\t\t\t\tconst item = this.items[i];\r\n\t\t\t\t\titem_map[item.id] = item;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet new_list = [];\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < order.length; ++i) {\r\n\t\t\t\t\tnew_list[i] = item_map[order[i]];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.$emit('update:items', new_list);\t//output value by async\r\n\t\t\t\tthis.$emit('input', new_list);\t\t\t//output value by event\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tlet that = this;\r\n\t\t\tlet $$el = $(this.$el);\r\n\t\t\t$$el.sortable({\r\n\t\t\t\tupdate: this.getValue.bind(this)\r\n\t\t\t});\r\n\t\t\t$$el.disableSelection();\r\n\t\t},\r\n\t\tbeforeUpdate: function () {\r\n\t\t\tthis.$nextTick(function () {//replace item from vue-component(<slot>) to jquery-ui-component($(this.$el))\r\n\t\t\t\tif (!this.items) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet $$el = $(this.$el);\r\n\t\t\t\tlet el = [];\r\n\t\t\t\tfor (let i = 0; i < this.items.length; ++i) {\r\n\t\t\t\t\tconst item = this.items[i];\r\n\t\t\t\t\tconst id = item.id;\r\n\t\t\t\t\tlet em = el[i] = $(\"#\" + id);\r\n\t\t\t\t\tem.remove();\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < el.length; ++i) {\r\n\t\t\t\t\t$$el.append(el);\r\n\t\t\t\t}\r\n\t\t\t\t$$el.sortable();\r\n\t\t\t});\r\n\t\t},\r\n\t\tupdated: function () {\r\n\t\t\t$(this.$el).sortable();//make sortable\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\titems: function (newValue) {\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-sortable.vue?vue&type=template&id=69ac1a89&\"\nimport script from \"./ui-sortable.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-sortable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-sortable.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ui-sortable.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_vm._l((_vm.items),function(item,index){return _vm._t(\"default\",null,{item:item,index:index})})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div :class=\"active ? 'active':''\"><slot></slot></div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tactive: false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\tdiv {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t.active {\r\n\t\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\r\n\t\tbackground-color: #ffec64;\r\n\t}\r\n</style>\r\n\r\n","import { render, staticRenderFns } from \"./ui-trigger.vue?vue&type=template&id=550d0e17&scoped=true&\"\nimport script from \"./ui-trigger.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-trigger.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"550d0e17\",\n  null\n  \n)\n\ncomponent.options.__file = \"ui-trigger.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.active ? 'active':''},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","﻿\r\nfunction default_position() {\r\n\treturn {\r\n\t\tx: 0,\t// my props\r\n\t\ty: 0,\t// my props\r\n\t\tmy: \"left top\",\t// my =\t`${h}+${x} ${v}+${y}`\r\n\t\tat: \"left top\",\r\n\t\t//of: selector,\r\n\t\tcollision: \"flip\",\r\n\t\t//using: null,\r\n\t\t//within: window,\r\n\t};\r\n}\r\n\r\nexport default {\r\n\tprops: {\r\n\t\tposition: {\r\n\t\t\tdefault: function () {\r\n\t\t\t\treturn default_position();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tcalcPosition: function (rel) {\r\n\t\t\tlet pos = Object.assign(default_position(), this.position);\r\n\t\t\tlet mypos;\r\n\r\n\t\t\tmypos = pos.my.replace(/[+-\\d]/g, \"\").split(\" \");\r\n\r\n\t\t\tif (mypos.length >= 2) {\r\n\t\t\t\tlet x = rel.x || pos.x;\r\n\t\t\t\tlet y = rel.y || pos.y;\r\n\r\n\t\t\t\tif (x > 0) {\r\n\t\t\t\t\tmypos[0] += \"+\" + x || \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (x < 0) {\r\n\t\t\t\t\tmypos[0] += x || \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (y > 0) {\r\n\t\t\t\t\tmypos[1] += \"+\" + y || \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < 0) {\r\n\t\t\t\t\tmypos[1] += y || \"\";\r\n\t\t\t\t}\r\n\t\t\t\tmypos = mypos.join(\" \");\r\n\t\t\t}\r\n\t\t\tpos.my = mypos;\r\n\r\n\t\t\t//if (!pos.of) {\r\n\t\t\t//\tpos.of = $(this.$el.parentElement);\r\n\t\t\t//}\r\n\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\tsetPosition: function (val) {\r\n\t\t\t$(this.$el).position(val);\r\n\t\t},\r\n\t},\r\n\twatch: {\r\n\t\t\"position\": {\r\n\t\t\thandler: function (val) {\r\n\t\t\t\tlet pos = this.calcPosition(val);\r\n\t\t\t\tif (!pos.of) {\r\n\t\t\t\t\tthis.setPosition(pos);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\talert(\"JQueryUI.position(option)\\nlost option.of:selector\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeep: true,\r\n\t\t},\r\n\t},\r\n};\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div class=\"menu-frame\"><!--outer element keep jquery-ui position-->\r\n\t\t<transition name=\"menu\">\r\n\t\t\t<div v-if=\"show\" class=\"menu\">\r\n\t\t\t\t<slot></slot>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport CorePosition from \"./CorePosition.js\"\r\n\t//function animation_show() {\r\n\t//\treturn {\r\n\t//\t\teffect: \"fade\",\r\n\t//\t\teasing: \"swing\",\r\n\t//\t\tduration: 400,\r\n\t//\t\t//complete: function () { },\r\n\t//\t\t//queue: function () { },\r\n\t//\t};\r\n\t//}\r\n\t//let CoreShow = {\r\n\t//\tprops: {\r\n\t//\t\tshow: {\r\n\t//\t\t\tdefault: true\r\n\t//\t\t},\r\n\t//\t\t\"opt-show\": {\r\n\t//\t\t\tdefault: function () {\r\n\t//\t\t\t\treturn animation_show();\r\n\t//\t\t\t}\r\n\t//\t\t},\r\n\t//\t\t\"opt-hide\": {\r\n\t//\t\t\tdefault: function () {\r\n\t//\t\t\t\treturn animation_show();\r\n\t//\t\t\t}\r\n\t//\t\t},\r\n\t//\t},\r\n\t//\twatch: {\r\n\t//\t\t\"show\": function (val) {\r\n\t//\t\t\tif (val) {\r\n\t//\t\t\t\t$(this.$el).show(this.optShow);\r\n\t//\t\t\t}\r\n\t//\t\t\telse {\r\n\t//\t\t\t\t$(this.$el).hide(this.optHide);\r\n\t//\t\t\t}\r\n\t//\t\t},\r\n\t//\t},\r\n\t//};\r\n\r\n\texport default {\r\n\t\tmixins: [CorePosition],\r\n\t\tprops: {\r\n\t\t\tshow: true\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\t_cp_onclick: null\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t\"show\": function (val) {\r\n\t\t\t\tif (val) {\r\n\t\t\t\t\tif (!this._cp_onclick) {\r\n\t\t\t\t\t\tthis._cp_onclick = (function () {\r\n\t\t\t\t\t\t\tthis.$emit(\"close\");\r\n\t\t\t\t\t\t}).bind(this);\r\n\t\t\t\t\t\t$(window).on(\"mousedown\", this._cp_onclick);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t$(window).off(\"mousedown\", this._cp_onclick);\r\n\t\t\t\t\tthis._cp_onclick = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\t//mounted: function () {\r\n\t\t//}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.menu-frame {\r\n\t\tuser-select: none;\r\n\t\tposition: absolute;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.menu {\r\n\t\tlist-style: none;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0em 0em;\r\n\t\tbackground: #f0f9ff;\r\n\t\tborder: 1px solid darkgray;\r\n\t\tbox-shadow: 0.2em 0.2em 0.2em darkgray;\r\n\t}\r\n\t.menu > *:not(hr) {\r\n\t\tdisplay: block;\r\n\t\tpadding: 0.25em 1em 0.25em 1em;\r\n\t\tbackground: #f0f9ff;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.menu > *.disable {\r\n\t\tcursor: not-allowed;\r\n\t\tcolor: darkgray;\r\n\t}\r\n\t.menu > *:not(.disable):not(hr):hover {\r\n\t\tbackground: linear-gradient(to bottom, #4096ee 0%,#4096ee 100%);\r\n\t\tbox-shadow: inset 0 0 1px #1e69de;\r\n\t}\r\n\t.menu > *:not(.disable):not(hr):active {\r\n\t\tbackground: linear-gradient(to bottom, #6db3f2 0%,#54a3ee 50%,#3690f0 51%,#1e69de 100%);\r\n\t\tbox-shadow: inset 0 0 1px #1e69de;\r\n\t}\r\n\t.menu > hr {\r\n\t\tmargin: 0.2em 0;\r\n\t}\r\n\r\n\t.menu-enter-active {\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\twhite-space: nowrap;\r\n\t\twidth: 100%;\r\n\t\theight: 5em;\r\n\t\ttransition: .3s;\r\n\t}\r\n\t.menu-enter {\r\n\t\topacity: 0;\r\n\t\theight: 0;\r\n\t\twidth: 0;\r\n\t}\r\n\t.menu-leave-active {\r\n\t\ttransition: .4s;\r\n\t}\r\n\t.menu-leave-to {\r\n\t\topacity: 0;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-menu.vue?vue&type=template&id=682e3945&\"\nimport script from \"./ui-menu.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-menu.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-menu.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ui-menu.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"menu-frame\"},[_c('transition',{attrs:{\"name\":\"menu\"}},[(_vm.show)?_c('div',{staticClass:\"menu\"},[_vm._t(\"default\")],2):_vm._e()])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div class=\"ui-button-group\">\r\n\t\t<button v-for=\"(item, index) in buttons\" :data-id=\"index\" @click=\"onclick(index)\" :style=\"item.style\">\r\n\t\t\t<slot :text=\"item.text\" :value=\"item.value\" :index=\"index\"></slot>\r\n\t\t</button>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tbuttons: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'checkbox'\r\n\t\t\t},\r\n\t\t\tactive: {\r\n\t\t\t\ttype: [Number, Array],\r\n\t\t\t\trequired: false\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tonclick: function (id) {\r\n\t\t\t\tlet selected;\r\n\r\n\t\t\t\tif (this.type == 'checkbox') {\r\n\t\t\t\t\tconst index = this.active.indexOf(id);\r\n\t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\tselected = [...this.active];\r\n\t\t\t\t\t\tselected.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tselected = [...this.active, id];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst buttons = this.buttons;\r\n\t\t\t\t\tlet btns = selected.map(function (id) {\r\n\t\t\t\t\t\treturn buttons[id];\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.$emit('update:active', selected);\r\n\t\t\t\t\tthis.$emit('change', btns);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.$emit('update:active', id);\r\n\t\t\t\t\tthis.$emit('change', this.buttons[id]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_update_element: function () {\r\n\t\t\t\tlet actives;\r\n\t\t\t\tif (this.type == 'checkbox') {\r\n\t\t\t\t\tif (!this.active) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactives = this.active;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!Number.isInteger(this.active)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactives = [this.active];\r\n\t\t\t\t}\r\n\t\t\t\tlet $el = this.$el;\r\n\r\n\t\t\t\tlet $all_active = [...this.$el.querySelectorAll(\".active\")];\r\n\t\t\t\tlet selected = $all_active.forEach(function (elem) {\r\n\t\t\t\t\telem.classList.remove(\"active\");\r\n\t\t\t\t});\r\n\r\n\t\t\t\tactives.forEach(function (id) {\r\n\t\t\t\t\tlet elem = $el.querySelector(`[data-id=\"${id}\"]`);\r\n\t\t\t\t\tif (elem) {\r\n\t\t\t\t\t\telem.classList.toggle(\"active\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tactive: function () {\r\n\t\t\t\tthis._update_element();\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis._update_element();\r\n\t\t},\r\n\t};\r\n\t//<slot v-for=\"(value, key) in buttons\" :value=\"value\" :key=\"key\"></slot>\r\n</script>\r\n\r\n<style>\r\n\t.ui-button-group input[type=\"radio\"] {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.ui-button-group {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.ui-button-group button {\r\n\t\tflex: 1;\r\n\t\tpadding: 0;\r\n\t\toutline: none;\r\n\t}\r\n\t/*.ui-button-group button > * {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}*/\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-button-group.vue?vue&type=template&id=44abfdf6&\"\nimport script from \"./ui-button-group.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-button-group.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-button-group.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ui-button-group.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ui-button-group\"},_vm._l((_vm.buttons),function(item,index){return _c('button',{style:(item.style),attrs:{\"data-id\":index},on:{\"click\":function($event){_vm.onclick(index)}}},[_vm._t(\"default\",null,{text:item.text,value:item.value,index:index})],2)}))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<div class=\"ui-equip-box\">\r\n\t\t<div ref=\"content\" class=\"ui-equip-box-content\">\r\n\t\t\t<!-- begin header -->\r\n\t\t\t<div class=\"header\" style=\"width: 100%;\">\r\n\t\t\t\t<div style=\"width: 100%;\">\r\n\t\t\t\t\t<!-- begin filter -->\r\n\t\t\t\t\t<div style=\"display: inline-flex; width: 100%;\">\r\n\t\t\t\t\t\t<select v-model=\"selected_category\" style=\"flex: 1;\">\r\n\t\t\t\t\t\t\t<template v-for=\"(og,key) in categoryGroupList\">\r\n\t\t\t\t\t\t\t\t<template v-if=\"og.length>1\">\r\n\t\t\t\t\t\t\t\t\t<optgroup :label=\"key\">\r\n\t\t\t\t\t\t\t\t\t\t<option v-for=\"cat in og\" :value=\"cat.id_prefix\">{{cat.categoryName}}</option>\r\n\t\t\t\t\t\t\t\t\t</optgroup>\r\n\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t\t\t<option :value=\"og[0].id_prefix\">{{og[0].categoryName}}</option>\r\n\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<input ref=\"input_search\" type=\"search\" v-model=\"search_text\" @keydown.enter=\"searchNextText\" list=\"search_param\" placeholder=\"<search by name or id>\" style=\"flex: 3;\" />\r\n\t\t\t\t\t\t<datalist id=\"search_param\">\r\n\t\t\t\t\t\t\t<option value=\"劍\">item Name</option>\r\n\t\t\t\t\t\t\t<option value=\"01302000\">item ID</option>\r\n\t\t\t\t\t\t\t<option value=\"<attr>:/<regexp>/\"></option>\r\n\t\t\t\t\t\t\t<option value=\"$style:/21158/\">face | hair</option>\r\n\t\t\t\t\t\t\t<option value=\"$foreign:/true/\">external resource</option>\r\n\t\t\t\t\t\t\t<option :value=\"'__v:/'+DATA_TAG_VERSION+'/'\">current version</option>\r\n\t\t\t\t\t\t</datalist>\r\n\t\t\t\t\t\t<div style=\"position: relative; display: inline-block;\">\r\n\t\t\t\t\t\t\t<button @click=\"isShowSetting=!isShowSetting\" title=\"setting\" style=\"padding: 0;\">\r\n\t\t\t\t\t\t\t\t<span v-if=\"!isShowSetting\" style=\"color: black;\">⚙️</span>\r\n\t\t\t\t\t\t\t\t<span v-else style=\"color: red;\">⚙️</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- end filter -->\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!-- begin setting -->\r\n\t\t\t\t\t<div v-if=\"isShowSetting\">\r\n\t\t\t\t\t\t<div><label>每頁顯示數量 <input type=\"number\" v-model.number=\"countOfItemsPerPage\" min=\"10\" max=\"1000\" /></label></div>\r\n\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"onlyShowSearchResult\" />只顯示搜尋結果</label></div>\r\n\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"displayMode\" />顯示方式: {{displayMode ? \"圖示\":\"清單\"}}</label></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- end setting -->\r\n\r\n\t\t\t\t\t<!-- begin color -->\r\n\t\t\t\t\t<div class=\"button-area\" style=\"background: lightgray;\">\r\n\t\t\t\t\t\t<ui-button-group type=\"checkbox\" :buttons=\"filter_buttons\" :active.sync=\"filters\" class=\"filters\">\r\n\t\t\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t\t\t<img :src=\"`images/toolstrip_${value}.png`\" :alt=\"text\" />\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</ui-button-group>\r\n\r\n\t\t\t\t\t\t<ui-button-group v-if=\"_is_category_face()\" type=\"radio\" :buttons=\"face_color_buttons\" :active.sync=\"face_color\" class=\"face_color\">\r\n\t\t\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t\t\t<span :value=\"value\" :title=\"`${value}. ${text}色臉型`\" :style=\"{background: '#'+value}\">{{text}}</span>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</ui-button-group>\r\n\r\n\t\t\t\t\t\t<template v-if=\"_is_category_hair()\">\r\n\t\t\t\t\t\t\t<ui-button-group type=\"radio\" :buttons=\"hair_color_buttons\" :active.sync=\"hair_color\" class=\"hair_color\">\r\n\t\t\t\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t\t\t\t<span :value=\"value\" :title=\"`${value}. ${text}色髮型 (${value})`\" :style=\"{background: '#'+value}\">{{text}}</span>\r\n\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t</ui-button-group>\r\n\t\t\t\t\t\t\t<table class=\"hair_color\" style=\"font-family: monospace; text-shadow: 0 0 5px white; border-spacing: 1px;\">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td :style=\"getHairMixColor1CSS()\"><span class=\"mix-color\">{{String(100-hair_mix2)}}%</span></td>\r\n\t\t\t\t\t\t\t\t\t<td style=\"width: 100%;\"><input type=\"range\" min=\"0\" max=\"100\" step=\"1\" v-model.number=\"hair_mix2\" style=\"width: 100%;\" /></td>\r\n\t\t\t\t\t\t\t\t\t<td :style=\"getHairMixColor2CSS()\"><span class=\"mix-color\">{{String(hair_mix2)}}%</span></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t<ui-button-group type=\"radio\" :buttons=\"hair_color_buttons\" :active.sync=\"hair_color2\" class=\"hair_color\">\r\n\t\t\t\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t\t\t\t<span :value=\"value\" :title=\"`${value}. ${text}色髮型 (${value})`\" :style=\"{background: '#'+value}\">{{text}}</span>\r\n\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t</ui-button-group>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- end color -->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<!-- end header -->\r\n\r\n\t\t\t<!-- begin pagination -->\r\n\t\t\t<div v-if=\"__count_of_item_in_page > 0\" style=\"display: table-row;\">\r\n\t\t\t\t<div class=\"m-pagination\">\r\n\t\t\t\t\t<div v-for=\"i in __count_of_page\" class=\"m-pagination-item\">\r\n\t\t\t\t\t\t<a v-if=\"page == (i-1)\" :title=\"i - 1\" class=\"active\">{{i}}</a>\r\n\t\t\t\t\t\t<a v-else @click.prevent=\"change_page(i - 1)\" :title=\"i - 1\" href=\"#\">{{i}}</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<!-- end pagination -->\r\n\r\n\t\t\t<div v-if=\"__count_of_item_in_page > 0\" class=\"item-list-page\">\r\n\t\t\t\t<template v-if=\"displayMode==false\">\r\n\t\t\t\t\t<ul class=\"item-list\">\r\n\t\t\t\t\t\t<template v-for=\"i in __count_of_item_in_page\">\r\n\t\t\t\t\t\t\t<li :key=\"__get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t:id=\"'item' + __get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t@click.left=\"clickItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t@mousemove=\"hoverItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t@mouseleave=\"mouseleaveItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\tclass=\"list-item\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<table @contextmenu.prevent class=\"item-detail\">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan=\"2\" class=\"item-icon-outer-frame\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div @mousedown.right=\"copyImageUrl($event, __get_item_id(i - 1))\" class=\"item-icon-frame\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img :src=\"__get_item_icon_url(i - 1)\" @error=\"__face_or_hair_img_onerror(i - 1)\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td @mousedown.right=\"copyInnerText($event)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"item-name\" :style=\"__get_item(i - 1).$foreign?'color: red':''\">{{__get_item_name(i - 1)}}</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td @mousedown.right=\"copyInnerText($event)\" class=\"item-id\">{{__get_item_id(i - 1)}}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t<div class=\"item-list-sm\">\r\n\t\t\t\t\t\t<template v-for=\"i in __count_of_item_in_page\">\r\n\t\t\t\t\t\t\t<div @contextmenu.prevent :key=\"__get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t :id=\"'item' + __get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t @click.left=\"clickItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t @mousemove=\"hoverItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t @mouseleave=\"mouseleaveItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t class=\"list-item-sm\"\r\n\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t<table class=\"item-detail\">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td class=\"item-icon-outer-frame\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div @mousedown.right=\"copyText($event, __get_item_name(i - 1))\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t @mousedown.middle.prevent=\"copyText($event, __get_item_id(i - 1))\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t class=\"item-icon-frame-sm\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img :src=\"__get_item_icon_url(i - 1)\" @error=\"__face_or_hair_img_onerror(i - 1)\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t\t<div v-else>\r\n\t\t\t\t<div v-pre style=\"cursor: default;\">\r\n\t\t\t\t\tNo search item\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport UIButtonGroup from '../components/ui-button-group.vue';\r\n\r\n\timport { ItemCategoryInfo, ResourceManager, ItemAttrNormalize, CharacterRenderConfig } from '../../public/javascripts/resource.js';\r\n\r\n\tfunction emSize(socpe) {\r\n\t\tlet scopeTest = document.createElement(\"div\");\r\n\t\tscopeTest.style.position = \"fixed\";\r\n\t\tscopeTest.style.left = \"0\";\r\n\t\tscopeTest.style.top = \"0\";\r\n\t\tscopeTest.style.height = \"1em\";\r\n\t\tscopeTest.style.width = \"1em\";\r\n\t\tsocpe.appendChild(scopeTest);\r\n\t\tlet scopeVal = scopeTest.clientHeight;\r\n\t\tdocument.body.remove(scopeTest);\r\n\t\treturn scopeVal;\r\n\t};\r\n\r\n\tlet filter_buttons = [\r\n\t\t{ text: \"Cash\", value: \"cash\", style: {} },\r\n\t\t{ text: \"Standard\", value: \"standard\", style: {} },\r\n\t\t{ text: \"Female\", value: \"female\", style: {} },\r\n\t\t{ text: \"Male\", value: \"male\", style: {} },\r\n\t\t{ text: \"Universal\", value: \"neutral\", style: {} },\r\n\t\t{ text: \"Unlimited\", value: \"unlimited\", style: {} },\r\n\t\t{ text: \"Beginner\", value: \"beginner\", style: {} },\r\n\t\t{ text: \"Warrior\", value: \"warrior\", style: {} },\r\n\t\t{ text: \"Magician\", value: \"magician\", style: {} },\r\n\t\t{ text: \"Bowman\", value: \"bowman\", style: {} },\r\n\t\t{ text: \"Thief\", value: \"thief\", style: {} },\r\n\t\t{ text: \"Pirate\", value: \"pirate\", style: {} },\r\n\t];\r\n\r\n\tconst face_color_buttons = [\r\n\t\t{ text: \"黑\", value: \"0\", style: { background: \"#333333\" } },\r\n\t\t{ text: \"藍\", value: \"1\", style: { background: \"#0000ff\" } },\r\n\t\t{ text: \"紅\", value: \"2\", style: { background: \"#ff0000\" } },\r\n\t\t{ text: \"綠\", value: \"3\", style: { background: \"#00ff00\" } },\r\n\t\t{ text: \"棕\", value: \"4\", style: { background: \"#804040\" } },\r\n\t\t{ text: \"青\", value: \"5\", style: { background: \"#00ffc0\" } },\r\n\t\t{ text: \"紫\", value: \"6\", style: { background: \"#8000ff\" } },\r\n\t\t{ text: \"粉\", value: \"7\", style: { background: \"#ff00ff\" } },\r\n\t\t{ text: \"銀\", value: \"8\", style: { background: \"#C0C0C0\" } },\r\n\t];\r\n\r\n\tconst hair_color_buttons = [\r\n\t\t{ text: \"黑\", value: \"0\", style: { background: \"#333333\" } },\r\n\t\t{ text: \"紅\", value: \"1\", style: { background: \"#ff0000\" } },\r\n\t\t{ text: \"橙\", value: \"2\", style: { background: \"#ff8040\" } },\r\n\t\t{ text: \"黃\", value: \"3\", style: { background: \"#ffff00\" } },\r\n\t\t{ text: \"綠\", value: \"4\", style: { background: \"#00ff00\" } },\r\n\t\t{ text: \"藍\", value: \"5\", style: { background: \"#0000ff\" } },\r\n\t\t{ text: \"紫\", value: \"6\", style: { background: \"#8000ff\" } },\r\n\t\t{ text: \"棕\", value: \"7\", style: { background: \"#804040\" } },\r\n\t];\r\n\r\n\tconst face_color_buttons_en = [\r\n\t\t{ text: \"Black\", value: \"0\", style: { background: \"#111111\" } },\r\n\t\t{ text: \"Blue\", value: \"1\", style: { background: \"#0000ff\" } },\r\n\t\t{ text: \"Red\", value: \"2\", style: { background: \"#ff0000\" } },\r\n\t\t{ text: \"Green\", value: \"3\", style: { background: \"#00ff00\" } },\r\n\t\t{ text: \"Hazel\", value: \"4\", style: { background: \"#804040\" } },\r\n\t\t{ text: \"Sapphire\", value: \"5\", style: { background: \"#00ffc0\" } },\r\n\t\t{ text: \"Violet\", value: \"6\", style: { background: \"#8000ff\" } },\r\n\t\t{ text: \"Amethyst\", value: \"7\", style: { background: \"#ff00ff\" } },\r\n\t\t{ text: \"White\", value: \"8\", style: { background: \"#C0C0C0\" } },\r\n\t];\r\n\r\n\tclass ItemFilter {\r\n\t\tstatic cash(item) {\r\n\t\t\t//return item.cash == 1;\r\n\t\t\treturn item.cash > 0;\r\n\t\t}\r\n\t\tstatic standard(item) {\r\n\t\t\t//return item.cash != 1;\r\n\t\t\treturn item.cash == null || item.cash == 0;\r\n\t\t}\r\n\r\n\t\tstatic female(item) {\r\n\t\t\treturn item.gender == 1;\r\n\t\t}\r\n\t\tstatic male(item) {\r\n\t\t\treturn item.gender == 0;\r\n\t\t}\r\n\t\tstatic neutral(item) {\r\n\t\t\treturn item.gender == 2;\r\n\t\t}\r\n\r\n\t\tstatic unlimited(item) {\r\n\t\t\treturn item.reqJob == 0 || item.reqJob == null;\r\n\t\t}\r\n\t\tstatic beginner(item) {\r\n\t\t\treturn item.reqJob == -1;\r\n\t\t}\r\n\t\tstatic warrior(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 1;\r\n\t\t}\r\n\t\tstatic magician(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 2;\r\n\t\t}\r\n\t\tstatic bowman(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 4;\r\n\t\t}\r\n\t\tstatic thief(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 8;\r\n\t\t}\r\n\t\tstatic pirate(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 16;\r\n\t\t}\r\n\t}\r\n\tItemFilter.list = [];\r\n\tfor (let i = 0; i < filter_buttons.length; ++i) {\r\n\t\tlet fn = ItemFilter[filter_buttons[i].value];\r\n\t\tItemFilter.list[i] = fn;\r\n\t}\r\n\r\n\texport default {\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tsearch_text: \"\",\r\n\t\t\t\tsearch_next: -1,\r\n\r\n\t\t\t\tloaded_equip_list: [],\t// origin list (no filter)\r\n\t\t\t\tloaded_category: null,\r\n\t\t\t\tequip_list: [],\t\t\t// view list (final result)\r\n\t\t\t\tsearch_equip_result: [],// only search result\r\n\r\n\t\t\t\tselected_category: \"0000\",\r\n\t\t\t\tfilters: [],\r\n\t\t\t\tface_color: 0,\r\n\t\t\t\thair_color: 0,\r\n\t\t\t\thair_color2: 0,\r\n\t\t\t\thair_mix2: 0,\r\n\r\n\t\t\t\tpage: 0,\r\n\r\n\t\t\t\tface_names: null,\r\n\t\t\t\thair_names: null,\r\n\r\n\t\t\t\tonlyShowSearchResult: true,\r\n\t\t\t\tdisplayMode: true,\r\n\t\t\t\tcountOfItemsPerPage: 200,\r\n\t\t\t\t\r\n\t\t\t\tisShowSetting: false,\r\n\t\t\t\t\r\n\t\t\t\tzIndex: 0,\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tDATA_TAG_VERSION: () => window.DATA_TAG + window.DATA_VERSION,\r\n\t\t\tcategoryGroupList: function () {\r\n\t\t\t\t/** @type {ItemCategoryInfo[]} */\r\n\t\t\t\tconst cl = Object.values(ItemCategoryInfo._info);//ItemCategoryInfo._categoryList;\r\n\t\t\t\tlet ss = {};\r\n\t\t\t\tlet ks = {};\r\n\r\n\t\t\t\tcl.forEach(cat => {\r\n\t\t\t\t\tlet group;\r\n\t\t\t\t\tif (cat.slot) {\r\n\t\t\t\t\t\tlet _g = cat.slot.match(/^[0-9a-z]+/);\r\n\t\t\t\t\t\tgroup = _g ? _g[0].toLocaleLowerCase() : cat.slot;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet group = cat.categoryName;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!ss[group]) {\r\n\t\t\t\t\t\tss[group] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet key = cat.categoryName || cat.listPath;\r\n\t\t\t\t\tif (!ks[key]) {\r\n\t\t\t\t\t\tss[group].push(cat);\r\n\t\t\t\t\t\tks[key] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn ss;\r\n\t\t\t},\r\n\t\t\tfilter_buttons: () => filter_buttons,\r\n\t\t\tface_color_buttons: () => face_color_buttons,\r\n\t\t\thair_color_buttons: () => hair_color_buttons,\r\n\t\t\t__count_of_item_in_page: function () {\r\n\t\t\t\tconst start = this.page * this.countOfItemsPerPage;\r\n\t\t\t\tconst end = Math.min(start + this.countOfItemsPerPage, this.equip_list.length);\r\n\t\t\t\tconst count = end - start;\r\n\r\n\t\t\t\treturn Math.min(Math.max(0, count), this.equip_list.length);//return 0 < count < this.equip_list.length\r\n\t\t\t},\r\n\t\t\t__count_of_page: function () {\r\n\t\t\t\treturn Math.ceil(this.equip_list.length / this.countOfItemsPerPage);\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t__set_z_index: function (z) {//override\r\n\t\t\t\tthis.zIndex = z;\r\n\t\t\t},\r\n\t\t\tgetHairMixColor1CSS() {\r\n\t\t\t\treturn Object.assign({ \"clip-path\": \"polygon(50% 0%, 0% 20%, 0% 90%, 100% 90%, 100% 20%)\" }, hair_color_buttons[this.hair_color].style);\r\n\t\t\t},\r\n\t\t\tgetHairMixColor2CSS() {\r\n\t\t\t\treturn Object.assign({ \"clip-path\": \"polygon(0% 10%, 0% 80%, 50% 100%, 100% 80%, 100% 10%)\" }, this.hair_color2 != null ? hair_color_buttons[this.hair_color2].style : {});\r\n\t\t\t},\r\n\t\t\tcopyImageUrl: function (e, id) {\r\n\t\t\t\tlet img = e.currentTarget.querySelector(\"img\");\r\n\t\t\t\tif (img) {\r\n\t\t\t\t\tif (img.src.startsWith(\"data:image/\")) {\r\n\t\t\t\t\t\tif (window.confirm(\"圖示可能不存在，確定要複製圖示位置？\")) {\r\n\t\t\t\t\t\t\tlet url = ItemCategoryInfo.getIconRawUrl(id);\r\n\t\t\t\t\t\t\tcopyToClipboard(url);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcopyToClipboard(img.src);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcopyInnerText: function (e) {\r\n\t\t\t\tlet el = e.currentTarget;\r\n\t\t\t\tlet text = el.innerText;\r\n\t\t\t\tcopyToClipboard(text);\r\n\r\n\t\t\t\tSelectText(el);\r\n\t\t\t},\r\n\t\t\tcopyText: function (e, text) {\r\n\t\t\t\tcopyToClipboard(text);\r\n\t\t\t},\r\n\t\t\tsearch_equip: async function (search_text) {\r\n\t\t\t\tthis.clearSearch();\r\n\r\n\t\t\t\tif (!search_text || search_text == \"\") {\r\n\t\t\t\t\tthis.search_equip_result = [];\r\n\t\t\t\t\tif (this.onlyShowSearchResult) {\r\n\t\t\t\t\t\tawait this.loadList();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tawait this.loadList();\r\n\r\n\t\t\t\t\tlet old_search_equip_result = this.search_equip_result;\r\n\t\t\t\t\tthis.search_equip_result = [];\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet rr = search_text.match(/^(.+):\\/(.+)\\/$/);\r\n\r\n\t\t\t\t\t\tif (rr) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet attr = rr[1];\r\n\r\n\t\t\t\t\t\t\t\tif (attr == \"$style\" && Number.isSafeInteger(Number(rr[2]))) {\r\n\t\t\t\t\t\t\t\t\tlet si = rr[2];\r\n\t\t\t\t\t\t\t\t\tif (this._is_category_hair()) {\r\n\t\t\t\t\t\t\t\t\t\tlet black = CharacterRenderConfig.getColorHairID(String(si), 0);\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet b1 = item.id == null || CharacterRenderConfig.getColorHairID(item.id, 0);\r\n\t\t\t\t\t\t\t\t\t\t\tif (b1 && b1.indexOf(black) != -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.$page = (index / this.countOfItemsPerPage);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (this._is_category_face()) {\r\n\t\t\t\t\t\t\t\t\t\tlet black = CharacterRenderConfig.getColorFaceID(String(si), 0);\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet b1 = item.id == null || CharacterRenderConfig.getColorFaceID(item.id, 0);\r\n\t\t\t\t\t\t\t\t\t\t\tif (b1 && b1.indexOf(black) != -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.$page = (index / this.countOfItemsPerPage);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.search_equip_result.length == 0) {\r\n\t\t\t\t\t\t\t\t\tlet regexp = RegExp(rr[2]);\r\n\t\t\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\t\t\tif (item[attr] != null && regexp.test(item[attr])) {\r\n\t\t\t\t\t\t\t\t\t\t\titem.$page = (index / this.countOfItemsPerPage);\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (this.search_equip_result &&\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result[0] &&\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result[0][attr] &&\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result[0][attr].localeCompare\r\n\t\t\t\t\t\t\t\t\t) {//check attr is can compare\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result.sort(function (a, b) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet sa = a[attr], sb = b[attr];\r\n\t\t\t\t\t\t\t\t\t\t\treturn sa.localeCompare(sb);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\t\tthis.search_equip_result = [];\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\tif (item.id && item.id.indexOf(search_text) >= 0 ||\r\n\t\t\t\t\t\t\t\t\titem.name && (\r\n\t\t\t\t\t\t\t\t\t\titem.name.indexOf(search_text) >= 0 ||\r\n\t\t\t\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(search_text.toLowerCase()) >= 0\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\titem.$page = (index / this.countOfItemsPerPage);\r\n\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.search_equip_result.sort(function (a, b) {\r\n\t\t\t\t\t\t\t\tif (a.name && b.name) {\r\n\t\t\t\t\t\t\t\t\treturn a.name.localeCompare(b.name);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\tthis.search_equip_result = old_search_equip_result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\told_search_equip_result = null;\r\n\r\n\t\t\t\t\tif (this.search_equip_result.length) {\r\n\t\t\t\t\t\tthis.searchNextText();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log(\"no search: \" + search_text);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.onlyShowSearchResult) {\r\n\t\t\t\t\tthis.page = 0;\r\n\t\t\t\t\tthis.equip_list = this.search_equip_result;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsearchNextText: function (text) {\r\n\t\t\t\tif (this.onlyShowSearchResult) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t//if (e.keyCode == 13) {}\r\n\r\n\t\t\t\tlet next = (this.search_next + 1) % this.search_equip_result.length;\r\n\r\n\t\t\t\tlet item = this.search_equip_result[next];\r\n\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\tconst page = item.$page;\r\n\r\n\t\t\t\t\tthis.change_page(page);\r\n\r\n\t\t\t\t\tthis.$nextTick(function () {\r\n\t\t\t\t\t\twindow.location.hash = \"item\" + item.id;\r\n\r\n\t\t\t\t\t\tthis.$refs.input_search.focus();\r\n\r\n\t\t\t\t\t\t//console.log({\r\n\t\t\t\t\t\t//\tid: item.id,\r\n\t\t\t\t\t\t//\tname: item.name,\r\n\t\t\t\t\t\t//\tpage: page,\r\n\t\t\t\t\t\t//});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.search_next = next;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tclearSearch: function () {\r\n\t\t\t\tthis.search_next = -1;\r\n\t\t\t\twindow.location.hash = \"\";\r\n\t\t\t},\r\n\t\t\tchange_page: function (page) {\r\n\t\t\t\tif (this.page != page) {\r\n\t\t\t\t\tthis.$refs.content.scrollTop = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.page = page;\r\n\t\t\t\tthis.clearSearch();\r\n\t\t\t\t//console.log(\"change page: \" + page);\r\n\t\t\t},\r\n\t\t\t__get_category_slot: function () {\r\n\t\t\t\tconst cateinfo = ItemCategoryInfo.get(this.selected_category);\r\n\t\t\t\tif (cateinfo) {\r\n\t\t\t\t\treturn cateinfo.slot;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t_is_category_face: function () {\r\n\t\t\t\tconst slot = this.__get_category_slot();\r\n\t\t\t\treturn slot == \"face\";\r\n\t\t\t},\r\n\t\t\t_is_category_hair: function () {\r\n\t\t\t\tconst slot = this.__get_category_slot();\r\n\t\t\t\treturn slot == \"hair\";\r\n\t\t\t},\r\n\t\t\t__get_color: function () {\r\n\t\t\t\tif (this._is_category_face()) {\r\n\t\t\t\t\treturn this.face_color;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._is_category_hair()) {\r\n\t\t\t\t\treturn this.hair_color;\r\n\t\t\t\t}\r\n\t\t\t\treturn \"\";\r\n\t\t\t},\r\n\t\t\tloadList: async function () {\r\n\t\t\t\tif (this.selected_category == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.clearSearch();\r\n\r\n\t\t\t\tconst prefix = this.selected_category;\r\n\t\t\t\tconst cateinfo = ItemCategoryInfo.get(prefix);\r\n\t\t\t\tconst listPath = cateinfo.listPath || cateinfo.path || cateinfo.slot;\r\n\r\n\t\t\t\tconst coloredPath = listPath + this.__get_color();\r\n\r\n\t\t\t\t/** @type {EquipInfo[]} */\r\n\t\t\t\tlet equip_list = [];\r\n\r\n\t\t\t\tif (coloredPath != this.loaded_category || this.loaded_equip_list.length == 0) {\r\n\t\t\t\t\tequip_list = JSON.parse(await $get.asset(`equips/${coloredPath}.json`));\r\n\t\t\t\t\tif (!equip_list || !equip_list.length) {\r\n\t\t\t\t\t\talert(\"? \" + coloredPath);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tawait concat_external_resource(coloredPath, equip_list);\r\n\r\n\t\t\t\t\tif (cateinfo.slot == \"weapon\" && this.selected_category != \"0170\") {\r\n\t\t\t\t\t\tlet cash_weapon = JSON.parse(await $get.asset(`equips/0170.json`));\r\n\r\n\t\t\t\t\t\tlet wt = prefix.slice(2, 4);\r\n\t\t\t\t\t\tlet va = cash_weapon.filter(a => {\r\n\t\t\t\t\t\t\treturn a.__t.indexOf(wt) >= 0;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tequip_list = equip_list.concat(va);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tequip_list.forEach(ItemAttrNormalize[listPath] || ItemAttrNormalize._equip);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.loaded_equip_list = equip_list;\r\n\t\t\t\t\tthis.loaded_category = coloredPath;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tequip_list = [...this.loaded_equip_list];\r\n\t\t\t\t}\r\n\t\t\t\t//this.equip_list = equip_list;\r\n\r\n\t\t\t\tif (equip_list.length > 0) {\r\n\t\t\t\t\tlet fnFilter = this.__get_filter();\r\n\t\t\t\t\tif (fnFilter) {\r\n\t\t\t\t\t\tequip_list = equip_list.filter(fnFilter);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tthis.equip_list = equip_list;// for using this.__count_of_page\r\n\r\n\t\t\t\tif (equip_list.length > 0) {\r\n\t\t\t\t\tconst count_of_page = this.__count_of_page;\r\n\r\n\t\t\t\t\tif (count_of_page > 0) {\r\n\t\t\t\t\t\tif (this.page >= count_of_page) {\r\n\t\t\t\t\t\t\tthis.page = count_of_page - 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.page = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tequip_list.sort((a, b) => a.id - b.id);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tthis.equip_list = equip_list;\r\n\t\t\t},\r\n\t\t\t__get_filter: function () {\r\n\t\t\t\tif (!this.filters.length) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tconst list = ItemFilter.list;\r\n\t\t\t\tconst fnFilters = this.filters.map(function (i) {\r\n\t\t\t\t\treturn (a) => !list[i](a);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (fnFilters.length) {\r\n\t\t\t\t\treturn function (item) {\r\n\t\t\t\t\t\treturn fnFilters.every(function (fn) {\r\n\t\t\t\t\t\t\treturn fn(item);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//for (let i = 0; i < fnFilters.length; ++i) {\r\n\t\t\t\t\t\t//\tif (fnFilters[i](item)) {\r\n\t\t\t\t\t\t//\t\treturn false;\r\n\t\t\t\t\t\t//\t}\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t//return true;\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\treturn () => true;\r\n\t\t\t\t//}\r\n\t\t\t},\r\n\t\t\t//__get_face_color_filter: function () {\r\n\t\t\t//},\r\n\t\t\t//__get_hair_color_filter: function () {\r\n\t\t\t//},\r\n\t\t\t__get_item: function (index) {\r\n\t\t\t\tconst first = this.page * this.countOfItemsPerPage;\r\n\r\n\t\t\t\treturn this.equip_list[first + index];\r\n\t\t\t},\r\n\t\t\t__get_item_id: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item.id;\r\n\t\t\t},\r\n\t\t\t__get_item_name: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item.name || \"[null]\";\r\n\t\t\t},\r\n\t\t\t__get_item_name_ex: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item._name || \"[null]\";\r\n\t\t\t},\r\n\t\t\t__get_item_icon_url: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item.icon && item.icon[\"\"] ? item.icon[\"\"] : \"images/warning.png\";\r\n\t\t\t},\r\n\t\t\t__face_or_hair_img_onerror: async function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\tif (!item) {\r\n\t\t\t\t\talert(\"error: this.__get_item(index)\\nindex=\" + index);\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (item.icon && item.icon[\"\"]) {\r\n\t\t\t\t\tlet src = item.icon[\"\"];\r\n\r\n\t\t\t\t\tif (src.startsWith(\"images/\")) {\r\n\t\t\t\t\t\tlet sp = src.split(\"/\");\r\n\t\t\t\t\t\tlet place = sp.splice(sp.length - 1, 1);\r\n\r\n\t\t\t\t\t\tsp[1] = \"ls\";\r\n\r\n\t\t\t\t\t\tlet ls = JSON.parse(await $get(sp.join(\"/\")));\r\n\r\n\t\t\t\t\t\tlet next = ls.indexOf(place) + 1;\r\n\t\t\t\t\t\tif (next < ls.length) {\r\n\t\t\t\t\t\t\tplace = ls[next];\r\n\t\t\t\t\t\t\tsp[1] = \"images\";\r\n\t\t\t\t\t\t\titem.icon[\"\"] = sp.join(\"/\") + \"/\" + place;\r\n\t\t\t\t\t\t\tdebugger\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\titem.icon[\"\"] = \"images/warning.png\";\r\n\t\t\t},\r\n\t\t\tclickItem: function (e, num) {\r\n\t\t\t\tif (this.selected_category == \"0170\") {\r\n\t\t\t\t\tlet item = this.__get_item(num);\r\n\t\t\t\t\tconsole.groupCollapsed(\"沒有設定職業，無法使用點裝武器\");\r\n\t\t\t\t\tconsole.log(\"click cash weapon: [%o] %o %o\", item.id, item.name, item);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet item = this.__get_item(num);\r\n\r\n\t\t\t\t\tthis.$emit(\"clickItem\", {\r\n\t\t\t\t\t\tevent: e,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tcategory: this.selected_category,\r\n\t\t\t\t\t\tequip: item,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconsole.log(\"Use equip: [%o] %o %o\", item.id, item.name, item);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thoverItem: function (e, num) {\r\n\t\t\t\tlet item = this.__get_item(num);\r\n\r\n\t\t\t\tthis.$emit(\"hoverItem\", {\r\n\t\t\t\t\tevent: e,\r\n\t\t\t\t\tid: item.id,\r\n\t\t\t\t\tcategory: this.selected_category,\r\n\t\t\t\t\tequip: item,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tmouseleaveItem: function (e, num) {\r\n\t\t\t\tlet item = this.__get_item(num);\r\n\r\n\t\t\t\tthis.$emit(\"mouseleaveItem\", {\r\n\t\t\t\t\tevent: e,\r\n\t\t\t\t\tid: item.id,\r\n\t\t\t\t\tcategory: this.selected_category,\r\n\t\t\t\t\tequip: item,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tselected_category_onchange: function (value) {\r\n\t\t\t\tif (value == \"0002\") {\r\n\t\t\t\t\tthis.face_color = Number(window.chara.renderer.faceColor);\r\n\t\t\t\t}\r\n\t\t\t\telse if (value == \"0003\" || value == \"0004\") {\r\n\t\t\t\t\tthis.hair_color = Number(window.chara.renderer.hairColor);\r\n\t\t\t\t\tif (window.chara.renderer.slots.hairColor2 && window.chara.renderer.slots.hairMix2) {\r\n\t\t\t\t\t\tthis.hair_color2 = Number(window.chara.renderer.slots.hairColor2);\r\n\t\t\t\t\t\tthis.hair_mix2 = Math.trunc(Number(window.chara.renderer.slots.hairMix2) * 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.search_equip(this.search_text);\r\n\t\t\t},\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tsearch_text: function (val, oldVal) {\r\n\t\t\t\tthis.search_equip(val);\r\n\t\t\t},\r\n\t\t\tonlyShowSearchResult: async function (val) {\r\n\t\t\t\tif (val) {\r\n\t\t\t\t\tthis.search_equip(this.search_text);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.search_text) {\r\n\t\t\t\t\tawait this.loadList();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselected_category: function (value) {\r\n\t\t\t\tthis.selected_category_onchange(value);\r\n\t\t\t},\r\n\t\t\tfilters: async function () {\r\n\t\t\t\t//console.log(JSON.stringify(this.filters));\r\n\t\t\t\tawait this.loadList();\r\n\t\t\t},\r\n\t\t\tface_color: async function () {\r\n\t\t\t\t//console.log(\"face: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"faceColor\", {\r\n\t\t\t\t\tcolor: this.face_color\r\n\t\t\t\t});\r\n\t\t\t\tawait this.loadList();\r\n\t\t\t},\r\n\t\t\thair_color: async function () {\r\n\t\t\t\t//console.log(\"hair: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"hairColor\", {\r\n\t\t\t\t\tcolor: this.hair_color\r\n\t\t\t\t});\r\n\t\t\t\tawait this.loadList();\r\n\t\t\t},\r\n\t\t\thair_color2: async function () {\r\n\t\t\t\t//console.log(\"hair: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"hairColor2\", {\r\n\t\t\t\t\tcolor: this.hair_color2,\r\n\t\t\t\t\tmix: this.hair_mix2 / 100\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\thair_mix2: async function () {\r\n\t\t\t\t//console.log(\"hair: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"hairMix2\", {\r\n\t\t\t\t\tcolor: this.hair_color2,\r\n\t\t\t\t\tmix: this.hair_mix2 / 100\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis.selected_category = \"0000\";\r\n\t\t\tthis.selected_category_onchange(this.selected_category);\r\n\t\t},\r\n\t\tdirectives: {\r\n\t\t\tfocus: {\r\n\t\t\t\tinserted: function (el) {\r\n\t\t\t\t\tel.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\t\"ui-button-group\": UIButtonGroup,\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.ui-equip-box {\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.ui-equip-box-content {\r\n\t\tdisplay: table;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.ui-equip-box .header {\r\n\t\tdisplay: table-row;\r\n\t\ttext-align: left;\r\n\t}\r\n\t.ui-equip-box .header.btn-group, .ui-equip-box .pagination {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.ui-equip-box .pagination {\r\n\t\theight: 2em;\r\n\t\toverflow: auto;\r\n\t\tfont-size: initial;\r\n\t}\r\n\r\n\t.ui-equip-box .item-list-page {\r\n\t\theight: 100%;\r\n\t\tdisplay: table-row;\r\n\t}\r\n\t.ui-equip-box .item-list-page > * {\r\n\t\toverflow: auto;\r\n\t\theight: 100%;\r\n\t}\r\n\t.ui-equip-box .item-list {\r\n\t\tlist-style: none;\r\n\t\tmargin: auto;\r\n\t\tpadding: 1px;\r\n\t}\r\n\t.ui-equip-box .item-list-sm {\r\n\t\tmargin: auto;\r\n\t\tpadding: 1px;\r\n\t\tline-height: 0;\r\n\t\ttext-align: center;\r\n\t}\r\n\t.ui-equip-box .item-detail {\r\n\t\twidth: 100%;\r\n\t\tborder-spacing: 1px;\r\n\t}\r\n\t.ui-equip-box .list-item, .ui-equip-box .list-item-sm {\r\n\t\tborder: 1px solid black;\r\n\t\tborder-bottom: none;\r\n\t\tbackground: linear-gradient(to bottom, rgba(240,249,255,0.9) 0%,rgba(203,235,255,0.9) 30%,rgba(201,234,255,0.9) 50%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 75%,rgba(240,249,255,0.9) 100%);\r\n\t}\r\n\t.ui-equip-box .list-item-sm {\r\n\t\tdisplay: inline-block;\r\n\t\tborder: none;\r\n\t\toutline: 1px solid black;\r\n\t\tbox-shadow: inset 1px 1px 0 lightblue;\r\n\t}\r\n\t.ui-equip-box .list-item:target, .ui-equip-box .list-item-sm:target {\r\n\t\tbox-shadow: inset 0 0 0 1px red;\r\n\t\toutline: 1px solid red;\r\n\t\tposition: relative;\r\n\t}\r\n\t.ui-equip-box .list-item:last-child {\r\n\t\tborder-bottom: 1px solid black;\r\n\t}\r\n\t.ui-equip-box .list-item:hover, .ui-equip-box .list-item-sm:hover {\r\n\t\tbackground: aliceblue;\r\n\t}\r\n\t.ui-equip-box .list-item:active, .ui-equip-box .list-item-sm:active {\r\n\t\tbackground: lightgray;\r\n\t}\r\n\r\n\t.ui-equip-box .item-name {\r\n\t\tuser-select: text;\r\n\t\twidth: 12em;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\t.ui-equip-box .list-item:target .item-name {\r\n\t\tcolor: red;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.ui-equip-box .item-id {\r\n\t\tuser-select: text;\r\n\t}\r\n\r\n\t.ui-equip-box .item-icon-outer-frame {\r\n\t\tposition: relative;\r\n\t\twidth: 48px;\r\n\t\theight: 48px;\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t.ui-equip-box .item-icon-frame > img, .ui-equip-box .item-icon-frame-sm > img {\r\n\t\tmax-width: 48px;\r\n\t\tmax-height: 48px;\r\n\t\tdisplay: block;\r\n\t\tmargin: auto;\r\n\t}\r\n\r\n\r\n\t.ui-equip-box .filters button:hover {\r\n\t\tborder: 1px solid blue;\r\n\t\tborder-radius: 3px;\r\n\t\tbackground: rgba(240, 249, 255, 0.9);\r\n\t}\r\n\t.ui-equip-box .filters button:hover, .face_color button:hover, .hair_color button:hover {\r\n\t\tfilter: contrast(150%) brightness(110%);\r\n\t}\r\n\t.ui-equip-box .filters button.active {\r\n\t\tborder-radius: 3px;\r\n\t\tbackground-color: hsl(203, 0%, 70%);\r\n\t}\r\n\t.ui-equip-box .filters button.active img {\r\n\t\tfilter: grayscale(100%) brightness(90%) contrast(150%);\r\n\t}\r\n\t.ui-equip-box .filters button.active:hover {\r\n\t\tborder: 1px solid blue;\r\n\t\tbackground: rgba(240, 249, 255, 0.9);\r\n\t}\r\n\t.ui-equip-box .filters button.active:hover {\r\n\t\tfilter: contrast(150%) grayscale(100%) brightness(110%);\r\n\t}\r\n\r\n\t.ui-equip-box .face_color, hair_color {\r\n\t\tborder: 1px solid transparent;\r\n\t\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\r\n\t}\r\n\t.ui-equip-box .face_color button.active, .hair_color button.active {\r\n\t\tborder: 1px solid white;\r\n\t\tbox-shadow: 0 0 0.5em 0 blue, 0 0 1em 0 yellow;\r\n\t\tcolor: white;\r\n\t\ttext-shadow: 0 0 0.1em black, 0 0 0.5em black;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.ui-equip-box .mix-color {\r\n\t\ttext-align: center;\r\n\t\twidth: 3em;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area > * {\r\n\t\tpadding-top: 1px;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area {\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area button {\r\n\t\ttext-align: center;\r\n\t\tcursor: pointer;\r\n\t\tborder: 1px solid transparent;\r\n\t\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\r\n\t\tfont-family: 微軟正黑體;\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 1em;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area button > img {\r\n\t\tdisplay: block;\r\n\t\tmargin: auto;\r\n\t}\r\n\t\r\n\t.m-pagination {\r\n\t\tbackground: #efefef;\r\n\t\tborder-top: 1px solid lightgray;\r\n\t\tborder-bottom: 1px solid lightgray;\r\n\t}\r\n\t.m-pagination-item {\r\n\t\tbox-sizing: border-box;\r\n\t\tdisplay: inline-block;\r\n\t\tmin-width: 2em;\r\n\t\twidth: auto;\r\n\t\ttext-align: center;\r\n\t\tcolor: blue;\r\n\t\tborder: 1px solid transparent;\r\n\t\tborder-right: 1px solid darkgray;\r\n\t}\r\n\t.m-pagination-item:last-child {\r\n\t\tborder-right: 1px solid transparent;\r\n\t}\r\n\t.m-pagination-item:hover {\r\n\t\tborder-radius: 5px;\r\n\t\tborder: 1px solid darkgray;\r\n\t}\r\n\t.m-pagination-item .active {\r\n\t\tcolor: red;\r\n\t}\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-equip-box.vue?vue&type=template&id=2e024d28&\"\nimport script from \"./ui-equip-box.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-equip-box.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-equip-box.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ui-equip-box.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ui-equip-box\"},[_c('div',{ref:\"content\",staticClass:\"ui-equip-box-content\"},[_c('div',{staticClass:\"header\",staticStyle:{\"width\":\"100%\"}},[_c('div',{staticStyle:{\"width\":\"100%\"}},[_c('div',{staticStyle:{\"display\":\"inline-flex\",\"width\":\"100%\"}},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selected_category),expression:\"selected_category\"}],staticStyle:{\"flex\":\"1\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selected_category=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_vm._l((_vm.categoryGroupList),function(og,key){return [(og.length>1)?[_c('optgroup',{attrs:{\"label\":key}},_vm._l((og),function(cat){return _c('option',{domProps:{\"value\":cat.id_prefix}},[_vm._v(_vm._s(cat.categoryName))])}))]:[_c('option',{domProps:{\"value\":og[0].id_prefix}},[_vm._v(_vm._s(og[0].categoryName))])]]})],2),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search_text),expression:\"search_text\"}],ref:\"input_search\",staticStyle:{\"flex\":\"3\"},attrs:{\"type\":\"search\",\"list\":\"search_param\",\"placeholder\":\"<search by name or id>\"},domProps:{\"value\":(_vm.search_text)},on:{\"keydown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchNextText($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.search_text=$event.target.value}}}),_vm._v(\" \"),_c('datalist',{attrs:{\"id\":\"search_param\"}},[_c('option',{attrs:{\"value\":\"劍\"}},[_vm._v(\"item Name\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"01302000\"}},[_vm._v(\"item ID\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"<attr>:/<regexp>/\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"$style:/21158/\"}},[_vm._v(\"face | hair\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"$foreign:/true/\"}},[_vm._v(\"external resource\")]),_vm._v(\" \"),_c('option',{domProps:{\"value\":'__v:/'+_vm.DATA_TAG_VERSION+'/'}},[_vm._v(\"current version\")])]),_vm._v(\" \"),_c('div',{staticStyle:{\"position\":\"relative\",\"display\":\"inline-block\"}},[_c('button',{staticStyle:{\"padding\":\"0\"},attrs:{\"title\":\"setting\"},on:{\"click\":function($event){_vm.isShowSetting=!_vm.isShowSetting}}},[(!_vm.isShowSetting)?_c('span',{staticStyle:{\"color\":\"black\"}},[_vm._v(\"⚙️\")]):_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"⚙️\")])])])]),_vm._v(\" \"),(_vm.isShowSetting)?_c('div',[_c('div',[_c('label',[_vm._v(\"每頁顯示數量 \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.countOfItemsPerPage),expression:\"countOfItemsPerPage\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"10\",\"max\":\"1000\"},domProps:{\"value\":(_vm.countOfItemsPerPage)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.countOfItemsPerPage=_vm._n($event.target.value)},\"blur\":function($event){_vm.$forceUpdate()}}})])]),_vm._v(\" \"),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.onlyShowSearchResult),expression:\"onlyShowSearchResult\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.onlyShowSearchResult)?_vm._i(_vm.onlyShowSearchResult,null)>-1:(_vm.onlyShowSearchResult)},on:{\"change\":function($event){var $$a=_vm.onlyShowSearchResult,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.onlyShowSearchResult=$$a.concat([$$v]))}else{$$i>-1&&(_vm.onlyShowSearchResult=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.onlyShowSearchResult=$$c}}}}),_vm._v(\"只顯示搜尋結果\")])]),_vm._v(\" \"),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.displayMode),expression:\"displayMode\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.displayMode)?_vm._i(_vm.displayMode,null)>-1:(_vm.displayMode)},on:{\"change\":function($event){var $$a=_vm.displayMode,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.displayMode=$$a.concat([$$v]))}else{$$i>-1&&(_vm.displayMode=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.displayMode=$$c}}}}),_vm._v(\"顯示方式: \"+_vm._s(_vm.displayMode ? \"圖示\":\"清單\"))])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"button-area\",staticStyle:{\"background\":\"lightgray\"}},[_c('ui-button-group',{staticClass:\"filters\",attrs:{\"type\":\"checkbox\",\"buttons\":_vm.filter_buttons,\"active\":_vm.filters},on:{\"update:active\":function($event){_vm.filters=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('img',{attrs:{\"src\":(\"images/toolstrip_\" + value + \".png\"),\"alt\":text}})]}}])}),_vm._v(\" \"),(_vm._is_category_face())?_c('ui-button-group',{staticClass:\"face_color\",attrs:{\"type\":\"radio\",\"buttons\":_vm.face_color_buttons,\"active\":_vm.face_color},on:{\"update:active\":function($event){_vm.face_color=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('span',{style:({background: '#'+value}),attrs:{\"value\":value,\"title\":(value + \". \" + text + \"色臉型\")}},[_vm._v(_vm._s(text))])]}}])}):_vm._e(),_vm._v(\" \"),(_vm._is_category_hair())?[_c('ui-button-group',{staticClass:\"hair_color\",attrs:{\"type\":\"radio\",\"buttons\":_vm.hair_color_buttons,\"active\":_vm.hair_color},on:{\"update:active\":function($event){_vm.hair_color=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('span',{style:({background: '#'+value}),attrs:{\"value\":value,\"title\":(value + \". \" + text + \"色髮型 (\" + value + \")\")}},[_vm._v(_vm._s(text))])]}}])}),_vm._v(\" \"),_c('table',{staticClass:\"hair_color\",staticStyle:{\"font-family\":\"monospace\",\"text-shadow\":\"0 0 5px white\",\"border-spacing\":\"1px\"}},[_c('tr',[_c('td',{style:(_vm.getHairMixColor1CSS())},[_c('span',{staticClass:\"mix-color\"},[_vm._v(_vm._s(String(100-_vm.hair_mix2))+\"%\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"100%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.hair_mix2),expression:\"hair_mix2\",modifiers:{\"number\":true}}],staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"100\",\"step\":\"1\"},domProps:{\"value\":(_vm.hair_mix2)},on:{\"__r\":function($event){_vm.hair_mix2=_vm._n($event.target.value)},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',{style:(_vm.getHairMixColor2CSS())},[_c('span',{staticClass:\"mix-color\"},[_vm._v(_vm._s(String(_vm.hair_mix2))+\"%\")])])])]),_vm._v(\" \"),_c('ui-button-group',{staticClass:\"hair_color\",attrs:{\"type\":\"radio\",\"buttons\":_vm.hair_color_buttons,\"active\":_vm.hair_color2},on:{\"update:active\":function($event){_vm.hair_color2=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('span',{style:({background: '#'+value}),attrs:{\"value\":value,\"title\":(value + \". \" + text + \"色髮型 (\" + value + \")\")}},[_vm._v(_vm._s(text))])]}}])})]:_vm._e()],2)])]),_vm._v(\" \"),(_vm.__count_of_item_in_page > 0)?_c('div',{staticStyle:{\"display\":\"table-row\"}},[_c('div',{staticClass:\"m-pagination\"},_vm._l((_vm.__count_of_page),function(i){return _c('div',{staticClass:\"m-pagination-item\"},[(_vm.page == (i-1))?_c('a',{staticClass:\"active\",attrs:{\"title\":i - 1}},[_vm._v(_vm._s(i))]):_c('a',{attrs:{\"title\":i - 1,\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.change_page(i - 1)}}},[_vm._v(_vm._s(i))])])}))]):_vm._e(),_vm._v(\" \"),(_vm.__count_of_item_in_page > 0)?_c('div',{staticClass:\"item-list-page\"},[(_vm.displayMode==false)?[_c('ul',{staticClass:\"item-list\"},[_vm._l((_vm.__count_of_item_in_page),function(i){return [_c('li',{key:_vm.__get_item_id(i - 1),staticClass:\"list-item\",attrs:{\"id\":'item' + _vm.__get_item_id(i - 1)},on:{\"click\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.clickItem($event,i-1)},\"mousemove\":function($event){_vm.hoverItem($event,i-1)},\"mouseleave\":function($event){_vm.mouseleaveItem($event,i-1)}}},[_c('table',{staticClass:\"item-detail\",on:{\"contextmenu\":function($event){$event.preventDefault();}}},[_c('tr',[_c('td',{staticClass:\"item-icon-outer-frame\",attrs:{\"rowspan\":\"2\"}},[_c('div',{staticClass:\"item-icon-frame\",on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyImageUrl($event, _vm.__get_item_id(i - 1))}}},[_c('img',{attrs:{\"src\":_vm.__get_item_icon_url(i - 1)},on:{\"error\":function($event){_vm.__face_or_hair_img_onerror(i - 1)}}})])]),_vm._v(\" \"),_c('td',{on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyInnerText($event)}}},[_c('div',{staticClass:\"item-name\",style:(_vm.__get_item(i - 1).$foreign?'color: red':'')},[_vm._v(_vm._s(_vm.__get_item_name(i - 1)))])])]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"item-id\",on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyInnerText($event)}}},[_vm._v(_vm._s(_vm.__get_item_id(i - 1)))])])])])]})],2)]:[_c('div',{staticClass:\"item-list-sm\"},[_vm._l((_vm.__count_of_item_in_page),function(i){return [_c('div',{key:_vm.__get_item_id(i - 1),staticClass:\"list-item-sm\",attrs:{\"id\":'item' + _vm.__get_item_id(i - 1)},on:{\"contextmenu\":function($event){$event.preventDefault();},\"click\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.clickItem($event,i-1)},\"mousemove\":function($event){_vm.hoverItem($event,i-1)},\"mouseleave\":function($event){_vm.mouseleaveItem($event,i-1)}}},[_c('table',{staticClass:\"item-detail\"},[_c('tr',[_c('td',{staticClass:\"item-icon-outer-frame\"},[_c('div',{staticClass:\"item-icon-frame-sm\",on:{\"mousedown\":[function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyText($event, _vm.__get_item_name(i - 1))},function($event){if('button' in $event && $event.button !== 1){ return null; }$event.preventDefault();_vm.copyText($event, _vm.__get_item_id(i - 1))}]}},[_c('img',{attrs:{\"src\":_vm.__get_item_icon_url(i - 1)},on:{\"error\":function($event){_vm.__face_or_hair_img_onerror(i - 1)}}})])])])])])]})],2)]],2):_c('div',[_c('div',{pre:true,attrs:{\"style\":\"cursor: default;\"}},[_vm._v(\"\\n\\t\\t\\t\\tNo search item\\n\\t\\t\\t\")])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div v-if=\"chara != null\" class=\"frame\">\r\n\t\t<div class=\"center\">\r\n\t\t\t<template v-for=\"ft in frag_list\">\r\n\t\t\t\t<img v-if=\"ft.relative\"\r\n\t\t\t\t\t :src=\"get_ft_src(ft)\"\r\n\t\t\t\t\t :class=\"ft.classList\"\r\n\t\t\t\t\t :style=\"get_ft_style(ft)\" />\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport Vue from 'vue';\r\n\r\n\t//class ItemCharacter {\r\n\t//\tconstructor() {\r\n\t//\t\tthis.type = \"\";\r\n\t//\t}\r\n\t//\r\n\t//\tstatic Type = {\r\n\t//\t\tmap: \"map\",\r\n\t//\t\tcharacter: \"character\"\r\n\t//\t}\r\n\t//}\r\n\r\n\t/*\r\n\t<ui-dialog title=\"Characters\">\r\n\t\t<ui-sortable :items=\"charas\" @input=\"ch\">\r\n\t\t\t<template scope=\"{item}\">\r\n\t\t\t\t<li :id=\"item.id\">\r\n\t\t\t\t\t<ui-character :chara=\"item\"></ui-character>\r\n\t\t\t\t</li>\r\n\t\t\t</template>\r\n\t\t</ui-sortable>\r\n\t</ui-dialog>\r\n\t*/\r\n\r\n\t/*\r\n\tchara = {\r\n\t\tid: <unique>\r\n\t\thtml: <element>\r\n\t}\r\n\t*/\r\n\r\n\r\n\t/*\r\n\t\tmounted: function () {\r\n\t\t},\r\n\r\n\t\tupdated: function () {\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t}\r\n\r\n\t\t//directives: {\r\n\t\t//\t'resource': function(el, binding) {\r\n\t\t//\t}\r\n\t\t//}\r\n\t\t//render: function (createElement) {\r\n\t\t//\treturn createElement(\r\n\t\t//\t\t\"div\", {\r\n\t\t//\t\t},\r\n\t\t//\t\t//this.$slots.default\r\n\t\t//\t)\r\n\t\t//},\r\n\t*/\r\n\r\n\texport default {\r\n\t\tprops: ['chara'],\r\n\t\tcomputed: {\r\n\t\t\tfrag_list: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconst chara = this.chara;\r\n\t\t\t\t\tlet arr = [];\r\n\r\n\t\t\t\t\tchara.__forceUpdate();\r\n\r\n\t\t\t\t\tfor (let i in this.chara.__frag_list) {\r\n\t\t\t\t\t\tlet ft = this.chara.__frag_list[i];\r\n\t\t\t\t\t\tif (ft.texture) {\r\n\t\t\t\t\t\t\tarr.push(ft);\r\n\t\t\t\t\t\t\tif (ft.graph2 && ft.graph2.texture) arr.push(ft.graph2);\r\n\t\t\t\t\t\t\tif (ft.graph3 && ft.graph3.texture) arr.push(ft.graph3);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (newVal) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tget_ft_src: function (ft) {\r\n\t\t\t\treturn ft.texture.src;\r\n\t\t\t},\r\n\t\t\tget_ft_style: function (ft) {\r\n\t\t\t\tlet style = {\r\n\t\t\t\t\tleft: ft.relative.x + 'px',\r\n\t\t\t\t\ttop: ft.relative.y + 'px',\r\n\t\t\t\t\topacity: ft.opacity,\r\n\t\t\t\t\twidth: ft.width + 'px',\r\n\t\t\t\t\theight: ft.height + 'px',\r\n\t\t\t\t\tfilter: ft.filter.toString(),\r\n\t\t\t\t\tvisibility: ft.visible ? \"visible\" : \"hidden\",\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn style;\r\n\t\t\t},\r\n\t\t//\tgetInnerHTML: function () {\r\n\t\t//\t\treturn this.getInner().innerHTML;\r\n\t\t//\t},\r\n\t\t//\tgetInner: function () {\r\n\t\t//\t\tlet chara = this.chara;\r\n\t\t//\r\n\t\t//\t\t//force update\r\n\t\t//\t\tchara.update(0);\r\n\t\t//\t\tchara.__update_frag_list();\r\n\t\t//\r\n\t\t//\t\tlet elem = chara._toHTML();\r\n\t\t//\t\tif (!elem) {\r\n\t\t//\t\t\tdebugger\r\n\t\t//\t\t}\r\n\t\t//\t\treturn elem;\r\n\t\t//\t}\r\n\t\t},\r\n\t\t//beforeUpdate: function () {\r\n\t\t//\tlet vm = this;\r\n\t\t//\r\n\t\t//\tthis.$nextTick(function () {\r\n\t\t//\t\tvm.$el.appendChild(vm.getInner());\r\n\t\t//\t});\r\n\t\t//}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\tdiv.frame {\r\n\t\tdisplay: inline-block;\r\n\t\tposition: relative;\r\n\t\twidth: 64px;\r\n\t\theight: 96px;\r\n\r\n\t\tuser-select: none;\r\n\t\tbackground-position: 0px 0px, 10px 10px;\r\n\t\tbackground-size: 20px 20px;\r\n\t\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\r\n\t}\r\n\tdiv.center {\r\n\t\tposition: absolute;\r\n\t\tleft: 32px;\r\n\t\ttop: 96px;\r\n\t}\r\n\timg {\r\n\t\tposition: absolute;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-character.vue?vue&type=template&id=370f889e&scoped=true&\"\nimport script from \"./ui-character.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-character.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-character.vue?vue&type=style&index=0&id=370f889e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"370f889e\",\n  null\n  \n)\n\ncomponent.options.__file = \"ui-character.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.chara != null)?_c('div',{staticClass:\"frame\"},[_c('div',{staticClass:\"center\"},[_vm._l((_vm.frag_list),function(ft){return [(ft.relative)?_c('img',{class:ft.classList,style:(_vm.get_ft_style(ft)),attrs:{\"src\":_vm.get_ft_src(ft)}}):_vm._e()]})],2)]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div v-if=\"chara != null\" class=\"ui-character-frame\">\r\n\t\t<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink= \"http://www.w3.org/1999/xlink\"\r\n\t\t\t\tx=\"0\" y=\"0\" width=\"64\" height=\"96\"\r\n\t\t\t\t>\r\n\t\t\t<g transform=\"translate(32, 96)\">\r\n\t\t\t\t<template v-for=\"ft in frag_list\">\r\n\t\t\t\t\t<image v-if=\"ft.relative\"\r\n\t\t\t\t\t\t   :class=\"ft.classList\"\r\n\t\t\t\t\t\t   :x=\"ft.relative.x\"\r\n\t\t\t\t\t\t   :y=\"ft.relative.y\"\r\n\t\t\t\t\t\t   :width=\"ft.width\"\r\n\t\t\t\t\t\t   :height=\"ft.height\"\r\n\t\t\t\t\t\t   :opacity=\"ft.opacity\"\r\n\t\t\t\t\t\t   :xlink:href=\"get_ft_src(ft)\"\r\n\t\t\t\t\t\t   >\r\n\t\t\t\t\t</image>\r\n\t\t\t\t</template>\r\n\t\t\t</g>\r\n\t\t</svg>\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<div v-if=\"is_loading\" class=\"ui-character-center\">\r\n\t\t\t\t<div class=\"ui-character-text\">\r\n\t\t\t\t\tloading...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<div v-if=\"is_processing\" class=\"ui-character-center\">\r\n\t\t\t\t<div class=\"ui-character-text\">\r\n\t\t\t\t\tprocess...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: ['chara'],\r\n\t\tcomputed: {\r\n\t\t\tfrag_list: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconst chara = this.chara;\r\n\t\t\t\t\tlet arr = [];\r\n\r\n\t\t\t\t\tchara.__forceUpdate();\r\n\r\n\t\t\t\t\tfor (let i in this.chara.__frag_list) {\r\n\t\t\t\t\t\tlet ft = this.chara.__frag_list[i];\r\n\t\t\t\t\t\tif (ft.texture) {\r\n\t\t\t\t\t\t\tarr.push(ft);\r\n\t\t\t\t\t\t\tif (ft.graph2 && ft.graph2.texture) arr.push(ft.graph2);\r\n\t\t\t\t\t\t\tif (ft.graph3 && ft.graph3.texture) arr.push(ft.graph3);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (newVal) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tis_loading: false,\r\n\t\t\t\tis_processing: false,\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tget_ft_src: function (ft) {\r\n\t\t\t\treturn ft.texture.src;\r\n\t\t\t},\r\n\t\t\tget_ft_style: function (ft) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tleft: ft.relative.x + 'px',\r\n\t\t\t\t\ttop: ft.relative.y + 'px',\r\n\t\t\t\t\topacity: ft.visible ? ft.opacity : 0,\r\n\t\t\t\t\twidth: ft.width + 'px',\r\n\t\t\t\t\theight: ft.height + 'px',\r\n\t\t\t\t\tfilter: ft.filter.toString(),\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tfake: function () {\r\n\t\t\t\tlet vm = this;\r\n\t\t\t\tvm.is_processing = true;\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tvm.is_processing = false;\r\n\t\t\t\t}, 1000);\r\n\t\t\t},\r\n\t\t\tdownload2: function () {\r\n\t\t\t\tlet svg = this.$el.innerHTML;\r\n\t\t\t\t//let url = \"data:image/svg+xml;base64,\" + btoa(svg);\r\n\t\t\t\tlet url = \"data:image/svg+xml;utf8,\" + (svg);\r\n\t\t\t\t//let url = \"data:text/html;charset=utf-8,\" + encodeURIComponent(svg);\r\n\r\n\t\t\t\tdebugger;\r\n\r\n\t\t\t\twindow.open(url);\r\n\r\n\t\t\t\t//let el = $(\"<a>svg</a>\");\r\n\t\t\t\t//el[0].href = url;\r\n\t\t\t\t//el.trigger(\"click\");\r\n\t\t\t},\r\n\t\t},\r\n\t\tupdate: function () {\r\n\t\t\tthis.$el.style.cursor = \"not-allowed\";\r\n\t\t\tthis.is_loading = true;\r\n\t\t},\r\n\t\tupdated: function () {\r\n\t\t\tthis.$el.style.cursor = \"default\";\r\n\t\t\tthis.is_loading = false;\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.ui-character-frame {\r\n\t\tdisplay: inline-block;\r\n\t\tposition: relative;\r\n\t\twidth: 64px;\r\n\t\theight: 96px;\r\n\r\n\t\tuser-select: none;\r\n\t\tbackground-position: 0px 0px, 10px 10px;\r\n\t\tbackground-size: 20px 20px;\r\n\t\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\r\n\t}\r\n\r\n\t.ui-character-center {\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(0,0,0,0.2);\r\n\t\toverflow: hidden;\r\n\t\ttext-align: center;\r\n\t}\r\n\t.ui-character-text {\r\n\t\ttext-align: center;\r\n\t\tposition: absolute;\r\n\t\ttop: calc(50% - 0.5em);\r\n\t\tfont-weight: bold;\r\n\t\tcolor: white;\r\n\t\ttext-shadow: 0 0 1px black, 0 0 2px black, 0 0 5px black;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-character-svg.vue?vue&type=template&id=08c5999c&\"\nimport script from \"./ui-character-svg.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-character-svg.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-character-svg.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ui-character-svg.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.chara != null)?_c('div',{staticClass:\"ui-character-frame\"},[_c('svg',{attrs:{\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\",\"x\":\"0\",\"y\":\"0\",\"width\":\"64\",\"height\":\"96\"}},[_c('g',{attrs:{\"transform\":\"translate(32, 96)\"}},[_vm._l((_vm.frag_list),function(ft){return [(ft.relative)?_c('image',{class:ft.classList,attrs:{\"x\":ft.relative.x,\"y\":ft.relative.y,\"width\":ft.width,\"height\":ft.height,\"opacity\":ft.opacity,\"xlink:href\":_vm.get_ft_src(ft)}}):_vm._e()]})],2)]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.is_loading)?_c('div',{staticClass:\"ui-character-center\"},[_c('div',{staticClass:\"ui-character-text\"},[_vm._v(\"\\n\\t\\t\\t\\tloading...\\n\\t\\t\\t\")])]):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.is_processing)?_c('div',{staticClass:\"ui-character-center\"},[_c('div',{staticClass:\"ui-character-text\"},[_vm._v(\"\\n\\t\\t\\t\\tprocess...\\n\\t\\t\\t\")])]):_vm._e()])],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div class=\"UIEditCharacterAttribute\" style=\"display: inline-block;\">\r\n\t\t<div style=\"display: inline-block; vertical-align: top;\">\r\n\t\t\t<table style=\"border-collapse: collapse; border-spacing: 0px;\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<template v-if=\"!chara.pause && chara.speed\">\t\r\n\t\t\t\t\t\t\t<button @click=\"chara.pause=!chara.pause\" title=\"pause animation\">\r\n\t\t\t\t\t\t\t\t<img src=\"images/player_pause.png\" alt=\"pause\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else=\"\">\r\n\t\t\t\t\t\t\t<button @click=\"chara.pause=!chara.pause\" title=\"play animation\">\r\n\t\t\t\t\t\t\t\t<img src=\"images/player_play.png\" alt=\"play\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td title=\"animation speed\">\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"chara.speed\" min=\"0\" max=\"5\" step=\"0.01\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button v-if=\"sceneChara.enablePhysics\" @click=\"sceneChara.enablePhysics=false\">禁用物理</button>\r\n\t\t\t\t\t\t<button v-else @click=\"sceneChara.enablePhysics=true\">啟用物理</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button @click=\"isShowDebug=!isShowDebug\">細節</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>表情</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"chara.emotion\">\r\n\t\t\t\t\t\t\t<option v-if=\"!emotions.length\" disabled value=\"\">請選擇</option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"item in emotions\">{{item}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model.number=\"chara.emotion_frame\" @wheel.prevent=\"onwheel($event, 'emotion', chara.emotion_frame_count-1)\">\r\n\t\t\t\t\t\t\t<option v-if=\"!emotions.length\" disabled> ---- </option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"frame in chara.emotion_frame_count\" :value=\"frame - 1\">{{frame - 1}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr title=\"禁用物理後可設定角色的動作\">\r\n\t\t\t\t\t<th>動作</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select :disabled=\"sceneChara.enablePhysics\" v-model=\"chara.action\">\r\n\t\t\t\t\t\t\t<option v-if=\"!actions.length\" disabled value=\"\">請選擇</option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"item in actions\">{{item}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select :disabled=\"sceneChara.enablePhysics\" v-model.number=\"chara.action_frame\" @wheel.prevent=\"onwheel($event, 'action', chara.action_frame_count-1)\">\r\n\t\t\t\t\t\t\t<option v-if=\"!actions.length\" disabled> ---- </option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"frame in chara.action_frame_count\" :value=\"frame - 1\">{{frame - 1}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr title=\"禁用物理後可設定角色的位置\">\r\n\t\t\t\t\t<th>位置</th>\r\n\t\t\t\t\t<td colspan=\"3\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"chara.x\" min=\"-99999\" max=\"99999\" />\r\n\t\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"chara.y\" min=\"-99999\" max=\"99999\" />\r\n\t\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"sceneChara.$layer\" min=\"0\" max=\"7\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr title=\"禁用物理後可設定角色的旋轉和方向\">\r\n\t\t\t\t\t<td colspan=\"4\">\r\n\t\t\t\t\t\t<label>旋轉：\r\n\t\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"chara_angle\" min=\"-180\" max=\"180\" step=\"10\" />°\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label>方向：\r\n\t\t\t\t\t\t\t<select :disabled=\"sceneChara.enablePhysics\" v-model.number=\"chara.front\">\r\n\t\t\t\t\t\t\t\t<option value=\"1\">右</option>\r\n\t\t\t\t\t\t\t\t<option value=\"-1\">左</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th rowspan=\"2\">耳朵</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\"><input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"human\" checked />人類</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\"><input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"elf\" />妖精</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<!---->\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\"><input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"lef\" />木雷普</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\"><input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"highlef\" />亥雷普</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<!---->\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<!--<tr>\r\n\t\t\t\t\t<td></td>\r\n\t\t\t\t\t<td></td>\r\n\t\t\t\t\t<td></td>\r\n\t\t\t\t</tr>-->\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t\t<div v-if=\"isShowDebug\" style=\"width: 100%; display: inline-block; user-select: text;\">\r\n\t\t\t<hr />\r\n\t\t\t<table>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>max value</th>\r\n\t\t\t\t\t<td><input type=\"range\" step=\"100\" min=\"100\" max=\"1000\" v-model=\"max_value\" /></td>\r\n\t\t\t\t\t<td><input type=\"number\" step=\"100\" min=\"100\" max=\"1000\" v-model=\"max_value\" /></td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t\t<hr />\r\n\t\t\t<table class=\"tb-equip-filter\">\r\n\t\t\t\t<template v-for=\"(equip,index) in chara.slots._ordered_slot\">\r\n\t\t\t\t\t<template v-if=\"equip\">\r\n\t\t\t\t\t\t<tr :class=\"isShowEquipImageFilter[index] ? 'open':''\" @click=\"showEquipImageFilter($event, index, equip)\">\r\n\t\t\t\t\t\t\t<!--<td style=\"width:1em;\">\r\n\t\t\t\t\t\t\t\t<span>{{getEquipCategoryName(equip)}}</span>\r\n\t\t\t\t\t\t\t</td>-->\r\n\t\t\t\t\t\t\t<td style=\"height: 32px\">\r\n\t\t\t\t\t\t\t\t<img style=\"max-width: 32px; width: auto; height: 32px;\" :src=\"getIconUrl(equip)\" class=\"equip-icon\" />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t<div>{{equip._raw.name||equip.name}}</div>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t<div>{{equip.id}}</div>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @click=\"click_scrollIntoView($event)\">\r\n\t\t\t\t\t\t\t\t<td>opacity</td>\r\n\t\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.opacity\" min=\"0.01\" max=\"1\" step=\"0.01\" @input=\"oninput\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.opacity\" min=\"0.01\" max=\"1\" step=\"0.01\" @input=\"oninput\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><input @click=\"equip.opacity=1; oninput();\" type=\"button\" value=\"×\" class=\"btn\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @click=\"click_scrollIntoView($event)\">\r\n\t\t\t\t\t\t\t\t<td>hue</td>\r\n\t\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.hue\" min=\"0\" max=\"359\" @input=\"oninput\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.hue\" min=\"0\" max=\"359\" @input=\"oninput\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><input @click=\"equip.filter.hue=0; oninput();\" type=\"button\" value=\"×\" class=\"btn\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @click=\"click_scrollIntoView($event)\">\r\n\t\t\t\t\t\t\t\t<td>sat</td>\r\n\t\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.sat\" min=\"0\" :max=\"max_value\" @input=\"oninput\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.sat\" min=\"0\" :max=\"max_value\" @input=\"oninput\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><input @click=\"equip.filter.sat=100; oninput();\" type=\"button\" value=\"×\" class=\"btn\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @click=\"click_scrollIntoView($event)\">\r\n\t\t\t\t\t\t\t\t<td>bri</td>\r\n\t\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.bri\" min=\"0\" :max=\"max_value\" @input=\"oninput\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.bri\" min=\"0\" :max=\"max_value\" @input=\"oninput\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><input @click=\"equip.filter.bri=100; oninput();\" type=\"button\" value=\"×\" class=\"btn\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @click=\"click_scrollIntoView($event)\">\r\n\t\t\t\t\t\t\t\t<td>contrast</td>\r\n\t\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.contrast\" min=\"0\" :max=\"max_value\" @input=\"oninput\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td style=\"width:50%;\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.contrast\" min=\"0\" :max=\"max_value\" @input=\"oninput\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><input @click=\"equip.filter.contrast=100; oninput();\" type=\"button\" value=\"×\" class=\"btn\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</template>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { ItemCategoryInfo } from \"../../public/javascripts/resource.js\";\r\n\r\n\texport default {\r\n\t\tprops: [\"sceneChara\"],\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tisShowDebug: false,\r\n\t\t\t\tisShowEquipImageFilter: [],\r\n\t\t\t\tmax_value: 100,\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tactions: () => character_action_list,\r\n\t\t\temotions: () => character_emotion_list,\r\n\t\t\tchara: function () {\r\n\t\t\t\treturn this.sceneChara.renderer;\r\n\t\t\t},\r\n\t\t\tchara_angle: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn Math.round(Math.degrees(this.sceneChara.renderer.angle));\r\n\t\t\t\t},\r\n\t\t\t\tset: function (deg) {\r\n\t\t\t\t\tthis.sceneChara.renderer.angle = Math.radians(deg);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tisEquip: function (id) {\r\n\t\t\t\treturn ItemCategoryInfo.isEquip(id);\r\n\t\t\t},\r\n\t\t\tgetEquipCategoryName: function (equip) {\r\n\t\t\t\treturn ItemCategoryInfo.get(equip.id).categoryName;\r\n\t\t\t},\r\n\t\t\tgetIconUrl(equip) {\r\n\t\t\t\treturn $get.imageUrl(equip.getIconUrl());\r\n\t\t\t},\r\n\t\t\tshowEquipImageFilter: function (event, index) {\r\n\t\t\t\tlet old_status = Boolean(this.isShowEquipImageFilter[index]);\r\n\t\t\t\tif (!old_status) {\r\n\t\t\t\t\t//close all\r\n\t\t\t\t\t//for (let i = 0; i < this.isShowEquipImageFilter.length; ++i) {\r\n\t\t\t\t\t//\tthis.isShowEquipImageFilter[i] = false;\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.$set(this.isShowEquipImageFilter, index, true);\r\n\t\t\t\t\t\r\n\t\t\t\t\tevent.target.scrollIntoView({ behavior: \"instant\", block: \"start\", inline: \"start\" });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.$set(this.isShowEquipImageFilter, index, false);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tclick_scrollIntoView: function (event) {\r\n\t\t\t\tif (event.target.tagName.toLowerCase() != \"input\") {\r\n\t\t\t\t\tevent.target.scrollIntoView({ behavior: \"instant\", block: \"center\", inline: \"center\" });\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\toninput: function () {\r\n\t\t\t\tconst crr = this.sceneChara.renderer;\r\n\t\t\t\tcrr.__forceUpdate(0);\r\n\t\t\t\tthis.$forceUpdate();\r\n\t\t\t},\r\n\t\t\tonwheel: function (event, type, max) {\r\n\t\t\t\tlet amount = Math.sign(-event.deltaY);\r\n\t\t\t\tlet oldVal = this.chara[type + \"_frame\"];\r\n\t\t\t\tif (amount) {\r\n\t\t\t\t\tlet newVal = oldVal + amount;\r\n\t\t\t\t\tif (newVal >= 0 && newVal <= max) {\r\n\t\t\t\t\t\tthis.chara[type + \"_frame\"] = newVal;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\t.UIEditCharacterAttribute td > * {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.btn {\r\n\t\tmargin: auto;\r\n\t\tpadding: 0;\r\n\t\tuser-select: none;\r\n\t}\r\n\t.chara_ear {\r\n\t\twidth: 100%;\r\n\t\tdisplay: block;\r\n\t}\r\n\t.equip-icon {\r\n\t\tmargin: auto;\r\n\t\tmax-width: 32px;\r\n\t\tmax-height: 32px;\r\n\t\twidth: auto !important;\r\n\t\theight: auto !important;\r\n\t\tdisplay: table-row;\r\n\t}\r\n\t.open {\r\n\t\tcolor: red;\r\n\t}\r\n\t.tb-equip-filter {\r\n\t\tborder-spacing: 0px;\r\n\t\tborder-collapse: collapse;\r\n\t\twidth: 100%;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-character-attribute.vue?vue&type=template&id=4b8d3dd5&scoped=true&\"\nimport script from \"./ui-character-attribute.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-character-attribute.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-character-attribute.vue?vue&type=style&index=0&id=4b8d3dd5&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4b8d3dd5\",\n  null\n  \n)\n\ncomponent.options.__file = \"ui-character-attribute.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"UIEditCharacterAttribute\",staticStyle:{\"display\":\"inline-block\"}},[_c('div',{staticStyle:{\"display\":\"inline-block\",\"vertical-align\":\"top\"}},[_c('table',{staticStyle:{\"border-collapse\":\"collapse\",\"border-spacing\":\"0px\"}},[_c('tr',[_c('td',[(!_vm.chara.pause && _vm.chara.speed)?[_c('button',{attrs:{\"title\":\"pause animation\"},on:{\"click\":function($event){_vm.chara.pause=!_vm.chara.pause}}},[_c('img',{attrs:{\"src\":\"images/player_pause.png\",\"alt\":\"pause\"}})])]:[_c('button',{attrs:{\"title\":\"play animation\"},on:{\"click\":function($event){_vm.chara.pause=!_vm.chara.pause}}},[_c('img',{attrs:{\"src\":\"images/player_play.png\",\"alt\":\"play\"}})])]],2),_vm._v(\" \"),_c('td',{attrs:{\"title\":\"animation speed\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.speed),expression:\"chara.speed\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"5\",\"step\":\"0.01\"},domProps:{\"value\":(_vm.chara.speed)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.chara, \"speed\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[(_vm.sceneChara.enablePhysics)?_c('button',{on:{\"click\":function($event){_vm.sceneChara.enablePhysics=false}}},[_vm._v(\"禁用物理\")]):_c('button',{on:{\"click\":function($event){_vm.sceneChara.enablePhysics=true}}},[_vm._v(\"啟用物理\")])]),_vm._v(\" \"),_c('td',[_c('button',{on:{\"click\":function($event){_vm.isShowDebug=!_vm.isShowDebug}}},[_vm._v(\"細節\")])])]),_vm._v(\" \"),_c('tr',[_c('th',[_vm._v(\"表情\")]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.emotion),expression:\"chara.emotion\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.chara, \"emotion\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.emotions.length)?_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"請選擇\")]):_vm._l((_vm.emotions),function(item){return _c('option',[_vm._v(_vm._s(item))])})],2)]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.emotion_frame),expression:\"chara.emotion_frame\",modifiers:{\"number\":true}}],on:{\"wheel\":function($event){$event.preventDefault();_vm.onwheel($event, 'emotion', _vm.chara.emotion_frame_count-1)},\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.chara, \"emotion_frame\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.emotions.length)?_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\" ---- \")]):_vm._l((_vm.chara.emotion_frame_count),function(frame){return _c('option',{domProps:{\"value\":frame - 1}},[_vm._v(_vm._s(frame - 1))])})],2)])]),_vm._v(\" \"),_c('tr',{attrs:{\"title\":\"禁用物理後可設定角色的動作\"}},[_c('th',[_vm._v(\"動作\")]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.action),expression:\"chara.action\"}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.chara, \"action\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.actions.length)?_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"請選擇\")]):_vm._l((_vm.actions),function(item){return _c('option',[_vm._v(_vm._s(item))])})],2)]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.action_frame),expression:\"chara.action_frame\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics},on:{\"wheel\":function($event){$event.preventDefault();_vm.onwheel($event, 'action', _vm.chara.action_frame_count-1)},\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.chara, \"action_frame\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.actions.length)?_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\" ---- \")]):_vm._l((_vm.chara.action_frame_count),function(frame){return _c('option',{domProps:{\"value\":frame - 1}},[_vm._v(_vm._s(frame - 1))])})],2)])]),_vm._v(\" \"),_c('tr',{attrs:{\"title\":\"禁用物理後可設定角色的位置\"}},[_c('th',[_vm._v(\"位置\")]),_vm._v(\" \"),_c('td',{attrs:{\"colspan\":\"3\"}},[_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.x),expression:\"chara.x\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"-99999\",\"max\":\"99999\"},domProps:{\"value\":(_vm.chara.x)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.chara, \"x\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.y),expression:\"chara.y\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"-99999\",\"max\":\"99999\"},domProps:{\"value\":(_vm.chara.y)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.chara, \"y\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.sceneChara.$layer),expression:\"sceneChara.$layer\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"0\",\"max\":\"7\"},domProps:{\"value\":(_vm.sceneChara.$layer)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sceneChara, \"$layer\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])])]),_vm._v(\" \"),_c('tr',{attrs:{\"title\":\"禁用物理後可設定角色的旋轉和方向\"}},[_c('td',{attrs:{\"colspan\":\"4\"}},[_c('label',[_vm._v(\"旋轉：\\n\\t\\t\\t\\t\\t\\t\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara_angle),expression:\"chara_angle\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"-180\",\"max\":\"180\",\"step\":\"10\"},domProps:{\"value\":(_vm.chara_angle)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.chara_angle=_vm._n($event.target.value)},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\"°\\n\\t\\t\\t\\t\\t\")]),_vm._v(\" \"),_c('label',[_vm._v(\"方向：\\n\\t\\t\\t\\t\\t\\t\"),_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.front),expression:\"chara.front\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.chara, \"front\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"右\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"-1\"}},[_vm._v(\"左\")])])])])]),_vm._v(\" \"),_c('tr',[_c('th',{attrs:{\"rowspan\":\"2\"}},[_vm._v(\"耳朵\")]),_vm._v(\" \"),_c('td',[_c('label',{staticClass:\"chara_ear\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"human\",\"checked\":\"\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"human\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"human\")}}}),_vm._v(\"人類\")])]),_vm._v(\" \"),_c('td',[_c('label',{staticClass:\"chara_ear\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"elf\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"elf\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"elf\")}}}),_vm._v(\"妖精\")])]),_vm._v(\" \"),_c('td')]),_vm._v(\" \"),_c('tr',[_c('td',[_c('label',{staticClass:\"chara_ear\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"lef\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"lef\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"lef\")}}}),_vm._v(\"木雷普\")])]),_vm._v(\" \"),_c('td',[_c('label',{staticClass:\"chara_ear\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"highlef\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"highlef\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"highlef\")}}}),_vm._v(\"亥雷普\")])]),_vm._v(\" \"),_c('td')])])]),_vm._v(\" \"),(_vm.isShowDebug)?_c('div',{staticStyle:{\"width\":\"100%\",\"display\":\"inline-block\",\"user-select\":\"text\"}},[_c('hr'),_vm._v(\" \"),_c('table',[_c('tr',[_c('th',[_vm._v(\"max value\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.max_value),expression:\"max_value\"}],attrs:{\"type\":\"range\",\"step\":\"100\",\"min\":\"100\",\"max\":\"1000\"},domProps:{\"value\":(_vm.max_value)},on:{\"__r\":function($event){_vm.max_value=$event.target.value}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.max_value),expression:\"max_value\"}],attrs:{\"type\":\"number\",\"step\":\"100\",\"min\":\"100\",\"max\":\"1000\"},domProps:{\"value\":(_vm.max_value)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.max_value=$event.target.value}}})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('table',{staticClass:\"tb-equip-filter\"},[_vm._l((_vm.chara.slots._ordered_slot),function(equip,index){return [(equip)?[_c('tr',{class:_vm.isShowEquipImageFilter[index] ? 'open':'',on:{\"click\":function($event){_vm.showEquipImageFilter($event, index, equip)}}},[_c('td',{staticStyle:{\"height\":\"32px\"}},[_c('img',{staticClass:\"equip-icon\",staticStyle:{\"max-width\":\"32px\",\"width\":\"auto\",\"height\":\"32px\"},attrs:{\"src\":_vm.getIconUrl(equip)}})]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('div',[_vm._v(_vm._s(equip._raw.name||equip.name))])]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('div',[_vm._v(_vm._s(equip.id))])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"click\":function($event){_vm.click_scrollIntoView($event)}}},[_c('td',[_vm._v(\"opacity\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.opacity),expression:\"equip.opacity\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0.01\",\"max\":\"1\",\"step\":\"0.01\"},domProps:{\"value\":(equip.opacity)},on:{\"input\":_vm.oninput,\"__r\":function($event){_vm.$set(equip, \"opacity\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.opacity),expression:\"equip.opacity\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0.01\",\"max\":\"1\",\"step\":\"0.01\"},domProps:{\"value\":(equip.opacity)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(equip, \"opacity\", _vm._n($event.target.value))},_vm.oninput],\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"value\":\"×\"},on:{\"click\":function($event){equip.opacity=1; _vm.oninput();}}})])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"click\":function($event){_vm.click_scrollIntoView($event)}}},[_c('td',[_vm._v(\"hue\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.hue),expression:\"equip.filter.hue\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"359\"},domProps:{\"value\":(equip.filter.hue)},on:{\"input\":_vm.oninput,\"__r\":function($event){_vm.$set(equip.filter, \"hue\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.hue),expression:\"equip.filter.hue\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"359\"},domProps:{\"value\":(equip.filter.hue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"hue\", _vm._n($event.target.value))},_vm.oninput],\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"value\":\"×\"},on:{\"click\":function($event){equip.filter.hue=0; _vm.oninput();}}})])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"click\":function($event){_vm.click_scrollIntoView($event)}}},[_c('td',[_vm._v(\"sat\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.sat),expression:\"equip.filter.sat\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":_vm.max_value},domProps:{\"value\":(equip.filter.sat)},on:{\"input\":_vm.oninput,\"__r\":function($event){_vm.$set(equip.filter, \"sat\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.sat),expression:\"equip.filter.sat\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":_vm.max_value},domProps:{\"value\":(equip.filter.sat)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"sat\", _vm._n($event.target.value))},_vm.oninput],\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"value\":\"×\"},on:{\"click\":function($event){equip.filter.sat=100; _vm.oninput();}}})])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"click\":function($event){_vm.click_scrollIntoView($event)}}},[_c('td',[_vm._v(\"bri\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.bri),expression:\"equip.filter.bri\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":_vm.max_value},domProps:{\"value\":(equip.filter.bri)},on:{\"input\":_vm.oninput,\"__r\":function($event){_vm.$set(equip.filter, \"bri\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.bri),expression:\"equip.filter.bri\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":_vm.max_value},domProps:{\"value\":(equip.filter.bri)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"bri\", _vm._n($event.target.value))},_vm.oninput],\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"value\":\"×\"},on:{\"click\":function($event){equip.filter.bri=100; _vm.oninput();}}})])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"click\":function($event){_vm.click_scrollIntoView($event)}}},[_c('td',[_vm._v(\"contrast\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.contrast),expression:\"equip.filter.contrast\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":_vm.max_value},domProps:{\"value\":(equip.filter.contrast)},on:{\"input\":_vm.oninput,\"__r\":function($event){_vm.$set(equip.filter, \"contrast\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"50%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.contrast),expression:\"equip.filter.contrast\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":_vm.max_value},domProps:{\"value\":(equip.filter.contrast)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"contrast\", _vm._n($event.target.value))},_vm.oninput],\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"value\":\"×\"},on:{\"click\":function($event){equip.filter.contrast=100; _vm.oninput();}}})])])])]:_vm._e()]})],2)]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<div class=\"ui-life-list\">\r\n\t\t<table>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td colspan=\"9\">\r\n\t\t\t\t\t\t<button @click=\"removeAll\" style=\"float: right;\" title=\"Issues: not work\">Remove all</button>\r\n\t\t\t\t\t\t<button @click=\"reload\" style=\"float: right;\" title=\"Issues: not work ??\">reload</button>\r\n\t\t\t\t\t\t<button @click=\"killAll\" style=\"float: right;\">Kill all</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-preview\">\r\n\t\t\t\t\t\t\t#\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-id\">ID</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-type\">type</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-x\">x</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-y\">y</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-flip\">flip</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-fh\">fh</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-rx0\">rx0</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-rx1\">rx1</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t\t<tr @mouseover=\"showPreview($event,m)\" @mouseleave=\"hidePreview\" class=\"item new-item\">\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button @click=\"addSpawn\" class=\"input\">add</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model=\"m.id\" id=\"mob-id\" min=\"1\" max=\"9999999\" class=\"input-mobid\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"m.type\" id=\"mob-type\">\r\n\t\t\t\t\t\t\t<option value=\"m\">Mob</option>\r\n\t\t\t\t\t\t\t<option value=\"n\">Npc</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.x\" id=\"mob-x\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.cy\" id=\"mob-y\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"m.f\" id=\"mob-flip\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.fh\" id=\"mob-fh\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<!-- <td> -->\r\n\t\t\t\t\t<!-- \t<input type=\"number\" v-model.number=\"m.cy\" id=\"mob-cy\" class=\"input\" /> -->\r\n\t\t\t\t\t<!-- </td> -->\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.rx0\" id=\"mob-rx0\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.rx1\" id=\"mob-rx1\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr v-for=\"(spawn, index) in spawns\" @mouseover=\"showPreview($event,spawn)\" @mouseleave=\"hidePreview\" class=\"item\">\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button title=\"preview\" style=\"text-align: center;\" class=\"input\">{{index}}</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model=\"spawn.id\" min=\"1\" max=\"9999999\" class=\"input-mobid\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"spawn.type\">\r\n\t\t\t\t\t\t\t<option value=\"m\">Mob</option>\r\n\t\t\t\t\t\t\t<option value=\"n\">Npc</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.x\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.cy\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"spawn.f\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.fh\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<!--<td>-->\r\n\t\t\t\t\t<!--\t<input type=\"number\" v-model.number=\"spawn.cy\" class=\"input\" />-->\r\n\t\t\t\t\t<!--</td>-->\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.rx0\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.rx1\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t<!--\t\t\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t-->\r\n\t\t</table>\r\n\t</div>\r\n\r\n</template>\r\n\r\n<script>\r\n\timport Vuex from \"vuex\";\r\n\timport { LifeSpawnPoint, MapLifeEntity } from \"../game/Map.js\"\r\n\t\r\n\tconst store = new Vuex.Store({\r\n\t\tstate: {\r\n\t\t},\r\n\t\t//mutations: {\r\n\t\t//},\r\n\t\tactions: {\r\n\t\t}\r\n\t});\r\n\r\n\texport default {\r\n\t\tstore,\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tspawns: [],\t//no hook source\r\n\t\t\t\tm: {\t\t// form table\r\n\t\t\t\t\ttype: \"m\",\r\n\t\t\t\t\tid: 8880141,\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\tmobTime: 0,\r\n\t\t\t\t\tf: 0,\r\n\t\t\t\t\thide: 0,\r\n\t\t\t\t\tfh: 1,\r\n\t\t\t\t\tcy: 0,\r\n\t\t\t\t\trx0: 0,\r\n\t\t\t\t\trx1: 0,\r\n\t\t\t\t},\r\n\t\t\t\tis_clear: true,\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tonCollapsed: function () {\r\n\t\t\t\tthis.hidePreview();\r\n\t\t\t},\r\n\t\t\tshowPreview: async function (event, m) {\r\n\t\t\t\tlet target = event.currentTarget;\r\n\t\t\t\tlet type = m.type == \"m\" ? \"Mob\":\"Npc\";\r\n\t\t\t\tlet smallTip = this.$root.$refs.smallTip;\r\n\t\t\t\t\r\n\t\t\t\tlet desc = await MapLifeEntity.loadLifeDesc(m);\r\n\r\n\t\t\t\tlet _url = $get.imageUrl(`/${type}/${m.id}/stand/0`);\r\n\t\t\t\t\r\n\t\t\t\tsmallTip.html = [\"<div>\" + desc.name + \"</div>\" + `<img src=\"${_url}\" />`];\r\n\t\t\t\t\r\n\t\t\t\tsmallTip.show(function () {\r\n\t\t\t\t\tsmallTip.setPosition({\r\n\t\t\t\t\t\tmy: \"right center\",\r\n\t\t\t\t\t\tat: \"left center\",\r\n\t\t\t\t\t\tof: target,\r\n\t\t\t\t\t\tcollision: \"fit\"\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\thidePreview: function (event) {\r\n\t\t\t\tlet smallTip = this.$root.$refs.smallTip;\r\n\t\t\t\tsmallTip.hide();\r\n\t\t\t},\r\n\t\t\taddSpawn: function () {\r\n\t\t\t\tif (scene_map && scene_map.lifeMgr) {\r\n\t\t\t\t\tif (!this.m.type.match(/m|n/)) {\r\n\t\t\t\t\t\twindow.alert(\"life type: 'm' or 'n'\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet d = new LifeSpawnPoint(this.m);\r\n\t\t\t\t\t\r\n\t\t\t\t\td.y = d.cy;//cy = position.y; y = ?\r\n\r\n\t\t\t\t\tscene_map.lifeMgr.spawnPoints.push(d);\r\n\t\t\t\t}\r\n\t\t\t\tthis.reload();\r\n\t\t\t},\r\n\t\t\treload: function () {\r\n\t\t\t\tconst src = scene_map.lifeMgr.spawnPoints;\r\n\t\t\t\tthis.spawns = new Array(src.length);\r\n\t\t\t\tfor (let i = 0; i < src.length; ++i) {\r\n\t\t\t\t\tthis.$set(this.spawns, i, src[i]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.is_clear = false;\r\n\t\t\t\tthis.$emit(\"resize\");\r\n\t\t\t},\r\n\t\t\tremoveAll: function () {\r\n\t\t\t\tthis.is_clear = true;\r\n\t\t\t\tthis.spawns = [];\r\n\t\t\t\tthis.$emit(\"resize\");\r\n\t\t\t},\r\n\t\t\tkillAll: function () {\r\n\t\t\t\tscene_map.lifeMgr.entities.forEach(life => life.die());\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis.$on(\"onCollapsed\", this.onCollapsed);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//8880141\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.ui-life-list {\r\n\tpadding: 0 1px;\r\n}\r\n\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n\twidth: 100%;\r\n}\r\n\r\ntr.new-item {\r\n\tbackground: lightgray;\r\n}\r\ntr.item:hover {\r\n\tbackground: lightblue;\r\n\toutline: 1px auto rgb(77, 144, 254);\r\n}\r\n\r\n.button {\r\n\twidth: 100%;\r\n}\r\n\r\n.input {\r\n  width: 2.7em;\r\n}\r\n\r\n.input[type=text] {\r\n  width: 4em;\r\n}\r\n\r\n.input[type=number] {\r\n  width: 4em;\r\n}\r\n\r\n.input[type=checkbox] {\r\n  width: 1em;\r\n}\r\n\r\n.input-mobid[type=number] {\r\n  width: 5em;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-mob-list.vue?vue&type=template&id=0d3044c8&scoped=true&\"\nimport script from \"./ui-mob-list.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-mob-list.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-mob-list.vue?vue&type=style&index=0&id=0d3044c8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0d3044c8\",\n  null\n  \n)\n\ncomponent.options.__file = \"ui-mob-list.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ui-life-list\"},[_c('table',[_c('thead',[_c('tr',[_c('td',{attrs:{\"colspan\":\"9\"}},[_c('button',{staticStyle:{\"float\":\"right\"},attrs:{\"title\":\"Issues: not work\"},on:{\"click\":_vm.removeAll}},[_vm._v(\"Remove all\")]),_vm._v(\" \"),_c('button',{staticStyle:{\"float\":\"right\"},attrs:{\"title\":\"Issues: not work ??\"},on:{\"click\":_vm.reload}},[_vm._v(\"reload\")]),_vm._v(\" \"),_c('button',{staticStyle:{\"float\":\"right\"},on:{\"click\":_vm.killAll}},[_vm._v(\"Kill all\")])])]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('tr',{staticClass:\"item new-item\",on:{\"mouseover\":function($event){_vm.showPreview($event,_vm.m)},\"mouseleave\":_vm.hidePreview}},[_c('td',[_c('button',{staticClass:\"input\",on:{\"click\":_vm.addSpawn}},[_vm._v(\"add\")])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.m.id),expression:\"m.id\"}],staticClass:\"input-mobid\",attrs:{\"type\":\"number\",\"id\":\"mob-id\",\"min\":\"1\",\"max\":\"9999999\"},domProps:{\"value\":(_vm.m.id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"id\", $event.target.value)}}})]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.m.type),expression:\"m.type\"}],attrs:{\"id\":\"mob-type\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.m, \"type\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"m\"}},[_vm._v(\"Mob\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"n\"}},[_vm._v(\"Npc\")])])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.x),expression:\"m.x\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-x\"},domProps:{\"value\":(_vm.m.x)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"x\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.cy),expression:\"m.cy\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-y\"},domProps:{\"value\":(_vm.m.cy)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"cy\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.m.f),expression:\"m.f\"}],staticClass:\"input\",attrs:{\"type\":\"checkbox\",\"id\":\"mob-flip\"},domProps:{\"checked\":Array.isArray(_vm.m.f)?_vm._i(_vm.m.f,null)>-1:(_vm.m.f)},on:{\"change\":function($event){var $$a=_vm.m.f,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.m, \"f\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.m, \"f\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.m, \"f\", $$c)}}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.fh),expression:\"m.fh\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-fh\"},domProps:{\"value\":(_vm.m.fh)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"fh\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.rx0),expression:\"m.rx0\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-rx0\"},domProps:{\"value\":(_vm.m.rx0)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"rx0\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.rx1),expression:\"m.rx1\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-rx1\"},domProps:{\"value\":(_vm.m.rx1)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"rx1\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.spawns),function(spawn,index){return _c('tr',{staticClass:\"item\",on:{\"mouseover\":function($event){_vm.showPreview($event,spawn)},\"mouseleave\":_vm.hidePreview}},[_c('td',[_c('button',{staticClass:\"input\",staticStyle:{\"text-align\":\"center\"},attrs:{\"title\":\"preview\"}},[_vm._v(_vm._s(index))])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(spawn.id),expression:\"spawn.id\"}],staticClass:\"input-mobid\",attrs:{\"type\":\"number\",\"min\":\"1\",\"max\":\"9999999\"},domProps:{\"value\":(spawn.id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"id\", $event.target.value)}}})]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(spawn.type),expression:\"spawn.type\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(spawn, \"type\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"m\"}},[_vm._v(\"Mob\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"n\"}},[_vm._v(\"Npc\")])])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.x),expression:\"spawn.x\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.x)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"x\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.cy),expression:\"spawn.cy\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.cy)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"cy\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(spawn.f),expression:\"spawn.f\"}],staticClass:\"input\",attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(spawn.f)?_vm._i(spawn.f,null)>-1:(spawn.f)},on:{\"change\":function($event){var $$a=spawn.f,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(spawn, \"f\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(spawn, \"f\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(spawn, \"f\", $$c)}}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.fh),expression:\"spawn.fh\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.fh)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"fh\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.rx0),expression:\"spawn.rx0\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.rx0)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"rx0\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.rx1),expression:\"spawn.rx1\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.rx1)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"rx1\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])])}))])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',[_c('label',{attrs:{\"for\":\"mob-preview\"}},[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t#\\n\\t\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-id\"}},[_vm._v(\"ID\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-type\"}},[_vm._v(\"type\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-x\"}},[_vm._v(\"x\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-y\"}},[_vm._v(\"y\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-flip\"}},[_vm._v(\"flip\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-fh\"}},[_vm._v(\"fh\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-rx0\"}},[_vm._v(\"rx0\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-rx1\"}},[_vm._v(\"rx1\")])])])}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div>\r\n\t\t<div style=\"display: none;\">{{aaaa}}</div>\r\n\t\t<template v-for=\"(obj, index) in objs\">\r\n\t\t\t<div>\r\n\t\t\t\t<div @click=\"scrollIntoView($event,obj)\" :style=\"get_ObjPath_style(obj)\" class=\"info sticky\" title=\"select it and scroll into view\">\r\n\t\t\t\t\t<span>[{{index}}]</span>\r\n\t\t\t\t\t<span @contextmenu.prevent=\"copyToClipboard($event,obj._url)\" class=\"text\" >{{obj._url}}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"view\">\r\n\t\t\t\t\t<div v-if=\"displayMode!=2\" class=\"info\">\r\n\t\t\t\t\t\t<table class=\"table\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>type(sign)</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.type\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>x</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.x\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>y</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.y\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>z</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.z\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>zM</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.zM\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>flip</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.f\" type=\"number\" min=\"0\" max=\"1\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<template v-if=\"obj.typeb!=null\">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>typeb</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<!--<input-number v-model.number=\"obj.typeb\" min=\"0\" max=\"7\" type=\"number\" class=\"input\" />-->\r\n\t\t\t\t\t\t\t\t\t\t<input-select v-model.number=\"obj.typeb\" class=\"input\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"0\" title=\"\">default</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\" title=\"horizontal fill\">repeat-x</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\" title=\"vertical fill\">repeat-y</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\" title=\"fill\">fill</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\" title=\"horizontal roll\">roll-x</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\" title=\"vertical roll\">roll-y</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\" title=\"horizontal fill roll\">fill roll-x</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\" title=\"vertical fill roll\">fill roll-y</option>\r\n\t\t\t\t\t\t\t\t\t\t</input-select>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>a</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.a\" min=\"0\" max=\"255\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowRX(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>rx</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.rx\" type=\"number\" class=\"input\" title=\"橫向滾動速度\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowRY(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>ry</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.ry\" type=\"number\" class=\"input\" title=\"縱向滾動速度\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowCX(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>cx</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.cx\" type=\"number\" min=\"0\" class=\"input\" title=\"橫向間隔\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowCY(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>cy</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.cy\" type=\"number\" min=\"0\" class=\"input\" title=\"縱向間隔\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-else class=\"info\">\r\n\t\t\t\t\t\t<div>{{obj.constructor.name}}</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<table class=\"tb\">\r\n\t\t\t\t\t\t\t\t<tr v-for=\"(val, key) in obj._raw\">\r\n\t\t\t\t\t\t\t\t\t<td>{{key}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{val}}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"obj.textures.length && obj.textures[obj.frame].texture\" class=\"imgbox\">\r\n\t\t\t\t\t\t<div class=\"info\">\r\n\t\t\t\t\t\t\t<template v-if=\"obj.textures[obj.frame]._url.length > 300\">\r\n\t\t\t\t\t\t\t\t<a>...</a>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t\t<a :href=\"obj.textures[obj.frame]._url\">\r\n\t\t\t\t\t\t\t\t\t{{obj._texture_base_path}}<span v-if=\"obj.constructor.name!='MapBackBase'\" class=\"red-text\">/{{obj.frame}}</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div><img :src=\"obj.textures[obj.frame].texture.src\" class=\"img\"></img></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"displayMode==1\" class=\"info\">\r\n\t\t\t\t\t\t<table v-if=\"obj.textures.length && obj.textures[obj.frame].texture\" class=\"table\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>frame</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.frame\" :min=\"0\" :max=\"obj.textures.length-1\" @input=\"fupdate\" type=\"number\" class=\"input-sm\" /> / {{obj.textures.length-1}}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>center:</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-xy\">\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].x\" type=\"number\" />\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].y\" type=\"number\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>size:</td>\r\n\t\t\t\t\t\t\t\t<td>{{obj.textures[obj.frame]._raw.__h}} * {{obj.textures[obj.frame]._raw.__h}}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>opacity</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-xy\">\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].a0\" type=\"number\" class=\"input\" />\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].a1\" type=\"number\" class=\"input\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>delay</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].delay\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>move</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<!--<input-number v-model.number=\"obj.textures[obj.frame].movetype\" min=\"0\" max=\"3\" type=\"number\" class=\"input\" />-->\r\n\t\t\t\t\t\t\t\t\t<input-select v-model.number=\"obj.textures[obj.frame].movetype\" class=\"input\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"0\" title=\"\">static</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\" title=\"\">橫向移動</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\" title=\"\">縱向移動</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\" title=\"\">旋轉</option>\r\n\t\t\t\t\t\t\t\t\t</input-select>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-if=\"obj.textures[obj.frame].movetype==1\">\r\n\t\t\t\t\t\t\t\t<td>moveW</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].movew\" type=\"number\" class=\"input\" title=\"移動寬\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-else-if=\"obj.textures[obj.frame].movetype==2\">\r\n\t\t\t\t\t\t\t\t<td>moveH</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].moveh\" type=\"number\" class=\"input\" title=\"移動高\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-if=\"obj.textures[obj.frame].movetype==3\">\r\n\t\t\t\t\t\t\t\t<td>moveR</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].mover\" type=\"number\" class=\"input\" title=\"旋轉週期(ms/π)\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-else-if=\"obj.textures[obj.frame].movetype!=0\">\r\n\t\t\t\t\t\t\t\t<td>moveP</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].movep\" type=\"number\" class=\"input\" title=\"移動週期\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"displayMode==2 || obj.constructor.name.endsWith('SkeletalAnim')\" class=\"info\">\r\n\t\t\t\t\t\t<table class=\"tb\">\r\n\t\t\t\t\t\t\t<tr v-for=\"(val, key) in obj._raw\">\r\n\t\t\t\t\t\t\t\t<td>{{key}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{val}}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n\tprops: [\"objs\", \"displayMode\"],\r\n\t//props: {\r\n\t//\tobjs: {\r\n\t//\t\ttype: MapObjectBase,\r\n\t//\t\trequired: true\r\n\t//\t},\r\n\t//},\r\n\tdata: function () {\r\n\t\treturn {\r\n\t\t\taaaa: 0,\r\n\t\t};\r\n\t},\r\n\tmethods: {\r\n\t\tisShowRX: function (typeb) {\r\n\t\t\treturn typeb == 4 || typeb == 5;\r\n\t\t},\r\n\t\tisShowRY: function (typeb) {\r\n\t\t\treturn typeb == 5 || typeb == 7;\r\n\t\t},\r\n\t\tisShowCX: function (typeb) {\r\n\t\t\treturn typeb == 1 || typeb == 3 || typeb == 4 || typeb == 6 || typeb == 7;\r\n\t\t},\r\n\t\tisShowCY: function (typeb) {\r\n\t\t\treturn typeb == 2 || typeb == 3 || typeb == 5 || typeb == 6 || typeb == 7;\r\n\t\t},\r\n\t\tget_ObjPath_style: function (obj) {\r\n\t\t\tlet style = obj.display_aabb ? { background:obj.aabb_color } : { };\r\n\t\t\tstyle[\"border-bottom\"] = \"1px solid black\";\r\n\t\t\treturn style;\r\n\t\t},\r\n\t\tscrollIntoView: function(event, obj) {\r\n\t\t\tconst center = obj.aabb.center;\r\n\t\t\t$gv.m_viewRect.setCenter(center.x, center.y);\r\n\t\t\tobj.$select();\r\n\t\t\t\r\n\t\t\tevent.currentTarget.scrollIntoView();\r\n\r\n\t\t\tthis.aaaa++;\r\n\t\t},\r\n\t\tfupdate: function () {\r\n\t\t\tthis.$forceUpdate();\r\n\t\t},\r\n\t\tcopyToClipboard: function (event, text) {\r\n\t\t\t//window.copyToClipboard(text);\r\n\t\t\twindow.SelectText(event.currentTarget);\r\n\t\t},\r\n\t},\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.sticky {\r\n\tposition: sticky;\r\n\tleft: 0;\r\n\ttop: 0;\r\n}\r\n\r\n.info {\r\n\tbackground: #f5f5f5;\r\n}\r\n\r\n.view {\r\n\tdisplay: flex;\r\n}\r\n.view > div {\r\n\tflex: 100;\r\n}\r\n\r\n.imgbox {\r\n\tflex: 80;\r\n}\r\n\r\n.table {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n.input {\r\n\twidth: 5em;\r\n}\r\n\r\n.input-xy {\r\n\twidth: 8em;\r\n}\r\n.input-xy > * {\r\n\twidth: 4em;\r\n}\r\n\r\n.img {\r\n\tmax-width: 25vh;\r\n\tmax-height: 25vh;\r\n\tborder-bottom: 1px solid red;\r\n\tborder-left: 1px solid green;\r\n}\r\n\r\n.text {\r\n\tuser-select: text;\r\n}\r\n\r\n.red-text {\r\n\tcolor: red;\r\n}\r\n\r\n.tb, .tb td {\r\n\tborder: 1px solid black;\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n\tuser-select: text;\r\n}\r\n\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-map-editor.vue?vue&type=template&id=6e4fb2d8&scoped=true&\"\nimport script from \"./ui-map-editor.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-map-editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e4fb2d8\",\n  null\n  \n)\n\ncomponent.options.__file = \"ui-map-editor.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"display\":\"none\"}},[_vm._v(_vm._s(_vm.aaaa))]),_vm._v(\" \"),_vm._l((_vm.objs),function(obj,index){return [_c('div',[_c('div',{staticClass:\"info sticky\",style:(_vm.get_ObjPath_style(obj)),attrs:{\"title\":\"select it and scroll into view\"},on:{\"click\":function($event){_vm.scrollIntoView($event,obj)}}},[_c('span',[_vm._v(\"[\"+_vm._s(index)+\"]\")]),_vm._v(\" \"),_c('span',{staticClass:\"text\",on:{\"contextmenu\":function($event){$event.preventDefault();_vm.copyToClipboard($event,obj._url)}}},[_vm._v(_vm._s(obj._url))])]),_vm._v(\" \"),_c('div',{staticClass:\"view\"},[(_vm.displayMode!=2)?_c('div',{staticClass:\"info\"},[_c('table',{staticClass:\"table\"},[_c('tr',[_c('td',[_vm._v(\"type(sign)\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.type),callback:function ($$v) {_vm.$set(obj, \"type\", _vm._n($$v))},expression:\"obj.type\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"x\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.x),callback:function ($$v) {_vm.$set(obj, \"x\", _vm._n($$v))},expression:\"obj.x\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"y\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.y),callback:function ($$v) {_vm.$set(obj, \"y\", _vm._n($$v))},expression:\"obj.y\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"z\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.z),callback:function ($$v) {_vm.$set(obj, \"z\", _vm._n($$v))},expression:\"obj.z\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"zM\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.zM),callback:function ($$v) {_vm.$set(obj, \"zM\", _vm._n($$v))},expression:\"obj.zM\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"flip\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"1\"},model:{value:(obj.f),callback:function ($$v) {_vm.$set(obj, \"f\", _vm._n($$v))},expression:\"obj.f\"}})],1)]),_vm._v(\" \"),(obj.typeb!=null)?[_c('tr',[_c('td',[_vm._v(\"typeb\")]),_vm._v(\" \"),_c('td',[_c('input-select',{staticClass:\"input\",model:{value:(obj.typeb),callback:function ($$v) {_vm.$set(obj, \"typeb\", _vm._n($$v))},expression:\"obj.typeb\"}},[_c('option',{attrs:{\"value\":\"0\",\"title\":\"\"}},[_vm._v(\"default\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"1\",\"title\":\"horizontal fill\"}},[_vm._v(\"repeat-x\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\",\"title\":\"vertical fill\"}},[_vm._v(\"repeat-y\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"3\",\"title\":\"fill\"}},[_vm._v(\"fill\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"4\",\"title\":\"horizontal roll\"}},[_vm._v(\"roll-x\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"5\",\"title\":\"vertical roll\"}},[_vm._v(\"roll-y\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"6\",\"title\":\"horizontal fill roll\"}},[_vm._v(\"fill roll-x\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"7\",\"title\":\"vertical fill roll\"}},[_vm._v(\"fill roll-y\")])])],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"a\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"min\":\"0\",\"max\":\"255\",\"type\":\"number\"},model:{value:(obj.a),callback:function ($$v) {_vm.$set(obj, \"a\", _vm._n($$v))},expression:\"obj.a\"}})],1)]),_vm._v(\" \"),(_vm.isShowRX(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"rx\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"橫向滾動速度\"},model:{value:(obj.rx),callback:function ($$v) {_vm.$set(obj, \"rx\", _vm._n($$v))},expression:\"obj.rx\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.isShowRY(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"ry\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"縱向滾動速度\"},model:{value:(obj.ry),callback:function ($$v) {_vm.$set(obj, \"ry\", _vm._n($$v))},expression:\"obj.ry\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.isShowCX(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"cx\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"min\":\"0\",\"title\":\"橫向間隔\"},model:{value:(obj.cx),callback:function ($$v) {_vm.$set(obj, \"cx\", _vm._n($$v))},expression:\"obj.cx\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.isShowCY(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"cy\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"min\":\"0\",\"title\":\"縱向間隔\"},model:{value:(obj.cy),callback:function ($$v) {_vm.$set(obj, \"cy\", _vm._n($$v))},expression:\"obj.cy\"}})],1)]):_vm._e()]:_vm._e()],2)]):_c('div',{staticClass:\"info\"},[_c('div',[_vm._v(_vm._s(obj.constructor.name))]),_vm._v(\" \"),_c('div',[_c('table',{staticClass:\"tb\"},_vm._l((obj._raw),function(val,key){return _c('tr',[_c('td',[_vm._v(_vm._s(key))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(val))])])}))])]),_vm._v(\" \"),(obj.textures.length && obj.textures[obj.frame].texture)?_c('div',{staticClass:\"imgbox\"},[_c('div',{staticClass:\"info\"},[(obj.textures[obj.frame]._url.length > 300)?[_c('a',[_vm._v(\"...\")])]:[_c('a',{attrs:{\"href\":obj.textures[obj.frame]._url}},[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\"+_vm._s(obj._texture_base_path)),(obj.constructor.name!='MapBackBase')?_c('span',{staticClass:\"red-text\"},[_vm._v(\"/\"+_vm._s(obj.frame))]):_vm._e()])]],2),_vm._v(\" \"),_c('div',[_c('img',{staticClass:\"img\",attrs:{\"src\":obj.textures[obj.frame].texture.src}})])]):_vm._e(),_vm._v(\" \"),(_vm.displayMode==1)?_c('div',{staticClass:\"info\"},[(obj.textures.length && obj.textures[obj.frame].texture)?_c('table',{staticClass:\"table\"},[_c('tr',[_c('td',[_vm._v(\"frame\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input-sm\",attrs:{\"min\":0,\"max\":obj.textures.length-1,\"type\":\"number\"},on:{\"input\":_vm.fupdate},model:{value:(obj.frame),callback:function ($$v) {_vm.$set(obj, \"frame\", _vm._n($$v))},expression:\"obj.frame\"}}),_vm._v(\" / \"+_vm._s(obj.textures.length-1))],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"center:\")]),_vm._v(\" \"),_c('td',[_c('div',{staticClass:\"input-xy\"},[_c('input-number',{attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].x),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"x\", _vm._n($$v))},expression:\"obj.textures[obj.frame].x\"}}),_vm._v(\" \"),_c('input-number',{attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].y),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"y\", _vm._n($$v))},expression:\"obj.textures[obj.frame].y\"}})],1)])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"size:\")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(obj.textures[obj.frame]._raw.__h)+\" * \"+_vm._s(obj.textures[obj.frame]._raw.__h))])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"opacity\")]),_vm._v(\" \"),_c('td',[_c('div',{staticClass:\"input-xy\"},[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].a0),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"a0\", _vm._n($$v))},expression:\"obj.textures[obj.frame].a0\"}}),_vm._v(\" \"),_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].a1),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"a1\", _vm._n($$v))},expression:\"obj.textures[obj.frame].a1\"}})],1)])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"delay\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].delay),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"delay\", _vm._n($$v))},expression:\"obj.textures[obj.frame].delay\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"move\")]),_vm._v(\" \"),_c('td',[_c('input-select',{staticClass:\"input\",model:{value:(obj.textures[obj.frame].movetype),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"movetype\", _vm._n($$v))},expression:\"obj.textures[obj.frame].movetype\"}},[_c('option',{attrs:{\"value\":\"0\",\"title\":\"\"}},[_vm._v(\"static\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"1\",\"title\":\"\"}},[_vm._v(\"橫向移動\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\",\"title\":\"\"}},[_vm._v(\"縱向移動\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"3\",\"title\":\"\"}},[_vm._v(\"旋轉\")])])],1)]),_vm._v(\" \"),(obj.textures[obj.frame].movetype==1)?_c('tr',[_c('td',[_vm._v(\"moveW\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"移動寬\"},model:{value:(obj.textures[obj.frame].movew),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"movew\", _vm._n($$v))},expression:\"obj.textures[obj.frame].movew\"}})],1)]):(obj.textures[obj.frame].movetype==2)?_c('tr',[_c('td',[_vm._v(\"moveH\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"移動高\"},model:{value:(obj.textures[obj.frame].moveh),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"moveh\", _vm._n($$v))},expression:\"obj.textures[obj.frame].moveh\"}})],1)]):_vm._e(),_vm._v(\" \"),(obj.textures[obj.frame].movetype==3)?_c('tr',[_c('td',[_vm._v(\"moveR\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"旋轉週期(ms/π)\"},model:{value:(obj.textures[obj.frame].mover),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"mover\", _vm._n($$v))},expression:\"obj.textures[obj.frame].mover\"}})],1)]):(obj.textures[obj.frame].movetype!=0)?_c('tr',[_c('td',[_vm._v(\"moveP\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"移動週期\"},model:{value:(obj.textures[obj.frame].movep),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"movep\", _vm._n($$v))},expression:\"obj.textures[obj.frame].movep\"}})],1)]):_vm._e(),_vm._v(\" \"),_vm._m(0,true)]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.displayMode==2 || obj.constructor.name.endsWith('SkeletalAnim'))?_c('div',{staticClass:\"info\"},[_c('table',{staticClass:\"tb\"},_vm._l((obj._raw),function(val,key){return _c('tr',[_c('td',[_vm._v(_vm._s(key))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(val))])])}))]):_vm._e()])]),_vm._v(\" \"),_c('hr')]})],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td'),_vm._v(\" \"),_c('td')])}]\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<div @contextmenu.self.prevent=\"\" class=\"dialog-group Editor\">\r\n\t\t\r\n\t\t<ui-dialog :title=\"wnds.menu.name\" ref=\"menu\">\r\n\t\t\t<template slot=\"header\">\r\n\t\t\t\tMenu\r\n\t\t\t</template>\r\n\t\t\t<template>\r\n\t\t\t\t<details open>\r\n\t\t\t\t\t<summary>bgm</summary>\r\n\t\t\t\t\t<div ref=\"bgm_outer\"></div>\r\n\t\t\t\t</details>\r\n\t\t\t\t<details open>\r\n\t\t\t\t\t<summary>window</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<div v-for=\"(wnd, key) in wnds\" v-if=\"!wnd.name.startsWith('$')\">\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"wnd.visable\" @click=\"$refs[key]?$refs[key].requireOrder($event):undefined\" checked /> {{wnd.name}}\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t</template>\r\n\t\t\t<template>\r\n\t\t\t\t<details>\r\n\t\t\t\t\t<summary>scene</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\tMap <input @keydown.enter=\"gv.scene_map.load($event.target.value.padStart(9, '0'))\" />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>map</legend>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_is_rendering_map\" />Map</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_back\" />back</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_front\" />front</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_mapobj\" />object</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_maptile\" />tile</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_portal\" />portal</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>map</legend>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_particle_system\" />particle system</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_skeletal_anim\" />skeletal animation</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>life</legend>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_life\" />life</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_player\" />player</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_other_player\" />other player</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>character</legend>\r\n\t\t\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"gv.m_display_name_label\" />顯示名牌</label></div>\r\n\t\t\t\t\t\t\t\t<div><label>名牌<input type=\"number\" min=\"0\" v-model=\"gv.NameLabel_default_style\" /></label></div>\r\n\t\t\t\t\t\t\t\t<div><label>聊天<input type=\"number\" min=\"0\" v-model.number=\"gv.ChatBalloon_default_style\" /></label></div>\r\n\t\t\t\t\t\t\t\t<div><label>聊天顯示時間<input type=\"number\" min=\"0\" v-model.number=\"gv.ChatBalloon_display_duration\" />毫秒</label></div>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t\t<details>\r\n\t\t\t\t\t<summary>editor</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_foothold\" /> foothold</label>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_selected_object\" /> selected object</label>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t\t<details>\r\n\t\t\t\t\t<summary>debug</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"gv.m_display_debug_info\" /> debug info</label></div>\r\n\r\n\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"gv.m_display_physics_debug\" /> physics debug</label></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div v-for=\"flagName in gv.m_debugDraw.flagNames\">\r\n\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model.number=\"gv.m_debugDraw[flagName]\" /> {{flagName.slice(5)}}</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>axis length <input type=\"number\" v-model=\"gv.m_debugDraw.axis_length\" step=\"0.1\" /></label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t</template>\r\n\t\t</ui-dialog>\r\n\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-dialog :title=\"wnds.character_list.name\" ref=\"character_list\" v-show=\"wnds.character_list.visable\">\r\n\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\tCharacters\r\n\t\t\t\t\t<template v-if=\"progressMaximum\">\r\n\t\t\t\t\t\t[loading: {{progressValue}} / {{progressMaximum}}]\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t<div :style=\"{filter: 'blur(' + (progressMaximum?3:0) + 'px)'}\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>{{charaList.length}} characters</span>\r\n\t\t\t\t\t\t\t<div class=\"chara-ls-btn-group\">\r\n\t\t\t\t\t\t\t\t<button @click=\"addNewChara\" class=\"chara-ls-btn\" title=\"Add new\"><img src=\"images/toolstrip_character.png\" alt=\"Add new\" /></button>\r\n\t\t\t\t\t\t\t\t<button @click=\"addCloneChara\" class=\"chara-ls-btn\" title=\"Add clone\"><img src=\"images/toolstrip_duplicate.png\" alt=\"Add clone\" /></button>\r\n\t\t\t\t\t\t\t\t<button @click=\"loadCharacters\" class=\"chara-ls-btn\" title=\"Load\"><span class=\"ui-icon ui-icon-folder-open\" alt=\"📂\"></span></button>\r\n\t\t\t\t\t\t\t\t<button @click=\"saveCharacters\" class=\"chara-ls-btn\" title=\"Save all\"><img src=\"images/toolstrip_save_all.png\" alt=\"Save all\" /></button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ui-sortable :items=\"charaList\" @input=\"oninput_sort\" class=\"ui-character-list\">\r\n\t\t\t\t\t\t\t<template slot-scope=\"{item, index}\">\r\n\t\t\t\t\t\t\t\t<li :id=\"item.id\" @mousedown.left=\"selectChara(item.id)\" :class=\"[(selected == item.id ? 'active':''), item.id].join(' ')\" :title=\"item.id\" :key=\"item.id\" style=\"width: 100%;\">\r\n\t\t\t\t\t\t\t\t\t<table style=\"width:100%;\">\r\n\t\t\t\t\t\t\t\t\t\t<tr @contextmenu.prevent=\"openCharacterDLMenu($event, item.id);\">\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{{index}}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{{item.id}}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"position: relative;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ui-character :chara=\"item.renderer\"></ui-character>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</ui-sortable>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"progressMaximum\" class=\"loading\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<progress :value=\"progressValue\" :max=\"progressMaximum\"></progress>\r\n\t\t\t\t\t\t\t<div>loading [{{progressValue}} / {{progressMaximum}}]</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-dialog>\r\n\t\t</transition>\r\n\t\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-dialog :title=\"wnds.character_attribute.name\" ref=\"character_attribute\" v-show=\"wnds.character_attribute.visable\">\r\n\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\tCharacter attribute\r\n\t\t\t\t</template>\r\n\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t<div v-if=\"chara!=null\">\r\n\t\t\t\t\t\t<ui-character-attribute :sceneChara=\"chara\"></ui-character-attribute>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-dialog>\r\n\t\t</transition>\r\n\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-dialog :title=\"wnds.spawnpoint.name\" ref=\"spawnpoint\" v-show=\"wnds.spawnpoint.visable\">\r\n\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\tSpawn point\r\n\t\t\t\t</template>\r\n\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t<ui-mob-list @resize=\"$refs.spawnpoint.reset_content_style()\"></ui-mob-list>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-dialog>\r\n\t\t</transition>\r\n\t\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-dialog :title=\"wnds.equip_box.name\" ref=\"equip_box\" v-show=\"wnds.equip_box.visable\">\r\n\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\tEquip box\r\n\t\t\t\t</template>\r\n\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t<ui-equip-box @clickItem=\"clickItem\"\r\n\t\t\t\t\t\t\t\t  @hoverItem=\"hoverItem\"\r\n\t\t\t\t\t\t\t\t  @mouseleaveItem=\"mouseleaveItem\"\r\n\t\t\t\t\t\t\t\t  @faceColor=\"faceColor\"\r\n\t\t\t\t\t\t\t\t  @hairColor=\"hairColor\"\r\n\t\t\t\t\t\t\t\t  @hairColor2=\"hairColor2\"\r\n\t\t\t\t\t\t\t\t  @hairMix2=\"hairMix2\"\r\n\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t</ui-equip-box>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-dialog>\r\n\t\t</transition>\r\n\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<template v-if=\"mapEditorMode.startsWith('layered')\">\r\n\t\t\t\t<ui-dialog :title=\"wnds.debug_window.name\" ref=\"debug_window\" v-show=\"wnds.debug_window.visable\">\r\n\t\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\t\t<select v-model=\"mapEditorMode\">\r\n\t\t\t\t\t\t\t<option value=\"background\">background</option>\r\n\t\t\t\t\t\t\t<option value=\"frontground\">frontground</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredObject\">layered object</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredTile\">layered tile</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\tmode <input v-model=\"displayMode\" type=\"number\" min=\"0\" max=\"2\" style=\"width: 1.8em;\">\r\n\t\t\t\t\t\t<button @click=\"dirty++\">{{dirty}}</button>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t\t<div v-if=\"scene_map() && scene_map()[mapEditorMode].length\" :style=\"wnd_debug_style\">\r\n\t\t\t\t\t\t\t<div style=\"background: white;\">\r\n\t\t\t\t\t\t\t\t<input v-model=\"wnd_debug_style.background\" type=\"color\" title=\"window background color\" />\r\n\t\t\t\t\t\t\t\t<label>layer <select v-model=\"selectedLayer\">\r\n\t\t\t\t\t\t\t\t\t\t<option v-for=\"layer in scene_map()[mapEditorMode].length\">{{layer - 1}}</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<span>{{scene_map()[mapEditorMode][selectedLayer].length}} objs</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<ui-map-editor :objs=\"scene_map()[mapEditorMode][selectedLayer]\" :displayMode=\"displayMode\"></ui-map-editor>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</ui-dialog>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<ui-dialog :title=\"wnds.debug_window.name\" v-show=\"wnds.debug_window.visable\">\r\n\t\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\t\t<select v-model=\"mapEditorMode\">\r\n\t\t\t\t\t\t\t<option value=\"background\">background</option>\r\n\t\t\t\t\t\t\t<option value=\"frontground\">frontground</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredObject\">layered object</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredTile\">layered tile</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\ttex info <input v-model=\"displayMode\" type=\"number\" min=\"0\" max=\"2\" style=\"width: 1.8em;\">\r\n\t\t\t\t\t\t<button @click=\"dirty--\">{{dirty}}</button>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t\t<div v-if=\"scene_map() && scene_map()[mapEditorMode].length\" :style=\"wnd_debug_style\">\r\n\t\t\t\t\t\t\t<div style=\"background: white;\">\r\n\t\t\t\t\t\t\t\t<input v-model=\"wnd_debug_style.background\" type=\"color\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<ui-map-editor :objs=\"scene_map()[mapEditorMode]\" :displayMode=\"displayMode\"></ui-map-editor>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</ui-dialog>\r\n\t\t\t</template>\r\n\t\t</transition>\r\n\t\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-menu :show=\"is_show_chara_dl_menu\" ref=\"chara_dl_menu\" @close=\"closeCharacterDLMenu\" style=\"position: absolute; width: 8em; z-index: 99999;\">\r\n\t\t\t\t<template v-if=\"chara\">\r\n\t\t\t\t\t<a @click=\"_save_as_png\">Save as PNG</a>\r\n\t\t\t\t\t<a @click=\"chara.renderer._save_as_svg()\">Save as SVG</a>\r\n\t\t\t\t\t<template v-if=\"progressMaximum == 0 || progressValue >= progressMaximum\">\r\n\t\t\t\t\t\t<a :href=\"chara.renderer._outlink()\">Outlink</a>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t<div title=\"loading...\">Outlink</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<a @click=\"copyCharaCode\">Copy code</a>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t<a class=\"disable\">Save as SVG</a>\r\n\t\t\t\t\t<a class=\"disable\" href=\"javascript:void(0)\">Outlink</a>\r\n\t\t\t\t\t<a class=\"disable\">Copy code</a>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-menu>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport Vuex from 'vuex';\r\n\r\n\timport UIDraggable from '../components/ui-draggable.vue';\r\n\timport UIDialog from '../components/ui-dialog.vue';\r\n\timport UISortable from '../components/ui-sortable.vue';\r\n\timport UITrigger from '../components/ui-trigger.vue';\r\n\timport UIMenu from '../components/ui-menu.vue';\r\n\r\n\timport UIEquipBox from './ui-equip-box.vue';\r\n\timport UICharacter from './ui-character.vue';\r\n\timport UICharacterSVG from './ui-character-svg.vue';\r\n\timport UICharacterAttribute from './ui-character-attribute.vue';\r\n\r\n\timport UIMobList from \"./ui-mob-list.vue\";\r\n\timport UIMapEditor from \"./ui-map-editor.vue\";\r\n\r\n\t//import { GameStateManager } from '../game/GameState.js';\r\n\r\n\timport { ItemCategoryInfo } from '../../public/javascripts/resource.js';\r\n\timport { BaseSceneCharacter, SceneCharacter, SceneRemoteCharacter } from '../game/SceneCharacter.js';\r\n\r\n\timport { engine } from '../game/Engine.js';\r\n\r\n\tconst store = new Vuex.Store({\r\n\t\t//strict: process.env.NODE_ENV !== 'production',\r\n\t\tstate: {\r\n\t\t\tcharaList: [],\r\n\t\t\tchara: null,/** @type {BaseSceneCharacter} chara */\r\n\t\t\tselected: null,/** @type {string} id */\r\n\t\t\t_last_id: 0,\r\n\r\n\t\t\tprogressValue: 0,\r\n\t\t\tprogressMaximum: 0,\r\n\t\t},\r\n\t\tgetters: {\r\n\t\t\tlastId: function (state, getters) {\r\n\t\t\t\treturn \"chara_\" + state._last_id;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmutations: {\r\n\t\t\tclear: function (state) {\r\n\t\t\t\tstate.charaList = [];\r\n\t\t\t},\r\n\t\t\tincreaseId(state) {\r\n\t\t\t\tstate._last_id += 1;\r\n\t\t\t},\r\n\t\t\tincreaseProgress: function (state, payload) {\r\n\t\t\t\tstate.progressValue += payload.amount;\r\n\t\t\t\tif (state.progressValue >= state.progressMaximum) {\r\n\t\t\t\t\tstate.progressValue = 0;\r\n\t\t\t\t\tstate.progressMaximum = 0;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tincreaseProgressMax: function (state, payload) {\r\n\t\t\t\tstate.progressMaximum += payload.amount;\r\n\t\t\t},\r\n\t\t\t//decreaseProgress: function (state, payload) {\r\n\t\t\t//},\r\n\t\t},\r\n\t\tactions: {\r\n\t\t\tisIdExist: function (context, payload) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tif (payload && payload.id) {\r\n\t\t\t\t\tconst id = payload.id;\r\n\t\t\t\t\tfor (let i = 0; i < state.charaList.length; ++i) {\r\n\t\t\t\t\t\tlet chara = state.charaList[i];\r\n\t\t\t\t\t\tif (chara.id == id) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tsortCharaById: function (context, payload) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tstate.charaList = state.charaList.sort((a, b) => {\r\n\t\t\t\t\tconst na = get_n(a.id);\r\n\t\t\t\t\tconst nb = get_n(b.id);\r\n\r\n\t\t\t\t\treturn na - nb;\r\n\r\n\t\t\t\t\tfunction get_n(id) {\r\n\t\t\t\t\t\tif (!a) return 0;\r\n\t\t\t\t\t\tlet n = Number(id).split(\"_\")[1];\r\n\t\t\t\t\t\treturn n | 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tselectChara: function (context, payload) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tconst id = payload.id;\r\n\r\n\t\t\t\tlet index = -1;\r\n\t\t\t\tfor (let i = 0; i < state.charaList.length; ++i) {\r\n\t\t\t\t\tconst chara = state.charaList[i];\r\n\t\t\t\t\tif (chara.id == id) {\r\n\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t/** @type {SceneCharacter} */\r\n\t\t\t\t\tconst selected_chara = state.charaList[index];\r\n\t\t\t\t\tif (selected_chara.$remote) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (state.chara) {\r\n\t\t\t\t\t\t\tstate.chara.enablePhysics = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\tselected_chara.enablePhysics = true;\r\n\t\t\t\t\t\tif (selected_chara.$physics) {\r\n\t\t\t\t\t\t\tconst x = selected_chara.renderer.x / $gv.CANVAS_SCALE;\r\n\t\t\t\t\t\t\tconst y = selected_chara.renderer.y / $gv.CANVAS_SCALE;\r\n\t\t\t\t\t\t\tselected_chara.$physics.setPosition(x, y, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twindow.chara = state.chara = selected_chara;\r\n\t\t\t\t\t//\r\n\t\t\t\t\tstate.selected = id;\r\n\r\n\t\t\t\t\treturn id;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_addChara: async function (context, payload) {//add exist\r\n\t\t\t\tconst state = context.state;\r\n\r\n\t\t\t\tif (payload && payload.chara instanceof BaseSceneCharacter) {\r\n\t\t\t\t\tconst chara = payload.chara;\r\n\r\n\t\t\t\t\tawait chara.renderer.__synchronize();\r\n\r\n\t\t\t\t\tstate.charaList.push(chara);\r\n\r\n\t\t\t\t\tcontext.dispatch('selectChara', {\r\n\t\t\t\t\t\tid: chara.id,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tcontext.commit(\"increaseProgress\", { amount: 1 });\r\n\r\n\t\t\t\t\treturn chara;\r\n\t\t\t\t}\r\n\t\t\t\tdebugger;\r\n\t\t\t},\r\n\t\t\t_createChara: async function (context, payload) {\r\n\t\t\t\tconst scene_map = window.scene_map;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (scene_map && scene_map.$promise) {\r\n\t\t\t\t\t\tawait scene_map.$promise;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ex) {\r\n\t\t\t\t\tthrow ex;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (window.$io && payload && payload.remote_chara) {\r\n\t\t\t\t\t//alert(\"dont use _createChara in online mode\");\r\n\t\t\t\t\t//return;\r\n\t\t\t\t\tpayload.emplace = payload.remote_chara;\r\n\t\t\t\t}\r\n\t\t\t\tconst state = context.state;\r\n\r\n\t\t\t\tcontext.commit(\"increaseId\");\r\n\t\t\t\tconst id = context.getters.lastId;\r\n\r\n\t\t\t\t/** @type {SceneCharacter} */\r\n\t\t\t\tlet chara;\r\n\r\n\t\t\t\t//const handler = {\r\n\t\t\t\t//\tdefineProperty(target, key, descriptor) {\r\n\t\t\t\t//\t\tif (key == \"$physics\") {\r\n\t\t\t\t//\t\t\tdebugger;\r\n\t\t\t\t//\t\t}\r\n\t\t\t\t//\t\treturn Reflect.defineProperty(...arguments);\r\n\t\t\t\t//\t},\r\n\t\t\t\t//\tset(target, key, descriptor) {\r\n\t\t\t\t//\t\tif (key == \"$physics\") {\r\n\t\t\t\t//\t\t\tdebugger;\r\n\t\t\t\t//\t\t}\r\n\t\t\t\t//\t\treturn Reflect.set(...arguments);\r\n\t\t\t\t//\t},\r\n\t\t\t\t//\townKeys(target, key, descriptor) {\r\n\t\t\t\t//\t\tif (key == \"$physics\") {\r\n\t\t\t\t//\t\t\tdebugger;\r\n\t\t\t\t//\t\t}\r\n\t\t\t\t//\t\treturn Reflect.ownKeys(...arguments);\r\n\t\t\t\t//\t},\r\n\t\t\t\t//};\r\n\t\t\t\tif (payload && payload.remote_chara) {\r\n\t\t\t\t\tchara = new SceneRemoteCharacter(window.scene_map);\r\n\t\t\t\t\t//chara = new Proxy(new SceneRemoteCharacter(window.scene_map), handler);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tchara = new SceneCharacter(window.scene_map);\r\n\t\t\t\t\t//chara = new Proxy(new SceneCharacter(window.scene_map), handler);\r\n\t\t\t\t}\r\n\t\t\t\tchara.id = id;\r\n\r\n\t\t\t\t//step 1: load base data\r\n\t\t\t\tawait chara.renderer.load();\r\n\t\t\t\tcontext.commit(\"increaseProgress\", { amount: 1 });\r\n\r\n\t\t\t\t//step 2: load equip...\r\n\t\t\t\tif (payload) {\r\n\t\t\t\t\tif (payload.chara instanceof BaseSceneCharacter) {//clone\r\n\t\t\t\t\t\tchara.renderer._parse(payload.chara.renderer._stringify(false));\r\n\r\n\t\t\t\t\t\tchara.renderer.x = payload.chara.renderer.x;\r\n\t\t\t\t\t\tchara.renderer.y = payload.chara.renderer.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (payload.emplace) {\r\n\t\t\t\t\t\tchara.id = payload.emplace.id;\r\n\t\t\t\t\t\tchara.renderer._parse(payload.emplace.code);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tchara.renderer._setup_test();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet result = await context.dispatch('_addChara', {\r\n\t\t\t\t\tchara: chara,\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif (scene_map) {\r\n\t\t\t\t\tscene_map.addChara(result);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\t\t\tcreateChara: async function (context, payload) {\r\n\t\t\t\tcontext.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\treturn await context.dispatch('_createChara', payload);\r\n\t\t\t},\r\n\t\t\t//replaceCharacter: async function (context) {\r\n\t\t\t//},\r\n\t\t\tloadCharacters: async function (context) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tlet list =  JSON.parse(window.localStorage.getItem(\"chara_list\"));\r\n\t\t\t\tif (!list) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//clear\r\n\t\t\t\tcontext.commit(\"clear\");\r\n\r\n\t\t\t\tcontext.commit(\"increaseProgressMax\", { amount: list.length * 2 });\r\n\r\n\t\t\t\tfor (let index = 0; index < list.length; ++index) {\r\n\t\t\t\t\tconst savedChara = list[index];\r\n\r\n\t\t\t\t\tlet isIdExist = await context.dispatch('isIdExist', {\r\n\t\t\t\t\t\tid: savedChara.id,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (isIdExist) {\r\n\t\t\t\t\t\t//console.log(\"replace character[\" + index + \"]: \" + savedChara.id);\r\n\t\t\t\t\t\tconsole.log(\"character: \" + savedChara.id + \"is exist\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log(\"load character[\" + index + \"]: \" + savedChara.id);\r\n\t\t\t\t\t\tawait context.dispatch('_createChara', {\r\n\t\t\t\t\t\t\templace: {\r\n\t\t\t\t\t\t\t\tid: savedChara.id,\r\n\t\t\t\t\t\t\t\tcode: savedChara.code,\r\n\t\t\t\t\t\t\t\t//index: index,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsaveCharacters: function (context) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tlet ls_charaList = [];\r\n\r\n\t\t\t\tstate.charaList.forEach(function (chara, index) {\r\n\t\t\t\t\tconst id = chara.id;\r\n\t\t\t\t\tconst code = chara.renderer._stringify(false);\r\n\r\n\t\t\t\t\tls_charaList[index] = {\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tcode: code,\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\r\n\t\t\t\twindow.localStorage.setItem(\"chara_list\", JSON.stringify(ls_charaList));\r\n\t\t\t},\r\n\t\t}\r\n\t});\r\n\r\n\texport default {\r\n\t\tstore,\r\n\t\tdata: function () {\r\n\t\t\tlet scr_rat_x = window.innerWidth / 1366;\r\n\t\t\tlet scr_rat_y = window.innerHeight / 768;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdirty: 0,\r\n\r\n\t\t\t\t//chara: {},\r\n\t\t\t\t//windowOrder: [1, 2, 3],\r\n\t\t\t\tis_show_chara_dl_menu: false,\r\n\r\n\t\t\t\tmapEditorMode: \"layeredObject\",\r\n\t\t\t\tdisplayMode: 0,\r\n\t\t\t\tselectedLayer: 0,\r\n\t\t\t\twnd_debug_style: { background: \"#ffffff\", padding: \"0 0.5em\" },\r\n\r\n\t\t\t\twnds: {\r\n\t\t\t\t\tmenu: { name: \"$menu\", visable: true },\r\n\t\t\t\t\tcharacter_list: { name: \"Characters\", visable: true },\r\n\t\t\t\t\tcharacter_attribute: { name: \"Character attribute\", visable: true },\r\n\t\t\t\t\tequip_box: { name: \"Equip box\", visable: true },\r\n\t\t\t\t\tspawnpoint: { name: \"Spawn point\", visable: true },\r\n\t\t\t\t\tdebug_window: { name: \"Map editor (Debug)\", visable: true, },\r\n\t\t\t\t},\r\n\r\n\t\t\t\tgv: $gv,\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: Object.assign(\r\n\t\t\tVuex.mapState({\r\n\t\t\t\tcharaList: \"charaList\",\t// chara[]\r\n\t\t\t\tselected: \"selected\",\t// charaId\r\n\t\t\t\tchara: \"chara\",\t\t\t// current chara\r\n\t\t\t\tprogressValue: \"progressValue\",\r\n\t\t\t\tprogressMaximum: \"progressMaximum\",\r\n\t\t\t}),\r\n\t\t\t{\r\n\t\t\t}\r\n\t\t),\r\n\t\tmethods: {\r\n\t\t\tscene_map: function () {\r\n\t\t\t\treturn window.scene_map;\r\n\t\t\t},\r\n\t\t\tloadCharacters: function () {\r\n\t\t\t\tconsole.log(\"load character\");\r\n\t\t\t\tthis.$store.dispatch('loadCharacters');\r\n\t\t\t},\r\n\t\t\tsaveCharacters: function () {\r\n\t\t\t\tconsole.log(\"save characters\");\r\n\t\t\t\talert(\"save characters\");\r\n\t\t\t\tthis.$store.dispatch('saveCharacters');\r\n\t\t\t},\r\n\t\t\tselectChara: function (id) {\r\n\t\t\t\tconsole.log(\"select character: \" + id);\r\n\t\t\t\tthis.$store.dispatch(\"selectChara\", {\r\n\t\t\t\t\tid: id\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\taddNewChara: function () {\r\n\t\t\t\tconsole.log(\"create new character\");\r\n\t\t\t\tthis.$store.dispatch('createChara');\r\n\t\t\t},\r\n\t\t\taddCloneChara: function () {\r\n\t\t\t\tif (!this.chara) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"clone character: \" + this.chara.id);\r\n\t\t\t\tthis.$store.dispatch('createChara', {\r\n\t\t\t\t\tchara: this.chara\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\toninput_sort: function (value) {\r\n\t\t\t\tthis.$store.state.charaList = value;\r\n\t\t\t},\r\n\r\n\t\t\tfaceColor: async function ({ color }) {\r\n\t\t\t\tif (this.chara) {\r\n\t\t\t\t\tif (this.chara && color != null) {\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\t\t\tthis.chara.renderer.faceColor = color;\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tawait this.chara.renderer.__synchronize(0);\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thairColor: async function ({ color }) {\r\n\t\t\t\tif (this.chara) {\r\n\t\t\t\t\tif (this.chara && color != null) {\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\t\t\tthis.chara.renderer.hairColor = color;\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tawait this.chara.renderer.__synchronize(0);\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t$hairMixColor2: function ({ color, mix }) {\r\n\t\t\t\tconst vm = this;\r\n\r\n\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 1 });\r\n\r\n\t\t\t\tthis.chara.renderer.slots.hairColor2 = color;\r\n\t\t\t\tPromise.all([this.chara.renderer.slots.hair.$promise_hair2, this.chara.renderer.slots.hair.$promise_hair3]).then(async function (hair2, hair3) {\r\n\t\t\t\t\tawait vm.chara.renderer.__synchronize(0);\r\n\t\t\t\t\tvm.chara.renderer.slots.hairMix2 = mix;\r\n\t\t\t\t\tapp.updateScreen();\r\n\r\n\t\t\t\t\tvm.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t}).catch(function (reason) {\r\n\t\t\t\t\tvm.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\thairColor2: function (params) {\r\n\t\t\t\tthis.$hairMixColor2(params);\r\n\t\t\t},\r\n\t\t\thairMix2: function (params) {\r\n\t\t\t\tthis.$hairMixColor2(params);\r\n\t\t\t},\r\n\r\n\t\t\tclickItem: function (payload) {\r\n\t\t\t\tlet { id, category, equip } = payload;\r\n\r\n\t\t\t\tif (this.chara) {\r\n\t\t\t\t\tif (!ItemCategoryInfo.isEquip(id) || !this.chara.renderer.unuse(id)) {\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tthis.chara.useItem(id, category, equip);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: -2 });\r\n\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t\tthrow ex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t//TODO: synchronize chair\r\n\t\t\t\t\t\t\tthis.chara.renderer.__synchronize(0).then(() => {\r\n\t\t\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });//force exit\r\n\t\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t\tthrow ex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.$emit(\"hoverItem\", payload);\r\n\t\t\t},\r\n\t\t\thoverItem: function (payload) {\r\n\t\t\t\tthis.$emit(\"hoverItem\", payload);\r\n\t\t\t},\r\n\t\t\tmouseleaveItem: function (payload) {\r\n\t\t\t\tthis.$emit(\"mouseleaveItem\", payload);\r\n\t\t\t},\r\n\r\n\t\t\topenCharacterDLMenu: function (e, id) {\r\n\t\t\t\tlet vm = this;\r\n\t\t\t\tvm.$store.dispatch(\"selectChara\", {\r\n\t\t\t\t\tid: id\r\n\t\t\t\t}).then(function () {\r\n\t\t\t\t\tvm.is_show_chara_dl_menu = true;\r\n\r\n\t\t\t\t\tvm.$nextTick(function () {\r\n\t\t\t\t\t\tvm.$refs.chara_dl_menu.setPosition({\r\n\t\t\t\t\t\t\tmy: \"left top\",\r\n\t\t\t\t\t\t\tof: e,\r\n\t\t\t\t\t\t\t//collision: \"fit\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//console.log(\"openCharacterDLMenu\");\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tcloseCharacterDLMenu: function () {\r\n\t\t\t\tlet vm = this;\r\n\t\t\t\tvm.is_show_chara_dl_menu = false;\r\n\t\t\t\t//console.log(\"closeCharacterDLMenu\");\r\n\t\t\t},\r\n\t\t\tcopyCharaCode: function () {\r\n\t\t\t\tlet code = this.chara.renderer._stringify(false);\r\n\t\t\t\tcopyToClipboard(code);\r\n\t\t\t},\r\n\t\t\t_save_as_png: function () {\r\n\t\t\t\tthis.chara.renderer._save_as_png(engine, this.chara.id);\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\t{\r\n\t\t\t\tconst elem = document.getElementById(\"bgm\");\r\n\t\t\t\tthis.$refs.bgm_outer.appendChild(elem);\r\n\t\t\t}\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tconst scr_rat_x = $gv.is_mobile ? 0 : (window.innerWidth / 1366);\r\n\t\t\t\tconst scr_rat_y = $gv.is_mobile ? 0 : (window.innerHeight / 768);\r\n\t\t\t\t\r\n\t\t\t\tthis.$refs.menu.setStyle({\r\n\t\t\t\t\tleft: _to_css_px(0),\r\n\t\t\t\t\ttop: _to_css_px(0),\r\n\t\t\t\t\twidth: _to_css_px(310),\r\n\t\t\t\t\theight: _to_css_px(360),\r\n\t\t\t\t\tminWidth: _to_css_px(310),\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.$refs.character_list.setStyle({\r\n\t\t\t\t\tleft: _to_css_px(350 * scr_rat_x),\r\n\t\t\t\t\ttop: _to_css_px(0 * scr_rat_y),\r\n\t\t\t\t\twidth: CSS.em(16.1),\r\n\t\t\t\t\theight: CSS.vh(25),\r\n\t\t\t\t\tminWidth: CSS.em(16.1),\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.$refs.character_attribute.setStyle({\r\n\t\t\t\t\tleft: _to_css_px(900 * scr_rat_x),\r\n\t\t\t\t\ttop: _to_css_px(0 * scr_rat_y),\r\n\t\t\t\t\twidth: CSS.em(18),\r\n\t\t\t\t\theight: CSS.vh(26),\r\n\t\t\t\t\tminWidth: CSS.em(18),\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.$refs.equip_box.setStyle({\r\n\t\t\t\t\tleft: _to_css_px(0 * scr_rat_x),\r\n\t\t\t\t\ttop: _to_css_px(50 * scr_rat_y),\r\n\t\t\t\t\twidth: CSS.em(20),\r\n\t\t\t\t\theight: _to_css_px(400),\r\n\t\t\t\t\tminWidth: CSS.em(20),\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.$refs.spawnpoint.setStyle({\r\n\t\t\t\t\tleft: _to_css_px(350 * scr_rat_x),\r\n\t\t\t\t\ttop: _to_css_px(0 * scr_rat_y),\r\n\t\t\t\t\twidth: _to_css_px(600),\r\n\t\t\t\t\theight: CSS.vh(26),\r\n\t\t\t\t\tminWidth: _to_css_px(400),\r\n\t\t\t\t});\r\n\t\t\t\tthis.wnds.spawnpoint.visable = false;\r\n\t\t\t\t\r\n\t\t\t\tthis.$refs.debug_window.setStyle({\r\n\t\t\t\t\tleft: _to_css_px(0 * scr_rat_x),\r\n\t\t\t\t\ttop: _to_css_px(100 * scr_rat_y),\r\n\t\t\t\t\twidth: CSS.vw(40),\r\n\t\t\t\t\theight: CSS.vh(70),\r\n\t\t\t\t\tminWidth: CSS.em(16),\r\n\t\t\t\t});\r\n\t\t\t\tthis.wnds.debug_window.visable = false;\r\n\t\t\t\t\r\n\t\t\t\tfunction _to_css_px(val) {\r\n\t\t\t\t\treturn CSS.px(Math.trunc(val));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tbeforeDestroy: function () {\r\n\t\t\tconst elem = document.getElementById(\"bgm\");\r\n\t\t\tdocument.getElementById(\"hidden_components\").appendChild(elem);\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\t\"ui-draggable\": UIDraggable,\r\n\t\t\t\"ui-dialog\": UIDialog,\r\n\t\t\t\"ui-sortable\": UISortable,\r\n\t\t\t\"ui-trigger\": UITrigger,\r\n\t\t\t\"ui-menu\": UIMenu,\r\n\r\n\t\t\t\"ui-character\": UICharacter,\r\n\t\t\t\"ui-character-svg\": UICharacterSVG,\r\n\t\t\t\"ui-character-attribute\": UICharacterAttribute,\r\n\t\t\t\"ui-equip-box\": UIEquipBox,\r\n\r\n\t\t\t\"ui-mob-list\": UIMobList,\r\n\t\t\t\"ui-map-editor\": UIMapEditor,\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.dialog-group {\r\n\t\tposition: fixed;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.ui-dialog .ui-equip-box-dialog.ui-dialog-content {\r\n\t\tpadding: 0;\r\n\t\twidth: 100% !important;\r\n\t}\r\n\r\n\t/*li.active {\r\n\t\tbackground-color: lightcyan;\r\n\t}\r\n\t*/\r\n\t.ui-character-list .active {\r\n\t\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\r\n\t\tbackground-color: #ffec64;\r\n\t}\r\n\r\n\t.ui-character-list {\r\n\t\tlist-style: none;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t.ui-character-list > li {\r\n\t\twidth: 16em;\r\n\t}\r\n\r\n\t.ui-character-list table {\r\n\t\twidth: 100%;\r\n\t\t/*border-collapse: collapse;*/\r\n\t}\r\n\t\r\n\t.ui-character-list td:nth-child(1) {\r\n\t\t/*border: 1px solid black;*/\r\n\t\twidth: 20%;\r\n\t}\r\n\r\n\t.ui-character-list td:nth-child(2) {\r\n\t\t/*border: 1px solid black;*/\r\n\t\twidth: 50%;\r\n\t}\r\n\r\n\t/*\r\n\t.ui-character-list td:first-child {\r\n\t}\r\n\t*/\r\n\r\n\t/*.ui-character-list td:last-child {\r\n\t\tfloat: right;\r\n\t}*/\r\n\t\r\n\t.chara-ls-btn-group {\r\n\t\tdisplay: inline;\r\n\t\tfloat: right;\r\n\t}\r\n\t.chara-ls-btn {\r\n\t    display: inline-flex;\r\n\t\twidth: 20px;\r\n\t\theight: 20px;\r\n\t\tpadding: 0;\r\n\t}\r\n\t.chara-ls-btn > * {\r\n\t\tmargin: auto;\r\n\t\tpadding: 0;\r\n\t}\r\n\t\r\n\t.loading {\r\n\t\tposition: absolute;\r\n\t\ttop:0;\r\n\t\tleft:0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(100, 100, 100, 0.5);\r\n\t\ttext-shadow: 1px 1px 0 white, 0 0 1px white;\r\n\t\t\r\n\t\tdisplay:flex;\r\n\t\talign-items:center;\r\n\t\tjustify-content:center;\r\n\t}\r\n\r\n\t/*\r\n\t\thttp://www.oxxostudio.tw/articles/201408/sticky-ball.html\r\n\t*/\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./editor.vue?vue&type=template&id=becf171c&scoped=true&\"\nimport script from \"./editor.vue?vue&type=script&lang=js&\"\nexport * from \"./editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./editor.vue?vue&type=style&index=0&id=becf171c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"becf171c\",\n  null\n  \n)\n\ncomponent.options.__file = \"editor.vue\"\nexport default component.exports","﻿\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGrpah, IRenderer, IGraph } from \"./IRenderer.js\";\r\n\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\n\r\n/**\r\n * @extends {IGraph}\r\n */\r\nexport class SpriteBase extends Graph {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tif (raw) {\r\n\t\t\tsuper(url, {\r\n\t\t\t\twidth: raw.__w,\r\n\t\t\t\theight: raw.__h,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\t//this.src is broken;\r\n\r\n\t\tif (url) {\r\n\t\t\tdebugger\r\n\t\t\tthis._url = url;\r\n\t\t\t//this._loadTexture(url);//_loadTexture: undefined\r\n\t\t}\r\n\t\telse if (SpriteBase.isTexture(raw) !== false) {\r\n\t\t\tthis._url = raw[\"\"];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isTexture(raw) {\r\n\t\tif (raw) {\r\n\t\t\tif (raw.hasOwnProperty(\"\")) {\r\n\t\t\t\tif (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!raw.__isEmpty) {\r\n\t\t\t\t\tconsole.group(\"no texture\");\r\n\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\tthrow new Error(\"no texture\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic isTextureHasData(raw) {\r\n\t\treturn raw && typeof raw[\"\"] == 'string' && raw[\"\"].startsWith(\"data:image/\");\r\n\t}\r\n\r\n\tset z(value) {\r\n\t\tthis._order = value;\r\n\t}\r\n\tget z() {\r\n\t\treturn this._order;\r\n\t}\r\n\t\r\n\t/**\r\n\t * try construct value from raw data\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (!this._raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\telse if (propertyName in this._raw) {\r\n\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis._engine.drawGraph(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthis._engine.drawGraph2(this, x - this.x, y - this.y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t */\r\n\tdraw2i(x, y) {\r\n\t\tthis._engine.drawGraph2(this, Math.trunc(x - this.x + 0.5), Math.trunc(y - this.y + 0.5));\r\n\t}\r\n}\r\n\r\n\r\nexport class Sprite extends SpriteBase {\r\n\t/**\r\n\t * sprite = new Sprite(rawData);//不會載入image\r\n\t * sprite._url = img_url;//不會載入image\r\n\t *\r\n\t * 會觸發載入image的method\r\n\t * draw(), isLoaded(), get width(), get height()\r\n\t * \r\n\t * 手動載入image: __loadTexture()\r\n\t * \r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tvar origin = this._get(new Vec2(0, 0), \"origin\", Vec2.get);\r\n\t\tthis.x = origin.x;\r\n\t\tthis.y = origin.y;\r\n\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\tthis.delay = this._get(100, \"delay\", Number);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tctx.rect(x, y, w, h);\r\n\t\t\tctx.clip();\r\n\r\n\t\t\tlet left = x;\r\n\t\t\tlet top = y;\r\n\t\t\tlet right = x + w;\r\n\t\t\tlet bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\tdrawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst left = x;\r\n\t\t\tconst right = x + w;\r\n\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\tdrawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst top = y;\r\n\t\t\tconst bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tthis.draw2(x, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\t_drawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t\r\n\t\tconst sw = Math.trunc(w / this.width) * this.width;\r\n\t\tconst sh = Math.trunc(h / this.height) * this.height;\r\n\t\t\r\n\t\tconst left = x;\r\n\t\tconst top = y;\r\n\t\tconst right = x + sw;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tlet i, j;\r\n\r\n\t\tif (h >= this.height) {\r\n\t\t\tfor (i = top; i < bottom; i += this.height) {\r\n\t\t\t\tif (w >= this.width) {\r\n\t\t\t\t\tfor (j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet sx = w - sw;\r\n\t\t\t\t\tif (sx > 0) {\r\n\t\t\t\t\t\tthis._engine._drawImage(this, 0, 0, sx, this.height, j - this.x, i - this.y, sx, this.height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._engine._drawImage(this, 0, 0, w, this.height, left - this.x, i - this.y, w, this.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet sy = h - sh;\r\n\t\t\tif (sy > 0) {\r\n\t\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\t\tthis._engine._drawImage(this, 0, 0, this.width, sy, left - this.x, i - this.y, this.width, sy);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\tthis._engine._drawImage(this, 0, 0, this.width, h, left - this.x, top - this.y, this.width, h);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\t_drawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst right = x + w;\r\n\r\n\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\tthis.draw2(j, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\t_drawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst top = y;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tthis.draw2(x, i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawPattern4i(x, y, w, h) {\r\n\t\tthis.drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\tdrawHorizontalPattern3i(x, y, w) {\r\n\t\tthis.drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawVerticalPattern3i(x, y, h) {\r\n\t\tthis.drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawPattern4i(x, y, w, h) {\r\n\t\tthis._drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\t_drawHorizontalPattern3i(x, y, w) {\r\n\t\tthis._drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawVerticalPattern3i(x, y, h) {\r\n\t\tthis._drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n}\r\n\r\nexport class _$PatternSprite_Loaded extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._direction = null;\r\n\r\n\t\t/** @type {CanvasPattern} */\r\n\t\tthis._pattern = null;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget direction() {\r\n\t\treturn this._direction;\r\n\t}\r\n\tset direction(value) {\r\n\t\tif (value && this._direction != value) {\r\n\t\t\tthis._direction = value;\r\n\t\r\n\t\t\t//reload;\r\n\t\t\tthis._pattern = null;\r\n\t\t\tthis.__proto__ = $PatternSprite.prototype;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(-this.x, -this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(x - this.x, y - this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"repeat\"} */\r\n\tget e_repeat() {\r\n\t\treturn \"repeat\";\r\n\t}\r\n\t/** @returns {\"repeat-x\"} */\r\n\tget e_repeat_x() {\r\n\t\treturn \"repeat-x\";\r\n\t}\r\n\t/** @returns {\"repeat-y\"} */\r\n\tget e_repeat_y() {\r\n\t\treturn \"repeat-y\";\r\n\t}\r\n\t/** @returns {\"no-repeat\"} */\r\n\tget e_noRepeat() {\r\n\t\treturn \"no-repeat\";\r\n\t}\r\n}\r\n\r\nexport class $PatternSprite extends _$PatternSprite_Loaded {\r\n\tdrawPattern(w, h) {\r\n\t\tthis.drawPattern2(0, 0, w, h);\r\n\t}\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.isLoaded()) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t{\r\n\t\t\t\tctx.rect(x, y, w, h);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tlet left = x;\r\n\t\t\t\tlet top = y;\r\n\t\t\t\tlet right = x + w;\r\n\t\t\t\tlet bottom = y + h;\r\n\r\n\t\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern(w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern2(x, y, w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","﻿\r\nconst $failed_urls = [];\r\n\r\nconst $archive = {};\r\n\r\n\r\nwindow.character_emotion_list = [\"blink\", \"hit\", \"smile\", \"troubled\", \"cry\", \"angry\", \"bewildered\", \"stunned\",\r\n\t\"vomit\", \"oops\", \"cheers\", \"chu\", \"wink\", \"pain\", \"glitter\", \"despair\", \"love\", \"shine\", \"blaze\", \"hum\",\r\n\t\"bowing\", \"hot\", \"dam\", \"qBlue\"];\r\n\r\nwindow.character_action_list = [\"walk1\", \"walk2\", \"stand1\", \"stand2\", \"alert\", \"swingO1\", \"swingO2\", \"swingO3\", \"swingOF\", \"swingT1\",\r\n\t\"swingT2\", \"swingT3\", \"swingTF\", \"swingP1\", \"swingP2\", \"swingPF\", \"stabO1\", \"stabO2\", \"stabOF\", \"stabT1\",\r\n\t\"stabT2\", \"stabTF\", \"shoot1\", \"shoot2\", \"shootF\", \"proneStab\", \"prone\", \"heal\", \"fly\", \"jump\", \"sit\", \"ladder\",\r\n\t\"rope\"/*, \"dead\", \"ghostwalk\", \"ghoststand\", \"ghostjump\", \"ghostproneStab\", \"ghostladder\", \"ghostrope\", \"ghostfly\",\r\n\t\t\"ghostsit\"*/];\r\n\r\nexport class ItemCategoryInfo {\r\n\t/**\r\n\t * @param {string} id_prefix\r\n\t * @param {string} path\r\n\t * @param {boolean} isOnFace\r\n\t * @param {string} slot - property name\r\n\t * @param {string} categoryName\r\n\t * @param {string} type\r\n\t * @param {string} [stringPath]\r\n\t */\r\n\tconstructor(id_prefix, imgDir, listPath, slot, categoryName, type, stringPath) {\r\n\t\tthis.id_prefix = id_prefix;\r\n\r\n\t\t/** data path */\r\n\t\tthis.path = imgDir;\r\n\r\n\t\t/** equip window */\r\n\t\tthis.slot = slot;\r\n\r\n\t\t/** item list file name */\r\n\t\tthis.listPath = listPath;\r\n\r\n\t\t/** display category name */\r\n\t\tthis.categoryName = categoryName;\r\n\r\n\t\t/** renderer */\r\n\t\tthis.FragmentType = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.dataDir = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.stringDir = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconPath = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconRawPath = null;\r\n\t\t{\r\n\t\t\tlet dataDir, stringDir, iconPath, iconRawPath;\r\n\r\n\t\t\tswitch (slot) {\r\n\t\t\t\tcase \"head\":\r\n\t\t\t\t\ticonPath = \"stand1/0/head\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/head\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"body\":\r\n\t\t\t\t\ticonPath = \"stand1/0/body\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/body\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"hair\":\r\n\t\t\t\t\ticonPath = \"stand1/0/hair\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/hair\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"face\":\r\n\t\t\t\t\ticonPath = \"blink/0/face\";\r\n\t\t\t\t\ticonRawPath = \"blink/0/face\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: // typeId: 0|1|2|3|4\r\n\t\t\t\t\ticonPath = \"info/icon\";\r\n\t\t\t\t\ticonRawPath = \"info/iconRaw\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (id_prefix == \"5\") {\r\n\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\tstringDir = \"/String/Pet/\";\r\n\t\t\t\talert(\"Pet\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch (id_prefix[1]) {\r\n\t\t\t\t\tcase \"0\":\r\n\t\t\t\t\t\tif (Math.trunc(id_prefix) <= 1) {\r\n\t\t\t\t\t\t\tdataDir = \"/Character/\";\r\n\t\t\t\t\t\t\tstringDir = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase \"1\":\r\n\t\t\t\t\t\tlet s = imgDir + (imgDir ? \"/\" : \"\");\r\n\t\t\t\t\t\tdataDir = \"/Character/\" + s;\r\n\t\t\t\t\t\tstringDir = \"/String/Eqp/Eqp/\" + (stringPath || s);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"2\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Consume/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"3\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Ins/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"4\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Etc/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"5\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Cash/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new Error(\"unknow item type, param: %o\", [id_prefix, imgDir, listPath, slot, categoryName, type]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.defineProperties(this, {\r\n\t\t\t\t\"type\": {\r\n\t\t\t\t\tvalue: type,\r\n\t\t\t\t},\r\n\t\t\t\t\"dataDir\": {\r\n\t\t\t\t\tvalue: dataDir,\r\n\t\t\t\t},\r\n\t\t\t\t\"stringDir\": {\r\n\t\t\t\t\tvalue: stringDir,\r\n\t\t\t\t},\r\n\t\t\t\t\"iconPath\": {\r\n\t\t\t\t\tvalue: iconPath,\r\n\t\t\t\t},\r\n\t\t\t\t\"iconRawPath\": {\r\n\t\t\t\t\tvalue: iconRawPath,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * load equip or item, name and desc\r\n\t * @param {string} itemId\r\n\t * @returns {{info:{icon:{[\"\"]:string},iconRaw:{[\"\"]:string}},name:string,desc:string,[prop:string]:any}}\r\n\t */\r\n\tstatic async getItem(itemId) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(itemId);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet id = itemId.padStart(8, \"0\");\r\n\t\tif (id[0] != \"0\") {\r\n\t\t\tthrow new Error(\"itemId: \" + itemId);\r\n\t\t}\r\n\r\n\t\tlet results;\r\n\t\ttry {\r\n\t\t\tresults = await Promise.all([\r\n\t\t\t\t$get.data(info.dataDir + itemId),\r\n\t\t\t\tinfo.stringDir ? $get.data(info.stringDir + Number(itemId)).then(\r\n\t\t\t\t\ta => a, // have name or desc\r\n\t\t\t\t\t() => { return { name: \"<\" + itemId + \">\" }; } // no name and desc\r\n\t\t\t\t) : { name: \"<\" + itemId + \">\" } // no name and desc\r\n\t\t\t]);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow new ex;\r\n\t\t}\r\n\r\n\t\tlet data = Object.assign(results[0], results[1]);\r\n\t\t\r\n\t\tdata.id = itemId;\r\n\r\n\t\tif (data.info) {\r\n\t\t\t{//editor mode data\r\n\t\t\t\tdata.info.id = itemId;\r\n\t\t\t\tdata.info.name = data.name;\r\n\t\t\t\tif (data.desc) {\r\n\t\t\t\t\tdata.info.desc = data.desc;\r\n\t\t\t\t}\r\n\t\t\t\tdata.info.__v = window.DATA_TAG + window.DATA_VERSION;\r\n\t\t\t}\r\n\r\n\t\t\tif (!data.info.icon) {\r\n\t\t\t\tdata.info.icon = {};\r\n\t\t\t}\r\n\t\t\tif (!data.info.iconRaw) {\r\n\t\t\t\tdata.info.iconRaw = {};\r\n\t\t\t}\r\n\t\t\tif (!data.info.icon[\"\"]) {\r\n\t\t\t\tdata.info.icon[\"\"] = ItemCategoryInfo.getIconUrl(itemId);\r\n\t\t\t}\r\n\t\t\tif (data.info.iconRaw[\"\"]) {\r\n\t\t\t\tdata.info.iconRaw[\"\"] = ItemCategoryInfo.getIconRawUrl(itemId);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconRawUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\t//TODO: return path, not url\r\n\t\t\treturn info.dataDir + id + \"/\" + info.iconRawPath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\t//TODO: return path, not url\r\n\t\t\treturn info.dataDir + id + \"/\" + info.iconPath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - 4+ digit string\r\n\t * @returns {ItemCategoryInfo}\r\n\t */\r\n\tstatic get(id) {\r\n\t\tlet info;\r\n\r\n\t\tif (id == null || id == \"\") {\r\n\t\t\tdebugger;\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\tif (id.length == 4) {\r\n\t\t\t\tinfo = ItemCategoryInfo._info[id];\r\n\t\t\t\tif (info) {\r\n\t\t\t\t\treturn info;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (id.length == 6) {\r\n\t\t\t\treturn ItemCategoryInfo._info[id];\r\n\t\t\t}\r\n\t\t\telse if (id.length == 3) {\r\n\t\t\t\treturn ItemCategoryInfo._info[id];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 4)];\r\n\t\t\t\tif (info) {\r\n\t\t\t\t\treturn info;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 6)];\r\n\t\t\t\t\tif (info) {\r\n\t\t\t\t\t\treturn info;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 3)];//019\r\n\t\t\t\t\t\tif (info) {\r\n\t\t\t\t\t\t\treturn info;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.warn(\"unknow item type, itemId: \" + id);\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getTypeId() {\r\n\t\treturn Math.trunc(_id / 1000000);\r\n\t}\r\n\r\n\tstatic getCategory() {\r\n\t\treturn Math.trunc(_id / 10000);// % 100;// 0105 // 01 + 05 // type + category\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isItem(id) {\r\n\t\tlet type = Math.trunc(id / 1000000);//id.startsWith(\"00\");\r\n\t\treturn type != 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isEquip(id) {\r\n\t\tif (!id) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\t\tlet _id = Number(id);\r\n\r\n\t\tif (!Number.isSafeInteger(_id)) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\r\n\t\t//let cate = Number(id.length == 4 ? id : id.slice(0, 4));\r\n\t\t//return (cate >= \"0100\" && cate < \"0180\");\r\n\r\n\t\t//let cate = Math.trunc(_id / 10000);\r\n\t\t//if (cate >= 180 && cate < 2000) {\r\n\t\t//\tconsole.warn(\"?? equip: \" + id);\r\n\t\t//\tdebugger;\r\n\t\t//}\r\n\r\n\t\tlet type = Math.trunc(_id / 1000000);\r\n\r\n\t\treturn type == 1;\r\n\t}\r\n\r\n\tstatic isChair(id) {\r\n\t\tif (!id) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\t\tlet _id = Number(id);\r\n\r\n\t\tif (!Number.isSafeInteger(_id)) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\r\n\t\tlet cate = Math.trunc(_id / 10000);\r\n\r\n\t\treturn cate == 301;//0301xxxx\r\n\t}\r\n\r\n\t/**\r\n\t * 1~4 digit number\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic getSubCategory(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic isCashWeapon(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000) == 170;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} job\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getJobWeaponCategory(job) {\r\n\t\t//TODO: getJobWeaponCategory\r\n\t\tconsole.warn(\"getJobWeaponCategory: 未完成\");\r\n\t}\r\n}\r\nwindow.$ItemCategoryInfo = ItemCategoryInfo;\r\nItemCategoryInfo.type = {\r\n\tEquip: \"Equip\",\r\n\tConsume: \"Consume\",\r\n\tEtc: \"Etc\",\r\n\tInstall: \"Install\",\r\n\tCash: \"Cash\"\r\n};\r\nItemCategoryInfo.typeName = {\r\n\t0: \"Equip\",\r\n\t1: \"Consume\",\r\n\t2: \"Etc\",\r\n\t3: \"Install\",\r\n\t4: \"Cash\"\r\n};\r\nItemCategoryInfo.typeId = {\r\n\tEquip: 0,\r\n\tConsume: 1,\r\n\tEtc: 2,\r\n\tInstall: 3,\r\n\tCash: 4,\r\n};\r\nItemCategoryInfo._info = {\r\n\t\"0000\": new ItemCategoryInfo(\"0000\", \"\",\t\t\t\"body\",\t\t\t\t\"body\",\t\t\t\"<body>\", \"Equip\"),\r\n\t\"0001\": new ItemCategoryInfo(\"0001\", \"\",\t\t\t\"head\",\t\t\t\t\"head\",\t\t\t\"<head>\", \"Equip\"),\r\n\r\n\t\"0002\": new ItemCategoryInfo(\"0002\", \"Face\",\t\t\"Face\",\t\t\t\t\"face\",\t\t\t\"臉型\", \"Equip\"),\r\n\t\"0003\": new ItemCategoryInfo(\"0003\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\", \"Equip\"),\r\n\t\"0004\": new ItemCategoryInfo(\"0004\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\", \"Equip\"),\r\n\r\n\t\"0100\": new ItemCategoryInfo(\"0100\", \"Cap\",\t\t\t\"Cap\",\t\t\t\t\"cap\",\t\t\t\"帽子\", \"Equip\"),\r\n\t\"0101\": new ItemCategoryInfo(\"0101\", \"Accessory\",\t\"accessoryFace\",\t\"accessoryFace\", \"臉飾\", \"Equip\"),\r\n\t\"0102\": new ItemCategoryInfo(\"0102\", \"Accessory\",\t\"accessoryEyes\",\t\"accessoryEyes\", \"眼飾\", \"Equip\"),\r\n\t\"0103\": new ItemCategoryInfo(\"0103\", \"Accessory\",\t\"accessoryEars\",\t\"accessoryEars\", \"耳環\", \"Equip\"),\r\n\t\"0104\": new ItemCategoryInfo(\"0104\", \"Coat\",\t\t\"Coat\",\t\t\t\t\"coat\",\t\t\t\"上衣\", \"Equip\"),\r\n\t\"0105\": new ItemCategoryInfo(\"0105\", \"Longcoat\",\t\"Longcoat\",\t\t\t\"longcoat\",\t\t\"套服\", \"Equip\"),\r\n\t\"0106\": new ItemCategoryInfo(\"0106\", \"Pants\",\t\t\"Pants\",\t\t\t\"pants\",\t\t\"褲子\", \"Equip\"),\r\n\t\"0107\": new ItemCategoryInfo(\"0107\", \"Shoes\",\t\t\"Shoes\",\t\t\t\"shoes\",\t\t\"鞋子\", \"Equip\"),\r\n\t\"0108\": new ItemCategoryInfo(\"0108\", \"Glove\",\t\t\"Glove\",\t\t\t\"glove\",\t\t\"手套\", \"Equip\"),\r\n\t\"0109\": new ItemCategoryInfo(\"0109\", \"Shield\",\t\t\"Shield\",\t\t\t\"shield\",\t\t\"盾牌\", \"Equip\"),\r\n\t\"0110\": new ItemCategoryInfo(\"0110\", \"Cape\",\t\t\"Cape\",\t\t\t\t\"cape\",\t\t\t\"披風\", \"Equip\"),\r\n\r\n\t\"0121\": new ItemCategoryInfo(\"0121\", \"Weapon\", \"閃亮克魯\", \"weapon\", \"閃亮克魯\", \"Equip\"),\r\n\t\"0122\": new ItemCategoryInfo(\"0122\", \"Weapon\", \"靈魂射手\", \"weapon\", \"靈魂射手\", \"Equip\"),\r\n\t\"0123\": new ItemCategoryInfo(\"0123\", \"Weapon\", \"魔劍\", \"weapon\", \"魔劍\", \"Equip\"),\r\n\t\"0124\": new ItemCategoryInfo(\"0124\", \"Weapon\", \"能量劍\", \"weapon\", \"能量劍\", \"Equip\"),\r\n\t\"0125\": new ItemCategoryInfo(\"0125\", \"Weapon\", \"幻獸棒\", \"weapon\", \"幻獸棒\", \"Equip\"),\r\n\t\"0126\": new ItemCategoryInfo(\"0126\", \"Weapon\", \"ESP限制器\", \"weapon\", \"ESP限制器\", \"Equip\"),\r\n\t\"0127\": new ItemCategoryInfo(\"0127\", \"Weapon\", \"鎖鏈\", \"weapon\", \"鎖鏈\", \"Equip\"),\r\n\t\"0128\": new ItemCategoryInfo(\"0128\", \"Weapon\", \"魔力護腕\", \"weapon\", \"魔力護腕\", \"Equip\"),\r\n\r\n\t\"0130\": new ItemCategoryInfo(\"0130\", \"Weapon\", \"單手劍\", \"weapon\", \"單手劍\", \"Equip\"),\r\n\t\"0131\": new ItemCategoryInfo(\"0131\", \"Weapon\", \"單手斧\", \"weapon\", \"單手斧\", \"Equip\"),\r\n\t\"0132\": new ItemCategoryInfo(\"0132\", \"Weapon\", \"單手錘\", \"weapon\", \"單手錘\", \"Equip\"),\r\n\t\"0133\": new ItemCategoryInfo(\"0133\", \"Weapon\", \"短劍\", \"weapon\", \"短劍\", \"Equip\"),\r\n\t\"0134\": new ItemCategoryInfo(\"0134\", \"Weapon\", \"雙刀\", \"weapon\", \"雙刀\", \"Equip\"),\r\n\t\"013526\": new ItemCategoryInfo(\"013526\", \"Weapon\", \"靈魂之環\", \"weapon\", \"靈魂之環\", \"Equip\"),\r\n\t\"013530\": new ItemCategoryInfo(\"013530\", \"Weapon\", \"控制器\", \"weapon\", \"控制器\", \"Equip\"),\r\n\t\"0136\": new ItemCategoryInfo(\"0136\", \"Weapon\", \"手杖\", \"weapon\", \"手杖\", \"Equip\"),\r\n\t\"0137\": new ItemCategoryInfo(\"0137\", \"Weapon\", \"短杖\", \"weapon\", \"短杖\", \"Equip\"),\r\n\t\"0138\": new ItemCategoryInfo(\"0138\", \"Weapon\", \"長杖\", \"weapon\", \"長杖\", \"Equip\"),\r\n\t\r\n\t\"0140\": new ItemCategoryInfo(\"0140\", \"Weapon\", \"雙手劍\", \"weapon\", \"雙手劍\", \"Equip\"),\r\n\t\"0141\": new ItemCategoryInfo(\"0141\", \"Weapon\", \"雙手斧\", \"weapon\", \"雙手斧\", \"Equip\"),\r\n\t\"0142\": new ItemCategoryInfo(\"0142\", \"Weapon\", \"雙手棍\", \"weapon\", \"雙手棍\", \"Equip\"),\r\n\t\"0143\": new ItemCategoryInfo(\"0143\", \"Weapon\", \"槍\", \"weapon\", \"槍\", \"Equip\"),\r\n\t\"0144\": new ItemCategoryInfo(\"0144\", \"Weapon\", \"矛\", \"weapon\", \"矛\", \"Equip\"),\r\n\t\"0145\": new ItemCategoryInfo(\"0145\", \"Weapon\", \"弓\", \"weapon\", \"弓\", \"Equip\"),\r\n\t\"0146\": new ItemCategoryInfo(\"0146\", \"Weapon\", \"弩\", \"weapon\", \"弩\", \"Equip\"),\r\n\t\"0147\": new ItemCategoryInfo(\"0147\", \"Weapon\", \"拳套\", \"weapon\", \"拳套\", \"Equip\"),\r\n\t\"0148\": new ItemCategoryInfo(\"0148\", \"Weapon\", \"指虎\", \"weapon\", \"指虎\", \"Equip\"),\r\n\t\"0149\": new ItemCategoryInfo(\"0149\", \"Weapon\", \"火槍\", \"weapon\", \"火槍\", \"Equip\"),\r\n\t\"0150\": new ItemCategoryInfo(\"0150\", \"Weapon\", \"鏟\", \"weapon\", \"鏟\", \"Equip\"),\r\n\t\"0151\": new ItemCategoryInfo(\"0151\", \"Weapon\", \"鎬\", \"weapon\", \"鎬\", \"Equip\"),\r\n\t\"0152\": new ItemCategoryInfo(\"0152\", \"Weapon\", \"雙弩槍\", \"weapon\", \"雙弩槍\", \"Equip\"),\r\n\t\"0153\": new ItemCategoryInfo(\"0153\", \"Weapon\", \"加農砲\", \"weapon\", \"加農砲\", \"Equip\"),\r\n\t\"0154\": new ItemCategoryInfo(\"0154\", \"Weapon\", \"太刀\", \"weapon\", \"太刀\", \"Equip\"),\r\n\t\"0155\": new ItemCategoryInfo(\"0155\", \"Weapon\", \"扇子\", \"weapon\", \"扇子\", \"Equip\"),\r\n\t\"0156\": new ItemCategoryInfo(\"0156\", \"Weapon\", \"琉\", \"weapon\", \"琉\", \"Equip\"),\r\n\t\"0157\": new ItemCategoryInfo(\"0157\", \"Weapon\", \"璃\", \"weapon\", \"璃\", \"Equip\"),\r\n\t\"0158\": new ItemCategoryInfo(\"0158\", \"Weapon\", \"重拳槍\", \"weapon\", \"重拳槍\", \"Equip\"),\r\n\t\"0170\": new ItemCategoryInfo(\"0170\", \"Weapon\", \"0170\", \"weapon\", \"點裝武器\", \"Equip\"),\r\n\t\"019\": new ItemCategoryInfo(\"019\", \"TamingMob\", \"TamingMob\", \"tamingMob\", \"騎寵\", \"Equip\", \"Taming/\"),\r\n\r\n\t\"0301\": new ItemCategoryInfo(\"0301\", \"Install\", \"Chair\", \"install\", \"椅子\", \"Item\"),\r\n};\r\n\r\nItemCategoryInfo._categoryList = (function (info_map) {\r\n\tlet list = [];\r\n\tlet set = new Set();\r\n\tfor (let i in info_map) {\r\n\t\tlet cat = info_map[i];\r\n\t\tlet key = cat.categoryName || cat.listPath;\r\n\r\n\t\tif (!set.has(key)) {\r\n\t\t\tset.add(key);\r\n\r\n\t\t\tlist.push({\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalue: i,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn list;\r\n})(ItemCategoryInfo._info);\r\n\r\nexport class ResourceManager {\r\n\tstatic isEquipExist(id, cateInfo) {\r\n\t\tconst dp = cateInfo.listPath;\r\n\t\tconst es = ResourceManager.equip_map[dp];\r\n\t\treturn !es || es.has(id);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic async loadArchive(url) {\r\n\t\t$setValue($archive, \"/\", JSON.parse(await ResourceManager.get(url)));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic get(url) {\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\txhr.open(\"GET\", url, true);\r\n\r\n\t\t\txhr.timeout = 10 * 60 * 1000;//20000;\r\n\r\n\t\t\txhr.onload = function () {\r\n\t\t\t\tif (this.status == 404 || this.status == 500) {\r\n\t\t\t\t\t$failed_urls.push(url);\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\t//resolve(null);\r\n\t\t\t\t\treject(this.status + \": \" + url);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 200) {\r\n\t\t\t\t\tresolve(this.responseText);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 304) {\r\n\t\t\t\t\tdebugger\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\txhr.ontimeout = function (e) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\t// XMLHttpRequest 超时。在此做某事。\r\n\t\t\t\t//resolve(null);\r\n\t\t\t\treject(\"timeout: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.onabort = function (e) {\r\n\t\t\t\treject(\"abort: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.send();\r\n\t\t});\r\n\t}\r\n\r\n\tstatic get root_path() {\r\n\t\treturn window.$ROOT_PATH;\r\n\t}\r\n\r\n\tstatic get archive() {\r\n\t\treturn $archive;\r\n\t}\r\n\r\n\tstatic get failed_urls() {\r\n\t\treturn $failed_urls;\r\n\t}\r\n}\r\nwindow.$ResourceManager = ResourceManager;\r\n\r\n/**\r\n * @param {{}} obj\r\n * @param {string} path\r\n * @param {any} value\r\n */\r\nfunction $setValue(obj, path, value) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key] == null) {\r\n\t\t\ttarget[key] = {};\r\n\t\t}\r\n\t\ttarget = target[key];\r\n\t}\r\n\tlet origin_value = target[ps[lastIndex]];\r\n\tif (origin_value instanceof Promise) {\r\n\t\tdelete target[ps[lastIndex]];\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n\telse if (origin_value && typeof origin_value == \"object\") {\r\n\t\t//if (value instanceof Promise) {\r\n\t\t//\tdebugger;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t\tfor (let key in value) {\r\n\t\t\t\torigin_value[key] = value[key] || origin_value[key];\r\n\t\t\t}\r\n\t\t//}\r\n\t}\r\n\telse if (typeof value != \"undefined\") {\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n}\r\nfunction $getValue(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key]) {\r\n\t\t\t\ttarget = target[key];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\treturn target[ps[lastIndex]];\r\n}\r\n\r\nconst symbol_isPack = Symbol(\"$pack\");\r\n\r\nconst url_startsWith_protocol = RegExp.prototype.test.bind(/^(([a-zA-Z^\\:]+)(\\:.*)$|\\/\\/)/);\r\nfunction _setValueByPath(path, value, is_pack) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn;\r\n\t}\r\n\telse if (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\tif (is_pack) {\r\n\t\t\tvalue[symbol_isPack] = true;\r\n\t\t}\r\n\t\tpath = path.slice(window.$ROOT_PATH.length);\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n\telse {\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n}\r\nfunction _getValueFromArchiveByPath(path, value) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tif (_path) {\r\n\t\treturn $getValue($archive, _path);\r\n\t}\r\n\treturn undefined;\r\n}\r\nfunction _getDataPathByUrl(path) {\r\n\tif (!url_startsWith_protocol(path)) {\r\n\t\tif (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\t\treturn path.slice(window.$ROOT_PATH.length);\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @returns {Promise<any>|any}\r\n */\r\nfunction $getValueAsync(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\t\r\n\t// try get value sync\r\n\tlet value = $getValue(obj, path);\r\n\t\r\n\t// if value exist\r\n\tif (value) {\r\n\t\tif (value instanceof Promise) {\r\n\t\t\t// ??\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait value;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\telse {// if value not exist, try await parent node\r\n\t\tlet ps = path.split(\"/\");\r\n\t\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\t\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\t\tlet key = ps[i];\r\n\t\t\tif (target[key] instanceof Promise) {\r\n\t\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\t\tawait target[key];\r\n\t\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (target[key]) {\r\n\t\t\t\t\ttarget = target[key];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet result = target[ps[lastIndex]];\r\n\t\tif (result instanceof Promise) {\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait result;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} url\r\n * @returns {Promise<any>}\r\n */\r\nexport let $get = function $get(url) {\r\n\treturn ResourceManager.get(url);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.pack = async function $get_pack(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj && obj[symbol_isPack]) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tif (process.env.NODE_ENV !== \"production\") {\r\n\t\t\tif (obj && !obj[symbol_isPack]) {\r\n\t\t\t\tthrow new TypeError(\"data: \" + path);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst url = $get.packUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, true);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, true);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.packSync = function get_packSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.data = async function $get_data(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.dataUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {any}\r\n */\r\n$get.dataSync = function get_dataSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.list = async function $get_list(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.listUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.listSync = function $get_listSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn Object.keys(obj);\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.dataUrl = function $get_dataUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"data\")) {\r\n\t\treturn `${window.$ROOT_PATH}data${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game data: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.packUrl = function $get_packUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"pack\")) {\r\n\t\treturn `${window.$ROOT_PATH}pack${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game pack: \" + path);\r\n}\r\n$get.listUrl = function $get_listUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"ls\")) {\r\n\t\treturn `${window.$ROOT_PATH}ls${path}.json`;\r\n\t}\r\n\tthrow new Error(path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.imageUrl = function $get_imagesUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"images\")) {\r\n\t\treturn `${window.$ROOT_PATH}images${path}.png`;\r\n\t}\r\n\tthrow new Error(\"Not game images: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundMp3Url = function $get_soundMp3Url(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.mp3`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundWavUrl = function $get_soundWavUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.wav`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.assetUrl = function $get_assetUrl(path) {\r\n\treturn `${window.$ROOT_PATH}${path}`;\r\n}\r\n$get.asset = function $get_asset(path) {\r\n\treturn $get($get.assetUrl(path));\r\n}\r\n\r\nwindow.$get = $get;\r\n\r\n\r\nexport class ItemAttrNormalize {\r\n\tstatic head(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic body(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic Face(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 4 ? 1 : 0;\r\n\t}\r\n\tstatic Hair(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 2 || g == 4 || g == 7 ? 1 : 0;\r\n\t}\r\n\tstatic Cap(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryFace(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEyes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEars(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Coat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Longcoat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Pants(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shoes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Glove(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shield(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Cape(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic _equip(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 0 ? 0 : (g == 1 ? 1 : 2);\r\n\t}\r\n}\r\n\r\nconst regexp_getHairStyleID = /(\\d{4,7})\\d$/;\r\nconst regexp_getFaceStyleID = /(\\d{2,5})\\d(\\d{2})$/;\r\n\r\nconst regexp_getHairColor = /\\d{4,7}(\\d)$/;\r\nconst regexp_getFaceColor = /\\d{2,5}(\\d)\\d{2}$/;\r\n\r\nexport class CharacterRenderConfig {\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumHairColor(style) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i;\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumFaceColor(style) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i + m[2];\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorHairID(style, color) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tlet id = m[1] + (color % 10);\r\n\t\treturn id;\r\n\t}\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorFaceID(style, color) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tlet id = m[1] + (color % 10) + m[2];\r\n\t\treturn id;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHairStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorHairID(id_1, 0) == CharacterRenderConfig.getColorHairID(id_2, 0);\r\n\t}\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFaceStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorFaceID(id_1, 0) == CharacterRenderConfig.getColorFaceID(id_2, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getHairColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getHairColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getFaceColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getFaceColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar _external_data = {\r\n\t\"requiredJobs\": [\r\n\t\t\"Beginner\"\r\n\t],\r\n\t\"requiredLevel\": 0,\r\n\t\"isCash\": true,\r\n\t\"name\": \"Blue Beanie\",\r\n\t\"desc\": null,\r\n\t\"id\": 1000000,\r\n\t\"requiredGender\": 0,\r\n\t\"typeInfo\": {\r\n\t\t\"overallCategory\": \"Equip\",\r\n\t\t\"category\": \"Armor\",\r\n\t\t\"subCategory\": \"Hat\"\r\n\t}\r\n};\r\n\r\nvar ItemTypeInfo = {\r\n\t\"Equip\": {\r\n\t\t\"Hat\": \"Cap\",\r\n\t\t\"Cape\": \"Cape\",\r\n\t\t\"Top\": \"Coat\",\r\n\t\t\"Overall\": \"Longcoat\",\r\n\t\t\"Glove\": \"Glove\",\r\n\t\t\"Bottom\": \"Pants\",\r\n\r\n\t\t\"Shield\": \"Shield\",\r\n\t\t\"Shoes\": \"Shoes\",\r\n\t\t\"Eye Decoration\": \"accessoryEyes\",\r\n\t\t\"Earrings\": \"accessoryEars\",\r\n\t\t//\"Ring\": \"\",\r\n\r\n\t\t//\"Pendant\": \"\",\r\n\t\t\"Face Accessory\": \"accessoryFace\",\r\n\t\t//\"Belt\": \"\",\r\n\t\t//\"Medal\": \"\",\r\n\t\t//\"Shoulder Accessory\": \"\",\r\n\t\t//\"Badge\": \"\",\r\n\r\n\t\t//\"Dragon Equipment\": \"\",\r\n\t\t//\"Mechanic Equipment\": \"\",\r\n\t\t//\"Pet Equipment\": \"\",\r\n\t\t//\"Android\": \"\",\r\n\t\t//\"Mechanical Heart\": \"\",\r\n\t\t//\"Bits\": \"\",\r\n\r\n\t\t\"Face\": \"Face\",\r\n\t\t\"Hair\": \"Hair\",\r\n\t},\r\n};\r\n\r\nResourceManager.external = {\r\n\tequip: {\r\n\t},\r\n};\r\n\r\nResourceManager.equip_map = {\r\n};\r\n\r\nfor (let i in ItemTypeInfo.Equip) {\r\n\tlet cate = ItemTypeInfo.Equip[i];\r\n\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 9; ++i) {\r\n\tlet cate = \"Face\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 8; ++i) {\r\n\tlet cate = \"Hair\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\n\r\nasync function load_external_resource(url) {\r\n\turl = url || \"/items.json\";\r\n\tlet raw;\r\n\r\n\ttry {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get.asset(\"equip.json\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\tthrow Error(\"'/equip' is empty\");\r\n\t\t}\r\n\t}\r\n\tcatch (ex) {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get(\"//labs.maplestory.io/api/gms/latest/item/category/equip\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < raw.length; ++i) {\r\n\t\tconst item = raw[i];\r\n\t\tconst id = String(item.id).padStart(8, \"0\");\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!(item.typeInfo && ItemTypeInfo[item.typeInfo.overallCategory])) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet clz = item.typeInfo.overallCategory.toLowerCase();\r\n\t\t\tlet cate = ItemTypeInfo[item.typeInfo.overallCategory][item.typeInfo.subCategory];\r\n\t\t\tif (!cate) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Face\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getFaceColor(id);\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Hair\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getHairColor(id);\r\n\t\t\t}\r\n\r\n\t\t\tlet it = {\r\n\t\t\t\tid: id,\r\n\t\t\t\tname: item.name,\r\n\t\t\t\tdesc: item.desc,\r\n\t\t\t\tcash: item.isCash ? 1 : 0,\r\n\t\t\t\ticon: {\r\n\t\t\t\t\t\"\": `//labs.maplestory.io/api/gms/latest/item/${item.id}/icon`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tResourceManager.external[clz][cate].push(it);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(\"external resource: id(\" + id + \")\");\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction update_external_equip_list() {\r\n\tconst url = \"https://labs.maplestory.io/api/gms/latest/item/category/equip\";\r\n\tload_external_resource(url).then(() => {\r\n\t\t_concat_external_resource(category, origin_data);\r\n\t\tconcat_external_resource = _concat_external_resource;\r\n\t\tconsole.log(\"done: update_external_equip_list\");\r\n\t});\r\n}\r\n\r\nlet external_resource_promise = load_external_resource();\r\n\r\nwindow.concat_external_resource = _concat_external_resource_p;\r\n\r\nwindow.trigger_update_external_equip_list = function () {\r\n\texternal_resource_promise = load_external_resource();\r\n\twindow.concat_external_resource = _concat_external_resource_p;\r\n}\r\n\r\nasync function _concat_external_resource_p(category, origin_data) {\r\n\tawait external_resource_promise;\r\n\t_concat_external_resource(category, origin_data);\r\n\tconcat_external_resource = _concat_external_resource;\r\n}\r\n\r\nfunction _concat_external_resource(category, origin_data) {\r\n\ttry {\r\n\t\tconst list = ResourceManager.external.equip[category];\r\n\t\tif (!list) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet id_map = ResourceManager.equip_map[category];\r\n\r\n\t\tif (!id_map) {\r\n\t\t\tid_map = new Map();\r\n\t\t\t\r\n\t\t\torigin_data.forEach(item => {\r\n\t\t\t\tid_map.set(item.id, item);\r\n\t\t\t});\r\n\r\n\t\t\tResourceManager.equip_map[category] = id_map;\r\n\t\t}\r\n\r\n\t\tlist.forEach((item) => {\r\n\t\t\tlet id = item.id;\r\n\t\t\tif (!id_map.has(id)) {\r\n\t\t\t\titem.$foreign = true;\r\n\t\t\t\torigin_data.push(item);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet ori_item = id_map.get(id);\r\n\t\t\t\tori_item._name = item.name || \"\";\r\n\t\t\t\tori_item._desc = item.desc || \"\";\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcatch (ex) {\r\n\t\tconsole.error(ex);\r\n\t\tdebugger;\r\n\t}\r\n}\r\n\r\nwindow.load_extern_item_data = async function (id) {\r\n\tlet _raw = JSON.parse(await $get(`//labs.maplestory.io/api/gms/latest/item/${id}`));\r\n\tlet raw = {};\r\n\r\n\tlet default_ = _raw.frameBooks.default ? _raw.frameBooks.default.frames[0]:null;\r\n\r\n\tfor (let i in _raw.frameBooks) {\r\n\t\tlet _act = _raw.frameBooks[i];\r\n\t\tlet act = [];\r\n\r\n\t\tfor (let j = 0; j < _act.frames.length; ++j) {\r\n\t\t\tlet frame = _act.frames[j] || default_;\r\n\t\t\tif (!frame || !frame.effects) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet _frags = frame.effects;\r\n\t\t\tlet frags = {};\r\n\t\t\tfor (let k in _frags) {\r\n\t\t\t\tlet _frag = _frags[k];\r\n\t\t\t\tif (_frag.image) {\r\n\t\t\t\t\tfrags[k] = {\r\n\t\t\t\t\t\t\"\": \"data:image/png;base64,\" + _frag.image,\r\n\t\t\t\t\t\t\"origin\": _frag.originOrZero || _frag.origin || _frag.center,\r\n\t\t\t\t\t\t\"map\": _frag.mapOffset,\r\n\t\t\t\t\t\t\"z\": _frag.position\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tact[j] = frags;\r\n\t\t}\r\n\r\n\t\traw[i] = act;\r\n\t}\r\n\r\n\traw.info = {\r\n\t\tislot: _raw.metaInfo.equip.islot,\r\n\t\tvslot: _raw.metaInfo.equip.vslot,\r\n\t\ticon: _raw.metaInfo.icon ? (\"data:image/png;base64,\" + _raw.metaInfo.icon.iconRaw) : \"\",\r\n\t\tcash: (_raw.metaInfo.cash && _raw.metaInfo.cash.cash) ? 1 : 0,\r\n\t};\r\n\r\n\treturn raw;\r\n}\r\n","﻿\r\nimport {\r\n\tb2_linearSlop,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2Body, b2Fixture,\r\n\tb2PolygonShape, b2CircleShape,\r\n\tb2WheelJointDef, b2RevoluteJointDef, b2PrismaticJointDef, b2MouseJointDef,\r\n\tb2Joint, b2RevoluteJoint, b2PrismaticJoint, b2MouseJoint,\r\n\tb2Contact,\r\n} from \"./Physics.js\";\r\n\r\nimport { Foothold } from \"./Ground.js\";\r\n\r\nimport { World } from \"./World.js\";\r\n\r\nimport { CharacterMoveElem } from \"../../Client/PMovePath.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { SceneMap } from \"../Map.js\";\r\nimport { LadderRope } from \"./LadderRope.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nconst DEGTORAD = Math.PI / 180;\r\n\r\nlet b2Vec2_temp = new b2Vec2();\r\n\r\n/**\r\n * physics profile\r\n */\r\nconst chara_profile = {\r\n\twidth: 25 / $gv.CANVAS_SCALE,\r\n\theight: 48 / $gv.CANVAS_SCALE,\r\n\tdensity: 1,\r\n\t/** radius */\r\n\tget foot_width() {\r\n\t\treturn (chara_profile.width * 0.5);\r\n\t},\r\n\t/** radius */\r\n\tget foot_j_width() {\r\n\t\treturn (chara_profile.width * 0.4);\r\n\t},\r\n};\r\n\r\n(function () {\r\n\tconst jumpSpeed = 555;//??\r\n\tconst fallSpeed = 670;//px/s\r\n\tconst walkSpeed = 125;//px/s\r\n\t\r\n\twindow.JUMP_FORCE = jumpSpeed;\r\n\r\n\twindow.MOVEMENT_VELOCITY = walkSpeed / $gv.CANVAS_SCALE;\r\n\twindow.$LADDER_SPEED = walkSpeed / $gv.CANVAS_SCALE;\r\n\r\n\twindow.PLAYER_USE_WHEEL_WALKER = false;\r\n\r\n\twindow.FOOT_FRICTION = 1;\r\n\r\n\twindow.MOVEMENT_POWER = 140000;\r\n\twindow.MOVEMENT_STOP_POWER = 140000;\r\n\r\n\twindow.PORTAL_COOLDOWN = 1000;\r\n})();\r\n\r\n\r\nexport class PPlayerState {\r\n\tconstructor() {\r\n\t\t/** @type {boolean} - ApplyForce(jump_force) until leave foothold */\r\n\t\tthis._begin_jump = false;\r\n\r\n\t\t/** jump_count = jump ? jump_count : 0 */\r\n\t\tthis.jump = true;\r\n\r\n\t\t/** jump_count = jump ? jump_count : 0 */\r\n\t\tthis.jump_count = 0;\r\n\r\n\t\t/** ?? */\r\n\t\tthis._drop = true;\r\n\r\n\t\tthis.walk = false;\r\n\r\n\t\tthis.prone = false;\r\n\r\n\t\t/** TODO: fallDown */\r\n\t\tthis.dropDown = false;\r\n\r\n\t\tthis._fly = false;//not jump \r\n\t\t\r\n\t\tthis.brake = true;//??\r\n\t\t\r\n\t\t/** @type {-1|1} */\r\n\t\tthis.front = -1;\r\n\r\n\t\t/** @type {boolean} - is use ladder */\r\n\t\tthis.ladder = false;\r\n\r\n\t\t/**\r\n\t\t * action animation\r\n\t\t * @type {-1|0|1} - up: -1, down: 1, stop: 0\r\n\t\t */\r\n\t\tthis.ladder_move_dir = 0;\r\n\r\n\t\t/** @type {number} - 無敵時間，unit is millisecond */\r\n\t\tthis.invincible = 0;\r\n\t\t\r\n\t\t/** @type {boolean} - can not move or jump */\r\n\t\tthis.freeze = false;\r\n\r\n\t\t/** @type {boolean} - can not move or jump */\r\n\t\tthis.invokeSkill = false;\r\n\r\n\t\t/** @type {number} - use portal cooldown time，unit is millisecond */\r\n\t\tthis.portal_cooldown = 0;\r\n\t\t\r\n\t\t//\r\n\r\n\t\t/** @type {number} - knockback time，unit is millisecond */\r\n\t\tthis.knockback = 0;\r\n\r\n\t\t/** @type {boolean} - off walker power */\r\n\t\tthis.outOfControl = false;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {number} jump_height\r\n * @param {b2Vec2} gravity\r\n */\r\nfunction _CalcJumpImpulse(jump_height, gravity) {\r\n\tlet impulse = Math.sqrt(jump_height * 2.0 * Math.abs(gravity.y));\r\n\t//(impulse = m * v) => (F = ∫ Mass * dVel)\r\n\treturn impulse;\r\n}\r\n\r\n\r\nclass ControlKeys {\r\n\tconstructor() {\r\n\t\tthis.up = 0;\r\n\t\tthis.left = 0;\r\n\t\tthis.down = 0;\r\n\t\tthis.right = 0;\r\n\t\tthis.jump = 0;\r\n\t\tthis.enterPortal = 0;//TODO: key: enterPortal\r\n\t}\r\n}\r\n\r\nexport class FootContact {\r\n\t/**\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} position\r\n\t * @param {number} priority\r\n\t */\r\n\tconstructor(foothold, position, priority) {\r\n\t\t/** @type {Foothold} */\r\n\t\tthis.foothold = foothold;\r\n\r\n\t\t/** @type {b2Vec2} */\r\n\t\tthis.position = position;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.priority = priority;\r\n\t}\r\n}\r\n\r\nclass PCharacterBase {\r\n\tconstructor() {\r\n\t\t/** @type {boolean} */\r\n\t\tthis.enable = true;\r\n\r\n\t\tthis.chara_profile = Object.assign({}, chara_profile);\r\n\t\t\r\n\t\tthis.setMovementSpeed(100);\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.foot_walk = null;\r\n\r\n\t\t/** @type {b2Joint|b2RevoluteJoint} */\r\n\t\tthis.walker = null;\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tthis.$foothold = null;\r\n\r\n\t\t/**\r\n\t\t * this.$foothold old value\r\n\t\t * @type {Foothold}\r\n\t\t */\r\n\t\tthis.prev_$fh = null;\r\n\r\n\t\t/**\r\n\t\t * no contact leave_$fh\r\n\t\t * where foothold chara dropDown\r\n\t\t * @type {Foothold}\r\n\t\t */\r\n\t\tthis.leave_$fh = null;\r\n\r\n\r\n\t\t/** @type {Foothold} - in World::Setp */\r\n\t\tthis._foothold = null;\r\n\r\n\t\t/** @type {b2Vec2} - contact foothold point */\r\n\t\tthis._foot_at = new b2Vec2();\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._foothold_priority = 0;\r\n\t\t\r\n\t\t/** @type {FootContact[]} */\r\n\t\tthis._foot_contact_list = [];\r\n\r\n\r\n\t\t/** @type {MapPortal} */\r\n\t\tthis.portal = null;\r\n\r\n\r\n\t\t/** @type {LadderRope} */\r\n\t\tthis.ladder = null;\r\n\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._walker_omega = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.jump_force = JUMP_FORCE;\r\n\r\n\t\tthis.state = new PPlayerState();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {boolean} clearForce\r\n\t */\r\n\tsetPosition(x, y, clearForce) {\r\n\t\tconst by = y - this.chara_profile.foot_width - this.chara_profile.height * 0.75 * 0.5;\r\n\t\tconst fy = y - this.chara_profile.foot_width;\r\n\r\n\t\tthis.body.SetPositionXY(x, by);\r\n\r\n\t\ttry {\r\n\t\t\tif (this.foot_walk)\r\n\t\t\t\tthis.foot_walk.SetPositionXY(x, fy);\r\n\r\n\t\t\tif (clearForce) {\r\n\t\t\t\tconst speed = new b2Vec2(0, 0);\r\n\t\t\t\tthis.body.ConstantVelocity(speed);\r\n\t\t\t\tif (this.foot_walk)\r\n\t\t\t\t\tthis.foot_walk.ConstantVelocity(speed);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * get bottom position\r\n\t * @returns {{x: number, y: number}}\r\n\t */\r\n\tgetPosition() {\r\n\t\tconst pos = this.foot_walk.GetPosition();\r\n\t\treturn new b2Vec2(pos.x, pos.y + this.chara_profile.foot_width);\r\n\t}\r\n\r\n\t/**\r\n\t * from.tn(hp00_1) == to.pn(hp00_1) && from.pn(hp00) == to.tn(hp00)\r\n\t * @param {MapPortal} portal\r\n\t * @returns {boolean} true if enter portal\r\n\t */\r\n\t_usePortal(portal) {\r\n\t\tif (!portal.enable || this.state.portal_cooldown > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t/** @type {SceneMap} */\r\n\t\tconst mapRenderer = portal.mapRenderer;\r\n\r\n\t\tconst mapController = mapRenderer.controller;\r\n\t\t\r\n\t\tconst map_id = portal.getMap();\r\n\t\t\r\n\t\tif (portal.exeScript) {//TODO: portal script\r\n\t\t\tportal.exeScript(this);\r\n\t\t}\r\n\t\telse if (map_id) {\r\n\t\t\tif (map_id == mapRenderer.map_id) {\r\n\t\t\t\tconst reg = portal.tn.match(/(^[a-z_]+)(\\d+$)/) || portal.tn.match(/(^[a-z]+)\\d+_\\d+$/);//pn?tn?\r\n\t\t\t\tconst cmd = reg[1];\r\n\r\n\t\t\t\tif (cmd == \"hp\") {\r\n\t\t\t\t\tlet fromTn = portal.tn;\r\n\t\t\t\t\tlet toPortal = mapRenderer.portalMgr.portals.find(function (toPortal) {\r\n\t\t\t\t\t\treturn fromTn == toPortal.pn;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._gotoPortal(toPortal);\r\n\t\t\t\t}\r\n\t\t\t\telse if (cmd == \"pt_go\") {\r\n\t\t\t\t\tdebugger;//??\r\n\r\n\t\t\t\t\tconst tpid = parseInt(reg[2], 10);\r\n\t\t\t\t\tconst tp = mapRenderer.portalMgr.portals[tpid];\r\n\r\n\t\t\t\t\tthis._gotoPortal(tp);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(`portal.pn: ${portal.pn}, portal.tn: ${portal.tn}, %o`, portal);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmapController.doAfterStep(function () {\r\n\t\t\t\t\tmapRenderer.unload();\r\n\t\t\t\t\tmapRenderer.load(map_id);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"portal: $o\", portal);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.state.portal_cooldown = PORTAL_COOLDOWN;//防止重複\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * @param {MapPortal} portal\r\n\t */\r\n\t_gotoPortal(portal) {\r\n\t\t/** @type {SceneMap} */\r\n\t\tconst mapRenderer = portal.mapRenderer;\r\n\t\tconst mapController = mapRenderer.controller;\r\n\r\n\t\t//not in world.Step\r\n\t\tmapController.doAfterStep(() => {\r\n\t\t\tconst x = portal.x / $gv.CANVAS_SCALE;\r\n\t\t\tconst y = (portal.y - 3) / $gv.CANVAS_SCALE;//adj portal pos\r\n\t\t\tthis.setPosition(x, y, true);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * set ladder, not use\r\n\t * @param {LadderRope} ladder\r\n\t */\r\n\tcontactLadder(ladder) {\r\n\t\tif (ladder) {\r\n\t\t\tthis.ladder = ladder;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.ladder = null;\r\n\t\t}\r\n\t}\r\n\tleaveLadder() {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tthis._useLadder(false);\r\n\t\t\tthis.contactLadder(null, null);//set no contact\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {boolean} flag - true: use, false: no use\r\n\t */\r\n\tuseLadder(flag) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tthis._useLadder(flag);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {boolean} flag - true: use, false: no use\r\n\t */\r\n\t_useLadder(flag) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tif (flag) {\r\n\t\t\tif (this.ladder && !this.$ladder_pj) {\r\n\t\t\t\tconst ladderBody = this.ladder.body;\r\n\r\n\t\t\t\tif (ladderBody.GetAngle() || ladderBody.GetAngularVelocity()) {\r\n\t\t\t\t\tthis.body.SetAngle(ladderBody.GetAngle());\r\n\t\t\t\t\tthis.body.SetFixedRotation(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state.ladder = true;\r\n\t\t\t\tthis.state.jump = false;\r\n\t\t\t\tthis.state.jump_count = 0;\r\n\r\n\t\t\t\tthis.body.SetAwake(true);\r\n\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\tthis.body.m_type = b2BodyType.b2_kinematicBody;\r\n\t\t\t\t//\r\n\t\t\t\tthis.foot_walk.SetAwake(true);\r\n\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t\tthis.foot_walk.m_type = b2BodyType.b2_kinematicBody;\r\n\r\n\t\t\t\tthis.walker.SetMotorSpeed(0);\r\n\r\n\t\t\t\t// create joint\r\n\r\n\t\t\t\tlet height = this.ladder.calcHeight() / $gv.CANVAS_SCALE;\r\n\r\n\t\t\t\t//let ground = world.ground.bodies[0];\r\n\r\n\t\t\t\tthis.setPosition(ladderBody.GetPosition().x, this.getPosition().y);\r\n\r\n\t\t\t\tlet pjd = new b2PrismaticJointDef();\r\n\t\t\t\t//pjd.Initialize(ladderBody, this.body, anchor, new b2Vec2(0, 1));\r\n\t\t\t\t{\r\n\t\t\t\t\tpjd.bodyA = ladderBody;\r\n\t\t\t\t\tpjd.bodyB = this.foot_walk;//this.body;\r\n\t\t\t\t\t//pjd.localAnchorA.Set(0, 0);\r\n\t\t\t\t\t//pjd.localAnchorB.Set(0, 0);\r\n\t\t\t\t\tpjd.localAxisA.Set(0, 1);\r\n\t\t\t\t\t//pjd.referenceAngle = 0;\r\n\t\t\t\t}\r\n\t\t\t\tpjd.lowerTranslation = -this.chara_profile.foot_width;\r\n\t\t\t\tpjd.upperTranslation = height + this.chara_profile.foot_width;\r\n\t\t\t\tpjd.enableLimit = true;\r\n\t\t\t\tpjd.maxMotorForce = this._getMass() * 1000;\r\n\r\n\t\t\t\t/** @type {b2PrismaticJoint} */\r\n\t\t\t\tlet pj = world.CreateJoint(pjd);\r\n\r\n\t\t\t\tthis.$ladder_pj = pj;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.ladder) {\r\n\t\t\t\t//this.ladder = null;\r\n\r\n\t\t\t\tif (this.state.ladder) {\r\n\t\t\t\t\tthis.state.ladder = false;\r\n\r\n\t\t\t\t\tthis.body.SetAwake(true);\r\n\t\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\t\tthis.body.m_type = b2BodyType.b2_dynamicBody;\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.foot_walk.SetAwake(true);\r\n\t\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t\t\tthis.foot_walk.m_type = b2BodyType.b2_dynamicBody;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.$ladder_pj) {\r\n\t\t\t\tworld.DestroyJoint(this.$ladder_pj);\r\n\t\t\t\tdelete this.$ladder_pj;\r\n\r\n\t\t\t\tthis.body.SetAngle(0);\r\n\t\t\t\tthis.body.SetFixedRotation(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremove_sticky() {\r\n\t\tif (this.$sticky_pj) {\r\n\t\t\tthis.body.m_world.DestroyJoint(this.$sticky_pj);\r\n\t\t\tthis.$sticky_pj = null;\r\n\t\t}\r\n\t}\r\n\r\n\tactionJump() {\r\n\t\tthis.state._begin_jump = true;\r\n\t\t++this.state.jump_count;\r\n\t}\r\n\t//actionWalk(front) {\r\n\t//}\r\n\tactionDropdown() {\r\n\t\tthis.leave_$fh = this.$foothold;\r\n\t\tthis.$foothold = null;\r\n\t\tthis.state.dropDown = true;\r\n\t\tthis.body.SetAwake(true);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Partial<ControlKeys>} keys\r\n\t */\r\n\tcontrol(keys) {\r\n\t\tif (!this._isCanMove()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.state.ladder && this.$ladder_pj) {\r\n\t\t\tconst ladderBody = this.ladder.body;\r\n\t\t\tconst speed = (window.$LADDER_SPEED || 1);\r\n\r\n\t\t\tif (ladderBody) {\r\n\t\t\t\tif (ladderBody.GetAngle() || ladderBody.GetAngularVelocity()) {\r\n\t\t\t\t\tthis.body.SetAngle(ladderBody.GetAngle());\r\n\t\t\t\t\tthis.body.SetFixedRotation(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//else {\r\n\t\t\t//\tdebugger;\r\n\t\t\t//}\r\n\r\n\t\t\tif (keys.up && !keys.down) {\r\n\t\t\t\tthis.state.ladder_move_dir = -1;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(true);\r\n\t\t\t\tthis.$ladder_pj.SetMotorSpeed(-speed);\r\n\t\t\t}\r\n\t\t\telse if (keys.down && !keys.up) {\r\n\t\t\t\tthis.state.ladder_move_dir = 1;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(true);\r\n\t\t\t\tthis.$ladder_pj.SetMotorSpeed(speed);\r\n\t\t\t}\r\n\t\t\telse {//stop\r\n\t\t\t\tthis.state.ladder_move_dir = 0;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(false);\r\n\r\n\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\t//\r\n\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t}\r\n\t\t\tif (keys.jump) {\r\n\t\t\t\tconst world = this.body.m_world;\r\n\t\t\t\tconst mass = this._getMass();\r\n\r\n\t\t\t\tif (keys.left && keys.right) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t\telse if (keys.left) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t\tworld.doAfterStep(() => {\r\n\t\t\t\t\t\t//const f = new b2Vec2(0, -world.m_gravity.y * mass);\r\n\t\t\t\t\t\t//this.body.ApplyForceToCenter(f, true);\r\n\t\t\t\t\t\tthis.body.ApplyLinearImpulseToCenter2(-speed * mass, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if (keys.right) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t\tworld.doAfterStep(() => {\r\n\t\t\t\t\t\t//const f = new b2Vec2(0, -world.m_gravity.y * mass);\r\n\t\t\t\t\t\t//this.body.ApplyForceToCenter(f, true);\r\n\t\t\t\t\t\tthis.body.ApplyLinearImpulseToCenter2(speed * mass, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.$ladder_pj) {\r\n\t\t\tdebugger\r\n\t\t\tthis.useLadder(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state.outOfControl) {\r\n\t\t\t\tthis.walker.EnableMotor(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.walker.EnableMotor(true);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.portal && keys.up) {\r\n\t\t\t\t//TODO: enter portal key: keys.enterPortal\r\n\t\t\t\tlet portal = this.portal;\r\n\t\t\t\tif (this._usePortal(portal)) {\r\n\t\t\t\t\tthis.portal = null;//使用完畢\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.ladder && (\r\n\t\t\t\t(keys.down && this.$foothold && this.ladder.body.GetLocalPoint(this.getPosition(), b2Vec2_temp).y <= 0) ||\r\n\t\t\t\t(keys.up && !this.$foothold && this.ladder.body.GetLocalPoint(this.getPosition(), b2Vec2_temp).y > 0))\r\n\t\t\t) {\r\n\t\t\t\tthis.state.ladder_move_dir = 0;//reset\r\n\t\t\t\tthis.useLadder(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst wheel_sp = this._walker_omega;\r\n\t\t\tconst velocity = this.body.GetLinearVelocity();//foot_walk\r\n\r\n\t\t\tif (!this.state.jump && !this.state.dropDown) {\r\n\t\t\t\t//dropDown\r\n\t\t\t\tif (keys.down && keys.jump) {\r\n\t\t\t\t\tthis.actionDropdown();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//趴下\r\n\t\t\t\tif (keys.down) {\r\n\t\t\t\t\tthis.state.prone = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.prone = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.state.prone = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (keys.left && !keys.right) {\r\n\t\t\t\tthis.state.walk = true;\r\n\t\t\t\tthis.state.front = -1;\r\n\t\t\t\tthis.walker.SetMotorSpeed(-wheel_sp);\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(true);//power on\r\n\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t}\r\n\t\t\telse if (keys.right && !keys.left) {\r\n\t\t\t\tthis.state.walk = true;\r\n\t\t\t\tthis.state.front = 1;\r\n\t\t\t\tthis.walker.SetMotorSpeed(wheel_sp);\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(true);//power on\r\n\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.state.walk = false;\r\n\r\n\t\t\t\tif (!this.state.jump) {\r\n\t\t\t\t\tlet vx = velocity.x;\r\n\t\t\t\t\tif (vx > 50 * b2_linearSlop) {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(-vx * Math.PI / 2 / Math.PI / this.chara_profile.width / 2);//煞車但無法止滑\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (vx < -50 * b2_linearSlop) {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(-vx * Math.PI / 2 / Math.PI / this.chara_profile.width / 2);//煞車但無法止滑\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(0);//stop motor\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.walker.SetMotorSpeed(0);//stop motor\r\n\t\t\t\t}\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_STOP_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(false);//power off\r\n\r\n\t\t\t\tif (this.state.止滑) {\r\n\t\t\t\t\tthis.sticky(this.getPosition());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (keys.jump && this._isCanJump()) {\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t\tthis.actionJump();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_isCanJump() {\r\n\t\treturn !this.state.jump && !this.isDrop();\r\n\t}\r\n\r\n\t_isCanMove() {\r\n\t\treturn !this.state.freeze && !this.state.knockback;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} increment_percent - increment_percent >= -100\r\n\t */\r\n\tsetMovementSpeed(increment_percent) {\r\n\t\tif (!(Number.isSafeInteger(increment_percent) || (!Number.isNaN(increment_percent) && Number.isFinite(increment_percent)))) {\r\n\t\t\tdebugger\r\n\t\t\tif (process.env.NODE_ENV !== '') {\r\n\t\t\t\tthrow new TypeError(\"increment_percent must is number\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet scale = (100 + increment_percent) / 100;\r\n\t\tif (scale > 0) {\r\n\t\t\tthis._setWalkerOmegaFromVelocity(MOVEMENT_VELOCITY * scale);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._setWalkerOmegaFromVelocity(0);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} speed - speed = pixel / second\r\n\t */\r\n\tsetMovementSpeedPixel(speed) {\r\n\t\tlet v = speed / $gv.CANVAS_SCALE;\r\n\t\tif (v > 0) {\r\n\t\t\tthis._walker_omega = v;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._walker_omega = 0;\r\n\t\t}\r\n\t}\r\n\t_setWalkerOmegaFromVelocity(movement_velocity) {\r\n\t\tthis._walker_omega = movement_velocity / (Math.PI * this.chara_profile.width) * Math.PI;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} increment_percent - increment_percent >= -100\r\n\t */\r\n\tsetjumpForce(increment_percent) {\r\n\t\tif (!(Number.isSafeInteger(increment_percent) || (!Number.isNaN(increment_percent) && Number.isFinite(increment_percent)))) {\r\n\t\t\tdebugger\r\n\t\t\tthrow new TypeError(\"increment_percent must is number\");\r\n\t\t}\r\n\r\n\t\tlet scale = (100 + increment_percent) / 100;\r\n\t\tif (scale <= 0) {\r\n\t\t\tthis.jump_force = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst gravity = this.body.GetWorld().GetGravity();\r\n\t\t\tthis.jump_force = JUMP_FORCE * scale;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\t_getMass() {\r\n\t\treturn this.body.GetMass() + this.foot_walk.GetMass();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} s\r\n\t */\r\n\tsetGravityScale(s) {\r\n\t\tthis.body.SetGravityScale(s);\r\n\t\tthis.foot_walk.SetGravityScale(s);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @returns {string}\r\n\t */\r\n\tget _body_category() {\r\n\t\treturn \"body\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tlet first_pos = new b2Vec2(1 / $gv.CANVAS_SCALE, -2 / $gv.CANVAS_SCALE);\r\n\t\tlet jmp_body_pos_y = first_pos.y + this.chara_profile.height * 0.75 * 0.5;\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tbdef.type = b2BodyType.b2_dynamicBody;\r\n\t\tbdef.bullet = true;//get real contact point\r\n\t\tbdef.position.Set(first_pos.x, first_pos.y);\r\n\t\tbdef.userData = this;\r\n\r\n\t\tfdef.userData = this;\r\n\r\n\t\t//create body\r\n\t\t{\r\n\t\t\tthis.body = world.CreateBody(bdef);\r\n\t\t\tthis.body.SetFixedRotation(true);\r\n\t\t}\r\n\t\tthis.body.$type = \"player\";\r\n\r\n\t\tfdef.filter.Copy(FilterHelper.get(this._body_category));\r\n\r\n\t\t//head\r\n\t\t{\r\n\t\t\tshape.SetAsBox(\r\n\t\t\t\tthis.chara_profile.width * 0.5,\r\n\t\t\t\tthis.chara_profile.height * 0.75 * 0.5,\r\n\t\t\t\tb2Vec2.ZERO,//new b2Vec2(0, 0),//\r\n\t\t\t\t0);\r\n\r\n\t\t\tfdef.density = this.chara_profile.density;\r\n\t\t\tfdef.friction = 0;\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tfdef.shape = shape;\r\n\t\t\t//\r\n\t\t\tthis.fixture = this.body.CreateFixture(fdef);\r\n\t\t\tthis.fixture.$type = \"player\";\r\n\t\t}\r\n\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"foot\"));\r\n\t\t//\r\n\t\t//create walker\r\n\t\t{\r\n\t\t\tbdef.type = b2BodyType.b2_dynamicBody;\r\n\t\t\tbdef.position.Set(first_pos.x, jmp_body_pos_y);\r\n\t\t\tthis.foot_walk = world.CreateBody(bdef);\r\n\r\n\t\t\tlet circle = new b2CircleShape();\r\n\t\t\tcircle.m_p.Set(0, 0);\r\n\t\t\tcircle.m_radius = this.chara_profile.foot_width;\r\n\t\t\tfdef.shape = circle;\r\n\t\t\tfdef.density = this.chara_profile.density;\r\n\t\t\t//fdef.filter = world.getFilterDefine(\"pl_ft_walk\");\r\n\t\t\tfdef.friction = FOOT_FRICTION;//walk\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tlet fixture = this.foot_walk.CreateFixture(fdef);\r\n\t\t\tfixture.$type = \"pl_ft_walk\";\r\n\r\n\t\t\tthis._set_foot_listener(fixture);\r\n\t\t}\r\n\t\tthis.foot_walk.$type = \"pl_ft_walk\";\r\n\r\n\t\t//j2\r\n\t\t{\r\n\t\t\tlet jd;\r\n\r\n\t\t\tif (PLAYER_USE_WHEEL_WALKER) {\r\n\t\t\t\tjd = new b2WheelJointDef();//b2WheelJointDef//b2RevoluteJointDef\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tjd = new b2RevoluteJointDef();//b2WheelJointDef//b2RevoluteJointDef\r\n\t\t\t}\r\n\r\n\t\t\tif (jd instanceof b2RevoluteJointDef) {\r\n\t\t\t\tjd.Initialize(this.body, this.foot_walk, new b2Vec2(first_pos.x, jmp_body_pos_y));\r\n\t\t\t}\r\n\t\t\tif (jd instanceof b2WheelJointDef) {\r\n\t\t\t\tjd.Initialize(this.body, this.foot_walk, new b2Vec2(first_pos.x, jmp_body_pos_y), new b2Vec2(0, -1));\r\n\t\t\t}\r\n\t\t\tjd.enableMotor = true;\r\n\t\t\tjd.maxMotorTorque = MOVEMENT_POWER;\r\n\t\t\t//jd.motorSpeed = 40;\r\n\t\t\tif (jd instanceof b2RevoluteJointDef) {\r\n\t\t\t\tjd.enableLimit = false;\r\n\t\t\t\tjd.lowerAngle = 0 * DEGTORAD;\r\n\t\t\t\tjd.upperAngle = -0 * DEGTORAD;\r\n\t\t\t\tjd.referenceAngle = 0;\r\n\t\t\t}\r\n\t\t\tif (jd instanceof b2WheelJointDef) {\r\n\t\t\t\tjd.frequencyHz = 10;//springs\r\n\t\t\t\tjd.dampingRatio = 1;//springs\r\n\t\t\t}\r\n\t\t\tthis.walker = world.CreateJoint(jd);\r\n\t\t}\r\n\t\t\r\n\t\tthis.body.addStep(this.Step.bind(this));\r\n\t\tthis.body.addAfterStep(this.AfterStep.bind(this));\r\n\t\t\r\n\t\tthis.setMovementSpeed(0);\r\n\t\tthis.setjumpForce(0);\r\n\t}\r\n\t\r\n\t/**\r\n\t * destroy this\r\n\t * @returns {void}\r\n\t */\r\n\t_destroy() {\r\n\t\t/** @type {World} world */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tif (this.body) {\r\n\t\t\tworld.DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"this already dead\");\r\n\t\t}\r\n\t\tif (this.foot_walk) {\r\n\t\t\tworld.DestroyBody(this.foot_walk);\r\n\t\t\tthis.foot_walk = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Fixture} fa - self\r\n\t * @param {b2Fixture} fb - other\r\n\t * @returns {boolean}\r\n\t */\r\n\t_isFromSelfContact(fa, fb) {\r\n\t\tlet a = fa.GetBody().GetUserData();\t// A data\r\n\t\tlet b = fb.GetBody().GetUserData();\t// B data\r\n\r\n\t\tif (a && b && a.body && b.body && a.body == b.body) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa - self\r\n\t * @param {b2Fixture} fb - other\r\n\t * @returns {boolean} - return true if from self and disable this contact\r\n\t */\r\n\t_ignoreSelfContact(contact, fa, fb) {\r\n\t\tif (this._isFromSelfContact(fa, fb)) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t_set_foot_listener(foot_fixture) {\r\n\t\tfoot_fixture.beginContact = this.__beginContact_walker;\r\n\t\tfoot_fixture.endContact = this.__endContact_walker;\r\n\t\tfoot_fixture.preSolve = this.__preSolve_walker;\r\n\t}\r\n\t\r\n\t__beginContact_walker(contact, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet targetBody = fb.m_body;\r\n\t\tif (targetBody) {\r\n\t\t\tswitch (targetBody.$type) {\r\n\t\t\t\tcase \"portal\":\r\n\t\t\t\t\tthis._beginContactPortal(fb.m_userData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__endContact_walker(contact, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet targetBody = fb.m_body;\r\n\t\tif (targetBody) {\r\n\t\t\tswitch (targetBody.$type) {\r\n\t\t\t\tcase \"portal\":\r\n\t\t\t\t\tthis._endContactPortal(fb.m_userData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__preSolve_walker(contact, oldManifold, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (fa.$type == \"pl_ft_walk\" && fb.$type == \"pl_ft_walk\") {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {MapPortal} portal */\r\n\t_beginContactPortal(portal) {\r\n\t\tthis.portal = portal;\r\n\r\n\t\tif (portal.enable) {\r\n\t\t\tif (portal.script) {\r\n\t\t\t\tconsole.log(\"goto map: \" + portal.getMap() + \"; \" + portal.script);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"goto map: \" + portal.getMap());\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"contact portal: %o\", portal);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {MapPortal} portal */\r\n\t_endContactPortal(portal) {\r\n\t\tif (this.portal == portal) {\r\n\t\t\tthis.portal = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 決定接觸哪一個foothold，忽略牆壁\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} foot_at\r\n\t * @returns {number}\r\n\t */\r\n\t__priority_foothold_contact(foothold, foot_at) {\r\n\t\tif (foothold.is_wall) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif (this.$foothold && this.$foothold.chain != foothold.chain) {\r\n\t\t\tif (this.$foothold != foothold && !this.state.dropDown) {\r\n\t\t\t\t// 接觸多個 foothold 以 \"下面\" 的為主，上坡時以 \"下(上)一個\" 為主\r\n\t\t\t\t// 忽略連續 foothold 重疊的點\r\n\t\t\t\tif (this._foot_at && foot_at.y < this._foot_at.y) {\r\n\t\t\t\t\tif ((!this.$foothold.prev || (this.$foothold.prev == foothold.id && foothold.y1 < this.$foothold.y1)) ||\r\n\t\t\t\t\t\t(!this.$foothold.next || (this.$foothold.next == foothold.id && foothold.y2 < this.$foothold.y2))\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//新的接觸\r\n\t\treturn 2;\r\n\t}\r\n\r\n\t/**\r\n\t * 決定接觸哪一個foothold，忽略牆壁\r\n\t * if foothold is wall then return true\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} foot_at\r\n\t */\r\n\t_which_foothold_contact(foothold, foot_at) {\r\n\t\tif (foothold.is_wall) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet priority = this.__priority_foothold_contact(foothold, foot_at);\r\n\t\tif (priority > 0) {\r\n\t\t\tif (!this._foothold_priority || priority >= this._foothold_priority) {\r\n\t\t\t\tthis._foothold = foothold;\r\n\t\t\t\tthis._foot_at = foot_at.Clone();\r\n\t\t\t\tthis._foothold_priority = priority;\r\n\t\t\t\t//this.sticky(foot_at);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor (let fc of this._foot_contact_list) {\r\n\t\t\t\t\tif (foothold == fc.foothold) {\r\n\t\t\t\t\t\tfc.priority = priority;\r\n\t\t\t\t\t\tfc.position = foot_at;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet foot_contact = new FootContact(foothold, foot_at, priority);\r\n\t\t\t\tthis._foot_contact_list.push(foot_contact);\r\n\t\t\t\tthis._foot_contact_list.sort((a, b) => a.priority - b.priority);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Vec2} anchor\r\n\t */\r\n\tsticky(anchor) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tif (this.$sticky_pj) {\r\n\t\t\t\treturn;\r\n\r\n\t\t\t\tworld.DestroyJoint(this.$sticky_pj);\r\n\t\t\t}\r\n\r\n\t\t\t//this.setPosition(anchor.x, anchor.y);\r\n\r\n\t\t\tlet pjd = new b2PrismaticJointDef();\r\n\t\t\tpjd.Initialize(world.mapBound_body, this.body, anchor, new b2Vec2(0, 1));\r\n\t\t\tif (0) {\r\n\t\t\t\tpjd.bodyA = world.mapBound_body;\r\n\t\t\t\tpjd.bodyB = this.foot_walk;//this.body;\r\n\t\t\t\t//pjd.localAnchorA.Set(0, 0);\r\n\t\t\t\t//pjd.localAnchorB.Set(0, 0);\r\n\t\t\t\tpjd.localAxisA.Set(0, 1);\r\n\t\t\t\t//pjd.referenceAngle = 0;\r\n\t\t\t}\r\n\t\t\tpjd.lowerTranslation = 0;\r\n\t\t\tpjd.upperTranslation = 0;\r\n\t\t\tpjd.enableLimit = true;\r\n\t\t\tpjd.maxMotorForce = this._getMass() * 1000;\r\n\r\n\t\t\t/** @type {b2PrismaticJoint} */\r\n\t\t\tlet pj = world.CreateJoint(pjd);\r\n\r\n\t\t\tthis.$sticky_pj = pj;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {boolean}\r\n\t */\r\n\tisDrop() {\r\n\t\treturn this.state.dropDown || this.state._drop;\r\n\t}\r\n\r\n\t_endContactFoothold() {\r\n\t\tfor (let i = 0; i < this._endContactFootholdList.length; ++i) {\r\n\t\t\tlet fh = this._endContactFootholdList[i];\r\n\r\n\t\t\tif (fh == this._$fallEdge) {\r\n\t\t\t\tthis._$fallEdge = null;\r\n\t\t\t}\r\n\t\t\telse if (fh == this._foothold) {\r\n\t\t\t\tthis._foothold = null;\r\n\t\t\t\tthis._foot_at = null;\r\n\t\t\t}\r\n\t\t\t//else if (fh.id == this._foothold.id) {\r\n\t\t\t//\tthis._foothold = null;\r\n\t\t\t//\tthis._foot_at = null;\r\n\t\t\t//}\r\n\r\n\t\t\tif (this.$foothold && fh == this.$foothold) {\r\n\t\t\t\tthis.prev_$fh = this.$foothold;\r\n\t\t\t\tthis.$foothold = null;\r\n\t\t\t}\r\n\t\t\tif (this.leave_$fh && this.leave_$fh == fh) {\r\n\t\t\t\tthis.leave_$fh = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._endContactFootholdList.length = 0;//clear\r\n\t}\r\n\r\n\t/**\r\n\t * before world::step\r\n\t * @param {number} stamp\r\n\t */\r\n\tStep(stamp) {\r\n\t\t// prepare contact\r\n\t\tthis.state._drop = false;\r\n\t\tthis._foothold = null;\r\n\t\tthis._foot_at = null;\r\n\r\n\t\t// apply state\r\n\t\tif (this.state.ladder) {\r\n\t\t\tthis.state.jump = false;\r\n\t\t\tthis.state.jump_count = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state._begin_jump) {\r\n\t\t\t\tconst mass = this._getMass();\r\n\t\t\t\tconst force = new b2Vec2(0, -mass * this.jump_force);\r\n\t\t\t\tthis.body.ApplyForceToCenter(force);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.knockback > 0) {\r\n\t\t\t\tthis.state.knockback -= stamp;\r\n\r\n\t\t\t\tif (this.state.knockback > 0) {\r\n\t\t\t\t\tthis.state.outOfControl = true;\r\n\t\t\t\t\tthis.walker.EnableMotor(false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.knockback = 0;\r\n\t\t\t\t\tthis.state.outOfControl = false;\r\n\t\t\t\t\tthis.walker.EnableMotor(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.state.invincible > 0) {\r\n\t\t\t\tthis.state.invincible -= stamp;\r\n\t\t\t\tif (this.state.invincible > 0) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.invincible = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.state.portal_cooldown) {\r\n\t\t\t\tthis.state.portal_cooldown -= stamp;\r\n\t\t\t\tif (this.state.portal_cooldown > 0) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.portal_cooldown = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * after world::step\r\n\t */\r\n\tAfterStep() {\r\n\t\t//this._endContactFoothold();\r\n\r\n\t\tif (this.state.ladder) {\r\n\t\t\tif (this.$ladder_pj) {\r\n\t\t\t\tconst upper = this.$ladder_pj.GetUpperLimit();\r\n\t\t\t\tconst lower =this.$ladder_pj.GetLowerLimit();\r\n\t\t\t\tconst translation = this.$ladder_pj.GetJointTranslation();\r\n\r\n\t\t\t\tif (this.state.ladder_move_dir > 0 && translation > upper) {//down\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.state.ladder_move_dir < 0 && translation < lower) {//up\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this.state.dropDown) {\r\n\t\t\t\tif (this.body.m_awakeFlag && this.foot_walk.m_awakeFlag) {\r\n\t\t\t\t\tthis.$foothold = this._foothold;//set or clear\r\n\t\t\t\t}\r\n\t\t\t\tif (!this._foothold && this._foot_contact_list.length) {//目前沒用，永遠不會被執行 ??\r\n\t\t\t\t\tlet max = this._foot_contact_list.pop();\r\n\t\t\t\t\tthis.$foothold = max.foothold;\r\n\t\t\t\t\tthis._foothold = max.foothold;\r\n\t\t\t\t\tthis._foot_at = max.position;\r\n\t\t\t\t\tthis._foothold_priority = max.priority;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.$foothold) {\r\n\t\t\t\t//this.body.SetAwake(false);\r\n\t\t\t\t//this.foot_walk.SetAwake(false);\r\n\r\n\t\t\t\tthis.state.jump = false;\r\n\t\t\t\tthis.state.jump_count = 0;\r\n\t\t\t\tif (this.$foothold == this._foothold) {\r\n\t\t\t\t\t//console.log(\"stable contact\");\r\n\t\t\t\t\t//debugger;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._foot_contact_list.length = 0;\r\n\r\n\t\t\t\tthis.state.jump = true;\r\n\t\t\t\tthis.state._begin_jump = false;\r\n\t\t\t\t\r\n\t\t\t\tif (!this._foothold) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//console.log(\"no stable contact\");\r\n\t\t\t\t\t//debugger;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tgetLayer() {\r\n\t\tlet layer = this.$foothold ? this.$foothold.layer : (this.prev_$fh ? this.prev_$fh.layer : (this.leave_$fh ? this.leave_$fh.layer : 5));\r\n\t\treturn this.state.ladder ? (layer + 1) : layer;\r\n\t}\r\n}\r\n\r\nclass PCharacter extends PCharacterBase {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tthis.chara = null;\r\n\t}\r\n\r\n\t/**\r\n\t * need set this.state.outOfControl = true\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tforceMove(moveX, moveY) {\r\n\t\t//TODO: calc move\r\n\t\tconst mass = this._getMass();\r\n\t\tconst move = new b2Vec2(moveX * mass, moveY * mass);\r\n\t\tthis.body.ApplyLinearImpulseToCenter(move);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t * @param {number} [kbTime=1000] - knockback time, unit is millisecond\r\n\t */\r\n\tknockback(moveX, moveY, kbTime = 1000) {\r\n\t\tconst front = this.state.front;\r\n\t\tlet fx, fy;\r\n\t\t\r\n\t\tfx = -moveX * front;\r\n\t\t//fy = this.state.jump ? moveY : -moveY;\r\n\t\tfy = -moveY;\r\n\r\n\t\tthis.forceMove(fx, fy);\r\n\t\tthis.state.knockback = kbTime;\r\n\t\tthis.state.outOfControl = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\t_create_anchor(world) {\r\n\t\tlet md = new b2MouseJointDef();\r\n\t\tmd.bodyA = world.ground.bodies[0];\r\n\t\tmd.bodyB = this.body;\r\n\t\tmd.target.Copy(this.getPosition());\r\n\t\tmd.maxForce = 1000 * this._getMass();\r\n\t\treturn world.CreateJoint(md);\r\n\t}\r\n\r\n\t/**\r\n\t * no anchor\r\n\t * experimental\r\n\t * @param {CharacterMoveElem} moveElem\r\n\t */\r\n\tmoveTo(moveElem) {\r\n\t\tconst body = this.body;\r\n\t\t\r\n\t\tthis.body.SetAwake(true);\r\n\t\tthis.foot_walk.SetAwake(true);\r\n\r\n\t\tif (moveElem.elapsed == 0) {\r\n\t\t\tbody.ConstantVelocityWorldCenter2(vx, vy);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst ALPHA = 0.7;\r\n\t\t\tconst ONE_MINUS_ALPHA = 1 - ALPHA;\r\n\t\t\tlet dx = moveElem.x - pos.x;\r\n\t\t\tlet dy = moveElem.y - pos.y;\r\n\t\t\tlet sx = dx / (moveElem.elapsed / $gv.FRAME_ELAPSED);//speed = pixel / second\r\n\t\t\tlet sy = dy / (moveElem.elapsed / $gv.FRAME_ELAPSED);\r\n\t\t\tlet oldVel = body.GetLinearVelocity();\r\n\r\n\t\t\tlet vx, vy;\r\n\r\n\t\t\tif (moveElem.pState.jump) {\r\n\t\t\t\tthis.setGravityScale(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setGravityScale(1);\r\n\t\t\t\t\r\n\t\t\t\tif (moveElem.pState.walk || sx) {\r\n\t\t\t\t\tthis.walker.EnableMotor(false);//this.$physics.walker.IsMotorEnabled() == true\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.walker.EnableMotor(true);//keep stop\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (sx) {\r\n\t\t\t\tif (moveElem.vx) {\r\n\t\t\t\t\tif (Math.sign(moveElem.vx) == Math.sign(sx)) {\r\n\t\t\t\t\t\tvx = oldVel.x * ONE_MINUS_ALPHA + moveElem.vx * ALPHA;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvx = oldVel.x * ONE_MINUS_ALPHA + sx * ALPHA;//修正座標\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvx = sx;//修正座標\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvx = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (sy) {\r\n\t\t\t\tif (moveElem.vy) {\r\n\t\t\t\t\tif (Math.sign(moveElem.vy) == Math.sign(sy)) {\r\n\t\t\t\t\t\tvy = oldVel.y * ONE_MINUS_ALPHA + moveElem.vy * ALPHA;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvy = oldVel.y * ONE_MINUS_ALPHA + sy * ALPHA;//修正座標\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvy = sy;//修正座標\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvy = 0;\r\n\t\t\t}\r\n\r\n\t\t\tbody.ConstantVelocityWorldCenter2(vx, vy);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\t/** @type {PPlayer[]} */\r\n\tvar PPlayer_instance_list = window.PPlayer_instance_list || [];\r\n\r\n\tif (PPlayer_instance_list) {\r\n\t\tfor (let pl of PPlayer_instance_list) {\r\n\t\t\tpl.__proto__ = PPlayer.prototype;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PPlayer extends PCharacter {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\tif (module.hot) {\r\n\t\t\tPPlayer_instance_list.push(this);\r\n\r\n\t\t\tconst super_destroy = super._destroy;\r\n\r\n\t\t\tthis._destroy = function () {\r\n\t\t\t\tsuper_destroy.call(this);\r\n\t\t\t\tPPlayer_instance_list.splice(PPlayer_instance_list.indexOf(this), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"x\", () => this.getPosition().x.toFixed(3) + \" * \" + $gv.CANVAS_SCALE + \" = \" + (this.getPosition().x * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"y\", () => this.getPosition().y.toFixed(3) + \" * \" + $gv.CANVAS_SCALE + \" = \" + (this.getPosition().y * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"jump\", () => this.state.jump);\r\n\t\twindow.SCREEN_PRINTLN(() => \"_drop\", () => this.state._drop);\r\n\t\twindow.SCREEN_PRINTLN(() => \"ddrop\", () => this.state.dropDown);\r\n\t\twindow.SCREEN_PRINTLN(() => \"$fh\", () => this.$foothold ? this.$foothold.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"$fh->c\", () => this.$foothold ? this.$foothold.chain.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"_fh\", () => this._foothold ? this._foothold.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"p$fh\", () => this.prev_$fh ? this.prev_$fh.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"leave_$fh\", () => this.leave_$fh ? this.leave_$fh.id : null);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"(jump && !$fh)\", () => this.state.jump && !this.$foothold);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"vel.x\", () => (this.body.m_linearVelocity.x * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"vel.y\", () => (this.body.m_linearVelocity.y * $gv.CANVAS_SCALE).toFixed(0));\r\n\t}\r\n\r\n\t/**\r\n\t * before world::step\r\n\t * @param {number} stamp\r\n\t */\r\n\tStep(stamp) {\r\n\t\tsuper.Step(stamp);\r\n\t\t\r\n\t\tif ($gv.input_keyDown['B'] == 1 && !$gv.mouse_dl) {\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y;\r\n\r\n\t\t\tthis.setPosition(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE, true);\r\n\t\t}\r\n\t\telse if ($gv.input_keyDown['B'] > 0 && $gv.mouse_dl) {\r\n\t\t\tconst center = $gv.m_viewRect.center;\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x - center.x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y - center.y;\r\n\r\n\t\t\tthis.body.SetLinearVelocity(new b2Vec2(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE));\r\n\t\t\tthis.foot_walk.SetLinearVelocity(new b2Vec2(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE));\r\n\t\t}\r\n\t\telse if ($gv.mouse_dm && $gv.mouse_dm % 12 == 1) {\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y;\r\n\t\t\tthis.setPosition(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE, true);\r\n\t\t}\r\n\t}\r\n\r\n\tget renderer() {\r\n\t\tdebugger\r\n\t\treturn this._$renderer;\r\n\t}\r\n\tset renderer(value) {\r\n\t\tthis._$renderer = value;\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\t/** @type {PRemoteCharacter[]} */\r\n\tvar PRemoteCharacter_instance_list = window.PRemoteCharacter_instance_list || [];\r\n\r\n\tif (PRemoteCharacter_instance_list) {\r\n\t\tfor (let pl of PRemoteCharacter_instance_list) {\r\n\t\t\tpl.__proto__ = PRemoteCharacter.prototype;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PRemoteCharacter extends PCharacter {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/** @type {b2MouseJoint} */\r\n\t\tthis._anchor = null;\r\n\r\n\t\tif (module.hot) {\r\n\t\t\tPRemoteCharacter_instance_list.push(this);\r\n\r\n\t\t\tconst super_destroy = super._destroy;\r\n\r\n\t\t\tthis._destroy = function () {\r\n\t\t\t\tsuper_destroy.call(this);\r\n\t\t\t\tPRemoteCharacter_instance_list.splice(PRemoteCharacter_instance_list.indexOf(this), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\r\n\t\tif (window.$io) {\r\n\t\t\tthis._anchor = this._create_anchor(world);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.moveTo = super.moveTo;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterMoveElem} moveElem\r\n\t */\r\n\tmoveTo(moveElem) {\r\n\t\tthis.body.SetAwake(true);\r\n\t\tthis.foot_walk.SetAwake(true);\r\n\t\t\r\n\t\t//if (this._anchor) {\r\n\t\t\tthis._anchor.m_targetA.x = moveElem.x;\r\n\t\t\tthis._anchor.m_targetA.y = moveElem.y;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\tsuper.moveTo(moveElem);\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\tmodule.hot.accept();\r\n}\r\n","﻿\r\nimport { IRenderer } from './IRenderer.js';\r\nimport { PPlayer } from './Physics/PPlayer.js';\r\nimport { NameLabel } from './Renderer/NameLabel.js';\r\n\r\n/**\r\n * Game object\r\n */\r\nexport class SceneObject {\r\n\tconstructor() {\r\n\t\t/** @type {string|number} */\r\n\t\tthis.$objectid = null;\t// playerName or objectID; ?? null if not in scene\r\n\r\n\t\t/** @type {number} - layer id */\r\n\t\tthis.$layer = null;\t//maybe override\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = null;\r\n\t\tObject.defineProperty(this, \"$physics\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: false,\r\n\t\t\twritable: true,\r\n\t\t\tvalue: null,\r\n\t\t});\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\t\r\n\t/** create physics, load resource, ... */\r\n\tcreate() {\r\n\t}\r\n\t/** destroy physics, ... */\r\n\tdestroy() {\r\n\t}\r\n\t\r\n\tset enablePhysics(value) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.$physics.enable = value;\r\n\t\t\tthis.$physics.state.freeze = !value;\r\n\t\t}\r\n\t}\r\n\tget enablePhysics() {\r\n\t\tif (this.$physics) {\r\n\t\t\treturn this.$physics.enable;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t_applyState() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tthis.renderer.render(renderer);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tconsole.log(this.$objectid + \" 被 \" + chara.$objectid + \" 攻擊，減少 \" + damage + \" HP\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * if (chara == null) ??\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} name\r\n\t * @param {string} labelStyle\r\n\t */\r\n\t__drawName(renderer, name, labelStyle) {\r\n\t\tif (!$gv.m_display_name_label) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (labelStyle && labelStyle != \"0\") {\r\n\t\t\tlet label = NameLabel.get(labelStyle);\r\n\t\t\tif (label && !label.$promise) {\r\n\t\t\t\tconst crr = this.renderer;\r\n\t\t\t\tlabel.draw(renderer, name, crr.x, crr.y);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.__drawName_default(renderer, name);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} name\r\n\t * @param {string} color\r\n\t * @param {string} bgColor\r\n\t */\r\n\t__drawName_default(renderer, name, color=\"#FFF\", bgColor=\"#000B\") {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst crr = this.renderer;\r\n\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\tctx.textAlign = \"start\";\r\n\r\n\t\tconst r = 2, h = 12;\r\n\t\tconst w = ctx.measureText(name).width + 3;\r\n\t\tconst x = Math.trunc(crr.x/* + crr.tx*/) - w * 0.5;//TODO: crr.tx and crr.ty ??\r\n\t\tconst y = Math.trunc(crr.y/* + crr.ty*/);\r\n\r\n\t\tconst left = x + r;\r\n\t\tconst _left = x;\r\n\t\tconst top = y;\r\n\t\tconst _top = y + r;\r\n\t\tconst _right = x + w;\r\n\t\tconst right = _right + r;\r\n\t\tconst bottom = y + r + h + r;\r\n\t\tconst _bottom = y + r + h;\r\n\r\n\t\tctx.beginPath();\r\n\t\t{\r\n\t\t\tctx.moveTo(left, top);\r\n\r\n\t\t\tctx.lineTo(_right, top);\r\n\t\t\tctx.arcTo(right, top, right, _top, r);\r\n\r\n\t\t\tctx.lineTo(right, _bottom);\r\n\t\t\tctx.arcTo(right, bottom, _right, bottom, r);\r\n\r\n\t\t\tctx.lineTo(left, bottom);\r\n\t\t\tctx.arcTo(_left, bottom, _left, _bottom, r);\r\n\r\n\t\t\tctx.lineTo(_left, _top);\r\n\t\t\tctx.arcTo(_left, top, left, top, r);\r\n\t\t}\r\n\t\tctx.fillStyle = bgColor;\r\n\t\tctx.fill();\r\n\t\t//ctx.strokeStyle = \"#000F\";\r\n\t\t//ctx.stroke();\r\n\r\n\t\tif (0) {//inner\r\n\t\t\tctx.fillStyle = \"yellow\";\r\n\t\t\tctx.strokeStyle = \"yellow\";\r\n\t\t\tctx.beginPath();\r\n\t\t\t{\r\n\t\t\t\tctx.moveTo(left, _top);\r\n\r\n\t\t\t\tctx.lineTo(_right, _top);\r\n\r\n\t\t\t\tctx.lineTo(_right, _bottom);\r\n\r\n\t\t\t\tctx.lineTo(left, _bottom);\r\n\r\n\t\t\t\tctx.closePath();\r\n\t\t\t}\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t\t\r\n\t\tctx.fillStyle = color;\r\n\t\tctx.fillText(name, left, (top + bottom) * 0.5);\r\n\t}\r\n}\r\n\r\n\r\n","﻿\r\nconst box2d = require(\"../../box2d.ts/build/Box2D.js\");\r\n\r\nconst { FilterHelper } = require(\"./Filter.js\");\r\n\r\nconst {\r\n\tb2Vec2,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact, b2Manifold, b2ContactImpulse,\r\n\tb2ContactListener\r\n} = box2d;\r\n\r\n\r\nwindow.$box2d = box2d;\r\n\r\nlet b2Vec2_temp = new b2Vec2();\r\n\r\n/** @type {string} */\r\nb2Body.prototype.$type = null;\r\n\r\nb2Body.prototype.Step = function (stamp) {\r\n\tif (this._on_step) {\r\n\t\tfor (let fn of this._on_step) {\r\n\t\t\tfn(stamp);\r\n\t\t}\r\n\t}\r\n}\r\nb2Body.prototype.AfterStep = function (stamp) {\r\n\tif (this._on_after_step) {\r\n\t\tfor (let fn of this._on_after_step) {\r\n\t\t\tfn(stamp);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {function():void} func\r\n */\r\nb2Body.prototype.addStep = function (func) {\r\n\tthis._on_step = this._on_step || [];\r\n\tthis._on_step.push(func);\r\n}\r\n\r\n/**\r\n * @param {function():void} func\r\n */\r\nb2Body.prototype.addAfterStep = function (func) {\r\n\tthis._on_after_step = this._on_after_step || [];\r\n\tthis._on_after_step.push(func);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.SetLinearVelocity2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.SetLinearVelocity(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.ApplyForceToCenter2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.ApplyForceToCenter(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.ApplyLinearImpulseToCenter2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.ApplyLinearImpulseToCenter(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVel)快速加速到'指定速度'(desiredVel)\r\n * @param {b2Vec2} desiredVel\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.Acceleration = function (desiredVel, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, b2Vec2_temp);\r\n\tlet m = this.GetMass();\r\n\tlet ix = m * velChange.x;\r\n\tlet iy = m * velChange.y;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(ix, iy);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVelX)快速加速到'指定速度'(desiredVel)\r\n * @param {number} desiredVelX\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.AccelerationX = function (desiredVelX, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChangeX = desiredVelX - sourceVel.x;\r\n\tlet m = this.GetMass();\r\n\tlet ix = m * velChangeX;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(ix, 0);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVelY)快速加速到'指定速度'(desiredVel)\r\n * @param {number} desiredVelY\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.AccelerationY = function (desiredVelY, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChangeY = desiredVelY - sourceVel.y;\r\n\tlet m = this.GetMass();\r\n\tlet iy = m * velChangeY;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(0, iy);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * 等速度運動\r\n * @param {b2Vec2} desiredVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocity = function (desiredVel, point) {\r\n\tthis.Acceleration(desiredVel, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * @param {number} desiredVelX\r\n * @param {number} desiredVelY\r\n * @param {number} pointX\r\n * @param {number} pointY\r\n */\r\nb2Body.prototype.ConstantVelocity2 = function (desiredVelX, desiredVelY, pointX, pointY) {\r\n\tconst desiredVel = new b2Vec2(desiredVelX, desiredVelY);\r\n\tconst point = new b2Vec2(pointX, pointY);\r\n\r\n\tconst sourceVel = this.GetLinearVelocity();\r\n\tconst m = this.GetMass();\r\n\r\n\tlet impulse = new b2Vec2();\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, impulse);\r\n\timpulse.x = m * velChange.x;\r\n\timpulse.y = m * velChange.y;\r\n\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * @param {number} desiredVelX\r\n * @param {number} desiredVelY\r\n */\r\nb2Body.prototype.ConstantVelocityWorldCenter2 = function (desiredVelX, desiredVelY) {\r\n\tconst desiredVel = new b2Vec2(desiredVelX, desiredVelY);\r\n\r\n\tconst sourceVel = this.GetLinearVelocity();\r\n\tconst m = this.GetMass();\r\n\r\n\tlet impulse = new b2Vec2();\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, impulse);\r\n\timpulse.x = m * velChange.x;\r\n\timpulse.y = m * velChange.y;\r\n\r\n\tthis.ApplyLinearImpulseToCenter(impulse, true);\r\n}\r\n\r\n/**\r\n * 等速度運動 X\r\n * @param{number} desiredVelX\r\n * @param{b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocityX = function (desiredVelX, point) {\r\n\tthis.AccelerationX(desiredVelX, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * 等速度運動 Y\r\n * @param {number} desiredVelY\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocityY = function (desiredVelY, point) {\r\n\tthis.AccelerationY(desiredVelY, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.beginContact = function (contact, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.endContact = function (contact, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Manifold} oldManifold\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.preSolve = function (contact, oldManifold, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2ContactImpulse} impulse\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.postSolve = function (contact, impulse, fa, fb) {\r\n}\r\n\r\n/** @returns {string} */\r\nb2Fixture.prototype.getOwnerID = function () {\r\n\tlet host = this.GetUserData();\r\n\tif (host && host.owner) {\r\n\t\treturn host.owner.id;\r\n\t}\r\n}\r\n\r\nclass FixtureContactListener {\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tbeginContact (contact, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tendContact (contact, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tpreSolve (contact, oldManifold, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2ContactImpulse} impulse\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tpostSolve (contact, impulse, fa, fb) {\r\n\t}\r\n}\r\n\r\n\r\n\r\nmodule.exports = Object.assign(box2d, {\r\n\tFixtureContactListener, FilterHelper\r\n});\r\n","﻿\r\nimport { b2Filter, b2ContactFilter } from \"../../box2d.ts/build/Box2D.js\";\r\n\r\n\r\n/** @type {{[string]:FilterHelper}} */\r\nlet filter_preset = {\r\n};\r\n\r\nlet next_category = 1;\r\n\r\nexport class FilterHelper extends b2Filter {\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\tignore(categoryName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.maskBits = (this.maskBits & ~preset.categoryBits) >>> 0;\r\n\r\n\t\tpreset.maskBits = (preset.maskBits & ~this.categoryBits) >>> 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\taddCategory(categoryName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.categoryBits = this.categoryBits | preset.categoryBits;\r\n\t}\r\n\r\n\t/**\r\n\t * @template T\r\n\t * @param {T extends keyof filter_preset} categoryName\r\n\t * @param {string} debugName\r\n\t */\r\n\tstatic get(categoryName, debugName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\treturn filter_preset.s_default;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (debugName) {\r\n\t\t\tlet debugCategory = filter_preset[\"s_\" + debugName];\r\n\t\t\tconsole.warn(\"filter: \" + debugName + \"%o\", debugCategory);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn preset;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\tstatic registerCategory(categoryName) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (filter_preset[\"s_\" + categoryName]) {\r\n\t\t\t\tlet msg = \"exist filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (next_category > 0x80000000) {\r\n\t\t\t\tlet msg = \"no empty filter preset\";\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName] = new FilterHelper();\r\n\r\n\t\tpreset.groupIndex = 0;\r\n\t\tpreset.categoryBits = next_category;\r\n\t\tpreset.maskBits = 0xFFFFFFFF;//all\r\n\r\n\t\tpreset.name = categoryName;\r\n\r\n\t\tnext_category = next_category << 1;\r\n\r\n\t\treturn preset;\r\n\t}\r\n\r\n\tstatic get next_category() {\r\n\t\treturn filter_preset;\r\n\t}\r\n\tstatic get filter_preset() {\r\n\t\treturn filter_preset;\r\n\t}\r\n}\r\n\r\nconst filter_table = [\r\n/*                 default  body  foothold  foot  bullet  pvp_bullet  mob  mob_bullet  portal  ladder  map_obj  map_border */\r\n/* default */    [ 1,       1,    1,        1,    1,      1,          1,   1,          1,      1,      1,       1,     ],\r\n/* body */       [ 1,       0,    0,        0,    0,      1,          1,   1,          0,      1,      1,       1,     ],\r\n/* foothold */   [ 1,       0,    0,        1,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* foot */       [ 1,       0,    1,        0,    0,      0,          0,   0,          1,      0,      0,       1,     ],\r\n/* bullet */     [ 1,       0,    0,        0,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/* pvp_bullet */ [ 1,       1,    0,        0,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/* mob */        [ 1,       1,    0,        0,    1,      1,          0,   0,          0,      0,      0,       0,     ],\r\n/* mob_bullet */ [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* portal */     [ 1,       0,    0,        1,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* ladder */     [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* map_obj */    [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* map_border */ [ 1,       1,    0,        1,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/*  */\r\n];\r\n\r\n(function init() {\r\n\tlet filter_list = [\r\n\t\tFilterHelper.registerCategory(\"default\"),\r\n\t\tFilterHelper.registerCategory(\"body\"),\r\n\t\tFilterHelper.registerCategory(\"foothold\"),\r\n\t\tFilterHelper.registerCategory(\"foot\"),\r\n\t\tFilterHelper.registerCategory(\"bullet\"),\r\n\t\tFilterHelper.registerCategory(\"pvp_bullet\"),\r\n\t\tFilterHelper.registerCategory(\"mob\"),\r\n\t\tFilterHelper.registerCategory(\"mob_bullet\"),\r\n\t\tFilterHelper.registerCategory(\"portal\"),\r\n\t\tFilterHelper.registerCategory(\"ladder\"),\r\n\t\tFilterHelper.registerCategory(\"map_obj\"),\r\n\t\tFilterHelper.registerCategory(\"map_border\"),\r\n\t];\r\n\r\n\tfor (let i = 0; i < filter_table.length; ++i) {\r\n\t\tfor (let j = 0; j < filter_table[i].length; ++j) {\r\n\t\t\tif (!filter_table[i][j]) {\r\n\t\t\t\tfilter_list[i].maskBits = (filter_list[i].maskBits & ~(1 << j)) >>> 0;//uint32\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n\r\n(function test() {\r\n\tlet contactFilter = new b2ContactFilter();\r\n\t\r\n\tfunction Fixture(filterName) {\r\n\t\treturn {\r\n\t\t\tGetFilterData: () => FilterHelper.get(filterName),\r\n\t\t\tGetBody: () => { return {\r\n\t\t\t\tGetType: () => 2,\r\n\t\t\t\tShouldCollideConnected: () => true,\r\n\t\t\t} },\r\n\t\t};\r\n\t}\r\n\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"body\"), Fixture(\"ladder\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"ladder\"), Fixture(\"body\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"foot\"), Fixture(\"portal\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"portal\"), Fixture(\"foot\"))) {\r\n\t\tdebugger;\r\n\t}\r\n})();\r\n\r\n","﻿\r\nimport {\r\n\tb2Vec2, b2AABB,\r\n\tb2World,\r\n\tb2Body,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2EdgeShape, b2PolygonShape, b2CircleShape,\r\n\tb2MouseJointDef,\r\n\tb2ContactListener, b2Contact,\r\n\tb2ParticleSystemDef, b2ParticleSystem, b2ParticleFlag, b2ParticleGroupDef\r\n} from \"./Physics.js\";\r\n\r\nimport DebugDraw from \"./DebugDraw.js\";\r\nimport { Ground } from \"./Ground.js\";\r\nimport { LadderRope, MapLadderRopeLoader } from \"./LadderRope.js\";\r\nimport { PPlayer, PRemoteCharacter } from \"./PPlayer.js\";\r\nimport { PMob } from \"./PMob.js\";\r\n\r\nimport { CharacterAnimationBase } from \"../Renderer/CharacterRenderer\";\r\n\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nwindow.$gravityAcc = 2000;\r\n\r\nwindow.$positionIterations = 3;\r\nwindow.$velocityIterations = 8;\r\nwindow.$particleIterations = 1;\r\n\r\nwindow.$particleRadius = 10;//unit is pixel\r\n\r\nexport const GRAVITY = new b2Vec2(0, window.$gravityAcc / $gv.CANVAS_SCALE);\r\n\r\n\r\nclass ContactListener extends b2ContactListener {\r\n\t/** @param {b2Contact} contact */\r\n\tBeginContact(contact) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.beginContact.call(fa.m_userData, contact, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.beginContact.call(fb.m_userData, contact, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/** @param {b2Contact} contact */\r\n\tEndContact(contact) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.endContact.call(fa.m_userData, contact, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.endContact.call(fb.m_userData, contact, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t */\r\n\tPreSolve(contact, oldManifold) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.preSolve.call(fa.m_userData, contact, oldManifold, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.preSolve.call(fb.m_userData, contact, oldManifold, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2ContactImpulse} impulse\r\n\t */\r\n\tPostSolve(contact, impulse) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.postSolve.call(fa.m_userData, contact, impulse, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.postSolve.call(fb.m_userData, contact, impulse, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n}\r\n\r\nexport class World extends b2World {\r\n\tconstructor() {\r\n\t\tsuper(GRAVITY);\r\n\r\n\t\t/** @type {DebugDraw} */\r\n\t\tthis.m_debugDraw = $gv.m_debugDraw;\r\n\t\tthis.SetDebugDraw(this.m_debugDraw);\r\n\r\n\t\tthis.SetContactListener(new ContactListener());\r\n\r\n\t\t//if (!window.$io) {\r\n\t\t//\tthis.player = null;\r\n\t\t//\tthis._player_rebirth();\r\n\t\t//\tthis.player.setPosition(0, 0, true);\r\n\t\t//}\r\n\r\n\t\tthis.ground = new Ground();\r\n\r\n\t\t/** @type {LadderRope[]} */\r\n\t\tthis.ladderRope = [];\r\n\t\t\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.mapBound_body = null;\r\n\t\t\r\n\t\tthis.stop = false;\r\n\t\t\r\n\t\tthis.$_mouseJoint = null;\r\n\r\n\t\t/** @type {(function():void)[]} */\r\n\t\tthis._onceAfterStep = [];\r\n\r\n\t\t/** @type {b2Body[]} */\r\n\t\tthis._destryBodyList = [];\r\n\r\n\t\tthis._DestroyBody = this.DestroyBody;\r\n\r\n\t\t/**\r\n\t\t * @param {b2Body} b\r\n\t\t */\r\n\t\tthis.DestroyBody = b => {\r\n\t\t\tif (this.m_locked) {\r\n\t\t\t\tthis._destryBodyList.push(b);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._DestroyBody(b);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.draw_foothold_path_count = 1;\r\n\t}\r\n\r\n\t$test_b2ParticleSystem() {\r\n\t\tconst particleType = b2ParticleFlag.b2_elasticParticle;//b2_waterParticle;\r\n\t\tconst particleSystemDef = new b2ParticleSystemDef();\r\n\t\t\r\n\t\t/** @type {b2ParticleSystem} */\r\n\t\tthis.m_particleSystem = this.CreateParticleSystem(particleSystemDef);\r\n\t\t\r\n\t\tthis.m_particleSystem.SetGravityScale(0);\r\n\t\tthis.m_particleSystem.SetRadius(10 / $gv.CANVAS_SCALE);\r\n\t\tthis.m_particleSystem.SetDamping(0.2);\r\n\t\t{\r\n\t\t\tconst shape = new b2CircleShape();\r\n\t\t\tshape.m_p.Set(0, 2);\r\n\t\t\tshape.m_radius = 3;\r\n\t\t\tconst pd = new b2ParticleGroupDef();\r\n\t\t\tpd.flags = particleType;\r\n\t\t\tpd.shape = shape;\r\n\t\t\tconst group = this.m_particleSystem.CreateParticleGroup(pd);\r\n\t\t\tif (pd.flags & b2ParticleFlag.b2_colorMixingParticle) {\r\n\t\t\t\tthis.ColorParticleGroup(group, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow.m_particleSystem = this.m_particleSystem;\r\n\t\t\r\n\t\tthis.$vbo_ps = null;\r\n\t}\r\n\r\n\t/**\r\n\t * after load map\r\n\t */\r\n\tasync load(map_raw_data) {\r\n\t\tthis.ground.load(map_raw_data, this);\r\n\t\tthis.ladderRope = MapLadderRopeLoader.load(map_raw_data, this);\r\n\t}\r\n\tunload() {\r\n\t\tif (this.IsLocked()) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.error(\"world is locked, world can not unload\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.ground.unload(this);\r\n\t\t\tthis.ladderRope.length = 0;\r\n\t\t\tthis.DestroyBody(this.mapBound_body);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {MapMob} mapMob\r\n\t */\r\n\tcreateMob(mapMob) {\r\n\t\tlet mob = new PMob(mapMob);\r\n\t\tmob._create(this);\r\n\t\treturn mob;\r\n\t}\r\n\tdestroyMob(mapMob) {\r\n\t\t//if (this != mapMob.$physics) {\r\n\t\t//\tdebugger;\r\n\t\t//\treturn false;\r\n\t\t//}\r\n\t\t\r\n\t\tmapMob.$physics._destroy(this);\r\n\t\tmapMob.$physics = null;\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tcreateNpc(mapNpc) {\r\n\t\treturn null;\r\n\t}\r\n\tdestroyNpc(mapNpc) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tcreatePortal(portal) {\r\n\t\tconst rect = portal.compute_rectangle(0);\r\n\t\tif (rect) {\r\n\t\t\tconst width = rect.width / 2 / $gv.CANVAS_SCALE * 0.4;\r\n\t\t\tconst height = rect.height / 2 / $gv.CANVAS_SCALE * 0.2;\r\n\r\n\t\t\tlet bdef = new b2BodyDef();\r\n\t\t\tlet fdef = new b2FixtureDef();\r\n\t\t\tlet shape;\r\n\r\n\t\t\tfdef.filter.Copy(FilterHelper.get(\"portal\"));\r\n\r\n\t\t\tbdef.userData = portal;\r\n\t\t\tbdef.type = b2BodyType.b2_staticBody;//b2_staticBody//b2_kinematicBody//b2_dynamicBody\r\n\t\t\tbdef.position.Set(\r\n\t\t\t\tportal.x / $gv.CANVAS_SCALE,\r\n\t\t\t\tportal.y / $gv.CANVAS_SCALE);\r\n\r\n\t\t\tlet body = this.CreateBody(bdef);\r\n\t\t\tbody.$type = \"portal\";\r\n\r\n\t\t\tshape = new b2PolygonShape();\r\n\r\n\t\t\tif (window.MAP_PORTAL_FULL_SIZE) {\r\n\t\t\t\tshape.SetAsBox(\r\n\t\t\t\t\trect.width / 2 / $gv.CANVAS_SCALE,\r\n\t\t\t\t\trect.height / 2 / $gv.CANVAS_SCALE,\r\n\t\t\t\t\tnew b2Vec2(-portal.textures[0].x / $gv.CANVAS_SCALE, -portal.textures[0].y / $gv.CANVAS_SCALE),\r\n\t\t\t\t\t0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.SetAsBox(\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\theight,\r\n\t\t\t\t\tnew b2Vec2(0, -height),\r\n\t\t\t\t\t0);\r\n\t\t\t}\r\n\r\n\t\t\tfdef.isSensor = true;\r\n\t\t\tfdef.shape = shape;\r\n\t\t\tfdef.filter = FilterHelper.get(\"portal\");\r\n\t\t\tfdef.userData = portal;\r\n\t\t\tfdef.$type = \"portal\";\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\tportal.body = body;\r\n\r\n\t\t\treturn body;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Rectangle} rect\r\n\t */\r\n\t_createMapBound(rect) {\r\n\t\tlet { left, top, right, bottom } = rect;\r\n\t\t\r\n\t\tleft /= $gv.CANVAS_SCALE;\r\n\t\tright /= $gv.CANVAS_SCALE;\r\n\t\ttop /= $gv.CANVAS_SCALE;\r\n\t\tbottom /= $gv.CANVAS_SCALE;\r\n\t\t\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\t//bdef.type = b2BodyType.b2_dynamicBody;\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2EdgeShape();\r\n\r\n\t\tfdef.$type = \"MapBorder\";\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"map_border\"));\r\n\r\n\t\tlet bb = this.CreateBody(bdef);\r\n\t\tbb.$type = \"MapBorder\";\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, top);\r\n\t\tshape.m_vertex2.Set(right, top);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, bottom);\r\n\t\tshape.m_vertex2.Set(right, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, top);\r\n\t\tshape.m_vertex2.Set(left, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\r\n\t\tshape.m_vertex1.Set(right, top);\r\n\t\tshape.m_vertex2.Set(right, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tif (this.player) {\r\n\t\t\tthis.player.setPosition((right + left) * 0.5, (bottom + top) * 0.5, true);\r\n\t\t}\r\n\r\n\t\tthis.mapBound_body = bb;\r\n\t}\r\n\r\n\t//_player_rebirth() {\r\n\t//\twindow.$player = this.player = new PPlayer(window.chara ? window.chara.renderer:null);\r\n\t//\tthis.player._create(this);\r\n\t//\r\n\t//\tdelete this.player.renderer;\r\n\t//\tObject.defineProperty(this.player, \"renderer\", {\r\n\t//\t\tget: function () {\r\n\t//\t\t\treturn window.chara ? window.chara.renderer : null;\r\n\t//\t\t}\r\n\t//\t});\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {SceneObject} sceneObject\r\n\t * @param {CharacterAnimationBase} renderer\r\n\t */\r\n\t$createPlayer(sceneObject, renderer) {\r\n\t\tif (!sceneObject || !renderer) {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"$createPlayer(sceneObject, renderer)\");\r\n\t\t}\r\n\t\tlet player = new PPlayer();\r\n\r\n\t\tplayer._create(this);\r\n\r\n\t\t//init ?\r\n\t\tplayer.chara = sceneObject;\r\n\t\tplayer.renderer = renderer;//??\r\n\r\n\t\tthis.player = player;\r\n\r\n\t\treturn player;\r\n\t}\r\n\t/**\r\n\t * @param {SceneObject} sceneObject\r\n\t * @param {CharacterAnimationBase} renderer\r\n\t */\r\n\t$createRemotePlayer(sceneObject, renderer) {\r\n\t\tif (!sceneObject || !renderer) {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"$createRemotePlayer(sceneObject, renderer)\");\r\n\t\t}\r\n\t\tlet player = new PRemoteCharacter();\r\n\r\n\t\tplayer._create(this);\r\n\r\n\t\t//init ?\r\n\t\tplayer.renderer = renderer;\r\n\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {function():void} func\r\n\t */\r\n\tonceUnlock(func) {\r\n\t\tif (this.m_locked) {\r\n\t\t\tthis._onceAfterStep.push(func);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfunc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * do once AfterStep\r\n\t * @param {function():void} func\r\n\t */\r\n\tdoAfterStep(func) {\r\n\t\tthis._onceAfterStep.push(func);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseDown(p) {\r\n\t\tif (this.$_mouseJoint != null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make a small box.\r\n\t\tlet aabb = new b2AABB();\r\n\t\tlet d = new b2Vec2();\r\n\t\td.Set(0.001, 0.001);\r\n\t\tb2Vec2.SubVV(p, d, aabb.lowerBound);\r\n\t\tb2Vec2.AddVV(p, d, aabb.upperBound);\r\n\r\n\t\tlet that = this;\r\n\t\tlet hit_fixture = null;\r\n\t\t\r\n\t\t// Query the world for overlapping shapes.\r\n\t\tthis.QueryAABB({\r\n\t\t\t/**\r\n\t\t\t * Called for each fixture found in the query AABB.\r\n\t\t\t * @param {b2Fixture} fixture\r\n\t\t\t * @returns false to terminate the query.\r\n\t\t\t */\r\n\t\t\tReportFixture(fixture) {\r\n\t\t\t\tlet body = fixture.GetBody();\r\n\t\t\t\tif (body.GetType() != b2BodyType.b2_staticBody) {\r\n\t\t\t\t\tlet inside = fixture.TestPoint(p);\r\n\t\t\t\t\tif (inside) {\r\n\t\t\t\t\t\thit_fixture = fixture;\r\n\r\n\t\t\t\t\t\t// We are done, terminate the query.\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Continue the query.\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Called for each fixture found in the query AABB.\r\n\t\t\t * @param {b2ParticleSystem} system\r\n\t\t\t * @param {number} index\r\n\t\t\t * @returns false to terminate the query.\r\n\t\t\t */\r\n\t\t\tReportParticle(system, index) {\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Called for each fixture found in the query AABB.\r\n\t\t\t * @param {b2ParticleSystem} system\r\n\t\t\t * @returns false to terminate the query.\r\n\t\t\t */\r\n\t\t\tShouldQueryParticleSystem(system) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}, aabb);\r\n\r\n\t\tif (hit_fixture) {\r\n\t\t\tlet body = hit_fixture.GetBody();\r\n\t\t\tlet md = new b2MouseJointDef();\r\n\t\t\tmd.bodyA = this.ground.bodies[0];\r\n\t\t\tmd.bodyB = body;\r\n\t\t\tmd.target.Copy(p);\r\n\t\t\tmd.maxForce = 1000 * body.GetMass();\r\n\t\t\tthis.$_mouseJoint = this.CreateJoint(md);\r\n\t\t\tbody.SetAwake(true);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseUp(p) {\r\n\t\tif (this.$_mouseJoint) {\r\n\t\t\tthis.DestroyJoint(this.$_mouseJoint);\r\n\t\t\tthis.$_mouseJoint = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseMove(p) {\r\n\t\tif (this.$_mouseJoint) {\r\n\t\t\tthis.$_mouseJoint.SetTarget(p);\r\n\t\t}\r\n\t}\r\n\t\r\n\t$_onMouseEvent() {\r\n\t\tconst x = ($gv.m_viewRect.left + $gv.mouse_x) / $gv.CANVAS_SCALE;\r\n\t\tconst y = ($gv.m_viewRect.top + $gv.mouse_y) / $gv.CANVAS_SCALE;\r\n\t\tconst p = new b2Vec2(x, y);\r\n\t\t\r\n\t\tif ($gv.mouse_dl) {\r\n\t\t\tthis.$_mouseDown(p);\r\n\t\t}\r\n\t\tif ($gv.mouse_ul) {\r\n\t\t\t$gv.mouse_ul = 0;\r\n\t\t\tthis.$_mouseUp(p);\r\n\t\t}\r\n\t\tif ($gv.mouse_move) {\r\n\t\t\t$gv.mouse_move = 0;\r\n\t\t\tthis.$_mouseMove(p);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.stop) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.$_onMouseEvent();\r\n\t\t\r\n\t\tfor (let body = this.GetBodyList(); body; body = body.m_next) {\r\n\t\t\tbody.Step(stamp);\r\n\t\t}\r\n\r\n\t\tsuper.Step(1 / $gv.MAX_FPS, window.$velocityIterations, window.$positionIterations, window.$particleIterations);\r\n\t\tfor (let body = this.GetBodyList(); body; body = body.m_next) {\r\n\t\t\tbody.AfterStep(stamp);\r\n\t\t}\r\n\t\tif (this._onceAfterStep) {\r\n\t\t\tthis._onceAfterStep.forEach(f => f());\r\n\t\t\tthis._onceAfterStep.length = 0;\r\n\t\t}\r\n\t\tif (this._destryBodyList) {\r\n\t\t\tthis._destryBodyList.forEach(b => this._DestroyBody(b));\r\n\t\t\tthis._destryBodyList.length = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = window.chara ? window.chara.$physics : this.player;\r\n\r\n\t\tif ($gv.m_display_physics_debug) {\r\n\t\t\tconst debugDraw = this.m_debugDraw;\r\n\t\t\tthis.m_debugDraw.m_ctx = ctx;\r\n\r\n\t\t\tconst w = ctx.canvas.width;\r\n\t\t\tconst h = ctx.canvas.height;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t\r\n\t\t\tctx.scale(debugDraw.canvasScale, debugDraw.canvasScale);\r\n\t\t\tctx.lineWidth /= debugDraw.canvasScale;\r\n\r\n\t\t\t// apply camera\r\n\t\t\tctx.scale(debugDraw.viewZoom, debugDraw.viewZoom);\r\n\t\t\tctx.lineWidth /= debugDraw.viewZoom;\r\n\r\n\t\t\tthis.DrawDebugData();\r\n\r\n\t\t\t//display player's front\r\n\t\t\tif (player && player.body) {\r\n\t\t\t\tconst pos = player.getPosition();\r\n\t\t\t\tctx.fillStyle = \"#F00A\";\r\n\t\t\t\t\r\n\t\t\t\t//test debugDraw.canvasScale\r\n\t\t\t\tif (player.state.front > 0) {\r\n\t\t\t\t\tctx.fillRect(pos.x, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse if (player.state.front < 0) {\r\n\t\t\t\t\tctx.fillRect(pos.x - 1, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tctx.fillRect(pos.x - 0.5, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\r\n\t\tif ($gv.m_display_particleSystem) {\r\n\t\t\tif (renderer.gl) {\r\n\t\t\t\t/** @type {WebGLRenderingContext} */\r\n\t\t\t\tconst gl = this.gl;\r\n\r\n\t\t\t\tif (!this.$vbo_ps) {\r\n\t\t\t\t\tlet vbo = gl.createBuffer();\r\n\r\n\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbo);\r\n\r\n\t\t\t\t\tconst count = this.m_particleSystem.GetParticleCount();\r\n\t\t\t\t\tconst buf = this.m_particleSystem.GetPositionBuffer();\r\n\r\n\t\t\t\t\tlet vertices = new Float32Array(count * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < count; i += 2) {\r\n\t\t\t\t\t\tvertices[i + 0] = buf[i].x;\r\n\t\t\t\t\t\tvertices[i + 1] = buf[i].y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n\r\n\t\t\t\t\tthis.$vbo_ps = vbo;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst count = this.m_particleSystem.GetParticleCount();\r\n\t\t\t\t\tconst buf = this.m_particleSystem.GetPositionBuffer();\r\n\r\n\t\t\t\t\tlet vertices = new Float32Array(count * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < count; i += 2) {\r\n\t\t\t\t\t\tvertices[i + 0] = buf[i].x;\r\n\t\t\t\t\t\tvertices[i + 1] = buf[i].y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let group = this.m_particleSystem.m_groupList; group; group = group.m_next) {\r\n\t\t\t\t\tlet particleCount = group.GetParticleCount();\r\n\t\t\t\t\tlet instanceOffset = group.GetBufferIndex();\r\n\t\t\t\t\tgl.drawArrays(gl.POINTS, instanceOffset, particleCount);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (ctx) {\r\n\t\t\t\tif ($gv.func) {\r\n\t\t\t\t\t$gv.func.call(this, ctx, renderer);\r\n\t\t\t\t\t//$gv.func = function (ctx) {\r\n\t\t\t\t\t//\tctx = ctx || $engine.ctx;\r\n\t\t\t\t\t//\tconst vertices = this.m_particleSystem.m_positionBuffer.data;\r\n\t\t\t\t\t//\tconst colorBuffer = this.m_particleSystem.m_colorBuffer.data;\r\n\t\t\t\t\t//\tconst weightBuffer = this.m_particleSystem.m_weightBuffer;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\tlet minWeight = Math.min.apply(this, weightBuffer.slice(0, 128));\r\n\t\t\t\t\t//\tlet maxWeight = Math.max.apply(this, weightBuffer.slice(0, 128)) - minWeight;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\tif (vertices.length > 2) {\r\n\t\t\t\t\t//\t\tlet length = vertices.length / 2;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\t\tctx.fillStyle = \"#0747\";\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\t\tfor (let i = 0; i < length - 2; i += 1) {\r\n\t\t\t\t\t//\t\t\tctx.beginPath();\r\n\t\t\t\t\t//\t\t\tctx.moveTo(vertices[i + 0].x * $gv.CANVAS_SCALE, vertices[i + 0].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.lineTo(vertices[i + 1].x * $gv.CANVAS_SCALE, vertices[i + 1].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.lineTo(vertices[i + 2].x * $gv.CANVAS_SCALE, vertices[i + 2].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.fillStyle = `hsla(87deg,${(weightBuffer[i] / maxWeight * 100).toFixed(0)}%,${(weightBuffer[i] / maxWeight * 50).toFixed(0)}%,${(weightBuffer[i] / maxWeight / 2).toFixed(2)})`\r\n\t\t\t\t\t//\t\t\t//ctx.fillStyle = colorBuffer[i].MakeStyleString();\r\n\t\t\t\t\t//\t\t\tctx.fill();\r\n\t\t\t\t\t//\t\t}\r\n\t\t\t\t\t//\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst vertices = this.m_particleSystem.m_positionBuffer.data;\r\n\t\t\t\t\tconst colorBuffer = this.m_particleSystem.m_colorBuffer.data;\r\n\t\t\t\t\tconst weightBuffer = this.m_particleSystem.m_weightBuffer.data;\r\n\r\n\t\t\t\t\trenderer.pushMatrix();\r\n\r\n\t\t\t\t\tconst r = window.$particleRadius;\r\n\t\t\t\t\tconst r2 = r * 2;\r\n\r\n\t\t\t\t\tif (!this.$particle_grd) {\r\n\t\t\t\t\t\tlet grd = ctx.createRadialGradient(r, r, 0, r, r, r2);\r\n\t\t\t\t\t\tgrd.addColorStop(0, \"#0744\");\r\n\t\t\t\t\t\tgrd.addColorStop(1, \"#07440\");\r\n\t\t\t\t\t\tthis.$particle_grd = grd;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let group = this.m_particleSystem.m_groupList; group; group = group.m_next) {\r\n\t\t\t\t\t\tfor (let i = group.m_firstIndex; i < group.m_lastIndex; ++i) {\r\n\t\t\t\t\t\t\tlet x1 = vertices[i].x * $gv.CANVAS_SCALE - r;\r\n\t\t\t\t\t\t\tlet y1 = vertices[i].y * $gv.CANVAS_SCALE - r;\r\n\r\n\t\t\t\t\t\t\trenderer.setTransform(1, 0, 0, 1, $gv.m_viewRect.left + x1, $gv.m_viewRect.top + y1);\r\n\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t\t\t\t//texture\r\n\r\n\t\t\t\t\t\t\t//ctx.arc(0, 0, r2, 0, 2 * Math.PI);\r\n\t\t\t\t\t\t\t//ctx.fillStyle = this.$particle_grd;\r\n\t\t\t\t\t\t\t//ctx.fill();\r\n\r\n\t\t\t\t\t\t\tctx.fillStyle = this.$particle_grd;\r\n\t\t\t\t\t\t\tctx.fillRect(r, r, r2 * 2, r2 * 2);\r\n\r\n\t\t\t\t\t\t\t//center\r\n\t\t\t\t\t\t\t//ctx.fillStyle = \"red\";\r\n\t\t\t\t\t\t\t//ctx.fillRect(0, 0, 1, 1);\r\n\r\n\t\t\t\t\t\t\t//border\r\n\t\t\t\t\t\t\t//ctx.strokeRect(-r, -r, r2, r2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.popMatrix();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($gv.m_display_foothold) {\r\n\t\t\tctx.save();\r\n\t\t\tthis.ground.$drawDebugInfo(renderer);\r\n\t\t\tif (player && player._foothold) {\r\n\t\t\t\tplayer._foothold.$drawDebugInfo2(renderer, \"#FF0\");\r\n\t\t\t}\r\n\r\n\t\t\tlet $foothold, $ladderRope;\r\n\t\t\tif (player) {\r\n\t\t\t\t$foothold = player.$foothold;\r\n\t\t\t\t$ladderRope = player.ladder;\r\n\t\t\t}\r\n\t\t\tif ($foothold && this.draw_foothold_path_count) {\r\n\t\t\t\t$foothold.$drawDebugInfo2(renderer, \"#F00\");\r\n\r\n\t\t\t\t//draw path\r\n\t\t\t\tlet count = this.draw_foothold_path_count;\r\n\t\t\t\tctx.lineWidth = 2.5;\r\n\t\t\t\tctx.strokeStyle = \"#00FE\";\r\n\t\t\t\tif (player.state.front > 0) {\r\n\t\t\t\t\t$foothold = this.ground.footholds[$foothold.next];\r\n\t\t\t\t\tfor (; $foothold; $foothold = this.ground.footholds[$foothold.next]) {\r\n\t\t\t\t\t\t$foothold._drawLine(ctx);\r\n\t\t\t\t\t\tif ((--count) <= 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (player.state.front < 0) {\r\n\t\t\t\t\t$foothold = this.ground.footholds[$foothold.prev];\r\n\t\t\t\t\tfor (; $foothold; $foothold = this.ground.footholds[$foothold.prev]) {\r\n\t\t\t\t\t\t$foothold._drawLine(ctx);\r\n\t\t\t\t\t\tif ((--count) <= 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ladderRope.forEach(lr => {\r\n\t\t\t\tconst width = lr.calcWidth();\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(lr.x - width * 0.5, lr.y1, width, lr.y2 - lr.y1);\r\n\t\t\t\tctx.fillStyle = lr == $ladderRope ? \"#E117\":\"#EB17\";\r\n\t\t\t\tctx.fill();\r\n\t\t\t});\r\n\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * https://github.com/google/LiquidFunPaint/blob/develop/src/com/google/fpl/liquidfunpaint/ParticleRenderer.java#L43\r\n * Renderer to draw particle water, objects, and wall. It draws particles as\r\n * fluid (or objects) by following three steps:\r\n * 1) Draws particles to a texture\r\n * 2) Blurs it out\r\n * 3) Applies threshold.\r\n */\r\n\r\n","﻿\r\nimport { LifeRenderer } from \"./LifeRenderer.js\";\r\n\r\n\r\nwindow.MobAnimationSpeed = 1;\r\n\r\nwindow.$mob_name = {};\r\n\r\n/**\r\n * Mob basic infomation\r\n * Mob antion(animation) collection\r\n */\r\nexport class MobRenderer extends LifeRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t//[\"info\",\"stand\",\"hit1\",\"die1\",\"skill1\",\"skill2\",\"skill3\",\"skill4\",\"skill5\",\"attack1\",\"attack2\",\"attack3\",\"attack4\",\"attack5\"]\r\n\t}\r\n\r\n\tstatic get __info() {\r\n\t\treturn {\r\n\t\t\t\"noFlip\": 1,\r\n\t\t\t\"level\": 230,\r\n\t\t\t\"maxHP\": \"??????\",\r\n\t\t\t\"maxMP\": 100000,\r\n\t\t\t\"speed\": 0,\r\n\t\t\t\"PADamage\": 22000,\r\n\t\t\t\"PDRate\": 300,\r\n\t\t\t\"MADamage\": 24000,\r\n\t\t\t\"MDRate\": 30,\r\n\t\t\t\"acc\": 9999,\r\n\t\t\t\"eva\": 750,\r\n\t\t\t\"pushed\": 1000000000,\r\n\t\t\t\"fs\": 10,\r\n\t\t\t\"summonType\": 1,\r\n\t\t\t\"category\": 1,\r\n\t\t\t\"elemAttr\": \"P2H2F2I2S2L2D2\",\r\n\t\t\t\"mobType\": \"3N\",\r\n\t\t\t\"firstAttack\": 1,\r\n\t\t\t\"hideHP\": 1,\r\n\t\t\t\"boss\": 1,\r\n\t\t\t\"hpTagColor\": 1,\r\n\t\t\t\"hpTagBgcolor\": 5,\r\n\t\t\t\"showNotRemoteDam\": 1,\r\n\t\t\t\"defaultHP\": \"측정불가\",\r\n\t\t\t\"defaultMP\": \"측정불가\",\r\n\t\t\t\"ignoreMoveImpact\": 1\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\tif (!MobRenderer._desc[id]) {\r\n\t\t\tlet base = MobRenderer._get_desc_base_path();\r\n\t\t\tlet url = [base, Number(id)].join(\"/\");\r\n\t\t\tlet desc = await $get.data(url);\r\n\t\t\tMobRenderer._desc[id] = desc;\r\n\t\t\treturn desc;\r\n\t\t}\r\n\t\treturn MobRenderer._desc[id];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t * @param {!string} id\r\n\t */\r\n\tasync load(id) {\r\n\t\tlet result = await super.load.apply(this, arguments);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tisFlyMob() {\r\n\t\treturn !!this._raw.flySpeed;\r\n\t}\r\n\t//get info() {\r\n\t//\treturn this._raw.info;\r\n\t//}\r\n\t\r\n\t_getFirstAttackName() {\r\n\t\tconst firstAttack = this._raw.info.firstAttack;\r\n\t\treturn \"skill\" + firstAttack;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tstamp *= window.MobAnimationSpeed;\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\t\r\n\tstatic get _animations() {\r\n\t\treturn ['\"stand\"', '\"fly\"', '\"move\"', '\"jump\"', \"`hit${$index}`\", \"`die${$index}`\", \"`skill${$index}`\"/*, \"`attack${$index}`\"*/];\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\treturn \"/String/Mob\";\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Mob\";\r\n\t}\r\n}\r\nMobRenderer._desc = {};\r\n\r\n","﻿\r\nimport { LifeRenderer } from './LifeRenderer.js';\r\n\r\nwindow.NpcAnimationSpeed = 1;\r\n\r\n//Npc: 9090004 => ad-tv\r\n\r\nexport class NpcRenderer extends LifeRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\tif (!NpcRenderer._desc[id]) {\r\n\t\t\tlet base = NpcRenderer._get_desc_base_path();\r\n\t\t\tlet url = [base, Number(id)].join(\"/\");\r\n\t\t\tlet desc = await $get.data(url);\r\n\t\t\tNpcRenderer._desc[id] = desc;\r\n\t\t\treturn desc;\r\n\t\t}\r\n\t\treturn NpcRenderer._desc[id];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tstamp *= window.NpcAnimationSpeed;\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\tstatic get _animations() {\r\n\t\treturn ['\"stand\"'/*, \"`condition${$index}`\"*/];\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\treturn \"/String/Npc\";\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Npc\";\r\n\t}\r\n};\r\nNpcRenderer._desc = {};\r\n","\r\nimport { ColorRGB, ImageDataHelper } from \"../IRenderer.js\";\r\nimport { Vec2, Rectangle } from \"../math.js\";\r\nimport { Sprite } from \"../Sprite.js\";\r\n\r\n\r\n/**\r\n * @param {HTMLImageElement} image\r\n */\r\nfunction whiteToRed(image) {\r\n\tlet helper = new ImageDataHelper();\r\n\tlet imagedata = helper.imageToImagedata(image);\r\n\r\n\tfor (let y = 0; y < imagedata.height; ++y) {\r\n\t\tfor (let x = 0; x < imagedata.width * 4; ++x) {\r\n\t\t\t//imagedata.data[y * imagedata.width * 4 + x * 4 + 0] = 0;\r\n\t\t\timagedata.data[y * imagedata.width * 4 + x * 4 + 1] = 0;\r\n\t\t\timagedata.data[y * imagedata.width * 4 + x * 4 + 2] = 0;\r\n\t\t\t//imagedata.data[y * imagedata.width * 4 + x * 4 + 3] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\treturn helper.imagedataToDataURL(imagedata);\r\n}\r\n\r\n/**\r\n * @param {number} min\r\n * @param {number} range\r\n * @returns {number} min + Random(-1, 1) * range\r\n */\r\nfunction rand_r(min, range) {\r\n\treturn min - range + Math.random() * range * 2;\r\n}\r\n\r\n/**\r\n * @param {ColorRGB} color\r\n * @param {ColorRGB} colorVar\r\n * @returns {ColorRGB}\r\n */\r\nfunction rand_color2i(color, colorVar) {\r\n\tconst col = ColorRGB.fromInt24(color);\r\n\tconst cv = ColorRGB.fromInt24(colorVar);\r\n\tconst r = Math.max(0, Math.min(rand_r(col.r, cv.r), 255));\r\n\tconst g = Math.max(0, Math.min(rand_r(col.g, cv.g), 255));\r\n\tconst b = Math.max(0, Math.min(rand_r(col.b, cv.b), 255));\r\n\t\r\n\treturn new ColorRGB(r, g, b);\r\n}\r\nfunction _rand_color2i(color, colorVar) {\r\n\treturn ColorRGB.fromInt24(Math.max(0, Math.min(rand_r(color, colorVar), 255)));\r\n}\r\n\r\nexport class Particle {\r\n\t/** @param {ParticleSystem} ps */\r\n\tconstructor(ps) {\r\n\t\tthis._initParam(ps);\r\n\r\n\t\tthis.life = 0;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.pos = new Vec2(0, 0);\r\n\t\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.scale = this.startScale;\r\n\t\tthis.color = new ColorRGB(255, 255, 255);\r\n\t}\r\n\t\r\n\t/** @param {ParticleSystem} ps */\r\n\t_initParam(ps) {\r\n\t\tthis.lifeMax = rand_r(ps.life, ps.lifeVar);\r\n\r\n\t\tconst angle = rand_r(ps.angle, ps.angleVar) * Math.PI / 180;//?rand_r\r\n\r\n\t\tif (1) {\r\n\t\t\tthis.startColor = rand_color2i(ps.startColor, ps.startColorVar);\r\n\t\t\tthis.color_d = rand_color2i(ps.endColor, ps.endColorVar).selfSub(this.startColor);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.startColor = _rand_color2i(ps.startColor, ps.startColorVar);\r\n\t\t\tthis.color_d = _rand_color2i(ps.endColor, ps.endColorVar).selfSub(this.startColor);\r\n\t\t}\r\n\r\n\t\t//unit: px\r\n\t\tconst sizeX = Math.max(1, ps.texture.width);\r\n\t\tconst sizeY = Math.max(1, ps.texture.height);\r\n\t\t//const size = Math.sqrt(sizeX ** 2 + sizeY ** 2);\r\n\t\tconst size = sizeX == 1 ? sizeY:(sizeY == 1 ? 1 : Math.min(sizeX, sizeY));\r\n\r\n\t\tthis.startScale = rand_r(ps.startSize, ps.startSizeVar) / size;\r\n\t\tconst endScale = rand_r(ps.endSize, ps.endSizeVar) / size;\r\n\t\tthis.scale_d = endScale - this.startScale;\r\n\r\n\t\tthis.startX = rand_r(ps.posX, ps.posVarX);\r\n\t\tthis.startY = rand_r(ps.posY, ps.posVarY);\r\n\r\n\t\tthis.emitterMode = ps.emitterType ? 1 : 0;\r\n\r\n\t\t// Mode A: Gravity + tangential accel + radial accel\r\n\t\tif (!this.emitterMode) {//Particle.EMITTER_MODE.GRAVITY\r\n\t\t\t// gravity\r\n\t\t\tthis.gravity = new Vec2(ps.GRAVITY.x, ps.GRAVITY.y);\r\n\r\n\t\t\t// speed\r\n\t\t\tconst speed = rand_r(ps.GRAVITY.speed, ps.GRAVITY.speedVar);\r\n\t\t\t\r\n\t\t\t/** @type {Vec2} - velocity */\r\n\t\t\tthis.dir = new Vec2(Math.cos(angle) * speed, -Math.sin(angle) * speed);\r\n\r\n\t\t\t// radial acceleration\r\n\t\t\tthis.radialAccel = rand_r(ps.GRAVITY.radialAccel || 0, ps.GRAVITY.radialAccelVar || 0);\r\n\r\n\t\t\t// tangential acceleration\r\n\t\t\tthis.tangentialAccel = rand_r(ps.GRAVITY.tangentialAccel || 0, ps.GRAVITY.tangentialAccelVar || 0);\r\n\r\n\t\t\t// rotation is dir\r\n\t\t\tthis.rotationIsDir = ps.GRAVITY.rotationIsDir ? true : false;\r\n\t\t}\r\n\t\telse if (this.emitterMode == 1) {\r\n\t\t\talert(\"Particle.EMITTER_MODE.RADIUS\");\r\n\t\t}\r\n\t}\r\n\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tconst dt = stamp / 1000;\r\n\t\tconst tp = Math.max(0, Math.min(this.life / this.lifeMax, 1));\r\n\r\n\t\t// update position\r\n\t\t{\r\n\t\t\tlet radial;\r\n\r\n\t\t\t// radial acceleration\r\n\t\t\tif (this.pos.x || this.pos.y) {\r\n\t\t\t\tradial = (new Vec2(this.pos.x, this.pos.y)).normalize();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tradial = new Vec2(0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tlet tangential = radial.clone();\r\n\t\t\tradial = radial.mul(this.radialAccel);\r\n\r\n\t\t\t// tangential acceleration\r\n\t\t\tlet newy = tangential.x;\r\n\t\t\ttangential.x = -tangential.y;\r\n\t\t\ttangential.y = newy;\r\n\r\n\t\t\ttangential = tangential.mul(this.tangentialAccel);\r\n\r\n\t\t\tlet _radial = radial.add(tangential);\r\n\t\t\t_radial = _radial.add(this.gravity);\r\n\t\t\t_radial = _radial.mul(dt);\r\n\t\t\t\r\n\t\t\tthis.dir = this.dir.add(_radial);\r\n\r\n\t\t\tlet _dir = this.dir.mul(dt);\r\n\t\t\tthis.pos = this.pos.add(_dir);\r\n\t\t}\r\n\r\n\t\tthis.scale = Math.max(0, this.startScale + this.scale_d * tp);\r\n\t\tthis.color = ColorRGB.add(this.startColor, ColorRGB.scale(this.color_d, tp));\r\n\t\tthis.opacity = 1 - tp;\r\n\t\t\r\n\t\tthis.life += stamp;\r\n\t}\r\n\tisEnd() {\r\n\t\treturn this.life >= this.lifeMax;\r\n\t}\r\n\tdraw(renderer, texture, mx, my) {\r\n\t\tconst scale = this.scale;\r\n\t\tconst x = (this.startX + this.pos.x + mx);\r\n\t\tconst y = (this.startY + this.pos.y + my);\r\n\t\t\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\r\n\t\tlet color = this.color.toHSV();\r\n\t\trenderer.drawColoredGraph2(texture, x, y, scale, scale, color);\r\n\t}\r\n}\r\n\r\nclass _ParticleGroupData {\r\n\tconstructor() {\r\n\t\tthis.GRAVITY = new Vec2();\r\n\t\tthis.life = 0;\r\n\t\tthis.lifeVar = 0;\r\n\t\tthis.duration = 0;\r\n\t\tthis.totalParticle = 0;\r\n\t}\r\n}\r\n\r\nexport class ParticleGroup extends _ParticleGroupData {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {Particle[]} */\r\n\t\tthis.particles = [];\r\n\r\n\t\t/** @type {number} time_in_ms:float */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} timeElapsed_in_ms:float */\r\n\t\tthis.delta = 0;\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = Infinity;\r\n\t\t\r\n\t\tthis.duration = -1;//Infinity\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet pg = new ParticleGroup();\r\n\t\tObject.assign(pg, this);\r\n\t\tpg.particles = [];\r\n\t\tpg.time = 0;\r\n\t\tpg.delta = 0;\r\n\t\treturn pg;\r\n\t}\r\n\r\n\tevaluate() {\r\n\t\tlet totalTime = this.totalParticle * this.delay;\r\n\r\n\t\tfor (let i = 0; i < this.totalParticle; ++i) {\r\n\t\t\tconst particle = new Particle(this);\r\n\t\t\tconst t = totalTime - i * this.delay;\r\n\t\t\tparticle.life += t;\r\n\t\t\tparticle.update(t);\r\n\t\t\tparticle.life = t;\r\n\t\t\tthis.particles.push(particle);\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync load(particle_name) {\r\n\t\tthis.particleName = particle_name;\r\n\r\n\t\t/** @type ParticleGroupData */\r\n\t\tlet data = await $get.data(this._particle_path);\r\n\t\t\r\n\t\tObject.assign(this, data);\r\n\r\n\t\tthis.GRAVITY.x = data.GRAVITY.x;\r\n\t\tthis.GRAVITY.y = data.GRAVITY.y;\r\n\r\n\t\tthis.life = data.life * 1000;\r\n\t\tthis.lifeVar = data.lifeVar * 1000;\r\n\t\tthis.duration = data.duration * 1000;\r\n\r\n\t\t//this.totalParticle = 2;//debug\r\n\t\tthis.delay = this.life / this.totalParticle;\r\n\r\n\t\tif (_experimental_particle) {\r\n\t\t\tconst that = this;\r\n\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\tlet image = new Image();\r\n\t\t\t\timage.onload = function () {\r\n\t\t\t\t\tlet texture = new Sprite(data.texture);\r\n\t\t\t\t\tif (_experimental_particle === true) {\r\n\t\t\t\t\t\ttexture._url = whiteToRed(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttexture._url = \"data:image/svg+xml;utf-8,\" + encodeURIComponent(`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${this.naturalWidth}\" height=\"${this.naturalHeight}\">\r\n\t<defs>\r\n\t\t<mask id=\"Mask\">\r\n\t\t\t<image xlink:href=\"${new URL(\"images\" + that._texture_base_path, window.location).href}\"/>\r\n\t\t</mask>\r\n\t</defs>\r\n\t<g>\r\n\t\t<rect width=\"${this.naturalWidth}\" height=\"${this.naturalHeight}\" fill=\"red\" mask=\"url(#Mask)\"/>\r\n\t</g>\r\n</svg>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.texture = texture;\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t\timage.src = \"images\" + that._texture_base_path;\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.texture = new Sprite(data.texture);\r\n\t\t\tthis.texture._url = \"images\" + this._texture_base_path;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tif (this.particles.length < this.totalParticle && (!this.time || this.time > this.delay)) {\r\n\t\t\tthis.particles.push(new Particle(this));\r\n\t\t\tthis.time = 0;\r\n\t\t}\r\n\t\t\r\n\t\tthis.particles = this.particles.filter(particle => {\r\n\t\t\tif (particle.isEnd()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparticle.update(stamp);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.time += stamp;\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn (this.delta > this.duration && this.duration != -1);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Rectangle} viewRect\r\n\t * @param {number} mx - translate x\r\n\t * @param {number} my - translate y\r\n\t */\r\n\trender(renderer, viewRect, mx, my) {\r\n\t\tconst ctx = renderer.ctx;\r\n\r\n\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x), Math.trunc(-$gv.m_viewRect.y));\r\n\t\tif (this.blendFuncDst != 6 || this.blendFuncSrc != 5) {\r\n\t\t\tctx.globalCompositeOperation = \"lighter\";\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < this.particles.length; ++i) {\r\n\t\t\tconst particle = this.particles[i];\r\n\t\t\tif (!particle.isEnd()) {\r\n\t\t\t\tconst x = this.x + mx;\r\n\t\t\t\tconst y = this.y + my;\r\n\t\t\t\tconst hw = this.texture.width * particle.scale;\r\n\t\t\t\tconst hh = this.texture.height * particle.scale;\r\n\t\t\t\t\r\n\t\t\t\tif (!viewRect || viewRect.collide4f2(x + particle.startX + particle.pos.x, y + particle.startY + particle.pos.y, hw, hh)) {\r\n\t\t\t\t\tparticle.draw(renderer, this.texture, x, y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//reset\r\n\t\tctx.globalCompositeOperation = \"source-over\";\r\n\t\trenderer.globalAlpha = 1;\r\n\t}\r\n\t\r\n\tget _particle_path() {\r\n\t\treturn [\"/Effect/particle\", this.particleName].join(\"/\");\r\n\t}\r\n\tget _texture_base_path() {\r\n\t\treturn [this._particle_path, \"texture\"].join(\"/\");\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n","﻿\r\nimport { AddInitTask } from \"../init.js\";\r\n\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\nimport { LifeRenderer } from \"./Renderer/LifeRenderer.js\";\r\nimport { MobRenderer } from \"./Renderer/MobRenderer.js\";\r\nimport { NpcRenderer } from \"./Renderer/NpcRenderer.js\";\r\n\r\nimport { ParticleGroup } from \"./Renderer/ParticleSystem.js\";\r\n\r\nimport { World } from \"./Physics/World.js\";\r\nimport { Ground } from \"./Physics/Ground.js\";\r\nimport { PMob } from \"./Physics/PMob.js\";\r\nimport { SceneObject } from \"./SceneObject.js\";\r\n\r\n\r\nwindow.enable_skeletal_anim = true;\r\n\r\n/**\r\n * map sprite data\r\n */\r\nconst map_sprite = {\r\n\tBack: {},\r\n\tObj: {},\r\n\tTile: {},\r\n};\r\n\r\nwindow.$map_sprite = map_sprite;\r\n\r\n$gv.allQuest = {};\r\n\r\nasync function map_load_package(cat, pack) {\r\n\tif (!cat || !pack) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!map_sprite[cat][pack]) {\r\n\t\tlet url = `/Map/${cat}/${pack}`;\r\n\t\t\r\n\t\tmap_sprite[cat][pack] = await $get.data(url);\r\n\r\n\t\tif (map_sprite[cat][pack] == null) {\r\n\t\t\tconsole.warn(\"Empty package: \" + url);\r\n\t\t}\r\n\t}\r\n\tif (map_sprite[cat][pack]) {\r\n\t\treturn map_sprite[cat][pack];\r\n\t}\r\n\t//throw new Error();\r\n}\r\n\r\n\r\n/**\r\n * Map texture\r\n */\r\nclass MapTexture extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t * @param {!MapTexture} texture0\r\n\t */\r\n\tconstructor(_raw, url, texture0) {\r\n\t\tsuper(_raw, url);\r\n\t\t//this.className = _path;\r\n\r\n\t\ttexture0 = texture0 || MapTexture.raw_default;\r\n\t\t\r\n\t\tthis.a0 = this._get(-1, \"a0\", Number);\r\n\t\tthis.a1 = this._get(-1, \"a1\", Number);\r\n\r\n\t\tthis.movetype = this._get(texture0.movetype, \"moveType\", Number);\r\n\t\tthis.movew = this._get(texture0.movew, \"moveW\", Number);\r\n\t\tthis.moveh = this._get(texture0.moveh, \"moveH\", Number);\r\n\t\tthis.movep = this._get(texture0.movep, \"moveP\", Number);\r\n\t\tthis.mover = this._get(texture0.mover, \"moveR\", Number);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} f - flip\r\n\t * @param {number} px - position.x:int\r\n\t * @param {number} py - position.y:int\r\n\t * @param {number} time - movement_animation:float\r\n\t * @param {number} delta - graph_animation:float\r\n\t * @param {maple_scene_label} border\r\n\t */\r\n\tdraw(renderer, f, px, py, time, delta) {\r\n\t\tlet ratio = time / this.delay;\r\n\t\tlet alpha = (0 <= this.a0 || 0 <= this.a1 ? ((0 > this.a0 ? 0 : this.a0) * (1.0 - ratio) + (0 > this.a1 ? 0 : this.a1) * ratio) : 255.0);\r\n\t\tlet angle = 0;\r\n\r\n\t\tswitch (this.movetype) {\r\n\t\t\tcase 1: px = px + this.movew * Math.sin(0 == this.movep ? (delta / 1000.0) : (delta * 2.0 * Math.PI / this.movep)); break;\r\n\t\t\tcase 2: py = py + this.moveh * Math.sin(0 == this.movep ? (delta / 1000.0) : (delta * 2.0 * Math.PI / this.movep)); break;\r\n\t\t\tcase 3: if (0 != this.mover) angle = delta / this.mover; break;\r\n\t\t}\r\n\t\t\r\n\t\tlet ctx = renderer.ctx;\r\n\t\tfunction axis(x, y, w, h, c1, c2) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t\tctx.lineTo(x + w, y);\r\n\t\t\tstroke(c1, c2);\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t\tctx.lineTo(x, y + h);\r\n\t\t\tstroke(c2, c1);\r\n\t\t}\r\n\t\tfunction stroke(c1, c2) {\r\n\t\t\tctx.lineWidth = 3;\r\n\t\t\tctx.strokeStyle = c1;\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t\trenderer.loadIdentity();\r\n\t\trenderer.translate(Math.trunc(-$gv.m_viewRect.x + 0.5), Math.trunc(-$gv.m_viewRect.y + 0.5));\r\n\t\t{\r\n\t\t\trenderer.globalAlpha = Math.max(0, Math.min(alpha / 255, 1));\r\n\r\n\t\t\trenderer._drawRotaGraph(this, px, py, angle, f);\r\n\t\t}\r\n\t}\r\n}\r\nMapTexture.raw_default = {\r\n\ta0: -1,\r\n\ta1: -1,\r\n\tmovetype: 0,\r\n\tmovew: 0,\r\n\tmoveh: 0,\r\n\tmovep: 0,\r\n\tmover: 0,\r\n};\r\n\r\n/**\r\n * Map clip-texture\r\n */\r\nclass MapTextureClip extends MapTexture {\r\n\tconstructor(_raw, url) {\r\n\t\tsuper(_raw, url);\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.clip = new Rectangle();//zero Rectangle\r\n\t}\r\n}\r\n\r\nclass MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tif (_raw == null) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.error(_raw);\r\n\t\t}\r\n\t\tthis._raw = _raw;\r\n\r\n\r\n\t\t/** @type {MapTexture[]} */\r\n\t\tthis.textures = [];\r\n\r\n\t\t/** @type {number} int */\r\n\t\tthis.frame = 0;\r\n\r\n\t\t/** @type {number} time_in_ms:float */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} timeElapsed_in_ms:float */\r\n\t\tthis.delta = 0;\r\n\r\n\r\n\t\t/** @type {{[questId:string]: number}} */\r\n\t\tthis.quest = _raw.quest;\r\n\r\n\t\tfor (let qid in _raw.quest) {\r\n\t\t\tif (!$gv.allQuest[qid]) {\r\n\t\t\t\t$gv.allQuest[qid] = new Set();\r\n\t\t\t}\r\n\t\t\t$gv.allQuest[qid].add(_raw.quest[qid]);\r\n\t\t}\r\n\t\t\r\n\t\tthis._load_object_info();\r\n\t\tthis._load_back_info();\r\n\t\tthis._load_tile_info();\r\n\r\n\t\tthis.aabb = null;\r\n\t\tthis.display_aabb = false;\r\n\t\tthis.aabb_color = null;\r\n\t\t\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tthis.__max_repeat_count = 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_load_object_info() {\r\n\t\t/** @type{number} obj-type */\r\n\t\tthis.type = this._get(0, \"sign\", Number);\r\n\r\n\t\t/** @type{number} x */\r\n\t\tthis.x = this._get(0, \"x\", Number);\r\n\r\n\t\t/** @type{number} y */\r\n\t\tthis.y = this._get(0, \"y\", Number);\r\n\r\n\t\t/** @type{number} z */\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\t/** @type{number} zM */\r\n\t\tthis.zM = this._get(0, \"zM\", Number);\r\n\r\n\t\t/** @type{number} flip */\r\n\t\tthis.f = this._get(0, \"f\", Number);\r\n\t\t\r\n\t\t/** @type{name} named object */\r\n\t\tthis.name = this._raw.name;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;//data url //debug\r\n\t}\r\n\t_load_back_info() {\r\n\t\t/** @type {number} move type */\r\n\t\tthis.typeb = this._get(0, \"type\", Number);\r\n\t\tif (this.typeb < 0 || this.typeb > 7) {\r\n\t\t\talert(\"MapBackBase.typeb: \" + this.typeb);\r\n\t\t\tconsole.warn(\"MapBackBase.typeb: \" + this.typeb);\r\n\t\t}\r\n\r\n\t\t/** @type {number} a */\r\n\t\tthis.a = this._get(0, \"a\", Number);\r\n\r\n\t\t/** @type {number} rx */\r\n\t\tthis.rx = this._get(0, \"rx\", Number);\r\n\r\n\t\t/** @type {number} ry */\r\n\t\tthis.ry = this._get(0, \"ry\", Number);\r\n\r\n\t\t/** @type {number} center y */\r\n\t\tthis.cx = this._get(0, \"cx\", Number);\r\n\r\n\t\t/** @type {number} center y */\r\n\t\tthis.cy = this._get(0, \"cy\", Number);\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.backTags = this._raw.backTags;\r\n\t}\r\n\t_load_tile_info() {\r\n\t\t/** @type{number} flow */\r\n\t\tthis.flow = this._get(0, \"flow\", Number);\r\n\t\t\r\n\t\tif (this.flow & 1 && !this.cx) {\r\n\t\t\tthis.cx = 1000;\r\n\t\t}\r\n\t\tif (this.flow & 2 && !this.cy) {\r\n\t\t\tthis.cy = 1000;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {Promise}\r\n\t */\r\n\tload() {\r\n\t\tlet texture0 = this._load_texture(0, null);\r\n\t\tthis.textures[0] = texture0;\r\n\r\n\t\tfor (let i = 1; i in this._texture_raw; ++i) {//not array\r\n\t\t\tthis.textures[i] = this._load_texture(i, texture0);\r\n\t\t}\r\n\t\tthis.__calc_aabb();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t */\r\n\t_load_texture() {\r\n\t\t//nothing\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tunload() {\r\n\t\tthis.textures = [];\r\n\t}\r\n\t\r\n\t__calc_aabb() {\r\n\t\tif (this.textures.length >= 1) {\r\n\t\t\tlet mover = 0;\r\n\t\t\tfor (let i = 0; i < this.textures.length; ++i) {\r\n\t\t\t\tlet texture = this.textures[i];\r\n\t\t\t\tmover = mover | texture.mover;\r\n\t\t\t}\r\n\t\t\tconst aabb = this.compute_max_rectangle();\r\n\t\t\tif (mover) {\r\n\t\t\t\tconst r = Math.round(Math.sqrt(aabb.width ** 2 + aabb.height ** 2));\r\n\t\t\t\tconst hr = Math.round(r * 0.5);\r\n\t\t\t\tthis.aabb = new Rectangle(this.x - hr, this.y - hr, r, r);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.aabb = aabb;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (propertyName in this._raw) {\r\n\t\t\tif (converter) {\r\n\t\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this._raw[propertyName];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 1) {\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.textures[this.frame].delay) {\r\n\t\t\t\tthis.frame = ++this.frame;\r\n\r\n\t\t\t\tthis.time = 0;\r\n\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tthis.frame = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\r\n\t\tif ($gv.m_editor_mode && this.aabb) {\r\n\t\t\tthis.$editor_mouse();\r\n\t\t}\r\n\t}\r\n\t_update_and_preload(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\t\t\r\n\t\tif (fc > 1) {\r\n\t\t\tconst texture = this.textures[this.frame];\r\n\r\n\t\t\tthis.time = this.time + stamp;\r\n\t\t\t\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.time > texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame;\r\n\r\n\t\t\t\tthis.time = 0;\r\n\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tthis.frame = 0;\r\n\r\n\t\t\t\t\tdelete this.update;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst next_texture = this.textures[this.frame + 1];\r\n\t\t\tif (next_texture && !next_texture.isLoaded()) {\r\n\t\t\t\tnext_texture.__loadTexture();\r\n\t\t\t}\r\n\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t\t\r\n\t\tif ($gv.m_editor_mode && this.aabb) {\r\n\t\t\tthis.$editor_mouse();\r\n\t\t}\r\n\t}\r\n\t$editor_mouse() {\r\n\t\tconst vrect = $gv.m_viewRect;\r\n\t\tconst mcx = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\tconst mcy = $gv.m_viewRect.top + $gv.mouse_y;\r\n\t\tif (this.typeb == 0 && this.aabb.collide4f2(mcx, mcy, 1, 1))\r\n\t\t{\r\n\t\t\tthis.display_aabb = true;\r\n\t\t\tif ($gv.mouse_dl == 1 && (window.m_selected_object != this || window.m_selected_object == null)) {\r\n\t\t\t\tthis.$select();\r\n\t\t\t}\r\n\t\t\telse if (window.m_hover_object == null) {\r\n\t\t\t\twindow.m_hover_object = this;\r\n\t\t\t\tthis.aabb_color = \"rgba(0,255,0,0.25)\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.aabb_color = \"rgba(0,0,255,0.25)\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.$unselect();\r\n\t\t}\r\n\t\tif (window.m_selected_object == this) {\r\n\t\t\tthis.display_aabb = true;\r\n\t\t\tthis.aabb_color = \"rgba(255,0,0,0.5)\";\r\n\t\t}\r\n\t}\r\n\t$select() {\r\n\t\tif (window.m_selected_object) {\r\n\t\t\twindow.m_selected_object.$unselect();//prev\r\n\t\t}\r\n\t\twindow.m_selected_object = this;\r\n\t\twindow.m_hover_object = null;\r\n\t\t$gv.mouse_dl = 0;\r\n\t}\r\n\t$unselect() {\r\n\t\tthis.display_aabb = false;\r\n\t}\r\n\t$isRepeatX() {\r\n\t\treturn this.typeb == 1 || this.typeb == 4;\r\n\t}\r\n\t$isRepeatY() {\r\n\t\treturn this.typeb == 2 || this.typeb == 5;\r\n\t}\r\n\t\r\n\tcompute_rectangle(index) {\r\n\t\tconst texture = this.textures[index];\r\n\t\tif (texture) {\r\n\t\t\tconst width = texture.width;\r\n\t\t\tconst height = texture.height;\r\n\r\n\t\t\treturn new Rectangle(this.x - (this.f ? -texture.x + width : texture.x), this.y - texture.y, width, height);\r\n\t\t}\r\n\t}\r\n\tcompute_max_rectangle() {\r\n\t\tif (this.textures.length > 0) {\r\n\t\t\tlet { left, top, right, bottom } = this.compute_rectangle(0);\r\n\t\t\t\t\r\n\t\t\tfor (let j = 1; j < this.textures.length; ++j) {\r\n\t\t\t\tlet rect = this.compute_rectangle(j);\r\n\t\t\t\t\r\n\t\t\t\tleft = Math.min(left, rect.left);\r\n\t\t\t\ttop = Math.min(top, rect.top);\r\n\t\t\t\tright = Math.max(right, rect.right);\r\n\t\t\t\tbottom = Math.max(bottom, rect.bottom);\r\n\t\t\t}\r\n\t\t\treturn Rectangle.parse(left, top, right, bottom);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} index_of_texture\r\n\t * @param {number} mx - move x\r\n\t * @param {number} my - move x\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t__draw_texture(renderer, index_of_texture, mx, my, viewRect) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((--this.__max_repeat_count) <= 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this.typeb != 0 || (!this.aabb || this.aabb.collide(viewRect))) {\r\n\t\t\tlet texture = this.textures[index_of_texture];\r\n\r\n\t\t\tif (index_of_texture && !texture.isLoaded()) {\r\n\t\t\t\t// find loaded texture\r\n\t\t\t\tfor (let i = index_of_texture - 1; i >= 0; --i) {\r\n\t\t\t\t\ttexture = this.textures[index_of_texture];\r\n\t\t\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttexture.draw(renderer, this.f, this.x + mx, this.y + my, this.time, this.delta);//MapleSceneTexture#draw\r\n\t\t}\r\n\t\t\r\n\t\tif ($gv.m_display_selected_object && $gv.m_editor_mode && this.aabb && this.display_aabb) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\t\t\tconst x = Math.trunc((-viewRect.left + 0.5) + this.aabb.left);\r\n\t\t\tconst y = Math.trunc((-viewRect.top + 0.5) + this.aabb.top);\r\n\t\t\t\r\n\t\t\trenderer.loadIdentity();\r\n\r\n\t\t\trenderer.globalAlpha = 1;\r\n\t\t\t\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x, y, this.aabb.width, this.aabb.height);\r\n\t\t\tctx.fillStyle = this.aabb_color || \"rgba(20,255,20,0.5)\";//\r\n\t\t\tctx.fill();\r\n\t\t\t\r\n\t\t\tctx.lineWidth = 3;\r\n\t\t\t//ctx.lineCap = \"round\";\r\n\r\n\t\t\tctx.setLineDash([3, 3]);\r\n\t\t\tctx.lineDashOffset = 0;\r\n\t\t\tctx.strokeStyle = \"rgba(0,0,0,0.5)\";\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.setLineDash([3, 3]);\r\n\t\t\tctx.lineDashOffset = 3;\r\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.5)\";\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.setLineDash([]);\r\n\t\t\tctx.lineWidth = 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @protected\r\n\t * @param {IRenderer} renderer\r\n\t * @param {int} mx\r\n\t * @param {int} my\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t__draw(renderer, mx, my, viewRect) {\r\n\t\tthis.__draw_texture(renderer, this.frame, mx, my, viewRect);//MapleSceneTexture#draw\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} horizontal\r\n\t * @param {boolean} vertical\r\n\t * @param {number} mx - int\r\n\t * @param {number} my - int\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t_draw(renderer, horizontal, vertical, mx, my, viewRect) {\r\n\t\tlet texture = this.textures[this.frame];\r\n\t\tif (texture == null) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// viewRect - canvas rectangle\r\n\t\tlet { left, top, right, bottom } = viewRect;\r\n\t\t// image position\r\n\t\tlet ix = this.x - (this.f ? -texture.x + texture.width : texture.x);\r\n\t\tlet iy = this.y - texture.y;\r\n\t\t// tile size\r\n\t\tlet tw = 0 == this.cx ? texture.width : this.cx;\r\n\t\tlet th = 0 == this.cy ? texture.height : this.cy;\r\n\t\t// tile area\r\n\t\tlet x1 = left - (tw + (left - mx - ix) % tw);\r\n\t\tlet y1 = top - (th + (top - my - iy) % th);\r\n\t\tlet x2 = right + (tw - (right - mx - ix) % tw);\r\n\t\tlet y2 = bottom + (th - (bottom - my - iy) % th);\r\n\t\t\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tthis.__max_repeat_count = 1024;\r\n\t\t}\r\n\r\n\t\tif (horizontal)\r\n\t\t\tif (vertical)\r\n\t\t\t\tfor (let yy = y1; yy < y2; yy = yy + th)\r\n\t\t\t\t\tfor (let xx = x1; xx < x2; xx = xx + tw)\r\n\t\t\t\t\t\tthis.__draw(renderer, xx - ix, yy - iy, viewRect);\r\n\t\t\telse\r\n\t\t\t\tfor (let xx = x1; xx < x2; xx = xx + tw)\r\n\t\t\t\t\tthis.__draw(renderer, xx - ix, my, viewRect);\r\n\t\telse if (vertical)\r\n\t\t\tfor (let yy = y1; yy < y2; yy = yy + th)\r\n\t\t\t\tthis.__draw(renderer, mx, yy - iy, viewRect);\r\n\t\telse\r\n\t\t\tthis.__draw(renderer, mx, my, viewRect);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif (!this.textures.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet mrx = (this.rx + 100) * center.x / 100;\r\n\t\tlet mry = (this.ry + 100) * center.y / 100;\r\n\r\n\t\tswitch (this.typeb) {\r\n\t\t\tcase 0: this._draw(renderer, false, false, mrx, mry, viewRect); break;\r\n\t\t\tcase 1: this._draw(renderer, true, false, mrx, mry, viewRect); break;\r\n\t\t\tcase 2: this._draw(renderer, false, true, mrx, mry, viewRect); break;\r\n\t\t\tcase 3: this._draw(renderer, true, true, mrx, mry, viewRect); break;\r\n\t\t\tcase 4: this._draw(renderer, true, false, Math.trunc(this.delta / 200 * this.rx), mry, viewRect); break;\r\n\t\t\tcase 5: this._draw(renderer, false, true, mrx, Math.trunc(this.delta / 200 * this.ry), viewRect); break;\r\n\t\t\tcase 6: this._draw(renderer, true, true, Math.trunc(this.delta / 200 * this.rx), mry, viewRect); break;\r\n\t\t\tcase 7: this._draw(renderer, true, true, mrx, Math.trunc(this.delta / 200 * this.ry), viewRect); break;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _texture_base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nclass MapObject extends MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t\r\n\t\tif (this._raw.cx != null && (!this._raw.ry || this._raw.ry == -100)) {\r\n\t\t\tif (this._raw.rx) {//!= null && != 0\r\n\t\t\t\tif (this._raw.cy != null) {\r\n\t\t\t\t\tthis.typeb = 6;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.typeb = 4;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.typeb = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._raw.cy != null && (!this._raw.rx || this._raw.rx == -100)) {\r\n\t\t\tif (this._raw.ry) {//!= null && != 0\r\n\t\t\t\tif (this._raw.cx != null) {\r\n\t\t\t\t\tthis.typeb = 7;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.typeb = 5;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.typeb = 2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t * @returns {MapTexture}\r\n\t */\r\n\t_load_texture(i, texture0) {\r\n\t\tconst null_url = undefined;\r\n\t\tlet path = [\"/Map\", \"Obj\", this._texture_base_path, i].join(\"/\");\r\n\r\n\t\tlet texture = new MapTexture(this._texture_raw[i], null_url, texture0);\r\n\t\ttexture._url = path;\r\n\r\n\t\treturn texture;\r\n\t}\r\n\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.oS, this._raw.l0, this._raw.l1, this._raw.l2].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * textures; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry {\r\n\t\t\treturn map_sprite.Obj[this._raw.oS][this._raw.l0][this._raw.l1][this._raw.l2];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass MapParticle extends MapObject {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {ParticleGroup[]} */\r\n\t\tthis.groups = [];\r\n\t}\r\n\t\r\n\tasync load(particle_name) {\r\n\t\tlet pg = new ParticleGroup();\r\n\t\t\r\n\t\tawait pg.load(particle_name);\r\n\r\n\t\tlet keys = Object.keys(this._raw)\r\n\t\t\t.map(i => {\r\n\t\t\t\tlet n = parseInt(i, 10);\r\n\t\t\t\tif (Number.isSafeInteger(n)) {\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.warn(\"MapParticle.\" + particle_name + \".id: \" + i);\r\n\t\t\t\treturn null;\r\n\t\t\t})\r\n\t\t\t.filter(i => i != null);\r\n\t\t\t\r\n\t\tfor (let i of keys) {\r\n\t\t\tthis.groups[i] = pg.clone();\r\n\t\t\tthis.groups[i].x = this._raw[i].x;\r\n\t\t\tthis.groups[i].y = this._raw[i].y;\r\n\t\t\tthis.groups[i].evaluate();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tfor (let i = 0; i < this.groups.length; ++i) {\r\n\t\t\tconst pg = this.groups[i];\r\n\t\t\tpg.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tfor (let i = 0; i < this.groups.length; ++i) {\r\n\t\t\tconst pg = this.groups[i];\r\n\t\t\tlet mx = (this.rx + 100) * center.x / 100;\r\n\t\t\tlet my = (this.ry + 100) * center.y / 100;\r\n\t\t\tpg.render(renderer, viewRect, mx, my);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{particle:{[name:string]:{}}}} mapRawData\r\n\t * @param {SceneMap} sceneMap\r\n\t */\r\n\tstatic construct(mapRawData, sceneMap) {\r\n\t\tlet tasks = [];\r\n\t\tlet particleList = [];\r\n\t\tfor (let particleName in mapRawData.particle) {\r\n\t\t\tlet particleRaw = mapRawData.particle[particleName];\r\n\t\t\tlet mpp = new MapParticle(particleRaw);\r\n\t\t\ttasks.push(mpp.load(particleName));\r\n\t\t\tparticleList.push(mpp);\r\n\t\t}\r\n\t\tsceneMap.particleList = particleList;\r\n\t\treturn tasks;\r\n\t}\r\n}\r\n\r\nclass MapObjectSkeletalAnim extends MapObject {\r\n\tconstructor(_raw, url) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {SSAnim} */\r\n\t\tthis.ssanim = null;\r\n\t\t/** @type {string} */\r\n\t\tthis._fname = null;\r\n\t\t\r\n\t\t///** @type{number} tags */\r\n\t\t//this._tags = this._get(0, \"tags\", String);\r\n\t}\r\n\t/** @type {string} */\r\n\tget _folder() {\r\n\t\tconst raw = this._raw;\r\n\t\t//[\"Obj\"\t ][obj.oS][obj.l0][obj.l1][obj.l2][0    ][\"\"]\r\n\t\treturn `/Map/Obj/${raw.oS}/${raw.l0}/${raw.l1}/${raw.l2}`;\r\n\t}\r\n\tasync load() {\r\n\t\tif (SSAnim) {\r\n\t\t\tconst raw = this._raw;\r\n\t\t\tlet ssanim;\r\n\t\t\t\r\n\t\t\tssanim = new SSAnim();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tawait ssanim.load(this._folder);\r\n\t\t\t\tssanim.update(0);//init pos data\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (raw.spineRandomStart) {\r\n\t\t\t\tlet t = ssanim.anim_length * Math.random();\r\n\t\t\t\tssanim.setAnimTime(t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst r = Math.round(Math.sqrt(ssanim.width ** 2 + ssanim.height ** 2));\r\n\t\t\tconst hr = Math.round(r * 0.5);\r\n\t\t\tthis.aabb = new Rectangle(this.x - hr, this.y - hr, r, r);\r\n\t\t\t\r\n\t\t\tthis.ssanim = ssanim;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tunload() {\r\n\t\tif (this.ssanim) {\r\n\t\t\tthis.ssanim.unload();\r\n\t\t\tthis.ssanim = null;\r\n\t\t}\r\n\t}\r\n\tupdate(stamp) {\r\n\t\tthis.delta += stamp;\r\n\t\t\r\n\t\tif (this.ssanim && window.enable_skeletal_anim) {\r\n\t\t\tthis.ssanim.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect - ?? no use\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif ($gv.m_display_skeletal_anim) {\r\n\t\t\tconst x = Math.trunc((-$gv.m_viewRect.x + 0.5) + this.x);\r\n\t\t\tconst y = Math.trunc((-$gv.m_viewRect.y + 0.5) + this.y);\r\n\r\n\t\t\trenderer.ctx.setTransform(1, 0, 0, -1, x, y);\r\n\r\n\t\t\tif (this.ssanim) {\r\n\t\t\t\tthis.ssanim.render();\r\n\t\t\t}\r\n\t\t\tif (this.display_aabb) {\r\n\t\t\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x + 0.5), Math.trunc(-$gv.m_viewRect.y + 0.5));\r\n\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(this.x - this.ssanim.width * 0.5, this.y - this.ssanim.height, this.ssanim.width, this.ssanim.height);\r\n\t\t\t\tctx.fillStyle = \"rgba(20,255,20,0.5)\";\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass MapTile extends MapObject {\r\n\tconstructor(_raw, info) {\r\n\t\tsuper(_raw);\r\n\t\tthis._info = info;\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\tload() {\r\n\t\tlet texture = new MapTexture(this._texture_raw);\r\n\r\n\t\tthis.textures[0] = texture;\r\n\t\tthis.textures[0]._url = [\"/Map\", \"Tile\", this._info.tS, this._raw.u, this._raw.no].join(\"/\");\r\n\r\n\t\tthis.__calc_aabb();\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * textures; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry{\r\n\t\t\treturn map_sprite.Tile[this._info.tS][this._raw.u][this._raw.no];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._info.tS, this._raw.u, this._raw.no].join(\"/\");\r\n\t}\r\n}\r\n\r\n/**\r\n * MapEditor: Map Portal\r\n * Map graph (struct): \"Map/Map/Graph/\"\r\n */\r\nclass MapPortal extends MapObject {\r\n\tconstructor(_raw, mapRenderer) {\r\n\t\tsuper(_raw);//load x, y\r\n\t\t\r\n\t\tthis.mapRenderer = mapRenderer;\r\n\t\t\r\n\t\t/** @type {number} - to mapId */\r\n\t\tthis.tm = null;\r\n\t\t\r\n\t\t/** @type {string} - tn to pn */\r\n\t\tthis.tn = null;\r\n\r\n\t\t/** @type {string} - pn to tn */\r\n\t\tthis.pn = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.script = null;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.enable = null;\r\n\t\t\r\n\t\t/** @type {\"portalStart\"|\"portalContinue\"|\"portalExit\"} */\r\n\t\tthis.state = null;\r\n\r\n\t\t/** @type {[\"portalStart\",\"portalContinue\",\"portalExit\"]} */\r\n\t\tthis.states = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.skin = null;\r\n\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\t\r\n\t//sync\r\n\tload() {\r\n\t\tthis.tm = this._get(\"\", \"tm\", String).padStart(9, \"0\");//??\r\n\t\tthis.tn = this._get(\"\", \"tn\", String);//??\r\n\t\tthis.pn = this._get(\"\", \"pn\", String);//pt_go01 => goto portal_01\r\n\t\tthis.script = this._get(null, \"script\", String);\r\n\t\t\r\n\t\tthis.enable = this.tm != \"\" && this.tm != \"999999999\";\r\n\r\n\t\tthis._loadTexture();\r\n\t}\r\n\tunload() {\r\n\t\tif (this.body) {\r\n\t\t\tthis.body.GetWorld().DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetMap() {\r\n\t\tif (this.enable) {\r\n\t\t\treturn this.tm;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif (this.enable) {\r\n\t\t\tsuper.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t\telse if (this.__display_mode) {\r\n\t\t\tsuper.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t}\r\n\r\n\t_loadTexture() {\r\n\t\t///** @type {number} */\r\n\t\t//let type = this._raw.pt;\r\n\t\t//\r\n\t\t//let skins = this._loaded_portals[this.__display_mode][type];\r\n\t\t//\r\n\t\t//this.textures = skins.default || skins[0];\r\n\r\n\t\t//MapObject::type\r\n\t\tif (this.__display_mode == \"game\") {\r\n\t\t\tthis.type = \"p\";//??\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.type = \"q\";//??\r\n\t\t}\r\n\r\n\t\tconst _raw = MapPortal._portals_raw;\r\n\r\n\t\tthis.textures.length = 0;//clear\r\n\r\n\t\tconst type = MapPortal._type_map[this._raw.pt];\r\n\t\t\r\n\t\tif (this.__display_mode == \"editor\") {\r\n\t\t\tlet texture = new MapTexture(_raw.editor[type]);\r\n\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type].join(\"/\");\r\n\t\t\tthis.textures[0] = texture;\r\n\t\t}\r\n\t\telse if (_raw.game[type]) {\r\n\t\t\tlet skin = this.skin != null ? this.skin : \"default\";\r\n\t\t\tif (\"0\" in _raw.game[type][skin]) {//is animation frames\r\n\t\t\t\tlet textures = _raw.game[type][skin];\r\n\t\t\t\tfor (let i in textures) {\r\n\t\t\t\t\tlet texture = new MapTexture(textures[i]);\r\n\t\t\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type, skin, i].join(\"/\");\r\n\t\t\t\t\tthis.textures.push(texture);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: need default state\r\n\t\t\t\tthis.states = Object.keys(_raw.game[type][skin]);\r\n\t\t\t\tthis.state = this.states[1 % this.states.length];\r\n\r\n\t\t\t\tlet textures = _raw.game[type][skin][this.state];\r\n\t\t\t\tfor (let i in textures) {\r\n\t\t\t\t\tlet texture = new MapTexture(textures[i]);\r\n\t\t\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type, skin, this.state, i].join(\"/\");\r\n\t\t\t\t\tthis.textures.push(texture);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//reset\r\n\t\tthis.delta = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\t}\r\n\r\n\tget _texture_base_path() {\r\n\t\treturn \"/Map/MapHelper/portal\";\r\n\t}\r\n\tget _getTexturePath() {\r\n\t\tif (this.__display_mode == \"editor\") {\r\n\t\t\treturn [\"/Map/MapHelper/portal\", this.__display_mode].join(\"/\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn [\"/Map/MapHelper/portal\", this.__display_mode].join(\"/\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {\"editor\"|\"game\"}\r\n\t */\r\n\tget __display_mode() {\r\n\t\treturn $gv.m_editor_mode ? \"editor\" : \"game\";\r\n\t}\r\n\r\n\t///**\r\n\t// * @type {{editor:{[pt:number]:{[skin:number]:MapTexture}},game:{[pt:number]:{[skin:number]:MapTexture[],default:MapTexture[]}}}}\r\n\t// */\r\n\t//get _loaded_portals() {\r\n\t//\treturn MapPortal._portals;\r\n\t//}\r\n\t\r\n\tstatic async Init() {\r\n\t\tMapPortal._portals_raw = await $get.data(\"/Map/MapHelper/portal\");\r\n\r\n\t\tMapPortal._type_map = Object.keys(MapPortal._portals_raw.editor);\r\n\t}\r\n}\r\nMapPortal._portals_raw = {};\r\nMapPortal._type_map = {};\r\n//MapPortal._portals = {};\r\nMapPortal._script = {};\r\n\r\nclass MapPortalManager {\r\n\tconstructor() {\r\n\t\t/** @type {MapPortal[]} */\r\n\t\tthis.portals = null;\r\n\r\n\t\tthis.__display_mode = this.__display_mode;\r\n\t}\r\n\t\r\n\tasync load(map_raw_data, mapRenderer) {\r\n\t\tlet portals = [];\r\n\t\tfor (let i = 0; i in map_raw_data.portal; ++i) {\r\n\t\t\tlet raw = map_raw_data.portal[i];\r\n\t\t\tlet pt = new MapPortal(raw, mapRenderer);\r\n\t\t\t\r\n\t\t\tpt.load();//sync\r\n\t\t\t\r\n\t\t\t//if (pt.enable) {\r\n\t\t\t\tmapRenderer.controller.createPortal(pt);//inject body\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tportals.push(pt);\r\n\t\t}\r\n\t\tthis.portals = portals;\r\n\t}\r\n\tunload() {\r\n\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\tlet ptl = this.portals[i];\r\n\t\t\tptl.unload();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.__display_mode != $gv.m_editor_mode) {\r\n\t\t\tthis.__display_mode = $gv.m_editor_mode;\r\n\r\n\t\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\t\tlet portal = this.portals[i];\r\n\t\t\t\tportal._loadTexture();\r\n\t\t\t\tportal.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\t\tlet portal = this.portals[i];\r\n\t\t\t\tportal.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\tlet portal = this.portals[i];\r\n\t\t\tportal.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//          [category][source]\r\n//\r\n//static back\r\n//imgBack = [category][source][class ][number][\"\"]\r\n//imgBack = [\"Back\"  ][obj.bS][\"bacK\"][obj.no][\"\"]\r\n//\r\n//animation back\r\n//imgBack = [category][source][class ][number][frame][\"\"]\r\n//imgBack = [\"Back\"  ][obj.bS][\"ani\" ][obj.no][0    ][\"\"]\r\n//\r\n//object\r\n//imgObj  = [category][source][path_0][path_1][path_2][frame][\"\"]\r\n//imgObj  = [\"Obj\"\t ][obj.oS][obj.l0][obj.l1][obj.l2][0    ][\"\"]\r\n\r\nclass MapBackBase extends MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IAsyncLoading}\r\n */\r\nclass MapBack extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\tload() {\r\n\t\tlet path = [\"/Map\", \"Back\", this._texture_base_path].join(\"/\");\r\n\r\n\t\tif (this._raw.bS) {\r\n\t\t\tconst raw = this._texture_raw;\r\n\t\t\tif (raw) {\r\n\t\t\t\tthis.textures[0] = new MapTexture(this._texture_raw);\r\n\t\t\t\tthis.textures[0]._url = path;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn(\"MapBack path ?: \" + path);\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.bS, \"back\", this._raw.no].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * texture; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\tif (this._raw.bS && this._raw.no) {\r\n\t\t\treturn map_sprite.Back[this._raw.bS][\"back\"][this._raw.no];\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IAsyncLoading}\r\n */\r\nclass MapBackAnimation extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t * @returns {MapTexture}\r\n\t */\r\n\t_load_texture(i, texture0) {\r\n\t\tlet path = [\"/Map\", \"Back\", this._texture_base_path, i].join(\"/\");\r\n\r\n\t\tlet texture = new MapTexture(this._texture_raw[i]);\r\n\t\ttexture._url = path;\r\n\r\n\t\treturn texture;\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.bS, \"ani\", this._raw.no].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * texture set; info & data\r\n\t * not array\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry {\r\n\t\t\treturn map_sprite.Back[this._raw.bS][\"ani\"][this._raw.no];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass MapBackSkeletalAnim extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {SSAnim} */\r\n\t\tthis.ssanim = null;\r\n\t}\r\n\t/** @type {string} */\r\n\tget _folder() {\r\n\t\tconst ob = this._raw;\r\n\t\t//[\"Back\"  ][obj.bS][\"ani\" ][obj.no][0    ][\"\"]\r\n\t\treturn `/Map/Back/${ob.bS}/spine/${ob.no}`;\r\n\t}\r\n\tasync load() {\r\n\t\tif (SSAnim) {\r\n\t\t\tlet ssanim = new SSAnim();\r\n\t\t\ttry {\r\n\t\t\t\tawait ssanim.load(this._folder);\r\n\t\t\t\tssanim.update(0);//init pos data\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.ssanim = ssanim;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tunload() {\r\n\t\tif (this.ssanim) {\r\n\t\t\tthis.ssanim.unload();\r\n\t\t\tthis.ssanim = null;\r\n\t\t}\r\n\t}\r\n\tupdate(stamp) {\r\n\t\tif (this.ssanim && window.enable_skeletal_anim) {\r\n\t\t\tthis.ssanim.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect - ?? no use\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif ($gv.m_display_skeletal_anim) {\r\n\t\t\tif (this.ssanim) {\r\n\t\t\t\tconst x = Math.trunc((-$gv.m_viewRect.x + 0.5) + this.x);\r\n\t\t\t\tconst y = Math.trunc((-$gv.m_viewRect.y + 0.5) + this.y);\r\n\r\n\t\t\t\trenderer.ctx.setTransform(1, 0, 0, -1, x, y);\r\n\r\n\t\t\t\tthis.ssanim.render();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class LifeSpawnPoint {\r\n\t/**\r\n\t * @param {object} raw\r\n\t * @param {string} spawnId - spawn index\r\n\t */\r\n\tconstructor(raw, spawnId) {\r\n\t\tObject.assign(this, raw);\r\n\t\t\r\n\t\tthis.spawnId = spawnId;\r\n\t\t\r\n\t\t/**\r\n\t\t * millisecond elapsed after life spawn\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/**\r\n\t\t * now count of life was spawn\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.count = 0;\r\n\r\n\t\tif (!(raw instanceof LifeSpawnPoint)) {\r\n\t\t\tthis.fh = raw.fh - 1;\r\n\t\t}\r\n\t}\r\n\tincreaseLife() {\r\n\t\t++this.count;\r\n\t\tthis.time = 0;\r\n\t}\r\n\tdecreaseLife() {\r\n\t\t--this.count;\r\n\t\tthis.time = 0;\r\n\t}\r\n\tgetTimeElapsedAfterLifeSpawn() {\r\n\t\treturn this.time;\r\n\t}\r\n\tgetNowCountOfLifeWasSpawn() {\r\n\t\treturn this.count;\r\n\t}\r\n\t/**\r\n\t * @returns {LifeSpawnPoint}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor(this);\r\n\t}\r\n}\r\n\r\n/**\r\n * Mob / NPC controller\r\n */\r\nexport class MapLifeEntity extends SceneObject {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper();\r\n\t\tlet a = {\r\n\t\t\ttype: \"m\",\r\n\t\t\tid: 8643000,\r\n\t\t\tx: 720,\r\n\t\t\ty: -771,\r\n\t\t\tmobTime: 0,\r\n\t\t\tf: 0,\r\n\t\t\thide: 0,\r\n\t\t\tfh: 41 - 1,\r\n\t\t\tcy: -761,\r\n\t\t\trx0: 647,\r\n\t\t\trx1: 720,\r\n\t\t};\r\n\r\n\t\t/** @type {LifeRenderer} LifeRenderer|MobRenderer|NpcRenderer */\r\n\t\tthis.renderer = null;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_dead = false;\r\n\r\n\t\t/** @type {LifeSpawnPoint} */\r\n\t\tthis.spawn = lifeSpawnPoint;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.x = lifeSpawnPoint.x;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y = lifeSpawnPoint.cy;//lifeSpawnPoint.y\r\n\t\t\r\n\t\tthis.z = 5;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.angle = 0;\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.front = Number(lifeSpawnPoint.f) ? 1 : -1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.opacity = Number(lifeSpawnPoint.hide) ? 0.5 : 1;\r\n\t\t\r\n\t\tthis.lifeId = lifeId;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.type = lifeSpawnPoint.type;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.id = lifeSpawnPoint.id;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.mobTime = lifeSpawnPoint.mobTime;\r\n\r\n\t\t/////** @type {number} */\r\n\t\t////this.cy = lifeSpawnPoint.cy;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.rx0 = lifeSpawnPoint.rx0;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.rx1 = lifeSpawnPoint.rx1;\r\n\t}\r\n\r\n\t//AfterStep\r\n\t//get x() {\r\n\t//\treturn this._x;\r\n\t//}\r\n\t//set x(x) {\r\n\t//\tthis._x = x;\r\n\t//}\r\n\t//get y() {\r\n\t//\treturn this._y;\r\n\t//}\r\n\t//set y(y) {\r\n\t//\tthis._y = y;\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {World} mapController\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tstatic Create(lifeSpawnPoint, mapController, lifeId) {\r\n\t\tlet life;\r\n\r\n\t\tif (lifeSpawnPoint.type == \"m\") {\r\n\t\t\tlife = new MapMob(lifeSpawnPoint, lifeId);\r\n\t\t}\r\n\t\telse if (lifeSpawnPoint.type == \"n\") {\r\n\t\t\tlife = new MapNpc(lifeSpawnPoint, lifeId);\r\n\t\t\t//return;\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert(\"map life type: \" + lifeSpawnPoint.type);\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (life) {\r\n\t\t\tlife.load(lifeSpawnPoint.id, mapController);\r\n\t\t}\r\n\r\n\t\treturn life;\r\n\t}\r\n\t\r\n\t/**\r\n\t * load life description\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint - {id: string, type:\"m\"||\"n\"}\r\n\t */\r\n\tstatic async loadLifeDesc(lifeSpawnPoint) {\r\n\t\tlet desc, id = lifeSpawnPoint.id;\r\n\t\t\r\n\t\tswitch (lifeSpawnPoint.type) {\r\n\t\t\tcase \"m\":\r\n\t\t\t\tdesc = MobRenderer.loadDescription(id);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"n\":\r\n\t\t\t\tdesc = NpcRenderer.loadDescription(id);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\talert(\"map life type: \" + lifeSpawnPoint.type);\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\treturn desc;\r\n\t}\r\n\r\n\t/**\r\n\t * create entity, load data\r\n\t * @param {string} id -  npc or mob id\r\n\t * @param {World} mapController - no use\r\n\t */\r\n\tasync load(id, mapController) {//??: rename to create\r\n\t\tif (this.renderer) {\r\n\t\t\tawait this.renderer.load(id);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"Unknow type of life in map\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t_destroy(mapController) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number} type\r\n\t */\r\n\tdie(type) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\tthis.is_dead = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\trenderer.globalAlpha = Math.max(0, Math.min(this.opacity, 1));\r\n\t\tthis.renderer.draw(renderer, this.x, this.y, this.angle, this.front < 0);\r\n\t}\r\n}\r\nclass MapMob extends MapLifeEntity {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper(lifeSpawnPoint, lifeId);\r\n\t\tthis.renderer = new MobRenderer();\r\n\r\n\t\t/** @type {PMob} */\r\n\t\tthis.$physics = null;\r\n\t\t\r\n\t\t/** @type {{[x:string]: object}} - {[level]: skill} */\r\n\t\tthis.skills = {};\r\n\r\n\t\t//TODO: load mob info\r\n\t\tthis.hp = 100000;\r\n\t}\r\n\t/**\r\n\t * @param {string} id mobId\r\n\t * @param {World} mapController\r\n\t */\r\n\tasync load(id, mapController) {//??: rename to create\r\n\t\tawait super.load(id);\r\n\r\n\t\tthis.$physics = mapController.createMob(this);\r\n\t\tthis.$physics._loadAction(this.renderer.actions);\r\n\t\t\r\n\t\tawait this._load_skill_by_mob_id(id);\r\n\r\n\t\t// experiment\r\n\t\ttry {\r\n\t\t\tthis._load_skill_info();\r\n\r\n\t\t\tconst firstAttack = this.renderer._raw.info.attack[this.renderer._raw.info.firstAttack].info;\r\n\t\t\tif (this.skill_map[firstAttack]) {\r\n\t\t\t\tconst firstSkillInfo = this.skill_map[firstAttack].skill_list[0];\r\n\r\n\t\t\t\tthis.invokeSkill(firstSkillInfo.skill, firstSkillInfo.level);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\t//not thing\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {SceneObject} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tif (!this.is_dead) {\r\n\t\t\tthis.hp -= damage;\r\n\r\n\t\t\tconsole.log(`Mob(${this.$objectid}) 被 ${chara.$objectid} 攻擊，減少 ${damage} HP，剩下 ${this.hp}`);\r\n\t\t\t\r\n\t\t\tif (this.hp <= 0) {\r\n\t\t\t\tthis.die();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * if (chara == null) ??\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PPlayerState} pState\r\n\t */\r\n\t_applyState(pState) {\r\n\t\t//move stand jump hit1 die1\r\n\r\n\t\tif (pState.jump) {\r\n\t\t\tthis.renderer.action = \"jump\";\r\n\t\t}\r\n\t\telse if (pState.walk) {\r\n\t\t\tthis.renderer.action = \"move\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderer.action = \"stand\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$physics) {\r\n\t\t\tif (!this.is_dead) {\r\n\t\t\t\tthis._applyState(this.$physics.state);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.$physics.stop();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\tif ($gv.m_display_mob) {\r\n\t\t\tsuper.draw(renderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* skill need map to action */\r\n\t_load_skill_info() {\r\n\t\tconst _raw = this.renderer._raw;\r\n\t\tlet attack = _raw.info.attack;\r\n\t\tlet skill = _raw.info.skill;\r\n\t\t\r\n\t\tattack[1].info == _raw.info.skill[0].info\r\n\t\tattack[1].info == _raw.skill1.info\r\n\t\t\r\n\t\tvar skill_map = {};\r\n\t\tfor (let i = 1, sname; (sname = \"skill\" + i) in _raw; ++i) {\r\n\t\t\tlet s = _raw[sname];\r\n\t\t\tif (s.info) {\r\n\t\t\t\tskill_map[s.info] = {\r\n\t\t\t\t\tanim: sname,\r\n\t\t\t\t\tskill_list: [],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar skill_info = {};\r\n\t\tfor (let i in _raw.info.skill) {\r\n\t\t\tlet si = _raw.info.skill[i];\r\n\t\t\tskill_info[si.skill + \".\" + si.level] = si;\r\n\t\t\tif (skill_map[si.info]) {\r\n\t\t\t\tskill_info[si.skill + \".\" + si.level].$anim = skill_map[si.info].anim;\r\n\t\t\t\tskill_map[si.info].skill_list.push(si);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.skill_map = skill_map;\r\n\t\tthis.skill_info = skill_info;\r\n\t}\r\n\t\r\n\t_load_skill_by_mob_id(mob_id) {\r\n\t\tlet tasks = [];\r\n\t\tswitch(mob_id) {\r\n\t\t\tcase \"8880140\":\r\n\t\t\tcase \"8880141\": {\r\n\t\t\t\t\tconst FlowerTrap = require(\"./MobSkill/238.FlowerTrap.js\").FlowerTrap;\r\n\t\t\t\t\tconst FairyDust = require(\"./MobSkill/238.FairyDust.js\").FairyDust;\r\n\t\t\t\t\tthis.skills = {\r\n\t\t\t\t\t\t[1]: new FlowerTrap(),\r\n\t\t\t\t\t\t[2]: new FlowerTrap(),\r\n\t\t\t\t\t\t[3]: new FlowerTrap(),\r\n\t\t\t\t\t\t[4]: new FairyDust(null, null),\r\n\t\t\t\t\t\t[5]: { load() {}, invoke: function (level) { console.info(\"invoke LaserRain\"); } },\r\n\t\t\t\t\t\t[6]: { load() {}, invoke: function (level) { console.info(\"invoke ForcedTelepor\"); } },\r\n\t\t\t\t\t\t[7]: { load() {}, invoke: function (level) { console.info(\"invoke Dragon\"); } },\r\n\t\t\t\t\t\t[8]: { load() {}, invoke: function (level) { console.info(\"invoke Rush\"); } },\r\n\t\t\t\t\t\t[9]: { load() {}, invoke: function (level) { console.info(\"invoke WelcomeBarrage\"); } },\r\n\t\t\t\t\t\t[10]: new FairyDust(null, null),\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.skill_map_action = [];\r\n\t\t\t\t\tfor (let i = 1; i <= 10; ++i) {\r\n\t\t\t\t\t\tswitch (i) {\r\n\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\tcase 10:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill1\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill4\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill2\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 8:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 9:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor (let lev in this.skills) {\r\n\t\t\tconst skill = this.skills[lev];\r\n\t\t\ttasks.push(skill.load(lev));\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\t\r\n\tinvokeSkill(skill_id, level) {\r\n\t\tconst skill = this.skills[level];\r\n\t\tif (skill) {\r\n\t\t\tconst anim = this.skill_map_action[level];\r\n\t\t\tif (anim) {\r\n\t\t\t\tthis.renderer.action = anim;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tskill.invoke(level);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn({ \"unknow skill\": skill_id, \"level\": level });\r\n\t\t}\r\n\t}\r\n\t\r\n\t_destroy(mapController) {\r\n\t\tlet lifeSpawnPoint = this.spawn;\r\n\t\tif (lifeSpawnPoint instanceof LifeSpawnPoint) {\r\n\t\t\tlifeSpawnPoint.decreaseLife();\r\n\t\t}\r\n\t\tmapController.destroyMob(this);\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number=1} type\r\n\t */\r\n\tdie(type = 1) {\r\n\t\tthis.renderer.action = \"die\" + type;\r\n\t\tthis.is_dead = true;\r\n\t}\r\n}\r\n\r\nclass MapNpc extends MapLifeEntity {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper(lifeSpawnPoint, lifeId);\r\n\t\tthis.renderer = new NpcRenderer();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\tif ($gv.m_display_npc) {\r\n\t\t\tsuper.draw(renderer);\r\n\t\t}\r\n\t}\r\n\r\n\t_destroy(mapController) {\r\n\t\tlet lifeSpawnPoint = this.spawn;\r\n\t\tlifeSpawnPoint.decreaseLife();\r\n\t\tmapController.destroyNpc(this);\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number} type\r\n\t */\r\n\tdie(type) {\r\n\t\t//TODO: npc die ??\r\n\t\tthis.is_dead = true;\r\n\t}\r\n}\r\n\r\nlet MapLifeEntityCapacityRate = 1;\r\n\r\nclass MapLifeManager {\r\n\t/**\r\n\t * @param {World} mapController\r\n\t */\r\n\tconstructor(mapController) {\r\n\t\t/** @type {object} */\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {LifeSpawnPoint[]} */\r\n\t\tthis.spawnPoints = [];\r\n\r\n\t\t/** @type {MapMob[]} */\r\n\t\tthis.entities = [];\r\n\r\n\t\t/** @type {World} */\r\n\t\tthis.mapController = mapController;\r\n\t}\r\n\r\n\t/**\r\n\t * @async\r\n\t * @param {{life:{[spawnId:number]:{}}}} mapRawData\r\n\t * @returns {Promise<undefined[]>}\r\n\t */\r\n\tload(mapRawData) {\r\n\t\tlet tasks = [];\r\n\t\tthis._raw = mapRawData.life;\r\n\r\n\t\tlet keys = Object.keys(this._raw)\r\n\t\t\t.map(i => {\r\n\t\t\t\tlet n = parseInt(i, 10);\r\n\t\t\t\tif (Number.isSafeInteger(n)) {\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.warn(\"MapLife.spawnId: \" + i);\r\n\t\t\t\treturn null;\r\n\t\t\t})\r\n\t\t\t.filter(i => i != null);\r\n\r\n\t\tfor (let spawnId of keys) {\r\n\t\t\tlet d = new LifeSpawnPoint(this._raw[spawnId], spawnId);\r\n\t\t\ttasks.push(MapLifeEntity.loadLifeDesc(d));\r\n\t\t\tthis.spawnPoints.push(d);\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\tunload() {\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tconst entity = this.entities[i];\r\n\t\t\tif (entity.spawn.type == \"m\") {\r\n\t\t\t\tentity.$physics._destroy(this.mapController);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.spawnPoints = [];\r\n\t\tthis.entities = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tfor (let i = 0; i < this.spawnPoints.length; ++i) {\r\n\t\t\tlet lifeSpawnPoint = this.spawnPoints[i];\r\n\r\n\t\t\tlifeSpawnPoint.time += stamp;\r\n\r\n\t\t\tif (lifeSpawnPoint.time >= 1000 && lifeSpawnPoint.count < MapLifeEntityCapacityRate) {\r\n\t\t\t\tlifeSpawnPoint.increaseLife();\r\n\t\t\t\tthis.spawn(lifeSpawnPoint);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tlet entity = this.entities[i];\r\n\t\t\tif (entity) {\r\n\t\t\t\tif (entity.renderer.action && entity.renderer.action.startsWith(\"die\")) {\r\n\t\t\t\t\tconst act = entity.renderer.actions[entity.renderer.action];\r\n\t\t\t\t\tif (act && act.isEnd()) {\r\n\t\t\t\t\t\tthis.destroyLife(entity);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tentity.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * spawn life(npc / mob) by spawner\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t */\r\n\tspawn(lifeSpawnPoint) {\r\n\t\tlet lifeId = 0;\r\n\r\n\t\tfor (; lifeId < this.entities.length; ++lifeId) {\r\n\t\t\tif (!this.entities[lifeId]) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet entity = MapLifeEntity.Create(lifeSpawnPoint, this.mapController, lifeId);\r\n\t\t\r\n\t\tif (lifeId < this.entities.length) {\r\n\t\t\tthis.entities[lifeId] = entity;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.entities.push(entity);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * directly spawn npc\r\n\t * @param {string} npcID\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tspawnNpc(npcID, x, y, flip=false, fh=0) {\r\n\t\tlet lifeSpawnPoint = new LifeSpawnPoint({\r\n\t\t\ttype: \"n\",\r\n\t\t\tx: x | 0, y: y | 0, cy: y | 0,\r\n\t\t\tid: npcID,\r\n\t\t\tfh: fh,\r\n\t\t\tis_dummy: true,\r\n\t\t});\r\n\t\tthis.spawn(lifeSpawnPoint);\r\n\t}\r\n\t/**\r\n\t * directly spawn mob\r\n\t * @param {string} mobID\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tspawnMob(mobID, x, y, flip=false, fh=0) {\r\n\t\tlet lifeSpawnPoint = new LifeSpawnPoint({\r\n\t\t\ttype: \"m\",\r\n\t\t\tx: x | 0, y: y | 0, cy: y | 0,\r\n\t\t\tid: mobID,\r\n\t\t\tfh: fh,\r\n\t\t\tis_dummy: true,\r\n\t\t});\r\n\t\tthis.spawn(lifeSpawnPoint);\r\n\t}\r\n\t\r\n\tdestroyLife(entity) {\r\n\t\tif (!(entity instanceof MapLifeEntity)) {\r\n\t\t\talert(\"MapLifeManager.killLife: can't kill non life\");\r\n\t\t\tconsole.error(\"MapLifeManager.killLife: can't kill non life\");\r\n\t\t}\r\n\t\tentity._destroy(this.mapController);\r\n\t\tdelete this.entities[entity.lifeId];\r\n\t}\r\n\tdestroyAll() {\r\n\t\tthis.entities.forEach(a => this.destroyLife(a))\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t * @param {number} whereLayer - where layer index\r\n\t */\r\n\tdraw(renderer, center, viewRect, whereLayer) {\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tlet entity = this.entities[i];\r\n\t\t\tif (entity && ((entity.z != null && entity.z == whereLayer) || whereLayer == null)) {\r\n\t\t\t\tentity.draw(renderer);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * require Renderer\r\n * @implements {IAsyncLoading}\r\n */\r\nexport class SceneMap {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.stamp = 0;\r\n\r\n\t\t/** @type {MapBack[]} */\r\n\t\tthis.background = [];\r\n\r\n\t\t/** @type {MapBack[]} */\r\n\t\tthis.frontground = [];\r\n\r\n\t\t/** @type {MapObject[]} */\r\n\t\tthis.layeredObject = [];\r\n\r\n\t\t/** @type {MapTile[]} */\r\n\t\tthis.layeredTile = [];\r\n\t\t\r\n\t\t/** @type {{[tag:string]:MapBackBase}} */\r\n\t\tthis.backTags = {};\r\n\t\t\r\n\t\t/** @type {{[name:string]:MapObject}} */\r\n\t\tthis.namedObject = {};\r\n\r\n\t\t/** @type {World} */\r\n\t\tthis.controller = new World();\r\n\r\n\t\t/** @type {MapLifeManager} */\r\n\t\tthis.lifeMgr = new MapLifeManager(this.controller);\r\n\t\t\r\n\t\t/** @type {MapPortalManager} */\r\n\t\tthis.portalMgr = new MapPortalManager();\r\n\t\t\r\n\t\t/** @type {MapParticle[]} */\r\n\t\tthis.particleList = null;\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.mapBound = null;\r\n\r\n\t\t/** @type {{[questId:string]: number}} */\r\n\t\tthis.quest = {};\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;//data url //debug\r\n\r\n\t\t/** @type {Promise<any>[]} */\r\n\t\tthis.$load_tasks = [];\r\n\r\n\t\t/** @type {Promise<any>} */\r\n\t\tthis.$promise = null;\r\n\r\n\t\tthis.$loading_status = \"unload\";\r\n\t\t\r\n\t\t/** @type {function():void} */\r\n\t\tthis.onload = null;\r\n\t\t\r\n\t\t/** @type {(function():void)[]} */\r\n\t\tthis._onload = [];\r\n\t}\r\n\r\n\tstatic async _Init() {\r\n\t\tlet $_mapString = null;\r\n\t\tlet $mapString = {};\r\n\r\n\t\t$_mapString = await $get.data(\"/String/Map\");\r\n\r\n\t\tfor (let i in $_mapString) {\r\n\t\t\tfor (let j in $_mapString[i]) {\r\n\t\t\t\t$mapString[j] = $_mapString[i][j];\r\n\t\t\t\t$mapString[j].$region = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tSceneMap._map_names = $mapString;\r\n\r\n\t\twindow.$MapNames = SceneMap._map_names;\r\n\t}\r\n\tstatic Init() {\r\n\t\treturn Promise.all([\r\n\t\t\tSceneMap._Init(),\r\n\t\t\tMapPortal.Init(),\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{[questId:string]: number}} quest\r\n\t */\r\n\tisActivated(quest) {\r\n\t\tif (quest) {\r\n\t\t\tfor (let id in quest) {\r\n\t\t\t\tif (this.quest[id] != quest[id]) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tget $map_sprite() {\r\n\t\treturn window.$map_sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{back:{[backId:string]:any}}} raw\r\n\t */\r\n\tasync _constructBack(raw) {\r\n\t\tif (!(\"back\" in raw)) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet loading_task_map = new Map();\r\n\t\tfor (let i = 0; i in raw.back; ++i) {\r\n\t\t\tlet ob = raw.back[i];\r\n\t\t\tconst url = this._url + `back/${i}`;\r\n\r\n\t\t\t/** @type {MapBack|MapBackAnimation} */\r\n\t\t\tlet back;\r\n\r\n\t\t\tif (ob.ani == 0) {\r\n\t\t\t\tback = new MapBack(ob);\r\n\t\t\t}\r\n\t\t\telse if (ob.ani == 1) {\r\n\t\t\t\tback = new MapBackAnimation(ob);\r\n\t\t\t}\r\n\t\t\telse if (ob.ani == 2) {//Spine skeletal animation\r\n\t\t\t\tback = new MapBackSkeletalAnim(ob);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"ob.ani: \" + ob.ani);\r\n\t\t\t}\r\n\t\t\tback._url = url;\r\n\t\t\tif (back.backTags != null) {\r\n\t\t\t\tthis.backTags[back.backTags] = back;\r\n\t\t\t}\r\n\r\n\t\t\tif (ob.ani != 2) {\r\n\t\t\t\t// add loading task\r\n\t\t\t\tif (back._raw.bS) {\r\n\t\t\t\t\tlet ps = \"Back/\" + back._raw.bS;\r\n\t\t\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\t\t\tloading_task_map.set(ps, map_load_package(\"Back\", back._raw.bS));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.warn(\"MapBack: map.back[\" + i + \"].bS = \" + back._raw.bS);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (ob.front != 0) {\r\n\t\t\t\tthis.frontground.push(back);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.background.push(back);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait Promise.all([...loading_task_map.values()]);\r\n\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tlet back = this.frontground[i];\r\n\t\t\tback.load();\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tlet back = this.background[i];\r\n\t\t\tback.load();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{[layer:number]:{objs:{},tiles:{},info:{}}}} mapRawData\r\n\t */\r\n\tasync _constructLayeredObject(mapRawData) {\r\n\t\tlet loading_task_map = new Map();\r\n\r\n\t\tfor (let i = 0, layer = mapRawData[i]; !objIsEmpty(layer); i++ , layer = mapRawData[i]) {//layer[1...8]\r\n\t\t\tlet objs = this.__constructLayeredObject_obj(i, layer, loading_task_map);\r\n\t\t\tlet tiles = this.__constructLayeredObject_tile(i, layer, loading_task_map);\r\n\r\n\t\t\t// ?? map:867116550 雷射在 tiles 前面\r\n\t\t\ttiles.sort((a, b) => { return a.z - b.z; });\r\n\t\t\tobjs.sort((a, b) => { return a.z - b.z; });\r\n\r\n\t\t\t//this.layeredObject[i] = objs.concat(tiles);//(objs.concat(tiles)).sort(function (a, b) { return a.z - b.z; });\r\n\t\t\t\r\n\t\t\tthis.layeredObject[i] = objs;\r\n\t\t\tthis.layeredTile[i] = tiles;\r\n\t\t}\r\n\r\n\t\t//wait all texture package loaded\r\n\t\tawait Promise.all([...loading_task_map.values()]);\r\n\r\n\t\tfor (let i = 0; i < this.layeredObject.length; ++i) {\r\n\t\t\tconst objs = this.layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {MapObject}\r\n\t\t\t\t */\r\n\t\t\t\tlet obj = objs[j];\r\n\t\t\t\tif (process.env.NODE_ENV !== 'production') {//is debug\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tobj.load();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\tconsole.error(\"load textures failed: \" + new URL(\"xml2\" + obj._url, window.location).href);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tobj.load();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.layeredTile.length; ++i) {\r\n\t\t\tconst tiles = this.layeredTile[i];\r\n\t\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\t\tlet tile = tiles[j];\r\n\t\t\t\ttile.load();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__constructLayeredObject_tile(i, layer, loading_task_map) {\r\n\t\tconst info = layer.info;\r\n\t\tlet tiles = [];\r\n\r\n\t\tif (info.tS) {\r\n\t\t\tlet ps = \"Tile/\" + info.tS;\r\n\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\tloading_task_map.set(ps, map_load_package(\"Tile\", info.tS));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (Object.keys(layer.tile).length) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.warn(\"[\" + i + \"].tile = \" + JSON.stringify(layer.tile));\r\n\t\t}\r\n\t\tfor (let j = 0, ti = layer.tile[j]; !objIsEmpty(ti); j++ , ti = layer.tile[j]) {\r\n\t\t\tlet tile = new MapTile(ti, info);\r\n\r\n\t\t\ttile._url = this._url + `${i}/tile/${j}`;\r\n\r\n\t\t\ttiles.push(tile);\r\n\t\t}\r\n\r\n\t\treturn tiles;\r\n\t}\r\n\t__constructLayeredObject_obj(i, layer, loading_task_map) {\r\n\t\tlet objs = [];\r\n\r\n\t\tfor (let j = 0, raw = layer.obj[j]; !objIsEmpty(raw); j++ , raw = layer.obj[j]) {\r\n\t\t\tlet obj;\r\n\r\n\t\t\tif (raw.spineAni) {\r\n\t\t\t\tswitch (raw.spineAni) {\r\n\t\t\t\t\tcase \"animation\":\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"idle\":\r\n\t\t\t\t\t\tconsole.warn(\"spine animation: idle ??\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.groupCollapsed(\"unknow spine:\" + raw.spineAni);\r\n\t\t\t\t\t\tconsole.warn(`LayeredObject[${i}][${j}]`);\r\n\t\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tobj = new MapObjectSkeletalAnim(raw);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tobj = new MapObject(raw);\r\n\r\n\t\t\t\tlet ps = \"Obj/\" + obj._raw.oS;\r\n\t\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\t\tloading_task_map.set(ps, map_load_package(\"Obj\", obj._raw.oS));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tobj._url = this._url + `${i}/obj/${j}`;\r\n\t\t\t\r\n\t\t\tif (obj.name != null) {\r\n\t\t\t\tthis.namedObject[obj.name] = obj;\r\n\t\t\t}\r\n\r\n\t\t\tobjs.push(obj);\r\n\t\t}\r\n\r\n\t\treturn objs;\r\n\t}\r\n\r\n\t/**\r\n\t * top-bottom-border compute by visible mapObject\r\n\t */\r\n\t__compute_top_bottom_border(layeredObject) {\r\n\t\tlet top = null, bottom = null;//left, right,\r\n\t\t//let i = 0;\r\n\t\t\r\n\t\tfor (let i = 0; i < layeredObject.length; ++i) {\r\n\t\t\tconst objs = layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\tconst obj = objs[j];\r\n\t\t\t\tlet rect = obj.compute_max_rectangle();\r\n\t\t\t\tif (rect && top != null && bottom != null) {\r\n\t\t\t\t\t//left = Math.min(left, rect.left);\r\n\t\t\t\t\ttop = Math.min(top, rect.top);\r\n\t\t\t\t\t//right = Math.max(right, rect.right);\r\n\t\t\t\t\tbottom = Math.max(bottom, rect.bottom);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//left = rect.left;\r\n\t\t\t\t\ttop = rect.top;\r\n\t\t\t\t\t//right = rect.right;\r\n\t\t\t\t\tbottom = rect.bottom;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn { top, bottom };\r\n\t}\r\n\t\r\n\t/**\r\n\t * top-bottom-border compute by visible mapObject\r\n\t */\r\n\t_compute_top_bottom_border() {\r\n\t\tlet objtb = this.__compute_top_bottom_border(this.layeredObject);\r\n\t\tlet tiletb = this.__compute_top_bottom_border(this.layeredTile);\r\n\t\tlet top = Math.min(objtb.top, tiletb.top);\r\n\t\tlet bottom = Math.max(objtb.bottom, tiletb.bottom);\r\n\t\treturn { top, bottom };\r\n\t}\r\n\r\n\t//_compute_view_rectangle\r\n\t\r\n\t_compute_map_bound(reCalc) {\r\n\t\tif (this.mapBound && !reCalc) {\r\n\t\t\treturn this.mapBound;\r\n\t\t}\r\n\r\n\t\tconst info = this._raw.info;\r\n\t\tlet top, bottom;\r\n\r\n\t\tif (info.VRLeft != null && info.VRTop != null && info.VRRight != null && info.VRBottom != null) {\r\n\t\t\ttop = info.VRTop;\r\n\t\t\tbottom = info.VRBottom;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tb = this._compute_top_bottom_border();\r\n\t\t\ttop = tb.top;\r\n\t\t\tbottom = tb.bottom;\r\n\t\t}\r\n\r\n\t\tconst lr = this.controller.ground._compute_left_right_border();\r\n\r\n\t\tlet rect = Rectangle.parse(lr.left, top, lr.right, bottom);\r\n\t\tthis.mapBound = rect;//store\r\n\r\n\t\treturn rect;\r\n\t}\r\n\t\r\n\tget _window_title() {\r\n\t\tif (this.mapName) {\r\n\t\t\treturn `${[this.mapName, this.streetName].join(\"·\")} (${this.map_id})`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `${this.map_id}`;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_get_map_data_url(map_id) {\r\n\t\treturn `/Map/Map/Map${map_id.slice(0, 1)}/${map_id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * loading: map data\r\n\t * @param {string} map_id\r\n\t * @param {boolean} reload - download\r\n\t */\r\n\tasync load(map_id, reload) {\r\n\t\tthis.$promise = await this._route_load(map_id, reload);\r\n\t\tdelete this.$promise;//loaded\r\n\t}\r\n\t/**\r\n\t * loading: map data\r\n\t * @param {string} map_id\r\n\t * @param {boolean} reload - download\r\n\t */\r\n\tasync _route_load(map_id, reload) {\r\n\t\tthis.$loading_status = \"loading\";\r\n\t\t\r\n\t\tif (!reload && map_id != null && this.map_id == map_id && this._raw != null) {\r\n\t\t\tif (this.isLoaded()) {\r\n\t\t\t\tthis.unload();\r\n\t\t\t}\r\n\t\t\tawait this._load(this._raw);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst url = this._get_map_data_url(map_id);\r\n\t\t\r\n\t\tlet raw;\r\n\t\ttry {\r\n\t\t\traw = await $get.data(url);\r\n\t\t\tif (!raw) {\r\n\t\t\t\talert(\"map not exit\");\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthrow new Error(\"map not exit\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthis.$loading_status = \"failed: load\";\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (raw.info && raw.info.link) {\r\n\t\t\t\tconst url2 = this._get_map_data_url(raw.info.link);\r\n\t\t\t\t\t\r\n\t\t\t\traw = await $get.data(url2);\r\n\t\t\t\tif (!raw) {\r\n\t\t\t\t\talert(\"map-link not exit\");\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthis.$loading_status = \"failed: link\";\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (this.isLoaded()) {\r\n\t\t\t\tthis.unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.warn(\"SceneMap#unload\");\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tthis._url = url;\r\n\t\t\tthis.map_id = map_id;\r\n\t\t\t\r\n\t\t\tawait this._load(raw);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthis.$loading_status = \"failed: constructor map\";\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\tdelete this.$loading_status;//loaded\r\n\t}\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{[prop:string]:{}}} raw\r\n\t */\r\n\tasync _load(raw) {\r\n\t\tconst map_id = this.map_id;\r\n\t\t\r\n\t\tthis._raw = raw;\r\n\r\n\t\t$gv.allQuest = {};\r\n\t\t\r\n\t\tthis.controller.stop = true;//begin load\r\n\t\t\r\n\t\tif (SceneMap._map_names[map_id]) {\r\n\t\t\tthis.mapName = SceneMap._map_names[map_id].mapName;\r\n\t\t\tthis.streetName = SceneMap._map_names[map_id].streetName;\r\n\t\t}\r\n\r\n\t\tthis.$load_tasks = [];\r\n\r\n\t\tthis._loadBgm(raw);\r\n\r\n\t\tthis.$load_tasks.push(this._constructBack(raw, this));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this._constructLayeredObject(raw, this).then((mapobj) => {\r\n\t\t\t//this.layeredObject\r\n\t\t\t//this.layeredTile\r\n\t\t}));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this.portalMgr.load(raw, this).then((portals) => {\r\n\t\t}));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this.__constructMiniMap(raw, this));\r\n\r\n\t\tthis.$load_tasks.push(this.controller.load(raw, this));//load foothold...\r\n\t\tthis.$load_tasks.push(this.lifeMgr.load(raw, this));\r\n\t\t\r\n\t\tthis.$load_tasks.push(MapParticle.construct(raw, this));\r\n\r\n\t\tlet load_results = await Promise.all(this.$load_tasks);\r\n\t\t\r\n\t\tconst viewRect = this._compute_map_bound();\r\n\t\tconst viewCenter = viewRect.center;\r\n\t\t\r\n\t\t$gv.m_viewRect.setCenter(viewCenter.x, viewCenter.y);\r\n\t\t\r\n\t\tthis.controller._createMapBound(viewRect);\r\n\t\t\r\n\t\tthis.controller.stop = false;//end load\r\n\t\t\r\n\t\tthis.$load_tasks = [];\r\n\t\tconsole.log(\"completed scene_map.waitLoaded: [...]\");\r\n\t\t\r\n\t\tthis._script();\r\n\t\t\r\n\t\tif (this.onload) {\r\n\t\t\tthis.onload.call(this);//history.pushState\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(\"End scene_map.load\");\r\n\t}\r\n\t_script() {\r\n\t\tswitch (this.map_id) {\r\n\t\t\tcase \"450004150\":\r\n\t\t\tcase \"450004450\":\r\n\t\t\tcase \"450004750\":\r\n\t\t\t\tthis.lifeMgr.spawnMob(\"8880166\", 1000, 47, false, 0);//from /Etc/BossLucid\r\n\t\t\t\tthis.lifeMgr.spawnMob(\"8880140\", 1000, 47, false, 0);//from /Etc/BossLucid\r\n\t\t\t\t//this.lifeMgr.spawnMob(\"8880176\", 1000, 47, false, 0);\r\n\t\t\t\t//this.lifeMgr.spawnMob(\"8880141\", 1000, 47, false, 0);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treload() {\r\n\t\tthis.unload();\r\n\t\tthis._load(this._raw);\r\n\t}\r\n\t\r\n\tunload() {\r\n\t\tthis.$loading_status = \"loading\";\r\n\t\t\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tthis.background[i].unload();\r\n\t\t}\r\n\t\tthis.background = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tthis.frontground[i].unload();\r\n\t\t}\r\n\t\tthis.frontground = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.layeredObject.length; ++i) {\r\n\t\t\tlet objs = this.layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\tobjs[j].unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.layeredObject = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.layeredTile.length; ++i) {\r\n\t\t\tlet tiles = this.layeredTile[i];\r\n\t\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\t\ttiles[j].unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.layeredTile = [];\r\n\t\t\r\n\t\tthis.backTags = {};\r\n\t\t\r\n\t\tthis.particleList = null;\r\n\t\t\r\n\t\tthis.controller.unload();\r\n\t\tthis.lifeMgr.unload();\r\n\t\tthis.portalMgr.unload();\r\n\t\t\r\n\t\tmap_sprite.Back = {};\r\n\t\tmap_sprite.Obj = {};\r\n\t\tmap_sprite.Tile = {};\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{info:{bgm:string}}} mapRawData\r\n\t */\r\n\t_getBgmPath(mapRawData) {\r\n\t\tlet bgmPath = mapRawData.info.bgm;\r\n\t\tlet i = bgmPath.indexOf(\"/\"), path = bgmPath.slice(0, i) + bgmPath.slice(i);\r\n\t\t//let m = bgmPath.match(/([^\\/]+)(\\/.*)/), path = [m[1], m[2]].join(\"/\");\r\n\t\treturn [\"\", \"Sound\", path].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{info:{bgm:string}}} mapRawData\r\n\t */\r\n\t_loadBgm(mapRawData) {\r\n\t\tconst elem_bgm = document.getElementById(\"bgm\");\r\n\t\tif (elem_bgm) {\r\n\t\t\tconst path = this._getBgmPath(mapRawData);\r\n\t\t\tthis._bgm_path = path;\r\n\r\n\t\t\tconst url = $get.soundMp3Url(path);\r\n\t\t\t\r\n\t\t\telem_bgm.innerHTML = `<source src=\"${url}\" type=\"audio/mpeg\">`;\r\n\t\t\t\r\n\t\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\t\telem_bgm.autoplay = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telem_bgm.autoplay = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new TypeError(\"#bgm\"));\r\n\t\t}\r\n\t}\r\n\r\n\tplayBgm() {\r\n\t\tdocument.getElementById(\"bgm\").play();\r\n\t}\r\n\r\n\tpauseBgm() {\r\n\t\tdocument.getElementById(\"bgm\").pause();\r\n\t}\r\n\t\r\n\t__constructMiniMap(raw) {\r\n\t\tif (raw.miniMap) {\r\n\t\t\t//const hw = raw.miniMap.width * 0.5;\r\n\t\t\t//const hh = raw.miniMap.height * 0.5;\r\n\t\t\t//const cx = raw.miniMap.centerX;\r\n\t\t\t//const cy = raw.miniMap.centerY;\r\n\t\t\tthis.width = raw.miniMap.width;\r\n\t\t\tthis.height = raw.miniMap.height;\r\n\t\t\tthis.centerX = raw.miniMap.centerX;\r\n\t\t\tthis.centerY = raw.miniMap.centerY;\r\n\t\t\t//this.boundRect = new Rectangle(cx - hw, cy - hh, raw.miniMap.width, raw.miniMap.height);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.width = 0;\r\n\t\t\tthis.height = 0;\r\n\t\t\tthis.centerX = 0;\r\n\t\t\tthis.centerY = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_miniMap_src() {\r\n\t\treturn this._url + \"miniMap/canvas\";\r\n\t\tconst a = {\r\n\t\t\t\"canvas\": {\r\n\t\t\t\t\"\": \"\"\r\n\t\t\t},\r\n\t\t\t\"width\": 4483,\r\n\t\t\t\"height\": 1244,\r\n\t\t\t\"centerX\": 1030,\r\n\t\t\t\"centerY\": 781,\r\n\t\t\t\"mag\": 4\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * wait all task: return true if nothing to loading else list of loaded object\r\n\t * loading: texture...\r\n\t * @returns {Promise<true>|Promise<any[]>}\r\n\t */\r\n\tasync waitLoaded() {\r\n\t\tawait this.$promise;\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn ((!this.$load_tasks || !this.$load_tasks.length) && this._raw && !this.$loading_status);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\twindow.m_hover_object = null;\r\n\t\tif ($gv.mouse_dm || $gv.mouse_dr) {\r\n\t\t\twindow.m_selected_object = null;\r\n\t\t}\r\n\t\t\r\n\t\tif (stamp != null) {\r\n\t\t\tthis.stamp = stamp;\r\n\r\n\t\t\tthis.lifeMgr.update(stamp);\r\n\r\n\t\t\tif (this.isLoaded()) {\r\n\t\t\t\tthis.controller.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t */\r\n\t_addChara(chara) {\r\n\t\ttry {\r\n\t\t\tlet player_spawns = this.portalMgr.portals.filter(a => a.pn == \"sp\");\r\n\t\t\tlet spawn = player_spawns[Math.trunc(Math.random() * 100) % player_spawns.length];\r\n\t\t\tconst $physics = chara.$physics;\r\n\t\t\tconst x = spawn.x / $gv.CANVAS_SCALE;\r\n\t\t\tconst y = spawn.y / $gv.CANVAS_SCALE;\r\n\t\t\t$physics.setPosition(x, y);\r\n\t\t\t$physics.body.SetAwake(true);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t */\r\n\taddChara(chara) {\r\n\t\tif (this.$promise) {\r\n\t\t\tthis.$promise.then(() => {\r\n\t\t\t\tthis._addChara(chara);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._addChara(chara);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tapplyCamera(renderer) {\r\n\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x), Math.trunc(-$gv.m_viewRect.y));\r\n\t}\r\n\r\n\t/**\r\n\t * pushGlobalAlpha\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tbeginRender(renderer) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tendRender(renderer) {\r\n\t\trenderer.popGlobalAlpha();\r\n\t\t//renderer.popMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} whereLayer - where layer index\r\n\t */\r\n\trenderLife(renderer, whereLayer) {\r\n\t\tif (!$gv.m_display_life) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tthis.lifeMgr.draw(renderer, center, viewRect, whereLayer);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderPortal(renderer) {\r\n\t\tif (!$gv.m_display_portal) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\r\n\t\tthis.portalMgr.update(this.stamp);\r\n\t\tthis.portalMgr.draw(renderer, center, viewRect);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderFrontground(renderer) {\r\n\t\tif (!$gv.m_display_front) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tlet back = this.frontground[i];\r\n\t\t\tif (this.isActivated(back.quest)) {\r\n\t\t\t\tback.update(this.stamp);\r\n\t\t\t\tback.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderLayeredObject(renderer, layerIndex) {\r\n\t\tif (!$gv.m_display_mapobj) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tconst objs = this.layeredObject[layerIndex];\r\n\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\tlet obj = objs[j];\r\n\t\t\tif (this.isActivated(obj.quest)) {\r\n\t\t\t\tobj.update(this.stamp);\r\n\t\t\t\tobj.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderLayeredTile(renderer, layerIndex) {\r\n\t\tif (!$gv.m_display_maptile) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tconst tiles = this.layeredTile[layerIndex];\r\n\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\tlet tile = tiles[j];\r\n\t\t\tif (this.isActivated(tile.quest)) {\r\n\t\t\t\ttile.update(this.stamp);\r\n\t\t\t\ttile.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderBackground(renderer) {\r\n\t\tif (!$gv.m_display_back) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tlet back = this.background[i];\r\n\t\t\tif (this.isActivated(back.quest)) {\r\n\t\t\t\tback.update(this.stamp);\r\n\t\t\t\tback.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderParticle(renderer) {\r\n\t\tif (!$gv.m_display_particle_system) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//const center = Vec2.empty;\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.particleList.length; ++i) {\r\n\t\t\tlet particle = this.particleList[i];\r\n\t\t\tif (this.isActivated(particle.quest)) {\r\n\t\t\t\tparticle.update(this.stamp);\r\n\t\t\t\tparticle.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nAddInitTask(SceneMap.Init);\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction objIsEmpty(x) {\r\n\tif (typeof x == 'object' && x == null)\r\n\t\tthrow new Error();\r\n\treturn typeof x == 'undefined' || x == null;\r\n}\r\n","﻿\r\nimport { KeySlotData } from \"./KeySlotData\";\r\nimport { ItemSlot } from \"../../game/Item\";\r\n\r\n\r\nexport class KeySlot {\r\n\t/**\r\n\t * @param {\"Command\"|\"Action\"|\"Item\"|\"Skill\"} type\r\n\t * @param {KeySlotData} data\r\n\t */\r\n\tconstructor(type, data) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((type + \"Slot\") != data.constructor.name) {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.type = type;\r\n\t\tthis.data = data;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * open/close ui, command...\r\n */\r\nexport class CommandSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} command\r\n\t */\r\n\tconstructor(command) {\r\n\t\tsuper();\r\n\t\tthis.command = command;\r\n\t}\r\n}\r\n\r\n/**\r\n * charaction action key\r\n */\r\nexport class ActionSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} action\r\n\t */\r\n\tconstructor(action) {\r\n\t\tsuper();\r\n\t\tthis.action = action;\r\n\t}\r\n}\r\n\r\n\r\n//TODO: SkillSlot.js 未完成\r\nexport class SkillSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} skill_id\r\n\t */\r\n\tconstructor(skill_id) {\r\n\t\tsuper();\r\n\t\tthis.skill_id = skill_id;\r\n\t}\r\n}\r\n\r\n\r\n\r\n","\r\n/*interface InputKeyMap {\r\n\t[keyName: string]: number;\r\n}*/\r\n\r\nexport class InputKey {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.time = 0;\r\n\t\t\r\n\t\t/** @type {string[][]} */\r\n\t\tthis.inputCommand = [];\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis._skip_prev = false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t * @param {InputKeyMap} keyDownMap\r\n\t */\r\n\tupdate(stamp, keyDownMap) {\r\n\t\tif ((stamp - this.time) > 333) {\r\n\t\t\tthis.inputCommand.length = 0;//clear\r\n\t\t}\r\n\t\t/** @type {string[]} */\r\n\t\tlet keys = [];\r\n\t\tfor (let keyName in keyDownMap) {\r\n\t\t\tif (keyDownMap[keyName]) {\r\n\t\t\t\tkeys.push(keyName);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.inputCommand.length || this._skip_prev) {\r\n\t\t\tthis._skip_prev = false;\r\n\t\t\tthis.inputCommand.push(keys);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (keys.length) {\r\n\t\t\t\tthis._skip_prev = false;\r\n\t\t\t\tif (!this._equals_input(this.inputCommand.length - 1, keys)) {\r\n\t\t\t\t\tthis.inputCommand.push(keys);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._skip_prev = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.time = stamp;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} index - this.inputCommand[index]\r\n\t * @param {string[]} keys\r\n\t */\r\n\t_equals_input(index, keys) {\r\n\t\tconst iCmd = this.inputCommand[index];\r\n\t\tif (!iCmd) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (let j = 0; j < keys.length; ++j) {\r\n\t\t\tconst keyName = keys[j];\r\n\t\t\t\r\n\t\t\tif (!(iCmd && iCmd.indexOf(keyName) >= 0 && iCmd.length == keys.length)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string[][]} command\r\n\t * @param {number} length - command length\r\n\t * @returns {boolean}\r\n\t *\r\n\t * length = length + command.length\r\n\t */\r\n\tmatch(command, length = command.length) {\r\n\t\tif (!this.inputCommand.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif (length < 0) {\r\n\t\t\tlength = length + command.length;\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\tlet r = this._equals_input(i, command[i]);\r\n\t\t\tif (!r) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nfunction unit_test () {\r\n\t(function () {\r\n\t\tlet ctrller = new InputKey();\r\n\r\n\t\tctrller.update(0, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\t\tctrller.update(222, {\r\n\t\t\t\"down\": 1,\r\n\t\t\t\"right\": 1,\r\n\t\t});\r\n\t\tctrller.update(444, {\r\n\t\t\t\"right\": 1,\r\n\t\t});\r\n\r\n\t\tlet r = ctrller.match([\r\n\t\t\t[\"down\"],\r\n\t\t\t[\"down\", \"right\"],\r\n\t\t\t[\"right\"],\r\n\t\t]);\r\n\r\n\t\tconsole.log(\"%o: %o\\n\\t%o\", \"全部正確\", r, ctrller);\r\n\t})();\r\n\r\n\t(function () {\r\n\t\tlet ctrller = new InputKey();\r\n\r\n\t\tctrller.update(0, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\t\tctrller.update(222, {\r\n\t\t\t\"down\": 1,\r\n\t\t\t\"right\": 1,\r\n\t\t});\r\n\t\tctrller.update(444, {\r\n\t\t\t\"down\": 1,\r\n\t\t\t\"right\": 1,\r\n\t\t});\r\n\r\n\t\tlet r = ctrller.match([\r\n\t\t\t[\"down\"],\r\n\t\t\t[\"down\", \"right\"],\r\n\t\t\t[\"right\"],\r\n\t\t]);\r\n\r\n\t\tconsole.log(\"%o: %o\\n\\t%o\", \"多按一個鍵\", r == false, ctrller);\r\n\t})();\r\n\r\n\t(function () {\r\n\t\tlet ctrller = new InputKey();\r\n\r\n\t\tctrller.update(0, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\t\tctrller.update(222, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\r\n\t\tlet r = ctrller.match([\r\n\t\t\t[\"down\"],\r\n\t\t\t[\"down\"],\r\n\t\t]);\r\n\r\n\t\tconsole.log(\"%o: %o\\n\\t%o\", \"按住\", r == false, ctrller);\r\n\t})();\r\n\r\n\t(function () {\r\n\t\tlet ctrller = new InputKey();\r\n\r\n\t\tctrller.update(0, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\t\tctrller.update(666, {\r\n\t\t\t\"right\": 1,\r\n\t\t});\r\n\r\n\t\tlet r = ctrller.match([\r\n\t\t\t[\"down\"],\r\n\t\t\t[\"right\"],\r\n\t\t]);\r\n\r\n\t\tconsole.log(\"%o: %o\\n\\t%o\", \"間隔太長\", r == false, ctrller);\r\n\t})();\r\n\r\n\t(function () {\r\n\t\tlet ctrller = new InputKey();\r\n\r\n\t\tctrller.update(0, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\t\tctrller.update(222, {\r\n\t\t});\r\n\t\tctrller.update(444, {\r\n\t\t\t\"down\": 1,\r\n\t\t});\r\n\r\n\t\tlet r = ctrller.match([\r\n\t\t\t[\"down\"],\r\n\t\t\t[\"down\"],\r\n\t\t]);\r\n\r\n\t\tconsole.log(\"%o: %o\\n\\t%o\", \"連按\", r, ctrller);\r\n\t})();\r\n}\r\n\r\n","\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { Animation } from \"../Animation.js\";\r\nimport { LayerObject, Layer } from \"./Layer.js\";\r\nimport { SceneRenderer } from \"./SceneRenderer.js\";\r\nimport { RenderingOption } from \"./RenderingOption.js\";\r\n\r\nimport { CharacterRenderer } from \"./CharacterRenderer.js\";\r\nimport { SceneCharacter } from \"../SceneCharacter.js\";\r\nimport { Vec2 } from \"../math.js\";\r\nimport { ItemCategoryInfo } from \"../../../public/javascripts/resource.js\";\r\n\r\n\r\nclass _ChairInfo {\r\n\tconstructor() {\r\n\t\t/** @param {{x:number,y:number}} */\r\n\t\tthis.bodyRelMove = null;\r\n\t\tthis.price = 1;\r\n\t\tthis.slotMax = 1;\r\n\t\tthis.recoveryHP = 100;\r\n\t\tthis.recoveryMP = 60;\r\n\t\tthis.sitEmotion = 10;\r\n\t\tthis.tradeBlock = 1;\r\n\t\tthis.invisibleWeapon = 1;\r\n\t}\r\n}\r\n\r\nclass _ChairEffect extends Array {\r\n\tconstructor() {\r\n\t\tthis.z = -1;\r\n\t\tthis.pos = 1;\r\n\t\t\r\n\t\t///** @type {_SpriteData} */\r\n\t\t//this[0..N] = null;\r\n\t}\r\n}\r\n\r\nclass _ChairData {\r\n\tconstructor() {\r\n\t\t/** @type {_ChairInfo} */\r\n\t\tthis.info = null;\r\n\t\t/** @type {_ChairEffect} */\r\n\t\tthis.effect = null;\r\n\t\t/** @type {_ChairEffect} */\r\n\t\tthis.effect2 = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {LayerObject}\r\n */\r\nclass ChairEffect extends Animation {\r\n\tconstructor(raw) {\r\n\t\tsuper(raw);\r\n\t\t\r\n\t\tthis.is_loop = true;\r\n\t\t\r\n\t\tthis.z = raw.z;\r\n\t\tthis.pos = raw.pos;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis._offset = null;\r\n\t\t\r\n\t\t/** @type {Chair} */\r\n\t\tthis._host = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Chair} host\r\n\t * @param {Vec2} offset\r\n\t */\r\n\tinit(host, offset) {\r\n\t\tthis._host = host;\r\n\t\tthis._offset = offset;\r\n\t}\r\n\t\r\n\t/** @override */\r\n\tisEnd() {\r\n\t\tconst player = this._host._player;\r\n\t\treturn !player.chair;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneRenderer} sceneRenderer\r\n\t */\r\n\t_addToScene(sceneRenderer) {\r\n\t\tconst player = this._host._player;\r\n\t\tlet layerIndex = player.$layer + this.z;\r\n\t\tlayerIndex = layerIndex >= 0 ? layerIndex : 0;\r\n\t\tconst layer = sceneRenderer.layers[layerIndex];\r\n\t\tlayer.add(this);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\tconst crr = this._host._player.renderer;\r\n\t\tconst x = crr.x;\r\n\t\tconst y = crr.y;\r\n\t\tconst angle = crr.angle;\r\n\t\tconst flip = crr.front > 0;\r\n\t\t\r\n\t\t//renderer.globalAlpha = this.opacity * option.opacity;\r\n\t\trenderer.globalAlpha = option.opacity;\r\n\r\n\t\tif (this._offset) {\r\n\t\t\tconst offset = this._offset;\r\n\t\t\tthis.draw(renderer, x + offset.x, y + offset.y, 0, flip);\r\n\t\t}\r\n\t\telse if (this.pos == 1) {\r\n\t\t\tconst oy = -this.texture.height * 0.5;\r\n\t\t\tthis.draw(renderer, x, y + oy, 0, flip);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.draw(renderer, x, y, angle, flip);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Chair {\r\n\tconstructor() {\r\n\t\t/** @type {_ChairData} */\r\n\t\tthis._raw = null;\r\n\t\t\r\n\t\t/** @type {SceneCharacter} - owner */\r\n\t\tthis._player = null;\r\n\t\t\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.bodyRelMove = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\t\t\r\n\t\t/** @type {ChairEffect[]} */\r\n\t\tthis.effects = [];\r\n\t\t\r\n\t\tthis.$promise = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneCharacter} player\r\n\t */\r\n\tinit(player) {\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t_player: {\r\n\t\t\t\tvalue: player,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tasync load(id) {//\"03010377\"\r\n\t\tif (!id.startsWith(\"0301\")) {\r\n\t\t\tthrow new TypeError(\"Not chair\");\r\n\t\t}\r\n\t\tthis.id = id;\r\n\t\t\r\n\t\tthis.$promise = ItemCategoryInfo.getItem(id);\r\n\t\tconst raw = await this.$promise;\r\n\t\tdelete this.$promise;\r\n\r\n\t\tdelete this._raw;\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t_raw: {\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\twritable: false,\r\n\t\t\t\tvalue: raw,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tlet offset;\r\n\r\n\t\tif (this._raw.info.bodyRelMove) {\r\n\t\t\tthis.bodyRelMove = new Vec2(this._raw.info.bodyRelMove.x, this._raw.info.bodyRelMove.y);\r\n\t\t}\r\n\t\telse if (raw.effect && raw.effect[0].origin.y < 0) {\r\n\t\t\t//let w = raw.effect[0].__w;\r\n\t\t\tlet h = raw.effect[0].__h;\r\n\t\t\toffset = new Vec2(0, -h * 1.5);\r\n\t\t}\r\n\t\tif (raw.effect[0].origin.y == 0) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\t\r\n\t\tfor (let key in raw) {\r\n\t\t\tif (key.startsWith(\"effect\")) {\r\n\t\t\t\tconst eff = new ChairEffect(raw[key]);\r\n\t\t\t\teff.init(this, offset);\r\n\t\t\t\teff.load();//Animation#load => load texture\r\n\t\t\t\tthis.effects.push(eff);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneRenderer} sceneRenderer\r\n\t */\r\n\taddToScene(sceneRenderer) {\r\n\t\tfor (let eff of this.effects) {\r\n\t\t\teff._addToScene(sceneRenderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetIconUrl() {\r\n\t\treturn this._raw.info.icon[\"\"];\r\n\t}\r\n\tgetIconRawUrl() {\r\n\t\treturn this._raw.info.iconRaw[\"\"];\r\n\t}\r\n}\r\n","﻿\r\nimport { ItemCategoryInfo } from \"../../public/javascripts/resource.js\";\r\n\r\nimport { IRenderer } from \"./IRenderer.js\";\r\n\r\nimport { SceneObject } from \"./SceneObject.js\";\r\nimport { CharacterRenderer } from \"./Renderer/CharacterRenderer.js\";\r\nimport { ChatBalloon } from \"./Renderer/ChatBalloon.js\";\r\nimport { PPlayer, PPlayerState } from \"./Physics/PPlayer.js\";\r\n\r\nimport { $createItem, ItemEquip, ItemSlot, ItemBase } from \"./Item.js\";\r\nimport { SceneSkill } from \"./Skill.js\";\r\n\r\nimport { CharacterStat } from \"../Common/PlayerData.js\";\r\nimport { CharacterMoveElem } from \"../Client/PMovePath.js\";\r\nimport { $Packet_CharacterMove } from \"../Common/Packet\";\r\nimport { AttackInfo, DamagePair } from \"../Common/AttackInfo.js\";\r\n\r\nimport { KeySlot, CommandSlot, ActionSlot, SkillSlot } from \"../ui/Basic/KeySlot.js\";\r\nimport { InputKey } from \"./InputKey.js\";\r\n\r\nimport { SceneMap } from \"./Map.js\";\r\nimport { damageNumberLayer } from \"./Renderer/DamageNumber.js\";\r\nimport { Chair } from \"./Renderer/Chair.js\";\r\nimport { sceneRenderer, SceneRenderer } from \"./Renderer/SceneRenderer.js\";\r\n\r\n\r\n// SceneCharacter的更新流程\r\n//\r\n// chatCtrl.update (順序無關)\r\n//\r\n// <...controller>\r\n// control\r\n// activeSkills.forEach(skill => skill.update)\r\n// chara._handleAttack\r\n// chara._player_control => { inputKey.forEach(key => key ? activeSkills.forEach(skill => skill.control)); ... }\r\n// chara._applyState\r\n//\r\n// <renderer>\r\n// set chara.renderer.position\r\n// chara.renderer.update\r\n\r\n\r\nwindow.$addItem_repeatEquip = false;\r\n\r\n\r\nclass TimeElapsed {\r\n\tconstructor() {\r\n\t\t/** @type {Date} */\r\n\t\tthis._date = new Date();\r\n\t}\r\n\treset() {\r\n\t\tthis._date = new Date();\r\n\t}\r\n\tget elapsed() {\r\n\t\tconst elapsed = (new Date()).getMilliseconds() - this._date.getMilliseconds();\r\n\t\treturn elapsed;\r\n\t}\r\n}\r\n\r\n\r\nclass ChatController {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.text = \"\";\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.$outputText = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.elapsed = 0;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis._isDisplay = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t */\r\n\tenter(text) {\r\n\t\tthis.text = String(text);\r\n\t\tthis.$outputText = null;\r\n\t\tthis.isDisplay = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst $displayDuration = this.displayDuration;\r\n\r\n\t\tif (this.elapsed > $displayDuration) {\r\n\t\t\tthis.isDisplay = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.elapsed += stamp;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {BaseSceneCharacter} chara\r\n\t */\r\n\tasync draw(renderer, chara) {\r\n\t\tif (this._isDisplay) {\r\n\t\t\tconst style = chara.chatBalloonStyle || $gv.ChatBalloon_default_style;\r\n\r\n\t\t\t/** @type {ChatBalloon} */\r\n\t\t\tlet cb = ChatBalloon.cache[style];\r\n\t\t\tif (!cb) {\r\n\t\t\t\tcb = new ChatBalloon();\r\n\t\t\t\tawait cb.load(style);\r\n\t\t\t}\r\n\r\n\t\t\tconst $colon = this.colon;\r\n\t\t\tconst crr = chara.renderer;\r\n\t\t\tconst boundBox = crr._boundBox;\r\n\r\n\t\t\tif (!this.$outputText) {\r\n\t\t\t\tthis.$outputText = chara.id + $colon + this.text;\r\n\t\t\t}\r\n\t\t\tcb.draw(renderer, this.$outputText, crr.x, crr.y - boundBox.height);\r\n\t\t}\r\n\t}\r\n\r\n\tget isDisplay() {\r\n\t\treturn this._isDisplay;\r\n\t}\r\n\tset isDisplay(value) {\r\n\t\tthis._isDisplay = !!value;\r\n\t\tthis.elapsed = 0;\r\n\t}\r\n\r\n\t/** @type {\" : \"} */\r\n\tget colon() {\r\n\t\treturn \" : \";\r\n\t}\r\n\tget $maxLength() {\r\n\t\treturn 70;\r\n\t}\r\n\tget displayDuration() {\r\n\t\treturn $gv.ChatBalloon_display_duration;\r\n\t}\r\n}\r\n\r\n\r\nconst keyboard_map = [\r\n\t{\r\n\t\tArrowUp: new KeySlot(\"Action\", new ActionSlot(\"up\")),\r\n\t\tArrowLeft: new KeySlot(\"Action\", new ActionSlot(\"left\")),\r\n\t\tArrowDown: new KeySlot(\"Action\", new ActionSlot(\"down\")),\r\n\t\tArrowRight: new KeySlot(\"Action\", new ActionSlot(\"right\")),\r\n\t\tz: new KeySlot(\"Action\", new ActionSlot(\"jump\")),\r\n\t\t//z: new KeySlot(\"Skill\", new SkillSlot(\"23001002\")),\r\n\t\tx: new KeySlot(\"Action\", new ActionSlot(\"attack\")),\r\n\t\tc: new KeySlot(\"Skill\", new SkillSlot(\"1001005\")),\r\n\t\tv: new KeySlot(\"Skill\", new SkillSlot(\"64120000\")),\r\n\t\tb: new KeySlot(\"Skill\", new SkillSlot(\"23121000\")),//152001001\r\n\t},\r\n\t{//editor mode\r\n\t\tw: new KeySlot(\"Action\", new ActionSlot(\"up\")),\r\n\t\ta: new KeySlot(\"Action\", new ActionSlot(\"left\")),\r\n\t\ts: new KeySlot(\"Action\", new ActionSlot(\"down\")),\r\n\t\td: new KeySlot(\"Action\", new ActionSlot(\"right\")),\r\n\t\tq: new KeySlot(\"Action\", new ActionSlot(\"jump\")),\r\n\t\tf: new KeySlot(\"Skill\", new SkillSlot(\"23001002\")),//debug\r\n\t\tx: new KeySlot(\"Action\", new ActionSlot(\"attack\")),\r\n\t\tc: new KeySlot(\"Skill\", new SkillSlot(\"1001005\")),\r\n\t\tv: new KeySlot(\"Skill\", new SkillSlot(\"64120000\")),\r\n\t\tb: new KeySlot(\"Skill\", new SkillSlot(\"23121000\")),//152001001\r\n\t}\r\n];\r\n\r\n\r\nclass PlayerJob {\r\n\tconstructor() {\r\n\t\t/** @type {InputKey} */\r\n\t\tthis.inputKey = new InputKey();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {BaseSceneCharacter} owner\r\n\t * @param {number} stamp\r\n\t * @param {InputKey} inputKey\r\n\t */\r\n\tupdate(owner, stamp, inputKey) {\r\n\t\tlet r = this._update_command_skill(owner, stamp, inputKey);\r\n\t\tif (r) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._update(owner, stamp, inputKey);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {BaseSceneCharacter} owner\r\n\t * @param {number} stamp\r\n\t * @param {InputKey} inputKey\r\n\t */\r\n\t_update(owner, stamp, inputKey) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {BaseSceneCharacter} owner\r\n\t * @param {number} stamp\r\n\t * @param {InputKey} inputKey\r\n\t * @returns {boolean} is match\r\n\t */\r\n\t_update_command_skill(owner, stamp, inputKey) {\r\n\t\tconst frontKey = owner.$physics.state.front > 0 ? \"right\" : \"left\";\r\n\t\t\r\n\t\t//this.inputKey.update(stamp, ikey);\r\n\t\t\r\n\t\tif (this.inputKey.match([[\"down\"], [frontKey]], -1) ||\r\n\t\t\tthis.inputKey.match([[\"down\"], [\"down\", frontKey], [frontKey]], -1)\r\n\t\t) {\r\n\t\t\tif (inputKey.attack == 1) {\r\n\t\t\t\tconsole.log(\"invoke skill: 波動拳\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nclass PlayerJob_2300 extends PlayerJob {\r\n\t/**\r\n\t * @param {BaseSceneCharacter} owner\r\n\t * @param {number} stamp\r\n\t * @param {InputKey} inputKey\r\n\t */\r\n\t_update(owner, stamp, inputKey) {\r\n\t\tif (inputKey.jump) {\r\n\t\t\tconst skill_id = \"23001002\";\r\n\t\t\tlet skill = owner.activeSkills.get(skill_id);\r\n\t\t\t//if (keyDown && can_use_skill) {\r\n\t\t\t\tskill = skill || SceneSkill.preload(skill_id);\r\n\t\t\t\tif (!skill.$promise && skill.test(owner)) {\r\n\t\t\t\t\tskill = skill || owner.invokeSkill(skill_id);\r\n\t\t\t\t\tif (skill) {\r\n\t\t\t\t\t\tskill.control(inputKey, inputKey.jump, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t//}\r\n\t\t\t//if (skill) {\r\n\t\t\t//\tskill.control(ikey, keyDown, keyUp);\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class BaseSceneCharacter extends SceneObject {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t///** @type {PPlayer} */\r\n\t\t//this.$physics = null;//new PPlayer();\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = null;\r\n\t\tthis.$layer = 5;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.name = null;\r\n\r\n\t\tthis.stat = new CharacterStat();\r\n\t\t\r\n\t\t// begin PlayerData\r\n\t\t//TODO: move player data to PlayerData\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.chatBalloonStyle = 0;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.labelStyle = 0;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.damageSkin = \"default\";\r\n\t\t\r\n\t\t// end PlayerData\r\n\r\n\t\t/** @type {PlayerJob} */\r\n\t\tthis.jobController = new PlayerJob_2300();\r\n\r\n\t\t/** @type {Map<string,SceneSkill>} */\r\n\t\tthis.activeSkills = new Map();\r\n\t\t\r\n\t\t/** @type {Map<string,SceneSkill>} */\r\n\t\tthis.skillControllers = new Map();\r\n\t\t\r\n\t\t/** @type {Chair} */\r\n\t\tthis.chair = null;\r\n\t\t\r\n\t\t/** @type {ChatController} */\r\n\t\tthis.chatCtrl = new ChatController();\r\n\t\t\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t$inPacket: {\r\n\t\t\t\twritable: true,\r\n\t\t\t},\r\n\t\t\t$outPacket: {\r\n\t\t\t\twritable: true,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t/** @type {{move:$Packet_CharacterMove}} */\r\n\t\tthis.$inPacket = {};\r\n\t\tthis.$inPacket.move = null;\r\n\r\n\t\t/** @type {{move:$Packet_CharacterMove}} */\r\n\t\tthis.$outPacket = {};\r\n\t\tthis.$outPacket.move = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @alias name\r\n\t * @type {string}\r\n\t */\r\n\tget id() {\r\n\t\treturn this.name;\r\n\t}\r\n\tset id(value) {\r\n\t\tthis.name = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @alias name\r\n\t * @type {string}\r\n\t */\r\n\tget $objectid() {\r\n\t\treturn this.name;\r\n\t}\r\n\tset $objectid(value) {\r\n\t\tthis.name = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {BaseSceneCharacter|null} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tconsole.log(\"Player(\" + this.$objectid + \") 被 \" + chara.$objectid + \" 攻擊，減少 \" + damage + \" HP\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {BaseSceneCharacter|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t\tthis.$physics.knockback(moveX, moveY, 1000);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {$Packet_CharacterMove} _move\r\n\t */\r\n\t$move(_move) {\r\n\t\tlet move = _move || this.$inPacket.move;\r\n\t\tthis.$inPacket.move = move;\r\n\t}\r\n\r\n\t_remote_control() {\r\n\t\tlet move = this.$inPacket.move;\r\n\r\n\t\tif (move && move.path && move.path.length) {\r\n\t\t\tconst crr = this.renderer;\r\n\t\t\tlet elem = move.path.shift();\r\n\r\n\t\t\tif (elem.isAwake) {\r\n\t\t\t\tthis.$physics.moveTo(elem);\r\n\t\t\t\tthis.$physics.state = elem.pState;//??\r\n\r\n\t\t\t\tcrr.front = elem.pState.front;\r\n\t\t\t}\r\n\t\t\t//else {\r\n\t\t\t//\t//non physics state: chara.renderer...\r\n\t\t\t//}\r\n\t\t\r\n\t\t\tif (elem.action) {\r\n\t\t\t\tcrr.action = elem.action;\r\n\t\t\t\t//crr.action_frame = elem.action_frame;\r\n\t\t\t}\r\n\t\t\tif (elem.emotion) {\r\n\t\t\t\tcrr.emotion = elem.emotion;\r\n\t\t\t\t//crr.emotion_frame = elem.emotion_frame;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} equipId\r\n\t * @param {number} from\r\n\t * @param {number} to\r\n\t */\r\n\t$moveItem(equipId, from, to) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} chairId\r\n\t */\r\n\tsitChair(chairId) {\r\n\t\tif (!this.chair) {\r\n\t\t\tthis.chair = new Chair();\r\n\t\t\tthis.chair.init(this);\r\n\t\t\tthis.chair.load(chairId).then(() => {\r\n\t\t\t\tthis.chair.addToScene(sceneRenderer);\r\n\t\t\t\t{// Chair#update\r\n\t\t\t\t\tconst bodyRelMove = this.chair.bodyRelMove;\r\n\t\t\t\t\tif (bodyRelMove) {\r\n\t\t\t\t\t\t//this.renderer.tx = bodyRelMove.x;\r\n\t\t\t\t\t\t//this.renderer.ty = bodyRelMove.y;\r\n\t\t\t\t\t\tthis.renderer.x += bodyRelMove.x;\r\n\t\t\t\t\t\tthis.renderer.y += bodyRelMove.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this.chair._raw.info.sitAction) {\r\n\t\t\t\t\t\tthis.renderer.action = this.chair._raw.info.sitAction;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.renderer.action = \"sit\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.chair._raw.info.sitEmotion) {\r\n\t\t\t\t\t\tthis.renderer.emotion = window.character_emotion_list[this.chair._raw.info.sitEmotion];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.enablePhysics = false;\r\n\t\t\t\tthis.$physics.body.SetAwake(false);\r\n\t\t\t\tthis.$physics.foot_walk.SetAwake(false);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"already sit\");\r\n\t\t}\r\n\t}\r\n\tnoSit() {\r\n\t\tthis.enablePhysics = true;\r\n\t\tthis.$physics.body.SetAwake(true);\r\n\t\tthis.$physics.foot_walk.SetAwake(true);\r\n\t\t\r\n\t\t{// Chair#update\r\n\t\t\t//this.renderer.tx = 0;\r\n\t\t\t//this.renderer.ty = 0;\r\n\t\t\tconst bodyRelMove = this.chair.bodyRelMove;\r\n\t\t\tif (bodyRelMove) {\r\n\t\t\t\tthis.renderer.x -= bodyRelMove.x;\r\n\t\t\t\tthis.renderer.y -= bodyRelMove.y;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderer.action = \"stand1\";\r\n\t\t\tthis.renderer.emotion = \"blink\";\r\n\t\t}\r\n\t\t\r\n\t\tthis.chair = null;//TODO: remove chair\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @param {function(SceneSkill):void} [cbfunc]\r\n\t * @returns {SceneSkill}\r\n\t */\r\n\tinvokeSkill(skillId, cbfunc) {\r\n\t\tif (window.$io) {\r\n\t\t\tthis.__invokeSkill_client(skillId).then(cbfunc);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.__invokeSkill_offline(skillId);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @returns {SceneSkill}\r\n\t */\r\n\tasync __invokeSkill_client(skillId) {\r\n\t\tlet isValid;\r\n\t\ttry {\r\n\t\t\tisValid = await window.$io.emit(\"skill\", {\r\n\t\t\t\tskillId: skillId\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t}\r\n\t\tif (isValid) {\r\n\t\t\treturn this.__invokeSkill_offline(skillId);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @returns {SceneSkill}\r\n\t */\r\n\t__invokeSkill_offline(skillId) {\r\n\t\tlet skill = new SceneSkill();\r\n\t\tskill.load(skillId, this);\r\n\t\tthis.activeSkills.set(skillId, skill);\r\n\t\treturn skill;\r\n\t}\r\n\r\n\t/**\r\n\t * after step, before rendering\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst renderer = this.renderer;\r\n\r\n\t\tthis.chatCtrl.update(stamp);\r\n\r\n\t\tthis._handleSkill(stamp);\r\n\r\n\t\tthis._player_control();\r\n\r\n\t\tif ($gv.m_editor_mode) {\r\n\t\t\tif (renderer.speed > 0 && this.$physics && this.enablePhysics) {\r\n\t\t\t\tthis._applyState({\r\n\t\t\t\t\tfront: this.$physics.state.front,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.$physics) {\r\n\t\t\tthis._applyState(this.$physics.state);\r\n\t\t}\r\n\r\n\t\tif (this.$physics) {\r\n\t\t\tif (renderer && this.enablePhysics) {\r\n\t\t\t\tconst pos = this.$physics.getPosition();\r\n\t\t\t\tconst px = Math.trunc(pos.x * $gv.CANVAS_SCALE + 0.5);\r\n\t\t\t\tconst py = Math.trunc(pos.y * $gv.CANVAS_SCALE + 0.5);\r\n\r\n\t\t\t\t//position\r\n\t\t\t\trenderer.x = px;\r\n\t\t\t\trenderer.y = py;\r\n\t\t\t\t\r\n\t\t\t\t//rotate\r\n\t\t\t\tif (this.$physics.body.GetAngle() || this.$physics.body.GetAngularVelocity()) {\r\n\t\t\t\t\trenderer.angle = this.$physics.body.GetAngle();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trenderer.angle = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//layer\r\n\t\t\t\tthis.$layer = this.$physics.getLayer();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trenderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_$drawName(renderer) {\r\n\t\tconst name = this.id;\r\n\t\tthis.__drawName(renderer, name, this.labelStyle || $gv.NameLabel_default_style);\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_$drawChatBalloon(renderer) {\r\n\t\tthis.chatCtrl.draw(renderer, this);//this.chatText || \"123451234512345123451234512345123451234512345123451234512345123451234512345123451234\", 84\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_player_control() {\r\n\t}\r\n\r\n\t/**\r\n\t * 'character physics state' to 'character renderer state'\r\n\t * @param {PPlayerState} player_state\r\n\t */\r\n\t_applyState(player_state) {\r\n\t\tconst renderer = this.renderer;\r\n\t\tconst pState = this.$physics.state;\r\n\r\n\t\t// renderer: apply default action\r\n\t\tif (!pState.invokeSkill) {\r\n\t\t\tconst { front, jump, walk, prone, fly, ladder } = player_state;\r\n\t\t\tconst enablePhysics = chara.enablePhysics;\r\n\r\n\t\t\tif (front != null) {\r\n\t\t\t\trenderer.front = front;\r\n\t\t\t}\r\n\r\n\t\t\tif (ladder) {\r\n\t\t\t\tif (enablePhysics && this.$physics.ladder) {\r\n\t\t\t\t\tif (this.$physics.ladder.isLadder()) {\r\n\t\t\t\t\t\trenderer.action = \"ladder\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trenderer.action = \"rope\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (pState.ladder_move_dir) {\r\n\t\t\t\t\t\tif (chara.renderer.actani.isEnd()) {\r\n\t\t\t\t\t\t\tchara.renderer.actani.reset();\r\n\t\t\t\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trenderer.actani._is_end = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (jump) {\r\n\t\t\t\trenderer.action = \"jump\";\r\n\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t}\r\n\t\t\telse if (walk) {\r\n\t\t\t\trenderer.action = \"walk1\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\t\t\telse if (prone) {\r\n\t\t\t\trenderer.action = \"prone\";\r\n\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t}\r\n\t\t\telse if (fly) {\r\n\t\t\t\trenderer.action = \"fly\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderer.action = \"stand1\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\r\n\t\t\t//TODO: keyboard: emotion key\r\n\t\t\tfor (let i = 0; i <= 9; ++i) {\r\n\t\t\t\tif ($gv.input_keyDown[i]) {\r\n\t\t\t\t\tlet a = [\r\n\t\t\t\t\t\t\"blink\", \"hit\", \"smile\",\r\n\t\t\t\t\t\t\"troubled\", \"cry\", \"angry\",\r\n\t\t\t\t\t\t\"bewildered\", \"stunned\", \"vomit\",\r\n\t\t\t\t\t\t\"oops\"\r\n\t\t\t\t\t];\r\n\t\t\t\t\tlet e = a[i % a.length];\r\n\t\t\t\t\trenderer.emotion = e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * route\r\n\t * 結算攻擊傷害\r\n\t */\r\n\t_handleSkill(stamp) {\r\n\t\t/** @type {AttackInfo[]} */\r\n\t\tlet attackInfoList = [];\r\n\t\t\r\n\t\tthis.activeSkills.forEach(skill => {\r\n\t\t\tif (skill) {\r\n\t\t\t\tif (skill.isEnd()) {\r\n\t\t\t\t\tthis.activeSkills.delete(skill.skillId);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tskill.update(stamp, this);\r\n\t\t\t\t}\r\n\t\t\t\t//clear all attack\r\n\t\t\t\tlet allAttack = skill.attackInfo.shiftAllAttack();\r\n\t\t\t\tif (allAttack.length) {\r\n\t\t\t\t\tlet attackInfo = new AttackInfo();\r\n\t\t\t\t\tattackInfo.allAttack = allAttack;\r\n\t\t\t\t\tattackInfoList.push(attackInfo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif (attackInfoList.length) {\r\n\t\t\tif (window.$io) {\r\n\t\t\t\tthis.__handleAttack_client(attackInfoList);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.__handleAttack_offline(attackInfoList);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 結算攻擊傷害\r\n\t * @param {AttackInfo[]} attackInfoList\r\n\t */\r\n\tasync __handleAttack_client(attackInfoList) {\r\n\t\tlet isValid = await window.$io.emit(\"attack\", {\r\n\t\t\t//TODO: online mode: packet_attack\r\n\t\t\tattack: attackInfoList\r\n\t\t});\r\n\t\t\r\n\t\tif (isValid) {\r\n\t\t\t//TODO: online mode: attack ??\r\n\t\t\tthis.__handleAttack_offline(attackInfoList);//show attack\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 結算攻擊傷害\r\n\t * @param {AttackInfo[]} attackInfoList\r\n\t */\r\n\t__handleAttack_offline(attackInfoList) {\r\n\t\tfor (let attackInfo of attackInfoList) {\r\n\t\t\tfor (let i = 0; i < attackInfo.allAttack.length; ++i) {\r\n\t\t\t\tconst attack = attackInfo.allAttack[i];\r\n\r\n\t\t\t\tconst targetObject = attack.getTargetObject();\r\n\r\n\t\t\t\tfor (let j = 0; j < attack.allDamage.length; ++j) {\r\n\t\t\t\t\tlet damVar = this.stat.getCurrentMaxBaseDamage() - this.stat.getCurrentMinBaseDamage();\r\n\t\t\t\t\tlet realDamage = this.stat.getCurrentMinBaseDamage() + Math.random() * damVar;\r\n\t\t\t\t\tlet damage = attack.allDamage[j] = new DamagePair();\r\n\t\t\t\t\tlet style;\r\n\r\n\t\t\t\t\tif (Math.trunc(Math.random() * 100) < this.stat.critRate) {\r\n\t\t\t\t\t\trealDamage = realDamage * (1 + this.stat.critDamage / 100);\r\n\t\t\t\t\t\tdamage.critical = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\trealDamage = Math.trunc(realDamage);\r\n\t\t\t\t\tdamage.realDamage = realDamage;\r\n\r\n\t\t\t\t\ttargetObject.damage(this, realDamage);\r\n\r\n\t\t\t\t\tif (damage.critical) {\r\n\t\t\t\t\t\tstyle = \"NoCri\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstyle = \"NoRed\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//TODO: ?? target position\r\n\t\t\t\t\tdamageNumberLayer.addDamagePair(this.damageSkin || \"default\", style, damage, targetObject.x + (attack.allDamage.length > 1 ? (25 - (1 - j & 1) * 25) : 0), targetObject.y, j * 100);\r\n\t\t\t\t}\r\n\t\t\t\t//\r\n\t\t\t\ttargetObject.knockback(this, 16, 16);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * client player\r\n */\r\nexport class SceneCharacter extends BaseSceneCharacter {\r\n\t/**\r\n\t * @param {SceneMap} scene\r\n\t */\r\n\tconstructor(scene) {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = new CharacterRenderer();\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = scene.controller.$createPlayer(this, this.renderer);//new PPlayer();\r\n\r\n\t\tthis.$layer = 5;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {ItemSlot[][]} - item inventory */\r\n\t\tthis.items = new Array(5);\r\n\t\tfor (let i = 0; i < 5; ++i) {\r\n\t\t\tthis.items[i] = new Array(128);\r\n\t\t\tfor (let j = 0; j < 128; ++j) {\r\n\t\t\t\tthis.items[i][j] = new ItemSlot(j, null, null, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//this.addItem(\"01005177\", 1);\r\n\t\t//this.addItem(\"01053322\", 1);\r\n\t\t//this.addItem(\"01073284\", 1);\r\n\r\n\t\tthis.stat.onJobChange(this._onJobChange.bind(this));\r\n\t}\r\n\r\n\t_onJobChange() {\r\n\t\t//TODO: register buf, debuf, autofire skill\r\n\t\t//TODO: 二段跳取代跳躍鍵\r\n\t\tconst newJob = this.stat.job;\r\n\r\n\t\tconsole.log(\"Player(\" + this.$objectid + \") change job: \" + newJob);\r\n\t}\r\n\r\n\t/**\r\n\t * 'character physics state' to 'character renderer state'\r\n\t * @param {PPlayerState} player_state\r\n\t */\r\n\t_applyState(player_state) {\r\n\t\tsuper._applyState(player_state);\r\n\r\n\t\tthis.$recMove();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_player_control() {\r\n\t\tif (!this.$physics) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//if (!this.$physics.state.jump && this.$$jump_state) {\r\n\t\t//\tdelete this.$$jump_state;\r\n\t\t//}\r\n\t\tconst key_map = keyboard_map[$gv.m_editor_mode ? 1 : 0];\r\n\r\n\t\t/** @type {{[key:string]:number}} */\r\n\t\tlet ikey = {};\r\n\r\n\t\tlet can_use_skill = this.activeSkills.size == 0;//TODO: 以查表法檢查不同技能是否可以同時使用\r\n\r\n\t\tfor (let keyName in key_map) {\r\n\t\t\t/** @type {KeySlot} */\r\n\t\t\tconst keySlot = key_map[keyName];\r\n\t\t\tif (!keySlot) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst keyDown = $gv.input_keyDown[keyName];\r\n\t\t\tconst keyUp = $gv.input_keyUp[keyName];\r\n\r\n\t\t\tswitch (keySlot.type) {\r\n\t\t\t\tcase \"Command\"://open or close UI, ...\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Action\":\r\n\t\t\t\t\tif (keyDown) {\r\n\t\t\t\t\t\t/** @type {ActionSlot} */\r\n\t\t\t\t\t\tconst ck = keySlot.data;\r\n\t\t\t\t\t\tif (this.chair) {\r\n\t\t\t\t\t\t\tif (ck.action == \"left\" ||\r\n\t\t\t\t\t\t\t\tck.action == \"right\" ||\r\n\t\t\t\t\t\t\t\tck.action == \"jump\"\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tthis.noSit();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tikey[ck.action] = keyDown;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Item\":\r\n\t\t\t\t\tif (keyDown) {\r\n\t\t\t\t\t\t/** @type {ItemSlot} */\r\n\t\t\t\t\t\tconst itemSlot = keySlot.data;\r\n\t\t\t\t\t\tthis.useItem(itemSlot.data.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.chair) {\r\n\t\t\t//TODO: stamp\r\n\t\t\tconst stamp = 0;\r\n\t\t\tif (this.jobController.update(this, stamp, ikey)) {\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor (let keyName in key_map) {\r\n\t\t\t\t\t/** @type {KeySlot} */\r\n\t\t\t\t\tconst keySlot = key_map[keyName];\r\n\t\t\t\t\tif (!keySlot) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst keyDown = $gv.input_keyDown[keyName];\r\n\t\t\t\t\tconst keyUp = $gv.input_keyUp[keyName];\r\n\r\n\t\t\t\t\tif (keySlot.type == \"Skill\") {\r\n\t\t\t\t\t\t/** @type {SkillSlot} */\r\n\t\t\t\t\t\tconst ks = keySlot.data;\r\n\t\t\t\t\t\tconst skill_id = ks.skill_id;\r\n\t\t\t\t\t\tlet skill = this.activeSkills.get(skill_id);\r\n\t\t\t\t\t\tif (keyDown && can_use_skill) {\r\n\t\t\t\t\t\t\tskill = skill || this.invokeSkill(skill_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (skill) {\r\n\t\t\t\t\t\t\tskill.control(ikey, keyDown, keyUp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.$physics.control(ikey);//apply action control\r\n\t}\r\n\r\n\t/**\r\n\t * route addItem\r\n\t * @param {string} itemId\r\n\t * @param {number} amount\r\n\t */\r\n\taddItem(itemId, amount) {\r\n\t\tif (window.$io) {\r\n\t\t\t//TODO: online mode: addItem\r\n\t\t\tconsole.warn(\"未完成: __addItem_client\");\r\n\t\t\t//this.__addItem_client(itemId, amount);\r\n\t\t}\r\n\t\t//else {\r\n\t\t\tthis.__addItem_offline(itemId, amount);\r\n\t\t//}\r\n\t}\r\n\t/**\r\n\t * @param {string} itemId\r\n\t * @param {number} amount\r\n\t */\r\n\tasync __addItem_client(itemId, amount) {\r\n\t\t//TODO: online mode: addItem\r\n\t\tconsole.warn(\"未完成: __addItem_client\");\r\n\t\t\r\n\t\tlet result = await window.$io.emit(\"addItem\", {\r\n\t\t\ttype: type,\r\n\t\t\tslot: slot,\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {string} itemId\r\n\t * @param {number} amount\r\n\t */\r\n\t__addItem_offline(itemId, amount) {\r\n\t\t/** @type {Partial<ItemEquip>} */\r\n\t\tlet props = {//test attr\r\n\t\t\tincDEXr: Math.trunc(Math.random() * 3),\r\n\t\t\ttimeLimited: Date(),\r\n\t\t};\r\n\r\n\t\t$createItem(itemId, props).then(item => {\r\n\t\t\tthis._addItem(item, amount);\r\n\t\t}, function (err) {\r\n\t\t\tconsole.warn(err);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @template T\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\t_addItem(itemData, amount) {\r\n\t\tlet SN = 123;\r\n\t\tlet itemId = itemData.id;\r\n\t\tlet slotType = itemData.getSlot();\r\n\t\tfor (let i = 0; i < this.items[slotType].length; ++i) {\r\n\t\t\tif (this.items[slotType][i].isEmpty()) {\r\n\t\t\t\tif (window.$addItem_repeatEquip) {\r\n\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, slotType ? amount : 1);\r\n\t\t\t\t\tconsole.info(`give ${this.id}: ${itemId} * ${amount}`);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (slotType == 0) {\r\n\t\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, 1);\r\n\t\t\t\t\t\tamount--;\r\n\t\t\t\t\t\tif (amount == 0) {\r\n\t\t\t\t\t\t\tconsole.info(`repeat give ${this.id}: ${itemId}`);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, amount);\r\n\t\t\t\t\t\tconsole.info(`give ${this.id}: ${itemId} * ${amount}`);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;//item inventory was full\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} type - item type\r\n\t * @param {number} slot\r\n\t */\r\n\tremoveItem(type, slot) {\r\n\t\tif (window.$io) {\r\n\t\t\t//TODO: online mode: removeItem\r\n\t\t\tconsole.warn(\"未完成: removeItem\");\r\n\t\t}\r\n\t\t//if (window.$io) {//TODO: online mode: removeItem\r\n\t\t//\tconsole.warn(\"未完成: removeItem\");\r\n\t\t//\t\r\n\t\t//\twindow.$io.emit(\"removeItem\", {\r\n\t\t//\t\ttype: type,\r\n\t\t//\t\tslot: slot,\r\n\t\t//\t}).then(results => {\r\n\t\t//\t\tif (result) {\r\n\t\t//\t\t\tthis._removeItem(type, slot);\r\n\t\t//\t\t}\r\n\t\t//\t\treturn result;\r\n\t\t//\t}, err => {\r\n\t\t//\t\tconsole.error(err);\r\n\t\t//\t});\r\n\t\t//}\r\n\t\t//else {\r\n\t\t\treturn this._removeItem(type, slot);\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} type - item type\r\n\t * @param {number} slot\r\n\t */\r\n\t_removeItem(type, slot) {\r\n\t\tthis.items[type][slot]._clear();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} from\r\n\t * @param {number} to\r\n\t */\r\n\tmoveItemToSlot(from, to) {\r\n\t\t//TODO: (\"./ui/Basic/UISlotItem.vue\").methods.drop\r\n\t\tdebugger;\r\n\t}\r\n\r\n\t///**\r\n\t// * @param {any} id\r\n\t// */\r\n\t//$getItem(id) {\r\n\t//\tthis.itemSlot\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {number} itemId\r\n\t */\r\n\tfindItem(itemId) {\r\n\t\tfor (let i = 0; i < this.items.length; ++i) {\r\n\t\t\tfor (let j = 0; j < this.items[i].length; ++j) {\r\n\t\t\t\tlet itemSlot = this.items[i][j];\r\n\r\n\t\t\t\tif (itemSlot && itemSlot.data && (itemSlot.data.id == itemId)) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttypeName: ItemCategoryInfo.typeName[i],\r\n\t\t\t\t\t\titemSlot: itemSlot,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\ttypeName: null,\r\n\t\t\titemSlot: null,\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * route\r\n\t * @param {number} itemId\r\n\t */\r\n\tuseItem(itemId, category, itemInfo) {\r\n\t\tif (window.$io) {\r\n\t\t\tthis.__useItem_client(itemId);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.__useItem_offline(itemId);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} itemId\r\n\t * @returns {Promise<{}>}\r\n\t */\r\n\t__useItem_client(itemId) {\r\n\t\treturn window.$io.emit(\"useItem\", {\r\n\t\t\titemId: itemId\r\n\t\t}).then(results => {\r\n\t\t\tif (results) {\r\n\t\t\t\tthis.__useItem_offline(itemId);\r\n\t\t\t}\r\n\t\t\treturn results;\r\n\t\t}, err => {\r\n\t\t\tconsole.log();\r\n\t\t\tconsole.error(\"can't use item: %o\\nerror: %o\", id, err);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {number} itemId\r\n\t */\r\n\t__useItem_offline(itemId) {\r\n\t\tconst args = arguments;\r\n\t\tlet existItem = this.findItem(itemId).itemSlot;\r\n\r\n\t\tif (existItem) {\r\n\t\t\tif (!$gv.m_editor_mode) {\r\n\t\t\t\tconsole.log(`消耗道具：${itemId}。未完成`);\r\n\t\t\t\tthis._consume(itemId, 1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(`使用道具：${itemId}。`);\r\n\t\t\t}\r\n\t\t\tif (ItemCategoryInfo.isChair(itemId)) {\r\n\t\t\t\tthis.sitChair(itemId);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tupdate_renderer.call(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ($gv.m_editor_mode) {\r\n\t\t\t\tthis.addItem(itemId, 1);\r\n\t\t\t\tif (ItemCategoryInfo.isChair(itemId)) {\r\n\t\t\t\t\tthis.sitChair(itemId);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tupdate_renderer.call(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"無法使用不存在的道具。you can try add item editor mode\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction update_renderer() {\r\n\t\t\t//TODO: implement job\r\n\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\tconst category = args[1], equipInfo = args[2];\r\n\t\t\t\tthis.renderer.use(itemId, category, equipInfo);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.renderer.use(itemId);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tasync say(text) {\r\n\t\tif (window.$io) {\r\n\t\t\tlet result = await window.$io.emit(\"chat\", {\r\n\t\t\t\t$style: this.chatCtrl.style,\r\n\t\t\t\ttext: text,\r\n\t\t\t});\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.chatCtrl.enter(text);\r\n\t\t\t}\r\n\t\t\treturn result;//boolean\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.chatCtrl.enter(text);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\t$emit(socket) {\r\n\t\tif (this.$outPacket.move) {\r\n\t\t\tsocket.emit(\"charaMove\", this.$outPacket.move);\r\n\t\t\tthis.$outPacket.move = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet charaMove = new $Packet_CharacterMove();\r\n\r\n\t\t\tcharaMove.capture(this);\r\n\r\n\t\t\tsocket.emit(\"charaMove\", charaMove);\r\n\t\t}\r\n\r\n\t\tthis.$outPacket.move = null;\r\n\t}\r\n\t\r\n\t$recMove() {\r\n\t\tlet move = this.$outPacket.move || new $Packet_CharacterMove();\r\n\t\tmove.capture(this);\r\n\t\tthis.$outPacket.move = move;\r\n\t}\r\n}\r\n\r\n/**\r\n * remote player\r\n */\r\nexport class SceneRemoteCharacter extends BaseSceneCharacter {\r\n\t/**\r\n\t * @param {SceneMap} scene\r\n\t */\r\n\tconstructor(scene) {\r\n\t\tsuper();\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tdelete this.$physics;\r\n\t\t\tObject.defineProperty(this, \"$physics\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this.$$physics;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tif (value == null) {\r\n\t\t\t\t\t\tconsole.error(\"can not set SceneRemoteCharacter.$physics = null;\");\r\n\t\t\t\t\t\talert(\"can not set SceneRemoteCharacter.$physics = null;\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$$physics = value;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tdelete this.renderer;\r\n\t\t\tObject.defineProperty(this, \"renderer\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this.$$renderer;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tif (value == null) {\r\n\t\t\t\t\t\tconsole.error(\"can not set SceneRemoteCharacter.renderer = null;\");\r\n\t\t\t\t\t\talert(\"can not set SceneRemoteCharacter.renderer = null;\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$$renderer = value;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = new CharacterRenderer();\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = scene.controller.$createRemotePlayer(this, this.renderer);\r\n\t}\r\n\r\n\tget $remote() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_player_control() {\r\n\t\tthis._remote_control();\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { SkillAnimation } from \"../game/Skill.js\";\r\nimport { SceneObject } from \"../game/SceneObject.js\";//?? ref\r\n\r\n\r\nexport class AttackInfo {\r\n\tconstructor() {\r\n\t\t/** @type {AttackPair[]} - { objectid, attack }[each monster] */\r\n\t\tthis.allAttack = [];\r\n\t\t\r\n\t\t//TODO: make this JSON\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.skillId = null;\r\n\t}\r\n\t\r\n\t///** returns {AttackInfo} */\r\n\t//clone() {\r\n\t//\tlet ai = new AttackInfo();\r\n\t//\t//ai.allAttack = this.allAttack.slice();//??\r\n\t//\tai.skill = this.skill;\r\n\t//\treturn ai;\r\n\t//}\r\n\t\r\n\t///**\r\n\t// * @param {number} objectid\r\n\t// * @returns {AttackPair}\r\n\t// */\r\n\t//addAttack(objectid) {\r\n\t//\tlet attack = new AttackPair();\r\n\t//\tattack.objectid = objectid;\r\n\t//\tthis.allAttack.push(attack);\r\n\t//}\r\n\t\r\n\t/**\r\n\t * return current attack and set new instance\r\n\t * @returns {AttackPair[]} - { objectid, attack }[each monster]\r\n\t */\r\n\tshiftAllAttack() {\r\n\t\tlet allAttack = this.allAttack;\r\n\t\tthis.allAttack = [];\r\n\t\treturn allAttack;\r\n\t}\r\n}\r\n\r\nconst symbol_targetObject = Symbol(\"targetObject\");\r\n\r\nexport class AttackPair {\r\n\tconstructor() {\r\n\t\t/** @type {SceneObject} */\r\n\t\tthis[symbol_targetObject] = null;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.objectid = null;\r\n\r\n\t\t/** @type {DamagePair[]} - { realDamage, critical }[attackCount] */\r\n\t\tthis.allDamage = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {SceneObject}\r\n\t */\r\n\tgetTargetObject() {\r\n\t\treturn this[symbol_targetObject];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneObject} targetObject\r\n\t */\r\n\tsetTargetObject(targetObject) {\r\n\t\tthis[symbol_targetObject] = targetObject;\r\n\t}\r\n\r\n\t/**\r\n\t * targetObject # $objectid\r\n\t * @returns {number}\r\n\t */\r\n\tget objectid() {\r\n\t\t/** @type {SceneObject} */\r\n\t\tlet obj = this[symbol_targetObject];\r\n\t\treturn obj.$objectid;\r\n\t}\r\n\t/**\r\n\t * set targetObject by objectid\r\n\t * @param {number} objectid\r\n\t */\r\n\tset objectid(objectid) {\r\n\t\tif (Number.isSafeInteger(objectid)) {\r\n\t\t\t/** @type {SceneObject} */\r\n\t\t\tlet obj = scene_map.lifeMgr.entities[objectid];\r\n\r\n\t\t\tthis.setTargetObject(obj);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//TODO: targetObject is player's character\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {boolean} critical\r\n\t * @returns {DamagePair}\r\n\t */\r\n\taddDamage(realDamage, critical) {\r\n\t\tthis.allDamage.push(new DamagePair(realDamage, critical));\r\n\t}\r\n}\r\n\r\nexport class DamagePair {\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {boolean} critical\r\n\t */\r\n\tconstructor(realDamage, critical) {\r\n\t\t/** @type {number} */\r\n\t\tthis.realDamage = realDamage;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.critical = critical;\r\n\t}\r\n\r\n\t_validating() {\r\n\t\treturn Number.isSafeInteger(this.realDamage);\r\n\t}\r\n\r\n\t/** @param {IRenderer} */\r\n\t_draw(renderer) {\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tif (Number.isSafeInteger(this.realDamage)) {\r\n\t\t\t//draw\r\n\t\t}\r\n\t\telse {// debug, invalid damage\r\n\t\t\tctx.filter = \"gray-scale(1)\";\r\n\t\t\t//draw\r\n\t\t\tctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","\r\nimport { IRenderer } from \"../IRenderer.js\";\r\n\r\n\r\nexport class RenderingOption {\r\n\t/**\r\n\t * @param {Partial<RenderingOption>} [option]\r\n\t */\r\n\tconstructor(option) {\r\n\t\tif (option) {\r\n\t\t\tthis.opacity = option.opacity || 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.opacity = 1;\r\n\t\t}\r\n\t}\r\n\tclone() {\r\n\t\treturn new RenderingOption(this);\r\n\t}\r\n\t/**\r\n\t * multiply property, return new RenderingOption\r\n\t * @param {RenderingOption} other\r\n\t * @returns {RenderingOption}\r\n\t */\r\n\tmul(other) {\r\n\t\tif (other) {\r\n\t\t\treturn new RenderingOption({\r\n\t\t\t\topacity: this.opacity * other.opacity,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.clone();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * multiply property\r\n\t * @param {RenderingOption} other\r\n\t * @returns {void}\r\n\t */\r\n\tselfMultiply(other) {\r\n\t\tif (other) {\r\n\t\t\tthis.opacity * other.opacity;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { PPlayerState } from \"../game/Physics/PPlayer.js\";//debug\r\n\r\n\r\nexport class BaseMoveElem {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.x = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y = null;\r\n\r\n\t\t/** @type {number} - linear velocity x */\r\n\t\tthis.vx = undefined;\r\n\r\n\t\t/** @type {number} - linear velocity y */\r\n\t\tthis.vy = undefined;\r\n\r\n\t\t/** @type {number} - force x */\r\n\t\tthis.fx = undefined;\r\n\r\n\t\t/** @type {number} - force y */\r\n\t\tthis.fy = undefined;\r\n\r\n\t\t/** @type {PPlayerState} - player physics state */\r\n\t\tthis.pState = null;\r\n\r\n\t\t/** @type {number} - time elapsed */\r\n\t\tthis.elapsed = 0;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.isAwake = undefined;// value = ?\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = undefined;\r\n\t\t/** @type {number} */\r\n\t\tthis.action_frame = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.emotion = undefined;\r\n\t\t/** @type {number} */\r\n\t\tthis.emotion_frame = undefined;\r\n\t}\r\n}\r\n\r\nexport class CharacterMoveElem extends BaseMoveElem {\r\n}\r\n\r\nexport class MobMoveElem extends BaseMoveElem {\r\n}\r\n\r\n","\r\nimport jQuery from \"jquery\";\r\n\r\nimport \"jquery-ui/themes/base/core.css\";\r\nimport \"jquery-ui/themes/base/theme.css\";\r\nimport \"jquery-ui/themes/base/selectable.css\";\r\nimport \"jquery-ui/themes/base/sortable.css\";\r\nimport \"jquery-ui/themes/base/draggable.css\";\r\n\r\nimport \"jquery-ui/ui/core\";\r\nimport \"jquery-ui/ui/widgets/selectable\";\r\nimport \"jquery-ui/ui/widgets/sortable\";\r\nimport \"jquery-ui/ui/widgets/draggable\";\r\nimport \"jquery-ui/ui/disable-selection\";\r\nimport \"jquery-ui/ui/position\";\r\nimport \"jquery-ui/ui/effect\";\r\n\r\nimport { } from \"./util.js\";\r\n\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nVue.config.productionTip = false;\r\nVue.use(Vuex);\r\n\r\nwindow.jQuery = jQuery;\r\nwindow.$ = jQuery;\r\n\r\nif (!window.onwheel) {\r\n\twindow.onwheel = function () {\r\n\t}\r\n}\r\n\r\nlet init_tasks = [];\r\n\r\nexport function AddInitTask(task) {\r\n\tinit_tasks.push(task);\r\n}\r\n\r\nexport function InitAll() {\r\n\tlet promise_list = init_tasks.map(f => f());\r\n\tinit_tasks = [];\r\n\tlet a = Promise.all(promise_list);\r\n\treturn a;\r\n}\r\n","﻿\r\nimport { Sprite } from \"../Sprite.js\";\r\nimport { Animation } from \"../Animation.js\";\r\n\r\n\r\nexport class LifeRenderer /*extends SceneObject*/ {\r\n\tconstructor() {\r\n\t\t//super();\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = \"\";\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {{[action:string]:Animation}} */\r\n\t\tthis.actions = {};\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._action = \"stand\";//static default\r\n\t\t\r\n\t\tthis._raw = null;\r\n\t}\r\n\t\r\n\tget name() {\r\n\t\treturn this.constructor._desc[this.id].name;\r\n\t}\r\n\t\r\n\tgetDefaultAction() {\r\n\t\tif (this.actions.stand) {\r\n\t\t\treturn \"stand\";\r\n\t\t}\r\n\t\telse if(this.actions.fly) {\r\n\t\t\treturn \"fly\";\r\n\t\t}\r\n\t\talert(this.constructor.name + \" (\" + this.id + \") default must is 'stand' or 'fly'\");\r\n\t\treturn new Error(this.constructor.name + \" (\" + this.id + \") default must is 'stand' or 'fly'\");\r\n\t}\r\n\t\r\n\t/** @type {string} */\r\n\tget action() {\r\n\t\treturn this._action;\r\n\t}\r\n\tset action(act) {\r\n\t\tif (this._action != act) {\r\n\t\t\tthis._action = act;\r\n\t\t\tif (this.actions[act]) {\r\n\t\t\t\tthis.actions[act].reset();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t///**\r\n\t// * @param {string} act\r\n\t// */\r\n\t//setAction(act) {\r\n\t//\tthrow new Error(\"Not implement\");\r\n\t//}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tasync load(id) {\r\n\t\tlet tasks = [];\r\n\t\tlet that = this;\r\n\t\tthis.id = id;//\"8880140\";//\"8880141\";//\"8880150\";//\"8880151\";\r\n\t\tthis._url = [this.constructor._base_path, this.id].join(\"/\");\r\n\t\t\r\n\t\tif (!this.constructor._desc[id]) {\r\n\t\t\tlet task = this.constructor.loadDescription(id);\r\n\t\t\ttasks.push(task);\r\n\t\t}\r\n\r\n\t\tlet task = $get.data(this._url).then(async function (raw) {\r\n\t\t\tthat._raw = raw;\r\n\t\t\tif (that._raw) {\r\n\t\t\t\tawait that._construct_actions();\r\n\t\t\t\t\r\n\t\t\t\tthat._action = that.getDefaultAction();//set default action; is fly mob ?\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t});\r\n\t\ttasks.push(task);\r\n\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\tasync _construct_actions() {\r\n\t\tvar tasks = [];\r\n\r\n\t\tfor (var i = 0; i < this.constructor._animations.length; ++i) {\r\n\t\t\tvar t = this.constructor._animations[i];\r\n\r\n\t\t\tfor (var $index = 1; ; ++$index) {\r\n\t\t\t\tlet action;\r\n\t\t\t\tvar name = eval(t);\r\n\r\n\t\t\t\tif (!(name in this._raw)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taction = new Animation(this._raw[name], [this._url, name].join(\"/\"));\r\n\t\t\t\taction.is_loop = false;\r\n\t\t\t\t\r\n\t\t\t\ttasks.push(action.load());\r\n\t\t\t\t\r\n\t\t\t\tthis.actions[name] = action;\r\n\r\n\t\t\t\tif (!name.endsWith($index)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.actions[this.action]) {\r\n\t\t\tconst ani = this.actions[this.action];\r\n\t\t\t\r\n\t\t\tani.update(stamp);\r\n\t\t\t\t\r\n\t\t\t//TODO: move this code to: MapLifeEntity.prototype._applyState\r\n\t\t\t//if (ani.isEnd()) {\r\n\t\t\t//\tthis.action = this.getDefaultAction();//default loop action: stand\r\n\t\t\t//\tthis.actions[this.action].update(stamp);\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * paint\r\n\t * @param {Engine} engine\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\tdraw(engine, x, y, angle, flip) {\r\n\t\tif (this.actions[this.action]) {\r\n\t\t\t/** @type {Animation} */\r\n\t\t\tconst act = this.actions[this.action];\r\n\t\t\tact.draw(engine, x, y, angle, flip);\r\n\t\t}\r\n\t}\r\n\tpaint(engine) {\r\n\t\tdebugger;\r\n\t\talert(\"Not Implement\");\r\n\t\trender(engine);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\talert(\"Not Implement\");\r\n\t}\r\n\r\n\tstatic get _animations() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n","﻿\r\nimport { Animation } from \"../Animation.js\"\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { RenderingOption } from \"./RenderingOption\";\r\n\r\n/**\r\n * @interface\r\n */\r\nexport class LayerObject {\r\n\tconstructor() {\r\n\t\t/** @type {number} = 0~1 */\r\n\t\tthis.opacity = 1;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\tconsole.error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\tthrow new Error();\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {LayerObject}\r\n */\r\nexport class Layer {\r\n\tconstructor() {\r\n\t\t/** @type {LayerObject[]} */\r\n\t\tthis.objects = [];\r\n\t\t\r\n\t\tthis.rendering_option = new RenderingOption();\r\n\t}\r\n\t\r\n\tadd(obj) {\r\n\t\tthis.objects.push(obj);\r\n\t}\r\n\t\r\n\tclear() {\r\n\t\tthis.objects.length = 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.objects = this.objects.filter(function (obj) {\r\n\t\t\tif (!obj.isEnd || !obj.destroy) {\r\n\t\t\t\tconsole.error(\"%o: %o\", obj.constructor ? obj.constructor.name : (typeof obj), obj);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (obj.isEnd()) {\r\n\t\t\t\tobj.destroy();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tobj.update(stamp);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\tconst opt = this.rendering_option.mul(option);\r\n\t\t\r\n\t\tif (opt.opacity > 0) {\r\n\t\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\t\tthis.objects.forEach(function (obj) {\r\n\t\t\t\tobj.render(renderer, opt);\r\n\t\t\t});\r\n\r\n\t\t\trenderer.popGlobalAlpha();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport function b2Assert(condition, ...args) {\r\n    if (!condition) {\r\n        // debugger;\r\n        throw new Error(...args);\r\n    }\r\n}\r\nexport function b2Maybe(value, def) {\r\n    return value !== undefined ? value : def;\r\n}\r\nexport const b2_maxFloat = 1E+37; // FLT_MAX instead of Number.MAX_VALUE;\r\nexport const b2_epsilon = 1E-5; // FLT_EPSILON instead of Number.MIN_VALUE;\r\nexport const b2_epsilon_sq = (b2_epsilon * b2_epsilon);\r\nexport const b2_pi = 3.14159265359; // Math.PI;\r\n/// @file\r\n/// Global tuning constants based on meters-kilograms-seconds (MKS) units.\r\n///\r\n// Collision\r\n/// The maximum number of contact points between two convex shapes. Do\r\n/// not change this value.\r\nexport const b2_maxManifoldPoints = 2;\r\n/// The maximum number of vertices on a convex polygon. You cannot increase\r\n/// this too much because b2BlockAllocator has a maximum object size.\r\nexport const b2_maxPolygonVertices = 8;\r\n/// This is used to fatten AABBs in the dynamic tree. This allows proxies\r\n/// to move by a small amount without triggering a tree adjustment.\r\n/// This is in meters.\r\nexport const b2_aabbExtension = 0.1;\r\n/// This is used to fatten AABBs in the dynamic tree. This is used to predict\r\n/// the future position based on the current displacement.\r\n/// This is a dimensionless multiplier.\r\nexport const b2_aabbMultiplier = 2;\r\n/// A small length used as a collision and constraint tolerance. Usually it is\r\n/// chosen to be numerically significant, but visually insignificant.\r\nexport const b2_linearSlop = 0.008; // 0.005;\r\n/// A small angle used as a collision and constraint tolerance. Usually it is\r\n/// chosen to be numerically significant, but visually insignificant.\r\nexport const b2_angularSlop = 2 / 180 * b2_pi;\r\n/// The radius of the polygon/edge shape skin. This should not be modified. Making\r\n/// this smaller means polygons will have an insufficient buffer for continuous collision.\r\n/// Making it larger may create artifacts for vertex collision.\r\nexport const b2_polygonRadius = 2 * b2_linearSlop;\r\n/// Maximum number of sub-steps per contact in continuous physics simulation.\r\nexport const b2_maxSubSteps = 8;\r\n// Dynamics\r\n/// Maximum number of contacts to be handled to solve a TOI impact.\r\nexport const b2_maxTOIContacts = 32;\r\n/// A velocity threshold for elastic collisions. Any collision with a relative linear\r\n/// velocity below this threshold will be treated as inelastic.\r\nexport const b2_velocityThreshold = 1;\r\n/// The maximum linear position correction used when solving constraints. This helps to\r\n/// prevent overshoot.\r\nexport const b2_maxLinearCorrection = 0.2;\r\n/// The maximum angular position correction used when solving constraints. This helps to\r\n/// prevent overshoot.\r\nexport const b2_maxAngularCorrection = 8 / 180 * b2_pi;\r\n/// The maximum linear velocity of a body. This limit is very large and is used\r\n/// to prevent numerical problems. You shouldn't need to adjust this.\r\nexport const b2_maxTranslation = 2;\r\nexport const b2_maxTranslationSquared = b2_maxTranslation * b2_maxTranslation;\r\n/// The maximum angular velocity of a body. This limit is very large and is used\r\n/// to prevent numerical problems. You shouldn't need to adjust this.\r\nexport const b2_maxRotation = 0.5 * b2_pi;\r\nexport const b2_maxRotationSquared = b2_maxRotation * b2_maxRotation;\r\n/// This scale factor controls how fast overlap is resolved. Ideally this would be 1 so\r\n/// that overlap is removed in one time step. However using values close to 1 often lead\r\n/// to overshoot.\r\nexport const b2_baumgarte = 0.2;\r\nexport const b2_toiBaumgarte = 0.75;\r\n// #if B2_ENABLE_PARTICLE\r\n// Particle\r\n/// A symbolic constant that stands for particle allocation error.\r\nexport const b2_invalidParticleIndex = -1;\r\nexport const b2_maxParticleIndex = 0x7FFFFFFF;\r\n/// The default distance between particles, multiplied by the particle diameter.\r\nexport const b2_particleStride = 0.75;\r\n/// The minimum particle weight that produces pressure.\r\nexport const b2_minParticleWeight = 1.0;\r\n/// The upper limit for particle pressure.\r\nexport const b2_maxParticlePressure = 0.25;\r\n/// The upper limit for force between particles.\r\nexport const b2_maxParticleForce = 0.5;\r\n/// The maximum distance between particles in a triad, multiplied by the particle diameter.\r\nexport const b2_maxTriadDistance = 2.0;\r\nexport const b2_maxTriadDistanceSquared = (b2_maxTriadDistance * b2_maxTriadDistance);\r\n/// The initial size of particle data buffers.\r\nexport const b2_minParticleSystemBufferCapacity = 256;\r\n/// The time into the future that collisions against barrier particles will be detected.\r\nexport const b2_barrierCollisionTime = 2.5;\r\n// #endif\r\n// Sleep\r\n/// The time that a body must be still before it will go to sleep.\r\nexport const b2_timeToSleep = 0.5;\r\n/// A body cannot sleep if its linear velocity is above this tolerance.\r\nexport const b2_linearSleepTolerance = 0.01;\r\n/// A body cannot sleep if its angular velocity is above this tolerance.\r\nexport const b2_angularSleepTolerance = 2 / 180 * b2_pi;\r\n// Memory Allocation\r\n/// Implement this function to use your own memory allocator.\r\nexport function b2Alloc(size) {\r\n    return null;\r\n}\r\n/// If you implement b2Alloc, you should also implement this function.\r\nexport function b2Free(mem) {\r\n}\r\n/// Logging function.\r\nexport function b2Log(message, ...args) {\r\n    // console.log(message, ...args);\r\n}\r\n/// Version numbering scheme.\r\n/// See http://en.wikipedia.org/wiki/Software_versioning\r\nexport class b2Version {\r\n    constructor(major = 0, minor = 0, revision = 0) {\r\n        this.major = 0; ///< significant changes\r\n        this.minor = 0; ///< incremental changes\r\n        this.revision = 0; ///< bug fixes\r\n        this.major = major;\r\n        this.minor = minor;\r\n        this.revision = revision;\r\n    }\r\n    toString() {\r\n        return this.major + \".\" + this.minor + \".\" + this.revision;\r\n    }\r\n}\r\n/// Current version.\r\nexport const b2_version = new b2Version(2, 3, 2);\r\nexport const b2_branch = \"master\";\r\nexport const b2_commit = \"fbf51801d80fc389d43dc46524520e89043b6faf\";\r\nexport function b2ParseInt(v) {\r\n    return parseInt(v, 10);\r\n}\r\nexport function b2ParseUInt(v) {\r\n    return Math.abs(parseInt(v, 10));\r\n}\r\nexport function b2MakeArray(length, init) {\r\n    const a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(init(i));\r\n    }\r\n    return a;\r\n}\r\nexport function b2MakeNullArray(length) {\r\n    const a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(null);\r\n    }\r\n    return a;\r\n}\r\nexport function b2MakeNumberArray(length, init = 0) {\r\n    const a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(init);\r\n    }\r\n    return a;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbW1vbi9iMlNldHRpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTSxVQUFVLFFBQVEsQ0FBQyxTQUFrQixFQUFFLEdBQUcsSUFBVztJQUN6RCxJQUFJLENBQUMsU0FBUyxFQUFFO1FBQ2QsWUFBWTtRQUNaLE1BQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztLQUMxQjtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsT0FBTyxDQUFJLEtBQW9CLEVBQUUsR0FBTTtJQUNyRCxPQUFPLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0FBQzNDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQVcsS0FBSyxDQUFDLENBQUMsdUNBQXVDO0FBQ2pGLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBVyxJQUFJLENBQUMsQ0FBQywyQ0FBMkM7QUFDbkYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFXLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQyxDQUFDO0FBQy9ELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBVyxhQUFhLENBQUMsQ0FBQyxXQUFXO0FBRXZELFNBQVM7QUFDVCwwRUFBMEU7QUFDMUUsR0FBRztBQUVILFlBQVk7QUFFWixzRUFBc0U7QUFDdEUsMEJBQTBCO0FBQzFCLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFXLENBQUMsQ0FBQztBQUU5QywyRUFBMkU7QUFDM0UscUVBQXFFO0FBQ3JFLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFXLENBQUMsQ0FBQztBQUUvQyx5RUFBeUU7QUFDekUsbUVBQW1FO0FBQ25FLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBVyxHQUFHLENBQUM7QUFFNUMs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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"./b2Settings\";\r\nimport { b2_pi, b2_epsilon, b2MakeArray } from \"./b2Settings\";\r\nexport const b2_pi_over_180 = b2_pi / 180;\r\nexport const b2_180_over_pi = 180 / b2_pi;\r\nexport const b2_two_pi = 2 * b2_pi;\r\nexport const b2Abs = Math.abs;\r\nexport const b2Min = Math.min;\r\nexport const b2Max = Math.max;\r\nexport function b2Clamp(a, lo, hi) {\r\n    return (a < lo) ? (lo) : ((a > hi) ? (hi) : (a));\r\n}\r\nexport function b2Swap(a, b) {\r\n    // DEBUG: b2Assert(false);\r\n    const tmp = a[0];\r\n    a[0] = b[0];\r\n    b[0] = tmp;\r\n}\r\n/// This function is used to ensure that a floating point number is\r\n/// not a NaN or infinity.\r\nexport const b2IsValid = isFinite;\r\nexport function b2Sq(n) {\r\n    return n * n;\r\n}\r\n/// This is a approximate yet fast inverse square-root.\r\nexport function b2InvSqrt(n) {\r\n    return 1 / Math.sqrt(n);\r\n}\r\nexport const b2Sqrt = Math.sqrt;\r\nexport const b2Pow = Math.pow;\r\nexport function b2DegToRad(degrees) {\r\n    return degrees * b2_pi_over_180;\r\n}\r\nexport function b2RadToDeg(radians) {\r\n    return radians * b2_180_over_pi;\r\n}\r\nexport const b2Cos = Math.cos;\r\nexport const b2Sin = Math.sin;\r\nexport const b2Acos = Math.acos;\r\nexport const b2Asin = Math.asin;\r\nexport const b2Atan2 = Math.atan2;\r\nexport function b2NextPowerOfTwo(x) {\r\n    x |= (x >> 1) & 0x7FFFFFFF;\r\n    x |= (x >> 2) & 0x3FFFFFFF;\r\n    x |= (x >> 4) & 0x0FFFFFFF;\r\n    x |= (x >> 8) & 0x00FFFFFF;\r\n    x |= (x >> 16) & 0x0000FFFF;\r\n    return x + 1;\r\n}\r\nexport function b2IsPowerOfTwo(x) {\r\n    return x > 0 && (x & (x - 1)) === 0;\r\n}\r\nexport function b2Random() {\r\n    return Math.random() * 2 - 1;\r\n}\r\nexport function b2RandomRange(lo, hi) {\r\n    return (hi - lo) * Math.random() + lo;\r\n}\r\n/// A 2D column vector.\r\nexport class b2Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Clone() {\r\n        return new b2Vec2(this.x, this.y);\r\n    }\r\n    SetZero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n    Set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        return this;\r\n    }\r\n    SelfAdd(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        return this;\r\n    }\r\n    SelfAddXY(x, y) {\r\n        this.x += x;\r\n        this.y += y;\r\n        return this;\r\n    }\r\n    SelfSub(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        return this;\r\n    }\r\n    SelfSubXY(x, y) {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        return this;\r\n    }\r\n    SelfMul(s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        return this;\r\n    }\r\n    SelfMulAdd(s, v) {\r\n        this.x += s * v.x;\r\n        this.y += s * v.y;\r\n        return this;\r\n    }\r\n    SelfMulSub(s, v) {\r\n        this.x -= s * v.x;\r\n        this.y -= s * v.y;\r\n        return this;\r\n    }\r\n    Dot(v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n    Cross(v) {\r\n        return this.x * v.y - this.y * v.x;\r\n    }\r\n    Length() {\r\n        const x = this.x, y = this.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n    LengthSquared() {\r\n        const x = this.x, y = this.y;\r\n        return (x * x + y * y);\r\n    }\r\n    Normalize() {\r\n        const length = this.Length();\r\n        if (length >= b2_epsilon) {\r\n            const inv_length = 1 / length;\r\n            this.x *= inv_length;\r\n            this.y *= inv_length;\r\n        }\r\n        return length;\r\n    }\r\n    SelfNormalize() {\r\n        const length = this.Length();\r\n        if (length >= b2_epsilon) {\r\n            const inv_length = 1 / length;\r\n            this.x *= inv_length;\r\n            this.y *= inv_length;\r\n        }\r\n        return this;\r\n    }\r\n    SelfRotate(radians) {\r\n        const c = Math.cos(radians);\r\n        const s = Math.sin(radians);\r\n        const x = this.x;\r\n        this.x = c * x - s * this.y;\r\n        this.y = s * x + c * this.y;\r\n        return this;\r\n    }\r\n    IsValid() {\r\n        return isFinite(this.x) && isFinite(this.y);\r\n    }\r\n    SelfCrossVS(s) {\r\n        const x = this.x;\r\n        this.x = s * this.y;\r\n        this.y = -s * x;\r\n        return this;\r\n    }\r\n    SelfCrossSV(s) {\r\n        const x = this.x;\r\n        this.x = -s * this.y;\r\n        this.y = s * x;\r\n        return this;\r\n    }\r\n    SelfMinV(v) {\r\n        this.x = b2Min(this.x, v.x);\r\n        this.y = b2Min(this.y, v.y);\r\n        return this;\r\n    }\r\n    SelfMaxV(v) {\r\n        this.x = b2Max(this.x, v.x);\r\n        this.y = b2Max(this.y, v.y);\r\n        return this;\r\n    }\r\n    SelfAbs() {\r\n        this.x = b2Abs(this.x);\r\n        this.y = b2Abs(this.y);\r\n        return this;\r\n    }\r\n    SelfNeg() {\r\n        this.x = (-this.x);\r\n        this.y = (-this.y);\r\n        return this;\r\n    }\r\n    SelfSkew() {\r\n        const x = this.x;\r\n        this.x = -this.y;\r\n        this.y = x;\r\n        return this;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Vec2());\r\n    }\r\n    static AbsV(v, out) {\r\n        out.x = b2Abs(v.x);\r\n        out.y = b2Abs(v.y);\r\n        return out;\r\n    }\r\n    static MinV(a, b, out) {\r\n        out.x = b2Min(a.x, b.x);\r\n        out.y = b2Min(a.y, b.y);\r\n        return out;\r\n    }\r\n    static MaxV(a, b, out) {\r\n        out.x = b2Max(a.x, b.x);\r\n        out.y = b2Max(a.y, b.y);\r\n        return out;\r\n    }\r\n    static ClampV(v, lo, hi, out) {\r\n        out.x = b2Clamp(v.x, lo.x, hi.x);\r\n        out.y = b2Clamp(v.y, lo.y, hi.y);\r\n        return out;\r\n    }\r\n    static RotateV(v, radians, out) {\r\n        const v_x = v.x, v_y = v.y;\r\n        const c = Math.cos(radians);\r\n        const s = Math.sin(radians);\r\n        out.x = c * v_x - s * v_y;\r\n        out.y = s * v_x + c * v_y;\r\n        return out;\r\n    }\r\n    static DotVV(a, b) {\r\n        return a.x * b.x + a.y * b.y;\r\n    }\r\n    static CrossVV(a, b) {\r\n        return a.x * b.y - a.y * b.x;\r\n    }\r\n    static CrossVS(v, s, out) {\r\n        const v_x = v.x;\r\n        out.x = s * v.y;\r\n        out.y = -s * v_x;\r\n        return out;\r\n    }\r\n    static CrossVOne(v, out) {\r\n        const v_x = v.x;\r\n        out.x = v.y;\r\n        out.y = -v_x;\r\n        return out;\r\n    }\r\n    static CrossSV(s, v, out) {\r\n        const v_x = v.x;\r\n        out.x = -s * v.y;\r\n        out.y = s * v_x;\r\n        return out;\r\n    }\r\n    static CrossOneV(v, out) {\r\n        const v_x = v.x;\r\n        out.x = -v.y;\r\n        out.y = v_x;\r\n        return out;\r\n    }\r\n    static AddVV(a, b, out) { out.x = a.x + b.x; out.y = a.y + b.y; return out; }\r\n    static SubVV(a, b, out) { out.x = a.x - b.x; out.y = a.y - b.y; return out; }\r\n    static MulSV(s, v, out) { out.x = v.x * s; out.y = v.y * s; return out; }\r\n    static MulVS(v, s, out) { out.x = v.x * s; out.y = v.y * s; return out; }\r\n    static AddVMulSV(a, s, b, out) { out.x = a.x + (s * b.x); out.y = a.y + (s * b.y); return out; }\r\n    static SubVMulSV(a, s, b, out) { out.x = a.x - (s * b.x); out.y = a.y - (s * b.y); return out; }\r\n    static AddVCrossSV(a, s, v, out) {\r\n        const v_x = v.x;\r\n        out.x = a.x - (s * v.y);\r\n        out.y = a.y + (s * v_x);\r\n        return out;\r\n    }\r\n    static MidVV(a, b, out) { out.x = (a.x + b.x) * 0.5; out.y = (a.y + b.y) * 0.5; return out; }\r\n    static ExtVV(a, b, out) { out.x = (b.x - a.x) * 0.5; out.y = (b.y - a.y) * 0.5; return out; }\r\n    static IsEqualToV(a, b) {\r\n        return a.x === b.x && a.y === b.y;\r\n    }\r\n    static DistanceVV(a, b) {\r\n        const c_x = a.x - b.x;\r\n        const c_y = a.y - b.y;\r\n        return Math.sqrt(c_x * c_x + c_y * c_y);\r\n    }\r\n    static DistanceSquaredVV(a, b) {\r\n        const c_x = a.x - b.x;\r\n        const c_y = a.y - b.y;\r\n        return (c_x * c_x + c_y * c_y);\r\n    }\r\n    static NegV(v, out) { out.x = -v.x; out.y = -v.y; return out; }\r\n}\r\nb2Vec2.ZERO = new b2Vec2(0, 0);\r\nb2Vec2.UNITX = new b2Vec2(1, 0);\r\nb2Vec2.UNITY = new b2Vec2(0, 1);\r\nb2Vec2.s_t0 = new b2Vec2();\r\nb2Vec2.s_t1 = new b2Vec2();\r\nb2Vec2.s_t2 = new b2Vec2();\r\nb2Vec2.s_t3 = new b2Vec2();\r\nexport const b2Vec2_zero = new b2Vec2(0, 0);\r\n/// A 2D column vector with 3 elements.\r\nexport class b2Vec3 {\r\n    constructor(x = 0, y = 0, z = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    Clone() {\r\n        return new b2Vec3(this.x, this.y, this.z);\r\n    }\r\n    SetZero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        return this;\r\n    }\r\n    SetXYZ(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        this.z = other.z;\r\n        return this;\r\n    }\r\n    SelfNeg() {\r\n        this.x = (-this.x);\r\n        this.y = (-this.y);\r\n        this.z = (-this.z);\r\n        return this;\r\n    }\r\n    SelfAdd(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n        return this;\r\n    }\r\n    SelfAddXYZ(x, y, z) {\r\n        this.x += x;\r\n        this.y += y;\r\n        this.z += z;\r\n        return this;\r\n    }\r\n    SelfSub(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n        return this;\r\n    }\r\n    SelfSubXYZ(x, y, z) {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        this.z -= z;\r\n        return this;\r\n    }\r\n    SelfMul(s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        this.z *= s;\r\n        return this;\r\n    }\r\n    static DotV3V3(a, b) {\r\n        return a.x * b.x + a.y * b.y + a.z * b.z;\r\n    }\r\n    static CrossV3V3(a, b, out) {\r\n        const a_x = a.x, a_y = a.y, a_z = a.z;\r\n        const b_x = b.x, b_y = b.y, b_z = b.z;\r\n        out.x = a_y * b_z - a_z * b_y;\r\n        out.y = a_z * b_x - a_x * b_z;\r\n        out.z = a_x * b_y - a_y * b_x;\r\n        return out;\r\n    }\r\n}\r\nb2Vec3.ZERO = new b2Vec3(0, 0, 0);\r\nb2Vec3.s_t0 = new b2Vec3();\r\n/// A 2-by-2 matrix. Stored in column-major order.\r\nexport class b2Mat22 {\r\n    constructor() {\r\n        this.ex = new b2Vec2(1, 0);\r\n        this.ey = new b2Vec2(0, 1);\r\n    }\r\n    Clone() {\r\n        return new b2Mat22().Copy(this);\r\n    }\r\n    static FromVV(c1, c2) {\r\n        return new b2Mat22().SetVV(c1, c2);\r\n    }\r\n    static FromSSSS(r1c1, r1c2, r2c1, r2c2) {\r\n        return new b2Mat22().SetSSSS(r1c1, r1c2, r2c1, r2c2);\r\n    }\r\n    static FromAngle(radians) {\r\n        return new b2Mat22().SetAngle(radians);\r\n    }\r\n    SetSSSS(r1c1, r1c2, r2c1, r2c2) {\r\n        this.ex.Set(r1c1, r2c1);\r\n        this.ey.Set(r1c2, r2c2);\r\n        return this;\r\n    }\r\n    SetVV(c1, c2) {\r\n        this.ex.Copy(c1);\r\n        this.ey.Copy(c2);\r\n        return this;\r\n    }\r\n    SetAngle(radians) {\r\n        const c = Math.cos(radians);\r\n        const s = Math.sin(radians);\r\n        this.ex.Set(c, s);\r\n        this.ey.Set(-s, c);\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        this.ex.Copy(other.ex);\r\n        this.ey.Copy(other.ey);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.ex.Set(1, 0);\r\n        this.ey.Set(0, 1);\r\n        return this;\r\n    }\r\n    SetZero() {\r\n        this.ex.SetZero();\r\n        this.ey.SetZero();\r\n        return this;\r\n    }\r\n    GetAngle() {\r\n        return Math.atan2(this.ex.y, this.ex.x);\r\n    }\r\n    GetInverse(out) {\r\n        const a = this.ex.x;\r\n        const b = this.ey.x;\r\n        const c = this.ex.y;\r\n        const d = this.ey.y;\r\n        let det = a * d - b * c;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.ex.x = det * d;\r\n        out.ey.x = (-det * b);\r\n        out.ex.y = (-det * c);\r\n        out.ey.y = det * a;\r\n        return out;\r\n    }\r\n    Solve(b_x, b_y, out) {\r\n        const a11 = this.ex.x, a12 = this.ey.x;\r\n        const a21 = this.ex.y, a22 = this.ey.y;\r\n        let det = a11 * a22 - a12 * a21;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (a22 * b_x - a12 * b_y);\r\n        out.y = det * (a11 * b_y - a21 * b_x);\r\n        return out;\r\n    }\r\n    SelfAbs() {\r\n        this.ex.SelfAbs();\r\n        this.ey.SelfAbs();\r\n        return this;\r\n    }\r\n    SelfInv() {\r\n        this.GetInverse(this);\r\n        return this;\r\n    }\r\n    SelfAddM(M) {\r\n        this.ex.SelfAdd(M.ex);\r\n        this.ey.SelfAdd(M.ey);\r\n        return this;\r\n    }\r\n    SelfSubM(M) {\r\n        this.ex.SelfSub(M.ex);\r\n        this.ey.SelfSub(M.ey);\r\n        return this;\r\n    }\r\n    static AbsM(M, out) {\r\n        const M_ex = M.ex, M_ey = M.ey;\r\n        out.ex.x = b2Abs(M_ex.x);\r\n        out.ex.y = b2Abs(M_ex.y);\r\n        out.ey.x = b2Abs(M_ey.x);\r\n        out.ey.y = b2Abs(M_ey.y);\r\n        return out;\r\n    }\r\n    static MulMV(M, v, out) {\r\n        const M_ex = M.ex, M_ey = M.ey;\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = M_ex.x * v_x + M_ey.x * v_y;\r\n        out.y = M_ex.y * v_x + M_ey.y * v_y;\r\n        return out;\r\n    }\r\n    static MulTMV(M, v, out) {\r\n        const M_ex = M.ex, M_ey = M.ey;\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = M_ex.x * v_x + M_ex.y * v_y;\r\n        out.y = M_ey.x * v_x + M_ey.y * v_y;\r\n        return out;\r\n    }\r\n    static AddMM(A, B, out) {\r\n        const A_ex = A.ex, A_ey = A.ey;\r\n        const B_ex = B.ex, B_ey = B.ey;\r\n        out.ex.x = A_ex.x + B_ex.x;\r\n        out.ex.y = A_ex.y + B_ex.y;\r\n        out.ey.x = A_ey.x + B_ey.x;\r\n        out.ey.y = A_ey.y + B_ey.y;\r\n        return out;\r\n    }\r\n    static MulMM(A, B, out) {\r\n        const A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n        const A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n        const B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n        const B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n        out.ex.x = A_ex_x * B_ex_x + A_ey_x * B_ex_y;\r\n        out.ex.y = A_ex_y * B_ex_x + A_ey_y * B_ex_y;\r\n        out.ey.x = A_ex_x * B_ey_x + A_ey_x * B_ey_y;\r\n        out.ey.y = A_ex_y * B_ey_x + A_ey_y * B_ey_y;\r\n        return out;\r\n    }\r\n    static MulTMM(A, B, out) {\r\n        const A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n        const A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n        const B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n        const B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n        out.ex.x = A_ex_x * B_ex_x + A_ex_y * B_ex_y;\r\n        out.ex.y = A_ey_x * B_ex_x + A_ey_y * B_ex_y;\r\n        out.ey.x = A_ex_x * B_ey_x + A_ex_y * B_ey_y;\r\n        out.ey.y = A_ey_x * B_ey_x + A_ey_y * B_ey_y;\r\n        return out;\r\n    }\r\n}\r\nb2Mat22.IDENTITY = new b2Mat22();\r\n/// A 3-by-3 matrix. Stored in column-major order.\r\nexport class b2Mat33 {\r\n    constructor() {\r\n        this.ex = new b2Vec3(1, 0, 0);\r\n        this.ey = new b2Vec3(0, 1, 0);\r\n        this.ez = new b2Vec3(0, 0, 1);\r\n    }\r\n    Clone() {\r\n        return new b2Mat33().Copy(this);\r\n    }\r\n    SetVVV(c1, c2, c3) {\r\n        this.ex.Copy(c1);\r\n        this.ey.Copy(c2);\r\n        this.ez.Copy(c3);\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        this.ex.Copy(other.ex);\r\n        this.ey.Copy(other.ey);\r\n        this.ez.Copy(other.ez);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.ex.SetXYZ(1, 0, 0);\r\n        this.ey.SetXYZ(0, 1, 0);\r\n        this.ez.SetXYZ(0, 0, 1);\r\n        return this;\r\n    }\r\n    SetZero() {\r\n        this.ex.SetZero();\r\n        this.ey.SetZero();\r\n        this.ez.SetZero();\r\n        return this;\r\n    }\r\n    SelfAddM(M) {\r\n        this.ex.SelfAdd(M.ex);\r\n        this.ey.SelfAdd(M.ey);\r\n        this.ez.SelfAdd(M.ez);\r\n        return this;\r\n    }\r\n    Solve33(b_x, b_y, b_z, out) {\r\n        const a11 = this.ex.x, a21 = this.ex.y, a31 = this.ex.z;\r\n        const a12 = this.ey.x, a22 = this.ey.y, a32 = this.ey.z;\r\n        const a13 = this.ez.x, a23 = this.ez.y, a33 = this.ez.z;\r\n        let det = a11 * (a22 * a33 - a32 * a23) + a21 * (a32 * a13 - a12 * a33) + a31 * (a12 * a23 - a22 * a13);\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (b_x * (a22 * a33 - a32 * a23) + b_y * (a32 * a13 - a12 * a33) + b_z * (a12 * a23 - a22 * a13));\r\n        out.y = det * (a11 * (b_y * a33 - b_z * a23) + a21 * (b_z * a13 - b_x * a33) + a31 * (b_x * a23 - b_y * a13));\r\n        out.z = det * (a11 * (a22 * b_z - a32 * b_y) + a21 * (a32 * b_x - a12 * b_z) + a31 * (a12 * b_y - a22 * b_x));\r\n        return out;\r\n    }\r\n    Solve22(b_x, b_y, out) {\r\n        const a11 = this.ex.x, a12 = this.ey.x;\r\n        const a21 = this.ex.y, a22 = this.ey.y;\r\n        let det = a11 * a22 - a12 * a21;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (a22 * b_x - a12 * b_y);\r\n        out.y = det * (a11 * b_y - a21 * b_x);\r\n        return out;\r\n    }\r\n    GetInverse22(M) {\r\n        const a = this.ex.x, b = this.ey.x, c = this.ex.y, d = this.ey.y;\r\n        let det = a * d - b * c;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        M.ex.x = det * d;\r\n        M.ey.x = -det * b;\r\n        M.ex.z = 0;\r\n        M.ex.y = -det * c;\r\n        M.ey.y = det * a;\r\n        M.ey.z = 0;\r\n        M.ez.x = 0;\r\n        M.ez.y = 0;\r\n        M.ez.z = 0;\r\n    }\r\n    GetSymInverse33(M) {\r\n        let det = b2Vec3.DotV3V3(this.ex, b2Vec3.CrossV3V3(this.ey, this.ez, b2Vec3.s_t0));\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        const a11 = this.ex.x, a12 = this.ey.x, a13 = this.ez.x;\r\n        const a22 = this.ey.y, a23 = this.ez.y;\r\n        const a33 = this.ez.z;\r\n        M.ex.x = det * (a22 * a33 - a23 * a23);\r\n        M.ex.y = det * (a13 * a23 - a12 * a33);\r\n        M.ex.z = det * (a12 * a23 - a13 * a22);\r\n        M.ey.x = M.ex.y;\r\n        M.ey.y = det * (a11 * a33 - a13 * a13);\r\n        M.ey.z = det * (a13 * a12 - a11 * a23);\r\n        M.ez.x = M.ex.z;\r\n        M.ez.y = M.ey.z;\r\n        M.ez.z = det * (a11 * a22 - a12 * a12);\r\n    }\r\n    static MulM33V3(A, v, out) {\r\n        const v_x = v.x, v_y = v.y, v_z = v.z;\r\n        out.x = A.ex.x * v_x + A.ey.x * v_y + A.ez.x * v_z;\r\n        out.y = A.ex.y * v_x + A.ey.y * v_y + A.ez.y * v_z;\r\n        out.z = A.ex.z * v_x + A.ey.z * v_y + A.ez.z * v_z;\r\n        return out;\r\n    }\r\n    static MulM33XYZ(A, x, y, z, out) {\r\n        out.x = A.ex.x * x + A.ey.x * y + A.ez.x * z;\r\n        out.y = A.ex.y * x + A.ey.y * y + A.ez.y * z;\r\n        out.z = A.ex.z * x + A.ey.z * y + A.ez.z * z;\r\n        return out;\r\n    }\r\n    static MulM33V2(A, v, out) {\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = A.ex.x * v_x + A.ey.x * v_y;\r\n        out.y = A.ex.y * v_x + A.ey.y * v_y;\r\n        return out;\r\n    }\r\n    static MulM33XY(A, x, y, out) {\r\n        out.x = A.ex.x * x + A.ey.x * y;\r\n        out.y = A.ex.y * x + A.ey.y * y;\r\n        return out;\r\n    }\r\n}\r\nb2Mat33.IDENTITY = new b2Mat33();\r\n/// Rotation\r\nexport class b2Rot {\r\n    constructor(angle = 0) {\r\n        this.s = 0;\r\n        this.c = 1;\r\n        if (angle) {\r\n            this.s = Math.sin(angle);\r\n            this.c = Math.cos(angle);\r\n        }\r\n    }\r\n    Clone() {\r\n        return new b2Rot().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.s = other.s;\r\n        this.c = other.c;\r\n        return this;\r\n    }\r\n    SetAngle(angle) {\r\n        this.s = Math.sin(angle);\r\n        this.c = Math.cos(angle);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.s = 0;\r\n        this.c = 1;\r\n        return this;\r\n    }\r\n    GetAngle() {\r\n        return Math.atan2(this.s, this.c);\r\n    }\r\n    GetXAxis(out) {\r\n        out.x = this.c;\r\n        out.y = this.s;\r\n        return out;\r\n    }\r\n    GetYAxis(out) {\r\n        out.x = -this.s;\r\n        out.y = this.c;\r\n        return out;\r\n    }\r\n    static MulRR(q, r, out) {\r\n        // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\r\n        // [qs  qc]   [rs  rc]   [qs*rc+qc*rs -qs*rs+qc*rc]\r\n        // s = qs * rc + qc * rs\r\n        // c = qc * rc - qs * rs\r\n        const q_c = q.c, q_s = q.s;\r\n        const r_c = r.c, r_s = r.s;\r\n        out.s = q_s * r_c + q_c * r_s;\r\n        out.c = q_c * r_c - q_s * r_s;\r\n        return out;\r\n    }\r\n    static MulTRR(q, r, out) {\r\n        // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\r\n        // [-qs qc]   [rs  rc]   [-qs*rc+qc*rs qs*rs+qc*rc]\r\n        // s = qc * rs - qs * rc\r\n        // c = qc * rc + qs * rs\r\n        const q_c = q.c, q_s = q.s;\r\n        const r_c = r.c, r_s = r.s;\r\n        out.s = q_c * r_s - q_s * r_c;\r\n        out.c = q_c * r_c + q_s * r_s;\r\n        return out;\r\n    }\r\n    static MulRV(q, v, out) {\r\n        const q_c = q.c, q_s = q.s;\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = q_c * v_x - q_s * v_y;\r\n        out.y = q_s * v_x + q_c * v_y;\r\n        return out;\r\n    }\r\n    static MulTRV(q, v, out) {\r\n        const q_c = q.c, q_s = q.s;\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = q_c * v_x + q_s * v_y;\r\n        out.y = -q_s * v_x + q_c * v_y;\r\n        return out;\r\n    }\r\n}\r\nb2Rot.IDENTITY = new b2Rot();\r\n/// A transform contains translation and rotation. It is used to represent\r\n/// the position and orientation of rigid frames.\r\nexport class b2Transform {\r\n    constructor() {\r\n        this.p = new b2Vec2();\r\n        this.q = new b2Rot();\r\n    }\r\n    Clone() {\r\n        return new b2Transform().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.p.Copy(other.p);\r\n        this.q.Copy(other.q);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.p.SetZero();\r\n        this.q.SetIdentity();\r\n        return this;\r\n    }\r\n    SetPositionRotation(position, q) {\r\n        this.p.Copy(position);\r\n        this.q.Copy(q);\r\n        return this;\r\n    }\r\n    SetPositionAngle(pos, a) {\r\n        this.p.Copy(pos);\r\n        this.q.SetAngle(a);\r\n        return this;\r\n    }\r\n    SetPosition(position) {\r\n        this.p.Copy(position);\r\n        return this;\r\n    }\r\n    SetPositionXY(x, y) {\r\n        this.p.Set(x, y);\r\n        return this;\r\n    }\r\n    SetRotation(rotation) {\r\n        this.q.Copy(rotation);\r\n        return this;\r\n    }\r\n    SetRotationAngle(radians) {\r\n        this.q.SetAngle(radians);\r\n        return this;\r\n    }\r\n    GetPosition() {\r\n        return this.p;\r\n    }\r\n    GetRotation() {\r\n        return this.q;\r\n    }\r\n    GetRotationAngle() {\r\n        return this.q.GetAngle();\r\n    }\r\n    GetAngle() {\r\n        return this.q.GetAngle();\r\n    }\r\n    static MulXV(T, v, out) {\r\n        // float32 x = (T.q.c * v.x - T.q.s * v.y) + T.p.x;\r\n        // float32 y = (T.q.s * v.x + T.q.c * v.y) + T.p.y;\r\n        // return b2Vec2(x, y);\r\n        const T_q_c = T.q.c, T_q_s = T.q.s;\r\n        const v_x = v.x, v_y = v.y;\r\n        out.x = (T_q_c * v_x - T_q_s * v_y) + T.p.x;\r\n        out.y = (T_q_s * v_x + T_q_c * v_y) + T.p.y;\r\n        return out;\r\n    }\r\n    static MulTXV(T, v, out) {\r\n        // float32 px = v.x - T.p.x;\r\n        // float32 py = v.y - T.p.y;\r\n        // float32 x = (T.q.c * px + T.q.s * py);\r\n        // float32 y = (-T.q.s * px + T.q.c * py);\r\n        // return b2Vec2(x, y);\r\n        const T_q_c = T.q.c, T_q_s = T.q.s;\r\n        const p_x = v.x - T.p.x;\r\n        const p_y = v.y - T.p.y;\r\n        out.x = (T_q_c * p_x + T_q_s * p_y);\r\n        out.y = (-T_q_s * p_x + T_q_c * p_y);\r\n        return out;\r\n    }\r\n    static MulXX(A, B, out) {\r\n        b2Rot.MulRR(A.q, B.q, out.q);\r\n        b2Vec2.AddVV(b2Rot.MulRV(A.q, B.p, out.p), A.p, out.p);\r\n        return out;\r\n    }\r\n    static MulTXX(A, B, out) {\r\n        b2Rot.MulTRR(A.q, B.q, out.q);\r\n        b2Rot.MulTRV(A.q, b2Vec2.SubVV(B.p, A.p, out.p), out.p);\r\n        return out;\r\n    }\r\n}\r\nb2Transform.IDENTITY = new b2Transform();\r\n/// This describes the motion of a body/shape for TOI computation.\r\n/// Shapes are defined with respect to the body origin, which may\r\n/// no coincide with the center of mass. However, to support dynamics\r\n/// we must interpolate the center of mass position.\r\nexport class b2Sweep {\r\n    constructor() {\r\n        this.localCenter = new b2Vec2();\r\n        this.c0 = new b2Vec2();\r\n        this.c = new b2Vec2();\r\n        this.a0 = 0;\r\n        this.a = 0;\r\n        this.alpha0 = 0;\r\n    }\r\n    Clone() {\r\n        return new b2Sweep().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.localCenter.Copy(other.localCenter);\r\n        this.c0.Copy(other.c0);\r\n        this.c.Copy(other.c);\r\n        this.a0 = other.a0;\r\n        this.a = other.a;\r\n        this.alpha0 = other.alpha0;\r\n        return this;\r\n    }\r\n    GetTransform(xf, beta) {\r\n        const one_minus_beta = (1 - beta);\r\n        xf.p.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n        xf.p.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n        const angle = one_minus_beta * this.a0 + beta * this.a;\r\n        xf.q.SetAngle(angle);\r\n        xf.p.SelfSub(b2Rot.MulRV(xf.q, this.localCenter, b2Vec2.s_t0));\r\n        return xf;\r\n    }\r\n    Advance(alpha) {\r\n        // DEBUG: b2Assert(this.alpha0 < 1);\r\n        const beta = (alpha - this.alpha0) / (1 - this.alpha0);\r\n        const one_minus_beta = (1 - beta);\r\n        this.c0.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n        this.c0.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n        this.a0 = one_minus_beta * this.a0 + beta * this.a;\r\n        this.alpha0 = alpha;\r\n    }\r\n    Normalize() {\r\n        const d = b2_two_pi * Math.floor(this.a0 / b2_two_pi);\r\n        this.a0 -= d;\r\n        this.a -= d;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// Color for debug drawing. Each value has the range [0,1].\r\nexport class b2Color {\r\n    constructor(rr = 0.5, gg = 0.5, bb = 0.5, aa = 1.0) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n    }\r\n    Clone() {\r\n        return new b2Color().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.r = other.r;\r\n        this.g = other.g;\r\n        this.b = other.b;\r\n        this.a = other.a;\r\n        return this;\r\n    }\r\n    IsEqual(color) {\r\n        return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\r\n    }\r\n    IsZero() {\r\n        return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\r\n    }\r\n    Set(r, g, b, a = this.a) {\r\n        this.SetRGBA(r, g, b, a);\r\n    }\r\n    SetByteRGB(r, g, b) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        return this;\r\n    }\r\n    SetByteRGBA(r, g, b, a) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        this.a = a / 0xff;\r\n        return this;\r\n    }\r\n    SetRGB(rr, gg, bb) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        return this;\r\n    }\r\n    SetRGBA(rr, gg, bb, aa) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n        return this;\r\n    }\r\n    SelfAdd(color) {\r\n        this.r += color.r;\r\n        this.g += color.g;\r\n        this.b += color.b;\r\n        this.a += color.a;\r\n        return this;\r\n    }\r\n    Add(color, out) {\r\n        out.r = this.r + color.r;\r\n        out.g = this.g + color.g;\r\n        out.b = this.b + color.b;\r\n        out.a = this.a + color.a;\r\n        return out;\r\n    }\r\n    SelfSub(color) {\r\n        this.r -= color.r;\r\n        this.g -= color.g;\r\n        this.b -= color.b;\r\n        this.a -= color.a;\r\n        return this;\r\n    }\r\n    Sub(color, out) {\r\n        out.r = this.r - color.r;\r\n        out.g = this.g - color.g;\r\n        out.b = this.b - color.b;\r\n        out.a = this.a - color.a;\r\n        return out;\r\n    }\r\n    SelfMul(s) {\r\n        this.r *= s;\r\n        this.g *= s;\r\n        this.b *= s;\r\n        this.a *= s;\r\n        return this;\r\n    }\r\n    Mul(s, out) {\r\n        out.r = this.r * s;\r\n        out.g = this.g * s;\r\n        out.b = this.b * s;\r\n        out.a = this.a * s;\r\n        return out;\r\n    }\r\n    Mix(mixColor, strength) {\r\n        b2Color.MixColors(this, mixColor, strength);\r\n    }\r\n    static MixColors(colorA, colorB, strength) {\r\n        const dr = (strength * (colorB.r - colorA.r));\r\n        const dg = (strength * (colorB.g - colorA.g));\r\n        const db = (strength * (colorB.b - colorA.b));\r\n        const da = (strength * (colorB.a - colorA.a));\r\n        colorA.r += dr;\r\n        colorA.g += dg;\r\n        colorA.b += db;\r\n        colorA.a += da;\r\n        colorB.r -= dr;\r\n        colorB.g -= dg;\r\n        colorB.b -= db;\r\n        colorB.a -= da;\r\n    }\r\n    MakeStyleString(alpha = this.a) {\r\n        return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\r\n    }\r\n    static MakeStyleString(r, g, b, a = 1.0) {\r\n        // function clamp(x: number, lo: number, hi: number) { return x < lo ? lo : hi < x ? hi : x; }\r\n        r *= 255; // r = clamp(r, 0, 255);\r\n        g *= 255; // g = clamp(g, 0, 255);\r\n        b *= 255; // b = clamp(b, 0, 255);\r\n        // a = clamp(a, 0, 1);\r\n        if (a < 1) {\r\n            return `rgba(${r},${g},${b},${a})`;\r\n        }\r\n        else {\r\n            return `rgb(${r},${g},${b})`;\r\n        }\r\n    }\r\n}\r\nb2Color.ZERO = new b2Color(0, 0, 0, 0);\r\nb2Color.RED = new b2Color(1, 0, 0);\r\nb2Color.GREEN = new b2Color(0, 1, 0);\r\nb2Color.BLUE = new b2Color(0, 0, 1);\r\nexport var b2DrawFlags;\r\n(function (b2DrawFlags) {\r\n    b2DrawFlags[b2DrawFlags[\"e_none\"] = 0] = \"e_none\";\r\n    b2DrawFlags[b2DrawFlags[\"e_shapeBit\"] = 1] = \"e_shapeBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_jointBit\"] = 2] = \"e_jointBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_aabbBit\"] = 4] = \"e_aabbBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_pairBit\"] = 8] = \"e_pairBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_centerOfMassBit\"] = 16] = \"e_centerOfMassBit\";\r\n    // #if B2_ENABLE_PARTICLE\r\n    b2DrawFlags[b2DrawFlags[\"e_particleBit\"] = 32] = \"e_particleBit\";\r\n    // #endif\r\n    b2DrawFlags[b2DrawFlags[\"e_controllerBit\"] = 64] = \"e_controllerBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_all\"] = 63] = \"e_all\";\r\n})(b2DrawFlags || (b2DrawFlags = {}));\r\n/// Implement and register this class with a b2World to provide debug drawing of physics\r\n/// entities in your game.\r\nexport class b2Draw {\r\n    constructor() {\r\n        this.m_drawFlags = 0;\r\n    }\r\n    SetFlags(flags) {\r\n        this.m_drawFlags = flags;\r\n    }\r\n    GetFlags() {\r\n        return this.m_drawFlags;\r\n    }\r\n    AppendFlags(flags) {\r\n        this.m_drawFlags |= flags;\r\n    }\r\n    ClearFlags(flags) {\r\n        this.m_drawFlags &= ~flags;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJEcmF3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvQ29tbW9uL2IyRHJhdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQWNGLDREQUE0RDtBQUM1RCxNQUFNLE9BQU8sT0FBTztJQVlsQixZQUFZLEtBQWEsR0FBRyxFQUFFLEtBQWEsR0FBRyxFQUFFLEtBQWEsR0FBRyxFQUFFLEtBQWEsR0FBRztRQUNoRixJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNaLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ1osSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDWixJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNkLENBQUM7SUFFTSxLQUFLO1FBQ1YsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRU0sSUFBSSxDQUFDLEtBQVc7UUFDckIsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLE9BQU8sQ0FBQyxLQUFXO1FBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0RyxDQUFDO0lBRU0sTUFBTTtRQUNYLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzlFLENBQUM7SUFFTSxHQUFHLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTLEVBQUUsSUFBWSxJQUFJLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFTSxVQUFVLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTO1FBQy9DLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDbEIsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLFdBQVcsQ0FBQyxDQUFTLEVBQUUsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTO1FBQzNELElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDbEIsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxNQUFNLENBQUMsRUFBVSxFQUFFLEVBQVUsRUFBRSxFQUFVO1FBQzlD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","/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// Timer for profiling. This has platform specific code and may\r\n/// not work on every platform.\r\nexport class b2Timer {\r\n    constructor() {\r\n        this.m_start = Date.now();\r\n    }\r\n    /// Reset the timer.\r\n    Reset() {\r\n        this.m_start = Date.now();\r\n        return this;\r\n    }\r\n    /// Get the time since construction or the last reset.\r\n    GetMilliseconds() {\r\n        return Date.now() - this.m_start;\r\n    }\r\n}\r\nexport class b2Counter {\r\n    constructor() {\r\n        this.m_count = 0;\r\n        this.m_min_count = 0;\r\n        this.m_max_count = 0;\r\n    }\r\n    GetCount() {\r\n        return this.m_count;\r\n    }\r\n    GetMinCount() {\r\n        return this.m_min_count;\r\n    }\r\n    GetMaxCount() {\r\n        return this.m_max_count;\r\n    }\r\n    ResetCount() {\r\n        const count = this.m_count;\r\n        this.m_count = 0;\r\n        return count;\r\n    }\r\n    ResetMinCount() {\r\n        this.m_min_count = 0;\r\n    }\r\n    ResetMaxCount() {\r\n        this.m_max_count = 0;\r\n    }\r\n    Increment() {\r\n        this.m_count++;\r\n        if (this.m_max_count < this.m_count) {\r\n            this.m_max_count = this.m_count;\r\n        }\r\n    }\r\n    Decrement() {\r\n        this.m_count--;\r\n        if (this.m_min_count > this.m_count) {\r\n            this.m_min_count = this.m_count;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJUaW1lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbW1vbi9iMlRpbWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsZ0VBQWdFO0FBQ2hFLCtCQUErQjtBQUMvQixNQUFNLE9BQU8sT0FBTztJQUFwQjtRQUNTLFlBQU8sR0FBVyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFZdEMsQ0FBQztJQVZDLG9CQUFvQjtJQUNiLEtBQUs7UUFDVixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUMxQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxzREFBc0Q7SUFDL0MsZUFBZTtRQUNwQixPQUFPLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ25DLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxTQUFTO0lBQXRCO1FBQ1MsWUFBTyxHQUFXLENBQUMsQ0FBQztRQUNwQixnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUN4QixnQkFBVyxHQUFXLENBQUMsQ0FBQztJQTJDakMsQ0FBQztJQXpDUSxRQUFRO1FBQ2IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFTSxXQUFXO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBRU0sV0FBVztRQUNoQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVNLFVBQVU7UUFDZixNQUFNLEtBQUssR0FBVyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVNLGFBQWE7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUVNLGFBQWE7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUVNLFNBQVM7UUFDZCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFFZixJQUFJLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNuQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7U0FDakM7SUFDSCxDQUFDO0lBRU0sU0FBUztRQUNkLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUVmLElBQUksSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztTQUNqQztJQUNILENBQUM7Q0FDRiJ9","/*\r\n* Copyright (c) 2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"./b2Settings\";\r\nimport { b2MakeArray } from \"./b2Settings\";\r\n/// This is a growable LIFO stack with an initial capacity of N.\r\n/// If the stack size exceeds the initial capacity, the heap is used\r\n/// to increase the size of the stack.\r\nexport class b2GrowableStack {\r\n    constructor(N) {\r\n        this.m_stack = [];\r\n        this.m_count = 0;\r\n        this.m_stack = b2MakeArray(N, (index) => null);\r\n        this.m_count = 0;\r\n    }\r\n    Reset() {\r\n        this.m_count = 0;\r\n        return this;\r\n    }\r\n    Push(element) {\r\n        this.m_stack[this.m_count] = element;\r\n        this.m_count++;\r\n    }\r\n    Pop() {\r\n        // DEBUG: b2Assert(this.m_count > 0);\r\n        this.m_count--;\r\n        const element = this.m_stack[this.m_count];\r\n        this.m_stack[this.m_count] = null;\r\n        if (element === null) {\r\n            throw new Error();\r\n        }\r\n        return element;\r\n    }\r\n    GetCount() {\r\n        return this.m_count;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJHcm93YWJsZVN0YWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvQ29tbW9uL2IyR3Jvd2FibGVTdGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLGtEQUFrRDtBQUNsRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTNDLGdFQUFnRTtBQUNoRSxvRUFBb0U7QUFDcEUsc0NBQXNDO0FBRXRDLE1BQU0sT0FBTyxlQUFlO0lBSTFCLFlBQVksQ0FBUztRQUhkLFlBQU8sR0FBb0IsRUFBRSxDQUFDO1FBQzlCLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFHekIsSUFBSSxDQUFDLE9BQU8sR0FBRyxXQUFXLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztJQUNuQixDQUFDO0lBRU0sS0FBSztRQUNWLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLElBQUksQ0FBQyxPQUFVO1FBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLE9BQU8sQ0FBQztRQUNyQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVNLEdBQUc7UUFDUixxQ0FBcUM7UUFDckMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2YsTUFBTSxPQUFPLEdBQWEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLElBQUksT0FBTyxLQUFLLElBQUksRUFBRTtZQUFFLE1BQU0sSUFBSSxLQUFLLEVBQUUsQ0FBQztTQUFFO1FBQzVDLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFTSxRQUFRO1FBQ2IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7Q0FDRiJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport class b2BlockAllocator {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJCbG9ja0FsbG9jYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbW1vbi9iMkJsb2NrQWxsb2NhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTSxPQUFPLGdCQUFnQjtDQUFHIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport class b2StackAllocator {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTdGFja0FsbG9jYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbW1vbi9iMlN0YWNrQWxsb2NhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTSxPQUFPLGdCQUFnQjtDQUFHIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_epsilon, b2_epsilon_sq, b2_polygonRadius, b2_linearSlop } from \"../Common/b2Settings\";\r\nimport { b2Max, b2Vec2, b2Rot, b2Transform, b2Abs } from \"../Common/b2Math\";\r\n/// A distance proxy is used by the GJK algorithm.\r\n/// It encapsulates any shape.\r\nexport class b2DistanceProxy {\r\n    constructor() {\r\n        this.m_buffer = b2Vec2.MakeArray(2);\r\n        this.m_vertices = this.m_buffer;\r\n        this.m_count = 0;\r\n        this.m_radius = 0;\r\n    }\r\n    Copy(other) {\r\n        if (other.m_vertices === other.m_buffer) {\r\n            this.m_vertices = this.m_buffer;\r\n            this.m_buffer[0].Copy(other.m_buffer[0]);\r\n            this.m_buffer[1].Copy(other.m_buffer[1]);\r\n        }\r\n        else {\r\n            this.m_vertices = other.m_vertices;\r\n        }\r\n        this.m_count = other.m_count;\r\n        this.m_radius = other.m_radius;\r\n        return this;\r\n    }\r\n    Reset() {\r\n        this.m_vertices = this.m_buffer;\r\n        this.m_count = 0;\r\n        this.m_radius = 0;\r\n        return this;\r\n    }\r\n    SetShape(shape, index) {\r\n        shape.SetupDistanceProxy(this, index);\r\n    }\r\n    SetVerticesRadius(vertices, count, radius) {\r\n        this.m_vertices = vertices;\r\n        this.m_count = count;\r\n        this.m_radius = radius;\r\n    }\r\n    GetSupport(d) {\r\n        let bestIndex = 0;\r\n        let bestValue = b2Vec2.DotVV(this.m_vertices[0], d);\r\n        for (let i = 1; i < this.m_count; ++i) {\r\n            const value = b2Vec2.DotVV(this.m_vertices[i], d);\r\n            if (value > bestValue) {\r\n                bestIndex = i;\r\n                bestValue = value;\r\n            }\r\n        }\r\n        return bestIndex;\r\n    }\r\n    GetSupportVertex(d) {\r\n        let bestIndex = 0;\r\n        let bestValue = b2Vec2.DotVV(this.m_vertices[0], d);\r\n        for (let i = 1; i < this.m_count; ++i) {\r\n            const value = b2Vec2.DotVV(this.m_vertices[i], d);\r\n            if (value > bestValue) {\r\n                bestIndex = i;\r\n                bestValue = value;\r\n            }\r\n        }\r\n        return this.m_vertices[bestIndex];\r\n    }\r\n    GetVertexCount() {\r\n        return this.m_count;\r\n    }\r\n    GetVertex(index) {\r\n        // DEBUG: b2Assert(0 <= index && index < this.m_count);\r\n        return this.m_vertices[index];\r\n    }\r\n}\r\nexport class b2SimplexCache {\r\n    constructor() {\r\n        this.metric = 0;\r\n        this.count = 0;\r\n        this.indexA = [0, 0, 0];\r\n        this.indexB = [0, 0, 0];\r\n    }\r\n    Reset() {\r\n        this.metric = 0;\r\n        this.count = 0;\r\n        return this;\r\n    }\r\n}\r\nexport class b2DistanceInput {\r\n    constructor() {\r\n        this.proxyA = new b2DistanceProxy();\r\n        this.proxyB = new b2DistanceProxy();\r\n        this.transformA = new b2Transform();\r\n        this.transformB = new b2Transform();\r\n        this.useRadii = false;\r\n    }\r\n    Reset() {\r\n        this.proxyA.Reset();\r\n        this.proxyB.Reset();\r\n        this.transformA.SetIdentity();\r\n        this.transformB.SetIdentity();\r\n        this.useRadii = false;\r\n        return this;\r\n    }\r\n}\r\nexport class b2DistanceOutput {\r\n    constructor() {\r\n        this.pointA = new b2Vec2();\r\n        this.pointB = new b2Vec2();\r\n        this.distance = 0;\r\n        this.iterations = 0; ///< number of GJK iterations used\r\n    }\r\n    Reset() {\r\n        this.pointA.SetZero();\r\n        this.pointB.SetZero();\r\n        this.distance = 0;\r\n        this.iterations = 0;\r\n        return this;\r\n    }\r\n}\r\n/// Input parameters for b2ShapeCast\r\nexport class b2ShapeCastInput {\r\n    constructor() {\r\n        this.proxyA = new b2DistanceProxy();\r\n        this.proxyB = new b2DistanceProxy();\r\n        this.transformA = new b2Transform();\r\n        this.transformB = new b2Transform();\r\n        this.translationB = new b2Vec2();\r\n    }\r\n}\r\n/// Output results for b2ShapeCast\r\nexport class b2ShapeCastOutput {\r\n    constructor() {\r\n        this.point = new b2Vec2();\r\n        this.normal = new b2Vec2();\r\n        this.lambda = 0.0;\r\n        this.iterations = 0;\r\n    }\r\n}\r\nexport let b2_gjkCalls = 0;\r\nexport let b2_gjkIters = 0;\r\nexport let b2_gjkMaxIters = 0;\r\nexport function b2_gjk_reset() {\r\n    b2_gjkCalls = 0;\r\n    b2_gjkIters = 0;\r\n    b2_gjkMaxIters = 0;\r\n}\r\nexport class b2SimplexVertex {\r\n    constructor() {\r\n        this.wA = new b2Vec2(); // support point in proxyA\r\n        this.wB = new b2Vec2(); // support point in proxyB\r\n        this.w = new b2Vec2(); // wB - wA\r\n        this.a = 0; // barycentric coordinate for closest point\r\n        this.indexA = 0; // wA index\r\n        this.indexB = 0; // wB index\r\n    }\r\n    Copy(other) {\r\n        this.wA.Copy(other.wA); // support point in proxyA\r\n        this.wB.Copy(other.wB); // support point in proxyB\r\n        this.w.Copy(other.w); // wB - wA\r\n        this.a = other.a; // barycentric coordinate for closest point\r\n        this.indexA = other.indexA; // wA index\r\n        this.indexB = other.indexB; // wB index\r\n        return this;\r\n    }\r\n}\r\nexport class b2Simplex {\r\n    constructor() {\r\n        this.m_v1 = new b2SimplexVertex();\r\n        this.m_v2 = new b2SimplexVertex();\r\n        this.m_v3 = new b2SimplexVertex();\r\n        this.m_vertices = [ /*3*/];\r\n        this.m_count = 0;\r\n        this.m_vertices[0] = this.m_v1;\r\n        this.m_vertices[1] = this.m_v2;\r\n        this.m_vertices[2] = this.m_v3;\r\n    }\r\n    ReadCache(cache, proxyA, transformA, proxyB, transformB) {\r\n        // DEBUG: b2Assert(0 <= cache.count && cache.count <= 3);\r\n        // Copy data from cache.\r\n        this.m_count = cache.count;\r\n        const vertices = this.m_vertices;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const v = vertices[i];\r\n            v.indexA = cache.indexA[i];\r\n            v.indexB = cache.indexB[i];\r\n            const wALocal = proxyA.GetVertex(v.indexA);\r\n            const wBLocal = proxyB.GetVertex(v.indexB);\r\n            b2Transform.MulXV(transformA, wALocal, v.wA);\r\n            b2Transform.MulXV(transformB, wBLocal, v.wB);\r\n            b2Vec2.SubVV(v.wB, v.wA, v.w);\r\n            v.a = 0;\r\n        }\r\n        // Compute the new simplex metric, if it is substantially different than\r\n        // old metric then flush the simplex.\r\n        if (this.m_count > 1) {\r\n            const metric1 = cache.metric;\r\n            const metric2 = this.GetMetric();\r\n            if (metric2 < 0.5 * metric1 || 2 * metric1 < metric2 || metric2 < b2_epsilon) {\r\n                // Reset the simplex.\r\n                this.m_count = 0;\r\n            }\r\n        }\r\n        // If the cache is empty or invalid ...\r\n        if (this.m_count === 0) {\r\n            const v = vertices[0];\r\n            v.indexA = 0;\r\n            v.indexB = 0;\r\n            const wALocal = proxyA.GetVertex(0);\r\n            const wBLocal = proxyB.GetVertex(0);\r\n            b2Transform.MulXV(transformA, wALocal, v.wA);\r\n            b2Transform.MulXV(transformB, wBLocal, v.wB);\r\n            b2Vec2.SubVV(v.wB, v.wA, v.w);\r\n            v.a = 1;\r\n            this.m_count = 1;\r\n        }\r\n    }\r\n    WriteCache(cache) {\r\n        cache.metric = this.GetMetric();\r\n        cache.count = this.m_count;\r\n        const vertices = this.m_vertices;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            cache.indexA[i] = vertices[i].indexA;\r\n            cache.indexB[i] = vertices[i].indexB;\r\n        }\r\n    }\r\n    GetSearchDirection(out) {\r\n        switch (this.m_count) {\r\n            case 1:\r\n                return b2Vec2.NegV(this.m_v1.w, out);\r\n            case 2: {\r\n                const e12 = b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, out);\r\n                const sgn = b2Vec2.CrossVV(e12, b2Vec2.NegV(this.m_v1.w, b2Vec2.s_t0));\r\n                if (sgn > 0) {\r\n                    // Origin is left of e12.\r\n                    return b2Vec2.CrossOneV(e12, out);\r\n                }\r\n                else {\r\n                    // Origin is right of e12.\r\n                    return b2Vec2.CrossVOne(e12, out);\r\n                }\r\n            }\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                return out.SetZero();\r\n        }\r\n    }\r\n    GetClosestPoint(out) {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                // DEBUG: b2Assert(false);\r\n                return out.SetZero();\r\n            case 1:\r\n                return out.Copy(this.m_v1.w);\r\n            case 2:\r\n                return out.Set(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);\r\n            case 3:\r\n                return out.SetZero();\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                return out.SetZero();\r\n        }\r\n    }\r\n    GetWitnessPoints(pA, pB) {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                // DEBUG: b2Assert(false);\r\n                break;\r\n            case 1:\r\n                pA.Copy(this.m_v1.wA);\r\n                pB.Copy(this.m_v1.wB);\r\n                break;\r\n            case 2:\r\n                pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;\r\n                pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;\r\n                pB.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;\r\n                pB.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;\r\n                break;\r\n            case 3:\r\n                pB.x = pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;\r\n                pB.y = pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;\r\n                break;\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                break;\r\n        }\r\n    }\r\n    GetMetric() {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                // DEBUG: b2Assert(false);\r\n                return 0;\r\n            case 1:\r\n                return 0;\r\n            case 2:\r\n                return b2Vec2.DistanceVV(this.m_v1.w, this.m_v2.w);\r\n            case 3:\r\n                return b2Vec2.CrossVV(b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, b2Vec2.s_t0), b2Vec2.SubVV(this.m_v3.w, this.m_v1.w, b2Vec2.s_t1));\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                return 0;\r\n        }\r\n    }\r\n    Solve2() {\r\n        const w1 = this.m_v1.w;\r\n        const w2 = this.m_v2.w;\r\n        const e12 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\r\n        // w1 region\r\n        const d12_2 = (-b2Vec2.DotVV(w1, e12));\r\n        if (d12_2 <= 0) {\r\n            // a2 <= 0, so we clamp it to 0\r\n            this.m_v1.a = 1;\r\n            this.m_count = 1;\r\n            return;\r\n        }\r\n        // w2 region\r\n        const d12_1 = b2Vec2.DotVV(w2, e12);\r\n        if (d12_1 <= 0) {\r\n            // a1 <= 0, so we clamp it to 0\r\n            this.m_v2.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v2);\r\n            return;\r\n        }\r\n        // Must be in e12 region.\r\n        const inv_d12 = 1 / (d12_1 + d12_2);\r\n        this.m_v1.a = d12_1 * inv_d12;\r\n        this.m_v2.a = d12_2 * inv_d12;\r\n        this.m_count = 2;\r\n    }\r\n    Solve3() {\r\n        const w1 = this.m_v1.w;\r\n        const w2 = this.m_v2.w;\r\n        const w3 = this.m_v3.w;\r\n        // Edge12\r\n        // [1      1     ][a1] = [1]\r\n        // [w1.e12 w2.e12][a2] = [0]\r\n        // a3 = 0\r\n        const e12 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\r\n        const w1e12 = b2Vec2.DotVV(w1, e12);\r\n        const w2e12 = b2Vec2.DotVV(w2, e12);\r\n        const d12_1 = w2e12;\r\n        const d12_2 = (-w1e12);\r\n        // Edge13\r\n        // [1      1     ][a1] = [1]\r\n        // [w1.e13 w3.e13][a3] = [0]\r\n        // a2 = 0\r\n        const e13 = b2Vec2.SubVV(w3, w1, b2Simplex.s_e13);\r\n        const w1e13 = b2Vec2.DotVV(w1, e13);\r\n        const w3e13 = b2Vec2.DotVV(w3, e13);\r\n        const d13_1 = w3e13;\r\n        const d13_2 = (-w1e13);\r\n        // Edge23\r\n        // [1      1     ][a2] = [1]\r\n        // [w2.e23 w3.e23][a3] = [0]\r\n        // a1 = 0\r\n        const e23 = b2Vec2.SubVV(w3, w2, b2Simplex.s_e23);\r\n        const w2e23 = b2Vec2.DotVV(w2, e23);\r\n        const w3e23 = b2Vec2.DotVV(w3, e23);\r\n        const d23_1 = w3e23;\r\n        const d23_2 = (-w2e23);\r\n        // Triangle123\r\n        const n123 = b2Vec2.CrossVV(e12, e13);\r\n        const d123_1 = n123 * b2Vec2.CrossVV(w2, w3);\r\n        const d123_2 = n123 * b2Vec2.CrossVV(w3, w1);\r\n        const d123_3 = n123 * b2Vec2.CrossVV(w1, w2);\r\n        // w1 region\r\n        if (d12_2 <= 0 && d13_2 <= 0) {\r\n            this.m_v1.a = 1;\r\n            this.m_count = 1;\r\n            return;\r\n        }\r\n        // e12\r\n        if (d12_1 > 0 && d12_2 > 0 && d123_3 <= 0) {\r\n            const inv_d12 = 1 / (d12_1 + d12_2);\r\n            this.m_v1.a = d12_1 * inv_d12;\r\n            this.m_v2.a = d12_2 * inv_d12;\r\n            this.m_count = 2;\r\n            return;\r\n        }\r\n        // e13\r\n        if (d13_1 > 0 && d13_2 > 0 && d123_2 <= 0) {\r\n            const inv_d13 = 1 / (d13_1 + d13_2);\r\n            this.m_v1.a = d13_1 * inv_d13;\r\n            this.m_v3.a = d13_2 * inv_d13;\r\n            this.m_count = 2;\r\n            this.m_v2.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // w2 region\r\n        if (d12_1 <= 0 && d23_2 <= 0) {\r\n            this.m_v2.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v2);\r\n            return;\r\n        }\r\n        // w3 region\r\n        if (d13_1 <= 0 && d23_1 <= 0) {\r\n            this.m_v3.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // e23\r\n        if (d23_1 > 0 && d23_2 > 0 && d123_1 <= 0) {\r\n            const inv_d23 = 1 / (d23_1 + d23_2);\r\n            this.m_v2.a = d23_1 * inv_d23;\r\n            this.m_v3.a = d23_2 * inv_d23;\r\n            this.m_count = 2;\r\n            this.m_v1.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // Must be in triangle123\r\n        const inv_d123 = 1 / (d123_1 + d123_2 + d123_3);\r\n        this.m_v1.a = d123_1 * inv_d123;\r\n        this.m_v2.a = d123_2 * inv_d123;\r\n        this.m_v3.a = d123_3 * inv_d123;\r\n        this.m_count = 3;\r\n    }\r\n}\r\nb2Simplex.s_e12 = new b2Vec2();\r\nb2Simplex.s_e13 = new b2Vec2();\r\nb2Simplex.s_e23 = new b2Vec2();\r\nconst b2Distance_s_simplex = new b2Simplex();\r\nconst b2Distance_s_saveA = [0, 0, 0];\r\nconst b2Distance_s_saveB = [0, 0, 0];\r\nconst b2Distance_s_p = new b2Vec2();\r\nconst b2Distance_s_d = new b2Vec2();\r\nconst b2Distance_s_normal = new b2Vec2();\r\nconst b2Distance_s_supportA = new b2Vec2();\r\nconst b2Distance_s_supportB = new b2Vec2();\r\nexport function b2Distance(output, cache, input) {\r\n    ++b2_gjkCalls;\r\n    const proxyA = input.proxyA;\r\n    const proxyB = input.proxyB;\r\n    const transformA = input.transformA;\r\n    const transformB = input.transformB;\r\n    // Initialize the simplex.\r\n    const simplex = b2Distance_s_simplex;\r\n    simplex.ReadCache(cache, proxyA, transformA, proxyB, transformB);\r\n    // Get simplex vertices as an array.\r\n    const vertices = simplex.m_vertices;\r\n    const k_maxIters = 20;\r\n    // These store the vertices of the last simplex so that we\r\n    // can check for duplicates and prevent cycling.\r\n    const saveA = b2Distance_s_saveA;\r\n    const saveB = b2Distance_s_saveB;\r\n    let saveCount = 0;\r\n    // Main iteration loop.\r\n    let iter = 0;\r\n    while (iter < k_maxIters) {\r\n        // Copy simplex so we can identify duplicates.\r\n        saveCount = simplex.m_count;\r\n        for (let i = 0; i < saveCount; ++i) {\r\n            saveA[i] = vertices[i].indexA;\r\n            saveB[i] = vertices[i].indexB;\r\n        }\r\n        switch (simplex.m_count) {\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                simplex.Solve2();\r\n                break;\r\n            case 3:\r\n                simplex.Solve3();\r\n                break;\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                break;\r\n        }\r\n        // If we have 3 points, then the origin is in the corresponding triangle.\r\n        if (simplex.m_count === 3) {\r\n            break;\r\n        }\r\n        // Get search direction.\r\n        const d = simplex.GetSearchDirection(b2Distance_s_d);\r\n        // Ensure the search direction is numerically fit.\r\n        if (d.LengthSquared() < b2_epsilon_sq) {\r\n            // The origin is probably contained by a line segment\r\n            // or triangle. Thus the shapes are overlapped.\r\n            // We can't return zero here even though there may be overlap.\r\n            // In case the simplex is a point, segment, or triangle it is difficult\r\n            // to determine if the origin is contained in the CSO or very close to it.\r\n            break;\r\n        }\r\n        // Compute a tentative new simplex vertex using support points.\r\n        const vertex = vertices[simplex.m_count];\r\n        vertex.indexA = proxyA.GetSupport(b2Rot.MulTRV(transformA.q, b2Vec2.NegV(d, b2Vec2.s_t0), b2Distance_s_supportA));\r\n        b2Transform.MulXV(transformA, proxyA.GetVertex(vertex.indexA), vertex.wA);\r\n        vertex.indexB = proxyB.GetSupport(b2Rot.MulTRV(transformB.q, d, b2Distance_s_supportB));\r\n        b2Transform.MulXV(transformB, proxyB.GetVertex(vertex.indexB), vertex.wB);\r\n        b2Vec2.SubVV(vertex.wB, vertex.wA, vertex.w);\r\n        // Iteration count is equated to the number of support point calls.\r\n        ++iter;\r\n        ++b2_gjkIters;\r\n        // Check for duplicate support points. This is the main termination criteria.\r\n        let duplicate = false;\r\n        for (let i = 0; i < saveCount; ++i) {\r\n            if (vertex.indexA === saveA[i] && vertex.indexB === saveB[i]) {\r\n                duplicate = true;\r\n                break;\r\n            }\r\n        }\r\n        // If we found a duplicate support point we must exit to avoid cycling.\r\n        if (duplicate) {\r\n            break;\r\n        }\r\n        // New vertex is ok and needed.\r\n        ++simplex.m_count;\r\n    }\r\n    b2_gjkMaxIters = b2Max(b2_gjkMaxIters, iter);\r\n    // Prepare output.\r\n    simplex.GetWitnessPoints(output.pointA, output.pointB);\r\n    output.distance = b2Vec2.DistanceVV(output.pointA, output.pointB);\r\n    output.iterations = iter;\r\n    // Cache the simplex.\r\n    simplex.WriteCache(cache);\r\n    // Apply radii if requested.\r\n    if (input.useRadii) {\r\n        const rA = proxyA.m_radius;\r\n        const rB = proxyB.m_radius;\r\n        if (output.distance > (rA + rB) && output.distance > b2_epsilon) {\r\n            // Shapes are still no overlapped.\r\n            // Move the witness points to the outer surface.\r\n            output.distance -= rA + rB;\r\n            const normal = b2Vec2.SubVV(output.pointB, output.pointA, b2Distance_s_normal);\r\n            normal.Normalize();\r\n            output.pointA.SelfMulAdd(rA, normal);\r\n            output.pointB.SelfMulSub(rB, normal);\r\n        }\r\n        else {\r\n            // Shapes are overlapped when radii are considered.\r\n            // Move the witness points to the middle.\r\n            const p = b2Vec2.MidVV(output.pointA, output.pointB, b2Distance_s_p);\r\n            output.pointA.Copy(p);\r\n            output.pointB.Copy(p);\r\n            output.distance = 0;\r\n        }\r\n    }\r\n}\r\n/// Perform a linear shape cast of shape B moving and shape A fixed. Determines the hit point, normal, and translation fraction.\r\n// GJK-raycast\r\n// Algorithm by Gino van den Bergen.\r\n// \"Smooth Mesh Contacts with GJK\" in Game Physics Pearls. 2010\r\n// bool b2ShapeCast(b2ShapeCastOutput* output, const b2ShapeCastInput* input);\r\nconst b2ShapeCast_s_n = new b2Vec2();\r\nconst b2ShapeCast_s_simplex = new b2Simplex();\r\nconst b2ShapeCast_s_wA = new b2Vec2();\r\nconst b2ShapeCast_s_wB = new b2Vec2();\r\nconst b2ShapeCast_s_v = new b2Vec2();\r\nconst b2ShapeCast_s_p = new b2Vec2();\r\nconst b2ShapeCast_s_pointA = new b2Vec2();\r\nconst b2ShapeCast_s_pointB = new b2Vec2();\r\nexport function b2ShapeCast(output, input) {\r\n    output.iterations = 0;\r\n    output.lambda = 1.0;\r\n    output.normal.SetZero();\r\n    output.point.SetZero();\r\n    // const b2DistanceProxy* proxyA = &input.proxyA;\r\n    const proxyA = input.proxyA;\r\n    // const b2DistanceProxy* proxyB = &input.proxyB;\r\n    const proxyB = input.proxyB;\r\n    // float32 radiusA = b2Max(proxyA.m_radius, b2_polygonRadius);\r\n    const radiusA = b2Max(proxyA.m_radius, b2_polygonRadius);\r\n    // float32 radiusB = b2Max(proxyB.m_radius, b2_polygonRadius);\r\n    const radiusB = b2Max(proxyB.m_radius, b2_polygonRadius);\r\n    // float32 radius = radiusA + radiusB;\r\n    const radius = radiusA + radiusB;\r\n    // b2Transform xfA = input.transformA;\r\n    const xfA = input.transformA;\r\n    // b2Transform xfB = input.transformB;\r\n    const xfB = input.transformB;\r\n    // b2Vec2 r = input.translationB;\r\n    const r = input.translationB;\r\n    // b2Vec2 n(0.0f, 0.0f);\r\n    const n = b2ShapeCast_s_n.Set(0.0, 0.0);\r\n    // float32 lambda = 0.0f;\r\n    let lambda = 0.0;\r\n    // Initial simplex\r\n    const simplex = b2ShapeCast_s_simplex;\r\n    simplex.m_count = 0;\r\n    // Get simplex vertices as an array.\r\n    // b2SimplexVertex* vertices = &simplex.m_v1;\r\n    const vertices = simplex.m_vertices;\r\n    // Get support point in -r direction\r\n    // int32 indexA = proxyA.GetSupport(b2MulT(xfA.q, -r));\r\n    let indexA = proxyA.GetSupport(b2Rot.MulTRV(xfA.q, b2Vec2.NegV(r, b2Vec2.s_t1), b2Vec2.s_t0));\r\n    // b2Vec2 wA = b2Mul(xfA, proxyA.GetVertex(indexA));\r\n    let wA = b2Transform.MulXV(xfA, proxyA.GetVertex(indexA), b2ShapeCast_s_wA);\r\n    // int32 indexB = proxyB.GetSupport(b2MulT(xfB.q, r));\r\n    let indexB = proxyB.GetSupport(b2Rot.MulTRV(xfB.q, r, b2Vec2.s_t0));\r\n    // b2Vec2 wB = b2Mul(xfB, proxyB.GetVertex(indexB));\r\n    let wB = b2Transform.MulXV(xfB, proxyB.GetVertex(indexB), b2ShapeCast_s_wB);\r\n    // b2Vec2 v = wA - wB;\r\n    const v = b2Vec2.SubVV(wA, wB, b2ShapeCast_s_v);\r\n    // Sigma is the target distance between polygons\r\n    // float32 sigma = b2Max(b2_polygonRadius, radius - b2_polygonRadius);\r\n    const sigma = b2Max(b2_polygonRadius, radius - b2_polygonRadius);\r\n    // const float32 tolerance = 0.5f * b2_linearSlop;\r\n    const tolerance = 0.5 * b2_linearSlop;\r\n    // Main iteration loop.\r\n    // const int32 k_maxIters = 20;\r\n    const k_maxIters = 20;\r\n    // int32 iter = 0;\r\n    let iter = 0;\r\n    // while (iter < k_maxIters && b2Abs(v.Length() - sigma) > tolerance)\r\n    while (iter < k_maxIters && b2Abs(v.Length() - sigma) > tolerance) {\r\n        // DEBUG: b2Assert(simplex.m_count < 3);\r\n        output.iterations += 1;\r\n        // Support in direction -v (A - B)\r\n        // indexA = proxyA.GetSupport(b2MulT(xfA.q, -v));\r\n        indexA = proxyA.GetSupport(b2Rot.MulTRV(xfA.q, b2Vec2.NegV(v, b2Vec2.s_t1), b2Vec2.s_t0));\r\n        // wA = b2Mul(xfA, proxyA.GetVertex(indexA));\r\n        wA = b2Transform.MulXV(xfA, proxyA.GetVertex(indexA), b2ShapeCast_s_wA);\r\n        // indexB = proxyB.GetSupport(b2MulT(xfB.q, v));\r\n        indexB = proxyB.GetSupport(b2Rot.MulTRV(xfB.q, v, b2Vec2.s_t0));\r\n        // wB = b2Mul(xfB, proxyB.GetVertex(indexB));\r\n        wB = b2Transform.MulXV(xfB, proxyB.GetVertex(indexB), b2ShapeCast_s_wB);\r\n        // b2Vec2 p = wA - wB;\r\n        const p = b2Vec2.SubVV(wA, wB, b2ShapeCast_s_p);\r\n        // -v is a normal at p\r\n        v.Normalize();\r\n        // Intersect ray with plane\r\n        const vp = b2Vec2.DotVV(v, p);\r\n        const vr = b2Vec2.DotVV(v, r);\r\n        if (vp - sigma > lambda * vr) {\r\n            if (vr <= 0.0) {\r\n                return false;\r\n            }\r\n            lambda = (vp - sigma) / vr;\r\n            if (lambda > 1.0) {\r\n                return false;\r\n            }\r\n            // n = -v;\r\n            n.Copy(v).SelfNeg();\r\n            simplex.m_count = 0;\r\n        }\r\n        // Reverse simplex since it works with B - A.\r\n        // Shift by lambda * r because we want the closest point to the current clip point.\r\n        // Note that the support point p is not shifted because we want the plane equation\r\n        // to be formed in unshifted space.\r\n        // b2SimplexVertex* vertex = vertices + simplex.m_count;\r\n        const vertex = vertices[simplex.m_count];\r\n        vertex.indexA = indexB;\r\n        // vertex.wA = wB + lambda * r;\r\n        vertex.wA.Copy(wB).SelfMulAdd(lambda, r);\r\n        vertex.indexB = indexA;\r\n        // vertex.wB = wA;\r\n        vertex.wB.Copy(wA);\r\n        // vertex.w = vertex.wB - vertex.wA;\r\n        vertex.w.Copy(vertex.wB).SelfSub(vertex.wA);\r\n        vertex.a = 1.0;\r\n        simplex.m_count += 1;\r\n        switch (simplex.m_count) {\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                simplex.Solve2();\r\n                break;\r\n            case 3:\r\n                simplex.Solve3();\r\n                break;\r\n            default:\r\n            // DEBUG: b2Assert(false);\r\n        }\r\n        // If we have 3 points, then the origin is in the corresponding triangle.\r\n        if (simplex.m_count === 3) {\r\n            // Overlap\r\n            return false;\r\n        }\r\n        // Get search direction.\r\n        // v = simplex.GetClosestPoint();\r\n        simplex.GetClosestPoint(v);\r\n        // Iteration count is equated to the number of support point calls.\r\n        ++iter;\r\n    }\r\n    // Prepare output.\r\n    const pointA = b2ShapeCast_s_pointA;\r\n    const pointB = b2ShapeCast_s_pointB;\r\n    simplex.GetWitnessPoints(pointA, pointB);\r\n    if (v.LengthSquared() > 0.0) {\r\n        // n = -v;\r\n        n.Copy(v).SelfNeg();\r\n        n.Normalize();\r\n    }\r\n    // output.point = pointA + radiusA * n;\r\n    output.normal.Copy(n);\r\n    output.lambda = lambda;\r\n    output.iterations = iter;\r\n    return true;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJEaXN0YW5jZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbGxpc2lvbi9iMkRpc3RhbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsMERBQTBEO0FBQzFELE9BQU8sRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLGdCQUFnQixFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xHLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHNUUsa0RBQWtEO0FBQ2xELDhCQUE4QjtBQUM5QixNQUFNLE9BQU8sZUFBZTtJQUE1QjtRQUNrQixhQUFRLEdBQWEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRCxlQUFVLEdBQWEsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNyQyxZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBQ3BCLGFBQVEsR0FBVyxDQUFDLENBQUM7SUFvRTlCLENBQUM7SUFsRVEsSUFBSSxDQUFDLEtBQWdDO1FBQzFDLElBQUksS0FBSyxDQUFDLFVBQVUsS0FBSyxLQUFLLENBQUMsUUFBUSxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNoQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDekMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzFDO2FBQU07WUFDTCxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUM7U0FDcEM7UUFDRCxJQUFJLENB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QUFNO1lBRVIsS0FBSyxDQUFDO2dCQUNKLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDdEIsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUN0QixNQUFNO1lBRVIsS0FBSyxDQUFDO2dCQUNKLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDbkUsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNuRSxFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ25FLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDbkUsTUFBTTtZQUVSLEtBQUssQ0FBQztnQkFDSixFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxD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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2_epsilon, b2_epsilon_sq, b2_maxManifoldPoints, b2MakeArray, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Distance, b2DistanceInput, b2DistanceOutput, b2SimplexCache } from \"./b2Distance\";\r\n/// @file\r\n/// Structures and functions used for computing contact points, distance\r\n/// queries, and TOI queries.\r\nexport var b2ContactFeatureType;\r\n(function (b2ContactFeatureType) {\r\n    b2ContactFeatureType[b2ContactFeatureType[\"e_vertex\"] = 0] = \"e_vertex\";\r\n    b2ContactFeatureType[b2ContactFeatureType[\"e_face\"] = 1] = \"e_face\";\r\n})(b2ContactFeatureType || (b2ContactFeatureType = {}));\r\n/// The features that intersect to form the contact point\r\n/// This must be 4 bytes or less.\r\nexport class b2ContactFeature {\r\n    constructor() {\r\n        this._key = 0;\r\n        this._key_invalid = false;\r\n        this._indexA = 0;\r\n        this._indexB = 0;\r\n        this._typeA = 0;\r\n        this._typeB = 0;\r\n    }\r\n    get key() {\r\n        if (this._key_invalid) {\r\n            this._key_invalid = false;\r\n            this._key = this._indexA | (this._indexB << 8) | (this._typeA << 16) | (this._typeB << 24);\r\n        }\r\n        return this._key;\r\n    }\r\n    set key(value) {\r\n        this._key = value;\r\n        this._key_invalid = false;\r\n        this._indexA = this._key & 0xff;\r\n        this._indexB = (this._key >> 8) & 0xff;\r\n        this._typeA = (this._key >> 16) & 0xff;\r\n        this._typeB = (this._key >> 24) & 0xff;\r\n    }\r\n    get indexA() {\r\n        return this._indexA;\r\n    }\r\n    set indexA(value) {\r\n        this._indexA = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get indexB() {\r\n        return this._indexB;\r\n    }\r\n    set indexB(value) {\r\n        this._indexB = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get typeA() {\r\n        return this._typeA;\r\n    }\r\n    set typeA(value) {\r\n        this._typeA = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get typeB() {\r\n        return this._typeB;\r\n    }\r\n    set typeB(value) {\r\n        this._typeB = value;\r\n        this._key_invalid = true;\r\n    }\r\n}\r\n/// Contact ids to facilitate warm starting.\r\nexport class b2ContactID {\r\n    constructor() {\r\n        this.cf = new b2ContactFeature();\r\n    }\r\n    Copy(o) {\r\n        this.key = o.key;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2ContactID().Copy(this);\r\n    }\r\n    get key() {\r\n        return this.cf.key;\r\n    }\r\n    set key(value) {\r\n        this.cf.key = value;\r\n    }\r\n}\r\n/// A manifold point is a contact point belonging to a contact\r\n/// manifold. It holds details related to the geometry and dynamics\r\n/// of the contact points.\r\n/// The local point usage depends on the manifold type:\r\n/// -e_circles: the local center of circleB\r\n/// -e_faceA: the local center of cirlceB or the clip point of polygonB\r\n/// -e_faceB: the clip point of polygonA\r\n/// This structure is stored across time steps, so we keep it small.\r\n/// Note: the impulses are used for internal caching and may not\r\n/// provide reliable contact forces, especially for high speed collisions.\r\nexport class b2ManifoldPoint {\r\n    constructor() {\r\n        this.localPoint = new b2Vec2(); ///< usage depends on manifold type\r\n        this.normalImpulse = 0; ///< the non-penetration impulse\r\n        this.tangentImpulse = 0; ///< the friction impulse\r\n        this.id = new b2ContactID(); // TODO: readonly  ///< uniquely identifies a contact point between two shapes\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ManifoldPoint());\r\n    }\r\n    Reset() {\r\n        this.localPoint.SetZero();\r\n        this.normalImpulse = 0;\r\n        this.tangentImpulse = 0;\r\n        this.id.key = 0;\r\n    }\r\n    Copy(o) {\r\n        this.localPoint.Copy(o.localPoint);\r\n        this.normalImpulse = o.normalImpulse;\r\n        this.tangentImpulse = o.tangentImpulse;\r\n        this.id.Copy(o.id);\r\n        return this;\r\n    }\r\n}\r\nexport var b2ManifoldType;\r\n(function (b2ManifoldType) {\r\n    b2ManifoldType[b2ManifoldType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2ManifoldType[b2ManifoldType[\"e_circles\"] = 0] = \"e_circles\";\r\n    b2ManifoldType[b2ManifoldType[\"e_faceA\"] = 1] = \"e_faceA\";\r\n    b2ManifoldType[b2ManifoldType[\"e_faceB\"] = 2] = \"e_faceB\";\r\n})(b2ManifoldType || (b2ManifoldType = {}));\r\n/// A manifold for two touching convex shapes.\r\n/// Box2D supports multiple types of contact:\r\n/// - clip point versus plane with radius\r\n/// - point versus point with radius (circles)\r\n/// The local point usage depends on the manifold type:\r\n/// -e_circles: the local center of circleA\r\n/// -e_faceA: the center of faceA\r\n/// -e_faceB: the center of faceB\r\n/// Similarly the local normal usage:\r\n/// -e_circles: not used\r\n/// -e_faceA: the normal on polygonA\r\n/// -e_faceB: the normal on polygonB\r\n/// We store contacts in this way so that position correction can\r\n/// account for movement, which is critical for continuous physics.\r\n/// All contact scenarios must be expressed in one of these types.\r\n/// This structure is stored across time steps, so we keep it small.\r\nexport class b2Manifold {\r\n    constructor() {\r\n        this.points = b2ManifoldPoint.MakeArray(b2_maxManifoldPoints);\r\n        this.localNormal = new b2Vec2();\r\n        this.localPoint = new b2Vec2();\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.pointCount = 0;\r\n    }\r\n    Reset() {\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            // DEBUG: b2Assert(this.points[i] instanceof b2ManifoldPoint);\r\n            this.points[i].Reset();\r\n        }\r\n        this.localNormal.SetZero();\r\n        this.localPoint.SetZero();\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.pointCount = 0;\r\n    }\r\n    Copy(o) {\r\n        this.pointCount = o.pointCount;\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            // DEBUG: b2Assert(this.points[i] instanceof b2ManifoldPoint);\r\n            this.points[i].Copy(o.points[i]);\r\n        }\r\n        this.localNormal.Copy(o.localNormal);\r\n        this.localPoint.Copy(o.localPoint);\r\n        this.type = o.type;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2Manifold().Copy(this);\r\n    }\r\n}\r\nexport class b2WorldManifold {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.points = b2Vec2.MakeArray(b2_maxManifoldPoints);\r\n        this.separations = b2MakeNumberArray(b2_maxManifoldPoints);\r\n    }\r\n    Initialize(manifold, xfA, radiusA, xfB, radiusB) {\r\n        if (manifold.pointCount === 0) {\r\n            return;\r\n        }\r\n        switch (manifold.type) {\r\n            case b2ManifoldType.e_circles: {\r\n                this.normal.Set(1, 0);\r\n                const pointA = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_pointA);\r\n                const pointB = b2Transform.MulXV(xfB, manifold.points[0].localPoint, b2WorldManifold.Initialize_s_pointB);\r\n                if (b2Vec2.DistanceSquaredVV(pointA, pointB) > b2_epsilon_sq) {\r\n                    b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\r\n                }\r\n                const cA = b2Vec2.AddVMulSV(pointA, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                const cB = b2Vec2.SubVMulSV(pointB, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                b2Vec2.MidVV(cA, cB, this.points[0]);\r\n                this.separations[0] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\r\n                break;\r\n            }\r\n            case b2ManifoldType.e_faceA: {\r\n                b2Rot.MulRV(xfA.q, manifold.localNormal, this.normal);\r\n                const planePoint = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\r\n                for (let i = 0; i < manifold.pointCount; ++i) {\r\n                    const clipPoint = b2Transform.MulXV(xfB, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\r\n                    const s = radiusA - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\r\n                    const cA = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                    const cB = b2Vec2.SubVMulSV(clipPoint, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                    b2Vec2.MidVV(cA, cB, this.points[i]);\r\n                    this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\r\n                }\r\n                break;\r\n            }\r\n            case b2ManifoldType.e_faceB: {\r\n                b2Rot.MulRV(xfB.q, manifold.localNormal, this.normal);\r\n                const planePoint = b2Transform.MulXV(xfB, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\r\n                for (let i = 0; i < manifold.pointCount; ++i) {\r\n                    const clipPoint = b2Transform.MulXV(xfA, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\r\n                    const s = radiusB - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\r\n                    const cB = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                    const cA = b2Vec2.SubVMulSV(clipPoint, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                    b2Vec2.MidVV(cA, cB, this.points[i]);\r\n                    this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cA, cB, b2Vec2.s_t0), this.normal); // b2Dot(cA - cB, normal);\r\n                }\r\n                // Ensure normal points from A to B.\r\n                this.normal.SelfNeg();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nb2WorldManifold.Initialize_s_pointA = new b2Vec2();\r\nb2WorldManifold.Initialize_s_pointB = new b2Vec2();\r\nb2WorldManifold.Initialize_s_cA = new b2Vec2();\r\nb2WorldManifold.Initialize_s_cB = new b2Vec2();\r\nb2WorldManifold.Initialize_s_planePoint = new b2Vec2();\r\nb2WorldManifold.Initialize_s_clipPoint = new b2Vec2();\r\n/// This is used for determining the state of contact points.\r\nexport var b2PointState;\r\n(function (b2PointState) {\r\n    b2PointState[b2PointState[\"b2_nullState\"] = 0] = \"b2_nullState\";\r\n    b2PointState[b2PointState[\"b2_addState\"] = 1] = \"b2_addState\";\r\n    b2PointState[b2PointState[\"b2_persistState\"] = 2] = \"b2_persistState\";\r\n    b2PointState[b2PointState[\"b2_removeState\"] = 3] = \"b2_removeState\";\r\n})(b2PointState || (b2PointState = {}));\r\n/// Compute the point states given two manifolds. The states pertain to the transition from manifold1\r\n/// to manifold2. So state1 is either persist or remove while state2 is either add or persist.\r\nexport function b2GetPointStates(state1, state2, manifold1, manifold2) {\r\n    // Detect persists and removes.\r\n    let i;\r\n    for (i = 0; i < manifold1.pointCount; ++i) {\r\n        const id = manifold1.points[i].id;\r\n        const key = id.key;\r\n        state1[i] = b2PointState.b2_removeState;\r\n        for (let j = 0, jct = manifold2.pointCount; j < jct; ++j) {\r\n            if (manifold2.points[j].id.key === key) {\r\n                state1[i] = b2PointState.b2_persistState;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for (; i < b2_maxManifoldPoints; ++i) {\r\n        state1[i] = b2PointState.b2_nullState;\r\n    }\r\n    // Detect persists and adds.\r\n    for (i = 0; i < manifold2.pointCount; ++i) {\r\n        const id = manifold2.points[i].id;\r\n        const key = id.key;\r\n        state2[i] = b2PointState.b2_addState;\r\n        for (let j = 0, jct = manifold1.pointCount; j < jct; ++j) {\r\n            if (manifold1.points[j].id.key === key) {\r\n                state2[i] = b2PointState.b2_persistState;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for (; i < b2_maxManifoldPoints; ++i) {\r\n        state2[i] = b2PointState.b2_nullState;\r\n    }\r\n}\r\n/// Used for computing contact manifolds.\r\nexport class b2ClipVertex {\r\n    constructor() {\r\n        this.v = new b2Vec2();\r\n        this.id = new b2ContactID();\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ClipVertex());\r\n    }\r\n    Copy(other) {\r\n        this.v.Copy(other.v);\r\n        this.id.Copy(other.id);\r\n        return this;\r\n    }\r\n}\r\n/// Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\r\nexport class b2RayCastInput {\r\n    constructor() {\r\n        this.p1 = new b2Vec2();\r\n        this.p2 = new b2Vec2();\r\n        this.maxFraction = 1;\r\n    }\r\n    Copy(o) {\r\n        this.p1.Copy(o.p1);\r\n        this.p2.Copy(o.p2);\r\n        this.maxFraction = o.maxFraction;\r\n        return this;\r\n    }\r\n}\r\n/// Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and p2\r\n/// come from b2RayCastInput.\r\nexport class b2RayCastOutput {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.fraction = 0;\r\n    }\r\n    Copy(o) {\r\n        this.normal.Copy(o.normal);\r\n        this.fraction = o.fraction;\r\n        return this;\r\n    }\r\n}\r\n/// An axis aligned bounding box.\r\nexport class b2AABB {\r\n    constructor() {\r\n        this.lowerBound = new b2Vec2(); ///< the lower vertex\r\n        this.upperBound = new b2Vec2(); ///< the upper vertex\r\n        this.m_cache_center = new b2Vec2(); // access using GetCenter()\r\n        this.m_cache_extent = new b2Vec2(); // access using GetExtents()\r\n    }\r\n    Copy(o) {\r\n        this.lowerBound.Copy(o.lowerBound);\r\n        this.upperBound.Copy(o.upperBound);\r\n        return this;\r\n    }\r\n    /// Verify that the bounds are sorted.\r\n    IsValid() {\r\n        const d_x = this.upperBound.x - this.lowerBound.x;\r\n        const d_y = this.upperBound.y - this.lowerBound.y;\r\n        let valid = d_x >= 0 && d_y >= 0;\r\n        valid = valid && this.lowerBound.IsValid() && this.upperBound.IsValid();\r\n        return valid;\r\n    }\r\n    /// Get the center of the AABB.\r\n    GetCenter() {\r\n        return b2Vec2.MidVV(this.lowerBound, this.upperBound, this.m_cache_center);\r\n    }\r\n    /// Get the extents of the AABB (half-widths).\r\n    GetExtents() {\r\n        return b2Vec2.ExtVV(this.lowerBound, this.upperBound, this.m_cache_extent);\r\n    }\r\n    /// Get the perimeter length\r\n    GetPerimeter() {\r\n        const wx = this.upperBound.x - this.lowerBound.x;\r\n        const wy = this.upperBound.y - this.lowerBound.y;\r\n        return 2 * (wx + wy);\r\n    }\r\n    /// Combine an AABB into this one.\r\n    Combine1(aabb) {\r\n        this.lowerBound.x = b2Min(this.lowerBound.x, aabb.lowerBound.x);\r\n        this.lowerBound.y = b2Min(this.lowerBound.y, aabb.lowerBound.y);\r\n        this.upperBound.x = b2Max(this.upperBound.x, aabb.upperBound.x);\r\n        this.upperBound.y = b2Max(this.upperBound.y, aabb.upperBound.y);\r\n        return this;\r\n    }\r\n    /// Combine two AABBs into this one.\r\n    Combine2(aabb1, aabb2) {\r\n        this.lowerBound.x = b2Min(aabb1.lowerBound.x, aabb2.lowerBound.x);\r\n        this.lowerBound.y = b2Min(aabb1.lowerBound.y, aabb2.lowerBound.y);\r\n        this.upperBound.x = b2Max(aabb1.upperBound.x, aabb2.upperBound.x);\r\n        this.upperBound.y = b2Max(aabb1.upperBound.y, aabb2.upperBound.y);\r\n        return this;\r\n    }\r\n    static Combine(aabb1, aabb2, out) {\r\n        out.Combine2(aabb1, aabb2);\r\n        return out;\r\n    }\r\n    /// Does this aabb contain the provided AABB.\r\n    Contains(aabb) {\r\n        let result = true;\r\n        result = result && this.lowerBound.x <= aabb.lowerBound.x;\r\n        result = result && this.lowerBound.y <= aabb.lowerBound.y;\r\n        result = result && aabb.upperBound.x <= this.upperBound.x;\r\n        result = result && aabb.upperBound.y <= this.upperBound.y;\r\n        return result;\r\n    }\r\n    // From Real-time Collision Detection, p179.\r\n    RayCast(output, input) {\r\n        let tmin = (-b2_maxFloat);\r\n        let tmax = b2_maxFloat;\r\n        const p_x = input.p1.x;\r\n        const p_y = input.p1.y;\r\n        const d_x = input.p2.x - input.p1.x;\r\n        const d_y = input.p2.y - input.p1.y;\r\n        const absD_x = b2Abs(d_x);\r\n        const absD_y = b2Abs(d_y);\r\n        const normal = output.normal;\r\n        if (absD_x < b2_epsilon) {\r\n            // Parallel.\r\n            if (p_x < this.lowerBound.x || this.upperBound.x < p_x) {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            const inv_d = 1 / d_x;\r\n            let t1 = (this.lowerBound.x - p_x) * inv_d;\r\n            let t2 = (this.upperBound.x - p_x) * inv_d;\r\n            // Sign of the normal vector.\r\n            let s = (-1);\r\n            if (t1 > t2) {\r\n                const t3 = t1;\r\n                t1 = t2;\r\n                t2 = t3;\r\n                s = 1;\r\n            }\r\n            // Push the min up\r\n            if (t1 > tmin) {\r\n                normal.x = s;\r\n                normal.y = 0;\r\n                tmin = t1;\r\n            }\r\n            // Pull the max down\r\n            tmax = b2Min(tmax, t2);\r\n            if (tmin > tmax) {\r\n                return false;\r\n            }\r\n        }\r\n        if (absD_y < b2_epsilon) {\r\n            // Parallel.\r\n            if (p_y < this.lowerBound.y || this.upperBound.y < p_y) {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            const inv_d = 1 / d_y;\r\n            let t1 = (this.lowerBound.y - p_y) * inv_d;\r\n            let t2 = (this.upperBound.y - p_y) * inv_d;\r\n            // Sign of the normal vector.\r\n            let s = (-1);\r\n            if (t1 > t2) {\r\n                const t3 = t1;\r\n                t1 = t2;\r\n                t2 = t3;\r\n                s = 1;\r\n            }\r\n            // Push the min up\r\n            if (t1 > tmin) {\r\n                normal.x = 0;\r\n                normal.y = s;\r\n                tmin = t1;\r\n            }\r\n            // Pull the max down\r\n            tmax = b2Min(tmax, t2);\r\n            if (tmin > tmax) {\r\n                return false;\r\n            }\r\n        }\r\n        // Does the ray start inside the box?\r\n        // Does the ray intersect beyond the max fraction?\r\n        if (tmin < 0 || input.maxFraction < tmin) {\r\n            return false;\r\n        }\r\n        // Intersection.\r\n        output.fraction = tmin;\r\n        return true;\r\n    }\r\n    TestContain(point) {\r\n        if (point.x < this.lowerBound.x || this.upperBound.x < point.x) {\r\n            return false;\r\n        }\r\n        if (point.y < this.lowerBound.y || this.upperBound.y < point.y) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    TestOverlap(other) {\r\n        const d1_x = other.lowerBound.x - this.upperBound.x;\r\n        const d1_y = other.lowerBound.y - this.upperBound.y;\r\n        const d2_x = this.lowerBound.x - other.upperBound.x;\r\n        const d2_y = this.lowerBound.y - other.upperBound.y;\r\n        if (d1_x > 0 || d1_y > 0) {\r\n            return false;\r\n        }\r\n        if (d2_x > 0 || d2_y > 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport function b2TestOverlapAABB(a, b) {\r\n    const d1_x = b.lowerBound.x - a.upperBound.x;\r\n    const d1_y = b.lowerBound.y - a.upperBound.y;\r\n    const d2_x = a.lowerBound.x - b.upperBound.x;\r\n    const d2_y = a.lowerBound.y - b.upperBound.y;\r\n    if (d1_x > 0 || d1_y > 0) {\r\n        return false;\r\n    }\r\n    if (d2_x > 0 || d2_y > 0) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/// Clipping for contact manifolds.\r\nexport function b2ClipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\r\n    // Start with no output points\r\n    let numOut = 0;\r\n    const vIn0 = vIn[0];\r\n    const vIn1 = vIn[1];\r\n    // Calculate the distance of end points to the line\r\n    const distance0 = b2Vec2.DotVV(normal, vIn0.v) - offset;\r\n    const distance1 = b2Vec2.DotVV(normal, vIn1.v) - offset;\r\n    // If the points are behind the plane\r\n    if (distance0 <= 0) {\r\n        vOut[numOut++].Copy(vIn0);\r\n    }\r\n    if (distance1 <= 0) {\r\n        vOut[numOut++].Copy(vIn1);\r\n    }\r\n    // If the points are on different sides of the plane\r\n    if (distance0 * distance1 < 0) {\r\n        // Find intersection point of edge and plane\r\n        const interp = distance0 / (distance0 - distance1);\r\n        const v = vOut[numOut].v;\r\n        v.x = vIn0.v.x + interp * (vIn1.v.x - vIn0.v.x);\r\n        v.y = vIn0.v.y + interp * (vIn1.v.y - vIn0.v.y);\r\n        // VertexA is hitting edgeB.\r\n        const id = vOut[numOut].id;\r\n        id.cf.indexA = vertexIndexA;\r\n        id.cf.indexB = vIn0.id.cf.indexB;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        id.cf.typeB = b2ContactFeatureType.e_face;\r\n        ++numOut;\r\n    }\r\n    return numOut;\r\n}\r\n/// Determine if two generic shapes overlap.\r\nconst b2TestOverlapShape_s_input = new b2DistanceInput();\r\nconst b2TestOverlapShape_s_simplexCache = new b2SimplexCache();\r\nconst b2TestOverlapShape_s_output = new b2DistanceOutput();\r\nexport function b2TestOverlapShape(shapeA, indexA, shapeB, indexB, xfA, xfB) {\r\n    const input = b2TestOverlapShape_s_input.Reset();\r\n    input.proxyA.SetShape(shapeA, indexA);\r\n    input.proxyB.SetShape(shapeB, indexB);\r\n    input.transformA.Copy(xfA);\r\n    input.transformB.Copy(xfB);\r\n    input.useRadii = true;\r\n    const simplexCache = b2TestOverlapShape_s_simplexCache.Reset();\r\n    simplexCache.count = 0;\r\n    const output = b2TestOverlapShape_s_output.Reset();\r\n    b2Distance(output, simplexCache, input);\r\n    return output.distance < 10 * b2_epsilon;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb2xsaXNpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9Cb3gyRC9Db2xsaXNpb24vYjJDb2xsaXNpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRiwwREFBMEQ7QUFDMUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLG9CQUFvQixFQUFFLFdBQVcsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3BJLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRW5GLE9BQU8sRUFBRSxVQUFVLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLGNBQWMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUU3RixTQUFTO0FBQ1Qsd0VBQXdFO0FBQ3hFLDZCQUE2QjtBQUU3QixNQUFNLENBQU4sSUFBWSxvQkFHWDtBQUhELFdBQVksb0JBQW9CO0lBQzlCLHVFQUFZLENBQUE7SUFDWixtRUFBVSxDQUFBO0FBQ1osQ0FBQyxFQUhXLG9CQUFvQixLQUFwQixvQkFBb0IsUUFHL0I7QUFFRCx5REFBeUQ7QUFDekQsaUNBQWlDO0FBQ2pDLE1BQU0sT0FBTyxnQkFBZ0I7SUFBN0I7UUFDVSxTQUFJLEdBQVcsQ0FBQyxDQUFDO1FBQ2pCLGlCQUFZLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFDcEIsWUFBTyxHQUFXLENBQUMsQ0FBQztRQUNwQixXQUFNLEdBQXlCLENBQUMsQ0FBQztRQUNqQyxXQUFNLEdBQXlCLENBQUMsQ0FBQztJQXNEM0MsQ0FBQztJQXBEQyxJQUFXLEdBQUc7UUFDWixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7WUFDMUIsSUFBSSxD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QUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEUsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsb0NBQW9DO0lBQzdCLFFBQVEsQ0FBQyxLQUFhLEVBQUUsS0FBYTtRQUMxQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxD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","/*\r\n* Copyright (c) 2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_aabbExtension, b2_aabbMultiplier } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2GrowableStack } from \"../Common/b2GrowableStack\";\r\nimport { b2AABB, b2RayCastInput, b2TestOverlapAABB } from \"./b2Collision\";\r\nfunction verify(value) {\r\n    if (value === null) {\r\n        throw new Error();\r\n    }\r\n    return value;\r\n}\r\n/// A node in the dynamic tree. The client does not interact with this directly.\r\nexport class b2TreeNode {\r\n    constructor(id = 0) {\r\n        this.m_id = 0;\r\n        this.aabb = new b2AABB();\r\n        this.parent = null; // or next\r\n        this.child1 = null;\r\n        this.child2 = null;\r\n        this.height = 0; // leaf = 0, free node = -1\r\n        this.m_id = id;\r\n    }\r\n    IsLeaf() {\r\n        return this.child1 === null;\r\n    }\r\n}\r\nexport class b2DynamicTree {\r\n    constructor() {\r\n        this.m_root = null;\r\n        // b2TreeNode* public m_nodes;\r\n        // int32 public m_nodeCount;\r\n        // int32 public m_nodeCapacity;\r\n        this.m_freeList = null;\r\n        this.m_path = 0;\r\n        this.m_insertionCount = 0;\r\n        this.m_stack = new b2GrowableStack(256);\r\n    }\r\n    // public GetUserData(proxy: b2TreeNode<T>): any {\r\n    //   // DEBUG: b2Assert(proxy !== null);\r\n    //   return proxy.userData;\r\n    // }\r\n    // public GetFatAABB(proxy: b2TreeNode<T>): b2AABB {\r\n    //   // DEBUG: b2Assert(proxy !== null);\r\n    //   return proxy.aabb;\r\n    // }\r\n    Query(aabb, callback) {\r\n        if (this.m_root === null) {\r\n            return;\r\n        }\r\n        const stack = this.m_stack.Reset();\r\n        stack.Push(this.m_root);\r\n        while (stack.GetCount() > 0) {\r\n            const node = stack.Pop();\r\n            // if (node === null) {\r\n            //   continue;\r\n            // }\r\n            if (node.aabb.TestOverlap(aabb)) {\r\n                if (node.IsLeaf()) {\r\n                    const proceed = callback(node);\r\n                    if (!proceed) {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    stack.Push(verify(node.child1));\r\n                    stack.Push(verify(node.child2));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    QueryPoint(point, callback) {\r\n        if (this.m_root === null) {\r\n            return;\r\n        }\r\n        const stack = this.m_stack.Reset();\r\n        stack.Push(this.m_root);\r\n        while (stack.GetCount() > 0) {\r\n            const node = stack.Pop();\r\n            // if (node === null) {\r\n            //   continue;\r\n            // }\r\n            if (node.aabb.TestContain(point)) {\r\n                if (node.IsLeaf()) {\r\n                    const proceed = callback(node);\r\n                    if (!proceed) {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    stack.Push(verify(node.child1));\r\n                    stack.Push(verify(node.child2));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    RayCast(input, callback) {\r\n        if (this.m_root === null) {\r\n            return;\r\n        }\r\n        const p1 = input.p1;\r\n        const p2 = input.p2;\r\n        const r = b2Vec2.SubVV(p2, p1, b2DynamicTree.s_r);\r\n        // DEBUG: b2Assert(r.LengthSquared() > 0);\r\n        r.Normalize();\r\n        // v is perpendicular to the segment.\r\n        const v = b2Vec2.CrossOneV(r, b2DynamicTree.s_v);\r\n        const abs_v = b2Vec2.AbsV(v, b2DynamicTree.s_abs_v);\r\n        // Separating axis for segment (Gino, p80).\r\n        // |dot(v, p1 - c)| > dot(|v|, h)\r\n        let maxFraction = input.maxFraction;\r\n        // Build a bounding box for the segment.\r\n        const segmentAABB = b2DynamicTree.s_segmentAABB;\r\n        let t_x = p1.x + maxFraction * (p2.x - p1.x);\r\n        let t_y = p1.y + maxFraction * (p2.y - p1.y);\r\n        segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\r\n        segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\r\n        segmentAABB.upperBound.x = b2Max(p1.x, t_x);\r\n        segmentAABB.upperBound.y = b2Max(p1.y, t_y);\r\n        const stack = this.m_stack.Reset();\r\n        stack.Push(this.m_root);\r\n        while (stack.GetCount() > 0) {\r\n            const node = stack.Pop();\r\n            // if (node === null) {\r\n            //   continue;\r\n            // }\r\n            if (!b2TestOverlapAABB(node.aabb, segmentAABB)) {\r\n                continue;\r\n            }\r\n            // Separating axis for segment (Gino, p80).\r\n            // |dot(v, p1 - c)| > dot(|v|, h)\r\n            const c = node.aabb.GetCenter();\r\n            const h = node.aabb.GetExtents();\r\n            const separation = b2Abs(b2Vec2.DotVV(v, b2Vec2.SubVV(p1, c, b2Vec2.s_t0))) - b2Vec2.DotVV(abs_v, h);\r\n            if (separation > 0) {\r\n                continue;\r\n            }\r\n            if (node.IsLeaf()) {\r\n                const subInput = b2DynamicTree.s_subInput;\r\n                subInput.p1.Copy(input.p1);\r\n                subInput.p2.Copy(input.p2);\r\n                subInput.maxFraction = maxFraction;\r\n                const value = callback(subInput, node);\r\n                if (value === 0) {\r\n                    // The client has terminated the ray cast.\r\n                    return;\r\n                }\r\n                if (value > 0) {\r\n                    // Update segment bounding box.\r\n                    maxFraction = value;\r\n                    t_x = p1.x + maxFraction * (p2.x - p1.x);\r\n                    t_y = p1.y + maxFraction * (p2.y - p1.y);\r\n                    segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\r\n                    segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\r\n                    segmentAABB.upperBound.x = b2Max(p1.x, t_x);\r\n                    segmentAABB.upperBound.y = b2Max(p1.y, t_y);\r\n                }\r\n            }\r\n            else {\r\n                stack.Push(verify(node.child1));\r\n                stack.Push(verify(node.child2));\r\n            }\r\n        }\r\n    }\r\n    AllocateNode() {\r\n        // Expand the node pool as needed.\r\n        if (this.m_freeList) {\r\n            const node = this.m_freeList;\r\n            this.m_freeList = node.parent; // this.m_freeList = node.next;\r\n            node.parent = null;\r\n            node.child1 = null;\r\n            node.child2 = null;\r\n            node.height = 0;\r\n            delete node.userData; // = null;\r\n            return node;\r\n        }\r\n        return new b2TreeNode(b2DynamicTree.s_node_id++);\r\n    }\r\n    FreeNode(node) {\r\n        node.parent = this.m_freeList; // node.next = this.m_freeList;\r\n        node.child1 = null;\r\n        node.child2 = null;\r\n        node.height = -1;\r\n        delete node.userData; // = null;\r\n        this.m_freeList = node;\r\n    }\r\n    CreateProxy(aabb, userData) {\r\n        const node = this.AllocateNode();\r\n        // Fatten the aabb.\r\n        const r_x = b2_aabbExtension;\r\n        const r_y = b2_aabbExtension;\r\n        node.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\r\n        node.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\r\n        node.aabb.upperBound.x = aabb.upperBound.x + r_x;\r\n        node.aabb.upperBound.y = aabb.upperBound.y + r_y;\r\n        node.userData = userData;\r\n        node.height = 0;\r\n        this.InsertLeaf(node);\r\n        return node;\r\n    }\r\n    DestroyProxy(proxy) {\r\n        // DEBUG: b2Assert(proxy.IsLeaf());\r\n        this.RemoveLeaf(proxy);\r\n        this.FreeNode(proxy);\r\n    }\r\n    MoveProxy(proxy, aabb, displacement) {\r\n        // DEBUG: b2Assert(proxy.IsLeaf());\r\n        if (proxy.aabb.Contains(aabb)) {\r\n            return false;\r\n        }\r\n        this.RemoveLeaf(proxy);\r\n        // Extend AABB.\r\n        // Predict AABB displacement.\r\n        const r_x = b2_aabbExtension + b2_aabbMultiplier * (displacement.x > 0 ? displacement.x : (-displacement.x));\r\n        const r_y = b2_aabbExtension + b2_aabbMultiplier * (displacement.y > 0 ? displacement.y : (-displacement.y));\r\n        proxy.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\r\n        proxy.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\r\n        proxy.aabb.upperBound.x = aabb.upperBound.x + r_x;\r\n        proxy.aabb.upperBound.y = aabb.upperBound.y + r_y;\r\n        this.InsertLeaf(proxy);\r\n        return true;\r\n    }\r\n    InsertLeaf(leaf) {\r\n        ++this.m_insertionCount;\r\n        if (this.m_root === null) {\r\n            this.m_root = leaf;\r\n            this.m_root.parent = null;\r\n            return;\r\n        }\r\n        // Find the best sibling for this node\r\n        const leafAABB = leaf.aabb;\r\n        ///const center: b2Vec2 = leafAABB.GetCenter();\r\n        let index = this.m_root;\r\n        while (!index.IsLeaf()) {\r\n            const child1 = verify(index.child1);\r\n            const child2 = verify(index.child2);\r\n            const area = index.aabb.GetPerimeter();\r\n            const combinedAABB = b2DynamicTree.s_combinedAABB;\r\n            combinedAABB.Combine2(index.aabb, leafAABB);\r\n            const combinedArea = combinedAABB.GetPerimeter();\r\n            // Cost of creating a new parent for this node and the new leaf\r\n            const cost = 2 * combinedArea;\r\n            // Minimum cost of pushing the leaf further down the tree\r\n            const inheritanceCost = 2 * (combinedArea - area);\r\n            // Cost of descending into child1\r\n            let cost1;\r\n            const aabb = b2DynamicTree.s_aabb;\r\n            let oldArea;\r\n            let newArea;\r\n            if (child1.IsLeaf()) {\r\n                aabb.Combine2(leafAABB, child1.aabb);\r\n                cost1 = aabb.GetPerimeter() + inheritanceCost;\r\n            }\r\n            else {\r\n                aabb.Combine2(leafAABB, child1.aabb);\r\n                oldArea = child1.aabb.GetPerimeter();\r\n                newArea = aabb.GetPerimeter();\r\n                cost1 = (newArea - oldArea) + inheritanceCost;\r\n            }\r\n            // Cost of descending into child2\r\n            let cost2;\r\n            if (child2.IsLeaf()) {\r\n                aabb.Combine2(leafAABB, child2.aabb);\r\n                cost2 = aabb.GetPerimeter() + inheritanceCost;\r\n            }\r\n            else {\r\n                aabb.Combine2(leafAABB, child2.aabb);\r\n                oldArea = child2.aabb.GetPerimeter();\r\n                newArea = aabb.GetPerimeter();\r\n                cost2 = newArea - oldArea + inheritanceCost;\r\n            }\r\n            // Descend according to the minimum cost.\r\n            if (cost < cost1 && cost < cost2) {\r\n                break;\r\n            }\r\n            // Descend\r\n            if (cost1 < cost2) {\r\n                index = child1;\r\n            }\r\n            else {\r\n                index = child2;\r\n            }\r\n        }\r\n        const sibling = index;\r\n        // Create a parent for the siblings.\r\n        const oldParent = sibling.parent;\r\n        const newParent = this.AllocateNode();\r\n        newParent.parent = oldParent;\r\n        delete newParent.userData; // = null;\r\n        newParent.aabb.Combine2(leafAABB, sibling.aabb);\r\n        newParent.height = sibling.height + 1;\r\n        if (oldParent) {\r\n            // The sibling was not the root.\r\n            if (oldParent.child1 === sibling) {\r\n                oldParent.child1 = newParent;\r\n            }\r\n            else {\r\n                oldParent.child2 = newParent;\r\n            }\r\n            newParent.child1 = sibling;\r\n            newParent.child2 = leaf;\r\n            sibling.parent = newParent;\r\n            leaf.parent = newParent;\r\n        }\r\n        else {\r\n            // The sibling was the root.\r\n            newParent.child1 = sibling;\r\n            newParent.child2 = leaf;\r\n            sibling.parent = newParent;\r\n            leaf.parent = newParent;\r\n            this.m_root = newParent;\r\n        }\r\n        // Walk back up the tree fixing heights and AABBs\r\n        let index2 = leaf.parent;\r\n        while (index2 !== null) {\r\n            index2 = this.Balance(index2);\r\n            const child1 = verify(index2.child1);\r\n            const child2 = verify(index2.child2);\r\n            index2.height = 1 + b2Max(child1.height, child2.height);\r\n            index2.aabb.Combine2(child1.aabb, child2.aabb);\r\n            index2 = index2.parent;\r\n        }\r\n        // this.Validate();\r\n    }\r\n    RemoveLeaf(leaf) {\r\n        if (leaf === this.m_root) {\r\n            this.m_root = null;\r\n            return;\r\n        }\r\n        const parent = verify(leaf.parent);\r\n        const grandParent = parent && parent.parent;\r\n        let sibling;\r\n        if (parent.child1 === leaf) {\r\n            sibling = verify(parent.child2);\r\n        }\r\n        else {\r\n            sibling = verify(parent.child1);\r\n        }\r\n        if (grandParent) {\r\n            // Destroy parent and connect sibling to grandParent.\r\n            if (grandParent.child1 === parent) {\r\n                grandParent.child1 = sibling;\r\n            }\r\n            else {\r\n                grandParent.child2 = sibling;\r\n            }\r\n            sibling.parent = grandParent;\r\n            this.FreeNode(parent);\r\n            // Adjust ancestor bounds.\r\n            let index = grandParent;\r\n            while (index) {\r\n                index = this.Balance(index);\r\n                const child1 = verify(index.child1);\r\n                const child2 = verify(index.child2);\r\n                index.aabb.Combine2(child1.aabb, child2.aabb);\r\n                index.height = 1 + b2Max(child1.height, child2.height);\r\n                index = index.parent;\r\n            }\r\n        }\r\n        else {\r\n            this.m_root = sibling;\r\n            sibling.parent = null;\r\n            this.FreeNode(parent);\r\n        }\r\n        // this.Validate();\r\n    }\r\n    Balance(A) {\r\n        // DEBUG: b2Assert(A !== null);\r\n        if (A.IsLeaf() || A.height < 2) {\r\n            return A;\r\n        }\r\n        const B = verify(A.child1);\r\n        const C = verify(A.child2);\r\n        const balance = C.height - B.height;\r\n        // Rotate C up\r\n        if (balance > 1) {\r\n            const F = verify(C.child1);\r\n            const G = verify(C.child2);\r\n            // Swap A and C\r\n            C.child1 = A;\r\n            C.parent = A.parent;\r\n            A.parent = C;\r\n            // A's old parent should point to C\r\n            if (C.parent !== null) {\r\n                if (C.parent.child1 === A) {\r\n                    C.parent.child1 = C;\r\n                }\r\n                else {\r\n                    // DEBUG: b2Assert(C.parent.child2 === A);\r\n                    C.parent.child2 = C;\r\n                }\r\n            }\r\n            else {\r\n                this.m_root = C;\r\n            }\r\n            // Rotate\r\n            if (F.height > G.height) {\r\n                C.child2 = F;\r\n                A.child2 = G;\r\n                G.parent = A;\r\n                A.aabb.Combine2(B.aabb, G.aabb);\r\n                C.aabb.Combine2(A.aabb, F.aabb);\r\n                A.height = 1 + b2Max(B.height, G.height);\r\n                C.height = 1 + b2Max(A.height, F.height);\r\n            }\r\n            else {\r\n                C.child2 = G;\r\n                A.child2 = F;\r\n                F.parent = A;\r\n                A.aabb.Combine2(B.aabb, F.aabb);\r\n                C.aabb.Combine2(A.aabb, G.aabb);\r\n                A.height = 1 + b2Max(B.height, F.height);\r\n                C.height = 1 + b2Max(A.height, G.height);\r\n            }\r\n            return C;\r\n        }\r\n        // Rotate B up\r\n        if (balance < -1) {\r\n            const D = verify(B.child1);\r\n            const E = verify(B.child2);\r\n            // Swap A and B\r\n            B.child1 = A;\r\n            B.parent = A.parent;\r\n            A.parent = B;\r\n            // A's old parent should point to B\r\n            if (B.parent !== null) {\r\n                if (B.parent.child1 === A) {\r\n                    B.parent.child1 = B;\r\n                }\r\n                else {\r\n                    // DEBUG: b2Assert(B.parent.child2 === A);\r\n                    B.parent.child2 = B;\r\n                }\r\n            }\r\n            else {\r\n                this.m_root = B;\r\n            }\r\n            // Rotate\r\n            if (D.height > E.height) {\r\n                B.child2 = D;\r\n                A.child1 = E;\r\n                E.parent = A;\r\n                A.aabb.Combine2(C.aabb, E.aabb);\r\n                B.aabb.Combine2(A.aabb, D.aabb);\r\n                A.height = 1 + b2Max(C.height, E.height);\r\n                B.height = 1 + b2Max(A.height, D.height);\r\n            }\r\n            else {\r\n                B.child2 = E;\r\n                A.child1 = D;\r\n                D.parent = A;\r\n                A.aabb.Combine2(C.aabb, D.aabb);\r\n                B.aabb.Combine2(A.aabb, E.aabb);\r\n                A.height = 1 + b2Max(C.height, D.height);\r\n                B.height = 1 + b2Max(A.height, E.height);\r\n            }\r\n            return B;\r\n        }\r\n        return A;\r\n    }\r\n    GetHeight() {\r\n        if (this.m_root === null) {\r\n            return 0;\r\n        }\r\n        return this.m_root.height;\r\n    }\r\n    static GetAreaNode(node) {\r\n        if (node === null) {\r\n            return 0;\r\n        }\r\n        if (node.IsLeaf()) {\r\n            return 0;\r\n        }\r\n        let area = node.aabb.GetPerimeter();\r\n        area += b2DynamicTree.GetAreaNode(node.child1);\r\n        area += b2DynamicTree.GetAreaNode(node.child2);\r\n        return area;\r\n    }\r\n    GetAreaRatio() {\r\n        if (this.m_root === null) {\r\n            return 0;\r\n        }\r\n        const root = this.m_root;\r\n        const rootArea = root.aabb.GetPerimeter();\r\n        const totalArea = b2DynamicTree.GetAreaNode(this.m_root);\r\n        /*\r\n        float32 totalArea = 0.0;\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          const b2TreeNode<T>* node = m_nodes + i;\r\n          if (node.height < 0) {\r\n            // Free node in pool\r\n            continue;\r\n          }\r\n    \r\n          totalArea += node.aabb.GetPerimeter();\r\n        }\r\n        */\r\n        return totalArea / rootArea;\r\n    }\r\n    ComputeHeightNode(node) {\r\n        if (!node || node.IsLeaf()) {\r\n            return 0;\r\n        }\r\n        const height1 = this.ComputeHeightNode(node.child1);\r\n        const height2 = this.ComputeHeightNode(node.child2);\r\n        return 1 + b2Max(height1, height2);\r\n    }\r\n    ComputeHeight() {\r\n        const height = this.ComputeHeightNode(this.m_root);\r\n        return height;\r\n    }\r\n    ValidateStructure(index) {\r\n        if (index === null) {\r\n            return;\r\n        }\r\n        if (index === this.m_root) {\r\n            // DEBUG: b2Assert(index.parent === null);\r\n        }\r\n        const node = index;\r\n        if (node.IsLeaf()) {\r\n            // DEBUG: b2Assert(node.child1 === null);\r\n            // DEBUG: b2Assert(node.child2 === null);\r\n            // DEBUG: b2Assert(node.height === 0);\r\n            return;\r\n        }\r\n        const child1 = verify(node.child1);\r\n        const child2 = verify(node.child2);\r\n        // DEBUG: b2Assert(child1.parent === index);\r\n        // DEBUG: b2Assert(child2.parent === index);\r\n        this.ValidateStructure(child1);\r\n        this.ValidateStructure(child2);\r\n    }\r\n    ValidateMetrics(index) {\r\n        if (index === null) {\r\n            return;\r\n        }\r\n        const node = index;\r\n        if (node.IsLeaf()) {\r\n            // DEBUG: b2Assert(node.child1 === null);\r\n            // DEBUG: b2Assert(node.child2 === null);\r\n            // DEBUG: b2Assert(node.height === 0);\r\n            return;\r\n        }\r\n        const child1 = verify(node.child1);\r\n        const child2 = verify(node.child2);\r\n        // DEBUG: const height1: number = child1.height;\r\n        // DEBUG: const height2: number = child2.height;\r\n        // DEBUG: const height: number = 1 + b2Max(height1, height2);\r\n        // DEBUG: b2Assert(node.height === height);\r\n        const aabb = b2DynamicTree.s_aabb;\r\n        aabb.Combine2(child1.aabb, child2.aabb);\r\n        // DEBUG: b2Assert(aabb.lowerBound === node.aabb.lowerBound);\r\n        // DEBUG: b2Assert(aabb.upperBound === node.aabb.upperBound);\r\n        this.ValidateMetrics(child1);\r\n        this.ValidateMetrics(child2);\r\n    }\r\n    Validate() {\r\n        // DEBUG: this.ValidateStructure(this.m_root);\r\n        // DEBUG: this.ValidateMetrics(this.m_root);\r\n        // let freeCount: number = 0;\r\n        // let freeIndex: b2TreeNode<T> | null = this.m_freeList;\r\n        // while (freeIndex !== null) {\r\n        //   freeIndex = freeIndex.parent; // freeIndex = freeIndex.next;\r\n        //   ++freeCount;\r\n        // }\r\n        // DEBUG: b2Assert(this.GetHeight() === this.ComputeHeight());\r\n        // b2Assert(this.m_nodeCount + freeCount === this.m_nodeCapacity);\r\n    }\r\n    static GetMaxBalanceNode(node, maxBalance) {\r\n        if (node === null) {\r\n            return maxBalance;\r\n        }\r\n        if (node.height <= 1) {\r\n            return maxBalance;\r\n        }\r\n        // DEBUG: b2Assert(!node.IsLeaf());\r\n        const child1 = verify(node.child1);\r\n        const child2 = verify(node.child2);\r\n        const balance = b2Abs(child2.height - child1.height);\r\n        return b2Max(maxBalance, balance);\r\n    }\r\n    GetMaxBalance() {\r\n        const maxBalance = b2DynamicTree.GetMaxBalanceNode(this.m_root, 0);\r\n        /*\r\n        int32 maxBalance = 0;\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          const b2TreeNode<T>* node = m_nodes + i;\r\n          if (node.height <= 1) {\r\n            continue;\r\n          }\r\n    \r\n          b2Assert(!node.IsLeaf());\r\n    \r\n          int32 child1 = node.child1;\r\n          int32 child2 = node.child2;\r\n          int32 balance = b2Abs(m_nodes[child2].height - m_nodes[child1].height);\r\n          maxBalance = b2Max(maxBalance, balance);\r\n        }\r\n        */\r\n        return maxBalance;\r\n    }\r\n    RebuildBottomUp() {\r\n        /*\r\n        int32* nodes = (int32*)b2Alloc(m_nodeCount * sizeof(int32));\r\n        int32 count = 0;\r\n    \r\n        // Build array of leaves. Free the rest.\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          if (m_nodes[i].height < 0) {\r\n            // free node in pool\r\n            continue;\r\n          }\r\n    \r\n          if (m_nodes[i].IsLeaf()) {\r\n            m_nodes[i].parent = b2_nullNode;\r\n            nodes[count] = i;\r\n            ++count;\r\n          } else {\r\n            FreeNode(i);\r\n          }\r\n        }\r\n    \r\n        while (count > 1) {\r\n          float32 minCost = b2_maxFloat;\r\n          int32 iMin = -1, jMin = -1;\r\n          for (int32 i = 0; i < count; ++i) {\r\n            b2AABB aabbi = m_nodes[nodes[i]].aabb;\r\n    \r\n            for (int32 j = i + 1; j < count; ++j) {\r\n              b2AABB aabbj = m_nodes[nodes[j]].aabb;\r\n              b2AABB b;\r\n              b.Combine(aabbi, aabbj);\r\n              float32 cost = b.GetPerimeter();\r\n              if (cost < minCost) {\r\n                iMin = i;\r\n                jMin = j;\r\n                minCost = cost;\r\n              }\r\n            }\r\n          }\r\n    \r\n          int32 index1 = nodes[iMin];\r\n          int32 index2 = nodes[jMin];\r\n          b2TreeNode<T>* child1 = m_nodes + index1;\r\n          b2TreeNode<T>* child2 = m_nodes + index2;\r\n    \r\n          int32 parentIndex = AllocateNode();\r\n          b2TreeNode<T>* parent = m_nodes + parentIndex;\r\n          parent.child1 = index1;\r\n          parent.child2 = index2;\r\n          parent.height = 1 + b2Max(child1.height, child2.height);\r\n          parent.aabb.Combine(child1.aabb, child2.aabb);\r\n          parent.parent = b2_nullNode;\r\n    \r\n          child1.parent = parentIndex;\r\n          child2.parent = parentIndex;\r\n    \r\n          nodes[jMin] = nodes[count-1];\r\n          nodes[iMin] = parentIndex;\r\n          --count;\r\n        }\r\n    \r\n        m_root = nodes[0];\r\n        b2Free(nodes);\r\n        */\r\n        this.Validate();\r\n    }\r\n    static ShiftOriginNode(node, newOrigin) {\r\n        if (node === null) {\r\n            return;\r\n        }\r\n        if (node.height <= 1) {\r\n            return;\r\n        }\r\n        // DEBUG: b2Assert(!node.IsLeaf());\r\n        const child1 = node.child1;\r\n        const child2 = node.child2;\r\n        b2DynamicTree.ShiftOriginNode(child1, newOrigin);\r\n        b2DynamicTree.ShiftOriginNode(child2, newOrigin);\r\n        node.aabb.lowerBound.SelfSub(newOrigin);\r\n        node.aabb.upperBound.SelfSub(newOrigin);\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        b2DynamicTree.ShiftOriginNode(this.m_root, newOrigin);\r\n        /*\r\n        // Build array of leaves. Free the rest.\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          m_nodes[i].aabb.lowerBound -= newOrigin;\r\n          m_nodes[i].aabb.upperBound -= newOrigin;\r\n        }\r\n        */\r\n    }\r\n}\r\nb2DynamicTree.s_r = new b2Vec2();\r\nb2DynamicTree.s_v = new b2Vec2();\r\nb2DynamicTree.s_abs_v = new b2Vec2();\r\nb2DynamicTree.s_segmentAABB = new b2AABB();\r\nb2DynamicTree.s_subInput = new b2RayCastInput();\r\nb2DynamicTree.s_combinedAABB = new b2AABB();\r\nb2DynamicTree.s_aabb = new b2AABB();\r\nb2DynamicTree.s_node_id = 0;\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2DynamicTree } from \"./b2DynamicTree\";\r\nexport class b2Pair {\r\n    constructor(proxyA, proxyB) {\r\n        this.proxyA = proxyA;\r\n        this.proxyB = proxyB;\r\n    }\r\n}\r\n/// The broad-phase is used for computing pairs and performing volume queries and ray casts.\r\n/// This broad-phase does not persist pairs. Instead, this reports potentially new pairs.\r\n/// It is up to the client to consume the new pairs and to track subsequent overlap.\r\nexport class b2BroadPhase {\r\n    constructor() {\r\n        this.m_tree = new b2DynamicTree();\r\n        this.m_proxyCount = 0;\r\n        // public m_moveCapacity: number = 16;\r\n        this.m_moveCount = 0;\r\n        this.m_moveBuffer = [];\r\n        // public m_pairCapacity: number = 16;\r\n        this.m_pairCount = 0;\r\n        this.m_pairBuffer = [];\r\n    }\r\n    // public m_queryProxyId: number = 0;\r\n    /// Create a proxy with an initial AABB. Pairs are not reported until\r\n    /// UpdatePairs is called.\r\n    CreateProxy(aabb, userData) {\r\n        const proxy = this.m_tree.CreateProxy(aabb, userData);\r\n        ++this.m_proxyCount;\r\n        this.BufferMove(proxy);\r\n        return proxy;\r\n    }\r\n    /// Destroy a proxy. It is up to the client to remove any pairs.\r\n    DestroyProxy(proxy) {\r\n        this.UnBufferMove(proxy);\r\n        --this.m_proxyCount;\r\n        this.m_tree.DestroyProxy(proxy);\r\n    }\r\n    /// Call MoveProxy as many times as you like, then when you are done\r\n    /// call UpdatePairs to finalized the proxy pairs (for your time step).\r\n    MoveProxy(proxy, aabb, displacement) {\r\n        const buffer = this.m_tree.MoveProxy(proxy, aabb, displacement);\r\n        if (buffer) {\r\n            this.BufferMove(proxy);\r\n        }\r\n    }\r\n    /// Call to trigger a re-processing of it's pairs on the next call to UpdatePairs.\r\n    TouchProxy(proxy) {\r\n        this.BufferMove(proxy);\r\n    }\r\n    /// Get the fat AABB for a proxy.\r\n    // public GetFatAABB(proxy: b2TreeNode<T>): b2AABB {\r\n    //   return this.m_tree.GetFatAABB(proxy);\r\n    // }\r\n    /// Get user data from a proxy. Returns NULL if the id is invalid.\r\n    // public GetUserData(proxy: b2TreeNode<T>): T {\r\n    //   return this.m_tree.GetUserData(proxy);\r\n    // }\r\n    /// Test overlap of fat AABBs.\r\n    // public TestOverlap(proxyA: b2TreeNode<T>, proxyB: b2TreeNode<T>): boolean {\r\n    //   const aabbA: b2AABB = this.m_tree.GetFatAABB(proxyA);\r\n    //   const aabbB: b2AABB = this.m_tree.GetFatAABB(proxyB);\r\n    //   return b2TestOverlapAABB(aabbA, aabbB);\r\n    // }\r\n    /// Get the number of proxies.\r\n    GetProxyCount() {\r\n        return this.m_proxyCount;\r\n    }\r\n    /// Update the pairs. This results in pair callbacks. This can only add pairs.\r\n    UpdatePairs(callback) {\r\n        // Reset pair buffer\r\n        this.m_pairCount = 0;\r\n        // Perform tree queries for all moving proxies.\r\n        for (let i = 0; i < this.m_moveCount; ++i) {\r\n            const queryProxy = this.m_moveBuffer[i];\r\n            if (queryProxy === null) {\r\n                continue;\r\n            }\r\n            // This is called from box2d.b2DynamicTree::Query when we are gathering pairs.\r\n            // boolean b2BroadPhase::QueryCallback(int32 proxyId);\r\n            // We have to query the tree with the fat AABB so that\r\n            // we don't fail to create a pair that may touch later.\r\n            const fatAABB = queryProxy.aabb; // this.m_tree.GetFatAABB(queryProxy);\r\n            // Query tree, create pairs and add them pair buffer.\r\n            this.m_tree.Query(fatAABB, (proxy) => {\r\n                // A proxy cannot form a pair with itself.\r\n                if (proxy.m_id === queryProxy.m_id) {\r\n                    return true;\r\n                }\r\n                // const proxyA = proxy < queryProxy ? proxy : queryProxy;\r\n                // const proxyB = proxy >= queryProxy ? proxy : queryProxy;\r\n                let proxyA;\r\n                let proxyB;\r\n                if (proxy.m_id < queryProxy.m_id) {\r\n                    proxyA = proxy;\r\n                    proxyB = queryProxy;\r\n                }\r\n                else {\r\n                    proxyA = queryProxy;\r\n                    proxyB = proxy;\r\n                }\r\n                // Grow the pair buffer as needed.\r\n                if (this.m_pairCount === this.m_pairBuffer.length) {\r\n                    this.m_pairBuffer[this.m_pairCount] = new b2Pair(proxyA, proxyB);\r\n                }\r\n                else {\r\n                    const pair = this.m_pairBuffer[this.m_pairCount];\r\n                    pair.proxyA = proxyA;\r\n                    pair.proxyB = proxyB;\r\n                }\r\n                ++this.m_pairCount;\r\n                return true;\r\n            });\r\n        }\r\n        // Reset move buffer\r\n        this.m_moveCount = 0;\r\n        // Sort the pair buffer to expose duplicates.\r\n        this.m_pairBuffer.length = this.m_pairCount;\r\n        this.m_pairBuffer.sort(b2PairLessThan);\r\n        // Send the pairs back to the client.\r\n        let i = 0;\r\n        while (i < this.m_pairCount) {\r\n            const primaryPair = this.m_pairBuffer[i];\r\n            const userDataA = primaryPair.proxyA.userData; // this.m_tree.GetUserData(primaryPair.proxyA);\r\n            const userDataB = primaryPair.proxyB.userData; // this.m_tree.GetUserData(primaryPair.proxyB);\r\n            callback(userDataA, userDataB);\r\n            ++i;\r\n            // Skip any duplicate pairs.\r\n            while (i < this.m_pairCount) {\r\n                const pair = this.m_pairBuffer[i];\r\n                if (pair.proxyA.m_id !== primaryPair.proxyA.m_id || pair.proxyB.m_id !== primaryPair.proxyB.m_id) {\r\n                    break;\r\n                }\r\n                ++i;\r\n            }\r\n        }\r\n        // Try to keep the tree balanced.\r\n        // this.m_tree.Rebalance(4);\r\n    }\r\n    /// Query an AABB for overlapping proxies. The callback class\r\n    /// is called for each proxy that overlaps the supplied AABB.\r\n    Query(aabb, callback) {\r\n        this.m_tree.Query(aabb, callback);\r\n    }\r\n    QueryPoint(point, callback) {\r\n        this.m_tree.QueryPoint(point, callback);\r\n    }\r\n    /// Ray-cast against the proxies in the tree. This relies on the callback\r\n    /// to perform a exact ray-cast in the case were the proxy contains a shape.\r\n    /// The callback also performs the any collision filtering. This has performance\r\n    /// roughly equal to k * log(n), where k is the number of collisions and n is the\r\n    /// number of proxies in the tree.\r\n    /// @param input the ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\r\n    /// @param callback a callback class that is called for each proxy that is hit by the ray.\r\n    RayCast(input, callback) {\r\n        this.m_tree.RayCast(input, callback);\r\n    }\r\n    /// Get the height of the embedded tree.\r\n    GetTreeHeight() {\r\n        return this.m_tree.GetHeight();\r\n    }\r\n    /// Get the balance of the embedded tree.\r\n    GetTreeBalance() {\r\n        return this.m_tree.GetMaxBalance();\r\n    }\r\n    /// Get the quality metric of the embedded tree.\r\n    GetTreeQuality() {\r\n        return this.m_tree.GetAreaRatio();\r\n    }\r\n    /// Shift the world origin. Useful for large worlds.\r\n    /// The shift formula is: position -= newOrigin\r\n    /// @param newOrigin the new origin with respect to the old origin\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_tree.ShiftOrigin(newOrigin);\r\n    }\r\n    BufferMove(proxy) {\r\n        this.m_moveBuffer[this.m_moveCount] = proxy;\r\n        ++this.m_moveCount;\r\n    }\r\n    UnBufferMove(proxy) {\r\n        const i = this.m_moveBuffer.indexOf(proxy);\r\n        this.m_moveBuffer[i] = null;\r\n    }\r\n}\r\n/// This is used to sort pairs.\r\nexport function b2PairLessThan(pair1, pair2) {\r\n    if (pair1.proxyA.m_id === pair2.proxyA.m_id) {\r\n        return pair1.proxyB.m_id - pair2.proxyB.m_id;\r\n    }\r\n    return pair1.proxyA.m_id - pair2.proxyA.m_id;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJCcm9hZFBoYXNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvQ29sbGlzaW9uL2IyQnJvYWRQaGFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUlGLE9BQU8sRUFBYyxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUU1RCxNQUFNLE9BQU8sTUFBTTtJQUNqQixZQUFtQixNQUFxQixFQUFTLE1BQXFCO1FBQW5ELFdBQU0sR0FBTixNQUFNLENBQWU7UUFBUyxXQUFNLEdBQU4sTUFBTSxDQUFlO0lBQUcsQ0FBQztDQUMzRTtBQUVELDRGQUE0RjtBQUM1Rix5RkFBeUY7QUFDekYsb0ZBQW9GO0FBQ3BGLE1BQU0sT0FBTyxZQUFZO0lBQXpCO1FBQ2tCLFdBQU0sR0FBcUIsSUFBSSxhQUFhLEVBQUssQ0FBQztRQUMzRCxpQkFBWSxHQUFXLENBQUMsQ0FBQztRQUNoQyxzQ0FBc0M7UUFDL0IsZ0JBQVcsR0FBVyxDQUFDLENBQUM7UUFDZixpQkFBWSxHQUFnQyxFQUFFLENBQUM7UUFDL0Qsc0NBQXNDO1FBQy9CLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ2YsaUJBQVksR0FBcUIsRUFBRSxDQUFDO0lBK0x0RCxDQUFDO0lBOUxDLHFDQUFxQztJQUVyQyxxRUFBcUU7SUFDckUsMEJBQTBCO0lBQ25CLFdBQVcsQ0FBQyxJQUFZLEVBQUUsUUFBVztRQUMxQyxNQUFNLEtBQUssR0FBa0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3JFLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUNwQixJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZCLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELGdFQUFnRTtJQUN6RCxZQUFZLENBQUMsS0FBb0I7UUFDdEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QixFQUFFLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDcEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELG9FQUFvRTtJQUNwRSx1RUFBdUU7SUFDaEUsU0FBUyxDQUFDLEtBQW9CLEVBQUUsSUFBWSxFQUFFLFlBQW9CO1FBQ3ZFLE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDekUsSUFBSSxNQUFNLEVBQUU7WUFDVixJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3hCO0lBQ0gsQ0FBQztJQUVELGtGQUFrRjtJQUMzRSxVQUFVLENBQUMsS0FBb0I7UUFDcEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsaUNBQWlDO0lBQ2pDLG9EQUFvRDtJQUNwRCwwQ0FBMEM7SUFDMUMsSUFBSTtJQUVKLGtFQUFrRTtJQUNsRSxnREFBZ0Q7SUFDaEQsMkNBQTJDO0lBQzNDLElBQUk7SUFFSiw4QkFBOEI7SUFDOUIsOEVBQThFO0lBQzlFLDBEQUEwRDtJQUMxRCwwREFBMEQ7SUFDMUQsNENBQTRDO0lBQzVDLElBQUk7SUFFSiw4QkFBOEI7SUFDdkIsYUFBYTtRQUNsQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztJQUVELDhFQUE4RTtJQUN2RSxXQUFXLENBQUMsUUFBOEI7UUFDL0Msb0JBQW9CO1FBQ3BCLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBRXJCLCtDQUErQztRQUMvQyxLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsRUFBRTtZQUNqRCxNQUFNLFVBQVUsR0FBeUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM5RCxJQUFJLFVBQVUsS0FBSyxJQUFJLEVBQUU7Z0JBQ3ZCLFNBQVM7YUFDVjtZQUVELDhFQUE4RTtZQUM5RSxzREFBc0Q7WUFFdEQsc0RBQXNEO1lBQ3RELHVEQUF1RDtZQUN2RCxNQUFNLE9BQU8sR0FBVyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsc0NBQXNDO1lBRS9FLHFEQUFxRDtZQUNyRCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUFvQixFQUFXLEVBQUU7Z0JBQzNELDBDQUEwQztnQkFDMUMsSUFBSSxLQUFLLENBQUMsSUFBSSxLQUFLLFVBQVUsQ0FBQyxJQUFJLEVBQUU7b0JBQ2xDLE9BQU8sSUFBSSxDQUFDO2lCQUNiO2dCQUVELDBEQUEwRDtnQkFDMUQsMkRBQTJEO2dCQUMzRCxJQUFJLE1BQXFCLENBQUM7Z0JBQzFCLElBQUksTUFBcUIsQ0FBQztnQkFDMUIsSUFBSSxLQUFLLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQyxJQUFJLEVBQUU7b0JBQ2hDLE1BQU0sR0FBRyxLQUFLLENBQUM7b0JBQ2YsTUFBTSxHQUFHLFVBQVUsQ0FBQztpQkFDckI7cUJBQU07b0JBQ0wsTUFBTSxHQUFHLFVBQVUsQ0FBQztvQkFDcEIsTUFBTSxHQUFHLEtBQUssQ0FBQztpQkFDaEI7Z0JBRUQsa0NBQWtDO2dCQUNsQyxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUU7b0JBQ2pELElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztpQkFDbEU7cUJBQU07b0JBQ0wsTUFBTSxJQUFJLEdBQWMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7b0JBQzVELElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO29CQUNyQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztpQkFDdEI7Z0JBRUQsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDO2dCQUVuQixPQUFPLElBQUksQ0FBQztZQUNkLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxvQkFBb0I7UUFDcEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFFckIsNkNBQTZDO1FBQzdDLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDNUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFFdkMscUNBQXFDO1FBQ3JDLElBQUksQ0FBQyxHQUFXLENBQUMsQ0FBQztRQUNsQixPQUFPLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQzNCLE1BQU0sV0FBVyxHQUFjLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDcEQsTUFBTSxTQUFTLEdBQU0sV0FBVyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQywrQ0FBK0M7WUFDakcsTUFBTSxTQUFTLEdBQU0sV0FBVyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQywrQ0FBK0M7WUFFakcsUUFBUSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztZQUMvQixFQUFFLENBQUMsQ0FBQztZQUVKLDRCQUE0QjtZQUM1QixPQUFPLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFO2dCQUMzQixNQUFNLElBQUksR0FBYyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUM3QyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO29CQUNoRyxNQUFNO2lCQUNQO2dCQUNELEVBQUUsQ0FBQyxDQUFDO2FBQ0w7U0FDRjtRQUVELGlDQUFpQztRQUNqQyw0QkFBNEI7SUFDOUIsQ0FBQztJQUVELDZEQUE2RDtJQUM3RCw2REFBNkQ7SUFDdEQsS0FBSyxDQUFDLElBQVksRUFBRSxRQUEwQztRQUNuRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVNLFVBQVUsQ0FBQyxLQUFhLEVBQUUsUUFBMEM7UUFDekUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCx5RUFBeUU7SUFDekUsNEVBQTRFO0lBQzVFLGdGQUFnRjtJQUNoRixpRkFBaUY7SUFDakYsa0NBQWtDO0lBQ2xDLGtHQUFrRztJQUNsRywwRkFBMEY7SUFDbkYsT0FBTyxDQUFDLEtBQXFCLEVBQUUsUUFBZ0U7UUFDcEcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCx3Q0FBd0M7SUFDakMsYUFBYTtRQUNsQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVELHlDQUF5QztJQUNsQyxjQUFjO1FBQ25CLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRUQsZ0RBQWdEO0lBQ3pDLGNBQWM7UUFDbkIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxvREFBb0Q7SUFDcEQsK0NBQStDO0lBQy9DLGtFQUFrRTtJQUMzRCxXQUFXLENBQUMsU0FBYTtRQUM5QixJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRU0sVUFBVSxDQUFDLEtBQW9CO1FBQ3BDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUM1QyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDckIsQ0FBQztJQUVNLFlBQVksQ0FBQyxLQUFvQjtRQUN0QyxNQUFNLENBQUMsR0FBVyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQztJQUM5QixDQUFDO0NBQ0Y7QUFFRCwrQkFBK0I7QUFDL0IsTUFBTSxVQUFVLGNBQWMsQ0FBSSxLQUFnQixFQUFFLEtBQWdCO0lBQ2xFLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7UUFDM0MsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztLQUM5QztJQUVELE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7QUFDL0MsQ0FBQyJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_linearSlop, b2_maxPolygonVertices } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Max, b2Vec2, b2Rot, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2Distance, b2DistanceInput, b2DistanceOutput, b2DistanceProxy, b2SimplexCache } from \"./b2Distance\";\r\nexport let b2_toiTime = 0;\r\nexport let b2_toiMaxTime = 0;\r\nexport let b2_toiCalls = 0;\r\nexport let b2_toiIters = 0;\r\nexport let b2_toiMaxIters = 0;\r\nexport let b2_toiRootIters = 0;\r\nexport let b2_toiMaxRootIters = 0;\r\nexport function b2_toi_reset() {\r\n    b2_toiTime = 0;\r\n    b2_toiMaxTime = 0;\r\n    b2_toiCalls = 0;\r\n    b2_toiIters = 0;\r\n    b2_toiMaxIters = 0;\r\n    b2_toiRootIters = 0;\r\n    b2_toiMaxRootIters = 0;\r\n}\r\nconst b2TimeOfImpact_s_xfA = new b2Transform();\r\nconst b2TimeOfImpact_s_xfB = new b2Transform();\r\nconst b2TimeOfImpact_s_pointA = new b2Vec2();\r\nconst b2TimeOfImpact_s_pointB = new b2Vec2();\r\nconst b2TimeOfImpact_s_normal = new b2Vec2();\r\nconst b2TimeOfImpact_s_axisA = new b2Vec2();\r\nconst b2TimeOfImpact_s_axisB = new b2Vec2();\r\n/// Input parameters for b2TimeOfImpact\r\nexport class b2TOIInput {\r\n    constructor() {\r\n        this.proxyA = new b2DistanceProxy();\r\n        this.proxyB = new b2DistanceProxy();\r\n        this.sweepA = new b2Sweep();\r\n        this.sweepB = new b2Sweep();\r\n        this.tMax = 0; // defines sweep interval [0, tMax]\r\n    }\r\n}\r\n/// Output parameters for b2TimeOfImpact.\r\nexport var b2TOIOutputState;\r\n(function (b2TOIOutputState) {\r\n    b2TOIOutputState[b2TOIOutputState[\"e_unknown\"] = 0] = \"e_unknown\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_failed\"] = 1] = \"e_failed\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_overlapped\"] = 2] = \"e_overlapped\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_touching\"] = 3] = \"e_touching\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_separated\"] = 4] = \"e_separated\";\r\n})(b2TOIOutputState || (b2TOIOutputState = {}));\r\nexport class b2TOIOutput {\r\n    constructor() {\r\n        this.state = b2TOIOutputState.e_unknown;\r\n        this.t = 0;\r\n    }\r\n}\r\nexport var b2SeparationFunctionType;\r\n(function (b2SeparationFunctionType) {\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_points\"] = 0] = \"e_points\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_faceA\"] = 1] = \"e_faceA\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_faceB\"] = 2] = \"e_faceB\";\r\n})(b2SeparationFunctionType || (b2SeparationFunctionType = {}));\r\nexport class b2SeparationFunction {\r\n    constructor() {\r\n        this.m_sweepA = new b2Sweep();\r\n        this.m_sweepB = new b2Sweep();\r\n        this.m_type = b2SeparationFunctionType.e_unknown;\r\n        this.m_localPoint = new b2Vec2();\r\n        this.m_axis = new b2Vec2();\r\n    }\r\n    Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1) {\r\n        this.m_proxyA = proxyA;\r\n        this.m_proxyB = proxyB;\r\n        const count = cache.count;\r\n        // DEBUG: b2Assert(0 < count && count < 3);\r\n        this.m_sweepA.Copy(sweepA);\r\n        this.m_sweepB.Copy(sweepB);\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t1);\r\n        this.m_sweepB.GetTransform(xfB, t1);\r\n        if (count === 1) {\r\n            this.m_type = b2SeparationFunctionType.e_points;\r\n            const localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n            const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n            b2Vec2.SubVV(pointB, pointA, this.m_axis);\r\n            const s = this.m_axis.Normalize();\r\n            // #if B2_ENABLE_PARTICLE\r\n            this.m_localPoint.SetZero();\r\n            // #endif\r\n            return s;\r\n        }\r\n        else if (cache.indexA[0] === cache.indexA[1]) {\r\n            // Two points on B and one on A.\r\n            this.m_type = b2SeparationFunctionType.e_faceB;\r\n            const localPointB1 = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const localPointB2 = this.m_proxyB.GetVertex(cache.indexB[1]);\r\n            b2Vec2.CrossVOne(b2Vec2.SubVV(localPointB2, localPointB1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\r\n            const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n            b2Vec2.MidVV(localPointB1, localPointB2, this.m_localPoint);\r\n            const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n            const localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n            let s = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n            if (s < 0) {\r\n                this.m_axis.SelfNeg();\r\n                s = -s;\r\n            }\r\n            return s;\r\n        }\r\n        else {\r\n            // Two points on A and one or two points on B.\r\n            this.m_type = b2SeparationFunctionType.e_faceA;\r\n            const localPointA1 = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const localPointA2 = this.m_proxyA.GetVertex(cache.indexA[1]);\r\n            b2Vec2.CrossVOne(b2Vec2.SubVV(localPointA2, localPointA1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\r\n            const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n            b2Vec2.MidVV(localPointA1, localPointA2, this.m_localPoint);\r\n            const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n            const localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n            let s = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n            if (s < 0) {\r\n                this.m_axis.SelfNeg();\r\n                s = -s;\r\n            }\r\n            return s;\r\n        }\r\n    }\r\n    FindMinSeparation(indexA, indexB, t) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t);\r\n        this.m_sweepB.GetTransform(xfB, t);\r\n        switch (this.m_type) {\r\n            case b2SeparationFunctionType.e_points: {\r\n                const axisA = b2Rot.MulTRV(xfA.q, this.m_axis, b2TimeOfImpact_s_axisA);\r\n                const axisB = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(this.m_axis, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\r\n                indexA[0] = this.m_proxyA.GetSupport(axisA);\r\n                indexB[0] = this.m_proxyB.GetSupport(axisB);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA[0]);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB[0]);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceA: {\r\n                const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n                const axisB = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\r\n                indexA[0] = -1;\r\n                indexB[0] = this.m_proxyB.GetSupport(axisB);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB[0]);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceB: {\r\n                const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n                const axisA = b2Rot.MulTRV(xfA.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisA);\r\n                indexB[0] = -1;\r\n                indexA[0] = this.m_proxyA.GetSupport(axisA);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA[0]);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                indexA[0] = -1;\r\n                indexB[0] = -1;\r\n                return 0;\r\n        }\r\n    }\r\n    Evaluate(indexA, indexB, t) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t);\r\n        this.m_sweepB.GetTransform(xfB, t);\r\n        switch (this.m_type) {\r\n            case b2SeparationFunctionType.e_points: {\r\n                const localPointA = this.m_proxyA.GetVertex(indexA);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceA: {\r\n                const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceB: {\r\n                const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                return 0;\r\n        }\r\n    }\r\n}\r\nconst b2TimeOfImpact_s_timer = new b2Timer();\r\nconst b2TimeOfImpact_s_cache = new b2SimplexCache();\r\nconst b2TimeOfImpact_s_distanceInput = new b2DistanceInput();\r\nconst b2TimeOfImpact_s_distanceOutput = new b2DistanceOutput();\r\nconst b2TimeOfImpact_s_fcn = new b2SeparationFunction();\r\nconst b2TimeOfImpact_s_indexA = [0];\r\nconst b2TimeOfImpact_s_indexB = [0];\r\nconst b2TimeOfImpact_s_sweepA = new b2Sweep();\r\nconst b2TimeOfImpact_s_sweepB = new b2Sweep();\r\nexport function b2TimeOfImpact(output, input) {\r\n    const timer = b2TimeOfImpact_s_timer.Reset();\r\n    ++b2_toiCalls;\r\n    output.state = b2TOIOutputState.e_unknown;\r\n    output.t = input.tMax;\r\n    const proxyA = input.proxyA;\r\n    const proxyB = input.proxyB;\r\n    const maxVertices = b2Max(b2_maxPolygonVertices, proxyA.m_count, proxyB.m_count);\r\n    const sweepA = b2TimeOfImpact_s_sweepA.Copy(input.sweepA);\r\n    const sweepB = b2TimeOfImpact_s_sweepB.Copy(input.sweepB);\r\n    // Large rotations can make the root finder fail, so we normalize the\r\n    // sweep angles.\r\n    sweepA.Normalize();\r\n    sweepB.Normalize();\r\n    const tMax = input.tMax;\r\n    const totalRadius = proxyA.m_radius + proxyB.m_radius;\r\n    const target = b2Max(b2_linearSlop, totalRadius - 3 * b2_linearSlop);\r\n    const tolerance = 0.25 * b2_linearSlop;\r\n    // DEBUG: b2Assert(target > tolerance);\r\n    let t1 = 0;\r\n    const k_maxIterations = 20; // TODO_ERIN b2Settings\r\n    let iter = 0;\r\n    // Prepare input for distance query.\r\n    const cache = b2TimeOfImpact_s_cache;\r\n    cache.count = 0;\r\n    const distanceInput = b2TimeOfImpact_s_distanceInput;\r\n    distanceInput.proxyA.Copy(input.proxyA);\r\n    distanceInput.proxyB.Copy(input.proxyB);\r\n    distanceInput.useRadii = false;\r\n    // The outer loop progressively attempts to compute new separating axes.\r\n    // This loop terminates when an axis is repeated (no progress is made).\r\n    for (;;) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        sweepA.GetTransform(xfA, t1);\r\n        sweepB.GetTransform(xfB, t1);\r\n        // Get the distance between shapes. We can also use the results\r\n        // to get a separating axis.\r\n        distanceInput.transformA.Copy(xfA);\r\n        distanceInput.transformB.Copy(xfB);\r\n        const distanceOutput = b2TimeOfImpact_s_distanceOutput;\r\n        b2Distance(distanceOutput, cache, distanceInput);\r\n        // If the shapes are overlapped, we give up on continuous collision.\r\n        if (distanceOutput.distance <= 0) {\r\n            // Failure!\r\n            output.state = b2TOIOutputState.e_overlapped;\r\n            output.t = 0;\r\n            break;\r\n        }\r\n        if (distanceOutput.distance < target + tolerance) {\r\n            // Victory!\r\n            output.state = b2TOIOutputState.e_touching;\r\n            output.t = t1;\r\n            break;\r\n        }\r\n        // Initialize the separating axis.\r\n        const fcn = b2TimeOfImpact_s_fcn;\r\n        fcn.Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\r\n        /*\r\n        #if 0\r\n            // Dump the curve seen by the root finder {\r\n              const int32 N = 100;\r\n              float32 dx = 1.0f / N;\r\n              float32 xs[N+1];\r\n              float32 fs[N+1];\r\n        \r\n              float32 x = 0.0f;\r\n        \r\n              for (int32 i = 0; i <= N; ++i) {\r\n                sweepA.GetTransform(&xfA, x);\r\n                sweepB.GetTransform(&xfB, x);\r\n                float32 f = fcn.Evaluate(xfA, xfB) - target;\r\n        \r\n                printf(\"%g %g\\n\", x, f);\r\n        \r\n                xs[i] = x;\r\n                fs[i] = f;\r\n        \r\n                x += dx;\r\n              }\r\n            }\r\n        #endif\r\n        */\r\n        // Compute the TOI on the separating axis. We do this by successively\r\n        // resolving the deepest point. This loop is bounded by the number of vertices.\r\n        let done = false;\r\n        let t2 = tMax;\r\n        let pushBackIter = 0;\r\n        for (;;) {\r\n            // Find the deepest point at t2. Store the witness point indices.\r\n            const indexA = b2TimeOfImpact_s_indexA;\r\n            const indexB = b2TimeOfImpact_s_indexB;\r\n            let s2 = fcn.FindMinSeparation(indexA, indexB, t2);\r\n            // Is the final configuration separated?\r\n            if (s2 > (target + tolerance)) {\r\n                // Victory!\r\n                output.state = b2TOIOutputState.e_separated;\r\n                output.t = tMax;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Has the separation reached tolerance?\r\n            if (s2 > (target - tolerance)) {\r\n                // Advance the sweeps\r\n                t1 = t2;\r\n                break;\r\n            }\r\n            // Compute the initial separation of the witness points.\r\n            let s1 = fcn.Evaluate(indexA[0], indexB[0], t1);\r\n            // Check for initial overlap. This might happen if the root finder\r\n            // runs out of iterations.\r\n            if (s1 < (target - tolerance)) {\r\n                output.state = b2TOIOutputState.e_failed;\r\n                output.t = t1;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Check for touching\r\n            if (s1 <= (target + tolerance)) {\r\n                // Victory! t1 should hold the TOI (could be 0.0).\r\n                output.state = b2TOIOutputState.e_touching;\r\n                output.t = t1;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Compute 1D root of: f(x) - target = 0\r\n            let rootIterCount = 0;\r\n            let a1 = t1;\r\n            let a2 = t2;\r\n            for (;;) {\r\n                // Use a mix of the secant rule and bisection.\r\n                let t = 0;\r\n                if (rootIterCount & 1) {\r\n                    // Secant rule to improve convergence.\r\n                    t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\r\n                }\r\n                else {\r\n                    // Bisection to guarantee progress.\r\n                    t = 0.5 * (a1 + a2);\r\n                }\r\n                ++rootIterCount;\r\n                ++b2_toiRootIters;\r\n                const s = fcn.Evaluate(indexA[0], indexB[0], t);\r\n                if (b2Abs(s - target) < tolerance) {\r\n                    // t2 holds a tentative value for t1\r\n                    t2 = t;\r\n                    break;\r\n                }\r\n                // Ensure we continue to bracket the root.\r\n                if (s > target) {\r\n                    a1 = t;\r\n                    s1 = s;\r\n                }\r\n                else {\r\n                    a2 = t;\r\n                    s2 = s;\r\n                }\r\n                if (rootIterCount === 50) {\r\n                    break;\r\n                }\r\n            }\r\n            b2_toiMaxRootIters = b2Max(b2_toiMaxRootIters, rootIterCount);\r\n            ++pushBackIter;\r\n            if (pushBackIter === maxVertices) {\r\n                break;\r\n            }\r\n        }\r\n        ++iter;\r\n        ++b2_toiIters;\r\n        if (done) {\r\n            break;\r\n        }\r\n        if (iter === k_maxIterations) {\r\n            // Root finder got stuck. Semi-victory.\r\n            output.state = b2TOIOutputState.e_failed;\r\n            output.t = t1;\r\n            break;\r\n        }\r\n    }\r\n    b2_toiMaxIters = b2Max(b2_toiMaxIters, iter);\r\n    const time = timer.GetMilliseconds();\r\n    b2_toiMaxTime = b2Max(b2_toiMaxTime, time);\r\n    b2_toiTime += time;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","import { b2_maxFloat, b2_epsilon } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ManifoldType } from \"./b2Collision\";\r\nconst b2CollideCircles_s_pA = new b2Vec2();\r\nconst b2CollideCircles_s_pB = new b2Vec2();\r\nexport function b2CollideCircles(manifold, circleA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    const pA = b2Transform.MulXV(xfA, circleA.m_p, b2CollideCircles_s_pA);\r\n    const pB = b2Transform.MulXV(xfB, circleB.m_p, b2CollideCircles_s_pB);\r\n    const distSqr = b2Vec2.DistanceSquaredVV(pA, pB);\r\n    const radius = circleA.m_radius + circleB.m_radius;\r\n    if (distSqr > radius * radius) {\r\n        return;\r\n    }\r\n    manifold.type = b2ManifoldType.e_circles;\r\n    manifold.localPoint.Copy(circleA.m_p);\r\n    manifold.localNormal.SetZero();\r\n    manifold.pointCount = 1;\r\n    manifold.points[0].localPoint.Copy(circleB.m_p);\r\n    manifold.points[0].id.key = 0;\r\n}\r\nconst b2CollidePolygonAndCircle_s_c = new b2Vec2();\r\nconst b2CollidePolygonAndCircle_s_cLocal = new b2Vec2();\r\nconst b2CollidePolygonAndCircle_s_faceCenter = new b2Vec2();\r\nexport function b2CollidePolygonAndCircle(manifold, polygonA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    // Compute circle position in the frame of the polygon.\r\n    const c = b2Transform.MulXV(xfB, circleB.m_p, b2CollidePolygonAndCircle_s_c);\r\n    const cLocal = b2Transform.MulTXV(xfA, c, b2CollidePolygonAndCircle_s_cLocal);\r\n    // Find the min separating edge.\r\n    let normalIndex = 0;\r\n    let separation = (-b2_maxFloat);\r\n    const radius = polygonA.m_radius + circleB.m_radius;\r\n    const vertexCount = polygonA.m_count;\r\n    const vertices = polygonA.m_vertices;\r\n    const normals = polygonA.m_normals;\r\n    for (let i = 0; i < vertexCount; ++i) {\r\n        const s = b2Vec2.DotVV(normals[i], b2Vec2.SubVV(cLocal, vertices[i], b2Vec2.s_t0));\r\n        if (s > radius) {\r\n            // Early out.\r\n            return;\r\n        }\r\n        if (s > separation) {\r\n            separation = s;\r\n            normalIndex = i;\r\n        }\r\n    }\r\n    // Vertices that subtend the incident face.\r\n    const vertIndex1 = normalIndex;\r\n    const vertIndex2 = (vertIndex1 + 1) % vertexCount;\r\n    const v1 = vertices[vertIndex1];\r\n    const v2 = vertices[vertIndex2];\r\n    // If the center is inside the polygon ...\r\n    if (separation < b2_epsilon) {\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        manifold.localNormal.Copy(normals[normalIndex]);\r\n        b2Vec2.MidVV(v1, v2, manifold.localPoint);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n        return;\r\n    }\r\n    // Compute barycentric coordinates\r\n    const u1 = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v1, b2Vec2.s_t0), b2Vec2.SubVV(v2, v1, b2Vec2.s_t1));\r\n    const u2 = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v2, b2Vec2.s_t0), b2Vec2.SubVV(v1, v2, b2Vec2.s_t1));\r\n    if (u1 <= 0) {\r\n        if (b2Vec2.DistanceSquaredVV(cLocal, v1) > radius * radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        b2Vec2.SubVV(cLocal, v1, manifold.localNormal).SelfNormalize();\r\n        manifold.localPoint.Copy(v1);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n    else if (u2 <= 0) {\r\n        if (b2Vec2.DistanceSquaredVV(cLocal, v2) > radius * radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        b2Vec2.SubVV(cLocal, v2, manifold.localNormal).SelfNormalize();\r\n        manifold.localPoint.Copy(v2);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n    else {\r\n        const faceCenter = b2Vec2.MidVV(v1, v2, b2CollidePolygonAndCircle_s_faceCenter);\r\n        const separation = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, faceCenter, b2Vec2.s_t1), normals[vertIndex1]);\r\n        if (separation > radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        manifold.localNormal.Copy(normals[vertIndex1]).SelfNormalize();\r\n        manifold.localPoint.Copy(faceCenter);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb2xsaWRlQ2lyY2xlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvQ29sbGlzaW9uL2IyQ29sbGlkZUNpcmNsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdkQsT0FBTyxFQUFjLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzRCxNQUFNLHFCQUFxQixHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7QUFDbkQsTUFBTSxxQkFBcUIsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO0FBQ25ELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxRQUFvQixFQUFFLE9BQXNCLEVBQUUsR0FBZ0IsRUFBRSxPQUFzQixFQUFFLEdBQWdCO0lBQ3ZJLFFBQVEsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBRXhCLE1BQU0sRUFBRSxHQUFXLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHLEVBQUUscUJBQXFCLENBQUMsQ0FBQztJQUM5RSxNQUFNLEVBQUUsR0FBVyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsR0FBRyxFQUFFLHFCQUFxQixDQUFDLENBQUM7SUFFOUUsTUFBTSxPQUFPLEdBQVcsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN6RCxNQUFNLE1BQU0sR0FBVyxPQUFPLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDM0QsSUFBSSxPQUFPLEdBQUcsTUFBTSxHQUFHLE1BQU0sRUFBRTtRQUM3QixPQUFPO0tBQ1I7SUFFRCxRQUFRLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQyxTQUFTLENBQUM7SUFDekMsUUFBUSxD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","// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2_maxManifoldPoints } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ContactFeatureType } from \"./b2Collision\";\r\nimport { b2ManifoldType, b2ClipVertex, b2ClipSegmentToLine } from \"./b2Collision\";\r\nconst b2EdgeSeparation_s_normal1World = new b2Vec2();\r\nconst b2EdgeSeparation_s_normal1 = new b2Vec2();\r\nconst b2EdgeSeparation_s_v1 = new b2Vec2();\r\nconst b2EdgeSeparation_s_v2 = new b2Vec2();\r\nfunction b2EdgeSeparation(poly1, xf1, edge1, poly2, xf2) {\r\n    // DEBUG: const count1: number = poly1.m_count;\r\n    const vertices1 = poly1.m_vertices;\r\n    const normals1 = poly1.m_normals;\r\n    const count2 = poly2.m_count;\r\n    const vertices2 = poly2.m_vertices;\r\n    // DEBUG: b2Assert(0 <= edge1 && edge1 < count1);\r\n    // Convert normal from poly1's frame into poly2's frame.\r\n    const normal1World = b2Rot.MulRV(xf1.q, normals1[edge1], b2EdgeSeparation_s_normal1World);\r\n    const normal1 = b2Rot.MulTRV(xf2.q, normal1World, b2EdgeSeparation_s_normal1);\r\n    // Find support vertex on poly2 for -normal.\r\n    let index = 0;\r\n    let minDot = b2_maxFloat;\r\n    for (let i = 0; i < count2; ++i) {\r\n        const dot = b2Vec2.DotVV(vertices2[i], normal1);\r\n        if (dot < minDot) {\r\n            minDot = dot;\r\n            index = i;\r\n        }\r\n    }\r\n    const v1 = b2Transform.MulXV(xf1, vertices1[edge1], b2EdgeSeparation_s_v1);\r\n    const v2 = b2Transform.MulXV(xf2, vertices2[index], b2EdgeSeparation_s_v2);\r\n    const separation = b2Vec2.DotVV(b2Vec2.SubVV(v2, v1, b2Vec2.s_t0), normal1World);\r\n    return separation;\r\n}\r\nconst b2FindMaxSeparation_s_d = new b2Vec2();\r\nconst b2FindMaxSeparation_s_dLocal1 = new b2Vec2();\r\nfunction b2FindMaxSeparation(edgeIndex, poly1, xf1, poly2, xf2) {\r\n    const count1 = poly1.m_count;\r\n    const normals1 = poly1.m_normals;\r\n    // Vector pointing from the centroid of poly1 to the centroid of poly2.\r\n    const d = b2Vec2.SubVV(b2Transform.MulXV(xf2, poly2.m_centroid, b2Vec2.s_t0), b2Transform.MulXV(xf1, poly1.m_centroid, b2Vec2.s_t1), b2FindMaxSeparation_s_d);\r\n    const dLocal1 = b2Rot.MulTRV(xf1.q, d, b2FindMaxSeparation_s_dLocal1);\r\n    // Find edge normal on poly1 that has the largest projection onto d.\r\n    let edge = 0;\r\n    let maxDot = (-b2_maxFloat);\r\n    for (let i = 0; i < count1; ++i) {\r\n        const dot = b2Vec2.DotVV(normals1[i], dLocal1);\r\n        if (dot > maxDot) {\r\n            maxDot = dot;\r\n            edge = i;\r\n        }\r\n    }\r\n    // Get the separation for the edge normal.\r\n    let s = b2EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n    // Check the separation for the previous edge normal.\r\n    const prevEdge = (edge + count1 - 1) % count1;\r\n    const sPrev = b2EdgeSeparation(poly1, xf1, prevEdge, poly2, xf2);\r\n    // Check the separation for the next edge normal.\r\n    const nextEdge = (edge + 1) % count1;\r\n    const sNext = b2EdgeSeparation(poly1, xf1, nextEdge, poly2, xf2);\r\n    // Find the best edge and the search direction.\r\n    let bestEdge = 0;\r\n    let bestSeparation = 0;\r\n    let increment = 0;\r\n    if (sPrev > s && sPrev > sNext) {\r\n        increment = -1;\r\n        bestEdge = prevEdge;\r\n        bestSeparation = sPrev;\r\n    }\r\n    else if (sNext > s) {\r\n        increment = 1;\r\n        bestEdge = nextEdge;\r\n        bestSeparation = sNext;\r\n    }\r\n    else {\r\n        edgeIndex[0] = edge;\r\n        return s;\r\n    }\r\n    // Perform a local search for the best edge normal.\r\n    while (true) {\r\n        if (increment === -1) {\r\n            edge = (bestEdge + count1 - 1) % count1;\r\n        }\r\n        else {\r\n            edge = (bestEdge + 1) % count1;\r\n        }\r\n        s = b2EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n        if (s > bestSeparation) {\r\n            bestEdge = edge;\r\n            bestSeparation = s;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    edgeIndex[0] = bestEdge;\r\n    return bestSeparation;\r\n}\r\nconst b2FindIncidentEdge_s_normal1 = new b2Vec2();\r\nfunction b2FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\r\n    // DEBUG: const count1: number = poly1.m_count;\r\n    const normals1 = poly1.m_normals;\r\n    const count2 = poly2.m_count;\r\n    const vertices2 = poly2.m_vertices;\r\n    const normals2 = poly2.m_normals;\r\n    // DEBUG: b2Assert(0 <= edge1 && edge1 < count1);\r\n    // Get the normal of the reference edge in poly2's frame.\r\n    const normal1 = b2Rot.MulTRV(xf2.q, b2Rot.MulRV(xf1.q, normals1[edge1], b2Vec2.s_t0), b2FindIncidentEdge_s_normal1);\r\n    // Find the incident edge on poly2.\r\n    let index = 0;\r\n    let minDot = b2_maxFloat;\r\n    for (let i = 0; i < count2; ++i) {\r\n        const dot = b2Vec2.DotVV(normal1, normals2[i]);\r\n        if (dot < minDot) {\r\n            minDot = dot;\r\n            index = i;\r\n        }\r\n    }\r\n    // Build the clip vertices for the incident edge.\r\n    const i1 = index;\r\n    const i2 = (i1 + 1) % count2;\r\n    const c0 = c[0];\r\n    b2Transform.MulXV(xf2, vertices2[i1], c0.v);\r\n    const cf0 = c0.id.cf;\r\n    cf0.indexA = edge1;\r\n    cf0.indexB = i1;\r\n    cf0.typeA = b2ContactFeatureType.e_face;\r\n    cf0.typeB = b2ContactFeatureType.e_vertex;\r\n    const c1 = c[1];\r\n    b2Transform.MulXV(xf2, vertices2[i2], c1.v);\r\n    const cf1 = c1.id.cf;\r\n    cf1.indexA = edge1;\r\n    cf1.indexB = i2;\r\n    cf1.typeA = b2ContactFeatureType.e_face;\r\n    cf1.typeB = b2ContactFeatureType.e_vertex;\r\n}\r\nconst b2CollidePolygons_s_incidentEdge = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_clipPoints1 = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_clipPoints2 = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_edgeA = [0];\r\nconst b2CollidePolygons_s_edgeB = [0];\r\nconst b2CollidePolygons_s_localTangent = new b2Vec2();\r\nconst b2CollidePolygons_s_localNormal = new b2Vec2();\r\nconst b2CollidePolygons_s_planePoint = new b2Vec2();\r\nconst b2CollidePolygons_s_normal = new b2Vec2();\r\nconst b2CollidePolygons_s_tangent = new b2Vec2();\r\nconst b2CollidePolygons_s_ntangent = new b2Vec2();\r\nconst b2CollidePolygons_s_v11 = new b2Vec2();\r\nconst b2CollidePolygons_s_v12 = new b2Vec2();\r\nexport function b2CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\r\n    manifold.pointCount = 0;\r\n    const totalRadius = polyA.m_radius + polyB.m_radius;\r\n    const edgeA = b2CollidePolygons_s_edgeA;\r\n    edgeA[0] = 0;\r\n    const separationA = b2FindMaxSeparation(edgeA, polyA, xfA, polyB, xfB);\r\n    if (separationA > totalRadius) {\r\n        return;\r\n    }\r\n    const edgeB = b2CollidePolygons_s_edgeB;\r\n    edgeB[0] = 0;\r\n    const separationB = b2FindMaxSeparation(edgeB, polyB, xfB, polyA, xfA);\r\n    if (separationB > totalRadius) {\r\n        return;\r\n    }\r\n    let poly1; // reference polygon\r\n    let poly2; // incident polygon\r\n    let xf1, xf2;\r\n    let edge1 = 0; // reference edge\r\n    let flip = 0;\r\n    const k_relativeTol = 0.98;\r\n    const k_absoluteTol = 0.001;\r\n    if (separationB > k_relativeTol * separationA + k_absoluteTol) {\r\n        poly1 = polyB;\r\n        poly2 = polyA;\r\n        xf1 = xfB;\r\n        xf2 = xfA;\r\n        edge1 = edgeB[0];\r\n        manifold.type = b2ManifoldType.e_faceB;\r\n        flip = 1;\r\n    }\r\n    else {\r\n        poly1 = polyA;\r\n        poly2 = polyB;\r\n        xf1 = xfA;\r\n        xf2 = xfB;\r\n        edge1 = edgeA[0];\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        flip = 0;\r\n    }\r\n    const incidentEdge = b2CollidePolygons_s_incidentEdge;\r\n    b2FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\r\n    const count1 = poly1.m_count;\r\n    const vertices1 = poly1.m_vertices;\r\n    const iv1 = edge1;\r\n    const iv2 = (edge1 + 1) % count1;\r\n    const local_v11 = vertices1[iv1];\r\n    const local_v12 = vertices1[iv2];\r\n    const localTangent = b2Vec2.SubVV(local_v12, local_v11, b2CollidePolygons_s_localTangent);\r\n    localTangent.Normalize();\r\n    const localNormal = b2Vec2.CrossVOne(localTangent, b2CollidePolygons_s_localNormal);\r\n    const planePoint = b2Vec2.MidVV(local_v11, local_v12, b2CollidePolygons_s_planePoint);\r\n    const tangent = b2Rot.MulRV(xf1.q, localTangent, b2CollidePolygons_s_tangent);\r\n    const normal = b2Vec2.CrossVOne(tangent, b2CollidePolygons_s_normal);\r\n    const v11 = b2Transform.MulXV(xf1, local_v11, b2CollidePolygons_s_v11);\r\n    const v12 = b2Transform.MulXV(xf1, local_v12, b2CollidePolygons_s_v12);\r\n    // Face offset.\r\n    const frontOffset = b2Vec2.DotVV(normal, v11);\r\n    // Side offsets, extended by polytope skin thickness.\r\n    const sideOffset1 = -b2Vec2.DotVV(tangent, v11) + totalRadius;\r\n    const sideOffset2 = b2Vec2.DotVV(tangent, v12) + totalRadius;\r\n    // Clip incident edge against extruded edge1 side edges.\r\n    const clipPoints1 = b2CollidePolygons_s_clipPoints1;\r\n    const clipPoints2 = b2CollidePolygons_s_clipPoints2;\r\n    let np;\r\n    // Clip to box side 1\r\n    const ntangent = b2Vec2.NegV(tangent, b2CollidePolygons_s_ntangent);\r\n    np = b2ClipSegmentToLine(clipPoints1, incidentEdge, ntangent, sideOffset1, iv1);\r\n    if (np < 2) {\r\n        return;\r\n    }\r\n    // Clip to negative box side 1\r\n    np = b2ClipSegmentToLine(clipPoints2, clipPoints1, tangent, sideOffset2, iv2);\r\n    if (np < 2) {\r\n        return;\r\n    }\r\n    // Now clipPoints2 contains the clipped points.\r\n    manifold.localNormal.Copy(localNormal);\r\n    manifold.localPoint.Copy(planePoint);\r\n    let pointCount = 0;\r\n    for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n        const cv = clipPoints2[i];\r\n        const separation = b2Vec2.DotVV(normal, cv.v) - frontOffset;\r\n        if (separation <= totalRadius) {\r\n            const cp = manifold.points[pointCount];\r\n            b2Transform.MulTXV(xf2, cv.v, cp.localPoint);\r\n            cp.id.Copy(cv.id);\r\n            if (flip) {\r\n                // Swap features\r\n                const cf = cp.id.cf;\r\n                cp.id.cf.indexA = cf.indexB;\r\n                cp.id.cf.indexB = cf.indexA;\r\n                cp.id.cf.typeA = cf.typeB;\r\n                cp.id.cf.typeB = cf.typeA;\r\n            }\r\n            ++pointCount;\r\n        }\r\n    }\r\n    manifold.pointCount = pointCount;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2_angularSlop, b2_maxManifoldPoints } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ContactFeatureType, b2ContactID } from \"./b2Collision\";\r\nimport { b2ManifoldType, b2ClipVertex, b2ClipSegmentToLine } from \"./b2Collision\";\r\nconst b2CollideEdgeAndCircle_s_Q = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_d = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e1 = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e2 = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_P = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_n = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_id = new b2ContactID();\r\nexport function b2CollideEdgeAndCircle(manifold, edgeA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    // Compute circle in frame of edge\r\n    const Q = b2Transform.MulTXV(xfA, b2Transform.MulXV(xfB, circleB.m_p, b2Vec2.s_t0), b2CollideEdgeAndCircle_s_Q);\r\n    const A = edgeA.m_vertex1;\r\n    const B = edgeA.m_vertex2;\r\n    const e = b2Vec2.SubVV(B, A, b2CollideEdgeAndCircle_s_e);\r\n    // Barycentric coordinates\r\n    const u = b2Vec2.DotVV(e, b2Vec2.SubVV(B, Q, b2Vec2.s_t0));\r\n    const v = b2Vec2.DotVV(e, b2Vec2.SubVV(Q, A, b2Vec2.s_t0));\r\n    const radius = edgeA.m_radius + circleB.m_radius;\r\n    // const cf: b2ContactFeature = new b2ContactFeature();\r\n    const id = b2CollideEdgeAndCircle_s_id;\r\n    id.cf.indexB = 0;\r\n    id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n    // Region A\r\n    if (v <= 0) {\r\n        const P = A;\r\n        const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n        const dd = b2Vec2.DotVV(d, d);\r\n        if (dd > radius * radius) {\r\n            return;\r\n        }\r\n        // Is there an edge connected to A?\r\n        if (edgeA.m_hasVertex0) {\r\n            const A1 = edgeA.m_vertex0;\r\n            const B1 = A;\r\n            const e1 = b2Vec2.SubVV(B1, A1, b2CollideEdgeAndCircle_s_e1);\r\n            const u1 = b2Vec2.DotVV(e1, b2Vec2.SubVV(B1, Q, b2Vec2.s_t0));\r\n            // Is the circle in Region AB of the previous edge?\r\n            if (u1 > 0) {\r\n                return;\r\n            }\r\n        }\r\n        id.cf.indexA = 0;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_circles;\r\n        manifold.localNormal.SetZero();\r\n        manifold.localPoint.Copy(P);\r\n        manifold.points[0].id.Copy(id);\r\n        // manifold.points[0].id.key = 0;\r\n        // manifold.points[0].id.cf = cf;\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        return;\r\n    }\r\n    // Region B\r\n    if (u <= 0) {\r\n        const P = B;\r\n        const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n        const dd = b2Vec2.DotVV(d, d);\r\n        if (dd > radius * radius) {\r\n            return;\r\n        }\r\n        // Is there an edge connected to B?\r\n        if (edgeA.m_hasVertex3) {\r\n            const B2 = edgeA.m_vertex3;\r\n            const A2 = B;\r\n            const e2 = b2Vec2.SubVV(B2, A2, b2CollideEdgeAndCircle_s_e2);\r\n            const v2 = b2Vec2.DotVV(e2, b2Vec2.SubVV(Q, A2, b2Vec2.s_t0));\r\n            // Is the circle in Region AB of the next edge?\r\n            if (v2 > 0) {\r\n                return;\r\n            }\r\n        }\r\n        id.cf.indexA = 1;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_circles;\r\n        manifold.localNormal.SetZero();\r\n        manifold.localPoint.Copy(P);\r\n        manifold.points[0].id.Copy(id);\r\n        // manifold.points[0].id.key = 0;\r\n        // manifold.points[0].id.cf = cf;\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        return;\r\n    }\r\n    // Region AB\r\n    const den = b2Vec2.DotVV(e, e);\r\n    // DEBUG: b2Assert(den > 0);\r\n    const P = b2CollideEdgeAndCircle_s_P;\r\n    P.x = (1 / den) * (u * A.x + v * B.x);\r\n    P.y = (1 / den) * (u * A.y + v * B.y);\r\n    const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n    const dd = b2Vec2.DotVV(d, d);\r\n    if (dd > radius * radius) {\r\n        return;\r\n    }\r\n    const n = b2CollideEdgeAndCircle_s_n.Set(-e.y, e.x);\r\n    if (b2Vec2.DotVV(n, b2Vec2.SubVV(Q, A, b2Vec2.s_t0)) < 0) {\r\n        n.Set(-n.x, -n.y);\r\n    }\r\n    n.Normalize();\r\n    id.cf.indexA = 0;\r\n    id.cf.typeA = b2ContactFeatureType.e_face;\r\n    manifold.pointCount = 1;\r\n    manifold.type = b2ManifoldType.e_faceA;\r\n    manifold.localNormal.Copy(n);\r\n    manifold.localPoint.Copy(A);\r\n    manifold.points[0].id.Copy(id);\r\n    // manifold.points[0].id.key = 0;\r\n    // manifold.points[0].id.cf = cf;\r\n    manifold.points[0].localPoint.Copy(circleB.m_p);\r\n}\r\nclass b2EPAxis {\r\n    constructor() {\r\n        this.type = 0 /* e_unknown */;\r\n        this.index = 0;\r\n        this.separation = 0;\r\n    }\r\n}\r\nclass b2TempPolygon {\r\n    constructor() {\r\n        this.vertices = [];\r\n        this.normals = [];\r\n        this.count = 0;\r\n    }\r\n}\r\nclass b2ReferenceFace {\r\n    constructor() {\r\n        this.i1 = 0;\r\n        this.i2 = 0;\r\n        this.v1 = new b2Vec2();\r\n        this.v2 = new b2Vec2();\r\n        this.normal = new b2Vec2();\r\n        this.sideNormal1 = new b2Vec2();\r\n        this.sideOffset1 = 0;\r\n        this.sideNormal2 = new b2Vec2();\r\n        this.sideOffset2 = 0;\r\n    }\r\n}\r\nclass b2EPCollider {\r\n    constructor() {\r\n        this.m_polygonB = new b2TempPolygon();\r\n        this.m_xf = new b2Transform();\r\n        this.m_centroidB = new b2Vec2();\r\n        this.m_v0 = new b2Vec2();\r\n        this.m_v1 = new b2Vec2();\r\n        this.m_v2 = new b2Vec2();\r\n        this.m_v3 = new b2Vec2();\r\n        this.m_normal0 = new b2Vec2();\r\n        this.m_normal1 = new b2Vec2();\r\n        this.m_normal2 = new b2Vec2();\r\n        this.m_normal = new b2Vec2();\r\n        this.m_type1 = 0 /* e_isolated */;\r\n        this.m_type2 = 0 /* e_isolated */;\r\n        this.m_lowerLimit = new b2Vec2();\r\n        this.m_upperLimit = new b2Vec2();\r\n        this.m_radius = 0;\r\n        this.m_front = false;\r\n    }\r\n    Collide(manifold, edgeA, xfA, polygonB, xfB) {\r\n        b2Transform.MulTXX(xfA, xfB, this.m_xf);\r\n        b2Transform.MulXV(this.m_xf, polygonB.m_centroid, this.m_centroidB);\r\n        this.m_v0.Copy(edgeA.m_vertex0);\r\n        this.m_v1.Copy(edgeA.m_vertex1);\r\n        this.m_v2.Copy(edgeA.m_vertex2);\r\n        this.m_v3.Copy(edgeA.m_vertex3);\r\n        const hasVertex0 = edgeA.m_hasVertex0;\r\n        const hasVertex3 = edgeA.m_hasVertex3;\r\n        const edge1 = b2Vec2.SubVV(this.m_v2, this.m_v1, b2EPCollider.s_edge1);\r\n        edge1.Normalize();\r\n        this.m_normal1.Set(edge1.y, -edge1.x);\r\n        const offset1 = b2Vec2.DotVV(this.m_normal1, b2Vec2.SubVV(this.m_centroidB, this.m_v1, b2Vec2.s_t0));\r\n        let offset0 = 0;\r\n        let offset2 = 0;\r\n        let convex1 = false;\r\n        let convex2 = false;\r\n        // Is there a preceding edge?\r\n        if (hasVertex0) {\r\n            const edge0 = b2Vec2.SubVV(this.m_v1, this.m_v0, b2EPCollider.s_edge0);\r\n            edge0.Normalize();\r\n            this.m_normal0.Set(edge0.y, -edge0.x);\r\n            convex1 = b2Vec2.CrossVV(edge0, edge1) >= 0;\r\n            offset0 = b2Vec2.DotVV(this.m_normal0, b2Vec2.SubVV(this.m_centroidB, this.m_v0, b2Vec2.s_t0));\r\n        }\r\n        // Is there a following edge?\r\n        if (hasVertex3) {\r\n            const edge2 = b2Vec2.SubVV(this.m_v3, this.m_v2, b2EPCollider.s_edge2);\r\n            edge2.Normalize();\r\n            this.m_normal2.Set(edge2.y, -edge2.x);\r\n            convex2 = b2Vec2.CrossVV(edge1, edge2) > 0;\r\n            offset2 = b2Vec2.DotVV(this.m_normal2, b2Vec2.SubVV(this.m_centroidB, this.m_v2, b2Vec2.s_t0));\r\n        }\r\n        // Determine front or back collision. Determine collision normal limits.\r\n        if (hasVertex0 && hasVertex3) {\r\n            if (convex1 && convex2) {\r\n                this.m_front = offset0 >= 0 || offset1 >= 0 || offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else if (convex1) {\r\n                this.m_front = offset0 >= 0 || (offset1 >= 0 && offset2 >= 0);\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else if (convex2) {\r\n                this.m_front = offset2 >= 0 || (offset0 >= 0 && offset1 >= 0);\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset0 >= 0 && offset1 >= 0 && offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n        }\r\n        else if (hasVertex0) {\r\n            if (convex1) {\r\n                this.m_front = offset0 >= 0 || offset1 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset0 >= 0 && offset1 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n        }\r\n        else if (hasVertex3) {\r\n            if (convex2) {\r\n                this.m_front = offset1 >= 0 || offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset1 >= 0 && offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.m_front = offset1 >= 0;\r\n            if (this.m_front) {\r\n                this.m_normal.Copy(this.m_normal1);\r\n                this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n            }\r\n            else {\r\n                this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                this.m_lowerLimit.Copy(this.m_normal1);\r\n                this.m_upperLimit.Copy(this.m_normal1);\r\n            }\r\n        }\r\n        // Get polygonB in frameA\r\n        this.m_polygonB.count = polygonB.m_count;\r\n        for (let i = 0; i < polygonB.m_count; ++i) {\r\n            if (this.m_polygonB.vertices.length <= i) {\r\n                this.m_polygonB.vertices.push(new b2Vec2());\r\n            }\r\n            if (this.m_polygonB.normals.length <= i) {\r\n                this.m_polygonB.normals.push(new b2Vec2());\r\n            }\r\n            b2Transform.MulXV(this.m_xf, polygonB.m_vertices[i], this.m_polygonB.vertices[i]);\r\n            b2Rot.MulRV(this.m_xf.q, polygonB.m_normals[i], this.m_polygonB.normals[i]);\r\n        }\r\n        this.m_radius = polygonB.m_radius + edgeA.m_radius;\r\n        manifold.pointCount = 0;\r\n        const edgeAxis = this.ComputeEdgeSeparation(b2EPCollider.s_edgeAxis);\r\n        // If no valid normal can be found than this edge should not collide.\r\n        if (edgeAxis.type === 0 /* e_unknown */) {\r\n            return;\r\n        }\r\n        if (edgeAxis.separation > this.m_radius) {\r\n            return;\r\n        }\r\n        const polygonAxis = this.ComputePolygonSeparation(b2EPCollider.s_polygonAxis);\r\n        if (polygonAxis.type !== 0 /* e_unknown */ && polygonAxis.separation > this.m_radius) {\r\n            return;\r\n        }\r\n        // Use hysteresis for jitter reduction.\r\n        const k_relativeTol = 0.98;\r\n        const k_absoluteTol = 0.001;\r\n        let primaryAxis;\r\n        if (polygonAxis.type === 0 /* e_unknown */) {\r\n            primaryAxis = edgeAxis;\r\n        }\r\n        else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\r\n            primaryAxis = polygonAxis;\r\n        }\r\n        else {\r\n            primaryAxis = edgeAxis;\r\n        }\r\n        const ie = b2EPCollider.s_ie;\r\n        const rf = b2EPCollider.s_rf;\r\n        if (primaryAxis.type === 1 /* e_edgeA */) {\r\n            manifold.type = b2ManifoldType.e_faceA;\r\n            // Search for the polygon normal that is most anti-parallel to the edge normal.\r\n            let bestIndex = 0;\r\n            let bestValue = b2Vec2.DotVV(this.m_normal, this.m_polygonB.normals[0]);\r\n            for (let i = 1; i < this.m_polygonB.count; ++i) {\r\n                const value = b2Vec2.DotVV(this.m_normal, this.m_polygonB.normals[i]);\r\n                if (value < bestValue) {\r\n                    bestValue = value;\r\n                    bestIndex = i;\r\n                }\r\n            }\r\n            const i1 = bestIndex;\r\n            const i2 = (i1 + 1) % this.m_polygonB.count;\r\n            const ie0 = ie[0];\r\n            ie0.v.Copy(this.m_polygonB.vertices[i1]);\r\n            ie0.id.cf.indexA = 0;\r\n            ie0.id.cf.indexB = i1;\r\n            ie0.id.cf.typeA = b2ContactFeatureType.e_face;\r\n            ie0.id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n            const ie1 = ie[1];\r\n            ie1.v.Copy(this.m_polygonB.vertices[i2]);\r\n            ie1.id.cf.indexA = 0;\r\n            ie1.id.cf.indexB = i2;\r\n            ie1.id.cf.typeA = b2ContactFeatureType.e_face;\r\n            ie1.id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n            if (this.m_front) {\r\n                rf.i1 = 0;\r\n                rf.i2 = 1;\r\n                rf.v1.Copy(this.m_v1);\r\n                rf.v2.Copy(this.m_v2);\r\n                rf.normal.Copy(this.m_normal1);\r\n            }\r\n            else {\r\n                rf.i1 = 1;\r\n                rf.i2 = 0;\r\n                rf.v1.Copy(this.m_v2);\r\n                rf.v2.Copy(this.m_v1);\r\n                rf.normal.Copy(this.m_normal1).SelfNeg();\r\n            }\r\n        }\r\n        else {\r\n            manifold.type = b2ManifoldType.e_faceB;\r\n            const ie0 = ie[0];\r\n            ie0.v.Copy(this.m_v1);\r\n            ie0.id.cf.indexA = 0;\r\n            ie0.id.cf.indexB = primaryAxis.index;\r\n            ie0.id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n            ie0.id.cf.typeB = b2ContactFeatureType.e_face;\r\n            const ie1 = ie[1];\r\n            ie1.v.Copy(this.m_v2);\r\n            ie1.id.cf.indexA = 0;\r\n            ie1.id.cf.indexB = primaryAxis.index;\r\n            ie1.id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n            ie1.id.cf.typeB = b2ContactFeatureType.e_face;\r\n            rf.i1 = primaryAxis.index;\r\n            rf.i2 = (rf.i1 + 1) % this.m_polygonB.count;\r\n            rf.v1.Copy(this.m_polygonB.vertices[rf.i1]);\r\n            rf.v2.Copy(this.m_polygonB.vertices[rf.i2]);\r\n            rf.normal.Copy(this.m_polygonB.normals[rf.i1]);\r\n        }\r\n        rf.sideNormal1.Set(rf.normal.y, -rf.normal.x);\r\n        rf.sideNormal2.Copy(rf.sideNormal1).SelfNeg();\r\n        rf.sideOffset1 = b2Vec2.DotVV(rf.sideNormal1, rf.v1);\r\n        rf.sideOffset2 = b2Vec2.DotVV(rf.sideNormal2, rf.v2);\r\n        // Clip incident edge against extruded edge1 side edges.\r\n        const clipPoints1 = b2EPCollider.s_clipPoints1;\r\n        const clipPoints2 = b2EPCollider.s_clipPoints2;\r\n        let np = 0;\r\n        // Clip to box side 1\r\n        np = b2ClipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\r\n        if (np < b2_maxManifoldPoints) {\r\n            return;\r\n        }\r\n        // Clip to negative box side 1\r\n        np = b2ClipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\r\n        if (np < b2_maxManifoldPoints) {\r\n            return;\r\n        }\r\n        // Now clipPoints2 contains the clipped points.\r\n        if (primaryAxis.type === 1 /* e_edgeA */) {\r\n            manifold.localNormal.Copy(rf.normal);\r\n            manifold.localPoint.Copy(rf.v1);\r\n        }\r\n        else {\r\n            manifold.localNormal.Copy(polygonB.m_normals[rf.i1]);\r\n            manifold.localPoint.Copy(polygonB.m_vertices[rf.i1]);\r\n        }\r\n        let pointCount = 0;\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            let separation;\r\n            separation = b2Vec2.DotVV(rf.normal, b2Vec2.SubVV(clipPoints2[i].v, rf.v1, b2Vec2.s_t0));\r\n            if (separation <= this.m_radius) {\r\n                const cp = manifold.points[pointCount];\r\n                if (primaryAxis.type === 1 /* e_edgeA */) {\r\n                    b2Transform.MulTXV(this.m_xf, clipPoints2[i].v, cp.localPoint);\r\n                    cp.id = clipPoints2[i].id;\r\n                }\r\n                else {\r\n                    cp.localPoint.Copy(clipPoints2[i].v);\r\n                    cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\r\n                    cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\r\n                    cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\r\n                    cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\r\n                }\r\n                ++pointCount;\r\n            }\r\n        }\r\n        manifold.pointCount = pointCount;\r\n    }\r\n    ComputeEdgeSeparation(out) {\r\n        const axis = out;\r\n        axis.type = 1 /* e_edgeA */;\r\n        axis.index = this.m_front ? 0 : 1;\r\n        axis.separation = b2_maxFloat;\r\n        for (let i = 0; i < this.m_polygonB.count; ++i) {\r\n            const s = b2Vec2.DotVV(this.m_normal, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v1, b2Vec2.s_t0));\r\n            if (s < axis.separation) {\r\n                axis.separation = s;\r\n            }\r\n        }\r\n        return axis;\r\n    }\r\n    ComputePolygonSeparation(out) {\r\n        const axis = out;\r\n        axis.type = 0 /* e_unknown */;\r\n        axis.index = -1;\r\n        axis.separation = -b2_maxFloat;\r\n        const perp = b2EPCollider.s_perp.Set(-this.m_normal.y, this.m_normal.x);\r\n        for (let i = 0; i < this.m_polygonB.count; ++i) {\r\n            const n = b2Vec2.NegV(this.m_polygonB.normals[i], b2EPCollider.s_n);\r\n            const s1 = b2Vec2.DotVV(n, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v1, b2Vec2.s_t0));\r\n            const s2 = b2Vec2.DotVV(n, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v2, b2Vec2.s_t0));\r\n            const s = b2Min(s1, s2);\r\n            if (s > this.m_radius) {\r\n                // No collision\r\n                axis.type = 2 /* e_edgeB */;\r\n                axis.index = i;\r\n                axis.separation = s;\r\n                return axis;\r\n            }\r\n            // Adjacency\r\n            if (b2Vec2.DotVV(n, perp) >= 0) {\r\n                if (b2Vec2.DotVV(b2Vec2.SubVV(n, this.m_upperLimit, b2Vec2.s_t0), this.m_normal) < -b2_angularSlop) {\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                if (b2Vec2.DotVV(b2Vec2.SubVV(n, this.m_lowerLimit, b2Vec2.s_t0), this.m_normal) < -b2_angularSlop) {\r\n                    continue;\r\n                }\r\n            }\r\n            if (s > axis.separation) {\r\n                axis.type = 2 /* e_edgeB */;\r\n                axis.index = i;\r\n                axis.separation = s;\r\n            }\r\n        }\r\n        return axis;\r\n    }\r\n}\r\nb2EPCollider.s_edge1 = new b2Vec2();\r\nb2EPCollider.s_edge0 = new b2Vec2();\r\nb2EPCollider.s_edge2 = new b2Vec2();\r\nb2EPCollider.s_ie = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_rf = new b2ReferenceFace();\r\nb2EPCollider.s_clipPoints1 = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_clipPoints2 = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_edgeAxis = new b2EPAxis();\r\nb2EPCollider.s_polygonAxis = new b2EPAxis();\r\nb2EPCollider.s_n = new b2Vec2();\r\nb2EPCollider.s_perp = new b2Vec2();\r\nconst b2CollideEdgeAndPolygon_s_collider = new b2EPCollider();\r\nexport function b2CollideEdgeAndPolygon(manifold, edgeA, xfA, polygonB, xfB) {\r\n    const collider = b2CollideEdgeAndPolygon_s_collider;\r\n    collider.Collide(manifold, edgeA, xfA, polygonB, xfB);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../../Common/b2Math\";\r\n/// This holds the mass data computed for a shape.\r\nexport class b2MassData {\r\n    constructor() {\r\n        /// The mass of the shape, usually in kilograms.\r\n        this.mass = 0;\r\n        /// The position of the shape's centroid relative to the shape's origin.\r\n        this.center = new b2Vec2(0, 0);\r\n        /// The rotational inertia of the shape about the local origin.\r\n        this.I = 0;\r\n    }\r\n}\r\nexport var b2ShapeType;\r\n(function (b2ShapeType) {\r\n    b2ShapeType[b2ShapeType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2ShapeType[b2ShapeType[\"e_circleShape\"] = 0] = \"e_circleShape\";\r\n    b2ShapeType[b2ShapeType[\"e_edgeShape\"] = 1] = \"e_edgeShape\";\r\n    b2ShapeType[b2ShapeType[\"e_polygonShape\"] = 2] = \"e_polygonShape\";\r\n    b2ShapeType[b2ShapeType[\"e_chainShape\"] = 3] = \"e_chainShape\";\r\n    b2ShapeType[b2ShapeType[\"e_shapeTypeCount\"] = 4] = \"e_shapeTypeCount\";\r\n})(b2ShapeType || (b2ShapeType = {}));\r\n/// A shape is used for collision detection. You can create a shape however you like.\r\n/// Shapes used for simulation in b2World are created automatically when a b2Fixture\r\n/// is created. Shapes may encapsulate a one or more child shapes.\r\nexport class b2Shape {\r\n    constructor(type, radius) {\r\n        this.m_type = b2ShapeType.e_unknown;\r\n        /// Radius of a shape. For polygonal shapes this must be b2_polygonRadius. There is no support for\r\n        /// making rounded polygons.\r\n        this.m_radius = 0;\r\n        this.m_type = type;\r\n        this.m_radius = radius;\r\n    }\r\n    Copy(other) {\r\n        // DEBUG: b2Assert(this.m_type === other.m_type);\r\n        this.m_radius = other.m_radius;\r\n        return this;\r\n    }\r\n    /// Get the type of this shape. You can use this to down cast to the concrete shape.\r\n    /// @return the shape type.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTaGFwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0NvbGxpc2lvbi9TaGFwZXMvYjJTaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLDZEQUE2RDtBQUM3RCxPQUFPLEVBQUUsTUFBTSxFQUFlLE1BQU0scUJBQXFCLENBQUM7QUFJMUQsa0RBQWtEO0FBQ2xELE1BQU0sT0FBTyxVQUFVO0lBQXZCO1FBQ0UsZ0RBQWdEO1FBQ3pDLFNBQUksR0FBVyxDQUFDLENBQUM7UUFFeEIsd0VBQXdFO1FBQ3hELFdBQU0sR0FBVyxJQUFJLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFbEQsK0RBQStEO1FBQ3hELE1BQUMsR0FBVyxDQUFDLENBQUM7SUFDdkIsQ0FBQztDQUFBO0FBRUQsTUFBTSxDQUFOLElBQVksV0FPWDtBQVBELFdBQVksV0FBVztJQUNyQix3REFBYyxDQUFBO0lBQ2QsK0RBQWlCLENBQUE7SUFDakIsMkRBQWUsQ0FBQTtJQUNmLGlFQUFrQixDQUFBO0lBQ2xCLDZEQUFnQixDQUFBO0lBQ2hCLHFFQUFvQixDQUFBO0FBQ3RCLENBQUMsRUFQVyxXQUFXLEtBQVgsV0FBVyxRQU90QjtBQUVELHFGQUFxRjtBQUNyRixvRkFBb0Y7QUFDcEYsa0VBQWtFO0FBQ2xFLE1BQU0sT0FBZ0IsT0FBTztJQU8zQixZQUFZLElBQWlCLEVBQUUsTUFBYztRQU50QyxXQUFNLEdBQWdCLFdBQVcsQ0FBQyxTQUFTLENBQUM7UUFFcEQsa0dBQWtHO1FBQ2xHLDRCQUE0QjtRQUNwQixhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBRzFCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLENBQUM7SUFLTSxJQUFJLENBQUMsS0FBYztRQUN4QixpREFBaUQ7UUFDakQsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDO1FBQy9CLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELG9GQUFvRjtJQUNwRiwyQkFBMkI7SUFDcEIsT0FBTztRQUNaLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0NBMkNGIn0=","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\n// DEBUG: import { b2IsValid } from \"../Common/b2Math\";\r\nimport { b2Maybe } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Shape, b2MassData } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2Fixture, b2FixtureDef } from \"./b2Fixture\";\r\n// #endif\r\n/// The body type.\r\n/// static: zero mass, zero velocity, may be manually moved\r\n/// kinematic: zero mass, non-zero velocity set by user, moved by solver\r\n/// dynamic: positive mass, non-zero velocity determined by forces, moved by solver\r\nexport var b2BodyType;\r\n(function (b2BodyType) {\r\n    b2BodyType[b2BodyType[\"b2_unknown\"] = -1] = \"b2_unknown\";\r\n    b2BodyType[b2BodyType[\"b2_staticBody\"] = 0] = \"b2_staticBody\";\r\n    b2BodyType[b2BodyType[\"b2_kinematicBody\"] = 1] = \"b2_kinematicBody\";\r\n    b2BodyType[b2BodyType[\"b2_dynamicBody\"] = 2] = \"b2_dynamicBody\";\r\n    // TODO_ERIN\r\n    // b2_bulletBody = 3\r\n})(b2BodyType || (b2BodyType = {}));\r\n/// A body definition holds all the data needed to construct a rigid body.\r\n/// You can safely re-use body definitions. Shapes are added to a body after construction.\r\nexport class b2BodyDef {\r\n    constructor() {\r\n        /// The body type: static, kinematic, or dynamic.\r\n        /// Note: if a dynamic body would have zero mass, the mass is set to one.\r\n        this.type = b2BodyType.b2_staticBody;\r\n        /// The world position of the body. Avoid creating bodies at the origin\r\n        /// since this can lead to many overlapping shapes.\r\n        this.position = new b2Vec2(0, 0);\r\n        /// The world angle of the body in radians.\r\n        this.angle = 0;\r\n        /// The linear velocity of the body's origin in world co-ordinates.\r\n        this.linearVelocity = new b2Vec2(0, 0);\r\n        /// The angular velocity of the body.\r\n        this.angularVelocity = 0;\r\n        /// Linear damping is use to reduce the linear velocity. The damping parameter\r\n        /// can be larger than 1.0f but the damping effect becomes sensitive to the\r\n        /// time step when the damping parameter is large.\r\n        this.linearDamping = 0;\r\n        /// Angular damping is use to reduce the angular velocity. The damping parameter\r\n        /// can be larger than 1.0f but the damping effect becomes sensitive to the\r\n        /// time step when the damping parameter is large.\r\n        this.angularDamping = 0;\r\n        /// Set this flag to false if this body should never fall asleep. Note that\r\n        /// this increases CPU usage.\r\n        this.allowSleep = true;\r\n        /// Is this body initially awake or sleeping?\r\n        this.awake = true;\r\n        /// Should this body be prevented from rotating? Useful for characters.\r\n        this.fixedRotation = false;\r\n        /// Is this a fast moving body that should be prevented from tunneling through\r\n        /// other moving bodies? Note that all bodies are prevented from tunneling through\r\n        /// kinematic and static bodies. This setting is only considered on dynamic bodies.\r\n        /// @warning You should use this flag sparingly since it increases processing time.\r\n        this.bullet = false;\r\n        /// Does this body start out active?\r\n        this.active = true;\r\n        /// Use this to store application specific body data.\r\n        this.userData = null;\r\n        /// Scale the gravity applied to this body.\r\n        this.gravityScale = 1;\r\n    }\r\n}\r\n/// A rigid body. These are created via b2World::CreateBody.\r\nexport class b2Body {\r\n    // #endif\r\n    constructor(bd, world) {\r\n        this.m_type = b2BodyType.b2_staticBody;\r\n        this.m_islandFlag = false;\r\n        this.m_awakeFlag = false;\r\n        this.m_autoSleepFlag = false;\r\n        this.m_bulletFlag = false;\r\n        this.m_fixedRotationFlag = false;\r\n        this.m_activeFlag = false;\r\n        this.m_toiFlag = false;\r\n        this.m_islandIndex = 0;\r\n        this.m_xf = new b2Transform(); // the body origin transform\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0 = new b2Transform();\r\n        // #endif\r\n        this.m_sweep = new b2Sweep(); // the swept motion for CCD\r\n        this.m_linearVelocity = new b2Vec2();\r\n        this.m_angularVelocity = 0;\r\n        this.m_force = new b2Vec2();\r\n        this.m_torque = 0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_fixtureList = null;\r\n        this.m_fixtureCount = 0;\r\n        this.m_jointList = null;\r\n        this.m_contactList = null;\r\n        this.m_mass = 1;\r\n        this.m_invMass = 1;\r\n        // Rotational inertia about the center of mass.\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_linearDamping = 0;\r\n        this.m_angularDamping = 0;\r\n        this.m_gravityScale = 1;\r\n        this.m_sleepTime = 0;\r\n        this.m_userData = null;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        this.m_bulletFlag = b2Maybe(bd.bullet, false);\r\n        this.m_fixedRotationFlag = b2Maybe(bd.fixedRotation, false);\r\n        this.m_autoSleepFlag = b2Maybe(bd.allowSleep, true);\r\n        this.m_awakeFlag = b2Maybe(bd.awake, true);\r\n        this.m_activeFlag = b2Maybe(bd.active, true);\r\n        this.m_world = world;\r\n        this.m_xf.p.Copy(b2Maybe(bd.position, b2Vec2.ZERO));\r\n        // DEBUG: b2Assert(this.m_xf.p.IsValid());\r\n        this.m_xf.q.SetAngle(b2Maybe(bd.angle, 0));\r\n        // DEBUG: b2Assert(b2IsValid(this.m_xf.q.GetAngle()));\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0.Copy(this.m_xf);\r\n        // #endif\r\n        this.m_sweep.localCenter.SetZero();\r\n        this.m_sweep.c0.Copy(this.m_xf.p);\r\n        this.m_sweep.c.Copy(this.m_xf.p);\r\n        this.m_sweep.a0 = this.m_sweep.a = this.m_xf.q.GetAngle();\r\n        this.m_sweep.alpha0 = 0;\r\n        this.m_linearVelocity.Copy(b2Maybe(bd.linearVelocity, b2Vec2.ZERO));\r\n        // DEBUG: b2Assert(this.m_linearVelocity.IsValid());\r\n        this.m_angularVelocity = b2Maybe(bd.angularVelocity, 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_angularVelocity));\r\n        this.m_linearDamping = b2Maybe(bd.linearDamping, 0);\r\n        this.m_angularDamping = b2Maybe(bd.angularDamping, 0);\r\n        this.m_gravityScale = b2Maybe(bd.gravityScale, 1);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_gravityScale) && this.m_gravityScale >= 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_angularDamping) && this.m_angularDamping >= 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_linearDamping) && this.m_linearDamping >= 0);\r\n        this.m_force.SetZero();\r\n        this.m_torque = 0;\r\n        this.m_sleepTime = 0;\r\n        this.m_type = b2Maybe(bd.type, b2BodyType.b2_staticBody);\r\n        if (bd.type === b2BodyType.b2_dynamicBody) {\r\n            this.m_mass = 1;\r\n            this.m_invMass = 1;\r\n        }\r\n        else {\r\n            this.m_mass = 0;\r\n            this.m_invMass = 0;\r\n        }\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_userData = bd.userData;\r\n        this.m_fixtureList = null;\r\n        this.m_fixtureCount = 0;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        // #endif\r\n    }\r\n    CreateFixture(a, b = 0) {\r\n        if (a instanceof b2Shape) {\r\n            return this.CreateFixtureShapeDensity(a, b);\r\n        }\r\n        else {\r\n            return this.CreateFixtureDef(a);\r\n        }\r\n    }\r\n    /// Creates a fixture and attach it to this body. Use this function if you need\r\n    /// to set some fixture parameters, like friction. Otherwise you can create the\r\n    /// fixture directly from a shape.\r\n    /// If the density is non-zero, this function automatically updates the mass of the body.\r\n    /// Contacts are not created until the next time step.\r\n    /// @param def the fixture definition.\r\n    /// @warning This function is locked during callbacks.\r\n    CreateFixtureDef(def) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const fixture = new b2Fixture(def, this);\r\n        fixture.Create(def);\r\n        if (this.m_activeFlag) {\r\n            fixture.CreateProxies(this.m_xf);\r\n        }\r\n        fixture.m_next = this.m_fixtureList;\r\n        this.m_fixtureList = fixture;\r\n        ++this.m_fixtureCount;\r\n        // fixture.m_body = this;\r\n        // Adjust mass properties if needed.\r\n        if (fixture.m_density > 0) {\r\n            this.ResetMassData();\r\n        }\r\n        // Let the world know we have a new fixture. This will cause new contacts\r\n        // to be created at the beginning of the next time step.\r\n        this.m_world.m_newFixture = true;\r\n        return fixture;\r\n    }\r\n    CreateFixtureShapeDensity(shape, density = 0) {\r\n        const def = b2Body.CreateFixtureShapeDensity_s_def;\r\n        def.shape = shape;\r\n        def.density = density;\r\n        return this.CreateFixtureDef(def);\r\n    }\r\n    /// Destroy a fixture. This removes the fixture from the broad-phase and\r\n    /// destroys all contacts associated with this fixture. This will\r\n    /// automatically adjust the mass of the body if the body is dynamic and the\r\n    /// fixture has positive density.\r\n    /// All fixtures attached to a body are implicitly destroyed when the body is destroyed.\r\n    /// @param fixture the fixture to be removed.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyFixture(fixture) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        // DEBUG: b2Assert(fixture.m_body === this);\r\n        // Remove the fixture from this body's singly linked list.\r\n        // DEBUG: b2Assert(this.m_fixtureCount > 0);\r\n        let node = this.m_fixtureList;\r\n        let ppF = null;\r\n        // DEBUG: let found: boolean = false;\r\n        while (node !== null) {\r\n            if (node === fixture) {\r\n                if (ppF) {\r\n                    ppF.m_next = fixture.m_next;\r\n                }\r\n                else {\r\n                    this.m_fixtureList = fixture.m_next;\r\n                }\r\n                // DEBUG: found = true;\r\n                break;\r\n            }\r\n            ppF = node;\r\n            node = node.m_next;\r\n        }\r\n        // You tried to remove a shape that is not attached to this body.\r\n        // DEBUG: b2Assert(found);\r\n        // Destroy any contacts associated with the fixture.\r\n        let edge = this.m_contactList;\r\n        while (edge) {\r\n            const c = edge.contact;\r\n            edge = edge.next;\r\n            const fixtureA = c.GetFixtureA();\r\n            const fixtureB = c.GetFixtureB();\r\n            if (fixture === fixtureA || fixture === fixtureB) {\r\n                // This destroys the contact and removes it from\r\n                // this body's contact list.\r\n                this.m_world.m_contactManager.Destroy(c);\r\n            }\r\n        }\r\n        if (this.m_activeFlag) {\r\n            fixture.DestroyProxies();\r\n        }\r\n        // fixture.m_body = null;\r\n        fixture.m_next = null;\r\n        fixture.Destroy();\r\n        --this.m_fixtureCount;\r\n        // Reset the mass data.\r\n        this.ResetMassData();\r\n    }\r\n    /// Set the position of the body's origin and rotation.\r\n    /// This breaks any contacts and wakes the other bodies.\r\n    /// Manipulating a body's transform may cause non-physical behavior.\r\n    /// @param position the world position of the body's local origin.\r\n    /// @param angle the world rotation in radians.\r\n    SetTransformVec(position, angle) {\r\n        this.SetTransformXY(position.x, position.y, angle);\r\n    }\r\n    SetTransformXY(x, y, angle) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        this.m_xf.q.SetAngle(angle);\r\n        this.m_xf.p.Set(x, y);\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0.Copy(this.m_xf);\r\n        // #endif\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.a = angle;\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        this.m_sweep.a0 = angle;\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            f.Synchronize(this.m_xf, this.m_xf);\r\n        }\r\n        this.m_world.m_contactManager.FindNewContacts();\r\n    }\r\n    SetTransform(xf) {\r\n        this.SetTransformVec(xf.p, xf.GetAngle());\r\n    }\r\n    /// Get the body transform for the body's origin.\r\n    /// @return the world transform of the body's origin.\r\n    GetTransform() {\r\n        return this.m_xf;\r\n    }\r\n    /// Get the world body origin position.\r\n    /// @return the world position of the body's origin.\r\n    GetPosition() {\r\n        return this.m_xf.p;\r\n    }\r\n    SetPosition(position) {\r\n        this.SetTransformVec(position, this.GetAngle());\r\n    }\r\n    SetPositionXY(x, y) {\r\n        this.SetTransformXY(x, y, this.GetAngle());\r\n    }\r\n    /// Get the angle in radians.\r\n    /// @return the current world rotation angle in radians.\r\n    GetAngle() {\r\n        return this.m_sweep.a;\r\n    }\r\n    SetAngle(angle) {\r\n        this.SetTransformVec(this.GetPosition(), angle);\r\n    }\r\n    /// Get the world position of the center of mass.\r\n    GetWorldCenter() {\r\n        return this.m_sweep.c;\r\n    }\r\n    /// Get the local position of the center of mass.\r\n    GetLocalCenter() {\r\n        return this.m_sweep.localCenter;\r\n    }\r\n    /// Set the linear velocity of the center of mass.\r\n    /// @param v the new linear velocity of the center of mass.\r\n    SetLinearVelocity(v) {\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            return;\r\n        }\r\n        if (b2Vec2.DotVV(v, v) > 0) {\r\n            this.SetAwake(true);\r\n        }\r\n        this.m_linearVelocity.Copy(v);\r\n    }\r\n    /// Get the linear velocity of the center of mass.\r\n    /// @return the linear velocity of the center of mass.\r\n    GetLinearVelocity() {\r\n        return this.m_linearVelocity;\r\n    }\r\n    /// Set the angular velocity.\r\n    /// @param omega the new angular velocity in radians/second.\r\n    SetAngularVelocity(w) {\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            return;\r\n        }\r\n        if (w * w > 0) {\r\n            this.SetAwake(true);\r\n        }\r\n        this.m_angularVelocity = w;\r\n    }\r\n    /// Get the angular velocity.\r\n    /// @return the angular velocity in radians/second.\r\n    GetAngularVelocity() {\r\n        return this.m_angularVelocity;\r\n    }\r\n    GetDefinition(bd) {\r\n        bd.type = this.GetType();\r\n        bd.allowSleep = this.m_autoSleepFlag;\r\n        bd.angle = this.GetAngle();\r\n        bd.angularDamping = this.m_angularDamping;\r\n        bd.gravityScale = this.m_gravityScale;\r\n        bd.angularVelocity = this.m_angularVelocity;\r\n        bd.fixedRotation = this.m_fixedRotationFlag;\r\n        bd.bullet = this.m_bulletFlag;\r\n        bd.awake = this.m_awakeFlag;\r\n        bd.linearDamping = this.m_linearDamping;\r\n        bd.linearVelocity.Copy(this.GetLinearVelocity());\r\n        bd.position.Copy(this.GetPosition());\r\n        bd.userData = this.GetUserData();\r\n        return bd;\r\n    }\r\n    /// Apply a force at a world point. If the force is not\r\n    /// applied at the center of mass, it will generate a torque and\r\n    /// affect the angular velocity. This wakes up the body.\r\n    /// @param force the world force vector, usually in Newtons (N).\r\n    /// @param point the world position of the point of application.\r\n    /// @param wake also wake up the body\r\n    ApplyForce(force, point, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_force.x += force.x;\r\n            this.m_force.y += force.y;\r\n            this.m_torque += ((point.x - this.m_sweep.c.x) * force.y - (point.y - this.m_sweep.c.y) * force.x);\r\n        }\r\n    }\r\n    /// Apply a force to the center of mass. This wakes up the body.\r\n    /// @param force the world force vector, usually in Newtons (N).\r\n    /// @param wake also wake up the body\r\n    ApplyForceToCenter(force, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_force.x += force.x;\r\n            this.m_force.y += force.y;\r\n        }\r\n    }\r\n    /// Apply a torque. This affects the angular velocity\r\n    /// without affecting the linear velocity of the center of mass.\r\n    /// @param torque about the z-axis (out of the screen), usually in N-m.\r\n    /// @param wake also wake up the body\r\n    ApplyTorque(torque, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_torque += torque;\r\n        }\r\n    }\r\n    /// Apply an impulse at a point. This immediately modifies the velocity.\r\n    /// It also modifies the angular velocity if the point of application\r\n    /// is not at the center of mass. This wakes up the body.\r\n    /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n    /// @param point the world position of the point of application.\r\n    /// @param wake also wake up the body\r\n    ApplyLinearImpulse(impulse, point, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n            this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n            this.m_angularVelocity += this.m_invI * ((point.x - this.m_sweep.c.x) * impulse.y - (point.y - this.m_sweep.c.y) * impulse.x);\r\n        }\r\n    }\r\n    /// Apply an impulse at the center of gravity. This immediately modifies the velocity.\r\n    /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n    /// @param wake also wake up the body\r\n    ApplyLinearImpulseToCenter(impulse, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n            this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n        }\r\n    }\r\n    /// Apply an angular impulse.\r\n    /// @param impulse the angular impulse in units of kg*m*m/s\r\n    /// @param wake also wake up the body\r\n    ApplyAngularImpulse(impulse, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_angularVelocity += this.m_invI * impulse;\r\n        }\r\n    }\r\n    /// Get the total mass of the body.\r\n    /// @return the mass, usually in kilograms (kg).\r\n    GetMass() {\r\n        return this.m_mass;\r\n    }\r\n    /// Get the rotational inertia of the body about the local origin.\r\n    /// @return the rotational inertia, usually in kg-m^2.\r\n    GetInertia() {\r\n        return this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\r\n    }\r\n    /// Get the mass data of the body.\r\n    /// @return a struct containing the mass, inertia and center of the body.\r\n    GetMassData(data) {\r\n        data.mass = this.m_mass;\r\n        data.I = this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\r\n        data.center.Copy(this.m_sweep.localCenter);\r\n        return data;\r\n    }\r\n    SetMassData(massData) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        this.m_invMass = 0;\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_mass = massData.mass;\r\n        if (this.m_mass <= 0) {\r\n            this.m_mass = 1;\r\n        }\r\n        this.m_invMass = 1 / this.m_mass;\r\n        if (massData.I > 0 && !this.m_fixedRotationFlag) {\r\n            this.m_I = massData.I - this.m_mass * b2Vec2.DotVV(massData.center, massData.center);\r\n            // DEBUG: b2Assert(this.m_I > 0);\r\n            this.m_invI = 1 / this.m_I;\r\n        }\r\n        // Move center of mass.\r\n        const oldCenter = b2Body.SetMassData_s_oldCenter.Copy(this.m_sweep.c);\r\n        this.m_sweep.localCenter.Copy(massData.center);\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        // Update center of mass velocity.\r\n        b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\r\n    }\r\n    ResetMassData() {\r\n        // Compute mass data from shapes. Each shape has its own density.\r\n        this.m_mass = 0;\r\n        this.m_invMass = 0;\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_sweep.localCenter.SetZero();\r\n        // Static and kinematic bodies have zero mass.\r\n        if (this.m_type === b2BodyType.b2_staticBody || this.m_type === b2BodyType.b2_kinematicBody) {\r\n            this.m_sweep.c0.Copy(this.m_xf.p);\r\n            this.m_sweep.c.Copy(this.m_xf.p);\r\n            this.m_sweep.a0 = this.m_sweep.a;\r\n            return;\r\n        }\r\n        // DEBUG: b2Assert(this.m_type === b2BodyType.b2_dynamicBody);\r\n        // Accumulate mass over all fixtures.\r\n        const localCenter = b2Body.ResetMassData_s_localCenter.SetZero();\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            if (f.m_density === 0) {\r\n                continue;\r\n            }\r\n            const massData = f.GetMassData(b2Body.ResetMassData_s_massData);\r\n            this.m_mass += massData.mass;\r\n            localCenter.x += massData.center.x * massData.mass;\r\n            localCenter.y += massData.center.y * massData.mass;\r\n            this.m_I += massData.I;\r\n        }\r\n        // Compute center of mass.\r\n        if (this.m_mass > 0) {\r\n            this.m_invMass = 1 / this.m_mass;\r\n            localCenter.x *= this.m_invMass;\r\n            localCenter.y *= this.m_invMass;\r\n        }\r\n        else {\r\n            // Force all dynamic bodies to have a positive mass.\r\n            this.m_mass = 1;\r\n            this.m_invMass = 1;\r\n        }\r\n        if (this.m_I > 0 && !this.m_fixedRotationFlag) {\r\n            // Center the inertia about the center of mass.\r\n            this.m_I -= this.m_mass * b2Vec2.DotVV(localCenter, localCenter);\r\n            // DEBUG: b2Assert(this.m_I > 0);\r\n            this.m_invI = 1 / this.m_I;\r\n        }\r\n        else {\r\n            this.m_I = 0;\r\n            this.m_invI = 0;\r\n        }\r\n        // Move center of mass.\r\n        const oldCenter = b2Body.ResetMassData_s_oldCenter.Copy(this.m_sweep.c);\r\n        this.m_sweep.localCenter.Copy(localCenter);\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        // Update center of mass velocity.\r\n        b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\r\n    }\r\n    /// Get the world coordinates of a point given the local coordinates.\r\n    /// @param localPoint a point on the body measured relative the the body's origin.\r\n    /// @return the same point expressed in world coordinates.\r\n    GetWorldPoint(localPoint, out) {\r\n        return b2Transform.MulXV(this.m_xf, localPoint, out);\r\n    }\r\n    /// Get the world coordinates of a vector given the local coordinates.\r\n    /// @param localVector a vector fixed in the body.\r\n    /// @return the same vector expressed in world coordinates.\r\n    GetWorldVector(localVector, out) {\r\n        return b2Rot.MulRV(this.m_xf.q, localVector, out);\r\n    }\r\n    /// Gets a local point relative to the body's origin given a world point.\r\n    /// @param a point in world coordinates.\r\n    /// @return the corresponding local point relative to the body's origin.\r\n    GetLocalPoint(worldPoint, out) {\r\n        return b2Transform.MulTXV(this.m_xf, worldPoint, out);\r\n    }\r\n    /// Gets a local vector given a world vector.\r\n    /// @param a vector in world coordinates.\r\n    /// @return the corresponding local vector.\r\n    GetLocalVector(worldVector, out) {\r\n        return b2Rot.MulTRV(this.m_xf.q, worldVector, out);\r\n    }\r\n    /// Get the world linear velocity of a world point attached to this body.\r\n    /// @param a point in world coordinates.\r\n    /// @return the world velocity of a point.\r\n    GetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n        return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_sweep.c, b2Vec2.s_t0), out);\r\n    }\r\n    /// Get the world velocity of a local point.\r\n    /// @param a point in local coordinates.\r\n    /// @return the world velocity of a point.\r\n    GetLinearVelocityFromLocalPoint(localPoint, out) {\r\n        return this.GetLinearVelocityFromWorldPoint(this.GetWorldPoint(localPoint, out), out);\r\n    }\r\n    /// Get the linear damping of the body.\r\n    GetLinearDamping() {\r\n        return this.m_linearDamping;\r\n    }\r\n    /// Set the linear damping of the body.\r\n    SetLinearDamping(linearDamping) {\r\n        this.m_linearDamping = linearDamping;\r\n    }\r\n    /// Get the angular damping of the body.\r\n    GetAngularDamping() {\r\n        return this.m_angularDamping;\r\n    }\r\n    /// Set the angular damping of the body.\r\n    SetAngularDamping(angularDamping) {\r\n        this.m_angularDamping = angularDamping;\r\n    }\r\n    /// Get the gravity scale of the body.\r\n    GetGravityScale() {\r\n        return this.m_gravityScale;\r\n    }\r\n    /// Set the gravity scale of the body.\r\n    SetGravityScale(scale) {\r\n        this.m_gravityScale = scale;\r\n    }\r\n    /// Set the type of this body. This may alter the mass and velocity.\r\n    SetType(type) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        if (this.m_type === type) {\r\n            return;\r\n        }\r\n        this.m_type = type;\r\n        this.ResetMassData();\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            this.m_linearVelocity.SetZero();\r\n            this.m_angularVelocity = 0;\r\n            this.m_sweep.a0 = this.m_sweep.a;\r\n            this.m_sweep.c0.Copy(this.m_sweep.c);\r\n            this.SynchronizeFixtures();\r\n        }\r\n        this.SetAwake(true);\r\n        this.m_force.SetZero();\r\n        this.m_torque = 0;\r\n        // Delete the attached contacts.\r\n        let ce = this.m_contactList;\r\n        while (ce) {\r\n            const ce0 = ce;\r\n            ce = ce.next;\r\n            this.m_world.m_contactManager.Destroy(ce0.contact);\r\n        }\r\n        this.m_contactList = null;\r\n        // Touch the proxies so that new contacts will be created (when appropriate)\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            f.TouchProxies();\r\n        }\r\n    }\r\n    /// Get the type of this body.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n    /// Should this body be treated like a bullet for continuous collision detection?\r\n    SetBullet(flag) {\r\n        this.m_bulletFlag = flag;\r\n    }\r\n    /// Is this body treated like a bullet for continuous collision detection?\r\n    IsBullet() {\r\n        return this.m_bulletFlag;\r\n    }\r\n    /// You can disable sleeping on this body. If you disable sleeping, the\r\n    /// body will be woken.\r\n    SetSleepingAllowed(flag) {\r\n        this.m_autoSleepFlag = flag;\r\n        if (!flag) {\r\n            this.SetAwake(true);\r\n        }\r\n    }\r\n    /// Is this body allowed to sleep\r\n    IsSleepingAllowed() {\r\n        return this.m_autoSleepFlag;\r\n    }\r\n    /// Set the sleep state of the body. A sleeping body has very\r\n    /// low CPU cost.\r\n    /// @param flag set to true to wake the body, false to put it to sleep.\r\n    SetAwake(flag) {\r\n        if (flag) {\r\n            this.m_awakeFlag = true;\r\n            this.m_sleepTime = 0;\r\n        }\r\n        else {\r\n            this.m_awakeFlag = false;\r\n            this.m_sleepTime = 0;\r\n            this.m_linearVelocity.SetZero();\r\n            this.m_angularVelocity = 0;\r\n            this.m_force.SetZero();\r\n            this.m_torque = 0;\r\n        }\r\n    }\r\n    /// Get the sleeping state of this body.\r\n    /// @return true if the body is sleeping.\r\n    IsAwake() {\r\n        return this.m_awakeFlag;\r\n    }\r\n    /// Set the active state of the body. An inactive body is not\r\n    /// simulated and cannot be collided with or woken up.\r\n    /// If you pass a flag of true, all fixtures will be added to the\r\n    /// broad-phase.\r\n    /// If you pass a flag of false, all fixtures will be removed from\r\n    /// the broad-phase and all contacts will be destroyed.\r\n    /// Fixtures and joints are otherwise unaffected. You may continue\r\n    /// to create/destroy fixtures and joints on inactive bodies.\r\n    /// Fixtures on an inactive body are implicitly inactive and will\r\n    /// not participate in collisions, ray-casts, or queries.\r\n    /// Joints connected to an inactive body are implicitly inactive.\r\n    /// An inactive body is still owned by a b2World object and remains\r\n    /// in the body list.\r\n    SetActive(flag) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        if (flag === this.IsActive()) {\r\n            return;\r\n        }\r\n        this.m_activeFlag = flag;\r\n        if (flag) {\r\n            // Create all proxies.\r\n            for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n                f.CreateProxies(this.m_xf);\r\n            }\r\n            // Contacts are created the next time step.\r\n        }\r\n        else {\r\n            // Destroy all proxies.\r\n            for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n                f.DestroyProxies();\r\n            }\r\n            // Destroy the attached contacts.\r\n            let ce = this.m_contactList;\r\n            while (ce) {\r\n                const ce0 = ce;\r\n                ce = ce.next;\r\n                this.m_world.m_contactManager.Destroy(ce0.contact);\r\n            }\r\n            this.m_contactList = null;\r\n        }\r\n    }\r\n    /// Get the active state of the body.\r\n    IsActive() {\r\n        return this.m_activeFlag;\r\n    }\r\n    /// Set this body to have fixed rotation. This causes the mass\r\n    /// to be reset.\r\n    SetFixedRotation(flag) {\r\n        if (this.m_fixedRotationFlag === flag) {\r\n            return;\r\n        }\r\n        this.m_fixedRotationFlag = flag;\r\n        this.m_angularVelocity = 0;\r\n        this.ResetMassData();\r\n    }\r\n    /// Does this body have fixed rotation?\r\n    IsFixedRotation() {\r\n        return this.m_fixedRotationFlag;\r\n    }\r\n    /// Get the list of all fixtures attached to this body.\r\n    GetFixtureList() {\r\n        return this.m_fixtureList;\r\n    }\r\n    /// Get the list of all joints attached to this body.\r\n    GetJointList() {\r\n        return this.m_jointList;\r\n    }\r\n    /// Get the list of all contacts attached to this body.\r\n    /// @warning this list changes during the time step and you may\r\n    /// miss some collisions if you don't use b2ContactListener.\r\n    GetContactList() {\r\n        return this.m_contactList;\r\n    }\r\n    /// Get the next body in the world's body list.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data pointer that was provided in the body definition.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data. Use this to store your application specific data.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Get the parent world of this body.\r\n    GetWorld() {\r\n        return this.m_world;\r\n    }\r\n    /// Dump this body to a log file\r\n    Dump(log) {\r\n        const bodyIndex = this.m_islandIndex;\r\n        log(\"{\\n\");\r\n        log(\"  const bd: b2BodyDef = new b2BodyDef();\\n\");\r\n        let type_str = \"\";\r\n        switch (this.m_type) {\r\n            case b2BodyType.b2_staticBody:\r\n                type_str = \"b2BodyType.b2_staticBody\";\r\n                break;\r\n            case b2BodyType.b2_kinematicBody:\r\n                type_str = \"b2BodyType.b2_kinematicBody\";\r\n                break;\r\n            case b2BodyType.b2_dynamicBody:\r\n                type_str = \"b2BodyType.b2_dynamicBody\";\r\n                break;\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                break;\r\n        }\r\n        log(\"  bd.type = %s;\\n\", type_str);\r\n        log(\"  bd.position.Set(%.15f, %.15f);\\n\", this.m_xf.p.x, this.m_xf.p.y);\r\n        log(\"  bd.angle = %.15f;\\n\", this.m_sweep.a);\r\n        log(\"  bd.linearVelocity.Set(%.15f, %.15f);\\n\", this.m_linearVelocity.x, this.m_linearVelocity.y);\r\n        log(\"  bd.angularVelocity = %.15f;\\n\", this.m_angularVelocity);\r\n        log(\"  bd.linearDamping = %.15f;\\n\", this.m_linearDamping);\r\n        log(\"  bd.angularDamping = %.15f;\\n\", this.m_angularDamping);\r\n        log(\"  bd.allowSleep = %s;\\n\", (this.m_autoSleepFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.awake = %s;\\n\", (this.m_awakeFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.fixedRotation = %s;\\n\", (this.m_fixedRotationFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.bullet = %s;\\n\", (this.m_bulletFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.active = %s;\\n\", (this.m_activeFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.gravityScale = %.15f;\\n\", this.m_gravityScale);\r\n        log(\"\\n\");\r\n        log(\"  bodies[%d] = this.m_world.CreateBody(bd);\\n\", this.m_islandIndex);\r\n        log(\"\\n\");\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            log(\"  {\\n\");\r\n            f.Dump(log, bodyIndex);\r\n            log(\"  }\\n\");\r\n        }\r\n        log(\"}\\n\");\r\n    }\r\n    SynchronizeFixtures() {\r\n        const xf1 = b2Body.SynchronizeFixtures_s_xf1;\r\n        xf1.q.SetAngle(this.m_sweep.a0);\r\n        b2Rot.MulRV(xf1.q, this.m_sweep.localCenter, xf1.p);\r\n        b2Vec2.SubVV(this.m_sweep.c0, xf1.p, xf1.p);\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            f.Synchronize(xf1, this.m_xf);\r\n        }\r\n    }\r\n    SynchronizeTransform() {\r\n        this.m_xf.q.SetAngle(this.m_sweep.a);\r\n        b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\r\n        b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\r\n    }\r\n    // This is used to prevent connected bodies from colliding.\r\n    // It may lie, depending on the collideConnected flag.\r\n    ShouldCollide(other) {\r\n        // At least one body should be dynamic or kinematic.\r\n        if (this.m_type === b2BodyType.b2_staticBody && other.m_type === b2BodyType.b2_staticBody) {\r\n            return false;\r\n        }\r\n        return this.ShouldCollideConnected(other);\r\n    }\r\n    ShouldCollideConnected(other) {\r\n        // Does a joint prevent collision?\r\n        for (let jn = this.m_jointList; jn; jn = jn.next) {\r\n            if (jn.other === other) {\r\n                if (!jn.joint.m_collideConnected) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    Advance(alpha) {\r\n        // Advance to the new safe time. This doesn't sync the broad-phase.\r\n        this.m_sweep.Advance(alpha);\r\n        this.m_sweep.c.Copy(this.m_sweep.c0);\r\n        this.m_sweep.a = this.m_sweep.a0;\r\n        this.m_xf.q.SetAngle(this.m_sweep.a);\r\n        b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\r\n        b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\r\n    }\r\n    // #if B2_ENABLE_CONTROLLER\r\n    GetControllerList() {\r\n        return this.m_controllerList;\r\n    }\r\n    GetControllerCount() {\r\n        return this.m_controllerCount;\r\n    }\r\n}\r\n/// Creates a fixture from a shape and attach it to this body.\r\n/// This is a convenience function. Use b2FixtureDef if you need to set parameters\r\n/// like friction, restitution, user data, or filtering.\r\n/// If the density is non-zero, this function automatically updates the mass of the body.\r\n/// @param shape the shape to be cloned.\r\n/// @param density the shape density (set to zero for static bodies).\r\n/// @warning This function is locked during callbacks.\r\nb2Body.CreateFixtureShapeDensity_s_def = new b2FixtureDef();\r\n/// Set the mass properties to override the mass properties of the fixtures.\r\n/// Note that this changes the center of mass position.\r\n/// Note that creating or destroying fixtures can also alter the mass.\r\n/// This function has no effect if the body isn't dynamic.\r\n/// @param massData the mass properties.\r\nb2Body.SetMassData_s_oldCenter = new b2Vec2();\r\n/// This resets the mass properties to the sum of the mass properties of the fixtures.\r\n/// This normally does not need to be called unless you called SetMassData to override\r\n/// the mass and you later want to reset the mass.\r\nb2Body.ResetMassData_s_localCenter = new b2Vec2();\r\nb2Body.ResetMassData_s_oldCenter = new b2Vec2();\r\nb2Body.ResetMassData_s_massData = new b2MassData();\r\nb2Body.SynchronizeFixtures_s_xf1 = new b2Transform();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../../Common/b2Math\";\r\nexport var b2JointType;\r\n(function (b2JointType) {\r\n    b2JointType[b2JointType[\"e_unknownJoint\"] = 0] = \"e_unknownJoint\";\r\n    b2JointType[b2JointType[\"e_revoluteJoint\"] = 1] = \"e_revoluteJoint\";\r\n    b2JointType[b2JointType[\"e_prismaticJoint\"] = 2] = \"e_prismaticJoint\";\r\n    b2JointType[b2JointType[\"e_distanceJoint\"] = 3] = \"e_distanceJoint\";\r\n    b2JointType[b2JointType[\"e_pulleyJoint\"] = 4] = \"e_pulleyJoint\";\r\n    b2JointType[b2JointType[\"e_mouseJoint\"] = 5] = \"e_mouseJoint\";\r\n    b2JointType[b2JointType[\"e_gearJoint\"] = 6] = \"e_gearJoint\";\r\n    b2JointType[b2JointType[\"e_wheelJoint\"] = 7] = \"e_wheelJoint\";\r\n    b2JointType[b2JointType[\"e_weldJoint\"] = 8] = \"e_weldJoint\";\r\n    b2JointType[b2JointType[\"e_frictionJoint\"] = 9] = \"e_frictionJoint\";\r\n    b2JointType[b2JointType[\"e_ropeJoint\"] = 10] = \"e_ropeJoint\";\r\n    b2JointType[b2JointType[\"e_motorJoint\"] = 11] = \"e_motorJoint\";\r\n    b2JointType[b2JointType[\"e_areaJoint\"] = 12] = \"e_areaJoint\";\r\n})(b2JointType || (b2JointType = {}));\r\nexport var b2LimitState;\r\n(function (b2LimitState) {\r\n    b2LimitState[b2LimitState[\"e_inactiveLimit\"] = 0] = \"e_inactiveLimit\";\r\n    b2LimitState[b2LimitState[\"e_atLowerLimit\"] = 1] = \"e_atLowerLimit\";\r\n    b2LimitState[b2LimitState[\"e_atUpperLimit\"] = 2] = \"e_atUpperLimit\";\r\n    b2LimitState[b2LimitState[\"e_equalLimits\"] = 3] = \"e_equalLimits\";\r\n})(b2LimitState || (b2LimitState = {}));\r\nexport class b2Jacobian {\r\n    constructor() {\r\n        this.linear = new b2Vec2();\r\n        this.angularA = 0;\r\n        this.angularB = 0;\r\n    }\r\n    SetZero() {\r\n        this.linear.SetZero();\r\n        this.angularA = 0;\r\n        this.angularB = 0;\r\n        return this;\r\n    }\r\n    Set(x, a1, a2) {\r\n        this.linear.Copy(x);\r\n        this.angularA = a1;\r\n        this.angularB = a2;\r\n        return this;\r\n    }\r\n}\r\n/// A joint edge is used to connect bodies and joints together\r\n/// in a joint graph where each body is a node and each joint\r\n/// is an edge. A joint edge belongs to a doubly linked list\r\n/// maintained in each attached body. Each joint has two joint\r\n/// nodes, one for each attached body.\r\nexport class b2JointEdge {\r\n    constructor(joint, other) {\r\n        this.prev = null; ///< the previous joint edge in the body's joint list\r\n        this.next = null; ///< the next joint edge in the body's joint list\r\n        this.joint = joint;\r\n        this.other = other;\r\n    }\r\n}\r\n/// Joint definitions are used to construct joints.\r\nexport class b2JointDef {\r\n    constructor(type) {\r\n        /// The joint type is set automatically for concrete joint types.\r\n        this.type = b2JointType.e_unknownJoint;\r\n        /// Use this to attach application specific data to your joints.\r\n        this.userData = null;\r\n        /// Set this flag to true if the attached bodies should collide.\r\n        this.collideConnected = false;\r\n        this.type = type;\r\n    }\r\n}\r\n/// The base joint class. Joints are used to constraint two bodies together in\r\n/// various fashions. Some joints also feature limits and motors.\r\nexport class b2Joint {\r\n    constructor(def) {\r\n        // DEBUG: b2Assert(def.bodyA !== def.bodyB);\r\n        this.m_type = b2JointType.e_unknownJoint;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_index = 0;\r\n        this.m_islandFlag = false;\r\n        this.m_collideConnected = false;\r\n        this.m_userData = null;\r\n        this.m_type = def.type;\r\n        this.m_edgeA = new b2JointEdge(this, def.bodyB);\r\n        this.m_edgeB = new b2JointEdge(this, def.bodyA);\r\n        this.m_bodyA = def.bodyA;\r\n        this.m_bodyB = def.bodyB;\r\n        this.m_collideConnected = b2Maybe(def.collideConnected, false);\r\n        this.m_userData = def.userData;\r\n    }\r\n    /// Get the type of the concrete joint.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n    /// Get the first body attached to this joint.\r\n    GetBodyA() {\r\n        return this.m_bodyA;\r\n    }\r\n    /// Get the second body attached to this joint.\r\n    GetBodyB() {\r\n        return this.m_bodyB;\r\n    }\r\n    /// Get the next joint the world joint list.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data pointer.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data pointer.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Short-cut function to determine if either body is inactive.\r\n    IsActive() {\r\n        return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();\r\n    }\r\n    /// Get collide connected.\r\n    /// Note: modifying the collide connect flag won't work correctly because\r\n    /// the flag is only checked when fixture AABBs begin to overlap.\r\n    GetCollideConnected() {\r\n        return this.m_collideConnected;\r\n    }\r\n    /// Dump this joint to the log file.\r\n    Dump(log) {\r\n        log(\"// Dump is not supported for this joint type.\\n\");\r\n    }\r\n    /// Shift the origin for any points stored in world coordinates.\r\n    ShiftOrigin(newOrigin) {\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJKb2ludC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0R5bmFtaWNzL0pvaW50cy9iMkpvaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsNkRBQTZEO0FBQzdELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsTUFBTSxFQUFNLE1BQU0scUJBQXFCLENBQUM7QUFJakQsTUFBTSxDQUFOLElBQVksV0FjWDtBQWRELFdBQVksV0FBVztJQUNyQixpRUFBa0IsQ0FBQTtJQUNsQixtRUFBbUIsQ0FBQTtJQUNuQixxRUFBb0IsQ0FBQTtJQUNwQixtRUFBbUIsQ0FBQTtJQUNuQiwrREFBaUIsQ0FBQTtJQUNqQiw2REFBZ0IsQ0FBQTtJQUNoQiwyREFBZSxDQUFBO0lBQ2YsNkRBQWdCLENBQUE7SUFDaEIsMkRBQWUsQ0FBQTtJQUNmLG1FQUFtQixDQUFBO0lBQ25CLDREQUFnQixDQUFBO0lBQ2hCLDhEQUFpQixDQUFBO0lBQ2pCLDREQUFnQixDQUFBO0FBQ2xCLENBQUMsRUFkVyxXQUFXLEtBQVgsV0FBVyxRQWN0QjtBQUVELE1BQU0sQ0FBTixJQUFZLFlBS1g7QUFMRCxXQUFZLFlBQVk7SUFDdEIscUVBQW1CLENBQUE7SUFDbkIsbUVBQWtCLENBQUE7SUFDbEIsbUVBQWtCLENBQUE7SUFDbEIsaUVBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQUxXLFlBQVksS0FBWixZQUFZLFFBS3ZCO0FBRUQsTUFBTSxPQUFPLFVBQVU7SUFBdkI7UUFDa0IsV0FBTSxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFDdkMsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixhQUFRLEdBQVcsQ0FBQyxDQUFDO0lBZTlCLENBQUM7SUFiUSxPQUFPO1FBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMs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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2_pi, b2_epsilon } from \"../../Common/b2Settings\";\r\nimport { b2Sq, b2Sqrt, b2Asin, b2Pow, b2Vec2, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A circle shape.\r\nexport class b2CircleShape extends b2Shape {\r\n    constructor(radius = 0) {\r\n        super(b2ShapeType.e_circleShape, radius);\r\n        this.m_p = new b2Vec2();\r\n    }\r\n    Set(position, radius = this.m_radius) {\r\n        this.m_p.Copy(position);\r\n        this.m_radius = radius;\r\n        return this;\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2CircleShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        // DEBUG: b2Assert(other instanceof b2CircleShape);\r\n        this.m_p.Copy(other.m_p);\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    TestPoint(transform, p) {\r\n        const center = b2Transform.MulXV(transform, this.m_p, b2CircleShape.TestPoint_s_center);\r\n        const d = b2Vec2.SubVV(p, center, b2CircleShape.TestPoint_s_d);\r\n        return b2Vec2.DotVV(d, d) <= b2Sq(this.m_radius);\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const center = b2Transform.MulXV(xf, this.m_p, b2CircleShape.ComputeDistance_s_center);\r\n        b2Vec2.SubVV(p, center, normal);\r\n        return normal.Normalize() - this.m_radius;\r\n    }\r\n    RayCast(output, input, transform, childIndex) {\r\n        const position = b2Transform.MulXV(transform, this.m_p, b2CircleShape.RayCast_s_position);\r\n        const s = b2Vec2.SubVV(input.p1, position, b2CircleShape.RayCast_s_s);\r\n        const b = b2Vec2.DotVV(s, s) - b2Sq(this.m_radius);\r\n        // Solve quadratic equation.\r\n        const r = b2Vec2.SubVV(input.p2, input.p1, b2CircleShape.RayCast_s_r);\r\n        const c = b2Vec2.DotVV(s, r);\r\n        const rr = b2Vec2.DotVV(r, r);\r\n        const sigma = c * c - rr * b;\r\n        // Check for negative discriminant and short segment.\r\n        if (sigma < 0 || rr < b2_epsilon) {\r\n            return false;\r\n        }\r\n        // Find the point of intersection of the line with the circle.\r\n        let a = (-(c + b2Sqrt(sigma)));\r\n        // Is the intersection point on the segment?\r\n        if (0 <= a && a <= input.maxFraction * rr) {\r\n            a /= rr;\r\n            output.fraction = a;\r\n            b2Vec2.AddVMulSV(s, a, r, output.normal).SelfNormalize();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ComputeAABB(aabb, transform, childIndex) {\r\n        const p = b2Transform.MulXV(transform, this.m_p, b2CircleShape.ComputeAABB_s_p);\r\n        aabb.lowerBound.Set(p.x - this.m_radius, p.y - this.m_radius);\r\n        aabb.upperBound.Set(p.x + this.m_radius, p.y + this.m_radius);\r\n    }\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        const radius_sq = b2Sq(this.m_radius);\r\n        massData.mass = density * b2_pi * radius_sq;\r\n        massData.center.Copy(this.m_p);\r\n        // inertia about the local origin\r\n        massData.I = massData.mass * (0.5 * radius_sq + b2Vec2.DotVV(this.m_p, this.m_p));\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_p);\r\n        proxy.m_count = 1;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        const p = b2Transform.MulXV(xf, this.m_p, new b2Vec2());\r\n        const l = (-(b2Vec2.DotVV(normal, p) - offset));\r\n        if (l < (-this.m_radius) + b2_epsilon) {\r\n            // Completely dry\r\n            return 0;\r\n        }\r\n        if (l > this.m_radius) {\r\n            // Completely wet\r\n            c.Copy(p);\r\n            return b2_pi * this.m_radius * this.m_radius;\r\n        }\r\n        // Magic\r\n        const r2 = this.m_radius * this.m_radius;\r\n        const l2 = l * l;\r\n        const area = r2 * (b2Asin(l / this.m_radius) + b2_pi / 2) + l * b2Sqrt(r2 - l2);\r\n        const com = (-2 / 3 * b2Pow(r2 - l2, 1.5) / area);\r\n        c.x = p.x + normal.x * com;\r\n        c.y = p.y + normal.y * com;\r\n        return area;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2CircleShape = new b2CircleShape();\\n\");\r\n        log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\r\n        log(\"    shape.m_p.Set(%.15f, %.15f);\\n\", this.m_p.x, this.m_p.y);\r\n    }\r\n}\r\n/// Implement b2Shape.\r\nb2CircleShape.TestPoint_s_center = new b2Vec2();\r\nb2CircleShape.TestPoint_s_d = new b2Vec2();\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2CircleShape.ComputeDistance_s_center = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\r\n// From Section 3.1.2\r\n// x = s + a * r\r\n// norm(x) = radius\r\nb2CircleShape.RayCast_s_position = new b2Vec2();\r\nb2CircleShape.RayCast_s_s = new b2Vec2();\r\nb2CircleShape.RayCast_s_r = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2CircleShape.ComputeAABB_s_p = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaXJjbGVTaGFwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0NvbGxpc2lvbi9TaGFwZXMvYjJDaXJjbGVTaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLDZEQUE2RDtBQUM3RCxPQUFPLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzVELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBTSxNQUFNLHFCQUFxQixDQUFDO0FBSTNGLE9BQU8sRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRWpELG1CQUFtQjtBQUNuQixNQUFNLE9BQU8sYUFBYyxTQUFRLE9BQU87SUFHeEMsWUFBWSxTQUFpQixDQUFDO1FBQzVCLEtBQUssQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBSDNCLFFBQUcsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO0lBSTNDLENBQUM7SUFFTSxHQUFHLENBQUMsUUFBWSxFQUFFLFNBQWlCLElBQUksQ0FBQyxRQUFRO1FBQ3JELElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELHNCQUFzQjtJQUNmLEtBQUs7UUFDVixPQUFPLElBQUksYUFBYSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFTSxJQUFJLENBQUMsS0FBb0I7UUFDOUIsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVsQixtREFBbUQ7UUFFbkQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENB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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert, b2_epsilon_sq } from \"../../Common/b2Settings\";\r\nimport { b2_epsilon, b2_maxFloat, b2_linearSlop, b2_polygonRadius } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2MassData } from \"./b2Shape\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A convex polygon. It is assumed that the interior of the polygon is to\r\n/// the left of each edge.\r\n/// In most cases you should not need many vertices for a convex polygon.\r\nexport class b2PolygonShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_polygonShape, b2_polygonRadius);\r\n        this.m_centroid = new b2Vec2(0, 0);\r\n        this.m_vertices = [];\r\n        this.m_normals = [];\r\n        this.m_count = 0;\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2PolygonShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        // DEBUG: b2Assert(other instanceof b2PolygonShape);\r\n        this.m_centroid.Copy(other.m_centroid);\r\n        this.m_count = other.m_count;\r\n        this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n        this.m_normals = b2Vec2.MakeArray(this.m_count);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_vertices[i].Copy(other.m_vertices[i]);\r\n            this.m_normals[i].Copy(other.m_normals[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    Set(vertices, count = vertices.length, start = 0) {\r\n        // DEBUG: b2Assert(3 <= count);\r\n        if (count < 3) {\r\n            return this.SetAsBox(1, 1);\r\n        }\r\n        let n = count;\r\n        // Perform welding and copy vertices into local buffer.\r\n        const ps = [];\r\n        for (let i = 0; i < n; ++i) {\r\n            const /*b2Vec2*/ v = vertices[start + i];\r\n            let /*bool*/ unique = true;\r\n            for (let /*int32*/ j = 0; j < ps.length; ++j) {\r\n                if (b2Vec2.DistanceSquaredVV(v, ps[j]) < ((0.5 * b2_linearSlop) * (0.5 * b2_linearSlop))) {\r\n                    unique = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (unique) {\r\n                ps.push(v);\r\n            }\r\n        }\r\n        n = ps.length;\r\n        if (n < 3) {\r\n            // Polygon is degenerate.\r\n            // DEBUG: b2Assert(false);\r\n            return this.SetAsBox(1.0, 1.0);\r\n        }\r\n        // Create the convex hull using the Gift wrapping algorithm\r\n        // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\r\n        // Find the right most point on the hull\r\n        let i0 = 0;\r\n        let x0 = ps[0].x;\r\n        for (let i = 1; i < n; ++i) {\r\n            const x = ps[i].x;\r\n            if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\r\n                i0 = i;\r\n                x0 = x;\r\n            }\r\n        }\r\n        const hull = [];\r\n        let m = 0;\r\n        let ih = i0;\r\n        for (;;) {\r\n            hull[m] = ih;\r\n            let ie = 0;\r\n            for (let j = 1; j < n; ++j) {\r\n                if (ie === ih) {\r\n                    ie = j;\r\n                    continue;\r\n                }\r\n                const r = b2Vec2.SubVV(ps[ie], ps[hull[m]], b2PolygonShape.Set_s_r);\r\n                const v = b2Vec2.SubVV(ps[j], ps[hull[m]], b2PolygonShape.Set_s_v);\r\n                const c = b2Vec2.CrossVV(r, v);\r\n                if (c < 0) {\r\n                    ie = j;\r\n                }\r\n                // Collinearity check\r\n                if (c === 0 && v.LengthSquared() > r.LengthSquared()) {\r\n                    ie = j;\r\n                }\r\n            }\r\n            ++m;\r\n            ih = ie;\r\n            if (ie === i0) {\r\n                break;\r\n            }\r\n        }\r\n        this.m_count = m;\r\n        this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n        this.m_normals = b2Vec2.MakeArray(this.m_count);\r\n        // Copy vertices.\r\n        for (let i = 0; i < m; ++i) {\r\n            this.m_vertices[i].Copy(ps[hull[i]]);\r\n        }\r\n        // Compute normals. Ensure the edges have non-zero length.\r\n        for (let i = 0; i < m; ++i) {\r\n            const vertexi1 = this.m_vertices[i];\r\n            const vertexi2 = this.m_vertices[(i + 1) % m];\r\n            const edge = b2Vec2.SubVV(vertexi2, vertexi1, b2Vec2.s_t0); // edge uses s_t0\r\n            // DEBUG: b2Assert(edge.LengthSquared() > b2_epsilon_sq);\r\n            b2Vec2.CrossVOne(edge, this.m_normals[i]).SelfNormalize();\r\n        }\r\n        // Compute the polygon centroid.\r\n        b2PolygonShape.ComputeCentroid(this.m_vertices, m, this.m_centroid);\r\n        return this;\r\n    }\r\n    SetAsArray(vertices, count = vertices.length) {\r\n        return this.Set(vertices, count);\r\n    }\r\n    /// Build vertices to represent an axis-aligned box or an oriented box.\r\n    /// @param hx the half-width.\r\n    /// @param hy the half-height.\r\n    /// @param center the center of the box in local coordinates.\r\n    /// @param angle the rotation of the box in local coordinates.\r\n    SetAsBox(hx, hy, center, angle = 0) {\r\n        this.m_count = 4;\r\n        this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n        this.m_normals = b2Vec2.MakeArray(this.m_count);\r\n        this.m_vertices[0].Set((-hx), (-hy));\r\n        this.m_vertices[1].Set(hx, (-hy));\r\n        this.m_vertices[2].Set(hx, hy);\r\n        this.m_vertices[3].Set((-hx), hy);\r\n        this.m_normals[0].Set(0, (-1));\r\n        this.m_normals[1].Set(1, 0);\r\n        this.m_normals[2].Set(0, 1);\r\n        this.m_normals[3].Set((-1), 0);\r\n        this.m_centroid.SetZero();\r\n        if (center) {\r\n            this.m_centroid.Copy(center);\r\n            const xf = new b2Transform();\r\n            xf.SetPosition(center);\r\n            xf.SetRotationAngle(angle);\r\n            // Transform vertices and normals.\r\n            for (let i = 0; i < this.m_count; ++i) {\r\n                b2Transform.MulXV(xf, this.m_vertices[i], this.m_vertices[i]);\r\n                b2Rot.MulRV(xf.q, this.m_normals[i], this.m_normals[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    TestPoint(xf, p) {\r\n        const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.TestPoint_s_pLocal);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\r\n            if (dot > 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.ComputeDistance_s_pLocal);\r\n        let maxDistance = -b2_maxFloat;\r\n        const normalForMaxDistance = b2PolygonShape.ComputeDistance_s_normalForMaxDistance.Copy(pLocal);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\r\n            if (dot > maxDistance) {\r\n                maxDistance = dot;\r\n                normalForMaxDistance.Copy(this.m_normals[i]);\r\n            }\r\n        }\r\n        if (maxDistance > 0) {\r\n            const minDistance = b2PolygonShape.ComputeDistance_s_minDistance.Copy(normalForMaxDistance);\r\n            let minDistance2 = maxDistance * maxDistance;\r\n            for (let i = 0; i < this.m_count; ++i) {\r\n                const distance = b2Vec2.SubVV(pLocal, this.m_vertices[i], b2PolygonShape.ComputeDistance_s_distance);\r\n                const distance2 = distance.LengthSquared();\r\n                if (minDistance2 > distance2) {\r\n                    minDistance.Copy(distance);\r\n                    minDistance2 = distance2;\r\n                }\r\n            }\r\n            b2Rot.MulRV(xf.q, minDistance, normal);\r\n            normal.Normalize();\r\n            return Math.sqrt(minDistance2);\r\n        }\r\n        else {\r\n            b2Rot.MulRV(xf.q, normalForMaxDistance, normal);\r\n            return maxDistance;\r\n        }\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        // Put the ray into the polygon's frame of reference.\r\n        const p1 = b2Transform.MulTXV(xf, input.p1, b2PolygonShape.RayCast_s_p1);\r\n        const p2 = b2Transform.MulTXV(xf, input.p2, b2PolygonShape.RayCast_s_p2);\r\n        const d = b2Vec2.SubVV(p2, p1, b2PolygonShape.RayCast_s_d);\r\n        let lower = 0, upper = input.maxFraction;\r\n        let index = -1;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            // p = p1 + a * d\r\n            // dot(normal, p - v) = 0\r\n            // dot(normal, p1 - v) + a * dot(normal, d) = 0\r\n            const numerator = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(this.m_vertices[i], p1, b2Vec2.s_t0));\r\n            const denominator = b2Vec2.DotVV(this.m_normals[i], d);\r\n            if (denominator === 0) {\r\n                if (numerator < 0) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                // Note: we want this predicate without division:\r\n                // lower < numerator / denominator, where denominator < 0\r\n                // Since denominator < 0, we have to flip the inequality:\r\n                // lower < numerator / denominator <==> denominator * lower > numerator.\r\n                if (denominator < 0 && numerator < lower * denominator) {\r\n                    // Increase lower.\r\n                    // The segment enters this half-space.\r\n                    lower = numerator / denominator;\r\n                    index = i;\r\n                }\r\n                else if (denominator > 0 && numerator < upper * denominator) {\r\n                    // Decrease upper.\r\n                    // The segment exits this half-space.\r\n                    upper = numerator / denominator;\r\n                }\r\n            }\r\n            // The use of epsilon here causes the assert on lower to trip\r\n            // in some cases. Apparently the use of epsilon was to make edge\r\n            // shapes work, but now those are handled separately.\r\n            // if (upper < lower - b2_epsilon)\r\n            if (upper < lower) {\r\n                return false;\r\n            }\r\n        }\r\n        // DEBUG: b2Assert(0 <= lower && lower <= input.maxFraction);\r\n        if (index >= 0) {\r\n            output.fraction = lower;\r\n            b2Rot.MulRV(xf.q, this.m_normals[index], output.normal);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        const lower = b2Transform.MulXV(xf, this.m_vertices[0], aabb.lowerBound);\r\n        const upper = aabb.upperBound.Copy(lower);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const v = b2Transform.MulXV(xf, this.m_vertices[i], b2PolygonShape.ComputeAABB_s_v);\r\n            b2Vec2.MinV(v, lower, lower);\r\n            b2Vec2.MaxV(v, upper, upper);\r\n        }\r\n        const r = this.m_radius;\r\n        lower.SelfSubXY(r, r);\r\n        upper.SelfAddXY(r, r);\r\n    }\r\n    ComputeMass(massData, density) {\r\n        // Polygon mass, centroid, and inertia.\r\n        // Let rho be the polygon density in mass per unit area.\r\n        // Then:\r\n        // mass = rho * int(dA)\r\n        // centroid.x = (1/mass) * rho * int(x * dA)\r\n        // centroid.y = (1/mass) * rho * int(y * dA)\r\n        // I = rho * int((x*x + y*y) * dA)\r\n        //\r\n        // We can compute these integrals by summing all the integrals\r\n        // for each triangle of the polygon. To evaluate the integral\r\n        // for a single triangle, we make a change of variables to\r\n        // the (u,v) coordinates of the triangle:\r\n        // x = x0 + e1x * u + e2x * v\r\n        // y = y0 + e1y * u + e2y * v\r\n        // where 0 <= u && 0 <= v && u + v <= 1.\r\n        //\r\n        // We integrate u from [0,1-v] and then v from [0,1].\r\n        // We also need to use the Jacobian of the transformation:\r\n        // D = cross(e1, e2)\r\n        //\r\n        // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\r\n        //\r\n        // The rest of the derivation is handled by computer algebra.\r\n        // DEBUG: b2Assert(this.m_count >= 3);\r\n        const center = b2PolygonShape.ComputeMass_s_center.SetZero();\r\n        let area = 0;\r\n        let I = 0;\r\n        // s is the reference point for forming triangles.\r\n        // It's location doesn't change the result (except for rounding error).\r\n        const s = b2PolygonShape.ComputeMass_s_s.SetZero();\r\n        // This code would put the reference point inside the polygon.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            s.SelfAdd(this.m_vertices[i]);\r\n        }\r\n        s.SelfMul(1 / this.m_count);\r\n        const k_inv3 = 1 / 3;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            // Triangle vertices.\r\n            const e1 = b2Vec2.SubVV(this.m_vertices[i], s, b2PolygonShape.ComputeMass_s_e1);\r\n            const e2 = b2Vec2.SubVV(this.m_vertices[(i + 1) % this.m_count], s, b2PolygonShape.ComputeMass_s_e2);\r\n            const D = b2Vec2.CrossVV(e1, e2);\r\n            const triangleArea = 0.5 * D;\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            center.SelfAdd(b2Vec2.MulSV(triangleArea * k_inv3, b2Vec2.AddVV(e1, e2, b2Vec2.s_t0), b2Vec2.s_t1));\r\n            const ex1 = e1.x;\r\n            const ey1 = e1.y;\r\n            const ex2 = e2.x;\r\n            const ey2 = e2.y;\r\n            const intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\r\n            const inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\r\n            I += (0.25 * k_inv3 * D) * (intx2 + inty2);\r\n        }\r\n        // Total mass\r\n        massData.mass = density * area;\r\n        // Center of mass\r\n        // DEBUG: b2Assert(area > b2_epsilon);\r\n        center.SelfMul(1 / area);\r\n        b2Vec2.AddVV(center, s, massData.center);\r\n        // Inertia tensor relative to the local origin (point s).\r\n        massData.I = density * I;\r\n        // Shift to center of mass then to original body origin.\r\n        massData.I += massData.mass * (b2Vec2.DotVV(massData.center, massData.center) - b2Vec2.DotVV(center, center));\r\n    }\r\n    Validate() {\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const i1 = i;\r\n            const i2 = (i + 1) % this.m_count;\r\n            const p = this.m_vertices[i1];\r\n            const e = b2Vec2.SubVV(this.m_vertices[i2], p, b2PolygonShape.Validate_s_e);\r\n            for (let j = 0; j < this.m_count; ++j) {\r\n                if (j === i1 || j === i2) {\r\n                    continue;\r\n                }\r\n                const v = b2Vec2.SubVV(this.m_vertices[j], p, b2PolygonShape.Validate_s_v);\r\n                const c = b2Vec2.CrossVV(e, v);\r\n                if (c < 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = this.m_vertices;\r\n        proxy.m_count = this.m_count;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        // Transform plane into shape co-ordinates\r\n        const normalL = b2Rot.MulTRV(xf.q, normal, b2PolygonShape.ComputeSubmergedArea_s_normalL);\r\n        const offsetL = offset - b2Vec2.DotVV(normal, xf.p);\r\n        const depths = [];\r\n        let diveCount = 0;\r\n        let intoIndex = -1;\r\n        let outoIndex = -1;\r\n        let lastSubmerged = false;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            depths[i] = b2Vec2.DotVV(normalL, this.m_vertices[i]) - offsetL;\r\n            const isSubmerged = depths[i] < (-b2_epsilon);\r\n            if (i > 0) {\r\n                if (isSubmerged) {\r\n                    if (!lastSubmerged) {\r\n                        intoIndex = i - 1;\r\n                        diveCount++;\r\n                    }\r\n                }\r\n                else {\r\n                    if (lastSubmerged) {\r\n                        outoIndex = i - 1;\r\n                        diveCount++;\r\n                    }\r\n                }\r\n            }\r\n            lastSubmerged = isSubmerged;\r\n        }\r\n        switch (diveCount) {\r\n            case 0:\r\n                if (lastSubmerged) {\r\n                    // Completely submerged\r\n                    const md = b2PolygonShape.ComputeSubmergedArea_s_md;\r\n                    this.ComputeMass(md, 1);\r\n                    b2Transform.MulXV(xf, md.center, c);\r\n                    return md.mass;\r\n                }\r\n                else {\r\n                    // Completely dry\r\n                    return 0;\r\n                }\r\n            case 1:\r\n                if (intoIndex === (-1)) {\r\n                    intoIndex = this.m_count - 1;\r\n                }\r\n                else {\r\n                    outoIndex = this.m_count - 1;\r\n                }\r\n                break;\r\n        }\r\n        const intoIndex2 = ((intoIndex + 1) % this.m_count);\r\n        const outoIndex2 = ((outoIndex + 1) % this.m_count);\r\n        const intoLamdda = (0 - depths[intoIndex]) / (depths[intoIndex2] - depths[intoIndex]);\r\n        const outoLamdda = (0 - depths[outoIndex]) / (depths[outoIndex2] - depths[outoIndex]);\r\n        const intoVec = b2PolygonShape.ComputeSubmergedArea_s_intoVec.Set(this.m_vertices[intoIndex].x * (1 - intoLamdda) + this.m_vertices[intoIndex2].x * intoLamdda, this.m_vertices[intoIndex].y * (1 - intoLamdda) + this.m_vertices[intoIndex2].y * intoLamdda);\r\n        const outoVec = b2PolygonShape.ComputeSubmergedArea_s_outoVec.Set(this.m_vertices[outoIndex].x * (1 - outoLamdda) + this.m_vertices[outoIndex2].x * outoLamdda, this.m_vertices[outoIndex].y * (1 - outoLamdda) + this.m_vertices[outoIndex2].y * outoLamdda);\r\n        // Initialize accumulator\r\n        let area = 0;\r\n        const center = b2PolygonShape.ComputeSubmergedArea_s_center.SetZero();\r\n        let p2 = this.m_vertices[intoIndex2];\r\n        let p3;\r\n        // An awkward loop from intoIndex2+1 to outIndex2\r\n        let i = intoIndex2;\r\n        while (i !== outoIndex2) {\r\n            i = (i + 1) % this.m_count;\r\n            if (i === outoIndex2) {\r\n                p3 = outoVec;\r\n            }\r\n            else {\r\n                p3 = this.m_vertices[i];\r\n            }\r\n            const triangleArea = 0.5 * ((p2.x - intoVec.x) * (p3.y - intoVec.y) - (p2.y - intoVec.y) * (p3.x - intoVec.x));\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            center.x += triangleArea * (intoVec.x + p2.x + p3.x) / 3;\r\n            center.y += triangleArea * (intoVec.y + p2.y + p3.y) / 3;\r\n            p2 = p3;\r\n        }\r\n        // Normalize and transform centroid\r\n        center.SelfMul(1 / area);\r\n        b2Transform.MulXV(xf, center, c);\r\n        return area;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2PolygonShape = new b2PolygonShape();\\n\");\r\n        log(\"    const vs: b2Vec2[] = [];\\n\");\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            log(\"    vs[%d] = new b2Vec2(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\r\n        }\r\n        log(\"    shape.Set(vs, %d);\\n\", this.m_count);\r\n    }\r\n    static ComputeCentroid(vs, count, out) {\r\n        // DEBUG: b2Assert(count >= 3);\r\n        const c = out;\r\n        c.SetZero();\r\n        let area = 0;\r\n        // s is the reference point for forming triangles.\r\n        // It's location doesn't change the result (except for rounding error).\r\n        const pRef = b2PolygonShape.ComputeCentroid_s_pRef.SetZero();\r\n        /*\r\n    #if 0\r\n        // This code would put the reference point inside the polygon.\r\n        for (let i: number = 0; i < count; ++i) {\r\n          pRef.SelfAdd(vs[i]);\r\n        }\r\n        pRef.SelfMul(1 / count);\r\n    #endif\r\n        */\r\n        const inv3 = 1 / 3;\r\n        for (let i = 0; i < count; ++i) {\r\n            // Triangle vertices.\r\n            const p1 = pRef;\r\n            const p2 = vs[i];\r\n            const p3 = vs[(i + 1) % count];\r\n            const e1 = b2Vec2.SubVV(p2, p1, b2PolygonShape.ComputeCentroid_s_e1);\r\n            const e2 = b2Vec2.SubVV(p3, p1, b2PolygonShape.ComputeCentroid_s_e2);\r\n            const D = b2Vec2.CrossVV(e1, e2);\r\n            const triangleArea = 0.5 * D;\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            c.x += triangleArea * inv3 * (p1.x + p2.x + p3.x);\r\n            c.y += triangleArea * inv3 * (p1.y + p2.y + p3.y);\r\n        }\r\n        // Centroid\r\n        // DEBUG: b2Assert(area > b2_epsilon);\r\n        c.SelfMul(1 / area);\r\n        return c;\r\n    }\r\n}\r\n/// Create a convex hull from the given array of points.\r\n/// @warning the points may be re-ordered, even if they form a convex polygon\r\n/// @warning collinear points are handled but not removed. Collinear points\r\n/// may lead to poor stacking behavior.\r\nb2PolygonShape.Set_s_r = new b2Vec2();\r\nb2PolygonShape.Set_s_v = new b2Vec2();\r\n/// @see b2Shape::TestPoint\r\nb2PolygonShape.TestPoint_s_pLocal = new b2Vec2();\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2PolygonShape.ComputeDistance_s_pLocal = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_normalForMaxDistance = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_minDistance = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_distance = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\nb2PolygonShape.RayCast_s_p1 = new b2Vec2();\r\nb2PolygonShape.RayCast_s_p2 = new b2Vec2();\r\nb2PolygonShape.RayCast_s_d = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2PolygonShape.ComputeAABB_s_v = new b2Vec2();\r\n/// @see b2Shape::ComputeMass\r\nb2PolygonShape.ComputeMass_s_center = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_s = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_e1 = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_e2 = new b2Vec2();\r\nb2PolygonShape.Validate_s_e = new b2Vec2();\r\nb2PolygonShape.Validate_s_v = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_normalL = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_md = new b2MassData();\r\nb2PolygonShape.ComputeSubmergedArea_s_intoVec = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_outoVec = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_center = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_pRef = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_e1 = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_e2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQb2x5Z29uU2hhcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9Cb3gyRC9Db2xsaXNpb24vU2hhcGVzL2IyUG9seWdvblNoYXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsNEVBQTRFO0FBQzVFLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLGFBQWEsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ25HLE9BQU8sRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBTSxNQUFNLHFCQUFxQixDQUFDO0FBR3JFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDdkMsT0FBTyxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFakQsMEVBQTBFO0FBQzFFLDBCQUEwQjtBQUMxQix5RUFBeUU7QUFDekUsTUFBTSxPQUFPLGNBQWUsU0FBUSxPQUFPO0lBTXpDO1FBQ0UsS0FBSyxDQUFDLFdBQVcsQ0FBQyxjQUFjLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQU50QyxlQUFVLEdBQVcsSUFBSSxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQy9DLGVBQVUsR0FBYSxFQUFFLENBQUM7UUFDMUIsY0FBUyxHQUFhLEVBQUUsQ0FBQztRQUN6QixZQUFPLEdBQVcsQ0FBQyxDQUFDO0lBSTNCLENBQUM7SUFFRCxzQkFBc0I7SUFDZixLQUFLO1FBQ1YsT0FBTyxJQUFJLGNBQWMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRU0sSUFBSSxDQUFDLEtBQXFCO1FBQy9CLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFbEIsb0RBQW9EO1FBRXBELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENB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","/*\r\n* Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2_polygonRadius } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A line segment (edge) shape. These can be connected in chains or loops\r\n/// to other edge shapes. The connectivity information is used to ensure\r\n/// correct contact normals.\r\nexport class b2EdgeShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_edgeShape, b2_polygonRadius);\r\n        this.m_vertex1 = new b2Vec2();\r\n        this.m_vertex2 = new b2Vec2();\r\n        this.m_vertex0 = new b2Vec2();\r\n        this.m_vertex3 = new b2Vec2();\r\n        this.m_hasVertex0 = false;\r\n        this.m_hasVertex3 = false;\r\n    }\r\n    /// Set this as an isolated edge.\r\n    Set(v1, v2) {\r\n        this.m_vertex1.Copy(v1);\r\n        this.m_vertex2.Copy(v2);\r\n        this.m_hasVertex0 = false;\r\n        this.m_hasVertex3 = false;\r\n        return this;\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2EdgeShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        // DEBUG: b2Assert(other instanceof b2EdgeShape);\r\n        this.m_vertex1.Copy(other.m_vertex1);\r\n        this.m_vertex2.Copy(other.m_vertex2);\r\n        this.m_vertex0.Copy(other.m_vertex0);\r\n        this.m_vertex3.Copy(other.m_vertex3);\r\n        this.m_hasVertex0 = other.m_hasVertex0;\r\n        this.m_hasVertex3 = other.m_hasVertex3;\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    /// @see b2Shape::TestPoint\r\n    TestPoint(xf, p) {\r\n        return false;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeDistance_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeDistance_s_v2);\r\n        const d = b2Vec2.SubVV(p, v1, b2EdgeShape.ComputeDistance_s_d);\r\n        const s = b2Vec2.SubVV(v2, v1, b2EdgeShape.ComputeDistance_s_s);\r\n        const ds = b2Vec2.DotVV(d, s);\r\n        if (ds > 0) {\r\n            const s2 = b2Vec2.DotVV(s, s);\r\n            if (ds > s2) {\r\n                b2Vec2.SubVV(p, v2, d);\r\n            }\r\n            else {\r\n                d.SelfMulSub(ds / s2, s);\r\n            }\r\n        }\r\n        normal.Copy(d);\r\n        return normal.Normalize();\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        // Put the ray into the edge's frame of reference.\r\n        const p1 = b2Transform.MulTXV(xf, input.p1, b2EdgeShape.RayCast_s_p1);\r\n        const p2 = b2Transform.MulTXV(xf, input.p2, b2EdgeShape.RayCast_s_p2);\r\n        const d = b2Vec2.SubVV(p2, p1, b2EdgeShape.RayCast_s_d);\r\n        const v1 = this.m_vertex1;\r\n        const v2 = this.m_vertex2;\r\n        const e = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_e);\r\n        const normal = output.normal.Set(e.y, -e.x).SelfNormalize();\r\n        // q = p1 + t * d\r\n        // dot(normal, q - v1) = 0\r\n        // dot(normal, p1 - v1) + t * dot(normal, d) = 0\r\n        const numerator = b2Vec2.DotVV(normal, b2Vec2.SubVV(v1, p1, b2Vec2.s_t0));\r\n        const denominator = b2Vec2.DotVV(normal, d);\r\n        if (denominator === 0) {\r\n            return false;\r\n        }\r\n        const t = numerator / denominator;\r\n        if (t < 0 || input.maxFraction < t) {\r\n            return false;\r\n        }\r\n        const q = b2Vec2.AddVMulSV(p1, t, d, b2EdgeShape.RayCast_s_q);\r\n        // q = v1 + s * r\r\n        // s = dot(q - v1, r) / dot(r, r)\r\n        const r = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_r);\r\n        const rr = b2Vec2.DotVV(r, r);\r\n        if (rr === 0) {\r\n            return false;\r\n        }\r\n        const s = b2Vec2.DotVV(b2Vec2.SubVV(q, v1, b2Vec2.s_t0), r) / rr;\r\n        if (s < 0 || 1 < s) {\r\n            return false;\r\n        }\r\n        output.fraction = t;\r\n        b2Rot.MulRV(xf.q, output.normal, output.normal);\r\n        if (numerator > 0) {\r\n            output.normal.SelfNeg();\r\n        }\r\n        return true;\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeAABB_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeAABB_s_v2);\r\n        b2Vec2.MinV(v1, v2, aabb.lowerBound);\r\n        b2Vec2.MaxV(v1, v2, aabb.upperBound);\r\n        const r = this.m_radius;\r\n        aabb.lowerBound.SelfSubXY(r, r);\r\n        aabb.upperBound.SelfAddXY(r, r);\r\n    }\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        massData.mass = 0;\r\n        b2Vec2.MidVV(this.m_vertex1, this.m_vertex2, massData.center);\r\n        massData.I = 0;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_vertex1);\r\n        proxy.m_vertices[1].Copy(this.m_vertex2);\r\n        proxy.m_count = 2;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        c.SetZero();\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2EdgeShape = new b2EdgeShape();\\n\");\r\n        log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\r\n        log(\"    shape.m_vertex0.Set(%.15f, %.15f);\\n\", this.m_vertex0.x, this.m_vertex0.y);\r\n        log(\"    shape.m_vertex1.Set(%.15f, %.15f);\\n\", this.m_vertex1.x, this.m_vertex1.y);\r\n        log(\"    shape.m_vertex2.Set(%.15f, %.15f);\\n\", this.m_vertex2.x, this.m_vertex2.y);\r\n        log(\"    shape.m_vertex3.Set(%.15f, %.15f);\\n\", this.m_vertex3.x, this.m_vertex3.y);\r\n        log(\"    shape.m_hasVertex0 = %s;\\n\", this.m_hasVertex0);\r\n        log(\"    shape.m_hasVertex3 = %s;\\n\", this.m_hasVertex3);\r\n    }\r\n}\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2EdgeShape.ComputeDistance_s_v1 = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_v2 = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_d = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_s = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\n// p = p1 + t * d\r\n// v = v1 + s * e\r\n// p1 + t * d = v1 + s * e\r\n// s * e - t * d = p1 - v1\r\nb2EdgeShape.RayCast_s_p1 = new b2Vec2();\r\nb2EdgeShape.RayCast_s_p2 = new b2Vec2();\r\nb2EdgeShape.RayCast_s_d = new b2Vec2();\r\nb2EdgeShape.RayCast_s_e = new b2Vec2();\r\nb2EdgeShape.RayCast_s_q = new b2Vec2();\r\nb2EdgeShape.RayCast_s_r = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2EdgeShape.ComputeAABB_s_v1 = new b2Vec2();\r\nb2EdgeShape.ComputeAABB_s_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert, b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2_polygonRadius } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\nimport { b2EdgeShape } from \"./b2EdgeShape\";\r\n/// A chain shape is a free form sequence of line segments.\r\n/// The chain has two-sided collision, so you can use inside and outside collision.\r\n/// Therefore, you may use any winding order.\r\n/// Since there may be many vertices, they are allocated using b2Alloc.\r\n/// Connectivity information is used to create smooth collisions.\r\n/// WARNING: The chain will not collide properly if there are self-intersections.\r\nexport class b2ChainShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_chainShape, b2_polygonRadius);\r\n        this.m_vertices = [];\r\n        this.m_count = 0;\r\n        this.m_prevVertex = new b2Vec2();\r\n        this.m_nextVertex = new b2Vec2();\r\n        this.m_hasPrevVertex = false;\r\n        this.m_hasNextVertex = false;\r\n    }\r\n    /// Create a loop. This automatically adjusts connectivity.\r\n    /// @param vertices an array of vertices, these are copied\r\n    /// @param count the vertex count\r\n    CreateLoop(vertices, count = vertices.length, start = 0) {\r\n        // DEBUG: b2Assert(count >= 3);\r\n        if (count < 3) {\r\n            return this;\r\n        }\r\n        // DEBUG: for (let i: number = 1; i < count; ++i) {\r\n        // DEBUG:   const v1 = vertices[start + i - 1];\r\n        // DEBUG:   const v2 = vertices[start + i];\r\n        // DEBUG:   // If the code crashes here, it means your vertices are too close together.\r\n        // DEBUG:   b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\r\n        // DEBUG: }\r\n        this.m_count = count + 1;\r\n        this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n        for (let i = 0; i < count; ++i) {\r\n            this.m_vertices[i].Copy(vertices[start + i]);\r\n        }\r\n        this.m_vertices[count].Copy(this.m_vertices[0]);\r\n        this.m_prevVertex.Copy(this.m_vertices[this.m_count - 2]);\r\n        this.m_nextVertex.Copy(this.m_vertices[1]);\r\n        this.m_hasPrevVertex = true;\r\n        this.m_hasNextVertex = true;\r\n        return this;\r\n    }\r\n    /// Create a chain with isolated end vertices.\r\n    /// @param vertices an array of vertices, these are copied\r\n    /// @param count the vertex count\r\n    CreateChain(vertices, count = vertices.length, start = 0) {\r\n        // DEBUG: b2Assert(count >= 2);\r\n        // DEBUG: for (let i: number = 1; i < count; ++i) {\r\n        // DEBUG:   const v1 = vertices[start + i - 1];\r\n        // DEBUG:   const v2 = vertices[start + i];\r\n        // DEBUG:   // If the code crashes here, it means your vertices are too close together.\r\n        // DEBUG:   b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\r\n        // DEBUG: }\r\n        this.m_count = count;\r\n        this.m_vertices = b2Vec2.MakeArray(count);\r\n        for (let i = 0; i < count; ++i) {\r\n            this.m_vertices[i].Copy(vertices[start + i]);\r\n        }\r\n        this.m_hasPrevVertex = false;\r\n        this.m_hasNextVertex = false;\r\n        this.m_prevVertex.SetZero();\r\n        this.m_nextVertex.SetZero();\r\n        return this;\r\n    }\r\n    /// Establish connectivity to a vertex that precedes the first vertex.\r\n    /// Don't call this for loops.\r\n    SetPrevVertex(prevVertex) {\r\n        this.m_prevVertex.Copy(prevVertex);\r\n        this.m_hasPrevVertex = true;\r\n        return this;\r\n    }\r\n    /// Establish connectivity to a vertex that follows the last vertex.\r\n    /// Don't call this for loops.\r\n    SetNextVertex(nextVertex) {\r\n        this.m_nextVertex.Copy(nextVertex);\r\n        this.m_hasNextVertex = true;\r\n        return this;\r\n    }\r\n    /// Implement b2Shape. Vertices are cloned using b2Alloc.\r\n    Clone() {\r\n        return new b2ChainShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        // DEBUG: b2Assert(other instanceof b2ChainShape);\r\n        this.CreateChain(other.m_vertices, other.m_count);\r\n        this.m_prevVertex.Copy(other.m_prevVertex);\r\n        this.m_nextVertex.Copy(other.m_nextVertex);\r\n        this.m_hasPrevVertex = other.m_hasPrevVertex;\r\n        this.m_hasNextVertex = other.m_hasNextVertex;\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        // edge count = vertex count - 1\r\n        return this.m_count - 1;\r\n    }\r\n    /// Get a child edge.\r\n    GetChildEdge(edge, index) {\r\n        // DEBUG: b2Assert(0 <= index && index < this.m_count - 1);\r\n        edge.m_type = b2ShapeType.e_edgeShape;\r\n        edge.m_radius = this.m_radius;\r\n        edge.m_vertex1.Copy(this.m_vertices[index]);\r\n        edge.m_vertex2.Copy(this.m_vertices[index + 1]);\r\n        if (index > 0) {\r\n            edge.m_vertex0.Copy(this.m_vertices[index - 1]);\r\n            edge.m_hasVertex0 = true;\r\n        }\r\n        else {\r\n            edge.m_vertex0.Copy(this.m_prevVertex);\r\n            edge.m_hasVertex0 = this.m_hasPrevVertex;\r\n        }\r\n        if (index < this.m_count - 2) {\r\n            edge.m_vertex3.Copy(this.m_vertices[index + 2]);\r\n            edge.m_hasVertex3 = true;\r\n        }\r\n        else {\r\n            edge.m_vertex3.Copy(this.m_nextVertex);\r\n            edge.m_hasVertex3 = this.m_hasNextVertex;\r\n        }\r\n    }\r\n    /// This always return false.\r\n    /// @see b2Shape::TestPoint\r\n    TestPoint(xf, p) {\r\n        return false;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const edge = b2ChainShape.ComputeDistance_s_edgeShape;\r\n        this.GetChildEdge(edge, childIndex);\r\n        return edge.ComputeDistance(xf, p, normal, 0);\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        // DEBUG: b2Assert(childIndex < this.m_count);\r\n        const edgeShape = b2ChainShape.RayCast_s_edgeShape;\r\n        edgeShape.m_vertex1.Copy(this.m_vertices[childIndex]);\r\n        edgeShape.m_vertex2.Copy(this.m_vertices[(childIndex + 1) % this.m_count]);\r\n        return edgeShape.RayCast(output, input, xf, 0);\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        // DEBUG: b2Assert(childIndex < this.m_count);\r\n        const vertexi1 = this.m_vertices[childIndex];\r\n        const vertexi2 = this.m_vertices[(childIndex + 1) % this.m_count];\r\n        const v1 = b2Transform.MulXV(xf, vertexi1, b2ChainShape.ComputeAABB_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, vertexi2, b2ChainShape.ComputeAABB_s_v2);\r\n        b2Vec2.MinV(v1, v2, aabb.lowerBound);\r\n        b2Vec2.MaxV(v1, v2, aabb.upperBound);\r\n    }\r\n    /// Chains have zero mass.\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        massData.mass = 0;\r\n        massData.center.SetZero();\r\n        massData.I = 0;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        // DEBUG: b2Assert(0 <= index && index < this.m_count);\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_vertices[index]);\r\n        if (index + 1 < this.m_count) {\r\n            proxy.m_vertices[1].Copy(this.m_vertices[index + 1]);\r\n        }\r\n        else {\r\n            proxy.m_vertices[1].Copy(this.m_vertices[0]);\r\n        }\r\n        proxy.m_count = 2;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        c.SetZero();\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2ChainShape = new b2ChainShape();\\n\");\r\n        log(\"    const vs: b2Vec2[] = [];\\n\");\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            log(\"    vs[%d] = new bVec2(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\r\n        }\r\n        log(\"    shape.CreateChain(vs, %d);\\n\", this.m_count);\r\n        log(\"    shape.m_prevVertex.Set(%.15f, %.15f);\\n\", this.m_prevVertex.x, this.m_prevVertex.y);\r\n        log(\"    shape.m_nextVertex.Set(%.15f, %.15f);\\n\", this.m_nextVertex.x, this.m_nextVertex.y);\r\n        log(\"    shape.m_hasPrevVertex = %s;\\n\", (this.m_hasPrevVertex) ? (\"true\") : (\"false\"));\r\n        log(\"    shape.m_hasNextVertex = %s;\\n\", (this.m_hasNextVertex) ? (\"true\") : (\"false\"));\r\n    }\r\n}\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2ChainShape.ComputeDistance_s_edgeShape = new b2EdgeShape();\r\n// #endif\r\n/// Implement b2Shape.\r\nb2ChainShape.RayCast_s_edgeShape = new b2EdgeShape();\r\n/// @see b2Shape::ComputeAABB\r\nb2ChainShape.ComputeAABB_s_v1 = new b2Vec2();\r\nb2ChainShape.ComputeAABB_s_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2MakeArray, b2Maybe } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2AABB } from \"../Collision/b2Collision\";\r\nimport { b2MassData } from \"../Collision/Shapes/b2Shape\";\r\n/// This holds contact filtering data.\r\nexport class b2Filter {\r\n    constructor() {\r\n        /// The collision category bits. Normally you would just set one bit.\r\n        this.categoryBits = 0x0001;\r\n        /// The collision mask bits. This states the categories that this\r\n        /// shape would accept for collision.\r\n        this.maskBits = 0xFFFF;\r\n        /// Collision groups allow a certain group of objects to never collide (negative)\r\n        /// or always collide (positive). Zero means no collision group. Non-zero group\r\n        /// filtering always wins against the mask bits.\r\n        this.groupIndex = 0;\r\n    }\r\n    Clone() {\r\n        return new b2Filter().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        // DEBUG: b2Assert(this !== other);\r\n        this.categoryBits = other.categoryBits;\r\n        this.maskBits = other.maskBits;\r\n        this.groupIndex = other.groupIndex || 0;\r\n        return this;\r\n    }\r\n}\r\nb2Filter.DEFAULT = new b2Filter();\r\n/// A fixture definition is used to create a fixture. This class defines an\r\n/// abstract fixture definition. You can reuse fixture definitions safely.\r\nexport class b2FixtureDef {\r\n    constructor() {\r\n        /// Use this to store application specific fixture data.\r\n        this.userData = null;\r\n        /// The friction coefficient, usually in the range [0,1].\r\n        this.friction = 0.2;\r\n        /// The restitution (elasticity) usually in the range [0,1].\r\n        this.restitution = 0;\r\n        /// The density, usually in kg/m^2.\r\n        this.density = 0;\r\n        /// A sensor shape collects contact information but never generates a collision\r\n        /// response.\r\n        this.isSensor = false;\r\n        /// Contact filtering data.\r\n        this.filter = new b2Filter();\r\n    }\r\n}\r\n/// This proxy is used internally to connect fixtures to the broad-phase.\r\nexport class b2FixtureProxy {\r\n    constructor(fixture) {\r\n        this.aabb = new b2AABB();\r\n        this.childIndex = 0;\r\n        this.fixture = fixture;\r\n    }\r\n}\r\n/// A fixture is used to attach a shape to a body for collision detection. A fixture\r\n/// inherits its transform from its parent. Fixtures hold additional non-geometric data\r\n/// such as friction, collision filters, etc.\r\n/// Fixtures are created via b2Body::CreateFixture.\r\n/// @warning you cannot reuse fixtures.\r\nexport class b2Fixture {\r\n    constructor(def, body) {\r\n        this.m_density = 0;\r\n        this.m_next = null;\r\n        this.m_friction = 0;\r\n        this.m_restitution = 0;\r\n        this.m_proxies = [];\r\n        this.m_proxyCount = 0;\r\n        this.m_filter = new b2Filter();\r\n        this.m_isSensor = false;\r\n        this.m_userData = null;\r\n        this.m_body = body;\r\n        this.m_shape = def.shape.Clone();\r\n    }\r\n    /// Get the type of the child shape. You can use this to down cast to the concrete shape.\r\n    /// @return the shape type.\r\n    GetType() {\r\n        return this.m_shape.GetType();\r\n    }\r\n    /// Get the child shape. You can modify the child shape, however you should not change the\r\n    /// number of vertices because this will crash some collision caching mechanisms.\r\n    /// Manipulating the shape may lead to non-physical behavior.\r\n    GetShape() {\r\n        return this.m_shape;\r\n    }\r\n    /// Set if this fixture is a sensor.\r\n    SetSensor(sensor) {\r\n        if (sensor !== this.m_isSensor) {\r\n            this.m_body.SetAwake(true);\r\n            this.m_isSensor = sensor;\r\n        }\r\n    }\r\n    /// Is this fixture a sensor (non-solid)?\r\n    /// @return the true if the shape is a sensor.\r\n    IsSensor() {\r\n        return this.m_isSensor;\r\n    }\r\n    /// Set the contact filtering data. This will not update contacts until the next time\r\n    /// step when either parent body is active and awake.\r\n    /// This automatically calls Refilter.\r\n    SetFilterData(filter) {\r\n        this.m_filter.Copy(filter);\r\n        this.Refilter();\r\n    }\r\n    /// Get the contact filtering data.\r\n    GetFilterData() {\r\n        return this.m_filter;\r\n    }\r\n    /// Call this if you want to establish collision that was previously disabled by b2ContactFilter::ShouldCollide.\r\n    Refilter() {\r\n        // Flag associated contacts for filtering.\r\n        let edge = this.m_body.GetContactList();\r\n        while (edge) {\r\n            const contact = edge.contact;\r\n            const fixtureA = contact.GetFixtureA();\r\n            const fixtureB = contact.GetFixtureB();\r\n            if (fixtureA === this || fixtureB === this) {\r\n                contact.FlagForFiltering();\r\n            }\r\n            edge = edge.next;\r\n        }\r\n        const world = this.m_body.GetWorld();\r\n        if (world === null) {\r\n            return;\r\n        }\r\n        // Touch each proxy so that new pairs may be created\r\n        const broadPhase = world.m_contactManager.m_broadPhase;\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            broadPhase.TouchProxy(this.m_proxies[i].treeNode);\r\n        }\r\n    }\r\n    /// Get the parent body of this fixture. This is NULL if the fixture is not attached.\r\n    /// @return the parent body.\r\n    GetBody() {\r\n        return this.m_body;\r\n    }\r\n    /// Get the next fixture in the parent body's fixture list.\r\n    /// @return the next shape.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data that was assigned in the fixture definition. Use this to\r\n    /// store your application specific data.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data. Use this to store your application specific data.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Test a point for containment in this fixture.\r\n    /// @param p a point in world coordinates.\r\n    TestPoint(p) {\r\n        return this.m_shape.TestPoint(this.m_body.GetTransform(), p);\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ComputeDistance(p, normal, childIndex) {\r\n        return this.m_shape.ComputeDistance(this.m_body.GetTransform(), p, normal, childIndex);\r\n    }\r\n    // #endif\r\n    /// Cast a ray against this shape.\r\n    /// @param output the ray-cast results.\r\n    /// @param input the ray-cast input parameters.\r\n    RayCast(output, input, childIndex) {\r\n        return this.m_shape.RayCast(output, input, this.m_body.GetTransform(), childIndex);\r\n    }\r\n    /// Get the mass data for this fixture. The mass data is based on the density and\r\n    /// the shape. The rotational inertia is about the shape's origin. This operation\r\n    /// may be expensive.\r\n    GetMassData(massData = new b2MassData()) {\r\n        this.m_shape.ComputeMass(massData, this.m_density);\r\n        return massData;\r\n    }\r\n    /// Set the density of this fixture. This will _not_ automatically adjust the mass\r\n    /// of the body. You must call b2Body::ResetMassData to update the body's mass.\r\n    SetDensity(density) {\r\n        this.m_density = density;\r\n    }\r\n    /// Get the density of this fixture.\r\n    GetDensity() {\r\n        return this.m_density;\r\n    }\r\n    /// Get the coefficient of friction.\r\n    GetFriction() {\r\n        return this.m_friction;\r\n    }\r\n    /// Set the coefficient of friction. This will _not_ change the friction of\r\n    /// existing contacts.\r\n    SetFriction(friction) {\r\n        this.m_friction = friction;\r\n    }\r\n    /// Get the coefficient of restitution.\r\n    GetRestitution() {\r\n        return this.m_restitution;\r\n    }\r\n    /// Set the coefficient of restitution. This will _not_ change the restitution of\r\n    /// existing contacts.\r\n    SetRestitution(restitution) {\r\n        this.m_restitution = restitution;\r\n    }\r\n    /// Get the fixture's AABB. This AABB may be enlarge and/or stale.\r\n    /// If you need a more accurate AABB, compute it using the shape and\r\n    /// the body transform.\r\n    GetAABB(childIndex) {\r\n        // DEBUG: b2Assert(0 <= childIndex && childIndex < this.m_proxyCount);\r\n        return this.m_proxies[childIndex].aabb;\r\n    }\r\n    /// Dump this fixture to the log file.\r\n    Dump(log, bodyIndex) {\r\n        log(\"    const fd: b2FixtureDef = new b2FixtureDef();\\n\");\r\n        log(\"    fd.friction = %.15f;\\n\", this.m_friction);\r\n        log(\"    fd.restitution = %.15f;\\n\", this.m_restitution);\r\n        log(\"    fd.density = %.15f;\\n\", this.m_density);\r\n        log(\"    fd.isSensor = %s;\\n\", (this.m_isSensor) ? (\"true\") : (\"false\"));\r\n        log(\"    fd.filter.categoryBits = %d;\\n\", this.m_filter.categoryBits);\r\n        log(\"    fd.filter.maskBits = %d;\\n\", this.m_filter.maskBits);\r\n        log(\"    fd.filter.groupIndex = %d;\\n\", this.m_filter.groupIndex);\r\n        this.m_shape.Dump(log);\r\n        log(\"\\n\");\r\n        log(\"    fd.shape = shape;\\n\");\r\n        log(\"\\n\");\r\n        log(\"    bodies[%d].CreateFixture(fd);\\n\", bodyIndex);\r\n    }\r\n    // We need separation create/destroy functions from the constructor/destructor because\r\n    // the destructor cannot access the allocator (no destructor arguments allowed by C++).\r\n    Create(def) {\r\n        this.m_userData = def.userData;\r\n        this.m_friction = b2Maybe(def.friction, 0.2);\r\n        this.m_restitution = b2Maybe(def.restitution, 0);\r\n        // this.m_body = body;\r\n        this.m_next = null;\r\n        this.m_filter.Copy(b2Maybe(def.filter, b2Filter.DEFAULT));\r\n        this.m_isSensor = b2Maybe(def.isSensor, false);\r\n        // Reserve proxy space\r\n        // const childCount = m_shape->GetChildCount();\r\n        // m_proxies = (b2FixtureProxy*)allocator->Allocate(childCount * sizeof(b2FixtureProxy));\r\n        // for (int32 i = 0; i < childCount; ++i)\r\n        // {\r\n        //   m_proxies[i].fixture = NULL;\r\n        //   m_proxies[i].proxyId = b2BroadPhase::e_nullProxy;\r\n        // }\r\n        // this.m_proxies = b2FixtureProxy.MakeArray(this.m_shape.GetChildCount());\r\n        this.m_proxies = b2MakeArray(this.m_shape.GetChildCount(), (i) => new b2FixtureProxy(this));\r\n        this.m_proxyCount = 0;\r\n        this.m_density = b2Maybe(def.density, 0);\r\n    }\r\n    Destroy() {\r\n        // The proxies must be destroyed before calling this.\r\n        // DEBUG: b2Assert(this.m_proxyCount === 0);\r\n        // Free the proxy array.\r\n        // int32 childCount = m_shape->GetChildCount();\r\n        // allocator->Free(m_proxies, childCount * sizeof(b2FixtureProxy));\r\n        // m_proxies = NULL;\r\n        // this.m_shape = null;\r\n    }\r\n    // These support body activation/deactivation.\r\n    CreateProxies(xf) {\r\n        const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n        // DEBUG: b2Assert(this.m_proxyCount === 0);\r\n        // Create proxies in the broad-phase.\r\n        this.m_proxyCount = this.m_shape.GetChildCount();\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i] = new b2FixtureProxy(this);\r\n            this.m_shape.ComputeAABB(proxy.aabb, xf, i);\r\n            proxy.treeNode = broadPhase.CreateProxy(proxy.aabb, proxy);\r\n            proxy.childIndex = i;\r\n        }\r\n    }\r\n    DestroyProxies() {\r\n        const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n        // Destroy proxies in the broad-phase.\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i];\r\n            delete proxy.treeNode.userData;\r\n            broadPhase.DestroyProxy(proxy.treeNode);\r\n            delete proxy.treeNode;\r\n        }\r\n        this.m_proxyCount = 0;\r\n    }\r\n    TouchProxies() {\r\n        const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n        const proxyCount = this.m_proxyCount;\r\n        for (let i = 0; i < proxyCount; ++i) {\r\n            broadPhase.TouchProxy(this.m_proxies[i].treeNode);\r\n        }\r\n    }\r\n    Synchronize(transform1, transform2) {\r\n        if (this.m_proxyCount === 0) {\r\n            return;\r\n        }\r\n        const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i];\r\n            // Compute an AABB that covers the swept shape (may miss some rotation effect).\r\n            const aabb1 = b2Fixture.Synchronize_s_aabb1;\r\n            const aabb2 = b2Fixture.Synchronize_s_aabb2;\r\n            this.m_shape.ComputeAABB(aabb1, transform1, i);\r\n            this.m_shape.ComputeAABB(aabb2, transform2, i);\r\n            proxy.aabb.Combine2(aabb1, aabb2);\r\n            const displacement = b2Vec2.SubVV(transform2.p, transform1.p, b2Fixture.Synchronize_s_displacement);\r\n            broadPhase.MoveProxy(proxy.treeNode, proxy.aabb, displacement);\r\n        }\r\n    }\r\n}\r\nb2Fixture.Synchronize_s_aabb1 = new b2AABB();\r\nb2Fixture.Synchronize_s_aabb2 = new b2AABB();\r\nb2Fixture.Synchronize_s_displacement = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_linearSlop, b2_maxLinearCorrection, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Distance joint definition. This requires defining an\r\n/// anchor point on both bodies and the non-zero length of the\r\n/// distance joint. The definition uses local anchor points\r\n/// so that the initial configuration can violate the constraint\r\n/// slightly. This helps when saving and loading a game.\r\n/// @warning Do not use a zero or short length.\r\nexport class b2DistanceJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_distanceJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.length = 1;\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    Initialize(b1, b2, anchor1, anchor2) {\r\n        this.bodyA = b1;\r\n        this.bodyB = b2;\r\n        this.bodyA.GetLocalPoint(anchor1, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor2, this.localAnchorB);\r\n        this.length = b2Vec2.DistanceVV(anchor1, anchor2);\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n}\r\nexport class b2DistanceJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_bias = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_gamma = 0;\r\n        this.m_impulse = 0;\r\n        this.m_length = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_u = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n        this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_length = def.length;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        out.x = inv_dt * this.m_impulse * this.m_u.x;\r\n        out.y = inv_dt * this.m_impulse * this.m_u.y;\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetLength(length) {\r\n        this.m_length = length;\r\n    }\r\n    Length() {\r\n        return this.m_length;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2DistanceJointDef = new b2DistanceJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.length = %.15f;\\n\", this.m_length);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // m_u = cB + m_rB - cA - m_rA;\r\n        this.m_u.x = cB.x + this.m_rB.x - cA.x - this.m_rA.x;\r\n        this.m_u.y = cB.y + this.m_rB.y - cA.y - this.m_rA.y;\r\n        // Handle singularity.\r\n        const length = this.m_u.Length();\r\n        if (length > b2_linearSlop) {\r\n            this.m_u.SelfMul(1 / length);\r\n        }\r\n        else {\r\n            this.m_u.SetZero();\r\n        }\r\n        // float32 crAu = b2Cross(m_rA, m_u);\r\n        const crAu = b2Vec2.CrossVV(this.m_rA, this.m_u);\r\n        // float32 crBu = b2Cross(m_rB, m_u);\r\n        const crBu = b2Vec2.CrossVV(this.m_rB, this.m_u);\r\n        // float32 invMass = m_invMassA + m_invIA * crAu * crAu + m_invMassB + m_invIB * crBu * crBu;\r\n        let invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB + this.m_invIB * crBu * crBu;\r\n        // Compute the effective mass matrix.\r\n        this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        if (this.m_frequencyHz > 0) {\r\n            const C = length - this.m_length;\r\n            // Frequency\r\n            const omega = 2 * b2_pi * this.m_frequencyHz;\r\n            // Damping coefficient\r\n            const d = 2 * this.m_mass * this.m_dampingRatio * omega;\r\n            // Spring stiffness\r\n            const k = this.m_mass * omega * omega;\r\n            // magic formulas\r\n            const h = data.step.dt;\r\n            this.m_gamma = h * (d + h * k);\r\n            this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\r\n            this.m_bias = C * h * k * this.m_gamma;\r\n            invMass += this.m_gamma;\r\n            this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        }\r\n        else {\r\n            this.m_gamma = 0;\r\n            this.m_bias = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale the impulse to support a variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_u;\r\n            const P = b2Vec2.MulSV(this.m_impulse, this.m_u, b2DistanceJoint.InitVelocityConstraints_s_P);\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            // wA -= m_invIA * b2Cross(m_rA, P);\r\n            wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            // wB += m_invIB * b2Cross(m_rB, P);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2DistanceJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2DistanceJoint.SolveVelocityConstraints_s_vpB);\r\n        // float32 Cdot = b2Dot(m_u, vpB - vpA);\r\n        const Cdot = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\r\n        const impulse = (-this.m_mass * (Cdot + this.m_bias + this.m_gamma * this.m_impulse));\r\n        this.m_impulse += impulse;\r\n        // b2Vec2 P = impulse * m_u;\r\n        const P = b2Vec2.MulSV(impulse, this.m_u, b2DistanceJoint.SolveVelocityConstraints_s_P);\r\n        // vA -= m_invMassA * P;\r\n        vA.SelfMulSub(this.m_invMassA, P);\r\n        // wA -= m_invIA * b2Cross(m_rA, P);\r\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n        // vB += m_invMassB * P;\r\n        vB.SelfMulAdd(this.m_invMassB, P);\r\n        // wB += m_invIB * b2Cross(m_rB, P);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        if (this.m_frequencyHz > 0) {\r\n            // There is no position correction for soft distance constraints.\r\n            return true;\r\n        }\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA); // use m_rA\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB); // use m_rB\r\n        // b2Vec2 u = cB + rB - cA - rA;\r\n        const u = this.m_u; // use m_u\r\n        u.x = cB.x + rB.x - cA.x - rA.x;\r\n        u.y = cB.y + rB.y - cA.y - rA.y;\r\n        // float32 length = u.Normalize();\r\n        const length = this.m_u.Normalize();\r\n        // float32 C = length - m_length;\r\n        let C = length - this.m_length;\r\n        C = b2Clamp(C, (-b2_maxLinearCorrection), b2_maxLinearCorrection);\r\n        const impulse = (-this.m_mass * C);\r\n        // b2Vec2 P = impulse * u;\r\n        const P = b2Vec2.MulSV(impulse, u, b2DistanceJoint.SolvePositionConstraints_s_P);\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        // aA -= m_invIA * b2Cross(rA, P);\r\n        aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        // aB += m_invIB * b2Cross(rB, P);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return b2Abs(C) < b2_linearSlop;\r\n    }\r\n}\r\nb2DistanceJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2DistanceJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2_epsilon, b2_linearSlop, b2_maxLinearCorrection, b2MakeNumberArray, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Sq, b2Sqrt, b2Vec2 } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\nimport { b2DistanceJointDef } from \"./b2DistanceJoint\";\r\nexport class b2AreaJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_areaJoint);\r\n        this.bodies = [];\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    AddBody(body) {\r\n        this.bodies.push(body);\r\n        if (this.bodies.length === 1) {\r\n            this.bodyA = body;\r\n        }\r\n        else if (this.bodies.length === 2) {\r\n            this.bodyB = body;\r\n        }\r\n    }\r\n}\r\nexport class b2AreaJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        // Solver shared\r\n        this.m_impulse = 0;\r\n        this.m_targetArea = 0;\r\n        // DEBUG: b2Assert(def.bodies.length >= 3, \"You cannot create an area joint with less than three bodies.\");\r\n        this.m_bodies = def.bodies;\r\n        this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n        this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n        this.m_targetLengths = b2MakeNumberArray(def.bodies.length);\r\n        this.m_normals = b2Vec2.MakeArray(def.bodies.length);\r\n        this.m_joints = []; // b2MakeNullArray(def.bodies.length);\r\n        this.m_deltas = b2Vec2.MakeArray(def.bodies.length);\r\n        this.m_delta = new b2Vec2();\r\n        const djd = new b2DistanceJointDef();\r\n        djd.frequencyHz = this.m_frequencyHz;\r\n        djd.dampingRatio = this.m_dampingRatio;\r\n        this.m_targetArea = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const body_c = body.GetWorldCenter();\r\n            const next_c = next.GetWorldCenter();\r\n            this.m_targetLengths[i] = b2Vec2.DistanceVV(body_c, next_c);\r\n            this.m_targetArea += b2Vec2.CrossVV(body_c, next_c);\r\n            djd.Initialize(body, next, body_c, next_c);\r\n            this.m_joints[i] = body.GetWorld().CreateJoint(djd);\r\n        }\r\n        this.m_targetArea *= 0.5;\r\n    }\r\n    GetAnchorA(out) {\r\n        return out;\r\n    }\r\n    GetAnchorB(out) {\r\n        return out;\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n        for (let i = 0; i < this.m_joints.length; ++i) {\r\n            this.m_joints[i].SetFrequency(hz);\r\n        }\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n        for (let i = 0; i < this.m_joints.length; ++i) {\r\n            this.m_joints[i].SetDampingRatio(ratio);\r\n        }\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    Dump(log) {\r\n        log(\"Area joint dumping is not supported.\\n\");\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const prev = this.m_bodies[(i + this.m_bodies.length - 1) % this.m_bodies.length];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const prev_c = data.positions[prev.m_islandIndex].c;\r\n            const next_c = data.positions[next.m_islandIndex].c;\r\n            const delta = this.m_deltas[i];\r\n            b2Vec2.SubVV(next_c, prev_c, delta);\r\n        }\r\n        if (data.step.warmStarting) {\r\n            this.m_impulse *= data.step.dtRatio;\r\n            for (let i = 0; i < this.m_bodies.length; ++i) {\r\n                const body = this.m_bodies[i];\r\n                const body_v = data.velocities[body.m_islandIndex].v;\r\n                const delta = this.m_deltas[i];\r\n                body_v.x += body.m_invMass * delta.y * 0.5 * this.m_impulse;\r\n                body_v.y += body.m_invMass * -delta.x * 0.5 * this.m_impulse;\r\n            }\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        let dotMassSum = 0;\r\n        let crossMassSum = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_v = data.velocities[body.m_islandIndex].v;\r\n            const delta = this.m_deltas[i];\r\n            dotMassSum += delta.LengthSquared() / body.GetMass();\r\n            crossMassSum += b2Vec2.CrossVV(body_v, delta);\r\n        }\r\n        const lambda = -2 * crossMassSum / dotMassSum;\r\n        // lambda = b2Clamp(lambda, -b2_maxLinearCorrection, b2_maxLinearCorrection);\r\n        this.m_impulse += lambda;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_v = data.velocities[body.m_islandIndex].v;\r\n            const delta = this.m_deltas[i];\r\n            body_v.x += body.m_invMass * delta.y * 0.5 * lambda;\r\n            body_v.y += body.m_invMass * -delta.x * 0.5 * lambda;\r\n        }\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        let perimeter = 0;\r\n        let area = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const body_c = data.positions[body.m_islandIndex].c;\r\n            const next_c = data.positions[next.m_islandIndex].c;\r\n            const delta = b2Vec2.SubVV(next_c, body_c, this.m_delta);\r\n            let dist = delta.Length();\r\n            if (dist < b2_epsilon) {\r\n                dist = 1;\r\n            }\r\n            this.m_normals[i].x = delta.y / dist;\r\n            this.m_normals[i].y = -delta.x / dist;\r\n            perimeter += dist;\r\n            area += b2Vec2.CrossVV(body_c, next_c);\r\n        }\r\n        area *= 0.5;\r\n        const deltaArea = this.m_targetArea - area;\r\n        const toExtrude = 0.5 * deltaArea / perimeter;\r\n        let done = true;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_c = data.positions[body.m_islandIndex].c;\r\n            const next_i = (i + 1) % this.m_bodies.length;\r\n            const delta = b2Vec2.AddVV(this.m_normals[i], this.m_normals[next_i], this.m_delta);\r\n            delta.SelfMul(toExtrude);\r\n            const norm_sq = delta.LengthSquared();\r\n            if (norm_sq > b2Sq(b2_maxLinearCorrection)) {\r\n                delta.SelfMul(b2_maxLinearCorrection / b2Sqrt(norm_sq));\r\n            }\r\n            if (norm_sq > b2Sq(b2_linearSlop)) {\r\n                done = false;\r\n            }\r\n            body_c.x += delta.x;\r\n            body_c.y += delta.y;\r\n        }\r\n        return done;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Clamp, b2Vec2, b2Mat22, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Friction joint definition.\r\nexport class b2FrictionJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_frictionJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.maxForce = 0;\r\n        this.maxTorque = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n    }\r\n}\r\nexport class b2FrictionJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        // Solver shared\r\n        this.m_linearImpulse = new b2Vec2();\r\n        this.m_angularImpulse = 0;\r\n        this.m_maxForce = 0;\r\n        this.m_maxTorque = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_linearMass = new b2Mat22();\r\n        this.m_angularMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_linearImpulse.SetZero();\r\n        this.m_maxForce = b2Maybe(def.maxForce, 0);\r\n        this.m_maxTorque = b2Maybe(def.maxTorque, 0);\r\n        this.m_linearMass.SetZero();\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        // const cA: b2Vec2 = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        // const cB: b2Vec2 = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective mass matrix.\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const K = this.m_K; // new b2Mat22();\r\n        K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n        K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n        K.GetInverse(this.m_linearMass);\r\n        this.m_angularMass = iA + iB;\r\n        if (this.m_angularMass > 0) {\r\n            this.m_angularMass = 1 / this.m_angularMass;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            // m_linearImpulse *= data.step.dtRatio;\r\n            this.m_linearImpulse.SelfMul(data.step.dtRatio);\r\n            this.m_angularImpulse *= data.step.dtRatio;\r\n            // const P: b2Vec2(m_linearImpulse.x, m_linearImpulse.y);\r\n            const P = this.m_linearImpulse;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            // wA -= iA * (b2Cross(m_rA, P) + m_angularImpulse);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_angularImpulse);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            // wB += iB * (b2Cross(m_rB, P) + m_angularImpulse);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_angularImpulse);\r\n        }\r\n        else {\r\n            this.m_linearImpulse.SetZero();\r\n            this.m_angularImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const h = data.step.dt;\r\n        // Solve angular friction\r\n        {\r\n            const Cdot = wB - wA;\r\n            let impulse = (-this.m_angularMass * Cdot);\r\n            const oldImpulse = this.m_angularImpulse;\r\n            const maxImpulse = h * this.m_maxTorque;\r\n            this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, (-maxImpulse), maxImpulse);\r\n            impulse = this.m_angularImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve linear friction\r\n        {\r\n            // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot_v2 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = -b2Mul(m_linearMass, Cdot);\r\n            const impulseV = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2FrictionJoint.SolveVelocityConstraints_s_impulseV).SelfNeg();\r\n            // b2Vec2 oldImpulse = m_linearImpulse;\r\n            const oldImpulseV = b2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV.Copy(this.m_linearImpulse);\r\n            // m_linearImpulse += impulse;\r\n            this.m_linearImpulse.SelfAdd(impulseV);\r\n            const maxImpulse = h * this.m_maxForce;\r\n            if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n                this.m_linearImpulse.Normalize();\r\n                this.m_linearImpulse.SelfMul(maxImpulse);\r\n            }\r\n            // impulse = m_linearImpulse - oldImpulse;\r\n            b2Vec2.SubVV(this.m_linearImpulse, oldImpulseV, impulseV);\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulseV);\r\n            // wA -= iA * b2Cross(m_rA, impulse);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, impulseV);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulseV);\r\n            // wB += iB * b2Cross(m_rB, impulse);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, impulseV);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        out.x = inv_dt * this.m_linearImpulse.x;\r\n        out.y = inv_dt * this.m_linearImpulse.y;\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_angularImpulse;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetMaxForce(force) {\r\n        this.m_maxForce = force;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetMaxTorque(torque) {\r\n        this.m_maxTorque = torque;\r\n    }\r\n    GetMaxTorque() {\r\n        return this.m_maxTorque;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2FrictionJointDef = new b2FrictionJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\r\n        log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2FrictionJoint.SolveVelocityConstraints_s_impulseV = new b2Vec2();\r\nb2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\n// DEBUG: import { b2IsValid } from \"../../Common/b2Math\";\r\nimport { b2_linearSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Gear joint definition. This definition requires two existing\r\n/// revolute or prismatic joints (any combination will work).\r\nexport class b2GearJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_gearJoint);\r\n        this.ratio = 1;\r\n    }\r\n}\r\nexport class b2GearJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_typeA = b2JointType.e_unknownJoint;\r\n        this.m_typeB = b2JointType.e_unknownJoint;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localAnchorC = new b2Vec2();\r\n        this.m_localAnchorD = new b2Vec2();\r\n        this.m_localAxisC = new b2Vec2();\r\n        this.m_localAxisD = new b2Vec2();\r\n        this.m_referenceAngleA = 0;\r\n        this.m_referenceAngleB = 0;\r\n        this.m_constant = 0;\r\n        this.m_ratio = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_indexC = 0;\r\n        this.m_indexD = 0;\r\n        this.m_lcA = new b2Vec2();\r\n        this.m_lcB = new b2Vec2();\r\n        this.m_lcC = new b2Vec2();\r\n        this.m_lcD = new b2Vec2();\r\n        this.m_mA = 0;\r\n        this.m_mB = 0;\r\n        this.m_mC = 0;\r\n        this.m_mD = 0;\r\n        this.m_iA = 0;\r\n        this.m_iB = 0;\r\n        this.m_iC = 0;\r\n        this.m_iD = 0;\r\n        this.m_JvAC = new b2Vec2();\r\n        this.m_JvBD = new b2Vec2();\r\n        this.m_JwA = 0;\r\n        this.m_JwB = 0;\r\n        this.m_JwC = 0;\r\n        this.m_JwD = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_qC = new b2Rot();\r\n        this.m_qD = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_lalcC = new b2Vec2();\r\n        this.m_lalcD = new b2Vec2();\r\n        this.m_joint1 = def.joint1;\r\n        this.m_joint2 = def.joint2;\r\n        this.m_typeA = this.m_joint1.GetType();\r\n        this.m_typeB = this.m_joint2.GetType();\r\n        // DEBUG: b2Assert(this.m_typeA === b2JointType.e_revoluteJoint || this.m_typeA === b2JointType.e_prismaticJoint);\r\n        // DEBUG: b2Assert(this.m_typeB === b2JointType.e_revoluteJoint || this.m_typeB === b2JointType.e_prismaticJoint);\r\n        let coordinateA, coordinateB;\r\n        // TODO_ERIN there might be some problem with the joint edges in b2Joint.\r\n        this.m_bodyC = this.m_joint1.GetBodyA();\r\n        this.m_bodyA = this.m_joint1.GetBodyB();\r\n        // Get geometry of joint1\r\n        const xfA = this.m_bodyA.m_xf;\r\n        const aA = this.m_bodyA.m_sweep.a;\r\n        const xfC = this.m_bodyC.m_xf;\r\n        const aC = this.m_bodyC.m_sweep.a;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            const revolute = def.joint1;\r\n            this.m_localAnchorC.Copy(revolute.m_localAnchorA);\r\n            this.m_localAnchorA.Copy(revolute.m_localAnchorB);\r\n            this.m_referenceAngleA = revolute.m_referenceAngle;\r\n            this.m_localAxisC.SetZero();\r\n            coordinateA = aA - aC - this.m_referenceAngleA;\r\n        }\r\n        else {\r\n            const prismatic = def.joint1;\r\n            this.m_localAnchorC.Copy(prismatic.m_localAnchorA);\r\n            this.m_localAnchorA.Copy(prismatic.m_localAnchorB);\r\n            this.m_referenceAngleA = prismatic.m_referenceAngle;\r\n            this.m_localAxisC.Copy(prismatic.m_localXAxisA);\r\n            // b2Vec2 pC = m_localAnchorC;\r\n            const pC = this.m_localAnchorC;\r\n            // b2Vec2 pA = b2MulT(xfC.q, b2Mul(xfA.q, m_localAnchorA) + (xfA.p - xfC.p));\r\n            const pA = b2Rot.MulTRV(xfC.q, b2Vec2.AddVV(b2Rot.MulRV(xfA.q, this.m_localAnchorA, b2Vec2.s_t0), b2Vec2.SubVV(xfA.p, xfC.p, b2Vec2.s_t1), b2Vec2.s_t0), b2Vec2.s_t0); // pA uses s_t0\r\n            // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n            coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n        }\r\n        this.m_bodyD = this.m_joint2.GetBodyA();\r\n        this.m_bodyB = this.m_joint2.GetBodyB();\r\n        // Get geometry of joint2\r\n        const xfB = this.m_bodyB.m_xf;\r\n        const aB = this.m_bodyB.m_sweep.a;\r\n        const xfD = this.m_bodyD.m_xf;\r\n        const aD = this.m_bodyD.m_sweep.a;\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            const revolute = def.joint2;\r\n            this.m_localAnchorD.Copy(revolute.m_localAnchorA);\r\n            this.m_localAnchorB.Copy(revolute.m_localAnchorB);\r\n            this.m_referenceAngleB = revolute.m_referenceAngle;\r\n            this.m_localAxisD.SetZero();\r\n            coordinateB = aB - aD - this.m_referenceAngleB;\r\n        }\r\n        else {\r\n            const prismatic = def.joint2;\r\n            this.m_localAnchorD.Copy(prismatic.m_localAnchorA);\r\n            this.m_localAnchorB.Copy(prismatic.m_localAnchorB);\r\n            this.m_referenceAngleB = prismatic.m_referenceAngle;\r\n            this.m_localAxisD.Copy(prismatic.m_localXAxisA);\r\n            // b2Vec2 pD = m_localAnchorD;\r\n            const pD = this.m_localAnchorD;\r\n            // b2Vec2 pB = b2MulT(xfD.q, b2Mul(xfB.q, m_localAnchorB) + (xfB.p - xfD.p));\r\n            const pB = b2Rot.MulTRV(xfD.q, b2Vec2.AddVV(b2Rot.MulRV(xfB.q, this.m_localAnchorB, b2Vec2.s_t0), b2Vec2.SubVV(xfB.p, xfD.p, b2Vec2.s_t1), b2Vec2.s_t0), b2Vec2.s_t0); // pB uses s_t0\r\n            // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n            coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n        }\r\n        this.m_ratio = b2Maybe(def.ratio, 1);\r\n        this.m_constant = coordinateA + this.m_ratio * coordinateB;\r\n        this.m_impulse = 0;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_indexC = this.m_bodyC.m_islandIndex;\r\n        this.m_indexD = this.m_bodyD.m_islandIndex;\r\n        this.m_lcA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_lcB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_lcC.Copy(this.m_bodyC.m_sweep.localCenter);\r\n        this.m_lcD.Copy(this.m_bodyD.m_sweep.localCenter);\r\n        this.m_mA = this.m_bodyA.m_invMass;\r\n        this.m_mB = this.m_bodyB.m_invMass;\r\n        this.m_mC = this.m_bodyC.m_invMass;\r\n        this.m_mD = this.m_bodyD.m_invMass;\r\n        this.m_iA = this.m_bodyA.m_invI;\r\n        this.m_iB = this.m_bodyB.m_invI;\r\n        this.m_iC = this.m_bodyC.m_invI;\r\n        this.m_iD = this.m_bodyD.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const aC = data.positions[this.m_indexC].a;\r\n        const vC = data.velocities[this.m_indexC].v;\r\n        let wC = data.velocities[this.m_indexC].w;\r\n        const aD = data.positions[this.m_indexD].a;\r\n        const vD = data.velocities[this.m_indexD].v;\r\n        let wD = data.velocities[this.m_indexD].w;\r\n        // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n        this.m_mass = 0;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            this.m_JvAC.SetZero();\r\n            this.m_JwA = 1;\r\n            this.m_JwC = 1;\r\n            this.m_mass += this.m_iA + this.m_iC;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n            const u = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.InitVelocityConstraints_s_u);\r\n            // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n            b2Vec2.SubVV(this.m_localAnchorC, this.m_lcC, this.m_lalcC);\r\n            const rC = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.InitVelocityConstraints_s_rC);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n            b2Vec2.SubVV(this.m_localAnchorA, this.m_lcA, this.m_lalcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.InitVelocityConstraints_s_rA);\r\n            // m_JvAC = u;\r\n            this.m_JvAC.Copy(u);\r\n            // m_JwC = b2Cross(rC, u);\r\n            this.m_JwC = b2Vec2.CrossVV(rC, u);\r\n            // m_JwA = b2Cross(rA, u);\r\n            this.m_JwA = b2Vec2.CrossVV(rA, u);\r\n            this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\r\n        }\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            this.m_JvBD.SetZero();\r\n            this.m_JwB = this.m_ratio;\r\n            this.m_JwD = this.m_ratio;\r\n            this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n            const u = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.InitVelocityConstraints_s_u);\r\n            // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n            b2Vec2.SubVV(this.m_localAnchorD, this.m_lcD, this.m_lalcD);\r\n            const rD = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.InitVelocityConstraints_s_rD);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n            b2Vec2.SubVV(this.m_localAnchorB, this.m_lcB, this.m_lalcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.InitVelocityConstraints_s_rB);\r\n            // m_JvBD = m_ratio * u;\r\n            b2Vec2.MulSV(this.m_ratio, u, this.m_JvBD);\r\n            // m_JwD = m_ratio * b2Cross(rD, u);\r\n            this.m_JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n            // m_JwB = m_ratio * b2Cross(rB, u);\r\n            this.m_JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n            this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\r\n        }\r\n        // Compute effective mass.\r\n        this.m_mass = this.m_mass > 0 ? 1 / this.m_mass : 0;\r\n        if (data.step.warmStarting) {\r\n            // vA += (m_mA * m_impulse) * m_JvAC;\r\n            vA.SelfMulAdd(this.m_mA * this.m_impulse, this.m_JvAC);\r\n            wA += this.m_iA * this.m_impulse * this.m_JwA;\r\n            // vB += (m_mB * m_impulse) * m_JvBD;\r\n            vB.SelfMulAdd(this.m_mB * this.m_impulse, this.m_JvBD);\r\n            wB += this.m_iB * this.m_impulse * this.m_JwB;\r\n            // vC -= (m_mC * m_impulse) * m_JvAC;\r\n            vC.SelfMulSub(this.m_mC * this.m_impulse, this.m_JvAC);\r\n            wC -= this.m_iC * this.m_impulse * this.m_JwC;\r\n            // vD -= (m_mD * m_impulse) * m_JvBD;\r\n            vD.SelfMulSub(this.m_mD * this.m_impulse, this.m_JvBD);\r\n            wD -= this.m_iD * this.m_impulse * this.m_JwD;\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n        // data.velocities[this.m_indexC].v = vC;\r\n        data.velocities[this.m_indexC].w = wC;\r\n        // data.velocities[this.m_indexD].v = vD;\r\n        data.velocities[this.m_indexD].w = wD;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const vC = data.velocities[this.m_indexC].v;\r\n        let wC = data.velocities[this.m_indexC].w;\r\n        const vD = data.velocities[this.m_indexD].v;\r\n        let wD = data.velocities[this.m_indexD].w;\r\n        // float32 Cdot = b2Dot(m_JvAC, vA - vC) + b2Dot(m_JvBD, vB - vD);\r\n        let Cdot = b2Vec2.DotVV(this.m_JvAC, b2Vec2.SubVV(vA, vC, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(this.m_JvBD, b2Vec2.SubVV(vB, vD, b2Vec2.s_t0));\r\n        Cdot += (this.m_JwA * wA - this.m_JwC * wC) + (this.m_JwB * wB - this.m_JwD * wD);\r\n        const impulse = -this.m_mass * Cdot;\r\n        this.m_impulse += impulse;\r\n        // vA += (m_mA * impulse) * m_JvAC;\r\n        vA.SelfMulAdd((this.m_mA * impulse), this.m_JvAC);\r\n        wA += this.m_iA * impulse * this.m_JwA;\r\n        // vB += (m_mB * impulse) * m_JvBD;\r\n        vB.SelfMulAdd((this.m_mB * impulse), this.m_JvBD);\r\n        wB += this.m_iB * impulse * this.m_JwB;\r\n        // vC -= (m_mC * impulse) * m_JvAC;\r\n        vC.SelfMulSub((this.m_mC * impulse), this.m_JvAC);\r\n        wC -= this.m_iC * impulse * this.m_JwC;\r\n        // vD -= (m_mD * impulse) * m_JvBD;\r\n        vD.SelfMulSub((this.m_mD * impulse), this.m_JvBD);\r\n        wD -= this.m_iD * impulse * this.m_JwD;\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n        // data.velocities[this.m_indexC].v = vC;\r\n        data.velocities[this.m_indexC].w = wC;\r\n        // data.velocities[this.m_indexD].v = vD;\r\n        data.velocities[this.m_indexD].w = wD;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const cC = data.positions[this.m_indexC].c;\r\n        let aC = data.positions[this.m_indexC].a;\r\n        const cD = data.positions[this.m_indexD].c;\r\n        let aD = data.positions[this.m_indexD].a;\r\n        // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n        const linearError = 0;\r\n        let coordinateA, coordinateB;\r\n        const JvAC = this.m_JvAC, JvBD = this.m_JvBD;\r\n        let JwA, JwB, JwC, JwD;\r\n        let mass = 0;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            JvAC.SetZero();\r\n            JwA = 1;\r\n            JwC = 1;\r\n            mass += this.m_iA + this.m_iC;\r\n            coordinateA = aA - aC - this.m_referenceAngleA;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n            const u = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.SolvePositionConstraints_s_u);\r\n            // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n            const rC = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.SolvePositionConstraints_s_rC);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.SolvePositionConstraints_s_rA);\r\n            // JvAC = u;\r\n            JvAC.Copy(u);\r\n            // JwC = b2Cross(rC, u);\r\n            JwC = b2Vec2.CrossVV(rC, u);\r\n            // JwA = b2Cross(rA, u);\r\n            JwA = b2Vec2.CrossVV(rA, u);\r\n            mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\r\n            // b2Vec2 pC = m_localAnchorC - m_lcC;\r\n            const pC = this.m_lalcC;\r\n            // b2Vec2 pA = b2MulT(qC, rA + (cA - cC));\r\n            const pA = b2Rot.MulTRV(qC, b2Vec2.AddVV(rA, b2Vec2.SubVV(cA, cC, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0); // pA uses s_t0\r\n            // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n            coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n        }\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            JvBD.SetZero();\r\n            JwB = this.m_ratio;\r\n            JwD = this.m_ratio;\r\n            mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n            coordinateB = aB - aD - this.m_referenceAngleB;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n            const u = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.SolvePositionConstraints_s_u);\r\n            // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n            const rD = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.SolvePositionConstraints_s_rD);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.SolvePositionConstraints_s_rB);\r\n            // JvBD = m_ratio * u;\r\n            b2Vec2.MulSV(this.m_ratio, u, JvBD);\r\n            // JwD = m_ratio * b2Cross(rD, u);\r\n            JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n            // JwB = m_ratio * b2Cross(rB, u);\r\n            JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n            mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * JwD * JwD + this.m_iB * JwB * JwB;\r\n            // b2Vec2 pD = m_localAnchorD - m_lcD;\r\n            const pD = this.m_lalcD;\r\n            // b2Vec2 pB = b2MulT(qD, rB + (cB - cD));\r\n            const pB = b2Rot.MulTRV(qD, b2Vec2.AddVV(rB, b2Vec2.SubVV(cB, cD, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0); // pB uses s_t0\r\n            // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n            coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n        }\r\n        const C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant;\r\n        let impulse = 0;\r\n        if (mass > 0) {\r\n            impulse = -C / mass;\r\n        }\r\n        // cA += m_mA * impulse * JvAC;\r\n        cA.SelfMulAdd(this.m_mA * impulse, JvAC);\r\n        aA += this.m_iA * impulse * JwA;\r\n        // cB += m_mB * impulse * JvBD;\r\n        cB.SelfMulAdd(this.m_mB * impulse, JvBD);\r\n        aB += this.m_iB * impulse * JwB;\r\n        // cC -= m_mC * impulse * JvAC;\r\n        cC.SelfMulSub(this.m_mC * impulse, JvAC);\r\n        aC -= this.m_iC * impulse * JwC;\r\n        // cD -= m_mD * impulse * JvBD;\r\n        cD.SelfMulSub(this.m_mD * impulse, JvBD);\r\n        aD -= this.m_iD * impulse * JwD;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        // data.positions[this.m_indexC].c = cC;\r\n        data.positions[this.m_indexC].a = aC;\r\n        // data.positions[this.m_indexD].c = cD;\r\n        data.positions[this.m_indexD].a = aD;\r\n        // TODO_ERIN not implemented\r\n        return linearError < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P = m_impulse * m_JvAC;\r\n        // return inv_dt * P;\r\n        return b2Vec2.MulSV(inv_dt * this.m_impulse, this.m_JvAC, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        // float32 L = m_impulse * m_JwA;\r\n        // return inv_dt * L;\r\n        return inv_dt * this.m_impulse * this.m_JwA;\r\n    }\r\n    GetJoint1() { return this.m_joint1; }\r\n    GetJoint2() { return this.m_joint2; }\r\n    GetRatio() {\r\n        return this.m_ratio;\r\n    }\r\n    SetRatio(ratio) {\r\n        // DEBUG: b2Assert(b2IsValid(ratio));\r\n        this.m_ratio = ratio;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        const index1 = this.m_joint1.m_index;\r\n        const index2 = this.m_joint2.m_index;\r\n        log(\"  const jd: b2GearJointDef = new b2GearJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.joint1 = joints[%d];\\n\", index1);\r\n        log(\"  jd.joint2 = joints[%d];\\n\", index2);\r\n        log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2GearJoint.InitVelocityConstraints_s_u = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rA = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rB = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rC = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rD = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_u = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rA = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rB = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rC = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rD = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\n// DEBUG: import { b2IsValid } from \"../../Common/b2Math\";\r\nimport { b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Clamp, b2Vec2, b2Mat22, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\nexport class b2MotorJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_motorJoint);\r\n        this.linearOffset = new b2Vec2(0, 0);\r\n        this.angularOffset = 0;\r\n        this.maxForce = 1;\r\n        this.maxTorque = 1;\r\n        this.correctionFactor = 0.3;\r\n    }\r\n    Initialize(bA, bB) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        // b2Vec2 xB = bodyB->GetPosition();\r\n        // linearOffset = bodyA->GetLocalPoint(xB);\r\n        this.bodyA.GetLocalPoint(this.bodyB.GetPosition(), this.linearOffset);\r\n        const angleA = this.bodyA.GetAngle();\r\n        const angleB = this.bodyB.GetAngle();\r\n        this.angularOffset = angleB - angleA;\r\n    }\r\n}\r\nexport class b2MotorJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_linearOffset = new b2Vec2();\r\n        this.m_angularOffset = 0;\r\n        this.m_linearImpulse = new b2Vec2();\r\n        this.m_angularImpulse = 0;\r\n        this.m_maxForce = 0;\r\n        this.m_maxTorque = 0;\r\n        this.m_correctionFactor = 0.3;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_linearError = new b2Vec2();\r\n        this.m_angularError = 0;\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_linearMass = new b2Mat22();\r\n        this.m_angularMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_K = new b2Mat22();\r\n        this.m_linearOffset.Copy(b2Maybe(def.linearOffset, b2Vec2.ZERO));\r\n        this.m_linearImpulse.SetZero();\r\n        this.m_maxForce = b2Maybe(def.maxForce, 0);\r\n        this.m_maxTorque = b2Maybe(def.maxTorque, 0);\r\n        this.m_correctionFactor = b2Maybe(def.correctionFactor, 0.3);\r\n    }\r\n    GetAnchorA(out) {\r\n        const pos = this.m_bodyA.GetPosition();\r\n        out.x = pos.x;\r\n        out.y = pos.y;\r\n        return out;\r\n    }\r\n    GetAnchorB(out) {\r\n        const pos = this.m_bodyB.GetPosition();\r\n        out.x = pos.x;\r\n        out.y = pos.y;\r\n        return out;\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * m_linearImpulse;\r\n        return b2Vec2.MulSV(inv_dt, this.m_linearImpulse, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_angularImpulse;\r\n    }\r\n    SetLinearOffset(linearOffset) {\r\n        if (!b2Vec2.IsEqualToV(linearOffset, this.m_linearOffset)) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_linearOffset.Copy(linearOffset);\r\n        }\r\n    }\r\n    GetLinearOffset() {\r\n        return this.m_linearOffset;\r\n    }\r\n    SetAngularOffset(angularOffset) {\r\n        if (angularOffset !== this.m_angularOffset) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_angularOffset = angularOffset;\r\n        }\r\n    }\r\n    GetAngularOffset() {\r\n        return this.m_angularOffset;\r\n    }\r\n    SetMaxForce(force) {\r\n        // DEBUG: b2Assert(b2IsValid(force) && force >= 0);\r\n        this.m_maxForce = force;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetMaxTorque(torque) {\r\n        // DEBUG: b2Assert(b2IsValid(torque) && torque >= 0);\r\n        this.m_maxTorque = torque;\r\n    }\r\n    GetMaxTorque() {\r\n        return this.m_maxTorque;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective mass matrix.\r\n        // this.m_rA = b2Mul(qA, m_linearOffset - this.m_localCenterA);\r\n        const rA = b2Rot.MulRV(qA, b2Vec2.SubVV(this.m_linearOffset, this.m_localCenterA, b2Vec2.s_t0), this.m_rA);\r\n        // this.m_rB = b2Mul(qB, -this.m_localCenterB);\r\n        const rB = b2Rot.MulRV(qB, b2Vec2.NegV(this.m_localCenterB, b2Vec2.s_t0), this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Upper 2 by 2 of K for point to point\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n        K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n        // this.m_linearMass = K.GetInverse();\r\n        K.GetInverse(this.m_linearMass);\r\n        this.m_angularMass = iA + iB;\r\n        if (this.m_angularMass > 0) {\r\n            this.m_angularMass = 1 / this.m_angularMass;\r\n        }\r\n        // this.m_linearError = cB + rB - cA - rA;\r\n        b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), this.m_linearError);\r\n        this.m_angularError = aB - aA - this.m_angularOffset;\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            // this.m_linearImpulse *= data.step.dtRatio;\r\n            this.m_linearImpulse.SelfMul(data.step.dtRatio);\r\n            this.m_angularImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P(this.m_linearImpulse.x, this.m_linearImpulse.y);\r\n            const P = this.m_linearImpulse;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(rA, P) + this.m_angularImpulse);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(rB, P) + this.m_angularImpulse);\r\n        }\r\n        else {\r\n            this.m_linearImpulse.SetZero();\r\n            this.m_angularImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA; // vA is a reference\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB; // vB is a reference\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const h = data.step.dt;\r\n        const inv_h = data.step.inv_dt;\r\n        // Solve angular friction\r\n        {\r\n            const Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\r\n            let impulse = -this.m_angularMass * Cdot;\r\n            const oldImpulse = this.m_angularImpulse;\r\n            const maxImpulse = h * this.m_maxTorque;\r\n            this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_angularImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve linear friction\r\n        {\r\n            const rA = this.m_rA;\r\n            const rB = this.m_rB;\r\n            // b2Vec2 Cdot = vB + b2Vec2.CrossSV(wB, rB) - vA - b2Vec2.CrossSV(wA, rA) + inv_h * this.m_correctionFactor * this.m_linearError;\r\n            const Cdot_v2 = b2Vec2.AddVV(b2Vec2.SubVV(b2Vec2.AddVV(vB, b2Vec2.CrossSV(wB, rB, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.AddVV(vA, b2Vec2.CrossSV(wA, rA, b2Vec2.s_t1), b2Vec2.s_t1), b2Vec2.s_t2), b2Vec2.MulSV(inv_h * this.m_correctionFactor, this.m_linearError, b2Vec2.s_t3), b2MotorJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = -b2Mul(this.m_linearMass, Cdot);\r\n            const impulse_v2 = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2MotorJoint.SolveVelocityConstraints_s_impulse_v2).SelfNeg();\r\n            // b2Vec2 oldImpulse = this.m_linearImpulse;\r\n            const oldImpulse_v2 = b2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2.Copy(this.m_linearImpulse);\r\n            // this.m_linearImpulse += impulse;\r\n            this.m_linearImpulse.SelfAdd(impulse_v2);\r\n            const maxImpulse = h * this.m_maxForce;\r\n            if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n                this.m_linearImpulse.Normalize();\r\n                // this.m_linearImpulse *= maxImpulse;\r\n                this.m_linearImpulse.SelfMul(maxImpulse);\r\n            }\r\n            // impulse = this.m_linearImpulse - oldImpulse;\r\n            b2Vec2.SubVV(this.m_linearImpulse, oldImpulse_v2, impulse_v2);\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulse_v2);\r\n            // wA -= iA * b2Vec2.CrossVV(rA, impulse);\r\n            wA -= iA * b2Vec2.CrossVV(rA, impulse_v2);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulse_v2);\r\n            // wB += iB * b2Vec2.CrossVV(rB, impulse);\r\n            wB += iB * b2Vec2.CrossVV(rB, impulse_v2);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA; // vA is a reference\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB; // vB is a reference\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2MotorJointDef = new b2MotorJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.linearOffset.Set(%.15f, %.15f);\\n\", this.m_linearOffset.x, this.m_linearOffset.y);\r\n        log(\"  jd.angularOffset = %.15f;\\n\", this.m_angularOffset);\r\n        log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\r\n        log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\r\n        log(\"  jd.correctionFactor = %.15f;\\n\", this.m_correctionFactor);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2MotorJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2MotorJoint.SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\r\nb2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert, b2_epsilon } from \"../../Common/b2Settings\";\r\n// DEBUG: import { b2IsValid } from \"../../Common/b2Math\";\r\nimport { b2_pi, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Mat22, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Mouse joint definition. This requires a world target point,\r\n/// tuning parameters, and the time step.\r\nexport class b2MouseJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_mouseJoint);\r\n        this.target = new b2Vec2();\r\n        this.maxForce = 0;\r\n        this.frequencyHz = 5;\r\n        this.dampingRatio = 0.7;\r\n    }\r\n}\r\nexport class b2MouseJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_targetA = new b2Vec2();\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_beta = 0;\r\n        // Solver shared\r\n        this.m_impulse = new b2Vec2();\r\n        this.m_maxForce = 0;\r\n        this.m_gamma = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassB = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = new b2Mat22();\r\n        this.m_C = new b2Vec2();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        this.m_targetA.Copy(b2Maybe(def.target, b2Vec2.ZERO));\r\n        // DEBUG: b2Assert(this.m_targetA.IsValid());\r\n        b2Transform.MulTXV(this.m_bodyB.GetTransform(), this.m_targetA, this.m_localAnchorB);\r\n        this.m_maxForce = b2Maybe(def.maxForce, 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_maxForce) && this.m_maxForce >= 0);\r\n        this.m_impulse.SetZero();\r\n        this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_frequencyHz) && this.m_frequencyHz >= 0);\r\n        this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n        // DEBUG: b2Assert(b2IsValid(this.m_dampingRatio) && this.m_dampingRatio >= 0);\r\n        this.m_beta = 0;\r\n        this.m_gamma = 0;\r\n    }\r\n    SetTarget(target) {\r\n        if (!this.m_bodyB.IsAwake()) {\r\n            this.m_bodyB.SetAwake(true);\r\n        }\r\n        this.m_targetA.Copy(target);\r\n    }\r\n    GetTarget() {\r\n        return this.m_targetA;\r\n    }\r\n    SetMaxForce(maxForce) {\r\n        this.m_maxForce = maxForce;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qB = this.m_qB.SetAngle(aB);\r\n        const mass = this.m_bodyB.GetMass();\r\n        // Frequency\r\n        const omega = 2 * b2_pi * this.m_frequencyHz;\r\n        // Damping coefficient\r\n        const d = 2 * mass * this.m_dampingRatio * omega;\r\n        // Spring stiffness\r\n        const k = mass * (omega * omega);\r\n        // magic formulas\r\n        // gamma has units of inverse mass.\r\n        // beta has units of inverse time.\r\n        const h = data.step.dt;\r\n        // DEBUG: b2Assert(d + h * k > b2_epsilon);\r\n        this.m_gamma = h * (d + h * k);\r\n        if (this.m_gamma !== 0) {\r\n            this.m_gamma = 1 / this.m_gamma;\r\n        }\r\n        this.m_beta = h * k * this.m_gamma;\r\n        // Compute the effective mass matrix.\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // K    = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) * invI2 * skew(r2)]\r\n        //      = [1/m1+1/m2     0    ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y -r1.x*r1.y]\r\n        //        [    0     1/m1+1/m2]           [-r1.x*r1.y r1.x*r1.x]           [-r1.x*r1.y r1.x*r1.x]\r\n        const K = this.m_K;\r\n        K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y + this.m_gamma;\r\n        K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x + this.m_gamma;\r\n        K.GetInverse(this.m_mass);\r\n        // m_C = cB + m_rB - m_targetA;\r\n        this.m_C.x = cB.x + this.m_rB.x - this.m_targetA.x;\r\n        this.m_C.y = cB.y + this.m_rB.y - this.m_targetA.y;\r\n        // m_C *= m_beta;\r\n        this.m_C.SelfMul(this.m_beta);\r\n        // Cheat with some damping\r\n        wB *= 0.98;\r\n        if (data.step.warmStarting) {\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            // vB += m_invMassB * m_impulse;\r\n            vB.x += this.m_invMassB * this.m_impulse.x;\r\n            vB.y += this.m_invMassB * this.m_impulse.y;\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, this.m_impulse);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n        }\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Cdot = v + cross(w, r)\r\n        // b2Vec2 Cdot = vB + b2Cross(wB, m_rB);\r\n        const Cdot = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2MouseJoint.SolveVelocityConstraints_s_Cdot);\r\n        //  b2Vec2 impulse = b2Mul(m_mass, -(Cdot + m_C + m_gamma * m_impulse));\r\n        const impulse = b2Mat22.MulMV(this.m_mass, b2Vec2.AddVV(Cdot, b2Vec2.AddVV(this.m_C, b2Vec2.MulSV(this.m_gamma, this.m_impulse, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0).SelfNeg(), b2MouseJoint.SolveVelocityConstraints_s_impulse);\r\n        // b2Vec2 oldImpulse = m_impulse;\r\n        const oldImpulse = b2MouseJoint.SolveVelocityConstraints_s_oldImpulse.Copy(this.m_impulse);\r\n        // m_impulse += impulse;\r\n        this.m_impulse.SelfAdd(impulse);\r\n        const maxImpulse = data.step.dt * this.m_maxForce;\r\n        if (this.m_impulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n            this.m_impulse.SelfMul(maxImpulse / this.m_impulse.Length());\r\n        }\r\n        // impulse = m_impulse - oldImpulse;\r\n        b2Vec2.SubVV(this.m_impulse, oldImpulse, impulse);\r\n        // vB += m_invMassB * impulse;\r\n        vB.SelfMulAdd(this.m_invMassB, impulse);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, impulse);\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    GetAnchorA(out) {\r\n        out.x = this.m_targetA.x;\r\n        out.y = this.m_targetA.y;\r\n        return out;\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return b2Vec2.MulSV(inv_dt, this.m_impulse, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"Mouse joint dumping is not supported.\\n\");\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_targetA.SelfSub(newOrigin);\r\n    }\r\n}\r\nb2MouseJoint.SolveVelocityConstraints_s_Cdot = new b2Vec2();\r\nb2MouseJoint.SolveVelocityConstraints_s_impulse = new b2Vec2();\r\nb2MouseJoint.SolveVelocityConstraints_s_oldImpulse = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxLinearCorrection, b2_angularSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Clamp, b2Vec2, b2Mat22, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Prismatic joint definition. This requires defining a line of\r\n/// motion using an axis and an anchor point. The definition uses local\r\n/// anchor points and a local axis so that the initial configuration\r\n/// can violate the constraint slightly. The joint translation is zero\r\n/// when the local anchor points coincide in world space. Using local\r\n/// anchors and a local axis helps when saving and loading a game.\r\nexport class b2PrismaticJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_prismaticJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.localAxisA = new b2Vec2(1, 0);\r\n        this.referenceAngle = 0;\r\n        this.enableLimit = false;\r\n        this.lowerTranslation = 0;\r\n        this.upperTranslation = 0;\r\n        this.enableMotor = false;\r\n        this.maxMotorForce = 0;\r\n        this.motorSpeed = 0;\r\n    }\r\n    Initialize(bA, bB, anchor, axis) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.bodyA.GetLocalVector(axis, this.localAxisA);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2PrismaticJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localXAxisA = new b2Vec2();\r\n        this.m_localYAxisA = new b2Vec2();\r\n        this.m_referenceAngle = 0;\r\n        this.m_impulse = new b2Vec3(0, 0, 0);\r\n        this.m_motorImpulse = 0;\r\n        this.m_lowerTranslation = 0;\r\n        this.m_upperTranslation = 0;\r\n        this.m_maxMotorForce = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableLimit = false;\r\n        this.m_enableMotor = false;\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_axis = new b2Vec2(0, 0);\r\n        this.m_perp = new b2Vec2(0, 0);\r\n        this.m_s1 = 0;\r\n        this.m_s2 = 0;\r\n        this.m_a1 = 0;\r\n        this.m_a2 = 0;\r\n        this.m_K = new b2Mat33();\r\n        this.m_K3 = new b2Mat33();\r\n        this.m_K2 = new b2Mat22();\r\n        this.m_motorMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n        this.m_localXAxisA.Copy(b2Maybe(def.localAxisA, new b2Vec2(1, 0))).SelfNormalize();\r\n        b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\r\n        this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\r\n        this.m_lowerTranslation = b2Maybe(def.lowerTranslation, 0);\r\n        this.m_upperTranslation = b2Maybe(def.upperTranslation, 0);\r\n        this.m_maxMotorForce = b2Maybe(def.maxMotorForce, 0);\r\n        this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\r\n        this.m_enableLimit = b2Maybe(def.enableLimit, false);\r\n        this.m_enableMotor = b2Maybe(def.enableMotor, false);\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective masses.\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = (cB - cA) + rB - rA;\r\n        const d = b2Vec2.AddVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), b2Vec2.SubVV(rB, rA, b2Vec2.s_t1), b2PrismaticJoint.InitVelocityConstraints_s_d);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Compute motor Jacobian and effective mass.\r\n        {\r\n            // m_axis = b2Mul(qA, m_localXAxisA);\r\n            b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\r\n            // m_a1 = b2Cross(d + rA, m_axis);\r\n            this.m_a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_axis);\r\n            // m_a2 = b2Cross(rB, m_axis);\r\n            this.m_a2 = b2Vec2.CrossVV(rB, this.m_axis);\r\n            this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\r\n            if (this.m_motorMass > 0) {\r\n                this.m_motorMass = 1 / this.m_motorMass;\r\n            }\r\n        }\r\n        // Prismatic constraint.\r\n        {\r\n            // m_perp = b2Mul(qA, m_localYAxisA);\r\n            b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\r\n            // m_s1 = b2Cross(d + rA, m_perp);\r\n            this.m_s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_perp);\r\n            // m_s2 = b2Cross(rB, m_perp);\r\n            this.m_s2 = b2Vec2.CrossVV(rB, this.m_perp);\r\n            // float32 k11 = mA + mB + iA * m_s1 * m_s1 + iB * m_s2 * m_s2;\r\n            this.m_K.ex.x = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\r\n            // float32 k12 = iA * m_s1 + iB * m_s2;\r\n            this.m_K.ex.y = iA * this.m_s1 + iB * this.m_s2;\r\n            // float32 k13 = iA * m_s1 * m_a1 + iB * m_s2 * m_a2;\r\n            this.m_K.ex.z = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\r\n            this.m_K.ey.x = this.m_K.ex.y;\r\n            // float32 k22 = iA + iB;\r\n            this.m_K.ey.y = iA + iB;\r\n            if (this.m_K.ey.y === 0) {\r\n                // For bodies with fixed rotation.\r\n                this.m_K.ey.y = 1;\r\n            }\r\n            // float32 k23 = iA * m_a1 + iB * m_a2;\r\n            this.m_K.ey.z = iA * this.m_a1 + iB * this.m_a2;\r\n            this.m_K.ez.x = this.m_K.ex.z;\r\n            this.m_K.ez.y = this.m_K.ey.z;\r\n            // float32 k33 = mA + mB + iA * m_a1 * m_a1 + iB * m_a2 * m_a2;\r\n            this.m_K.ez.z = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\r\n            // m_K.ex.Set(k11, k12, k13);\r\n            // m_K.ey.Set(k12, k22, k23);\r\n            // m_K.ez.Set(k13, k23, k33);\r\n        }\r\n        // Compute motor and limit terms.\r\n        if (this.m_enableLimit) {\r\n            // float32 jointTranslation = b2Dot(m_axis, d);\r\n            const jointTranslation = b2Vec2.DotVV(this.m_axis, d);\r\n            if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\r\n                this.m_limitState = b2LimitState.e_equalLimits;\r\n            }\r\n            else if (jointTranslation <= this.m_lowerTranslation) {\r\n                if (this.m_limitState !== b2LimitState.e_atLowerLimit) {\r\n                    this.m_limitState = b2LimitState.e_atLowerLimit;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n            }\r\n            else if (jointTranslation >= this.m_upperTranslation) {\r\n                if (this.m_limitState !== b2LimitState.e_atUpperLimit) {\r\n                    this.m_limitState = b2LimitState.e_atUpperLimit;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n            }\r\n            else {\r\n                this.m_limitState = b2LimitState.e_inactiveLimit;\r\n                this.m_impulse.z = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.m_limitState = b2LimitState.e_inactiveLimit;\r\n            this.m_impulse.z = 0;\r\n        }\r\n        if (!this.m_enableMotor) {\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Account for variable time step.\r\n            // m_impulse *= data.step.dtRatio;\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse.x * m_perp + (m_motorImpulse + m_impulse.z) * m_axis;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(this.m_impulse.x, this.m_perp, b2Vec2.s_t0), b2Vec2.MulSV((this.m_motorImpulse + this.m_impulse.z), this.m_axis, b2Vec2.s_t1), b2PrismaticJoint.InitVelocityConstraints_s_P);\r\n            // float32 LA = m_impulse.x * m_s1 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a1;\r\n            const LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\r\n            // float32 LB = m_impulse.x * m_s2 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a2;\r\n            const LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Solve linear motor constraint.\r\n        if (this.m_enableMotor && this.m_limitState !== b2LimitState.e_equalLimits) {\r\n            // float32 Cdot = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\r\n            const Cdot = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\r\n            let impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorForce;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            // b2Vec2 P = impulse * m_axis;\r\n            const P = b2Vec2.MulSV(impulse, this.m_axis, b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_a1;\r\n            const LB = impulse * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // b2Vec2 Cdot1;\r\n        // Cdot1.x = b2Dot(m_perp, vB - vA) + m_s2 * wB - m_s1 * wA;\r\n        const Cdot1_x = b2Vec2.DotVV(this.m_perp, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_s2 * wB - this.m_s1 * wA;\r\n        // Cdot1.y = wB - wA;\r\n        const Cdot1_y = wB - wA;\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit) {\r\n            // Solve prismatic and limit constraint in block form.\r\n            // float32 Cdot2;\r\n            // Cdot2 = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\r\n            const Cdot2 = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\r\n            // b2Vec3 Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 f1 = m_impulse;\r\n            const f1 = b2PrismaticJoint.SolveVelocityConstraints_s_f1.Copy(this.m_impulse);\r\n            // b2Vec3 df =  m_K.Solve33(-Cdot);\r\n            const df3 = this.m_K.Solve33((-Cdot1_x), (-Cdot1_y), (-Cdot2), b2PrismaticJoint.SolveVelocityConstraints_s_df3);\r\n            // m_impulse += df;\r\n            this.m_impulse.SelfAdd(df3);\r\n            if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                this.m_impulse.z = b2Max(this.m_impulse.z, 0);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                this.m_impulse.z = b2Min(this.m_impulse.z, 0);\r\n            }\r\n            // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) + f1(1:2)\r\n            // b2Vec2 b = -Cdot1 - (m_impulse.z - f1.z) * b2Vec2(m_K.ez.x, m_K.ez.y);\r\n            const b_x = (-Cdot1_x) - (this.m_impulse.z - f1.z) * this.m_K.ez.x;\r\n            const b_y = (-Cdot1_y) - (this.m_impulse.z - f1.z) * this.m_K.ez.y;\r\n            // b2Vec2 f2r = m_K.Solve22(b) + b2Vec2(f1.x, f1.y);\r\n            const f2r = this.m_K.Solve22(b_x, b_y, b2PrismaticJoint.SolveVelocityConstraints_s_f2r);\r\n            f2r.x += f1.x;\r\n            f2r.y += f1.y;\r\n            // m_impulse.x = f2r.x;\r\n            this.m_impulse.x = f2r.x;\r\n            // m_impulse.y = f2r.y;\r\n            this.m_impulse.y = f2r.y;\r\n            // df = m_impulse - f1;\r\n            df3.x = this.m_impulse.x - f1.x;\r\n            df3.y = this.m_impulse.y - f1.y;\r\n            df3.z = this.m_impulse.z - f1.z;\r\n            // b2Vec2 P = df.x * m_perp + df.z * m_axis;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(df3.x, this.m_perp, b2Vec2.s_t0), b2Vec2.MulSV(df3.z, this.m_axis, b2Vec2.s_t1), b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            // float32 LA = df.x * m_s1 + df.y + df.z * m_a1;\r\n            const LA = df3.x * this.m_s1 + df3.y + df3.z * this.m_a1;\r\n            // float32 LB = df.x * m_s2 + df.y + df.z * m_a2;\r\n            const LB = df3.x * this.m_s2 + df3.y + df3.z * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        else {\r\n            // Limit is inactive, just solve the prismatic constraint in block form.\r\n            // b2Vec2 df = m_K.Solve22(-Cdot1);\r\n            const df2 = this.m_K.Solve22((-Cdot1_x), (-Cdot1_y), b2PrismaticJoint.SolveVelocityConstraints_s_df2);\r\n            this.m_impulse.x += df2.x;\r\n            this.m_impulse.y += df2.y;\r\n            // b2Vec2 P = df.x * m_perp;\r\n            const P = b2Vec2.MulSV(df2.x, this.m_perp, b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            // float32 LA = df.x * m_s1 + df.y;\r\n            const LA = df2.x * this.m_s1 + df2.y;\r\n            // float32 LB = df.x * m_s2 + df.y;\r\n            const LB = df2.x * this.m_s2 + df2.y;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = cB + rB - cA - rA;\r\n        const d = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2PrismaticJoint.SolvePositionConstraints_s_d);\r\n        // b2Vec2 axis = b2Mul(qA, m_localXAxisA);\r\n        const axis = b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\r\n        // float32 a1 = b2Cross(d + rA, axis);\r\n        const a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), axis);\r\n        // float32 a2 = b2Cross(rB, axis);\r\n        const a2 = b2Vec2.CrossVV(rB, axis);\r\n        // b2Vec2 perp = b2Mul(qA, m_localYAxisA);\r\n        const perp = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\r\n        // float32 s1 = b2Cross(d + rA, perp);\r\n        const s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), perp);\r\n        // float32 s2 = b2Cross(rB, perp);\r\n        const s2 = b2Vec2.CrossVV(rB, perp);\r\n        // b2Vec3 impulse;\r\n        let impulse = b2PrismaticJoint.SolvePositionConstraints_s_impulse;\r\n        // b2Vec2 C1;\r\n        // C1.x = b2Dot(perp, d);\r\n        const C1_x = b2Vec2.DotVV(perp, d);\r\n        // C1.y = aB - aA - m_referenceAngle;\r\n        const C1_y = aB - aA - this.m_referenceAngle;\r\n        let linearError = b2Abs(C1_x);\r\n        const angularError = b2Abs(C1_y);\r\n        let active = false;\r\n        let C2 = 0;\r\n        if (this.m_enableLimit) {\r\n            // float32 translation = b2Dot(axis, d);\r\n            const translation = b2Vec2.DotVV(axis, d);\r\n            if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\r\n                // Prevent large angular corrections\r\n                C2 = b2Clamp(translation, (-b2_maxLinearCorrection), b2_maxLinearCorrection);\r\n                linearError = b2Max(linearError, b2Abs(translation));\r\n                active = true;\r\n            }\r\n            else if (translation <= this.m_lowerTranslation) {\r\n                // Prevent large linear corrections and allow some slop.\r\n                C2 = b2Clamp(translation - this.m_lowerTranslation + b2_linearSlop, (-b2_maxLinearCorrection), 0);\r\n                linearError = b2Max(linearError, this.m_lowerTranslation - translation);\r\n                active = true;\r\n            }\r\n            else if (translation >= this.m_upperTranslation) {\r\n                // Prevent large linear corrections and allow some slop.\r\n                C2 = b2Clamp(translation - this.m_upperTranslation - b2_linearSlop, 0, b2_maxLinearCorrection);\r\n                linearError = b2Max(linearError, translation - this.m_upperTranslation);\r\n                active = true;\r\n            }\r\n        }\r\n        if (active) {\r\n            // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            // float32 k12 = iA * s1 + iB * s2;\r\n            const k12 = iA * s1 + iB * s2;\r\n            // float32 k13 = iA * s1 * a1 + iB * s2 * a2;\r\n            const k13 = iA * s1 * a1 + iB * s2 * a2;\r\n            // float32 k22 = iA + iB;\r\n            let k22 = iA + iB;\r\n            if (k22 === 0) {\r\n                // For fixed rotation\r\n                k22 = 1;\r\n            }\r\n            // float32 k23 = iA * a1 + iB * a2;\r\n            const k23 = iA * a1 + iB * a2;\r\n            // float32 k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\r\n            const k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\r\n            // b2Mat33 K;\r\n            const K = this.m_K3;\r\n            // K.ex.Set(k11, k12, k13);\r\n            K.ex.SetXYZ(k11, k12, k13);\r\n            // K.ey.Set(k12, k22, k23);\r\n            K.ey.SetXYZ(k12, k22, k23);\r\n            // K.ez.Set(k13, k23, k33);\r\n            K.ez.SetXYZ(k13, k23, k33);\r\n            // b2Vec3 C;\r\n            // C.x = C1.x;\r\n            // C.y = C1.y;\r\n            // C.z = C2;\r\n            // impulse = K.Solve33(-C);\r\n            impulse = K.Solve33((-C1_x), (-C1_y), (-C2), impulse);\r\n        }\r\n        else {\r\n            // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            // float32 k12 = iA * s1 + iB * s2;\r\n            const k12 = iA * s1 + iB * s2;\r\n            // float32 k22 = iA + iB;\r\n            let k22 = iA + iB;\r\n            if (k22 === 0) {\r\n                k22 = 1;\r\n            }\r\n            // b2Mat22 K;\r\n            const K2 = this.m_K2;\r\n            // K.ex.Set(k11, k12);\r\n            K2.ex.Set(k11, k12);\r\n            // K.ey.Set(k12, k22);\r\n            K2.ey.Set(k12, k22);\r\n            // b2Vec2 impulse1 = K.Solve(-C1);\r\n            const impulse1 = K2.Solve((-C1_x), (-C1_y), b2PrismaticJoint.SolvePositionConstraints_s_impulse1);\r\n            impulse.x = impulse1.x;\r\n            impulse.y = impulse1.y;\r\n            impulse.z = 0;\r\n        }\r\n        // b2Vec2 P = impulse.x * perp + impulse.z * axis;\r\n        const P = b2Vec2.AddVV(b2Vec2.MulSV(impulse.x, perp, b2Vec2.s_t0), b2Vec2.MulSV(impulse.z, axis, b2Vec2.s_t1), b2PrismaticJoint.SolvePositionConstraints_s_P);\r\n        // float32 LA = impulse.x * s1 + impulse.y + impulse.z * a1;\r\n        const LA = impulse.x * s1 + impulse.y + impulse.z * a1;\r\n        // float32 LB = impulse.x * s2 + impulse.y + impulse.z * a2;\r\n        const LB = impulse.x * s2 + impulse.y + impulse.z * a2;\r\n        // cA -= mA * P;\r\n        cA.SelfMulSub(mA, P);\r\n        aA -= iA * LA;\r\n        // cB += mB * P;\r\n        cB.SelfMulAdd(mB, P);\r\n        aB += iB * LB;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return linearError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * (m_impulse.x * m_perp + (m_motorImpulse + m_impulse.z) * m_axis);\r\n        out.x = inv_dt * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x);\r\n        out.y = inv_dt * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y);\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.y;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetLocalAxisA() { return this.m_localXAxisA; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    GetJointTranslation() {\r\n        // b2Vec2 pA = m_bodyA.GetWorldPoint(m_localAnchorA);\r\n        const pA = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PrismaticJoint.GetJointTranslation_s_pA);\r\n        // b2Vec2 pB = m_bodyB.GetWorldPoint(m_localAnchorB);\r\n        const pB = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PrismaticJoint.GetJointTranslation_s_pB);\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2PrismaticJoint.GetJointTranslation_s_d);\r\n        // b2Vec2 axis = m_bodyA.GetWorldVector(m_localXAxisA);\r\n        const axis = this.m_bodyA.GetWorldVector(this.m_localXAxisA, b2PrismaticJoint.GetJointTranslation_s_axis);\r\n        // float32 translation = b2Dot(d, axis);\r\n        const translation = b2Vec2.DotVV(d, axis);\r\n        return translation;\r\n    }\r\n    GetJointSpeed() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 pA = bA->m_sweep.c + rA;\r\n        const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\r\n        // b2Vec2 pB = bB->m_sweep.c + rB;\r\n        const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\r\n        // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, this.m_axis);\r\n        const vA = bA.m_linearVelocity;\r\n        const vB = bB.m_linearVelocity;\r\n        const wA = bA.m_angularVelocity;\r\n        const wB = bB.m_angularVelocity;\r\n        // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\r\n        const speed = b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(axis, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n        return speed;\r\n    }\r\n    IsLimitEnabled() {\r\n        return this.m_enableLimit;\r\n    }\r\n    EnableLimit(flag) {\r\n        if (flag !== this.m_enableLimit) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableLimit = flag;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    GetLowerLimit() {\r\n        return this.m_lowerTranslation;\r\n    }\r\n    GetUpperLimit() {\r\n        return this.m_upperTranslation;\r\n    }\r\n    SetLimits(lower, upper) {\r\n        if (lower !== this.m_lowerTranslation || upper !== this.m_upperTranslation) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_lowerTranslation = lower;\r\n            this.m_upperTranslation = upper;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        if (flag !== this.m_enableMotor) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableMotor = flag;\r\n        }\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        if (speed !== this.m_motorSpeed) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_motorSpeed = speed;\r\n        }\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    SetMaxMotorForce(force) {\r\n        if (force !== this.m_maxMotorForce) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_maxMotorForce = force;\r\n        }\r\n    }\r\n    GetMaxMotorForce() { return this.m_maxMotorForce; }\r\n    GetMotorForce(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2PrismaticJointDef = new b2PrismaticJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.lowerTranslation = %.15f;\\n\", this.m_lowerTranslation);\r\n        log(\"  jd.upperTranslation = %.15f;\\n\", this.m_upperTranslation);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorForce = %.15f;\\n\", this.m_maxMotorForce);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2PrismaticJoint.InitVelocityConstraints_s_d = new b2Vec2();\r\nb2PrismaticJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_f2r = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_f1 = new b2Vec3();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_df3 = new b2Vec3();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_df2 = new b2Vec2();\r\n// A velocity based solver computes reaction forces(impulses) using the velocity constraint solver.Under this context,\r\n// the position solver is not there to resolve forces.It is only there to cope with integration error.\r\n//\r\n// Therefore, the pseudo impulses in the position solver do not have any physical meaning.Thus it is okay if they suck.\r\n//\r\n// We could take the active state from the velocity solver.However, the joint might push past the limit when the velocity\r\n// solver indicates the limit is inactive.\r\nb2PrismaticJoint.SolvePositionConstraints_s_d = new b2Vec2();\r\nb2PrismaticJoint.SolvePositionConstraints_s_impulse = new b2Vec3();\r\nb2PrismaticJoint.SolvePositionConstraints_s_impulse1 = new b2Vec2();\r\nb2PrismaticJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_pA = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_pB = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_d = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_axis = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert, b2_epsilon } from \"../../Common/b2Settings\";\r\nimport { b2_linearSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\nexport const b2_minPulleyLength = 2;\r\n/// Pulley joint definition. This requires two ground anchors,\r\n/// two dynamic body anchor points, and a pulley ratio.\r\nexport class b2PulleyJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_pulleyJoint);\r\n        this.groundAnchorA = new b2Vec2(-1, 1);\r\n        this.groundAnchorB = new b2Vec2(1, 1);\r\n        this.localAnchorA = new b2Vec2(-1, 0);\r\n        this.localAnchorB = new b2Vec2(1, 0);\r\n        this.lengthA = 0;\r\n        this.lengthB = 0;\r\n        this.ratio = 1;\r\n        this.collideConnected = true;\r\n    }\r\n    Initialize(bA, bB, groundA, groundB, anchorA, anchorB, r) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.groundAnchorA.Copy(groundA);\r\n        this.groundAnchorB.Copy(groundB);\r\n        this.bodyA.GetLocalPoint(anchorA, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchorB, this.localAnchorB);\r\n        this.lengthA = b2Vec2.DistanceVV(anchorA, groundA);\r\n        this.lengthB = b2Vec2.DistanceVV(anchorB, groundB);\r\n        this.ratio = r;\r\n        // DEBUG: b2Assert(this.ratio > b2_epsilon);\r\n    }\r\n}\r\nexport class b2PulleyJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_groundAnchorA = new b2Vec2();\r\n        this.m_groundAnchorB = new b2Vec2();\r\n        this.m_lengthA = 0;\r\n        this.m_lengthB = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_constant = 0;\r\n        this.m_ratio = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_uA = new b2Vec2();\r\n        this.m_uB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_groundAnchorA.Copy(b2Maybe(def.groundAnchorA, new b2Vec2(-1, 1)));\r\n        this.m_groundAnchorB.Copy(b2Maybe(def.groundAnchorB, new b2Vec2(1, 0)));\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, new b2Vec2(-1, 0)));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, new b2Vec2(1, 0)));\r\n        this.m_lengthA = b2Maybe(def.lengthA, 0);\r\n        this.m_lengthB = b2Maybe(def.lengthB, 0);\r\n        // DEBUG: b2Assert(b2Maybe(def.ratio, 1) !== 0);\r\n        this.m_ratio = b2Maybe(def.ratio, 1);\r\n        this.m_constant = b2Maybe(def.lengthA, 0) + this.m_ratio * b2Maybe(def.lengthB, 0);\r\n        this.m_impulse = 0;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // Get the pulley axes.\r\n        // m_uA = cA + m_rA - m_groundAnchorA;\r\n        this.m_uA.Copy(cA).SelfAdd(this.m_rA).SelfSub(this.m_groundAnchorA);\r\n        // m_uB = cB + m_rB - m_groundAnchorB;\r\n        this.m_uB.Copy(cB).SelfAdd(this.m_rB).SelfSub(this.m_groundAnchorB);\r\n        const lengthA = this.m_uA.Length();\r\n        const lengthB = this.m_uB.Length();\r\n        if (lengthA > 10 * b2_linearSlop) {\r\n            this.m_uA.SelfMul(1 / lengthA);\r\n        }\r\n        else {\r\n            this.m_uA.SetZero();\r\n        }\r\n        if (lengthB > 10 * b2_linearSlop) {\r\n            this.m_uB.SelfMul(1 / lengthB);\r\n        }\r\n        else {\r\n            this.m_uB.SetZero();\r\n        }\r\n        // Compute effective mass.\r\n        const ruA = b2Vec2.CrossVV(this.m_rA, this.m_uA);\r\n        const ruB = b2Vec2.CrossVV(this.m_rB, this.m_uB);\r\n        const mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n        const mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n        this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\r\n        if (this.m_mass > 0) {\r\n            this.m_mass = 1 / this.m_mass;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support variable time steps.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // Warm starting.\r\n            // b2Vec2 PA = -(m_impulse) * m_uA;\r\n            const PA = b2Vec2.MulSV(-(this.m_impulse), this.m_uA, b2PulleyJoint.InitVelocityConstraints_s_PA);\r\n            // b2Vec2 PB = (-m_ratio * m_impulse) * m_uB;\r\n            const PB = b2Vec2.MulSV((-this.m_ratio * this.m_impulse), this.m_uB, b2PulleyJoint.InitVelocityConstraints_s_PB);\r\n            // vA += m_invMassA * PA;\r\n            vA.SelfMulAdd(this.m_invMassA, PA);\r\n            wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n            // vB += m_invMassB * PB;\r\n            vB.SelfMulAdd(this.m_invMassB, PB);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2PulleyJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2PulleyJoint.SolveVelocityConstraints_s_vpB);\r\n        const Cdot = -b2Vec2.DotVV(this.m_uA, vpA) - this.m_ratio * b2Vec2.DotVV(this.m_uB, vpB);\r\n        const impulse = -this.m_mass * Cdot;\r\n        this.m_impulse += impulse;\r\n        // b2Vec2 PA = -impulse * m_uA;\r\n        const PA = b2Vec2.MulSV(-impulse, this.m_uA, b2PulleyJoint.SolveVelocityConstraints_s_PA);\r\n        // b2Vec2 PB = -m_ratio * impulse * m_uB;\r\n        const PB = b2Vec2.MulSV(-this.m_ratio * impulse, this.m_uB, b2PulleyJoint.SolveVelocityConstraints_s_PB);\r\n        // vA += m_invMassA * PA;\r\n        vA.SelfMulAdd(this.m_invMassA, PA);\r\n        wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n        // vB += m_invMassB * PB;\r\n        vB.SelfMulAdd(this.m_invMassB, PB);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // Get the pulley axes.\r\n        // b2Vec2 uA = cA + rA - m_groundAnchorA;\r\n        const uA = this.m_uA.Copy(cA).SelfAdd(rA).SelfSub(this.m_groundAnchorA);\r\n        // b2Vec2 uB = cB + rB - m_groundAnchorB;\r\n        const uB = this.m_uB.Copy(cB).SelfAdd(rB).SelfSub(this.m_groundAnchorB);\r\n        const lengthA = uA.Length();\r\n        const lengthB = uB.Length();\r\n        if (lengthA > 10 * b2_linearSlop) {\r\n            uA.SelfMul(1 / lengthA);\r\n        }\r\n        else {\r\n            uA.SetZero();\r\n        }\r\n        if (lengthB > 10 * b2_linearSlop) {\r\n            uB.SelfMul(1 / lengthB);\r\n        }\r\n        else {\r\n            uB.SetZero();\r\n        }\r\n        // Compute effective mass.\r\n        const ruA = b2Vec2.CrossVV(rA, uA);\r\n        const ruB = b2Vec2.CrossVV(rB, uB);\r\n        const mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n        const mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n        let mass = mA + this.m_ratio * this.m_ratio * mB;\r\n        if (mass > 0) {\r\n            mass = 1 / mass;\r\n        }\r\n        const C = this.m_constant - lengthA - this.m_ratio * lengthB;\r\n        const linearError = b2Abs(C);\r\n        const impulse = -mass * C;\r\n        // b2Vec2 PA = -impulse * uA;\r\n        const PA = b2Vec2.MulSV(-impulse, uA, b2PulleyJoint.SolvePositionConstraints_s_PA);\r\n        // b2Vec2 PB = -m_ratio * impulse * uB;\r\n        const PB = b2Vec2.MulSV(-this.m_ratio * impulse, uB, b2PulleyJoint.SolvePositionConstraints_s_PB);\r\n        // cA += m_invMassA * PA;\r\n        cA.SelfMulAdd(this.m_invMassA, PA);\r\n        aA += this.m_invIA * b2Vec2.CrossVV(rA, PA);\r\n        // cB += m_invMassB * PB;\r\n        cB.SelfMulAdd(this.m_invMassB, PB);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, PB);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return linearError < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P = m_impulse * m_uB;\r\n        // return inv_dt * P;\r\n        out.x = inv_dt * this.m_impulse * this.m_uB.x;\r\n        out.y = inv_dt * this.m_impulse * this.m_uB.y;\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetGroundAnchorA() {\r\n        return this.m_groundAnchorA;\r\n    }\r\n    GetGroundAnchorB() {\r\n        return this.m_groundAnchorB;\r\n    }\r\n    GetLengthA() {\r\n        return this.m_lengthA;\r\n    }\r\n    GetLengthB() {\r\n        return this.m_lengthB;\r\n    }\r\n    GetRatio() {\r\n        return this.m_ratio;\r\n    }\r\n    GetCurrentLengthA() {\r\n        // b2Vec2 p = m_bodyA->GetWorldPoint(m_localAnchorA);\r\n        // b2Vec2 s = m_groundAnchorA;\r\n        // b2Vec2 d = p - s;\r\n        // return d.Length();\r\n        const p = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PulleyJoint.GetCurrentLengthA_s_p);\r\n        const s = this.m_groundAnchorA;\r\n        return b2Vec2.DistanceVV(p, s);\r\n    }\r\n    GetCurrentLengthB() {\r\n        // b2Vec2 p = m_bodyB->GetWorldPoint(m_localAnchorB);\r\n        // b2Vec2 s = m_groundAnchorB;\r\n        // b2Vec2 d = p - s;\r\n        // return d.Length();\r\n        const p = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PulleyJoint.GetCurrentLengthB_s_p);\r\n        const s = this.m_groundAnchorB;\r\n        return b2Vec2.DistanceVV(p, s);\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2PulleyJointDef = new b2PulleyJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.groundAnchorA.Set(%.15f, %.15f);\\n\", this.m_groundAnchorA.x, this.m_groundAnchorA.y);\r\n        log(\"  jd.groundAnchorB.Set(%.15f, %.15f);\\n\", this.m_groundAnchorB.x, this.m_groundAnchorB.y);\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.lengthA = %.15f;\\n\", this.m_lengthA);\r\n        log(\"  jd.lengthB = %.15f;\\n\", this.m_lengthB);\r\n        log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_groundAnchorA.SelfSub(newOrigin);\r\n        this.m_groundAnchorB.SelfSub(newOrigin);\r\n    }\r\n}\r\nb2PulleyJoint.InitVelocityConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.InitVelocityConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.SolvePositionConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.SolvePositionConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.GetCurrentLengthA_s_p = new b2Vec2();\r\nb2PulleyJoint.GetCurrentLengthB_s_p = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_angularSlop, b2_maxAngularCorrection, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Mat22, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Revolute joint definition. This requires defining an\r\n/// anchor point where the bodies are joined. The definition\r\n/// uses local anchor points so that the initial configuration\r\n/// can violate the constraint slightly. You also need to\r\n/// specify the initial relative angle for joint limits. This\r\n/// helps when saving and loading a game.\r\n/// The local anchor points are measured from the body's origin\r\n/// rather than the center of mass because:\r\n/// 1. you might not know where the center of mass will be.\r\n/// 2. if you add/remove shapes from a body and recompute the mass,\r\n///    the joints will be broken.\r\nexport class b2RevoluteJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_revoluteJoint);\r\n        this.localAnchorA = new b2Vec2(0, 0);\r\n        this.localAnchorB = new b2Vec2(0, 0);\r\n        this.referenceAngle = 0;\r\n        this.enableLimit = false;\r\n        this.lowerAngle = 0;\r\n        this.upperAngle = 0;\r\n        this.enableMotor = false;\r\n        this.motorSpeed = 0;\r\n        this.maxMotorTorque = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2RevoluteJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_impulse = new b2Vec3();\r\n        this.m_motorImpulse = 0;\r\n        this.m_enableMotor = false;\r\n        this.m_maxMotorTorque = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableLimit = false;\r\n        this.m_referenceAngle = 0;\r\n        this.m_lowerAngle = 0;\r\n        this.m_upperAngle = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = new b2Mat33(); // effective mass for point-to-point constraint.\r\n        this.m_motorMass = 0; // effective mass for motor/limit angular constraint.\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n        this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\r\n        this.m_impulse.SetZero();\r\n        this.m_motorImpulse = 0;\r\n        this.m_lowerAngle = b2Maybe(def.lowerAngle, 0);\r\n        this.m_upperAngle = b2Maybe(def.upperAngle, 0);\r\n        this.m_maxMotorTorque = b2Maybe(def.maxMotorTorque, 0);\r\n        this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\r\n        this.m_enableLimit = b2Maybe(def.enableLimit, false);\r\n        this.m_enableMotor = b2Maybe(def.enableMotor, false);\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const fixedRotation = (iA + iB === 0);\r\n        this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\r\n        this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\r\n        this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\r\n        this.m_mass.ex.y = this.m_mass.ey.x;\r\n        this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\r\n        this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\r\n        this.m_mass.ex.z = this.m_mass.ez.x;\r\n        this.m_mass.ey.z = this.m_mass.ez.y;\r\n        this.m_mass.ez.z = iA + iB;\r\n        this.m_motorMass = iA + iB;\r\n        if (this.m_motorMass > 0) {\r\n            this.m_motorMass = 1 / this.m_motorMass;\r\n        }\r\n        if (!this.m_enableMotor || fixedRotation) {\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (this.m_enableLimit && !fixedRotation) {\r\n            const jointAngle = aB - aA - this.m_referenceAngle;\r\n            if (b2Abs(this.m_upperAngle - this.m_lowerAngle) < 2 * b2_angularSlop) {\r\n                this.m_limitState = b2LimitState.e_equalLimits;\r\n            }\r\n            else if (jointAngle <= this.m_lowerAngle) {\r\n                if (this.m_limitState !== b2LimitState.e_atLowerLimit) {\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                this.m_limitState = b2LimitState.e_atLowerLimit;\r\n            }\r\n            else if (jointAngle >= this.m_upperAngle) {\r\n                if (this.m_limitState !== b2LimitState.e_atUpperLimit) {\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                this.m_limitState = b2LimitState.e_atUpperLimit;\r\n            }\r\n            else {\r\n                this.m_limitState = b2LimitState.e_inactiveLimit;\r\n                this.m_impulse.z = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P(m_impulse.x, m_impulse.y);\r\n            const P = b2RevoluteJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const fixedRotation = (iA + iB === 0);\r\n        // Solve motor constraint.\r\n        if (this.m_enableMotor && this.m_limitState !== b2LimitState.e_equalLimits && !fixedRotation) {\r\n            const Cdot = wB - wA - this.m_motorSpeed;\r\n            let impulse = -this.m_motorMass * Cdot;\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorTorque;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve limit constraint.\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit && !fixedRotation) {\r\n            // b2Vec2 Cdot1 = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2RevoluteJoint.SolveVelocityConstraints_s_Cdot1);\r\n            const Cdot2 = wB - wA;\r\n            // b2Vec3 Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 impulse = -this.m_mass.Solve33(Cdot);\r\n            const impulse_v3 = this.m_mass.Solve33(Cdot1.x, Cdot1.y, Cdot2, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v3).SelfNeg();\r\n            if (this.m_limitState === b2LimitState.e_equalLimits) {\r\n                this.m_impulse.SelfAdd(impulse_v3);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                const newImpulse = this.m_impulse.z + impulse_v3.z;\r\n                if (newImpulse < 0) {\r\n                    // b2Vec2 rhs = -Cdot1 + m_impulse.z * b2Vec2(m_mass.ez.x, m_mass.ez.y);\r\n                    const rhs_x = -Cdot1.x + this.m_impulse.z * this.m_mass.ez.x;\r\n                    const rhs_y = -Cdot1.y + this.m_impulse.z * this.m_mass.ez.y;\r\n                    const reduced_v2 = this.m_mass.Solve22(rhs_x, rhs_y, b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2);\r\n                    impulse_v3.x = reduced_v2.x;\r\n                    impulse_v3.y = reduced_v2.y;\r\n                    impulse_v3.z = -this.m_impulse.z;\r\n                    this.m_impulse.x += reduced_v2.x;\r\n                    this.m_impulse.y += reduced_v2.y;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                else {\r\n                    this.m_impulse.SelfAdd(impulse_v3);\r\n                }\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                const newImpulse = this.m_impulse.z + impulse_v3.z;\r\n                if (newImpulse > 0) {\r\n                    // b2Vec2 rhs = -Cdot1 + m_impulse.z * b2Vec2(m_mass.ez.x, m_mass.ez.y);\r\n                    const rhs_x = -Cdot1.x + this.m_impulse.z * this.m_mass.ez.x;\r\n                    const rhs_y = -Cdot1.y + this.m_impulse.z * this.m_mass.ez.y;\r\n                    const reduced_v2 = this.m_mass.Solve22(rhs_x, rhs_y, b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2);\r\n                    impulse_v3.x = reduced_v2.x;\r\n                    impulse_v3.y = reduced_v2.y;\r\n                    impulse_v3.z = -this.m_impulse.z;\r\n                    this.m_impulse.x += reduced_v2.x;\r\n                    this.m_impulse.y += reduced_v2.y;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                else {\r\n                    this.m_impulse.SelfAdd(impulse_v3);\r\n                }\r\n            }\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2RevoluteJoint.SolveVelocityConstraints_s_P.Set(impulse_v3.x, impulse_v3.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse_v3.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse_v3.z);\r\n        }\r\n        else {\r\n            // Solve point-to-point constraint\r\n            // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot_v2 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = m_mass.Solve22(-Cdot);\r\n            const impulse_v2 = this.m_mass.Solve22(-Cdot_v2.x, -Cdot_v2.y, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2);\r\n            this.m_impulse.x += impulse_v2.x;\r\n            this.m_impulse.y += impulse_v2.y;\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulse_v2);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, impulse_v2);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulse_v2);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, impulse_v2);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        let angularError = 0;\r\n        let positionError = 0;\r\n        const fixedRotation = (this.m_invIA + this.m_invIB === 0);\r\n        // Solve angular limit constraint.\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit && !fixedRotation) {\r\n            const angle = aB - aA - this.m_referenceAngle;\r\n            let limitImpulse = 0;\r\n            if (this.m_limitState === b2LimitState.e_equalLimits) {\r\n                // Prevent large angular corrections\r\n                const C = b2Clamp(angle - this.m_lowerAngle, -b2_maxAngularCorrection, b2_maxAngularCorrection);\r\n                limitImpulse = -this.m_motorMass * C;\r\n                angularError = b2Abs(C);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                let C = angle - this.m_lowerAngle;\r\n                angularError = -C;\r\n                // Prevent large angular corrections and allow some slop.\r\n                C = b2Clamp(C + b2_angularSlop, -b2_maxAngularCorrection, 0);\r\n                limitImpulse = -this.m_motorMass * C;\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                let C = angle - this.m_upperAngle;\r\n                angularError = C;\r\n                // Prevent large angular corrections and allow some slop.\r\n                C = b2Clamp(C - b2_angularSlop, 0, b2_maxAngularCorrection);\r\n                limitImpulse = -this.m_motorMass * C;\r\n            }\r\n            aA -= this.m_invIA * limitImpulse;\r\n            aB += this.m_invIB * limitImpulse;\r\n        }\r\n        // Solve point-to-point constraint.\r\n        {\r\n            qA.SetAngle(aA);\r\n            qB.SetAngle(aB);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n            b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n            b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n            // b2Vec2 C = cB + rB - cA - rA;\r\n            const C_v2 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2RevoluteJoint.SolvePositionConstraints_s_C_v2);\r\n            // positionError = C.Length();\r\n            positionError = C_v2.Length();\r\n            const mA = this.m_invMassA, mB = this.m_invMassB;\r\n            const iA = this.m_invIA, iB = this.m_invIB;\r\n            const K = this.m_K;\r\n            K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n            K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n            K.ey.x = K.ex.y;\r\n            K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n            // b2Vec2 impulse = -K.Solve(C);\r\n            const impulse = K.Solve(C_v2.x, C_v2.y, b2RevoluteJoint.SolvePositionConstraints_s_impulse).SelfNeg();\r\n            // cA -= mA * impulse;\r\n            cA.SelfMulSub(mA, impulse);\r\n            aA -= iA * b2Vec2.CrossVV(rA, impulse);\r\n            // cB += mB * impulse;\r\n            cB.SelfMulAdd(mB, impulse);\r\n            aB += iB * b2Vec2.CrossVV(rB, impulse);\r\n        }\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\r\n        // return inv_dt * P;\r\n        out.x = inv_dt * this.m_impulse.x;\r\n        out.y = inv_dt * this.m_impulse.y;\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.z;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    GetJointAngle() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_sweep.a - bA->this.m_sweep.a - this.m_referenceAngle;\r\n        return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;\r\n    }\r\n    GetJointSpeed() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_angularVelocity - bA->this.m_angularVelocity;\r\n        return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        if (flag !== this.m_enableMotor) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableMotor = flag;\r\n        }\r\n    }\r\n    GetMotorTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    SetMaxMotorTorque(torque) {\r\n        if (torque !== this.m_maxMotorTorque) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_maxMotorTorque = torque;\r\n        }\r\n    }\r\n    GetMaxMotorTorque() { return this.m_maxMotorTorque; }\r\n    IsLimitEnabled() {\r\n        return this.m_enableLimit;\r\n    }\r\n    EnableLimit(flag) {\r\n        if (flag !== this.m_enableLimit) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableLimit = flag;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    GetLowerLimit() {\r\n        return this.m_lowerAngle;\r\n    }\r\n    GetUpperLimit() {\r\n        return this.m_upperAngle;\r\n    }\r\n    SetLimits(lower, upper) {\r\n        if (lower !== this.m_lowerAngle || upper !== this.m_upperAngle) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_impulse.z = 0;\r\n            this.m_lowerAngle = lower;\r\n            this.m_upperAngle = upper;\r\n        }\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        if (speed !== this.m_motorSpeed) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_motorSpeed = speed;\r\n        }\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2RevoluteJointDef = new b2RevoluteJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.lowerAngle = %.15f;\\n\", this.m_lowerAngle);\r\n        log(\"  jd.upperAngle = %.15f;\\n\", this.m_upperAngle);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2RevoluteJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_impulse_v3 = new b2Vec3();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolvePositionConstraints_s_C_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolvePositionConstraints_s_impulse = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxLinearCorrection, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Min, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Rope joint definition. This requires two body anchor points and\r\n/// a maximum lengths.\r\n/// Note: by default the connected objects will not collide.\r\n/// see collideConnected in b2JointDef.\r\nexport class b2RopeJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_ropeJoint);\r\n        this.localAnchorA = new b2Vec2(-1, 0);\r\n        this.localAnchorB = new b2Vec2(1, 0);\r\n        this.maxLength = 0;\r\n    }\r\n}\r\nexport class b2RopeJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_maxLength = 0;\r\n        this.m_length = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_u = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_state = b2LimitState.e_inactiveLimit;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, new b2Vec2(-1, 0)));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, new b2Vec2(1, 0)));\r\n        this.m_maxLength = b2Maybe(def.maxLength, 0);\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // this.m_rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // this.m_rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // this.m_u = cB + this.m_rB - cA - this.m_rA;\r\n        this.m_u.Copy(cB).SelfAdd(this.m_rB).SelfSub(cA).SelfSub(this.m_rA);\r\n        this.m_length = this.m_u.Length();\r\n        const C = this.m_length - this.m_maxLength;\r\n        if (C > 0) {\r\n            this.m_state = b2LimitState.e_atUpperLimit;\r\n        }\r\n        else {\r\n            this.m_state = b2LimitState.e_inactiveLimit;\r\n        }\r\n        if (this.m_length > b2_linearSlop) {\r\n            this.m_u.SelfMul(1 / this.m_length);\r\n        }\r\n        else {\r\n            this.m_u.SetZero();\r\n            this.m_mass = 0;\r\n            this.m_impulse = 0;\r\n            return;\r\n        }\r\n        // Compute effective mass.\r\n        const crA = b2Vec2.CrossVV(this.m_rA, this.m_u);\r\n        const crB = b2Vec2.CrossVV(this.m_rB, this.m_u);\r\n        const invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB + this.m_invIB * crB * crB;\r\n        this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        if (data.step.warmStarting) {\r\n            // Scale the impulse to support a variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_u;\r\n            const P = b2Vec2.MulSV(this.m_impulse, this.m_u, b2RopeJoint.InitVelocityConstraints_s_P);\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Cdot = dot(u, v + cross(w, r))\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2RopeJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2RopeJoint.SolveVelocityConstraints_s_vpB);\r\n        // float32 C = m_length - m_maxLength;\r\n        const C = this.m_length - this.m_maxLength;\r\n        // float32 Cdot = b2Dot(m_u, vpB - vpA);\r\n        let Cdot = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\r\n        // Predictive constraint.\r\n        if (C < 0) {\r\n            Cdot += data.step.inv_dt * C;\r\n        }\r\n        let impulse = -this.m_mass * Cdot;\r\n        const oldImpulse = this.m_impulse;\r\n        this.m_impulse = b2Min(0, this.m_impulse + impulse);\r\n        impulse = this.m_impulse - oldImpulse;\r\n        // b2Vec2 P = impulse * m_u;\r\n        const P = b2Vec2.MulSV(impulse, this.m_u, b2RopeJoint.SolveVelocityConstraints_s_P);\r\n        // vA -= m_invMassA * P;\r\n        vA.SelfMulSub(this.m_invMassA, P);\r\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n        // vB += m_invMassB * P;\r\n        vB.SelfMulAdd(this.m_invMassB, P);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 u = cB + rB - cA - rA;\r\n        const u = this.m_u.Copy(cB).SelfAdd(rB).SelfSub(cA).SelfSub(rA);\r\n        const length = u.Normalize();\r\n        let C = length - this.m_maxLength;\r\n        C = b2Clamp(C, 0, b2_maxLinearCorrection);\r\n        const impulse = -this.m_mass * C;\r\n        // b2Vec2 P = impulse * u;\r\n        const P = b2Vec2.MulSV(impulse, u, b2RopeJoint.SolvePositionConstraints_s_P);\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return length - this.m_maxLength < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return out.Set(inv_dt * this.m_linearImpulse.x, inv_dt * this.m_linearImpulse.y);\r\n        return b2Vec2.MulSV((inv_dt * this.m_impulse), this.m_u, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetMaxLength(length) { this.m_maxLength = length; }\r\n    GetMaxLength() {\r\n        return this.m_maxLength;\r\n    }\r\n    GetLimitState() {\r\n        return this.m_state;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2RopeJointDef = new b2RopeJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.maxLength = %.15f;\\n\", this.m_maxLength);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2RopeJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2RopeJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_linearSlop, b2_angularSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Vec2, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Weld joint definition. You need to specify local anchor points\r\n/// where they are attached and the relative body angle. The position\r\n/// of the anchor points is important for computing the reaction torque.\r\nexport class b2WeldJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_weldJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.referenceAngle = 0;\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2WeldJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_bias = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_referenceAngle = 0;\r\n        this.m_gamma = 0;\r\n        this.m_impulse = new b2Vec3(0, 0, 0);\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = new b2Mat33();\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat33();\r\n        this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n        this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n        this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\r\n        this.m_impulse.SetZero();\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\r\n        K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\r\n        K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\r\n        K.ex.y = K.ey.x;\r\n        K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\r\n        K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\r\n        K.ex.z = K.ez.x;\r\n        K.ey.z = K.ez.y;\r\n        K.ez.z = iA + iB;\r\n        if (this.m_frequencyHz > 0) {\r\n            K.GetInverse22(this.m_mass);\r\n            let invM = iA + iB;\r\n            const m = invM > 0 ? 1 / invM : 0;\r\n            const C = aB - aA - this.m_referenceAngle;\r\n            // Frequency\r\n            const omega = 2 * b2_pi * this.m_frequencyHz;\r\n            // Damping coefficient\r\n            const d = 2 * m * this.m_dampingRatio * omega;\r\n            // Spring stiffness\r\n            const k = m * omega * omega;\r\n            // magic formulas\r\n            const h = data.step.dt;\r\n            this.m_gamma = h * (d + h * k);\r\n            this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\r\n            this.m_bias = C * h * k * this.m_gamma;\r\n            invM += this.m_gamma;\r\n            this.m_mass.ez.z = invM !== 0 ? 1 / invM : 0;\r\n        }\r\n        else {\r\n            K.GetSymInverse33(this.m_mass);\r\n            this.m_gamma = 0;\r\n            this.m_bias = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            // b2Vec2 P(m_impulse.x, m_impulse.y);\r\n            const P = b2WeldJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_impulse.z);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        if (this.m_frequencyHz > 0) {\r\n            const Cdot2 = wB - wA;\r\n            const impulse2 = -this.m_mass.ez.z * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z);\r\n            this.m_impulse.z += impulse2;\r\n            wA -= iA * impulse2;\r\n            wB += iB * impulse2;\r\n            // b2Vec2 Cdot1 = vB + b2Vec2.CrossSV(wB, this.m_rB) - vA - b2Vec2.CrossSV(wA, this.m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\r\n            // b2Vec2 impulse1 = -b2Mul22(m_mass, Cdot1);\r\n            const impulse1 = b2Mat33.MulM33XY(this.m_mass, Cdot1.x, Cdot1.y, b2WeldJoint.SolveVelocityConstraints_s_impulse1).SelfNeg();\r\n            this.m_impulse.x += impulse1.x;\r\n            this.m_impulse.y += impulse1.y;\r\n            // b2Vec2 P = impulse1;\r\n            const P = impulse1;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            // wA -= iA * b2Cross(m_rA, P);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            // wB += iB * b2Cross(m_rB, P);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            // b2Vec2 Cdot1 = vB + b2Cross(wB, this.m_rB) - vA - b2Cross(wA, this.m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\r\n            const Cdot2 = wB - wA;\r\n            // b2Vec3 const Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 impulse = -b2Mul(m_mass, Cdot);\r\n            const impulse = b2Mat33.MulM33XYZ(this.m_mass, Cdot1.x, Cdot1.y, Cdot2, b2WeldJoint.SolveVelocityConstraints_s_impulse).SelfNeg();\r\n            this.m_impulse.SelfAdd(impulse);\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2WeldJoint.SolveVelocityConstraints_s_P.Set(impulse.x, impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        let positionError, angularError;\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\r\n        K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\r\n        K.ez.x = -rA.y * iA - rB.y * iB;\r\n        K.ex.y = K.ey.x;\r\n        K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\r\n        K.ez.y = rA.x * iA + rB.x * iB;\r\n        K.ex.z = K.ez.x;\r\n        K.ey.z = K.ez.y;\r\n        K.ez.z = iA + iB;\r\n        if (this.m_frequencyHz > 0) {\r\n            // b2Vec2 C1 =  cB + rB - cA - rA;\r\n            const C1 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WeldJoint.SolvePositionConstraints_s_C1);\r\n            positionError = C1.Length();\r\n            angularError = 0;\r\n            // b2Vec2 P = -K.Solve22(C1);\r\n            const P = K.Solve22(C1.x, C1.y, b2WeldJoint.SolvePositionConstraints_s_P).SelfNeg();\r\n            // cA -= mA * P;\r\n            cA.SelfMulSub(mA, P);\r\n            aA -= iA * b2Vec2.CrossVV(rA, P);\r\n            // cB += mB * P;\r\n            cB.SelfMulAdd(mB, P);\r\n            aB += iB * b2Vec2.CrossVV(rB, P);\r\n        }\r\n        else {\r\n            // b2Vec2 C1 =  cB + rB - cA - rA;\r\n            const C1 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WeldJoint.SolvePositionConstraints_s_C1);\r\n            const C2 = aB - aA - this.m_referenceAngle;\r\n            positionError = C1.Length();\r\n            angularError = b2Abs(C2);\r\n            // b2Vec3 C(C1.x, C1.y, C2);\r\n            // b2Vec3 impulse = -K.Solve33(C);\r\n            const impulse = K.Solve33(C1.x, C1.y, C2, b2WeldJoint.SolvePositionConstraints_s_impulse).SelfNeg();\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2WeldJoint.SolvePositionConstraints_s_P.Set(impulse.x, impulse.y);\r\n            // cA -= mA * P;\r\n            cA.SelfMulSub(mA, P);\r\n            aA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\r\n            // cB += mB * P;\r\n            cB.SelfMulAdd(mB, P);\r\n            aB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\r\n        }\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\r\n        // return inv_dt * P;\r\n        out.x = inv_dt * this.m_impulse.x;\r\n        out.y = inv_dt * this.m_impulse.y;\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.z;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    SetFrequency(hz) { this.m_frequencyHz = hz; }\r\n    GetFrequency() { return this.m_frequencyHz; }\r\n    SetDampingRatio(ratio) { this.m_dampingRatio = ratio; }\r\n    GetDampingRatio() { return this.m_dampingRatio; }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2WeldJointDef = new b2WeldJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2WeldJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_impulse1 = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_impulse = new b2Vec3();\r\nb2WeldJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_C1 = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_impulse = new b2Vec3();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2_pi, b2_linearSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Wheel joint definition. This requires defining a line of\r\n/// motion using an axis and an anchor point. The definition uses local\r\n/// anchor points and a local axis so that the initial configuration\r\n/// can violate the constraint slightly. The joint translation is zero\r\n/// when the local anchor points coincide in world space. Using local\r\n/// anchors and a local axis helps when saving and loading a game.\r\nexport class b2WheelJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_wheelJoint);\r\n        this.localAnchorA = new b2Vec2(0, 0);\r\n        this.localAnchorB = new b2Vec2(0, 0);\r\n        this.localAxisA = new b2Vec2(1, 0);\r\n        this.enableMotor = false;\r\n        this.maxMotorTorque = 0;\r\n        this.motorSpeed = 0;\r\n        this.frequencyHz = 2;\r\n        this.dampingRatio = 0.7;\r\n    }\r\n    Initialize(bA, bB, anchor, axis) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.bodyA.GetLocalVector(axis, this.localAxisA);\r\n    }\r\n}\r\nexport class b2WheelJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localXAxisA = new b2Vec2();\r\n        this.m_localYAxisA = new b2Vec2();\r\n        this.m_impulse = 0;\r\n        this.m_motorImpulse = 0;\r\n        this.m_springImpulse = 0;\r\n        this.m_maxMotorTorque = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableMotor = false;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_ax = new b2Vec2();\r\n        this.m_ay = new b2Vec2();\r\n        this.m_sAx = 0;\r\n        this.m_sBx = 0;\r\n        this.m_sAy = 0;\r\n        this.m_sBy = 0;\r\n        this.m_mass = 0;\r\n        this.m_motorMass = 0;\r\n        this.m_springMass = 0;\r\n        this.m_bias = 0;\r\n        this.m_gamma = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_frequencyHz = b2Maybe(def.frequencyHz, 2);\r\n        this.m_dampingRatio = b2Maybe(def.dampingRatio, 0.7);\r\n        this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n        this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n        this.m_localXAxisA.Copy(b2Maybe(def.localAxisA, b2Vec2.UNITX));\r\n        b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\r\n        this.m_maxMotorTorque = b2Maybe(def.maxMotorTorque, 0);\r\n        this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\r\n        this.m_enableMotor = b2Maybe(def.enableMotor, false);\r\n        this.m_ax.SetZero();\r\n        this.m_ay.SetZero();\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    GetMaxMotorTorque() {\r\n        return this.m_maxMotorTorque;\r\n    }\r\n    SetSpringFrequencyHz(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetSpringFrequencyHz() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetSpringDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetSpringDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective masses.\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = cB + rB - cA - rA;\r\n        const d = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WheelJoint.InitVelocityConstraints_s_d);\r\n        // Point to line constraint\r\n        {\r\n            // m_ay = b2Mul(qA, m_localYAxisA);\r\n            b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\r\n            // m_sAy = b2Cross(d + rA, m_ay);\r\n            this.m_sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ay);\r\n            // m_sBy = b2Cross(rB, m_ay);\r\n            this.m_sBy = b2Vec2.CrossVV(rB, this.m_ay);\r\n            this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy * this.m_sBy;\r\n            if (this.m_mass > 0) {\r\n                this.m_mass = 1 / this.m_mass;\r\n            }\r\n        }\r\n        // Spring constraint\r\n        this.m_springMass = 0;\r\n        this.m_bias = 0;\r\n        this.m_gamma = 0;\r\n        if (this.m_frequencyHz > 0) {\r\n            // m_ax = b2Mul(qA, m_localXAxisA);\r\n            b2Rot.MulRV(qA, this.m_localXAxisA, this.m_ax);\r\n            // m_sAx = b2Cross(d + rA, m_ax);\r\n            this.m_sAx = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ax);\r\n            // m_sBx = b2Cross(rB, m_ax);\r\n            this.m_sBx = b2Vec2.CrossVV(rB, this.m_ax);\r\n            const invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx * this.m_sBx;\r\n            if (invMass > 0) {\r\n                this.m_springMass = 1 / invMass;\r\n                const C = b2Vec2.DotVV(d, this.m_ax);\r\n                // Frequency\r\n                const omega = 2 * b2_pi * this.m_frequencyHz;\r\n                // Damping coefficient\r\n                const damp = 2 * this.m_springMass * this.m_dampingRatio * omega;\r\n                // Spring stiffness\r\n                const k = this.m_springMass * omega * omega;\r\n                // magic formulas\r\n                const h = data.step.dt;\r\n                this.m_gamma = h * (damp + h * k);\r\n                if (this.m_gamma > 0) {\r\n                    this.m_gamma = 1 / this.m_gamma;\r\n                }\r\n                this.m_bias = C * h * k * this.m_gamma;\r\n                this.m_springMass = invMass + this.m_gamma;\r\n                if (this.m_springMass > 0) {\r\n                    this.m_springMass = 1 / this.m_springMass;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.m_springImpulse = 0;\r\n        }\r\n        // Rotational motor\r\n        if (this.m_enableMotor) {\r\n            this.m_motorMass = iA + iB;\r\n            if (this.m_motorMass > 0) {\r\n                this.m_motorMass = 1 / this.m_motorMass;\r\n            }\r\n        }\r\n        else {\r\n            this.m_motorMass = 0;\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Account for variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            this.m_springImpulse *= data.step.dtRatio;\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_ay + m_springImpulse * m_ax;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(this.m_impulse, this.m_ay, b2Vec2.s_t0), b2Vec2.MulSV(this.m_springImpulse, this.m_ax, b2Vec2.s_t1), b2WheelJoint.InitVelocityConstraints_s_P);\r\n            // float32 LA = m_impulse * m_sAy + m_springImpulse * m_sAx + m_motorImpulse;\r\n            const LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\r\n            // float32 LB = m_impulse * m_sBy + m_springImpulse * m_sBx + m_motorImpulse;\r\n            const LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            wA -= this.m_invIA * LA;\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            wB += this.m_invIB * LB;\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n            this.m_springImpulse = 0;\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Solve spring constraint\r\n        {\r\n            const Cdot = b2Vec2.DotVV(this.m_ax, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBx * wB - this.m_sAx * wA;\r\n            const impulse = -this.m_springMass * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse);\r\n            this.m_springImpulse += impulse;\r\n            // b2Vec2 P = impulse * m_ax;\r\n            const P = b2Vec2.MulSV(impulse, this.m_ax, b2WheelJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_sAx;\r\n            const LB = impulse * this.m_sBx;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // Solve rotational motor constraint\r\n        {\r\n            const Cdot = wB - wA - this.m_motorSpeed;\r\n            let impulse = -this.m_motorMass * Cdot;\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorTorque;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve point to line constraint\r\n        {\r\n            const Cdot = b2Vec2.DotVV(this.m_ay, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBy * wB - this.m_sAy * wA;\r\n            const impulse = -this.m_mass * Cdot;\r\n            this.m_impulse += impulse;\r\n            // b2Vec2 P = impulse * m_ay;\r\n            const P = b2Vec2.MulSV(impulse, this.m_ay, b2WheelJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_sAy;\r\n            const LB = impulse * this.m_sBy;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = (cB - cA) + rB - rA;\r\n        const d = b2Vec2.AddVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), b2Vec2.SubVV(rB, rA, b2Vec2.s_t1), b2WheelJoint.SolvePositionConstraints_s_d);\r\n        // b2Vec2 ay = b2Mul(qA, m_localYAxisA);\r\n        const ay = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\r\n        // float32 sAy = b2Cross(d + rA, ay);\r\n        const sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), ay);\r\n        // float32 sBy = b2Cross(rB, ay);\r\n        const sBy = b2Vec2.CrossVV(rB, ay);\r\n        // float32 C = b2Dot(d, ay);\r\n        const C = b2Vec2.DotVV(d, this.m_ay);\r\n        const k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy;\r\n        let impulse;\r\n        if (k !== 0) {\r\n            impulse = -C / k;\r\n        }\r\n        else {\r\n            impulse = 0;\r\n        }\r\n        // b2Vec2 P = impulse * ay;\r\n        const P = b2Vec2.MulSV(impulse, ay, b2WheelJoint.SolvePositionConstraints_s_P);\r\n        const LA = impulse * sAy;\r\n        const LB = impulse * sBy;\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        aA -= this.m_invIA * LA;\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        aB += this.m_invIB * LB;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return b2Abs(C) <= b2_linearSlop;\r\n    }\r\n    GetDefinition(def) {\r\n        // DEBUG: b2Assert(false); // TODO\r\n        return def;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * (m_impulse * m_ay + m_springImpulse * m_ax);\r\n        out.x = inv_dt * (this.m_impulse * this.m_ay.x + this.m_springImpulse * this.m_ax.x);\r\n        out.y = inv_dt * (this.m_impulse * this.m_ay.y + this.m_springImpulse * this.m_ax.y);\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetLocalAxisA() { return this.m_localXAxisA; }\r\n    GetJointTranslation() {\r\n        return this.GetPrismaticJointTranslation();\r\n    }\r\n    GetJointLinearSpeed() {\r\n        return this.GetPrismaticJointSpeed();\r\n    }\r\n    GetJointAngle() {\r\n        return this.GetRevoluteJointAngle();\r\n    }\r\n    GetJointAngularSpeed() {\r\n        return this.GetRevoluteJointSpeed();\r\n    }\r\n    GetPrismaticJointTranslation() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        const pA = bA.GetWorldPoint(this.m_localAnchorA, new b2Vec2());\r\n        const pB = bB.GetWorldPoint(this.m_localAnchorB, new b2Vec2());\r\n        const d = b2Vec2.SubVV(pB, pA, new b2Vec2());\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\r\n        const translation = b2Vec2.DotVV(d, axis);\r\n        return translation;\r\n    }\r\n    GetPrismaticJointSpeed() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 pA = bA->m_sweep.c + rA;\r\n        const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\r\n        // b2Vec2 pB = bB->m_sweep.c + rB;\r\n        const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\r\n        // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\r\n        const vA = bA.m_linearVelocity;\r\n        const vB = bB.m_linearVelocity;\r\n        const wA = bA.m_angularVelocity;\r\n        const wB = bB.m_angularVelocity;\r\n        // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\r\n        const speed = b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(axis, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n        return speed;\r\n    }\r\n    GetRevoluteJointAngle() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_sweep.a - bA->this.m_sweep.a;\r\n        return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a;\r\n    }\r\n    GetRevoluteJointSpeed() {\r\n        const wA = this.m_bodyA.m_angularVelocity;\r\n        const wB = this.m_bodyB.m_angularVelocity;\r\n        return wB - wA;\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        if (flag !== this.m_enableMotor) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableMotor = flag;\r\n        }\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        if (speed !== this.m_motorSpeed) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_motorSpeed = speed;\r\n        }\r\n    }\r\n    SetMaxMotorTorque(force) {\r\n        if (force !== this.m_maxMotorTorque) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_maxMotorTorque = force;\r\n        }\r\n    }\r\n    GetMotorTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2WheelJointDef = new b2WheelJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2WheelJoint.InitVelocityConstraints_s_d = new b2Vec2();\r\nb2WheelJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2WheelJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2WheelJoint.SolvePositionConstraints_s_d = new b2Vec2();\r\nb2WheelJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2Sqrt } from \"../../Common/b2Math\";\r\nimport { b2Manifold } from \"../../Collision/b2Collision\";\r\nimport { b2TestOverlapShape } from \"../../Collision/b2Collision\";\r\nimport { b2TimeOfImpact, b2TOIInput, b2TOIOutput } from \"../../Collision/b2TimeOfImpact\";\r\n/// Friction mixing law. The idea is to allow either fixture to drive the friction to zero.\r\n/// For example, anything slides on ice.\r\nexport function b2MixFriction(friction1, friction2) {\r\n    return b2Sqrt(friction1 * friction2);\r\n}\r\n/// Restitution mixing law. The idea is allow for anything to bounce off an inelastic surface.\r\n/// For example, a superball bounces on anything.\r\nexport function b2MixRestitution(restitution1, restitution2) {\r\n    return restitution1 > restitution2 ? restitution1 : restitution2;\r\n}\r\nexport class b2ContactEdge {\r\n    constructor(contact) {\r\n        this.prev = null; ///< the previous contact edge in the body's contact list\r\n        this.next = null; ///< the next contact edge in the body's contact list\r\n        this.contact = contact;\r\n    }\r\n}\r\nexport class b2Contact {\r\n    constructor() {\r\n        this.m_islandFlag = false; /// Used when crawling contact graph when forming islands.\r\n        this.m_touchingFlag = false; /// Set when the shapes are touching.\r\n        this.m_enabledFlag = false; /// This contact can be disabled (by user)\r\n        this.m_filterFlag = false; /// This contact needs filtering because a fixture filter was changed.\r\n        this.m_bulletHitFlag = false; /// This bullet contact had a TOI event\r\n        this.m_toiFlag = false; /// This contact has a valid TOI in m_toi\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_manifold = new b2Manifold(); // TODO: readonly\r\n        this.m_toiCount = 0;\r\n        this.m_toi = 0;\r\n        this.m_friction = 0;\r\n        this.m_restitution = 0;\r\n        this.m_tangentSpeed = 0;\r\n        this.m_oldManifold = new b2Manifold(); // TODO: readonly\r\n        this.m_nodeA = new b2ContactEdge(this);\r\n        this.m_nodeB = new b2ContactEdge(this);\r\n    }\r\n    GetManifold() {\r\n        return this.m_manifold;\r\n    }\r\n    GetWorldManifold(worldManifold) {\r\n        const bodyA = this.m_fixtureA.GetBody();\r\n        const bodyB = this.m_fixtureB.GetBody();\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        worldManifold.Initialize(this.m_manifold, bodyA.GetTransform(), shapeA.m_radius, bodyB.GetTransform(), shapeB.m_radius);\r\n    }\r\n    IsTouching() {\r\n        return this.m_touchingFlag;\r\n    }\r\n    SetEnabled(flag) {\r\n        this.m_enabledFlag = flag;\r\n    }\r\n    IsEnabled() {\r\n        return this.m_enabledFlag;\r\n    }\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    GetFixtureA() {\r\n        return this.m_fixtureA;\r\n    }\r\n    GetChildIndexA() {\r\n        return this.m_indexA;\r\n    }\r\n    GetFixtureB() {\r\n        return this.m_fixtureB;\r\n    }\r\n    GetChildIndexB() {\r\n        return this.m_indexB;\r\n    }\r\n    FlagForFiltering() {\r\n        this.m_filterFlag = true;\r\n    }\r\n    SetFriction(friction) {\r\n        this.m_friction = friction;\r\n    }\r\n    GetFriction() {\r\n        return this.m_friction;\r\n    }\r\n    ResetFriction() {\r\n        this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\r\n    }\r\n    SetRestitution(restitution) {\r\n        this.m_restitution = restitution;\r\n    }\r\n    GetRestitution() {\r\n        return this.m_restitution;\r\n    }\r\n    ResetRestitution() {\r\n        this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\r\n    }\r\n    SetTangentSpeed(speed) {\r\n        this.m_tangentSpeed = speed;\r\n    }\r\n    GetTangentSpeed() {\r\n        return this.m_tangentSpeed;\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        this.m_islandFlag = false;\r\n        this.m_touchingFlag = false;\r\n        this.m_enabledFlag = true;\r\n        this.m_filterFlag = false;\r\n        this.m_bulletHitFlag = false;\r\n        this.m_toiFlag = false;\r\n        this.m_fixtureA = fixtureA;\r\n        this.m_fixtureB = fixtureB;\r\n        this.m_indexA = indexA;\r\n        this.m_indexB = indexB;\r\n        this.m_manifold.pointCount = 0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        delete this.m_nodeA.contact; // = null;\r\n        this.m_nodeA.prev = null;\r\n        this.m_nodeA.next = null;\r\n        delete this.m_nodeA.other; // = null;\r\n        delete this.m_nodeB.contact; // = null;\r\n        this.m_nodeB.prev = null;\r\n        this.m_nodeB.next = null;\r\n        delete this.m_nodeB.other; // = null;\r\n        this.m_toiCount = 0;\r\n        this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\r\n        this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\r\n    }\r\n    Update(listener) {\r\n        const tManifold = this.m_oldManifold;\r\n        this.m_oldManifold = this.m_manifold;\r\n        this.m_manifold = tManifold;\r\n        // Re-enable this contact.\r\n        this.m_enabledFlag = true;\r\n        let touching = false;\r\n        const wasTouching = this.m_touchingFlag;\r\n        const sensorA = this.m_fixtureA.IsSensor();\r\n        const sensorB = this.m_fixtureB.IsSensor();\r\n        const sensor = sensorA || sensorB;\r\n        const bodyA = this.m_fixtureA.GetBody();\r\n        const bodyB = this.m_fixtureB.GetBody();\r\n        const xfA = bodyA.GetTransform();\r\n        const xfB = bodyB.GetTransform();\r\n        ///const aabbOverlap = b2TestOverlapAABB(this.m_fixtureA.GetAABB(0), this.m_fixtureB.GetAABB(0));\r\n        // Is this contact a sensor?\r\n        if (sensor) {\r\n            ///if (aabbOverlap)\r\n            ///{\r\n            const shapeA = this.m_fixtureA.GetShape();\r\n            const shapeB = this.m_fixtureB.GetShape();\r\n            touching = b2TestOverlapShape(shapeA, this.m_indexA, shapeB, this.m_indexB, xfA, xfB);\r\n            ///}\r\n            // Sensors don't generate manifolds.\r\n            this.m_manifold.pointCount = 0;\r\n        }\r\n        else {\r\n            ///if (aabbOverlap)\r\n            ///{\r\n            this.Evaluate(this.m_manifold, xfA, xfB);\r\n            touching = this.m_manifold.pointCount > 0;\r\n            // Match old contact ids to new contact ids and copy the\r\n            // stored impulses to warm start the solver.\r\n            for (let i = 0; i < this.m_manifold.pointCount; ++i) {\r\n                const mp2 = this.m_manifold.points[i];\r\n                mp2.normalImpulse = 0;\r\n                mp2.tangentImpulse = 0;\r\n                const id2 = mp2.id;\r\n                for (let j = 0; j < this.m_oldManifold.pointCount; ++j) {\r\n                    const mp1 = this.m_oldManifold.points[j];\r\n                    if (mp1.id.key === id2.key) {\r\n                        mp2.normalImpulse = mp1.normalImpulse;\r\n                        mp2.tangentImpulse = mp1.tangentImpulse;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            ///}\r\n            ///else\r\n            ///{\r\n            ///  this.m_manifold.pointCount = 0;\r\n            ///}\r\n            if (touching !== wasTouching) {\r\n                bodyA.SetAwake(true);\r\n                bodyB.SetAwake(true);\r\n            }\r\n        }\r\n        this.m_touchingFlag = touching;\r\n        if (!wasTouching && touching && listener) {\r\n            listener.BeginContact(this);\r\n        }\r\n        if (wasTouching && !touching && listener) {\r\n            listener.EndContact(this);\r\n        }\r\n        if (!sensor && touching && listener) {\r\n            listener.PreSolve(this, this.m_oldManifold);\r\n        }\r\n    }\r\n    ComputeTOI(sweepA, sweepB) {\r\n        const input = b2Contact.ComputeTOI_s_input;\r\n        input.proxyA.SetShape(this.m_fixtureA.GetShape(), this.m_indexA);\r\n        input.proxyB.SetShape(this.m_fixtureB.GetShape(), this.m_indexB);\r\n        input.sweepA.Copy(sweepA);\r\n        input.sweepB.Copy(sweepB);\r\n        input.tMax = b2_linearSlop;\r\n        const output = b2Contact.ComputeTOI_s_output;\r\n        b2TimeOfImpact(output, input);\r\n        return output.t;\r\n    }\r\n}\r\nb2Contact.ComputeTOI_s_input = new b2TOIInput();\r\nb2Contact.ComputeTOI_s_output = new b2TOIOutput();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb250YWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vQm94MkQvRHluYW1pY3MvQ29udGFjdHMvYjJDb250YWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxNQUFNLEVBQXdCLE1BQU0scUJBQXFCLENBQUM7QUFDbkUsT0FBTyxFQUFFLFVBQVUsRUFBaUQsTUFBTSw2QkFBNkIsQ0FBQztBQUN4RyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsY0FBYyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQU16RiwyRkFBMkY7QUFDM0Ysd0NBQXdDO0FBQ3hDLE1BQU0sVUFBVSxhQUFhLENBQUMsU0FBaUIsRUFBRSxTQUFpQjtJQUNoRSxPQUFPLE1BQU0sQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLENBQUM7QUFDdkMsQ0FBQztBQUVELDhGQUE4RjtBQUM5RixpREFBaUQ7QUFDakQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLFlBQW9CLEVBQUUsWUFBb0I7SUFDekUsT0FBTyxZQUFZLEdBQUcsWUFBWSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQztBQUNuRSxDQUFDO0FBRUQsTUFBTSxPQUFPLGFBQWE7SUFLeEIsWUFBWSxPQUFrQjtRQUZ2QixTQUFJLEdBQXlCLElBQUksQ0FBQyxDQUFDLHlEQUF5RDtRQUM1RixTQUFJLEdBQXlCLElBQUksQ0FBQyxDQUFDLHFEQUFxRDtRQUU3RixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQWdCLFNBQVM7SUFnQzdCO1FBL0JPLGlCQUFZLEdBQVksS0FBSyxDQUFDLENB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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideCircles } from \"../../Collision/b2CollideCircle\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2CircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2CircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA.GetType() === b2ShapeType.e_circleShape);\r\n        // DEBUG: b2Assert(shapeB.GetType() === b2ShapeType.e_circleShape);\r\n        b2CollideCircles(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaXJjbGVDb250YWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vQm94MkQvRHluYW1pY3MvQ29udGFjdHMvYjJDaXJjbGVDb250YWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBS0YsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFJbkUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUd4QyxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxTQUFTO0lBQzVDO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSxlQUFlLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFrQixFQUFFLFNBQWM7SUFDeEQsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFtQixFQUFFLE1BQWMsRUFBRSxRQUFtQixFQUFFLE1BQWM7UUFDbkYsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRU0sUUFBUSxDQUFDLFFBQW9CLEVBQUUsR0FBZ0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsbUVBQW1FO1FBQ25FLG1FQUFtRTtRQUNuRSxnQkFBZ0IsQ0FDZCxRQUFRLEVBQ1IsTUFBdUIsRUFBRSxHQUFHLEVBQzVCLE1BQXVCLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQztDQUNGIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollidePolygons } from \"../../Collision/b2CollidePolygon\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2PolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2PolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA.GetType() === b2ShapeType.e_polygonShape);\r\n        // DEBUG: b2Assert(shapeB.GetType() === b2ShapeType.e_polygonShape);\r\n        b2CollidePolygons(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQb2x5Z29uQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyUG9seWdvbkNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFLRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUlyRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxTQUFTO0lBQzdDO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSxnQkFBZ0IsRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTSxRQUFRLENBQUMsUUFBb0IsRUFBRSxHQUFnQixFQUFFLEdBQWdCO1FBQ3RFLE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxvRUFBb0U7UUFDcEUsb0VBQW9FO1FBQ3BFLGlCQUFpQixDQUNmLFFBQVEsRUFDUixNQUF3QixFQUFFLEdBQUcsRUFDN0IsTUFBd0IsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNuQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollidePolygonAndCircle } from \"../../Collision/b2CollideCircle\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2PolygonAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2PolygonAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_polygonShape);\r\n        // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA instanceof b2PolygonShape);\r\n        // DEBUG: b2Assert(shapeB instanceof b2CircleShape);\r\n        b2CollidePolygonAndCircle(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQb2x5Z29uQW5kQ2lyY2xlQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyUG9seWdvbkFuZENpcmNsZUNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFLRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUs1RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxTQUFTO0lBQ3REO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSx5QkFBeUIsRUFBRSxDQUFDO0lBQ3pDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELHNFQUFzRTtRQUN0RSxxRUFBcUU7SUFDdkUsQ0FBQztJQUVNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELHFEQUFxRDtRQUNyRCxvREFBb0Q7UUFDcEQseUJBQXlCLENBQ3ZCLFFBQVEsRUFDUixNQUF3QixFQUFFLEdBQUcsRUFDN0IsTUFBdUIsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNsQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndCircle } from \"../../Collision/b2CollideEdge\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2EdgeAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2EdgeAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_edgeShape);\r\n        // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA instanceof b2EdgeShape);\r\n        // DEBUG: b2Assert(shapeB instanceof b2CircleShape);\r\n        b2CollideEdgeAndCircle(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJFZGdlQW5kQ2lyY2xlQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyRWRnZUFuZENpcmNsZUNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFLRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUt2RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxTQUFTO0lBQ25EO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSxzQkFBc0IsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELG1FQUFtRTtRQUNuRSxxRUFBcUU7SUFDdkUsQ0FBQztJQUVNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELGtEQUFrRDtRQUNsRCxvREFBb0Q7UUFDcEQsc0JBQXNCLENBQ3BCLFFBQVEsRUFDUixNQUFxQixFQUFFLEdBQUcsRUFDMUIsTUFBdUIsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNsQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndPolygon } from \"../../Collision/b2CollideEdge\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2EdgeAndPolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2EdgeAndPolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_edgeShape);\r\n        // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_polygonShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA instanceof b2EdgeShape);\r\n        // DEBUG: b2Assert(shapeB instanceof b2PolygonShape);\r\n        b2CollideEdgeAndPolygon(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJFZGdlQW5kUG9seWdvbkNvbnRhY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9Cb3gyRC9EeW5hbWljcy9Db250YWN0cy9iMkVkZ2VBbmRQb2x5Z29uQ29udGFjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUtGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBS3hFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHeEMsTUFBTSxPQUFPLHVCQUF3QixTQUFRLFNBQVM7SUFDcEQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQWM7UUFDakMsT0FBTyxJQUFJLHVCQUF1QixFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBa0IsRUFBRSxTQUFjO0lBQ3hELENBQUM7SUFFTSxLQUFLLENBQUMsUUFBbUIsRUFBRSxNQUFjLEVBQUUsUUFBbUIsRUFBRSxNQUFjO1FBQ25GLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDaEQsbUVBQW1FO1FBQ25FLHNFQUFzRTtJQUN4RSxDQUFDO0lBRU0sUUFBUSxDQUFDLFFBQW9CLEVBQUUsR0FBZ0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsa0RBQWtEO1FBQ2xELHFEQUFxRDtRQUNyRCx1QkFBdUIsQ0FDckIsUUFBUSxFQUNSLE1BQXFCLEVBQUUsR0FBRyxFQUMxQixNQUF3QixFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ25DLENBQUM7Q0FDRiJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndCircle } from \"../../Collision/b2CollideEdge\";\r\nimport { b2EdgeShape } from \"../../Collision/Shapes/b2EdgeShape\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2ChainAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2ChainAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_chainShape);\r\n        // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA instanceof b2ChainShape);\r\n        // DEBUG: b2Assert(shapeB instanceof b2CircleShape);\r\n        const chain = shapeA;\r\n        const edge = b2ChainAndCircleContact.Evaluate_s_edge;\r\n        chain.GetChildEdge(edge, this.m_indexA);\r\n        b2CollideEdgeAndCircle(manifold, edge, xfA, shapeB, xfB);\r\n    }\r\n}\r\nb2ChainAndCircleContact.Evaluate_s_edge = new b2EdgeShape();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaGFpbkFuZENpcmNsZUNvbnRhY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9Cb3gyRC9EeW5hbWljcy9Db250YWN0cy9iMkNoYWluQW5kQ2lyY2xlQ29udGFjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUtGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBS3ZFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxTQUFTO0lBQ3BEO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSx1QkFBdUIsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELG9FQUFvRTtRQUNwRSxxRUFBcUU7SUFDdkUsQ0FBQztJQUdNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELG1EQUFtRDtRQUNuRCxvREFBb0Q7UUFDcEQsTUFBTSxLQUFLLEdBQWlCLE1BQXNCLENBQUM7UUFDbkQsTUFBTSxJQUFJLEdBQWdCLHVCQUF1QixDQUFDLGVBQWUsQ0FBQztRQUNsRSxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDeEMsc0JBQXNCLENBQ3BCLFFBQVEsRUFDUixJQUFJLEVBQUUsR0FBRyxFQUNULE1BQXVCLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7QUFiYyx1Q0FBZSxHQUFHLElBQUksV0FBVyxFQUFFLENBQUMifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndPolygon } from \"../../Collision/b2CollideEdge\";\r\nimport { b2EdgeShape } from \"../../Collision/Shapes/b2EdgeShape\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2ChainAndPolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2ChainAndPolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_chainShape);\r\n        // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_polygonShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        // DEBUG: b2Assert(shapeA instanceof b2ChainShape);\r\n        // DEBUG: b2Assert(shapeB instanceof b2PolygonShape);\r\n        const chain = shapeA;\r\n        const edge = b2ChainAndPolygonContact.Evaluate_s_edge;\r\n        chain.GetChildEdge(edge, this.m_indexA);\r\n        b2CollideEdgeAndPolygon(manifold, edge, xfA, shapeB, xfB);\r\n    }\r\n}\r\nb2ChainAndPolygonContact.Evaluate_s_edge = new b2EdgeShape();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaGFpbkFuZFBvbHlnb25Db250YWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vQm94MkQvRHluYW1pY3MvQ29udGFjdHMvYjJDaGFpbkFuZFBvbHlnb25Db250YWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBS0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFJeEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBRWpFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHeEMsTUFBTSxPQUFPLHdCQUF5QixTQUFRLFNBQVM7SUFDckQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQWM7UUFDakMsT0FBTyxJQUFJLHdCQUF3QixFQUFFLENBQUM7SUFDeEMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBa0IsRUFBRSxTQUFjO0lBQ3hELENBQUM7SUFFTSxLQUFLLENBQUMsUUFBbUIsRUFBRSxNQUFjLEVBQUUsUUFBbUIsRUFBRSxNQUFjO1FBQ25GLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDaEQsb0VBQW9FO1FBQ3BFLHNFQUFzRTtJQUN4RSxDQUFDO0lBR00sUUFBUSxDQUFDLFFBQW9CLEVBQUUsR0FBZ0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsbURBQW1EO1FBQ25ELHFEQUFxRDtRQUNyRCxNQUFNLEtBQUssR0FBaUIsTUFBc0IsQ0FBQztRQUNuRCxNQUFNLElBQUksR0FBZ0Isd0JBQXdCLENBQUMsZUFBZSxDQUFDO1FBQ25FLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4Qyx1QkFBdUIsQ0FDckIsUUFBUSxFQUNSLElBQUksRUFBRSxHQUFHLEVBQ1QsTUFBd0IsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNuQyxDQUFDOztBQWJjLHdDQUFlLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQyJ9","// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2MakeArray } from \"../../Common/b2Settings\";\r\nimport { b2ShapeType } from \"../../Collision/Shapes/b2Shape\";\r\nimport { b2CircleContact } from \"./b2CircleContact\";\r\nimport { b2PolygonContact } from \"./b2PolygonContact\";\r\nimport { b2PolygonAndCircleContact } from \"./b2PolygonAndCircleContact\";\r\nimport { b2EdgeAndCircleContact } from \"./b2EdgeAndCircleContact\";\r\nimport { b2EdgeAndPolygonContact } from \"./b2EdgeAndPolygonContact\";\r\nimport { b2ChainAndCircleContact } from \"./b2ChainAndCircleContact\";\r\nimport { b2ChainAndPolygonContact } from \"./b2ChainAndPolygonContact\";\r\nexport class b2ContactRegister {\r\n    constructor() {\r\n        // public pool: b2Contact[];\r\n        this.createFcn = null;\r\n        this.destroyFcn = null;\r\n        this.primary = false;\r\n    }\r\n}\r\nexport class b2ContactFactory {\r\n    constructor(allocator) {\r\n        this.m_allocator = null;\r\n        this.m_allocator = allocator;\r\n        this.InitializeRegisters();\r\n    }\r\n    AddType(createFcn, destroyFcn, type1, type2) {\r\n        const pool = b2MakeArray(256, (i) => createFcn(this.m_allocator)); // TODO: b2Settings\r\n        function poolCreateFcn(allocator) {\r\n            // if (pool.length > 0) {\r\n            //   return pool.pop();\r\n            // }\r\n            // return createFcn(allocator);\r\n            return pool.pop() || createFcn(allocator);\r\n        }\r\n        function poolDestroyFcn(contact, allocator) {\r\n            pool.push(contact);\r\n        }\r\n        // this.m_registers[type1][type2].pool = pool;\r\n        this.m_registers[type1][type2].createFcn = poolCreateFcn;\r\n        this.m_registers[type1][type2].destroyFcn = poolDestroyFcn;\r\n        this.m_registers[type1][type2].primary = true;\r\n        if (type1 !== type2) {\r\n            // this.m_registers[type2][type1].pool = pool;\r\n            this.m_registers[type2][type1].createFcn = poolCreateFcn;\r\n            this.m_registers[type2][type1].destroyFcn = poolDestroyFcn;\r\n            this.m_registers[type2][type1].primary = false;\r\n        }\r\n        /*\r\n        this.m_registers[type1][type2].createFcn = createFcn;\r\n        this.m_registers[type1][type2].destroyFcn = destroyFcn;\r\n        this.m_registers[type1][type2].primary = true;\r\n    \r\n        if (type1 !== type2) {\r\n          this.m_registers[type2][type1].createFcn = createFcn;\r\n          this.m_registers[type2][type1].destroyFcn = destroyFcn;\r\n          this.m_registers[type2][type1].primary = false;\r\n        }\r\n        */\r\n    }\r\n    InitializeRegisters() {\r\n        this.m_registers = [ /*b2ShapeType.e_shapeTypeCount*/];\r\n        for (let i = 0; i < b2ShapeType.e_shapeTypeCount; i++) {\r\n            this.m_registers[i] = [ /*b2ShapeType.e_shapeTypeCount*/];\r\n            for (let j = 0; j < b2ShapeType.e_shapeTypeCount; j++) {\r\n                this.m_registers[i][j] = new b2ContactRegister();\r\n            }\r\n        }\r\n        this.AddType(b2CircleContact.Create, b2CircleContact.Destroy, b2ShapeType.e_circleShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2PolygonAndCircleContact.Create, b2PolygonAndCircleContact.Destroy, b2ShapeType.e_polygonShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2PolygonContact.Create, b2PolygonContact.Destroy, b2ShapeType.e_polygonShape, b2ShapeType.e_polygonShape);\r\n        this.AddType(b2EdgeAndCircleContact.Create, b2EdgeAndCircleContact.Destroy, b2ShapeType.e_edgeShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2EdgeAndPolygonContact.Create, b2EdgeAndPolygonContact.Destroy, b2ShapeType.e_edgeShape, b2ShapeType.e_polygonShape);\r\n        this.AddType(b2ChainAndCircleContact.Create, b2ChainAndCircleContact.Destroy, b2ShapeType.e_chainShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2ChainAndPolygonContact.Create, b2ChainAndPolygonContact.Destroy, b2ShapeType.e_chainShape, b2ShapeType.e_polygonShape);\r\n    }\r\n    Create(fixtureA, indexA, fixtureB, indexB) {\r\n        const type1 = fixtureA.GetType();\r\n        const type2 = fixtureB.GetType();\r\n        // DEBUG: b2Assert(0 <= type1 && type1 < b2ShapeType.e_shapeTypeCount);\r\n        // DEBUG: b2Assert(0 <= type2 && type2 < b2ShapeType.e_shapeTypeCount);\r\n        const reg = this.m_registers[type1][type2];\r\n        if (reg.createFcn) {\r\n            const c = reg.createFcn(this.m_allocator);\r\n            if (reg.primary) {\r\n                c.Reset(fixtureA, indexA, fixtureB, indexB);\r\n            }\r\n            else {\r\n                c.Reset(fixtureB, indexB, fixtureA, indexA);\r\n            }\r\n            return c;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    Destroy(contact) {\r\n        const fixtureA = contact.m_fixtureA;\r\n        const fixtureB = contact.m_fixtureB;\r\n        if (contact.m_manifold.pointCount > 0 &&\r\n            !fixtureA.IsSensor() &&\r\n            !fixtureB.IsSensor()) {\r\n            fixtureA.GetBody().SetAwake(true);\r\n            fixtureB.GetBody().SetAwake(true);\r\n        }\r\n        const typeA = fixtureA.GetType();\r\n        const typeB = fixtureB.GetType();\r\n        // DEBUG: b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\r\n        // DEBUG: b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\r\n        const reg = this.m_registers[typeA][typeB];\r\n        if (reg.destroyFcn) {\r\n            reg.destroyFcn(contact, this.m_allocator);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb250YWN0RmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyQ29udGFjdEZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFN0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3RELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBR3RFLE1BQU0sT0FBTyxpQkFBaUI7SUFBOUI7UUFDRSw0QkFBNEI7UUFDckIsY0FBUyxHQUEyQyxJQUFJLENBQUM7UUFDekQsZUFBVSxHQUEwRCxJQUFJLENBQUM7UUFDekUsWUFBTyxHQUFZLEtBQUssQ0FBQztJQUNsQyxDQUFDO0NBQUE7QUFFRCxNQUFNLE9BQU8sZ0JBQWdCO0lBSTNCLFlBQVksU0FBYztRQUhuQixnQkFBVyxHQUFRLElBQUksQ0FBQztRQUk3QixJQUFJLENBQUMsV0FBVyxHQUFHLFNBQVMsQ0FBQztRQUM3QixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUM3QixDQUFDO0lBRU8sT0FBTyxDQUFDLFNBQXdDLEVBQUUsVUFBd0QsRUFBRSxLQUFrQixFQUFFLEtBQWtCO1FBQ3hK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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_maxManifoldPoints, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2BodyType } from \"./b2Body\";\r\n// #endif\r\n/// Joints and fixtures are destroyed when their associated\r\n/// body is destroyed. Implement this listener so that you\r\n/// may nullify references to these joints and shapes.\r\nexport class b2DestructionListener {\r\n    /// Called when any joint is about to be destroyed due\r\n    /// to the destruction of one of its attached bodies.\r\n    SayGoodbyeJoint(joint) { }\r\n    /// Called when any fixture is about to be destroyed due\r\n    /// to the destruction of its parent body.\r\n    SayGoodbyeFixture(fixture) { }\r\n    // #if B2_ENABLE_PARTICLE\r\n    /// Called when any particle group is about to be destroyed.\r\n    SayGoodbyeParticleGroup(group) { }\r\n    /// Called when a particle is about to be destroyed.\r\n    /// The index can be used in conjunction with\r\n    /// b2ParticleSystem::GetUserDataBuffer() or\r\n    /// b2ParticleSystem::GetParticleHandleFromIndex() to determine which\r\n    /// particle has been destroyed.\r\n    SayGoodbyeParticle(system, index) { }\r\n}\r\n/// Implement this class to provide collision filtering. In other words, you can implement\r\n/// this class if you want finer control over contact creation.\r\nexport class b2ContactFilter {\r\n    /// Return true if contact calculations should be performed between these two shapes.\r\n    /// @warning for performance reasons this is only called when the AABBs begin to overlap.\r\n    ShouldCollide(fixtureA, fixtureB) {\r\n        const bodyA = fixtureA.GetBody();\r\n        const bodyB = fixtureB.GetBody();\r\n        // At least one body should be dynamic or kinematic.\r\n        if (bodyB.GetType() === b2BodyType.b2_staticBody && bodyA.GetType() === b2BodyType.b2_staticBody) {\r\n            return false;\r\n        }\r\n        // Does a joint prevent collision?\r\n        if (!bodyB.ShouldCollideConnected(bodyA)) {\r\n            return false;\r\n        }\r\n        const filter1 = fixtureA.GetFilterData();\r\n        const filter2 = fixtureB.GetFilterData();\r\n        if (filter1.groupIndex === filter2.groupIndex && filter1.groupIndex !== 0) {\r\n            return (filter1.groupIndex > 0);\r\n        }\r\n        const collide = (((filter1.maskBits & filter2.categoryBits) !== 0) && ((filter1.categoryBits & filter2.maskBits) !== 0));\r\n        return collide;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ShouldCollideFixtureParticle(fixture, system, index) {\r\n        return true;\r\n    }\r\n    ShouldCollideParticleParticle(system, indexA, indexB) {\r\n        return true;\r\n    }\r\n}\r\n// #endif\r\nb2ContactFilter.b2_defaultFilter = new b2ContactFilter();\r\n/// Contact impulses for reporting. Impulses are used instead of forces because\r\n/// sub-step forces may approach infinity for rigid body collisions. These\r\n/// match up one-to-one with the contact points in b2Manifold.\r\nexport class b2ContactImpulse {\r\n    constructor() {\r\n        this.normalImpulses = b2MakeNumberArray(b2_maxManifoldPoints);\r\n        this.tangentImpulses = b2MakeNumberArray(b2_maxManifoldPoints);\r\n        this.count = 0;\r\n    }\r\n}\r\n/// Implement this class to get contact information. You can use these results for\r\n/// things like sounds and game logic. You can also get contact results by\r\n/// traversing the contact lists after the time step. However, you might miss\r\n/// some contacts because continuous physics leads to sub-stepping.\r\n/// Additionally you may receive multiple callbacks for the same contact in a\r\n/// single time step.\r\n/// You should strive to make your callbacks efficient because there may be\r\n/// many callbacks per time step.\r\n/// @warning You cannot create/destroy Box2D entities inside these callbacks.\r\nexport class b2ContactListener {\r\n    /// Called when two fixtures begin to touch.\r\n    BeginContact(contact) { }\r\n    /// Called when two fixtures cease to touch.\r\n    EndContact(contact) { }\r\n    // #if B2_ENABLE_PARTICLE\r\n    BeginContactFixtureParticle(system, contact) { }\r\n    EndContactFixtureParticle(system, contact) { }\r\n    BeginContactParticleParticle(system, contact) { }\r\n    EndContactParticleParticle(system, contact) { }\r\n    // #endif\r\n    /// This is called after a contact is updated. This allows you to inspect a\r\n    /// contact before it goes to the solver. If you are careful, you can modify the\r\n    /// contact manifold (e.g. disable contact).\r\n    /// A copy of the old manifold is provided so that you can detect changes.\r\n    /// Note: this is called only for awake bodies.\r\n    /// Note: this is called even when the number of contact points is zero.\r\n    /// Note: this is not called for sensors.\r\n    /// Note: if you set the number of contact points to zero, you will not\r\n    /// get an EndContact callback. However, you may get a BeginContact callback\r\n    /// the next step.\r\n    PreSolve(contact, oldManifold) { }\r\n    /// This lets you inspect a contact after the solver is finished. This is useful\r\n    /// for inspecting impulses.\r\n    /// Note: the contact manifold does not include time of impact impulses, which can be\r\n    /// arbitrarily large if the sub-step is small. Hence the impulse is provided explicitly\r\n    /// in a separate data structure.\r\n    /// Note: this is only called for contacts that are touching, solid, and awake.\r\n    PostSolve(contact, impulse) { }\r\n}\r\nb2ContactListener.b2_defaultListener = new b2ContactListener();\r\n/// Callback class for AABB queries.\r\n/// See b2World::Query\r\nexport class b2QueryCallback {\r\n    /// Called for each fixture found in the query AABB.\r\n    /// @return false to terminate the query.\r\n    ReportFixture(fixture) {\r\n        return true;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ReportParticle(system, index) {\r\n        return false;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        return true;\r\n    }\r\n}\r\n/// Callback class for ray casts.\r\n/// See b2World::RayCast\r\nexport class b2RayCastCallback {\r\n    /// Called for each fixture found in the query. You control how the ray cast\r\n    /// proceeds by returning a float:\r\n    /// return -1: ignore this fixture and continue\r\n    /// return 0: terminate the ray cast\r\n    /// return fraction: clip the ray to this point\r\n    /// return 1: don't clip the ray and continue\r\n    /// @param fixture the fixture hit by the ray\r\n    /// @param point the point of initial intersection\r\n    /// @param normal the normal vector at the point of intersection\r\n    /// @return -1 to filter, 0 to terminate, fraction to clip the ray for\r\n    /// closest hit, 1 to continue\r\n    ReportFixture(fixture, point, normal, fraction) {\r\n        return fraction;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ReportParticle(system, index, point, normal, fraction) {\r\n        return 0;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        return true;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJXb3JsZENhbGxiYWNrcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0R5bmFtaWNzL2IyV29ybGRDYWxsYmFja3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUkvRSxPQUFPLEVBQVUsVUFBVSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBTTlDLFNBQVM7QUFFVCwyREFBMkQ7QUFDM0QsMERBQTBEO0FBQzFELHNEQUFzRDtBQUN0RCxNQUFNLE9BQU8scUJBQXFCO0lBQ2hDLHNEQUFzRDtJQUN0RCxxREFBcUQ7SUFDOUMsZUFBZSxDQUFDLEtBQWMsSUFBUyxDQUFDO0lBRS9DLHdEQUF3RDtJQUN4RCwwQ0FBMEM7SUFDbkMsaUJBQWlCLENBQUMsT0FBa0IsSUFBUyxDQUFDO0lBRXJELHlCQUF5QjtJQUN6Qiw0REFBNEQ7SUFDckQsdUJBQXVCLENBQUMsS0FBc0IsSUFBUyxDQUFDO0lBRS9ELG9EQUFvRDtJQUNwRCw2Q0FBNkM7SUFDN0MsNENBQTRDO0lBQzVDLHFFQUFxRTtJQUNyRSxnQ0FBZ0M7SUFDekIsa0JBQWtCLENBQUMsTUFBd0IsRUFBRSxLQUFhLElBQVMsQ0FBQztDQUU1RTtBQUVELDBGQUEwRjtBQUMxRiwrREFBK0Q7QUFDL0QsTUFBTSxPQUFPLGVBQWU7SUFDMUIscUZBQXFGO0lBQ3JGLHlGQUF5RjtJQUNsRixhQUFhLENBQUMsUUFBbUIsRUFBRSxRQUFtQjtRQUMzRCxNQUFNLEtBQUssR0FBVyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDekMsTUFBTSxLQUFLLEdBQVcsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBRXpDLG9EQUFvRDtRQUNwRCxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxVQUFVLENBQUMsYUFBYSxJQUFJLEtBQUssQ0FBQyxP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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2BroadPhase } from \"../Collision/b2BroadPhase\";\r\nimport { b2TestOverlapAABB } from \"../Collision/b2Collision\";\r\nimport { b2ContactFactory } from \"./Contacts/b2ContactFactory\";\r\nimport { b2BodyType } from \"./b2Body\";\r\nimport { b2ContactFilter, b2ContactListener } from \"./b2WorldCallbacks\";\r\n// Delegate of b2World.\r\nexport class b2ContactManager {\r\n    constructor() {\r\n        this.m_broadPhase = new b2BroadPhase();\r\n        this.m_contactList = null;\r\n        this.m_contactCount = 0;\r\n        this.m_contactFilter = b2ContactFilter.b2_defaultFilter;\r\n        this.m_contactListener = b2ContactListener.b2_defaultListener;\r\n        this.m_allocator = null;\r\n        this.m_contactFactory = new b2ContactFactory(this.m_allocator);\r\n    }\r\n    // Broad-phase callback.\r\n    AddPair(proxyA, proxyB) {\r\n        // DEBUG: b2Assert(proxyA instanceof b2FixtureProxy);\r\n        // DEBUG: b2Assert(proxyB instanceof b2FixtureProxy);\r\n        let fixtureA = proxyA.fixture;\r\n        let fixtureB = proxyB.fixture;\r\n        let indexA = proxyA.childIndex;\r\n        let indexB = proxyB.childIndex;\r\n        let bodyA = fixtureA.GetBody();\r\n        let bodyB = fixtureB.GetBody();\r\n        // Are the fixtures on the same body?\r\n        if (bodyA === bodyB) {\r\n            return;\r\n        }\r\n        // TODO_ERIN use a hash table to remove a potential bottleneck when both\r\n        // bodies have a lot of contacts.\r\n        // Does a contact already exist?\r\n        let edge = bodyB.GetContactList();\r\n        while (edge) {\r\n            if (edge.other === bodyA) {\r\n                const fA = edge.contact.GetFixtureA();\r\n                const fB = edge.contact.GetFixtureB();\r\n                const iA = edge.contact.GetChildIndexA();\r\n                const iB = edge.contact.GetChildIndexB();\r\n                if (fA === fixtureA && fB === fixtureB && iA === indexA && iB === indexB) {\r\n                    // A contact already exists.\r\n                    return;\r\n                }\r\n                if (fA === fixtureB && fB === fixtureA && iA === indexB && iB === indexA) {\r\n                    // A contact already exists.\r\n                    return;\r\n                }\r\n            }\r\n            edge = edge.next;\r\n        }\r\n        // Check user filtering.\r\n        if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\r\n            return;\r\n        }\r\n        // Call the factory.\r\n        const c = this.m_contactFactory.Create(fixtureA, indexA, fixtureB, indexB);\r\n        if (c === null) {\r\n            return;\r\n        }\r\n        // Contact creation may swap fixtures.\r\n        fixtureA = c.GetFixtureA();\r\n        fixtureB = c.GetFixtureB();\r\n        indexA = c.GetChildIndexA();\r\n        indexB = c.GetChildIndexB();\r\n        bodyA = fixtureA.m_body;\r\n        bodyB = fixtureB.m_body;\r\n        // Insert into the world.\r\n        c.m_prev = null;\r\n        c.m_next = this.m_contactList;\r\n        if (this.m_contactList !== null) {\r\n            this.m_contactList.m_prev = c;\r\n        }\r\n        this.m_contactList = c;\r\n        // Connect to island graph.\r\n        // Connect to body A\r\n        c.m_nodeA.contact = c;\r\n        c.m_nodeA.other = bodyB;\r\n        c.m_nodeA.prev = null;\r\n        c.m_nodeA.next = bodyA.m_contactList;\r\n        if (bodyA.m_contactList !== null) {\r\n            bodyA.m_contactList.prev = c.m_nodeA;\r\n        }\r\n        bodyA.m_contactList = c.m_nodeA;\r\n        // Connect to body B\r\n        c.m_nodeB.contact = c;\r\n        c.m_nodeB.other = bodyA;\r\n        c.m_nodeB.prev = null;\r\n        c.m_nodeB.next = bodyB.m_contactList;\r\n        if (bodyB.m_contactList !== null) {\r\n            bodyB.m_contactList.prev = c.m_nodeB;\r\n        }\r\n        bodyB.m_contactList = c.m_nodeB;\r\n        // Wake up the bodies\r\n        if (!fixtureA.IsSensor() && !fixtureB.IsSensor()) {\r\n            bodyA.SetAwake(true);\r\n            bodyB.SetAwake(true);\r\n        }\r\n        ++this.m_contactCount;\r\n    }\r\n    FindNewContacts() {\r\n        this.m_broadPhase.UpdatePairs((proxyA, proxyB) => {\r\n            this.AddPair(proxyA, proxyB);\r\n        });\r\n    }\r\n    Destroy(c) {\r\n        const fixtureA = c.GetFixtureA();\r\n        const fixtureB = c.GetFixtureB();\r\n        const bodyA = fixtureA.GetBody();\r\n        const bodyB = fixtureB.GetBody();\r\n        if (this.m_contactListener && c.IsTouching()) {\r\n            this.m_contactListener.EndContact(c);\r\n        }\r\n        // Remove from the world.\r\n        if (c.m_prev) {\r\n            c.m_prev.m_next = c.m_next;\r\n        }\r\n        if (c.m_next) {\r\n            c.m_next.m_prev = c.m_prev;\r\n        }\r\n        if (c === this.m_contactList) {\r\n            this.m_contactList = c.m_next;\r\n        }\r\n        // Remove from body 1\r\n        if (c.m_nodeA.prev) {\r\n            c.m_nodeA.prev.next = c.m_nodeA.next;\r\n        }\r\n        if (c.m_nodeA.next) {\r\n            c.m_nodeA.next.prev = c.m_nodeA.prev;\r\n        }\r\n        if (c.m_nodeA === bodyA.m_contactList) {\r\n            bodyA.m_contactList = c.m_nodeA.next;\r\n        }\r\n        // Remove from body 2\r\n        if (c.m_nodeB.prev) {\r\n            c.m_nodeB.prev.next = c.m_nodeB.next;\r\n        }\r\n        if (c.m_nodeB.next) {\r\n            c.m_nodeB.next.prev = c.m_nodeB.prev;\r\n        }\r\n        if (c.m_nodeB === bodyB.m_contactList) {\r\n            bodyB.m_contactList = c.m_nodeB.next;\r\n        }\r\n        // Call the factory.\r\n        this.m_contactFactory.Destroy(c);\r\n        --this.m_contactCount;\r\n    }\r\n    // This is the top level collision call for the time step. Here\r\n    // all the narrow phase collision is processed for the world\r\n    // contact list.\r\n    Collide() {\r\n        // Update awake contacts.\r\n        let c = this.m_contactList;\r\n        while (c) {\r\n            const fixtureA = c.GetFixtureA();\r\n            const fixtureB = c.GetFixtureB();\r\n            const indexA = c.GetChildIndexA();\r\n            const indexB = c.GetChildIndexB();\r\n            const bodyA = fixtureA.GetBody();\r\n            const bodyB = fixtureB.GetBody();\r\n            // Is this contact flagged for filtering?\r\n            if (c.m_filterFlag) {\r\n                // Check user filtering.\r\n                if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\r\n                    const cNuke = c;\r\n                    c = cNuke.m_next;\r\n                    this.Destroy(cNuke);\r\n                    continue;\r\n                }\r\n                // Clear the filtering flag.\r\n                c.m_filterFlag = false;\r\n            }\r\n            const activeA = bodyA.IsAwake() && bodyA.m_type !== b2BodyType.b2_staticBody;\r\n            const activeB = bodyB.IsAwake() && bodyB.m_type !== b2BodyType.b2_staticBody;\r\n            // At least one body must be awake and it must be dynamic or kinematic.\r\n            if (!activeA && !activeB) {\r\n                c = c.m_next;\r\n                continue;\r\n            }\r\n            const proxyA = fixtureA.m_proxies[indexA].treeNode;\r\n            const proxyB = fixtureB.m_proxies[indexB].treeNode;\r\n            const overlap = b2TestOverlapAABB(proxyA.aabb, proxyB.aabb);\r\n            // Here we destroy contacts that cease to overlap in the broad-phase.\r\n            if (!overlap) {\r\n                const cNuke = c;\r\n                c = cNuke.m_next;\r\n                this.Destroy(cNuke);\r\n                continue;\r\n            }\r\n            // The contact persists.\r\n            c.Update(this.m_contactListener);\r\n            c = c.m_next;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\n/// Profiling data. Times are in milliseconds.\r\nexport class b2Profile {\r\n    constructor() {\r\n        this.step = 0;\r\n        this.collide = 0;\r\n        this.solve = 0;\r\n        this.solveInit = 0;\r\n        this.solveVelocity = 0;\r\n        this.solvePosition = 0;\r\n        this.broadphase = 0;\r\n        this.solveTOI = 0;\r\n    }\r\n    Reset() {\r\n        this.step = 0;\r\n        this.collide = 0;\r\n        this.solve = 0;\r\n        this.solveInit = 0;\r\n        this.solveVelocity = 0;\r\n        this.solvePosition = 0;\r\n        this.broadphase = 0;\r\n        this.solveTOI = 0;\r\n        return this;\r\n    }\r\n}\r\n/// This is an internal structure.\r\nexport class b2TimeStep {\r\n    constructor() {\r\n        this.dt = 0; // time step\r\n        this.inv_dt = 0; // inverse time step (0 if dt == 0).\r\n        this.dtRatio = 0; // dt * inv_dt0\r\n        this.velocityIterations = 0;\r\n        this.positionIterations = 0;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.particleIterations = 0;\r\n        // #endif\r\n        this.warmStarting = false;\r\n    }\r\n    Copy(step) {\r\n        this.dt = step.dt;\r\n        this.inv_dt = step.inv_dt;\r\n        this.dtRatio = step.dtRatio;\r\n        this.positionIterations = step.positionIterations;\r\n        this.velocityIterations = step.velocityIterations;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.particleIterations = step.particleIterations;\r\n        // #endif\r\n        this.warmStarting = step.warmStarting;\r\n        return this;\r\n    }\r\n}\r\nexport class b2Position {\r\n    constructor() {\r\n        this.c = new b2Vec2();\r\n        this.a = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Position());\r\n    }\r\n}\r\nexport class b2Velocity {\r\n    constructor() {\r\n        this.v = new b2Vec2();\r\n        this.w = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Velocity());\r\n    }\r\n}\r\nexport class b2SolverData {\r\n    constructor() {\r\n        this.step = new b2TimeStep();\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJUaW1lU3RlcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0R5bmFtaWNzL2IyVGltZVN0ZXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTFDLDhDQUE4QztBQUM5QyxNQUFNLE9BQU8sU0FBUztJQUF0QjtRQUNTLFNBQUksR0FBVyxDQUFDLENBQUM7UUFDakIsWUFBTyxHQUFXLENBQUMsQ0FBQztRQUNwQixVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBQ2xCLGNBQVMsR0FBVyxDQUFDLENBQUM7UUFDdEIsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFDMUIsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFDMUIsZUFBVSxHQUFXLENBQUMsQ0FBQztRQUN2QixhQUFRLEdBQVcsQ0FBQyxDQUFDO0lBYTlCLENBQUM7SUFYUSxLQUFLO1FBQ1YsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7UUFDZCxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGO0FBRUQsa0NBQWtDO0FBQ2xDLE1BQU0sT0FBTyxVQUFVO0lBQXZCO1FBQ1MsT0FBRSxHQUFXLENBQUMsQ0FBQyxDQUFDLFlBQVk7UUFDNUIsV0FBTSxHQUFXLENBQUMsQ0FBQyxDQUFDLG9DQUFvQztRQUN4RCxZQUFPLEdBQVcsQ0FBQyxDQUFDLENBQUMsZUFBZTtRQUNwQyx1QkFBa0IsR0FBVyxDQUFDLENBQUM7UUFDL0IsdUJBQWtCLEdBQVcsQ0FBQyxDQUFDO1FBQ3RDLHlCQUF5QjtRQUNsQix1QkFBa0IsR0FBVyxDQUFDLENBQUM7UUFDdEMsU0FBUztRQUNGLGlCQUFZLEdBQVksS0FBSyxDQUFDO0lBY3ZDLENBQUM7SUFaUSxJQUFJLENBQUMsSUFBZ0I7UUFDMUIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDNUIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztRQUNsRCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDO1FBQ2xELHlCQUF5QjtRQUN6QixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDO1FBQ2xELFNBQVM7UUFDVCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDdEMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sVUFBVTtJQUF2QjtRQUNrQixNQUFDLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNsQyxNQUFDLEdBQVcsQ0FBQyxDQUFDO0lBS3ZCLENBQUM7SUFIUSxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQWM7UUFDcEMsT0FBTyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBUyxFQUFjLEVBQUUsQ0FBQyxJQUFJLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDMUUsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLFVBQVU7SUFBdkI7UUFDa0IsTUFBQyxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFDbEMsTUFBQyxHQUFXLENBQUMsQ0FBQztJQUt2QixDQUFDO0lBSFEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFjO1FBQ3BDLE9BQU8sV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQVMsRUFBYyxFQUFFLENBQUMsSUFBSSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQzFFLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxZQUFZO0lBQXpCO1FBQ2tCLFNBQUksR0FBZSxJQUFJLFVBQVUsRUFBRSxDQUFDO0lBR3RELENBQUM7Q0FBQSJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\nimport { b2_linearSlop, b2_maxManifoldPoints, b2_velocityThreshold, b2_maxLinearCorrection, b2_baumgarte, b2_toiBaumgarte, b2MakeArray } from \"../../Common/b2Settings\";\r\nimport { b2Min, b2Max, b2Clamp, b2Vec2, b2Mat22, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2WorldManifold } from \"../../Collision/b2Collision\";\r\nimport { b2ManifoldType } from \"../../Collision/b2Collision\";\r\nimport { b2TimeStep } from \"../b2TimeStep\";\r\n// Solver debugging is normally disabled because the block solver sometimes has to deal with a poorly conditioned effective mass matrix.\r\n// #define B2_DEBUG_SOLVER 0\r\nexport let g_blockSolve = false;\r\nexport class b2VelocityConstraintPoint {\r\n    constructor() {\r\n        this.rA = new b2Vec2();\r\n        this.rB = new b2Vec2();\r\n        this.normalImpulse = 0;\r\n        this.tangentImpulse = 0;\r\n        this.normalMass = 0;\r\n        this.tangentMass = 0;\r\n        this.velocityBias = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2VelocityConstraintPoint());\r\n    }\r\n}\r\nexport class b2ContactVelocityConstraint {\r\n    constructor() {\r\n        this.points = b2VelocityConstraintPoint.MakeArray(b2_maxManifoldPoints);\r\n        this.normal = new b2Vec2();\r\n        this.tangent = new b2Vec2();\r\n        this.normalMass = new b2Mat22();\r\n        this.K = new b2Mat22();\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.invMassA = 0;\r\n        this.invMassB = 0;\r\n        this.invIA = 0;\r\n        this.invIB = 0;\r\n        this.friction = 0;\r\n        this.restitution = 0;\r\n        this.tangentSpeed = 0;\r\n        this.pointCount = 0;\r\n        this.contactIndex = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ContactVelocityConstraint());\r\n    }\r\n}\r\nexport class b2ContactPositionConstraint {\r\n    constructor() {\r\n        this.localPoints = b2Vec2.MakeArray(b2_maxManifoldPoints);\r\n        this.localNormal = new b2Vec2();\r\n        this.localPoint = new b2Vec2();\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.invMassA = 0;\r\n        this.invMassB = 0;\r\n        this.localCenterA = new b2Vec2();\r\n        this.localCenterB = new b2Vec2();\r\n        this.invIA = 0;\r\n        this.invIB = 0;\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.radiusA = 0;\r\n        this.radiusB = 0;\r\n        this.pointCount = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ContactPositionConstraint());\r\n    }\r\n}\r\nexport class b2ContactSolverDef {\r\n    constructor() {\r\n        this.step = new b2TimeStep();\r\n        this.count = 0;\r\n        this.allocator = null;\r\n    }\r\n}\r\nexport class b2PositionSolverManifold {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.point = new b2Vec2();\r\n        this.separation = 0;\r\n    }\r\n    Initialize(pc, xfA, xfB, index) {\r\n        const pointA = b2PositionSolverManifold.Initialize_s_pointA;\r\n        const pointB = b2PositionSolverManifold.Initialize_s_pointB;\r\n        const planePoint = b2PositionSolverManifold.Initialize_s_planePoint;\r\n        const clipPoint = b2PositionSolverManifold.Initialize_s_clipPoint;\r\n        // DEBUG: b2Assert(pc.pointCount > 0);\r\n        switch (pc.type) {\r\n            case b2ManifoldType.e_circles: {\r\n                // b2Vec2 pointA = b2Mul(xfA, pc->localPoint);\r\n                b2Transform.MulXV(xfA, pc.localPoint, pointA);\r\n                // b2Vec2 pointB = b2Mul(xfB, pc->localPoints[0]);\r\n                b2Transform.MulXV(xfB, pc.localPoints[0], pointB);\r\n                // normal = pointB - pointA;\r\n                // normal.Normalize();\r\n                b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\r\n                // point = 0.5f * (pointA + pointB);\r\n                b2Vec2.MidVV(pointA, pointB, this.point);\r\n                // separation = b2Dot(pointB - pointA, normal) - pc->radius;\r\n                this.separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                break;\r\n            }\r\n            case b2ManifoldType.e_faceA: {\r\n                // normal = b2Mul(xfA.q, pc->localNormal);\r\n                b2Rot.MulRV(xfA.q, pc.localNormal, this.normal);\r\n                // b2Vec2 planePoint = b2Mul(xfA, pc->localPoint);\r\n                b2Transform.MulXV(xfA, pc.localPoint, planePoint);\r\n                // b2Vec2 clipPoint = b2Mul(xfB, pc->localPoints[index]);\r\n                b2Transform.MulXV(xfB, pc.localPoints[index], clipPoint);\r\n                // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\r\n                this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                // point = clipPoint;\r\n                this.point.Copy(clipPoint);\r\n                break;\r\n            }\r\n            case b2ManifoldType.e_faceB: {\r\n                // normal = b2Mul(xfB.q, pc->localNormal);\r\n                b2Rot.MulRV(xfB.q, pc.localNormal, this.normal);\r\n                // b2Vec2 planePoint = b2Mul(xfB, pc->localPoint);\r\n                b2Transform.MulXV(xfB, pc.localPoint, planePoint);\r\n                // b2Vec2 clipPoint = b2Mul(xfA, pc->localPoints[index]);\r\n                b2Transform.MulXV(xfA, pc.localPoints[index], clipPoint);\r\n                // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\r\n                this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                // point = clipPoint;\r\n                this.point.Copy(clipPoint);\r\n                // Ensure normal points from A to B\r\n                // normal = -normal;\r\n                this.normal.SelfNeg();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nb2PositionSolverManifold.Initialize_s_pointA = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_pointB = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_planePoint = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_clipPoint = new b2Vec2();\r\nexport class b2ContactSolver {\r\n    constructor() {\r\n        this.m_step = new b2TimeStep();\r\n        this.m_allocator = null;\r\n        this.m_positionConstraints = b2ContactPositionConstraint.MakeArray(1024); // TODO: b2Settings\r\n        this.m_velocityConstraints = b2ContactVelocityConstraint.MakeArray(1024); // TODO: b2Settings\r\n        this.m_count = 0;\r\n    }\r\n    Initialize(def) {\r\n        this.m_step.Copy(def.step);\r\n        this.m_allocator = def.allocator;\r\n        this.m_count = def.count;\r\n        // TODO:\r\n        if (this.m_positionConstraints.length < this.m_count) {\r\n            const new_length = b2Max(this.m_positionConstraints.length * 2, this.m_count);\r\n            while (this.m_positionConstraints.length < new_length) {\r\n                this.m_positionConstraints[this.m_positionConstraints.length] = new b2ContactPositionConstraint();\r\n            }\r\n        }\r\n        // TODO:\r\n        if (this.m_velocityConstraints.length < this.m_count) {\r\n            const new_length = b2Max(this.m_velocityConstraints.length * 2, this.m_count);\r\n            while (this.m_velocityConstraints.length < new_length) {\r\n                this.m_velocityConstraints[this.m_velocityConstraints.length] = new b2ContactVelocityConstraint();\r\n            }\r\n        }\r\n        this.m_positions = def.positions;\r\n        this.m_velocities = def.velocities;\r\n        this.m_contacts = def.contacts;\r\n        // Initialize position independent portions of the constraints.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const contact = this.m_contacts[i];\r\n            const fixtureA = contact.m_fixtureA;\r\n            const fixtureB = contact.m_fixtureB;\r\n            const shapeA = fixtureA.GetShape();\r\n            const shapeB = fixtureB.GetShape();\r\n            const radiusA = shapeA.m_radius;\r\n            const radiusB = shapeB.m_radius;\r\n            const bodyA = fixtureA.GetBody();\r\n            const bodyB = fixtureB.GetBody();\r\n            const manifold = contact.GetManifold();\r\n            const pointCount = manifold.pointCount;\r\n            // DEBUG: b2Assert(pointCount > 0);\r\n            const vc = this.m_velocityConstraints[i];\r\n            vc.friction = contact.m_friction;\r\n            vc.restitution = contact.m_restitution;\r\n            vc.tangentSpeed = contact.m_tangentSpeed;\r\n            vc.indexA = bodyA.m_islandIndex;\r\n            vc.indexB = bodyB.m_islandIndex;\r\n            vc.invMassA = bodyA.m_invMass;\r\n            vc.invMassB = bodyB.m_invMass;\r\n            vc.invIA = bodyA.m_invI;\r\n            vc.invIB = bodyB.m_invI;\r\n            vc.contactIndex = i;\r\n            vc.pointCount = pointCount;\r\n            vc.K.SetZero();\r\n            vc.normalMass.SetZero();\r\n            const pc = this.m_positionConstraints[i];\r\n            pc.indexA = bodyA.m_islandIndex;\r\n            pc.indexB = bodyB.m_islandIndex;\r\n            pc.invMassA = bodyA.m_invMass;\r\n            pc.invMassB = bodyB.m_invMass;\r\n            pc.localCenterA.Copy(bodyA.m_sweep.localCenter);\r\n            pc.localCenterB.Copy(bodyB.m_sweep.localCenter);\r\n            pc.invIA = bodyA.m_invI;\r\n            pc.invIB = bodyB.m_invI;\r\n            pc.localNormal.Copy(manifold.localNormal);\r\n            pc.localPoint.Copy(manifold.localPoint);\r\n            pc.pointCount = pointCount;\r\n            pc.radiusA = radiusA;\r\n            pc.radiusB = radiusB;\r\n            pc.type = manifold.type;\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const cp = manifold.points[j];\r\n                const vcp = vc.points[j];\r\n                if (this.m_step.warmStarting) {\r\n                    vcp.normalImpulse = this.m_step.dtRatio * cp.normalImpulse;\r\n                    vcp.tangentImpulse = this.m_step.dtRatio * cp.tangentImpulse;\r\n                }\r\n                else {\r\n                    vcp.normalImpulse = 0;\r\n                    vcp.tangentImpulse = 0;\r\n                }\r\n                vcp.rA.SetZero();\r\n                vcp.rB.SetZero();\r\n                vcp.normalMass = 0;\r\n                vcp.tangentMass = 0;\r\n                vcp.velocityBias = 0;\r\n                pc.localPoints[j].Copy(cp.localPoint);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    InitializeVelocityConstraints() {\r\n        const xfA = b2ContactSolver.InitializeVelocityConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.InitializeVelocityConstraints_s_xfB;\r\n        const worldManifold = b2ContactSolver.InitializeVelocityConstraints_s_worldManifold;\r\n        const k_maxConditionNumber = 1000;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const pc = this.m_positionConstraints[i];\r\n            const radiusA = pc.radiusA;\r\n            const radiusB = pc.radiusB;\r\n            const manifold = this.m_contacts[vc.contactIndex].GetManifold();\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const mB = vc.invMassB;\r\n            const iA = vc.invIA;\r\n            const iB = vc.invIB;\r\n            const localCenterA = pc.localCenterA;\r\n            const localCenterB = pc.localCenterB;\r\n            const cA = this.m_positions[indexA].c;\r\n            const aA = this.m_positions[indexA].a;\r\n            const vA = this.m_velocities[indexA].v;\r\n            const wA = this.m_velocities[indexA].w;\r\n            const cB = this.m_positions[indexB].c;\r\n            const aB = this.m_positions[indexB].a;\r\n            const vB = this.m_velocities[indexB].v;\r\n            const wB = this.m_velocities[indexB].w;\r\n            // DEBUG: b2Assert(manifold.pointCount > 0);\r\n            xfA.q.SetAngle(aA);\r\n            xfB.q.SetAngle(aB);\r\n            b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n            b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n            worldManifold.Initialize(manifold, xfA, radiusA, xfB, radiusB);\r\n            vc.normal.Copy(worldManifold.normal);\r\n            b2Vec2.CrossVOne(vc.normal, vc.tangent); // compute from normal\r\n            const pointCount = vc.pointCount;\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // vcp->rA = worldManifold.points[j] - cA;\r\n                b2Vec2.SubVV(worldManifold.points[j], cA, vcp.rA);\r\n                // vcp->rB = worldManifold.points[j] - cB;\r\n                b2Vec2.SubVV(worldManifold.points[j], cB, vcp.rB);\r\n                const rnA = b2Vec2.CrossVV(vcp.rA, vc.normal);\r\n                const rnB = b2Vec2.CrossVV(vcp.rB, vc.normal);\r\n                const kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                vcp.normalMass = kNormal > 0 ? 1 / kNormal : 0;\r\n                // b2Vec2 tangent = b2Cross(vc->normal, 1.0f);\r\n                const tangent = vc.tangent; // precomputed from normal\r\n                const rtA = b2Vec2.CrossVV(vcp.rA, tangent);\r\n                const rtB = b2Vec2.CrossVV(vcp.rB, tangent);\r\n                const kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\r\n                vcp.tangentMass = kTangent > 0 ? 1 / kTangent : 0;\r\n                // Setup a velocity bias for restitution.\r\n                vcp.velocityBias = 0;\r\n                // float32 vRel = b2Dot(vc->normal, vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA));\r\n                const vRel = b2Vec2.DotVV(vc.normal, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n                if (vRel < (-b2_velocityThreshold)) {\r\n                    vcp.velocityBias += (-vc.restitution * vRel);\r\n                }\r\n            }\r\n            // If we have two points, then prepare the block solver.\r\n            if (vc.pointCount === 2 && g_blockSolve) {\r\n                const vcp1 = vc.points[0];\r\n                const vcp2 = vc.points[1];\r\n                const rn1A = b2Vec2.CrossVV(vcp1.rA, vc.normal);\r\n                const rn1B = b2Vec2.CrossVV(vcp1.rB, vc.normal);\r\n                const rn2A = b2Vec2.CrossVV(vcp2.rA, vc.normal);\r\n                const rn2B = b2Vec2.CrossVV(vcp2.rB, vc.normal);\r\n                const k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\r\n                const k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\r\n                const k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\r\n                // Ensure a reasonable condition number.\r\n                // float32 k_maxConditionNumber = 1000.0f;\r\n                if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\r\n                    // K is safe to invert.\r\n                    vc.K.ex.Set(k11, k12);\r\n                    vc.K.ey.Set(k12, k22);\r\n                    vc.K.GetInverse(vc.normalMass);\r\n                }\r\n                else {\r\n                    // The constraints are redundant, just use one.\r\n                    // TODO_ERIN use deepest?\r\n                    vc.pointCount = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    WarmStart() {\r\n        const P = b2ContactSolver.WarmStart_s_P;\r\n        // Warm start.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const iA = vc.invIA;\r\n            const mB = vc.invMassB;\r\n            const iB = vc.invIB;\r\n            const pointCount = vc.pointCount;\r\n            const vA = this.m_velocities[indexA].v;\r\n            let wA = this.m_velocities[indexA].w;\r\n            const vB = this.m_velocities[indexB].v;\r\n            let wB = this.m_velocities[indexB].w;\r\n            const normal = vc.normal;\r\n            // b2Vec2 tangent = b2Cross(normal, 1.0f);\r\n            const tangent = vc.tangent; // precomputed from normal\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // b2Vec2 P = vcp->normalImpulse * normal + vcp->tangentImpulse * tangent;\r\n                b2Vec2.AddVV(b2Vec2.MulSV(vcp.normalImpulse, normal, b2Vec2.s_t0), b2Vec2.MulSV(vcp.tangentImpulse, tangent, b2Vec2.s_t1), P);\r\n                // wA -= iA * b2Cross(vcp->rA, P);\r\n                wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                // vA -= mA * P;\r\n                vA.SelfMulSub(mA, P);\r\n                // wB += iB * b2Cross(vcp->rB, P);\r\n                wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n                // vB += mB * P;\r\n                vB.SelfMulAdd(mB, P);\r\n            }\r\n            // this.m_velocities[indexA].v = vA;\r\n            this.m_velocities[indexA].w = wA;\r\n            // this.m_velocities[indexB].v = vB;\r\n            this.m_velocities[indexB].w = wB;\r\n        }\r\n    }\r\n    SolveVelocityConstraints() {\r\n        const dv = b2ContactSolver.SolveVelocityConstraints_s_dv;\r\n        const dv1 = b2ContactSolver.SolveVelocityConstraints_s_dv1;\r\n        const dv2 = b2ContactSolver.SolveVelocityConstraints_s_dv2;\r\n        const P = b2ContactSolver.SolveVelocityConstraints_s_P;\r\n        const a = b2ContactSolver.SolveVelocityConstraints_s_a;\r\n        const b = b2ContactSolver.SolveVelocityConstraints_s_b;\r\n        const x = b2ContactSolver.SolveVelocityConstraints_s_x;\r\n        const d = b2ContactSolver.SolveVelocityConstraints_s_d;\r\n        const P1 = b2ContactSolver.SolveVelocityConstraints_s_P1;\r\n        const P2 = b2ContactSolver.SolveVelocityConstraints_s_P2;\r\n        const P1P2 = b2ContactSolver.SolveVelocityConstraints_s_P1P2;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const iA = vc.invIA;\r\n            const mB = vc.invMassB;\r\n            const iB = vc.invIB;\r\n            const pointCount = vc.pointCount;\r\n            const vA = this.m_velocities[indexA].v;\r\n            let wA = this.m_velocities[indexA].w;\r\n            const vB = this.m_velocities[indexB].v;\r\n            let wB = this.m_velocities[indexB].w;\r\n            // b2Vec2 normal = vc->normal;\r\n            const normal = vc.normal;\r\n            // b2Vec2 tangent = b2Cross(normal, 1.0f);\r\n            const tangent = vc.tangent; // precomputed from normal\r\n            const friction = vc.friction;\r\n            // DEBUG: b2Assert(pointCount === 1 || pointCount === 2);\r\n            // Solve tangent constraints first because non-penetration is more important\r\n            // than friction.\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // Relative velocity at contact\r\n                // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), dv);\r\n                // Compute tangent force\r\n                // float32 vt = b2Dot(dv, tangent) - vc->tangentSpeed;\r\n                const vt = b2Vec2.DotVV(dv, tangent) - vc.tangentSpeed;\r\n                let lambda = vcp.tangentMass * (-vt);\r\n                // b2Clamp the accumulated force\r\n                const maxFriction = friction * vcp.normalImpulse;\r\n                const newImpulse = b2Clamp(vcp.tangentImpulse + lambda, (-maxFriction), maxFriction);\r\n                lambda = newImpulse - vcp.tangentImpulse;\r\n                vcp.tangentImpulse = newImpulse;\r\n                // Apply contact impulse\r\n                // b2Vec2 P = lambda * tangent;\r\n                b2Vec2.MulSV(lambda, tangent, P);\r\n                // vA -= mA * P;\r\n                vA.SelfMulSub(mA, P);\r\n                // wA -= iA * b2Cross(vcp->rA, P);\r\n                wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                // vB += mB * P;\r\n                vB.SelfMulAdd(mB, P);\r\n                // wB += iB * b2Cross(vcp->rB, P);\r\n                wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n            }\r\n            // Solve normal constraints\r\n            if (vc.pointCount === 1 || g_blockSolve === false) {\r\n                for (let j = 0; j < pointCount; ++j) {\r\n                    const vcp = vc.points[j];\r\n                    // Relative velocity at contact\r\n                    // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\r\n                    b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), dv);\r\n                    // Compute normal impulse\r\n                    // float32 vn = b2Dot(dv, normal);\r\n                    const vn = b2Vec2.DotVV(dv, normal);\r\n                    let lambda = (-vcp.normalMass * (vn - vcp.velocityBias));\r\n                    // b2Clamp the accumulated impulse\r\n                    // float32 newImpulse = b2Max(vcp->normalImpulse + lambda, 0.0f);\r\n                    const newImpulse = b2Max(vcp.normalImpulse + lambda, 0);\r\n                    lambda = newImpulse - vcp.normalImpulse;\r\n                    vcp.normalImpulse = newImpulse;\r\n                    // Apply contact impulse\r\n                    // b2Vec2 P = lambda * normal;\r\n                    b2Vec2.MulSV(lambda, normal, P);\r\n                    // vA -= mA * P;\r\n                    vA.SelfMulSub(mA, P);\r\n                    // wA -= iA * b2Cross(vcp->rA, P);\r\n                    wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                    // vB += mB * P;\r\n                    vB.SelfMulAdd(mB, P);\r\n                    // wB += iB * b2Cross(vcp->rB, P);\r\n                    wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n                }\r\n            }\r\n            else {\r\n                // Block solver developed in collaboration with Dirk Gregorius (back in 01/07 on Box2D_Lite).\r\n                // Build the mini LCP for this contact patch\r\n                //\r\n                // vn = A * x + b, vn >= 0, x >= 0 and vn_i * x_i = 0 with i = 1..2\r\n                //\r\n                // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\r\n                // b = vn0 - velocityBias\r\n                //\r\n                // The system is solved using the \"Total enumeration method\" (s. Murty). The complementary constraint vn_i * x_i\r\n                // implies that we must have in any solution either vn_i = 0 or x_i = 0. So for the 2D contact problem the cases\r\n                // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and vn1 = 0 need to be tested. The first valid\r\n                // solution that satisfies the problem is chosen.\r\n                //\r\n                // In order to account of the accumulated impulse 'a' (because of the iterative nature of the solver which only requires\r\n                // that the accumulated impulse is clamped and not the incremental impulse) we change the impulse variable (x_i).\r\n                //\r\n                // Substitute:\r\n                //\r\n                // x = a + d\r\n                //\r\n                // a := old total impulse\r\n                // x := new total impulse\r\n                // d := incremental impulse\r\n                //\r\n                // For the current iteration we extend the formula for the incremental impulse\r\n                // to compute the new total impulse:\r\n                //\r\n                // vn = A * d + b\r\n                //    = A * (x - a) + b\r\n                //    = A * x + b - A * a\r\n                //    = A * x + b'\r\n                // b' = b - A * a;\r\n                const cp1 = vc.points[0];\r\n                const cp2 = vc.points[1];\r\n                // b2Vec2 a(cp1->normalImpulse, cp2->normalImpulse);\r\n                a.Set(cp1.normalImpulse, cp2.normalImpulse);\r\n                // DEBUG: b2Assert(a.x >= 0 && a.y >= 0);\r\n                // Relative velocity at contact\r\n                // b2Vec2 dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, cp1.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, cp1.rA, b2Vec2.s_t1), dv1);\r\n                // b2Vec2 dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, cp2.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, cp2.rA, b2Vec2.s_t1), dv2);\r\n                // Compute normal velocity\r\n                // float32 vn1 = b2Dot(dv1, normal);\r\n                let vn1 = b2Vec2.DotVV(dv1, normal);\r\n                // float32 vn2 = b2Dot(dv2, normal);\r\n                let vn2 = b2Vec2.DotVV(dv2, normal);\r\n                // b2Vec2 b;\r\n                b.x = vn1 - cp1.velocityBias;\r\n                b.y = vn2 - cp2.velocityBias;\r\n                // Compute b'\r\n                // b -= b2Mul(vc->K, a);\r\n                b.SelfSub(b2Mat22.MulMV(vc.K, a, b2Vec2.s_t0));\r\n                /*\r\n                #if B2_DEBUG_SOLVER === 1\r\n                const k_errorTol: number = 0.001;\r\n                #endif\r\n                */\r\n                for (;;) {\r\n                    //\r\n                    // Case 1: vn = 0\r\n                    //\r\n                    // 0 = A * x + b'\r\n                    //\r\n                    // Solve for x:\r\n                    //\r\n                    // x = - inv(A) * b'\r\n                    //\r\n                    // b2Vec2 x = - b2Mul(vc->normalMass, b);\r\n                    b2Mat22.MulMV(vc.normalMass, b, x).SelfNeg();\r\n                    if (x.x >= 0 && x.y >= 0) {\r\n                        // Get the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n                        dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn1 = b2Dot(dv1, normal);\r\n                        vn2 = b2Dot(dv2, normal);\r\n            \r\n                        b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\r\n                        b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 2: vn1 = 0 and x2 = 0\r\n                    //\r\n                    //   0 = a11 * x1 + a12 * 0 + b1'\r\n                    // vn2 = a21 * x1 + a22 * 0 + b2'\r\n                    //\r\n                    x.x = (-cp1.normalMass * b.x);\r\n                    x.y = 0;\r\n                    vn1 = 0;\r\n                    vn2 = vc.K.ex.y * x.x + b.y;\r\n                    if (x.x >= 0 && vn2 >= 0) {\r\n                        // Get the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn1 = b2Dot(dv1, normal);\r\n            \r\n                        b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 3: vn2 = 0 and x1 = 0\r\n                    //\r\n                    // vn1 = a11 * 0 + a12 * x2 + b1'\r\n                    //   0 = a21 * 0 + a22 * x2 + b2'\r\n                    //\r\n                    x.x = 0;\r\n                    x.y = (-cp2.normalMass * b.y);\r\n                    vn1 = vc.K.ey.x * x.y + b.x;\r\n                    vn2 = 0;\r\n                    if (x.y >= 0 && vn1 >= 0) {\r\n                        // Resubstitute for the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn2 = b2Dot(dv2, normal);\r\n            \r\n                        b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 4: x1 = 0 and x2 = 0\r\n                    //\r\n                    // vn1 = b1\r\n                    // vn2 = b2;\r\n                    x.x = 0;\r\n                    x.y = 0;\r\n                    vn1 = b.x;\r\n                    vn2 = b.y;\r\n                    if (vn1 >= 0 && vn2 >= 0) {\r\n                        // Resubstitute for the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        break;\r\n                    }\r\n                    // No solution, give up. This is hit sometimes, but it doesn't seem to matter.\r\n                    break;\r\n                }\r\n            }\r\n            // this.m_velocities[indexA].v = vA;\r\n            this.m_velocities[indexA].w = wA;\r\n            // this.m_velocities[indexB].v = vB;\r\n            this.m_velocities[indexB].w = wB;\r\n        }\r\n    }\r\n    StoreImpulses() {\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const manifold = this.m_contacts[vc.contactIndex].GetManifold();\r\n            for (let j = 0; j < vc.pointCount; ++j) {\r\n                manifold.points[j].normalImpulse = vc.points[j].normalImpulse;\r\n                manifold.points[j].tangentImpulse = vc.points[j].tangentImpulse;\r\n            }\r\n        }\r\n    }\r\n    SolvePositionConstraints() {\r\n        const xfA = b2ContactSolver.SolvePositionConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.SolvePositionConstraints_s_xfB;\r\n        const psm = b2ContactSolver.SolvePositionConstraints_s_psm;\r\n        const rA = b2ContactSolver.SolvePositionConstraints_s_rA;\r\n        const rB = b2ContactSolver.SolvePositionConstraints_s_rB;\r\n        const P = b2ContactSolver.SolvePositionConstraints_s_P;\r\n        let minSeparation = 0;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const pc = this.m_positionConstraints[i];\r\n            const indexA = pc.indexA;\r\n            const indexB = pc.indexB;\r\n            const localCenterA = pc.localCenterA;\r\n            const mA = pc.invMassA;\r\n            const iA = pc.invIA;\r\n            const localCenterB = pc.localCenterB;\r\n            const mB = pc.invMassB;\r\n            const iB = pc.invIB;\r\n            const pointCount = pc.pointCount;\r\n            const cA = this.m_positions[indexA].c;\r\n            let aA = this.m_positions[indexA].a;\r\n            const cB = this.m_positions[indexB].c;\r\n            let aB = this.m_positions[indexB].a;\r\n            // Solve normal constraints\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                xfA.q.SetAngle(aA);\r\n                xfB.q.SetAngle(aB);\r\n                b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n                b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n                psm.Initialize(pc, xfA, xfB, j);\r\n                const normal = psm.normal;\r\n                const point = psm.point;\r\n                const separation = psm.separation;\r\n                // b2Vec2 rA = point - cA;\r\n                b2Vec2.SubVV(point, cA, rA);\r\n                // b2Vec2 rB = point - cB;\r\n                b2Vec2.SubVV(point, cB, rB);\r\n                // Track max constraint error.\r\n                minSeparation = b2Min(minSeparation, separation);\r\n                // Prevent large corrections and allow slop.\r\n                const C = b2Clamp(b2_baumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\r\n                // Compute the effective mass.\r\n                // float32 rnA = b2Cross(rA, normal);\r\n                const rnA = b2Vec2.CrossVV(rA, normal);\r\n                // float32 rnB = b2Cross(rB, normal);\r\n                const rnB = b2Vec2.CrossVV(rB, normal);\r\n                // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                const K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                // Compute normal impulse\r\n                const impulse = K > 0 ? -C / K : 0;\r\n                // b2Vec2 P = impulse * normal;\r\n                b2Vec2.MulSV(impulse, normal, P);\r\n                // cA -= mA * P;\r\n                cA.SelfMulSub(mA, P);\r\n                // aA -= iA * b2Cross(rA, P);\r\n                aA -= iA * b2Vec2.CrossVV(rA, P);\r\n                // cB += mB * P;\r\n                cB.SelfMulAdd(mB, P);\r\n                // aB += iB * b2Cross(rB, P);\r\n                aB += iB * b2Vec2.CrossVV(rB, P);\r\n            }\r\n            // this.m_positions[indexA].c = cA;\r\n            this.m_positions[indexA].a = aA;\r\n            // this.m_positions[indexB].c = cB;\r\n            this.m_positions[indexB].a = aB;\r\n        }\r\n        // We can't expect minSpeparation >= -b2_linearSlop because we don't\r\n        // push the separation above -b2_linearSlop.\r\n        return minSeparation > (-3 * b2_linearSlop);\r\n    }\r\n    SolveTOIPositionConstraints(toiIndexA, toiIndexB) {\r\n        const xfA = b2ContactSolver.SolveTOIPositionConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.SolveTOIPositionConstraints_s_xfB;\r\n        const psm = b2ContactSolver.SolveTOIPositionConstraints_s_psm;\r\n        const rA = b2ContactSolver.SolveTOIPositionConstraints_s_rA;\r\n        const rB = b2ContactSolver.SolveTOIPositionConstraints_s_rB;\r\n        const P = b2ContactSolver.SolveTOIPositionConstraints_s_P;\r\n        let minSeparation = 0;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const pc = this.m_positionConstraints[i];\r\n            const indexA = pc.indexA;\r\n            const indexB = pc.indexB;\r\n            const localCenterA = pc.localCenterA;\r\n            const localCenterB = pc.localCenterB;\r\n            const pointCount = pc.pointCount;\r\n            let mA = 0;\r\n            let iA = 0;\r\n            if (indexA === toiIndexA || indexA === toiIndexB) {\r\n                mA = pc.invMassA;\r\n                iA = pc.invIA;\r\n            }\r\n            let mB = 0;\r\n            let iB = 0;\r\n            if (indexB === toiIndexA || indexB === toiIndexB) {\r\n                mB = pc.invMassB;\r\n                iB = pc.invIB;\r\n            }\r\n            const cA = this.m_positions[indexA].c;\r\n            let aA = this.m_positions[indexA].a;\r\n            const cB = this.m_positions[indexB].c;\r\n            let aB = this.m_positions[indexB].a;\r\n            // Solve normal constraints\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                xfA.q.SetAngle(aA);\r\n                xfB.q.SetAngle(aB);\r\n                b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n                b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n                psm.Initialize(pc, xfA, xfB, j);\r\n                const normal = psm.normal;\r\n                const point = psm.point;\r\n                const separation = psm.separation;\r\n                // b2Vec2 rA = point - cA;\r\n                b2Vec2.SubVV(point, cA, rA);\r\n                // b2Vec2 rB = point - cB;\r\n                b2Vec2.SubVV(point, cB, rB);\r\n                // Track max constraint error.\r\n                minSeparation = b2Min(minSeparation, separation);\r\n                // Prevent large corrections and allow slop.\r\n                const C = b2Clamp(b2_toiBaumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\r\n                // Compute the effective mass.\r\n                // float32 rnA = b2Cross(rA, normal);\r\n                const rnA = b2Vec2.CrossVV(rA, normal);\r\n                // float32 rnB = b2Cross(rB, normal);\r\n                const rnB = b2Vec2.CrossVV(rB, normal);\r\n                // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                const K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                // Compute normal impulse\r\n                const impulse = K > 0 ? -C / K : 0;\r\n                // b2Vec2 P = impulse * normal;\r\n                b2Vec2.MulSV(impulse, normal, P);\r\n                // cA -= mA * P;\r\n                cA.SelfMulSub(mA, P);\r\n                // aA -= iA * b2Cross(rA, P);\r\n                aA -= iA * b2Vec2.CrossVV(rA, P);\r\n                // cB += mB * P;\r\n                cB.SelfMulAdd(mB, P);\r\n                // aB += iB * b2Cross(rB, P);\r\n                aB += iB * b2Vec2.CrossVV(rB, P);\r\n            }\r\n            // this.m_positions[indexA].c = cA;\r\n            this.m_positions[indexA].a = aA;\r\n            // this.m_positions[indexB].c = cB;\r\n            this.m_positions[indexB].a = aB;\r\n        }\r\n        // We can't expect minSpeparation >= -b2_linearSlop because we don't\r\n        // push the separation above -b2_linearSlop.\r\n        return minSeparation >= -1.5 * b2_linearSlop;\r\n    }\r\n}\r\nb2ContactSolver.InitializeVelocityConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.InitializeVelocityConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.InitializeVelocityConstraints_s_worldManifold = new b2WorldManifold();\r\nb2ContactSolver.WarmStart_s_P = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv1 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv2 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_a = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_b = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_x = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_d = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P1 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P2 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P1P2 = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.SolvePositionConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.SolvePositionConstraints_s_psm = new b2PositionSolverManifold();\r\nb2ContactSolver.SolvePositionConstraints_s_rA = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_rB = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_psm = new b2PositionSolverManifold();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_rA = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_rB = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2_timeToSleep } from \"../Common/b2Settings\";\r\nimport { b2_maxTranslation, b2_maxTranslationSquared } from \"../Common/b2Settings\";\r\nimport { b2_maxRotation, b2_maxRotationSquared } from \"../Common/b2Settings\";\r\nimport { b2_linearSleepTolerance, b2_angularSleepTolerance } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2ContactSolver, b2ContactSolverDef } from \"./Contacts/b2ContactSolver\";\r\nimport { b2BodyType } from \"./b2Body\";\r\nimport { b2SolverData, b2Position, b2Velocity } from \"./b2TimeStep\";\r\nimport { b2ContactImpulse } from \"./b2WorldCallbacks\";\r\n/*\r\nPosition Correction Notes\r\n=========================\r\nI tried the several algorithms for position correction of the 2D revolute joint.\r\nI looked at these systems:\r\n- simple pendulum (1m diameter sphere on massless 5m stick) with initial angular velocity of 100 rad/s.\r\n- suspension bridge with 30 1m long planks of length 1m.\r\n- multi-link chain with 30 1m long links.\r\n\r\nHere are the algorithms:\r\n\r\nBaumgarte - A fraction of the position error is added to the velocity error. There is no\r\nseparate position solver.\r\n\r\nPseudo Velocities - After the velocity solver and position integration,\r\nthe position error, Jacobian, and effective mass are recomputed. Then\r\nthe velocity constraints are solved with pseudo velocities and a fraction\r\nof the position error is added to the pseudo velocity error. The pseudo\r\nvelocities are initialized to zero and there is no warm-starting. After\r\nthe position solver, the pseudo velocities are added to the positions.\r\nThis is also called the First Order World method or the Position LCP method.\r\n\r\nModified Nonlinear Gauss-Seidel (NGS) - Like Pseudo Velocities except the\r\nposition error is re-computed for each constraint and the positions are updated\r\nafter the constraint is solved. The radius vectors (aka Jacobians) are\r\nre-computed too (otherwise the algorithm has horrible instability). The pseudo\r\nvelocity states are not needed because they are effectively zero at the beginning\r\nof each iteration. Since we have the current position error, we allow the\r\niterations to terminate early if the error becomes smaller than b2_linearSlop.\r\n\r\nFull NGS or just NGS - Like Modified NGS except the effective mass are re-computed\r\neach time a constraint is solved.\r\n\r\nHere are the results:\r\nBaumgarte - this is the cheapest algorithm but it has some stability problems,\r\nespecially with the bridge. The chain links separate easily close to the root\r\nand they jitter as they struggle to pull together. This is one of the most common\r\nmethods in the field. The big drawback is that the position correction artificially\r\naffects the momentum, thus leading to instabilities and false bounce. I used a\r\nbias factor of 0.2. A larger bias factor makes the bridge less stable, a smaller\r\nfactor makes joints and contacts more spongy.\r\n\r\nPseudo Velocities - the is more stable than the Baumgarte method. The bridge is\r\nstable. However, joints still separate with large angular velocities. Drag the\r\nsimple pendulum in a circle quickly and the joint will separate. The chain separates\r\neasily and does not recover. I used a bias factor of 0.2. A larger value lead to\r\nthe bridge collapsing when a heavy cube drops on it.\r\n\r\nModified NGS - this algorithm is better in some ways than Baumgarte and Pseudo\r\nVelocities, but in other ways it is worse. The bridge and chain are much more\r\nstable, but the simple pendulum goes unstable at high angular velocities.\r\n\r\nFull NGS - stable in all tests. The joints display good stiffness. The bridge\r\nstill sags, but this is better than infinite forces.\r\n\r\nRecommendations\r\nPseudo Velocities are not really worthwhile because the bridge and chain cannot\r\nrecover from joint separation. In other cases the benefit over Baumgarte is small.\r\n\r\nModified NGS is not a robust method for the revolute joint due to the violent\r\ninstability seen in the simple pendulum. Perhaps it is viable with other constraint\r\ntypes, especially scalar constraints where the effective mass is a scalar.\r\n\r\nThis leaves Baumgarte and Full NGS. Baumgarte has small, but manageable instabilities\r\nand is very fast. I don't think we can escape Baumgarte, especially in highly\r\ndemanding cases where high constraint fidelity is not needed.\r\n\r\nFull NGS is robust and easy on the eyes. I recommend this as an option for\r\nhigher fidelity simulation and certainly for suspension bridges and long chains.\r\nFull NGS might be a good choice for ragdolls, especially motorized ragdolls where\r\njoint separation can be problematic. The number of NGS iterations can be reduced\r\nfor better performance without harming robustness much.\r\n\r\nEach joint in a can be handled differently in the position solver. So I recommend\r\na system where the user can select the algorithm on a per joint basis. I would\r\nprobably default to the slower Full NGS and let the user select the faster\r\nBaumgarte method in performance critical scenarios.\r\n*/\r\n/*\r\nCache Performance\r\n\r\nThe Box2D solvers are dominated by cache misses. Data structures are designed\r\nto increase the number of cache hits. Much of misses are due to random access\r\nto body data. The constraint structures are iterated over linearly, which leads\r\nto few cache misses.\r\n\r\nThe bodies are not accessed during iteration. Instead read only data, such as\r\nthe mass values are stored with the constraints. The mutable data are the constraint\r\nimpulses and the bodies velocities/positions. The impulses are held inside the\r\nconstraint structures. The body velocities/positions are held in compact, temporary\r\narrays to increase the number of cache hits. Linear and angular velocity are\r\nstored in a single array since multiple arrays lead to multiple misses.\r\n*/\r\n/*\r\n2D Rotation\r\n\r\nR = [cos(theta) -sin(theta)]\r\n    [sin(theta) cos(theta) ]\r\n\r\nthetaDot = omega\r\n\r\nLet q1 = cos(theta), q2 = sin(theta).\r\nR = [q1 -q2]\r\n    [q2  q1]\r\n\r\nq1Dot = -thetaDot * q2\r\nq2Dot = thetaDot * q1\r\n\r\nq1_new = q1_old - dt * w * q2\r\nq2_new = q2_old + dt * w * q1\r\nthen normalize.\r\n\r\nThis might be faster than computing sin+cos.\r\nHowever, we can compute sin+cos of the same angle fast.\r\n*/\r\nexport class b2Island {\r\n    constructor() {\r\n        this.m_allocator = null;\r\n        this.m_bodies = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_contacts = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_joints = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_positions = b2Position.MakeArray(1024); // TODO: b2Settings\r\n        this.m_velocities = b2Velocity.MakeArray(1024); // TODO: b2Settings\r\n        this.m_bodyCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_bodyCapacity = 0;\r\n        this.m_contactCapacity = 0;\r\n        this.m_jointCapacity = 0;\r\n    }\r\n    Initialize(bodyCapacity, contactCapacity, jointCapacity, allocator, listener) {\r\n        this.m_bodyCapacity = bodyCapacity;\r\n        this.m_contactCapacity = contactCapacity;\r\n        this.m_jointCapacity = jointCapacity;\r\n        this.m_bodyCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_allocator = allocator;\r\n        this.m_listener = listener;\r\n        // TODO:\r\n        // while (this.m_bodies.length < bodyCapacity) {\r\n        //   this.m_bodies[this.m_bodies.length] = null;\r\n        // }\r\n        // TODO:\r\n        // while (this.m_contacts.length < contactCapacity) {\r\n        //   this.m_contacts[this.m_contacts.length] = null;\r\n        // }\r\n        // TODO:\r\n        // while (this.m_joints.length < jointCapacity) {\r\n        //   this.m_joints[this.m_joints.length] = null;\r\n        // }\r\n        // TODO:\r\n        if (this.m_positions.length < bodyCapacity) {\r\n            const new_length = b2Max(this.m_positions.length * 2, bodyCapacity);\r\n            while (this.m_positions.length < new_length) {\r\n                this.m_positions[this.m_positions.length] = new b2Position();\r\n            }\r\n        }\r\n        // TODO:\r\n        if (this.m_velocities.length < bodyCapacity) {\r\n            const new_length = b2Max(this.m_velocities.length * 2, bodyCapacity);\r\n            while (this.m_velocities.length < new_length) {\r\n                this.m_velocities[this.m_velocities.length] = new b2Velocity();\r\n            }\r\n        }\r\n    }\r\n    Clear() {\r\n        this.m_bodyCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_jointCount = 0;\r\n    }\r\n    AddBody(body) {\r\n        // DEBUG: b2Assert(this.m_bodyCount < this.m_bodyCapacity);\r\n        body.m_islandIndex = this.m_bodyCount;\r\n        this.m_bodies[this.m_bodyCount++] = body;\r\n    }\r\n    AddContact(contact) {\r\n        // DEBUG: b2Assert(this.m_contactCount < this.m_contactCapacity);\r\n        this.m_contacts[this.m_contactCount++] = contact;\r\n    }\r\n    AddJoint(joint) {\r\n        // DEBUG: b2Assert(this.m_jointCount < this.m_jointCapacity);\r\n        this.m_joints[this.m_jointCount++] = joint;\r\n    }\r\n    Solve(profile, step, gravity, allowSleep) {\r\n        const timer = b2Island.s_timer.Reset();\r\n        const h = step.dt;\r\n        // Integrate velocities and apply damping. Initialize the body state.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const b = this.m_bodies[i];\r\n            // const c: b2Vec2 =\r\n            this.m_positions[i].c.Copy(b.m_sweep.c);\r\n            const a = b.m_sweep.a;\r\n            const v = this.m_velocities[i].v.Copy(b.m_linearVelocity);\r\n            let w = b.m_angularVelocity;\r\n            // Store positions for continuous collision.\r\n            b.m_sweep.c0.Copy(b.m_sweep.c);\r\n            b.m_sweep.a0 = b.m_sweep.a;\r\n            if (b.m_type === b2BodyType.b2_dynamicBody) {\r\n                // Integrate velocities.\r\n                v.x += h * (b.m_gravityScale * gravity.x + b.m_invMass * b.m_force.x);\r\n                v.y += h * (b.m_gravityScale * gravity.y + b.m_invMass * b.m_force.y);\r\n                w += h * b.m_invI * b.m_torque;\r\n                // Apply damping.\r\n                // ODE: dv/dt + c * v = 0\r\n                // Solution: v(t) = v0 * exp(-c * t)\r\n                // Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\r\n                // v2 = exp(-c * dt) * v1\r\n                // Pade approximation:\r\n                // v2 = v1 * 1 / (1 + c * dt)\r\n                v.SelfMul(1.0 / (1.0 + h * b.m_linearDamping));\r\n                w *= 1.0 / (1.0 + h * b.m_angularDamping);\r\n            }\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n        }\r\n        timer.Reset();\r\n        // Solver data\r\n        const solverData = b2Island.s_solverData;\r\n        solverData.step.Copy(step);\r\n        solverData.positions = this.m_positions;\r\n        solverData.velocities = this.m_velocities;\r\n        // Initialize velocity constraints.\r\n        const contactSolverDef = b2Island.s_contactSolverDef;\r\n        contactSolverDef.step.Copy(step);\r\n        contactSolverDef.contacts = this.m_contacts;\r\n        contactSolverDef.count = this.m_contactCount;\r\n        contactSolverDef.positions = this.m_positions;\r\n        contactSolverDef.velocities = this.m_velocities;\r\n        contactSolverDef.allocator = this.m_allocator;\r\n        const contactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\r\n        contactSolver.InitializeVelocityConstraints();\r\n        if (step.warmStarting) {\r\n            contactSolver.WarmStart();\r\n        }\r\n        for (let i = 0; i < this.m_jointCount; ++i) {\r\n            this.m_joints[i].InitVelocityConstraints(solverData);\r\n        }\r\n        profile.solveInit = timer.GetMilliseconds();\r\n        // Solve velocity constraints.\r\n        timer.Reset();\r\n        for (let i = 0; i < step.velocityIterations; ++i) {\r\n            for (let j = 0; j < this.m_jointCount; ++j) {\r\n                this.m_joints[j].SolveVelocityConstraints(solverData);\r\n            }\r\n            contactSolver.SolveVelocityConstraints();\r\n        }\r\n        // Store impulses for warm starting\r\n        contactSolver.StoreImpulses();\r\n        profile.solveVelocity = timer.GetMilliseconds();\r\n        // Integrate positions.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const c = this.m_positions[i].c;\r\n            let a = this.m_positions[i].a;\r\n            const v = this.m_velocities[i].v;\r\n            let w = this.m_velocities[i].w;\r\n            // Check for large velocities\r\n            const translation = b2Vec2.MulSV(h, v, b2Island.s_translation);\r\n            if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\r\n                const ratio = b2_maxTranslation / translation.Length();\r\n                v.SelfMul(ratio);\r\n            }\r\n            const rotation = h * w;\r\n            if (rotation * rotation > b2_maxRotationSquared) {\r\n                const ratio = b2_maxRotation / b2Abs(rotation);\r\n                w *= ratio;\r\n            }\r\n            // Integrate\r\n            c.x += h * v.x;\r\n            c.y += h * v.y;\r\n            a += h * w;\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n        }\r\n        // Solve position constraints\r\n        timer.Reset();\r\n        let positionSolved = false;\r\n        for (let i = 0; i < step.positionIterations; ++i) {\r\n            const contactsOkay = contactSolver.SolvePositionConstraints();\r\n            let jointsOkay = true;\r\n            for (let j = 0; j < this.m_jointCount; ++j) {\r\n                const jointOkay = this.m_joints[j].SolvePositionConstraints(solverData);\r\n                jointsOkay = jointsOkay && jointOkay;\r\n            }\r\n            if (contactsOkay && jointsOkay) {\r\n                // Exit early if the position errors are small.\r\n                positionSolved = true;\r\n                break;\r\n            }\r\n        }\r\n        // Copy state buffers back to the bodies\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const body = this.m_bodies[i];\r\n            body.m_sweep.c.Copy(this.m_positions[i].c);\r\n            body.m_sweep.a = this.m_positions[i].a;\r\n            body.m_linearVelocity.Copy(this.m_velocities[i].v);\r\n            body.m_angularVelocity = this.m_velocities[i].w;\r\n            body.SynchronizeTransform();\r\n        }\r\n        profile.solvePosition = timer.GetMilliseconds();\r\n        this.Report(contactSolver.m_velocityConstraints);\r\n        if (allowSleep) {\r\n            let minSleepTime = b2_maxFloat;\r\n            const linTolSqr = b2_linearSleepTolerance * b2_linearSleepTolerance;\r\n            const angTolSqr = b2_angularSleepTolerance * b2_angularSleepTolerance;\r\n            for (let i = 0; i < this.m_bodyCount; ++i) {\r\n                const b = this.m_bodies[i];\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    continue;\r\n                }\r\n                if (!b.m_autoSleepFlag ||\r\n                    b.m_angularVelocity * b.m_angularVelocity > angTolSqr ||\r\n                    b2Vec2.DotVV(b.m_linearVelocity, b.m_linearVelocity) > linTolSqr) {\r\n                    b.m_sleepTime = 0;\r\n                    minSleepTime = 0;\r\n                }\r\n                else {\r\n                    b.m_sleepTime += h;\r\n                    minSleepTime = b2Min(minSleepTime, b.m_sleepTime);\r\n                }\r\n            }\r\n            if (minSleepTime >= b2_timeToSleep && positionSolved) {\r\n                for (let i = 0; i < this.m_bodyCount; ++i) {\r\n                    const b = this.m_bodies[i];\r\n                    b.SetAwake(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveTOI(subStep, toiIndexA, toiIndexB) {\r\n        // DEBUG: b2Assert(toiIndexA < this.m_bodyCount);\r\n        // DEBUG: b2Assert(toiIndexB < this.m_bodyCount);\r\n        // Initialize the body state.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const b = this.m_bodies[i];\r\n            this.m_positions[i].c.Copy(b.m_sweep.c);\r\n            this.m_positions[i].a = b.m_sweep.a;\r\n            this.m_velocities[i].v.Copy(b.m_linearVelocity);\r\n            this.m_velocities[i].w = b.m_angularVelocity;\r\n        }\r\n        const contactSolverDef = b2Island.s_contactSolverDef;\r\n        contactSolverDef.contacts = this.m_contacts;\r\n        contactSolverDef.count = this.m_contactCount;\r\n        contactSolverDef.allocator = this.m_allocator;\r\n        contactSolverDef.step.Copy(subStep);\r\n        contactSolverDef.positions = this.m_positions;\r\n        contactSolverDef.velocities = this.m_velocities;\r\n        const contactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\r\n        // Solve position constraints.\r\n        for (let i = 0; i < subStep.positionIterations; ++i) {\r\n            const contactsOkay = contactSolver.SolveTOIPositionConstraints(toiIndexA, toiIndexB);\r\n            if (contactsOkay) {\r\n                break;\r\n            }\r\n        }\r\n        /*\r\n        #if 0\r\n          // Is the new position really safe?\r\n          for (int32 i = 0; i < this.m_contactCount; ++i) {\r\n            b2Contact* c = this.m_contacts[i];\r\n            b2Fixture* fA = c.GetFixtureA();\r\n            b2Fixture* fB = c.GetFixtureB();\r\n      \r\n            b2Body* bA = fA.GetBody();\r\n            b2Body* bB = fB.GetBody();\r\n      \r\n            int32 indexA = c.GetChildIndexA();\r\n            int32 indexB = c.GetChildIndexB();\r\n      \r\n            b2DistanceInput input;\r\n            input.proxyA.Set(fA.GetShape(), indexA);\r\n            input.proxyB.Set(fB.GetShape(), indexB);\r\n            input.transformA = bA.GetTransform();\r\n            input.transformB = bB.GetTransform();\r\n            input.useRadii = false;\r\n      \r\n            b2DistanceOutput output;\r\n            b2SimplexCache cache;\r\n            cache.count = 0;\r\n            b2Distance(&output, &cache, &input);\r\n      \r\n            if (output.distance === 0 || cache.count === 3) {\r\n              cache.count += 0;\r\n            }\r\n          }\r\n        #endif\r\n        */\r\n        // Leap of faith to new safe state.\r\n        this.m_bodies[toiIndexA].m_sweep.c0.Copy(this.m_positions[toiIndexA].c);\r\n        this.m_bodies[toiIndexA].m_sweep.a0 = this.m_positions[toiIndexA].a;\r\n        this.m_bodies[toiIndexB].m_sweep.c0.Copy(this.m_positions[toiIndexB].c);\r\n        this.m_bodies[toiIndexB].m_sweep.a0 = this.m_positions[toiIndexB].a;\r\n        // No warm starting is needed for TOI events because warm\r\n        // starting impulses were applied in the discrete solver.\r\n        contactSolver.InitializeVelocityConstraints();\r\n        // Solve velocity constraints.\r\n        for (let i = 0; i < subStep.velocityIterations; ++i) {\r\n            contactSolver.SolveVelocityConstraints();\r\n        }\r\n        // Don't store the TOI contact forces for warm starting\r\n        // because they can be quite large.\r\n        const h = subStep.dt;\r\n        // Integrate positions\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const c = this.m_positions[i].c;\r\n            let a = this.m_positions[i].a;\r\n            const v = this.m_velocities[i].v;\r\n            let w = this.m_velocities[i].w;\r\n            // Check for large velocities\r\n            const translation = b2Vec2.MulSV(h, v, b2Island.s_translation);\r\n            if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\r\n                const ratio = b2_maxTranslation / translation.Length();\r\n                v.SelfMul(ratio);\r\n            }\r\n            const rotation = h * w;\r\n            if (rotation * rotation > b2_maxRotationSquared) {\r\n                const ratio = b2_maxRotation / b2Abs(rotation);\r\n                w *= ratio;\r\n            }\r\n            // Integrate\r\n            c.SelfMulAdd(h, v);\r\n            a += h * w;\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n            // Sync bodies\r\n            const body = this.m_bodies[i];\r\n            body.m_sweep.c.Copy(c);\r\n            body.m_sweep.a = a;\r\n            body.m_linearVelocity.Copy(v);\r\n            body.m_angularVelocity = w;\r\n            body.SynchronizeTransform();\r\n        }\r\n        this.Report(contactSolver.m_velocityConstraints);\r\n    }\r\n    Report(constraints) {\r\n        if (this.m_listener === null) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.m_contactCount; ++i) {\r\n            const c = this.m_contacts[i];\r\n            if (!c) {\r\n                continue;\r\n            }\r\n            const vc = constraints[i];\r\n            const impulse = b2Island.s_impulse;\r\n            impulse.count = vc.pointCount;\r\n            for (let j = 0; j < vc.pointCount; ++j) {\r\n                impulse.normalImpulses[j] = vc.points[j].normalImpulse;\r\n                impulse.tangentImpulses[j] = vc.points[j].tangentImpulse;\r\n            }\r\n            this.m_listener.PostSolve(c, impulse);\r\n        }\r\n    }\r\n}\r\nb2Island.s_timer = new b2Timer();\r\nb2Island.s_solverData = new b2SolverData();\r\nb2Island.s_contactSolverDef = new b2ContactSolverDef();\r\nb2Island.s_contactSolver = new b2ContactSolver();\r\nb2Island.s_translation = new b2Vec2();\r\nb2Island.s_impulse = new b2ContactImpulse();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_invalidParticleIndex } from \"../Common/b2Settings\";\r\nimport { b2Clamp, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\n/**\r\n * The particle type. Can be combined with the | operator.\r\n */\r\nexport var b2ParticleFlag;\r\n(function (b2ParticleFlag) {\r\n    /// Water particle.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_waterParticle\"] = 0] = \"b2_waterParticle\";\r\n    /// Removed after next simulation step.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_zombieParticle\"] = 2] = \"b2_zombieParticle\";\r\n    /// Zero velocity.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_wallParticle\"] = 4] = \"b2_wallParticle\";\r\n    /// With restitution from stretching.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_springParticle\"] = 8] = \"b2_springParticle\";\r\n    /// With restitution from deformation.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_elasticParticle\"] = 16] = \"b2_elasticParticle\";\r\n    /// With viscosity.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_viscousParticle\"] = 32] = \"b2_viscousParticle\";\r\n    /// Without isotropic pressure.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_powderParticle\"] = 64] = \"b2_powderParticle\";\r\n    /// With surface tension.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_tensileParticle\"] = 128] = \"b2_tensileParticle\";\r\n    /// Mix color between contacting particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_colorMixingParticle\"] = 256] = \"b2_colorMixingParticle\";\r\n    /// Call b2DestructionListener on destruction.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_destructionListenerParticle\"] = 512] = \"b2_destructionListenerParticle\";\r\n    /// Prevents other particles from leaking.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_barrierParticle\"] = 1024] = \"b2_barrierParticle\";\r\n    /// Less compressibility.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_staticPressureParticle\"] = 2048] = \"b2_staticPressureParticle\";\r\n    /// Makes pairs or triads with other particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_reactiveParticle\"] = 4096] = \"b2_reactiveParticle\";\r\n    /// With high repulsive force.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_repulsiveParticle\"] = 8192] = \"b2_repulsiveParticle\";\r\n    /// Call b2ContactListener when this particle is about to interact with\r\n    /// a rigid body or stops interacting with a rigid body.\r\n    /// This results in an expensive operation compared to using\r\n    /// b2_fixtureContactFilterParticle to detect collisions between\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_fixtureContactListenerParticle\"] = 16384] = \"b2_fixtureContactListenerParticle\";\r\n    /// Call b2ContactListener when this particle is about to interact with\r\n    /// another particle or stops interacting with another particle.\r\n    /// This results in an expensive operation compared to using\r\n    /// b2_particleContactFilterParticle to detect collisions between\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_particleContactListenerParticle\"] = 32768] = \"b2_particleContactListenerParticle\";\r\n    /// Call b2ContactFilter when this particle interacts with rigid bodies.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_fixtureContactFilterParticle\"] = 65536] = \"b2_fixtureContactFilterParticle\";\r\n    /// Call b2ContactFilter when this particle interacts with other\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_particleContactFilterParticle\"] = 131072] = \"b2_particleContactFilterParticle\";\r\n})(b2ParticleFlag || (b2ParticleFlag = {}));\r\nexport class b2ParticleDef {\r\n    constructor() {\r\n        this.flags = 0;\r\n        this.position = new b2Vec2();\r\n        this.velocity = new b2Vec2();\r\n        this.color = new b2Color(0, 0, 0, 0);\r\n        this.lifetime = 0.0;\r\n        this.userData = null;\r\n        this.group = null;\r\n    }\r\n}\r\nexport function b2CalculateParticleIterations(gravity, radius, timeStep) {\r\n    // In some situations you may want more particle iterations than this,\r\n    // but to avoid excessive cycle cost, don't recommend more than this.\r\n    const B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS = 8;\r\n    const B2_RADIUS_THRESHOLD = 0.01;\r\n    const iterations = Math.ceil(Math.sqrt(gravity / (B2_RADIUS_THRESHOLD * radius)) * timeStep);\r\n    return b2Clamp(iterations, 1, B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS);\r\n}\r\nexport class b2ParticleHandle {\r\n    constructor() {\r\n        this.m_index = b2_invalidParticleIndex;\r\n    }\r\n    GetIndex() { return this.m_index; }\r\n    SetIndex(index) { this.m_index = index; }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQYXJ0aWNsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL1BhcnRpY2xlL2IyUGFydGljbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCx5QkFBeUI7QUFFekIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDL0QsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQU0sTUFBTSxrQkFBa0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsT0FBTyxFQUFRLE1BQU0sa0JBQWtCLENBQUM7QUFHakQ7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxjQThDWDtBQTlDRCxXQUFZLGNBQWM7SUFDeEIsbUJBQW1CO0lBQ25CLDJFQUFvQixDQUFBO0lBQ3BCLHVDQUF1QztJQUN2Qyw2RUFBMEIsQ0FBQTtJQUMxQixrQkFBa0I7SUFDbEIseUVBQXdCLENBQUE7SUFDeEIscUNBQXFDO0lBQ3JDLDZFQUEwQixDQUFBO0lBQzFCLHNDQUFzQztJQUN0QyxnRkFBMkIsQ0FBQTtJQUMzQixtQkFBbUI7SUFDbkIsZ0ZBQTJCLENBQUE7SUFDM0IsK0JBQStCO0lBQy9CLDhFQUEwQixDQUFBO0lBQzFCLHlCQUF5QjtJQUN6QixpRkFBMkIsQ0FBQTtJQUMzQiwyQ0FBMkM7SUFDM0MseUZBQStCLENBQUE7SUFDL0IsOENBQThDO0lBQzlDLHlHQUF1QyxDQUFBO0lBQ3ZDLDBDQUEwQztJQUMxQyxrRkFBNEIsQ0FBQTtJQUM1Qix5QkFBeUI7SUFDekIsZ0dBQW1DLENBQUE7SUFDbkMsK0NBQStDO0lBQy9DLG9GQUE2QixDQUFBO0lBQzdCLDhCQUE4QjtJQUM5QixzRkFBOEIsQ0FBQTtJQUM5Qix1RUFBdUU7SUFDdkUsd0RBQXdEO0lBQ3hELDREQUE0RDtJQUM1RCxnRUFBZ0U7SUFDaEUsY0FBYztJQUNkLGlIQUEyQyxDQUFBO0lBQzNDLHVFQUF1RTtJQUN2RSxnRUFBZ0U7SUFDaEUsNERBQTREO0lBQzVELGlFQUFpRTtJQUNqRSxjQUFjO0lBQ2QsbUhBQTRDLENBQUE7SUFDNUMsd0VBQXdFO0lBQ3hFLDZHQUF5QyxDQUFBO0lBQ3pDLGdFQUFnRTtJQUNoRSxjQUFjO0lBQ2QsZ0hBQTBDLENBQUE7QUFDNUMsQ0FBQyxFQTlDVyxjQUFjLEtBQWQsY0FBYyxRQThDekI7QUFZRCxNQUFNLE9BQU8sYUFBYTtJQUExQjtRQUNTLFVBQUssR0FBbUIsQ0FBQyxDQUFDO1FBQ2pCLGFBQVEsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ2hDLGFBQVEsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ2hDLFVBQUssR0FBWSxJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNsRCxhQUFRLEdBQVcsR0FBRyxDQUFDO1FBQ3ZCLGFBQVEsR0FBUSxJQUFJLENBQUM7UUFDckIsVUFBSyxHQUEyQixJQUFJLENBQUM7SUFDOUMsQ0FBQztDQUFBO0FBRUQsTUFBTSxVQUFVLDZCQUE2QixDQUFDLE9BQWUsRUFBRSxNQUFjLEVBQUUsUUFBZ0I7SUFDN0Ysc0VBQXNFO0lBQ3RFLHFFQUFxRTtJQUNyRSxNQUFNLHNDQUFzQyxHQUFHLENBQUMsQ0FBQztJQUNqRCxNQUFNLG1CQUFtQixHQUFHLElBQUksQ0FBQztJQUNqQyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsbUJBQW1CLEdBQUcsTUFBTSxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQztJQUM3RixPQUFPLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQyxFQUFFLHNDQUFzQyxDQUFDLENBQUM7QUFDeEUsQ0FBQztBQUVELE1BQU0sT0FBTyxnQkFBZ0I7SUFBN0I7UUFDUyxZQUFPLEdBQVcsdUJBQXVCLENBQUM7SUFHbkQsQ0FBQztJQUZRLFFBQVEsS0FBYSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzNDLFFBQVEsQ0FBQyxLQUFhLElBQVUsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO0NBQy9EO0FBRUQsU0FBUyJ9","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\nexport var b2ParticleGroupFlag;\r\n(function (b2ParticleGroupFlag) {\r\n    /// Prevents overlapping or leaking.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_solidParticleGroup\"] = 1] = \"b2_solidParticleGroup\";\r\n    /// Keeps its shape.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_rigidParticleGroup\"] = 2] = \"b2_rigidParticleGroup\";\r\n    /// Won't be destroyed if it gets empty.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupCanBeEmpty\"] = 4] = \"b2_particleGroupCanBeEmpty\";\r\n    /// Will be destroyed on next simulation step.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupWillBeDestroyed\"] = 8] = \"b2_particleGroupWillBeDestroyed\";\r\n    /// Updates depth data on next simulation step.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupNeedsUpdateDepth\"] = 16] = \"b2_particleGroupNeedsUpdateDepth\";\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupInternalMask\"] = 24] = \"b2_particleGroupInternalMask\";\r\n})(b2ParticleGroupFlag || (b2ParticleGroupFlag = {}));\r\nexport class b2ParticleGroupDef {\r\n    constructor() {\r\n        this.flags = 0;\r\n        this.groupFlags = 0;\r\n        this.position = new b2Vec2();\r\n        this.angle = 0.0;\r\n        this.linearVelocity = new b2Vec2();\r\n        this.angularVelocity = 0.0;\r\n        this.color = new b2Color();\r\n        this.strength = 1.0;\r\n        this.shapeCount = 0;\r\n        this.stride = 0;\r\n        this.particleCount = 0;\r\n        this.lifetime = 0;\r\n        this.userData = null;\r\n        this.group = null;\r\n    }\r\n}\r\nexport class b2ParticleGroup {\r\n    constructor(system) {\r\n        this.m_firstIndex = 0;\r\n        this.m_lastIndex = 0;\r\n        this.m_groupFlags = 0;\r\n        this.m_strength = 1.0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_timestamp = -1;\r\n        this.m_mass = 0.0;\r\n        this.m_inertia = 0.0;\r\n        this.m_center = new b2Vec2();\r\n        this.m_linearVelocity = new b2Vec2();\r\n        this.m_angularVelocity = 0.0;\r\n        this.m_transform = new b2Transform();\r\n        ///m_transform.SetIdentity();\r\n        this.m_userData = null;\r\n        this.m_system = system;\r\n    }\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    GetParticleSystem() {\r\n        return this.m_system;\r\n    }\r\n    GetParticleCount() {\r\n        return this.m_lastIndex - this.m_firstIndex;\r\n    }\r\n    GetBufferIndex() {\r\n        return this.m_firstIndex;\r\n    }\r\n    ContainsParticle(index) {\r\n        return this.m_firstIndex <= index && index < this.m_lastIndex;\r\n    }\r\n    GetAllParticleFlags() {\r\n        if (!this.m_system.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        let flags = 0;\r\n        for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n            flags |= this.m_system.m_flagsBuffer.data[i];\r\n        }\r\n        return flags;\r\n    }\r\n    GetGroupFlags() {\r\n        return this.m_groupFlags;\r\n    }\r\n    SetGroupFlags(flags) {\r\n        // DEBUG: b2Assert((flags & b2ParticleGroupFlag.b2_particleGroupInternalMask) === 0);\r\n        flags |= this.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupInternalMask;\r\n        this.m_system.SetGroupFlags(this, flags);\r\n    }\r\n    GetMass() {\r\n        this.UpdateStatistics();\r\n        return this.m_mass;\r\n    }\r\n    GetInertia() {\r\n        this.UpdateStatistics();\r\n        return this.m_inertia;\r\n    }\r\n    GetCenter() {\r\n        this.UpdateStatistics();\r\n        return this.m_center;\r\n    }\r\n    GetLinearVelocity() {\r\n        this.UpdateStatistics();\r\n        return this.m_linearVelocity;\r\n    }\r\n    GetAngularVelocity() {\r\n        this.UpdateStatistics();\r\n        return this.m_angularVelocity;\r\n    }\r\n    GetTransform() {\r\n        return this.m_transform;\r\n    }\r\n    GetPosition() {\r\n        return this.m_transform.p;\r\n    }\r\n    GetAngle() {\r\n        return this.m_transform.q.GetAngle();\r\n    }\r\n    GetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n        const s_t0 = b2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0;\r\n        this.UpdateStatistics();\r\n        ///  return m_linearVelocity + b2Cross(m_angularVelocity, worldPoint - m_center);\r\n        return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_center, s_t0), out);\r\n    }\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    ApplyForce(force) {\r\n        this.m_system.ApplyForce(this.m_firstIndex, this.m_lastIndex, force);\r\n    }\r\n    ApplyLinearImpulse(impulse) {\r\n        this.m_system.ApplyLinearImpulse(this.m_firstIndex, this.m_lastIndex, impulse);\r\n    }\r\n    DestroyParticles(callDestructionListener) {\r\n        if (this.m_system.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n            this.m_system.DestroyParticle(i, callDestructionListener);\r\n        }\r\n    }\r\n    UpdateStatistics() {\r\n        if (!this.m_system.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_system.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const p = new b2Vec2();\r\n        const v = new b2Vec2();\r\n        if (this.m_timestamp !== this.m_system.m_timestamp) {\r\n            const m = this.m_system.GetParticleMass();\r\n            ///  this.m_mass = 0;\r\n            this.m_mass = m * (this.m_lastIndex - this.m_firstIndex);\r\n            this.m_center.SetZero();\r\n            this.m_linearVelocity.SetZero();\r\n            for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n                ///  this.m_mass += m;\r\n                ///  this.m_center += m * this.m_system.m_positionBuffer.data[i];\r\n                this.m_center.SelfMulAdd(m, this.m_system.m_positionBuffer.data[i]);\r\n                ///  this.m_linearVelocity += m * this.m_system.m_velocityBuffer.data[i];\r\n                this.m_linearVelocity.SelfMulAdd(m, this.m_system.m_velocityBuffer.data[i]);\r\n            }\r\n            if (this.m_mass > 0) {\r\n                const inv_mass = 1 / this.m_mass;\r\n                ///this.m_center *= 1 / this.m_mass;\r\n                this.m_center.SelfMul(inv_mass);\r\n                ///this.m_linearVelocity *= 1 / this.m_mass;\r\n                this.m_linearVelocity.SelfMul(inv_mass);\r\n            }\r\n            this.m_inertia = 0;\r\n            this.m_angularVelocity = 0;\r\n            for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n                ///b2Vec2 p = this.m_system.m_positionBuffer.data[i] - this.m_center;\r\n                b2Vec2.SubVV(this.m_system.m_positionBuffer.data[i], this.m_center, p);\r\n                ///b2Vec2 v = this.m_system.m_velocityBuffer.data[i] - this.m_linearVelocity;\r\n                b2Vec2.SubVV(this.m_system.m_velocityBuffer.data[i], this.m_linearVelocity, v);\r\n                this.m_inertia += m * b2Vec2.DotVV(p, p);\r\n                this.m_angularVelocity += m * b2Vec2.CrossVV(p, v);\r\n            }\r\n            if (this.m_inertia > 0) {\r\n                this.m_angularVelocity *= 1 / this.m_inertia;\r\n            }\r\n            this.m_timestamp = this.m_system.m_timestamp;\r\n        }\r\n    }\r\n}\r\nb2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0 = new b2Vec2();\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQYXJ0aWNsZUdyb3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvUGFydGljbGUvYjJQYXJ0aWNsZUdyb3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBRUgseUJBQXlCO0FBRXpCLDBEQUEwRDtBQUMxRCxPQUFPLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBTSxNQUFNLGtCQUFrQixDQUFDO0FBQzNELE9BQU8sRUFBRSxPQUFPLEVBQVEsTUFBTSxrQkFBa0IsQ0FBQztBQUtqRCxNQUFNLENBQU4sSUFBWSxtQkFhWDtBQWJELFdBQVksbUJBQW1CO0lBQzdCLG9DQUFvQztJQUNwQywrRkFBOEIsQ0FBQTtJQUM5QixvQkFBb0I7SUFDcEIsK0ZBQThCLENBQUE7SUFDOUIsd0NBQXdDO0lBQ3hDLHlHQUFtQyxDQUFBO0lBQ25DLDhDQUE4QztJQUM5QyxtSEFBd0MsQ0FBQTtJQUN4QywrQ0FBK0M7SUFDL0Msc0hBQXlDLENBQUE7SUFFekMsOEdBQWlHLENBQUE7QUFDbkcsQ0FBQyxFQWJXLG1CQUFtQixLQUFuQixtQkFBbUIsUUFhOUI7QUFzQkQsTUFBTSxPQUFPLGtCQUFrQjtJQUEvQjtRQUNTLFVBQUssR0FBbUIsQ0FBQyxDQUFDO1FBQzFCLGVBQVUsR0FBd0IsQ0FBQyxDQUFDO1FBQzNCLGFBQVEsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ3pDLFVBQUssR0FBVyxHQUFHLENBQUM7UUFDWCxtQkFBYyxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFDL0Msb0JBQWUsR0FBVyxHQUFHLENBQUM7UUFDckIsVUFBSyxHQUFZLElBQUksT0FBTyxFQUFFLENBQUM7UUFDeEMsYUFBUSxHQUFXLEdBQUcsQ0FBQztRQUd2QixlQUFVLEdBQVcsQ0FBQyxDQUFDO1FBQ3ZCLFdBQU0sR0FBVyxDQUFDLENBQUM7UUFDbkIsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFFMUIsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixhQUFRLEdBQVEsSUFBSSxDQUFDO1FBQ3JCLFVBQUssR0FBMkIsSUFBSSxDQUFDO0lBQzlDLENBQUM7Q0FBQTtBQUVELE1BQU0sT0FBTyxlQUFlO0lBbUIxQixZQUFZLE1BQXdCO1FBaEI3QixpQkFBWSxHQUFXLENBQUMsQ0FBQztRQUN6QixnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUN4QixpQkFBWSxHQUF3QixDQUFDLENBQUM7UUFDdEMsZUFBVSxHQUFXLEdBQUcsQ0FBQztRQUN6QixXQUFNLEdBQTJCLElBQUksQ0FBQztRQUN0QyxXQUFNLEdBQTJCLElBQUksQ0FBQztRQUN0QyxnQkFBVyxHQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3pCLFdBQU0sR0FBVyxHQUFHLENBQUM7UUFDckIsY0FBUyxHQUFXLEdBQUcsQ0FBQztRQUNmLGFBQVEsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ2hDLHFCQUFnQixHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFDakQsc0JBQWlCLEdBQVcsR0FBRyxDQUFDO1FBQ3ZCLGdCQUFXLEdBQWdCLElBQUksV0FBVyxFQUFFLENBQUM7UUFDN0QsNkJBQTZCO1FBQ3RCLGVBQVUsR0FBUSxJQUFJLENBQUM7UUFHNUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUM7SUFDekIsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVNLGlCQUFpQjtRQUN0QixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVNLGdCQUFnQjtRQUNyQixPQUFPLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztJQUM5QyxDQUFDO0lBRU0sY0FBYztRQUNuQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztJQUVNLGdCQUFnQixDQUFDLEtBQWE7UUFDbkMsT0FBTyxJQUFJLENBQUMsWUFBWSxJQUFJLEtBQUssSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUNoRSxDQUFDO0lBRU0sbUJBQW1CO1FBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUU7WUFBRSxNQUFNLElBQUksS0FBSyxFQUFFLENBQUM7U0FBRTtRQUM3RCxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZCxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDekQsS0FBSyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUM5QztRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVNLGFBQWE7UUFDbEIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzNCLENBQUM7SUFFTSxhQUFhLENBQUMsS0FBYTtRQUNoQyxxRkFBcUY7UUFDckYsS0FBSyxJQUFJLElBQUksQ0FBQyxZQUFZLEdBQUcsbUJBQW1CLENBQUMsNEJBQTRCLENBQUM7UUFDOUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFTSxPQUFPO1FBQ1osSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDeEIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxVQUFVO1FBQ2YsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDeEIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7SUFFTSxTQUFTO1FBQ2QsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDeEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxpQkFBaUI7UUFDdEIsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDeEIsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7SUFDL0IsQ0FBQztJQUVNLGtCQUFrQjtRQUN2QixJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUN4QixPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUNoQyxDQUFDO0lBRU0sWUFBWTtRQUNqQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVNLFdBQVc7UUFDaEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRU0sUUFBUTtRQUNiLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVNLCtCQUErQixDQUFlLFVBQWMsRUFBRSxHQUFNO1FBQ3pFLE1BQU0sSUFBSSxHQUFHLGVBQWUsQ0FBQyxvQ0FBb0MsQ0FBQztRQUNsRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUN4QixpRkFBaUY7UUFDakYsT0FBTyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUMvSCxDQUFDO0lBR00sV0FBVztRQUNoQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVNLFdBQVcsQ0FBQyxJQUFTO1FBQzFCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxVQUFVLENBQUMsS0FBUztRQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDdkUsQ0FBQztJQUVNLGtCQUFrQixDQUFDLE9BQVc7UUFDbkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDakYsQ0FBQztJQUVNLGdCQUFnQixDQUFDLHVCQUFnQztRQUN0RCxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQUUsTUFBTSxJQUFJLEtBQUssRUFBRSxDQUFDO1NBQUU7UUFFNUQsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pELElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUMsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1NBQzNEO0lBQ0gsQ0FBQztJQUVNLGdCQUFnQjtRQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUU7WUFBRSxNQUFNLElBQUksS0FBSyxFQUFFLENBQUM7U0FBRTtRQUNoRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUU7WUFBRSxNQUFNLElBQUksS0FBSyxFQUFFLENBQUM7U0FBRTtRQUNoRSxNQUFNLENBQUMsR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ3ZCLE1BQU0sQ0FBQyxHQUFHLElBQUksTUFBTSxFQUFFLENBQUM7UUFDdkIsSUFBSSxJQUFJLENBQUMsV0FBVyxLQUFLLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFO1lBQ2xELE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDMUMscUJBQXFCO1lBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDekQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUN4QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDaEMsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN6RCxzQkFBc0I7Z0JBQ3RCLGlFQUFpRTtnQkFDakUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BFLHlFQUF5RTtnQkFDekUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUM3RTtZQUNELElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQ25CLE1BQU0sUUFBUSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO2dCQUNqQyxvQ0FBb0M7Z0JBQ3BDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUNoQyw0Q0FBNEM7Z0JBQzVDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDekM7WUFDRCxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQztZQUNuQixJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDO1lBQzNCLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDekQscUVBQXFFO2dCQUNyRSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZFLDZFQUE2RTtnQkFDN0UsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQy9FLElBQUksQ0FBQyxTQUFTLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUN6QyxJQUFJLENBQUMsaUJBQWlCLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQ3BEO1lBQ0QsSUFBSSxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsRUFBRTtnQkFDdEIsSUFBSSxDQUFDLGlCQUFpQixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO2FBQzlDO1lBQ0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQztTQUM5QztJQUNILENBQUM7O0FBbEVzQixvREFBb0MsR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDO0FBcUU3RSxTQUFTIn0=","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2MakeArray } from \"../Common/b2Settings\";\r\nexport class b2StackQueue {\r\n    constructor(capacity) {\r\n        this.m_front = 0;\r\n        this.m_back = 0;\r\n        this.m_capacity = 0;\r\n        this.m_buffer = b2MakeArray(capacity, (index) => null);\r\n        this.m_capacity = capacity;\r\n    }\r\n    Push(item) {\r\n        if (this.m_back >= this.m_capacity) {\r\n            for (let i = this.m_front; i < this.m_back; i++) {\r\n                this.m_buffer[i - this.m_front] = this.m_buffer[i];\r\n            }\r\n            this.m_back -= this.m_front;\r\n            this.m_front = 0;\r\n            if (this.m_back >= this.m_capacity) {\r\n                if (this.m_capacity > 0) {\r\n                    this.m_buffer.concat(b2MakeArray(this.m_capacity, (index) => null));\r\n                    this.m_capacity *= 2;\r\n                }\r\n                else {\r\n                    this.m_buffer.concat(b2MakeArray(1, (index) => null));\r\n                    this.m_capacity = 1;\r\n                }\r\n                ///m_buffer = (T*) m_allocator->Reallocate(m_buffer, sizeof(T) * m_capacity);\r\n            }\r\n        }\r\n        this.m_buffer[this.m_back] = item;\r\n        this.m_back++;\r\n    }\r\n    Pop() {\r\n        // DEBUG: b2Assert(this.m_front < this.m_back);\r\n        this.m_buffer[this.m_front] = null;\r\n        this.m_front++;\r\n    }\r\n    Empty() {\r\n        // DEBUG: b2Assert(this.m_front <= this.m_back);\r\n        return this.m_front === this.m_back;\r\n    }\r\n    Front() {\r\n        const item = this.m_buffer[this.m_front];\r\n        if (!item) {\r\n            throw new Error();\r\n        }\r\n        return item;\r\n    }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTdGFja1F1ZXVlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvUGFydGljbGUvYjJTdGFja1F1ZXVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBRUgseUJBQXlCO0FBRXpCLDBEQUEwRDtBQUMxRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFbkQsTUFBTSxPQUFPLFlBQVk7SUFLdkIsWUFBWSxRQUFnQjtRQUhyQixZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBQ3BCLFdBQU0sR0FBVyxDQUFDLENBQUM7UUFDbkIsZUFBVSxHQUFXLENBQUMsQ0FBQztRQUU1QixJQUFJLENBQUMsUUFBUSxHQUFHLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO0lBQzdCLENBQUM7SUFDTSxJQUFJLENBQUMsSUFBTztRQUNqQixJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNsQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQy9DLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BEO1lBQ0QsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQzVCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1lBQ2pCLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUNsQyxJQUFJLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxFQUFFO29CQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDcEUsSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLENBQUM7aUJBQ3RCO3FCQUFNO29CQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQ3RELElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO2lCQUNyQjtnQkFDRCw2RUFBNkU7YUFDOUU7U0FDRjtRQUNELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUNNLEdBQUc7UUFDUiwrQ0FBK0M7UUFDL0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBQ00sS0FBSztRQUNWLGdEQUFnRDtRQUNoRCxPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN0QyxDQUFDO0lBQ00sS0FBSztRQUNWLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFBRSxNQUFNLElBQUksS0FBSyxFQUFFLENBQUM7U0FBRTtRQUNqQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRjtBQUVELFNBQVMifQ==","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2StackQueue } from \"./b2StackQueue\";\r\n/**\r\n * A field representing the nearest generator from each point.\r\n */\r\nexport class b2VoronoiDiagram {\r\n    constructor(generatorCapacity) {\r\n        this.m_generatorCapacity = 0;\r\n        this.m_generatorCount = 0;\r\n        this.m_countX = 0;\r\n        this.m_countY = 0;\r\n        this.m_diagram = [];\r\n        this.m_generatorBuffer = b2MakeArray(generatorCapacity, (index) => new b2VoronoiDiagram.Generator());\r\n        this.m_generatorCapacity = generatorCapacity;\r\n    }\r\n    /**\r\n     * Add a generator.\r\n     *\r\n     * @param center the position of the generator.\r\n     * @param tag a tag used to identify the generator in callback functions.\r\n     * @param necessary whether to callback for nodes associated with the generator.\r\n     */\r\n    AddGenerator(center, tag, necessary) {\r\n        // DEBUG: b2Assert(this.m_generatorCount < this.m_generatorCapacity);\r\n        const g = this.m_generatorBuffer[this.m_generatorCount++];\r\n        g.center.Copy(center);\r\n        g.tag = tag;\r\n        g.necessary = necessary;\r\n    }\r\n    /**\r\n     * Generate the Voronoi diagram. It is rasterized with a given\r\n     * interval in the same range as the necessary generators exist.\r\n     *\r\n     * @param radius the interval of the diagram.\r\n     * @param margin margin for which the range of the diagram is extended.\r\n     */\r\n    Generate(radius, margin) {\r\n        const inverseRadius = 1 / radius;\r\n        const lower = new b2Vec2(+b2_maxFloat, +b2_maxFloat);\r\n        const upper = new b2Vec2(-b2_maxFloat, -b2_maxFloat);\r\n        let necessary_count = 0;\r\n        for (let k = 0; k < this.m_generatorCount; k++) {\r\n            const g = this.m_generatorBuffer[k];\r\n            if (g.necessary) {\r\n                b2Vec2.MinV(lower, g.center, lower);\r\n                b2Vec2.MaxV(upper, g.center, upper);\r\n                ++necessary_count;\r\n            }\r\n        }\r\n        if (necessary_count === 0) {\r\n            ///debugger;\r\n            this.m_countX = 0;\r\n            this.m_countY = 0;\r\n            return;\r\n        }\r\n        lower.x -= margin;\r\n        lower.y -= margin;\r\n        upper.x += margin;\r\n        upper.y += margin;\r\n        this.m_countX = 1 + Math.floor(inverseRadius * (upper.x - lower.x));\r\n        this.m_countY = 1 + Math.floor(inverseRadius * (upper.y - lower.y));\r\n        ///  m_diagram = (Generator**) m_allocator->Allocate(sizeof(Generator*) * m_countX * m_countY);\r\n        ///  for (int32 i = 0; i < m_countX * m_countY; i++)\r\n        ///  {\r\n        ///    m_diagram[i] = NULL;\r\n        ///  }\r\n        this.m_diagram = []; // b2MakeArray(this.m_countX * this.m_countY, (index) => null);\r\n        // (4 * m_countX * m_countY) is the queue capacity that is experimentally\r\n        // known to be necessary and sufficient for general particle distributions.\r\n        const queue = new b2StackQueue(4 * this.m_countX * this.m_countY);\r\n        for (let k = 0; k < this.m_generatorCount; k++) {\r\n            const g = this.m_generatorBuffer[k];\r\n            ///  g.center = inverseRadius * (g.center - lower);\r\n            g.center.SelfSub(lower).SelfMul(inverseRadius);\r\n            const x = Math.floor(g.center.x);\r\n            const y = Math.floor(g.center.y);\r\n            if (x >= 0 && y >= 0 && x < this.m_countX && y < this.m_countY) {\r\n                queue.Push(new b2VoronoiDiagram.Task(x, y, x + y * this.m_countX, g));\r\n            }\r\n        }\r\n        while (!queue.Empty()) {\r\n            const task = queue.Front();\r\n            const x = task.m_x;\r\n            const y = task.m_y;\r\n            const i = task.m_i;\r\n            const g = task.m_generator;\r\n            queue.Pop();\r\n            if (!this.m_diagram[i]) {\r\n                this.m_diagram[i] = g;\r\n                if (x > 0) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x - 1, y, i - 1, g));\r\n                }\r\n                if (y > 0) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y - 1, i - this.m_countX, g));\r\n                }\r\n                if (x < this.m_countX - 1) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, g));\r\n                }\r\n                if (y < this.m_countY - 1) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, g));\r\n                }\r\n            }\r\n        }\r\n        for (let y = 0; y < this.m_countY; y++) {\r\n            for (let x = 0; x < this.m_countX - 1; x++) {\r\n                const i = x + y * this.m_countX;\r\n                const a = this.m_diagram[i];\r\n                const b = this.m_diagram[i + 1];\r\n                if (a !== b) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y, i, b));\r\n                    queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, a));\r\n                }\r\n            }\r\n        }\r\n        for (let y = 0; y < this.m_countY - 1; y++) {\r\n            for (let x = 0; x < this.m_countX; x++) {\r\n                const i = x + y * this.m_countX;\r\n                const a = this.m_diagram[i];\r\n                const b = this.m_diagram[i + this.m_countX];\r\n                if (a !== b) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y, i, b));\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, a));\r\n                }\r\n            }\r\n        }\r\n        while (!queue.Empty()) {\r\n            const task = queue.Front();\r\n            const x = task.m_x;\r\n            const y = task.m_y;\r\n            const i = task.m_i;\r\n            const k = task.m_generator;\r\n            queue.Pop();\r\n            const a = this.m_diagram[i];\r\n            const b = k;\r\n            if (a !== b) {\r\n                const ax = a.center.x - x;\r\n                const ay = a.center.y - y;\r\n                const bx = b.center.x - x;\r\n                const by = b.center.y - y;\r\n                const a2 = ax * ax + ay * ay;\r\n                const b2 = bx * bx + by * by;\r\n                if (a2 > b2) {\r\n                    this.m_diagram[i] = b;\r\n                    if (x > 0) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x - 1, y, i - 1, b));\r\n                    }\r\n                    if (y > 0) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x, y - 1, i - this.m_countX, b));\r\n                    }\r\n                    if (x < this.m_countX - 1) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, b));\r\n                    }\r\n                    if (y < this.m_countY - 1) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, b));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enumerate all nodes that contain at least one necessary\r\n     * generator.\r\n     */\r\n    GetNodes(callback) {\r\n        for (let y = 0; y < this.m_countY - 1; y++) {\r\n            for (let x = 0; x < this.m_countX - 1; x++) {\r\n                const i = x + y * this.m_countX;\r\n                const a = this.m_diagram[i];\r\n                const b = this.m_diagram[i + 1];\r\n                const c = this.m_diagram[i + this.m_countX];\r\n                const d = this.m_diagram[i + 1 + this.m_countX];\r\n                if (b !== c) {\r\n                    if (a !== b && a !== c &&\r\n                        (a.necessary || b.necessary || c.necessary)) {\r\n                        callback(a.tag, b.tag, c.tag);\r\n                    }\r\n                    if (d !== b && d !== c &&\r\n                        (a.necessary || b.necessary || c.necessary)) {\r\n                        callback(b.tag, d.tag, c.tag);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n(function (b2VoronoiDiagram) {\r\n    class Generator {\r\n        constructor() {\r\n            this.center = new b2Vec2();\r\n            this.tag = 0;\r\n            this.necessary = false;\r\n        }\r\n    }\r\n    b2VoronoiDiagram.Generator = Generator;\r\n    class Task {\r\n        constructor(x, y, i, g) {\r\n            this.m_x = x;\r\n            this.m_y = y;\r\n            this.m_i = i;\r\n            this.m_generator = g;\r\n        }\r\n    }\r\n    b2VoronoiDiagram.Task = Task;\r\n})(b2VoronoiDiagram || (b2VoronoiDiagram = {})); // namespace b2VoronoiDiagram\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\n// DEBUG: import { b2Assert, b2_maxParticleIndex } from \"../Common/b2Settings\";\r\nimport { b2_linearSlop, b2_maxFloat, b2_invalidParticleIndex, b2_minParticleSystemBufferCapacity, b2_maxTriadDistanceSquared, b2_barrierCollisionTime, b2MakeArray, b2Maybe } from \"../Common/b2Settings\";\r\nimport { b2_maxParticlePressure, b2_minParticleWeight, b2_maxParticleForce, b2_particleStride } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Max, b2Abs, b2Clamp, b2Sqrt, b2InvSqrt, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"../Collision/b2Collision\";\r\nimport { b2ShapeType, b2Shape } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2EdgeShape } from \"../Collision/Shapes/b2EdgeShape\";\r\nimport { b2TimeStep } from \"../Dynamics/b2TimeStep\";\r\nimport { b2QueryCallback } from \"../Dynamics/b2WorldCallbacks\";\r\nimport { b2ParticleFlag, b2ParticleDef, b2ParticleHandle } from \"./b2Particle\";\r\nimport { b2ParticleGroupFlag, b2ParticleGroupDef, b2ParticleGroup } from \"./b2ParticleGroup\";\r\nimport { b2VoronoiDiagram } from \"./b2VoronoiDiagram\";\r\nfunction std_iter_swap(array, a, b) {\r\n    const tmp = array[a];\r\n    array[a] = array[b];\r\n    array[b] = tmp;\r\n}\r\nfunction default_compare(a, b) { return a < b; }\r\nfunction std_sort(array, first = 0, len = array.length - first, cmp = default_compare) {\r\n    let left = first;\r\n    const stack = [];\r\n    let pos = 0;\r\n    for (;;) { /* outer loop */\r\n        for (; left + 1 < len; len++) { /* sort left to len-1 */\r\n            const pivot = array[left + Math.floor(Math.random() * (len - left))]; /* pick random pivot */\r\n            stack[pos++] = len; /* sort right part later */\r\n            for (let right = left - 1;;) { /* inner loop: partitioning */\r\n                while (cmp(array[++right], pivot)) { } /* look for greater element */\r\n                while (cmp(pivot, array[--len])) { } /* look for smaller element */\r\n                if (right >= len) {\r\n                    break;\r\n                } /* partition point found? */\r\n                std_iter_swap(array, right, len); /* the only swap */\r\n            } /* partitioned, continue left part */\r\n        }\r\n        if (pos === 0) {\r\n            break;\r\n        } /* stack empty? */\r\n        left = len; /* left to right is sorted */\r\n        len = stack[--pos]; /* get next range to sort */\r\n    }\r\n    return array;\r\n}\r\nfunction std_stable_sort(array, first = 0, len = array.length - first, cmp = default_compare) {\r\n    return std_sort(array, first, len, cmp);\r\n}\r\nfunction std_remove_if(array, predicate, length = array.length) {\r\n    let l = 0;\r\n    for (let c = 0; c < length; ++c) {\r\n        // if we can be collapsed, keep l where it is.\r\n        if (predicate(array[c])) {\r\n            continue;\r\n        }\r\n        // this node can't be collapsed; push it back as far as we can.\r\n        if (c === l) {\r\n            ++l;\r\n            continue; // quick exit if we're already in the right spot\r\n        }\r\n        // array[l++] = array[c];\r\n        std_iter_swap(array, l++, c);\r\n    }\r\n    return l;\r\n}\r\nfunction std_lower_bound(array, first, last, val, cmp = default_compare) {\r\n    let count = last - first;\r\n    while (count > 0) {\r\n        const step = Math.floor(count / 2);\r\n        let it = first + step;\r\n        if (cmp(array[it], val)) {\r\n            first = ++it;\r\n            count -= step + 1;\r\n        }\r\n        else {\r\n            count = step;\r\n        }\r\n    }\r\n    return first;\r\n}\r\nfunction std_upper_bound(array, first, last, val, cmp = default_compare) {\r\n    let count = last - first;\r\n    while (count > 0) {\r\n        const step = Math.floor(count / 2);\r\n        let it = first + step;\r\n        if (!cmp(val, array[it])) {\r\n            first = ++it;\r\n            count -= step + 1;\r\n        }\r\n        else {\r\n            count = step;\r\n        }\r\n    }\r\n    return first;\r\n}\r\nfunction std_rotate(array, first, n_first, last) {\r\n    let next = n_first;\r\n    while (first !== next) {\r\n        std_iter_swap(array, first++, next++);\r\n        if (next === last) {\r\n            next = n_first;\r\n        }\r\n        else if (first === n_first) {\r\n            n_first = next;\r\n        }\r\n    }\r\n}\r\nfunction std_unique(array, first, last, cmp) {\r\n    if (first === last) {\r\n        return last;\r\n    }\r\n    let result = first;\r\n    while (++first !== last) {\r\n        if (!cmp(array[result], array[first])) {\r\n            ///array[++result] = array[first];\r\n            std_iter_swap(array, ++result, first);\r\n        }\r\n    }\r\n    return ++result;\r\n}\r\nexport class b2GrowableBuffer {\r\n    constructor(allocator) {\r\n        this.data = [];\r\n        this.count = 0;\r\n        this.capacity = 0;\r\n        this.allocator = allocator;\r\n    }\r\n    Append() {\r\n        if (this.count >= this.capacity) {\r\n            this.Grow();\r\n        }\r\n        return this.count++;\r\n    }\r\n    Reserve(newCapacity) {\r\n        if (this.capacity >= newCapacity) {\r\n            return;\r\n        }\r\n        // DEBUG: b2Assert(this.capacity === this.data.length);\r\n        for (let i = this.capacity; i < newCapacity; ++i) {\r\n            this.data[i] = this.allocator();\r\n        }\r\n        this.capacity = newCapacity;\r\n    }\r\n    Grow() {\r\n        // Double the capacity.\r\n        const newCapacity = this.capacity ? 2 * this.capacity : b2_minParticleSystemBufferCapacity;\r\n        // DEBUG: b2Assert(newCapacity > this.capacity);\r\n        this.Reserve(newCapacity);\r\n    }\r\n    Free() {\r\n        if (this.data.length === 0) {\r\n            return;\r\n        }\r\n        this.data = [];\r\n        this.capacity = 0;\r\n        this.count = 0;\r\n    }\r\n    Shorten(newEnd) {\r\n        // DEBUG: b2Assert(false);\r\n    }\r\n    Data() {\r\n        return this.data;\r\n    }\r\n    GetCount() {\r\n        return this.count;\r\n    }\r\n    SetCount(newCount) {\r\n        // DEBUG: b2Assert(0 <= newCount && newCount <= this.capacity);\r\n        this.count = newCount;\r\n    }\r\n    GetCapacity() {\r\n        return this.capacity;\r\n    }\r\n    RemoveIf(pred) {\r\n        // DEBUG: let count = 0;\r\n        // DEBUG: for (let i = 0; i < this.count; ++i) {\r\n        // DEBUG:   if (!pred(this.data[i])) {\r\n        // DEBUG:     count++;\r\n        // DEBUG:   }\r\n        // DEBUG: }\r\n        this.count = std_remove_if(this.data, pred, this.count);\r\n        // DEBUG: b2Assert(count === this.count);\r\n    }\r\n    Unique(pred) {\r\n        this.count = std_unique(this.data, 0, this.count, pred);\r\n    }\r\n}\r\nexport class b2FixtureParticleQueryCallback extends b2QueryCallback {\r\n    constructor(system) {\r\n        super();\r\n        this.m_system = system;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        // Skip reporting particles.\r\n        return false;\r\n    }\r\n    ReportFixture(fixture) {\r\n        if (fixture.IsSensor()) {\r\n            return true;\r\n        }\r\n        const shape = fixture.GetShape();\r\n        const childCount = shape.GetChildCount();\r\n        for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n            const aabb = fixture.GetAABB(childIndex);\r\n            const enumerator = this.m_system.GetInsideBoundsEnumerator(aabb);\r\n            let index;\r\n            while ((index = enumerator.GetNext()) >= 0) {\r\n                this.ReportFixtureAndParticle(fixture, childIndex, index);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    ReportParticle(system, index) {\r\n        return false;\r\n    }\r\n    ReportFixtureAndParticle(fixture, childIndex, index) {\r\n        // DEBUG: b2Assert(false); // pure virtual\r\n    }\r\n}\r\nexport class b2ParticleContact {\r\n    constructor() {\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.weight = 0;\r\n        this.normal = new b2Vec2();\r\n        this.flags = 0;\r\n    }\r\n    SetIndices(a, b) {\r\n        // DEBUG: b2Assert(a <= b2_maxParticleIndex && b <= b2_maxParticleIndex);\r\n        this.indexA = a;\r\n        this.indexB = b;\r\n    }\r\n    SetWeight(w) {\r\n        this.weight = w;\r\n    }\r\n    SetNormal(n) {\r\n        this.normal.Copy(n);\r\n    }\r\n    SetFlags(f) {\r\n        this.flags = f;\r\n    }\r\n    GetIndexA() {\r\n        return this.indexA;\r\n    }\r\n    GetIndexB() {\r\n        return this.indexB;\r\n    }\r\n    GetWeight() {\r\n        return this.weight;\r\n    }\r\n    GetNormal() {\r\n        return this.normal;\r\n    }\r\n    GetFlags() {\r\n        return this.flags;\r\n    }\r\n    IsEqual(rhs) {\r\n        return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && this.weight === rhs.weight && this.normal.x === rhs.normal.x && this.normal.y === rhs.normal.y;\r\n    }\r\n    IsNotEqual(rhs) {\r\n        return !this.IsEqual(rhs);\r\n    }\r\n    ApproximatelyEqual(rhs) {\r\n        const MAX_WEIGHT_DIFF = 0.01; // Weight 0 ~ 1, so about 1%\r\n        const MAX_NORMAL_DIFF_SQ = 0.01 * 0.01; // Normal length = 1, so 1%\r\n        return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && b2Abs(this.weight - rhs.weight) < MAX_WEIGHT_DIFF && b2Vec2.DistanceSquaredVV(this.normal, rhs.normal) < MAX_NORMAL_DIFF_SQ;\r\n    }\r\n}\r\nexport class b2ParticleBodyContact {\r\n    constructor() {\r\n        this.index = 0; // Index of the particle making contact.\r\n        this.weight = 0.0; // Weight of the contact. A value between 0.0f and 1.0f.\r\n        this.normal = new b2Vec2(); // The normalized direction from the particle to the body.\r\n        this.mass = 0.0; // The effective mass used in calculating force.\r\n    }\r\n}\r\nexport class b2ParticlePair {\r\n    constructor() {\r\n        this.indexA = 0; // Indices of the respective particles making pair.\r\n        this.indexB = 0;\r\n        this.flags = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\r\n        this.strength = 0.0; // The strength of cohesion among the particles.\r\n        this.distance = 0.0; // The initial distance of the particles.\r\n    }\r\n}\r\nexport class b2ParticleTriad {\r\n    constructor() {\r\n        this.indexA = 0; // Indices of the respective particles making triad.\r\n        this.indexB = 0;\r\n        this.indexC = 0;\r\n        this.flags = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\r\n        this.strength = 0.0; // The strength of cohesion among the particles.\r\n        this.pa = new b2Vec2(0.0, 0.0); // Values used for calculation.\r\n        this.pb = new b2Vec2(0.0, 0.0);\r\n        this.pc = new b2Vec2(0.0, 0.0);\r\n        this.ka = 0.0;\r\n        this.kb = 0.0;\r\n        this.kc = 0.0;\r\n        this.s = 0.0;\r\n    }\r\n}\r\nexport class b2ParticleSystemDef {\r\n    constructor() {\r\n        // Initialize physical coefficients to the maximum values that\r\n        // maintain numerical stability.\r\n        /**\r\n         * Enable strict Particle/Body contact check.\r\n         * See SetStrictContactCheck for details.\r\n         */\r\n        this.strictContactCheck = false;\r\n        /**\r\n         * Set the particle density.\r\n         * See SetDensity for details.\r\n         */\r\n        this.density = 1.0;\r\n        /**\r\n         * Change the particle gravity scale. Adjusts the effect of the\r\n         * global gravity vector on particles. Default value is 1.0f.\r\n         */\r\n        this.gravityScale = 1.0;\r\n        /**\r\n         * Particles behave as circles with this radius. In Box2D units.\r\n         */\r\n        this.radius = 1.0;\r\n        /**\r\n         * Set the maximum number of particles.\r\n         * By default, there is no maximum. The particle buffers can\r\n         * continue to grow while b2World's block allocator still has\r\n         * memory.\r\n         * See SetMaxParticleCount for details.\r\n         */\r\n        this.maxCount = 0;\r\n        /**\r\n         * Increases pressure in response to compression\r\n         * Smaller values allow more compression\r\n         */\r\n        this.pressureStrength = 0.005;\r\n        /**\r\n         * Reduces velocity along the collision normal\r\n         * Smaller value reduces less\r\n         */\r\n        this.dampingStrength = 1.0;\r\n        /**\r\n         * Restores shape of elastic particle groups\r\n         * Larger values increase elastic particle velocity\r\n         */\r\n        this.elasticStrength = 0.25;\r\n        /**\r\n         * Restores length of spring particle groups\r\n         * Larger values increase spring particle velocity\r\n         */\r\n        this.springStrength = 0.25;\r\n        /**\r\n         * Reduces relative velocity of viscous particles\r\n         * Larger values slow down viscous particles more\r\n         */\r\n        this.viscousStrength = 0.25;\r\n        /**\r\n         * Produces pressure on tensile particles\r\n         * 0~0.2. Larger values increase the amount of surface tension.\r\n         */\r\n        this.surfaceTensionPressureStrength = 0.2;\r\n        /**\r\n         * Smoothes outline of tensile particles\r\n         * 0~0.2. Larger values result in rounder, smoother,\r\n         * water-drop-like clusters of particles.\r\n         */\r\n        this.surfaceTensionNormalStrength = 0.2;\r\n        /**\r\n         * Produces additional pressure on repulsive particles\r\n         * Larger values repulse more\r\n         * Negative values mean attraction. The range where particles\r\n         * behave stably is about -0.2 to 2.0.\r\n         */\r\n        this.repulsiveStrength = 1.0;\r\n        /**\r\n         * Produces repulsion between powder particles\r\n         * Larger values repulse more\r\n         */\r\n        this.powderStrength = 0.5;\r\n        /**\r\n         * Pushes particles out of solid particle group\r\n         * Larger values repulse more\r\n         */\r\n        this.ejectionStrength = 0.5;\r\n        /**\r\n         * Produces static pressure\r\n         * Larger values increase the pressure on neighboring partilces\r\n         * For a description of static pressure, see\r\n         * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\r\n         */\r\n        this.staticPressureStrength = 0.2;\r\n        /**\r\n         * Reduces instability in static pressure calculation\r\n         * Larger values make stabilize static pressure with fewer\r\n         * iterations\r\n         */\r\n        this.staticPressureRelaxation = 0.2;\r\n        /**\r\n         * Computes static pressure more precisely\r\n         * See SetStaticPressureIterations for details\r\n         */\r\n        this.staticPressureIterations = 8;\r\n        /**\r\n         * Determines how fast colors are mixed\r\n         * 1.0f ==> mixed immediately\r\n         * 0.5f ==> mixed half way each simulation step (see\r\n         * b2World::Step())\r\n         */\r\n        this.colorMixingStrength = 0.5;\r\n        /**\r\n         * Whether to destroy particles by age when no more particles\r\n         * can be created.  See #b2ParticleSystem::SetDestructionByAge()\r\n         * for more information.\r\n         */\r\n        this.destroyByAge = true;\r\n        /**\r\n         * Granularity of particle lifetimes in seconds.  By default\r\n         * this is set to (1.0f / 60.0f) seconds.  b2ParticleSystem uses\r\n         * a 32-bit signed value to track particle lifetimes so the\r\n         * maximum lifetime of a particle is (2^32 - 1) / (1.0f /\r\n         * lifetimeGranularity) seconds. With the value set to 1/60 the\r\n         * maximum lifetime or age of a particle is 2.27 years.\r\n         */\r\n        this.lifetimeGranularity = 1.0 / 60.0;\r\n    }\r\n    Copy(def) {\r\n        this.strictContactCheck = def.strictContactCheck;\r\n        this.density = def.density;\r\n        this.gravityScale = def.gravityScale;\r\n        this.radius = def.radius;\r\n        this.maxCount = def.maxCount;\r\n        this.pressureStrength = def.pressureStrength;\r\n        this.dampingStrength = def.dampingStrength;\r\n        this.elasticStrength = def.elasticStrength;\r\n        this.springStrength = def.springStrength;\r\n        this.viscousStrength = def.viscousStrength;\r\n        this.surfaceTensionPressureStrength = def.surfaceTensionPressureStrength;\r\n        this.surfaceTensionNormalStrength = def.surfaceTensionNormalStrength;\r\n        this.repulsiveStrength = def.repulsiveStrength;\r\n        this.powderStrength = def.powderStrength;\r\n        this.ejectionStrength = def.ejectionStrength;\r\n        this.staticPressureStrength = def.staticPressureStrength;\r\n        this.staticPressureRelaxation = def.staticPressureRelaxation;\r\n        this.staticPressureIterations = def.staticPressureIterations;\r\n        this.colorMixingStrength = def.colorMixingStrength;\r\n        this.destroyByAge = def.destroyByAge;\r\n        this.lifetimeGranularity = def.lifetimeGranularity;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2ParticleSystemDef().Copy(this);\r\n    }\r\n}\r\nexport class b2ParticleSystem {\r\n    constructor(def, world) {\r\n        this.m_paused = false;\r\n        this.m_timestamp = 0;\r\n        this.m_allParticleFlags = 0;\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n        this.m_allGroupFlags = 0;\r\n        this.m_needsUpdateAllGroupFlags = false;\r\n        this.m_hasForce = false;\r\n        this.m_iterationIndex = 0;\r\n        this.m_inverseDensity = 0.0;\r\n        this.m_particleDiameter = 0.0;\r\n        this.m_inverseDiameter = 0.0;\r\n        this.m_squaredDiameter = 0.0;\r\n        this.m_count = 0;\r\n        this.m_internalAllocatedCapacity = 0;\r\n        /**\r\n         * Allocator for b2ParticleHandle instances.\r\n         */\r\n        ///m_handleAllocator: any = null;\r\n        /**\r\n         * Maps particle indicies to handles.\r\n         */\r\n        this.m_handleIndexBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_flagsBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_positionBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_velocityBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_forceBuffer = [];\r\n        /**\r\n         * this.m_weightBuffer is populated in ComputeWeight and used in\r\n         * ComputeDepth(), SolveStaticPressure() and SolvePressure().\r\n         */\r\n        this.m_weightBuffer = [];\r\n        /**\r\n         * When any particles have the flag b2_staticPressureParticle,\r\n         * this.m_staticPressureBuffer is first allocated and used in\r\n         * SolveStaticPressure() and SolvePressure().  It will be\r\n         * reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_staticPressureBuffer = [];\r\n        /**\r\n         * this.m_accumulationBuffer is used in many functions as a temporary\r\n         * buffer for scalar values.\r\n         */\r\n        this.m_accumulationBuffer = [];\r\n        /**\r\n         * When any particles have the flag b2_tensileParticle,\r\n         * this.m_accumulation2Buffer is first allocated and used in\r\n         * SolveTensile() as a temporary buffer for vector values.  It\r\n         * will be reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_accumulation2Buffer = [];\r\n        /**\r\n         * When any particle groups have the flag b2_solidParticleGroup,\r\n         * this.m_depthBuffer is first allocated and populated in\r\n         * ComputeDepth() and used in SolveSolid(). It will be\r\n         * reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_depthBuffer = [];\r\n        this.m_colorBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_groupBuffer = [];\r\n        this.m_userDataBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * Stuck particle detection parameters and record keeping\r\n         */\r\n        this.m_stuckThreshold = 0;\r\n        this.m_lastBodyContactStepBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_bodyContactCountBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_consecutiveContactStepsBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_stuckParticleBuffer = new b2GrowableBuffer(() => 0);\r\n        this.m_proxyBuffer = new b2GrowableBuffer(() => new b2ParticleSystem.Proxy());\r\n        this.m_contactBuffer = new b2GrowableBuffer(() => new b2ParticleContact());\r\n        this.m_bodyContactBuffer = new b2GrowableBuffer(() => new b2ParticleBodyContact());\r\n        this.m_pairBuffer = new b2GrowableBuffer(() => new b2ParticlePair());\r\n        this.m_triadBuffer = new b2GrowableBuffer(() => new b2ParticleTriad());\r\n        /**\r\n         * Time each particle should be destroyed relative to the last\r\n         * time this.m_timeElapsed was initialized.  Each unit of time\r\n         * corresponds to b2ParticleSystemDef::lifetimeGranularity\r\n         * seconds.\r\n         */\r\n        this.m_expirationTimeBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * List of particle indices sorted by expiration time.\r\n         */\r\n        this.m_indexByExpirationTimeBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * Time elapsed in 32:32 fixed point.  Each non-fractional unit\r\n         * of time corresponds to\r\n         * b2ParticleSystemDef::lifetimeGranularity seconds.\r\n         */\r\n        this.m_timeElapsed = 0;\r\n        /**\r\n         * Whether the expiration time buffer has been modified and\r\n         * needs to be resorted.\r\n         */\r\n        this.m_expirationTimeBufferRequiresSorting = false;\r\n        this.m_groupCount = 0;\r\n        this.m_groupList = null;\r\n        this.m_def = new b2ParticleSystemDef();\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.SetStrictContactCheck(def.strictContactCheck);\r\n        this.SetDensity(def.density);\r\n        this.SetGravityScale(def.gravityScale);\r\n        this.SetRadius(def.radius);\r\n        this.SetMaxParticleCount(def.maxCount);\r\n        // DEBUG: b2Assert(def.lifetimeGranularity > 0.0);\r\n        this.m_def = def.Clone();\r\n        this.m_world = world;\r\n        this.SetDestructionByAge(this.m_def.destroyByAge);\r\n    }\r\n    static computeTag(x, y) {\r\n        ///return ((uint32)(y + yOffset) << yShift) + (uint32)(xScale * x + xOffset);\r\n        return ((((y + b2ParticleSystem.yOffset) >>> 0) << b2ParticleSystem.yShift) + ((b2ParticleSystem.xScale * x + b2ParticleSystem.xOffset) >>> 0)) >>> 0;\r\n    }\r\n    static computeRelativeTag(tag, x, y) {\r\n        ///return tag + (y << yShift) + (x << xShift);\r\n        return (tag + (y << b2ParticleSystem.yShift) + (x << b2ParticleSystem.xShift)) >>> 0;\r\n    }\r\n    Drop() {\r\n        while (this.m_groupList) {\r\n            this.DestroyParticleGroup(this.m_groupList);\r\n        }\r\n        this.FreeUserOverridableBuffer(this.m_handleIndexBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_flagsBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_lastBodyContactStepBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_bodyContactCountBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_consecutiveContactStepsBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_positionBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_velocityBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_colorBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_userDataBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_expirationTimeBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_indexByExpirationTimeBuffer);\r\n        this.FreeBuffer(this.m_forceBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_weightBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_staticPressureBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_accumulationBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_accumulation2Buffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_depthBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_groupBuffer, this.m_internalAllocatedCapacity);\r\n    }\r\n    /**\r\n     * Create a particle whose properties have been defined.\r\n     *\r\n     * No reference to the definition is retained.\r\n     *\r\n     * A simulation step must occur before it's possible to interact\r\n     * with a newly created particle.  For example,\r\n     * DestroyParticleInShape() will not destroy a particle until\r\n     * b2World::Step() has been called.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     */\r\n    CreateParticle(def) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        if (this.m_count >= this.m_internalAllocatedCapacity) {\r\n            // Double the particle capacity.\r\n            const capacity = this.m_count ? 2 * this.m_count : b2_minParticleSystemBufferCapacity;\r\n            this.ReallocateInternalAllocatedBuffers(capacity);\r\n        }\r\n        if (this.m_count >= this.m_internalAllocatedCapacity) {\r\n            // If the oldest particle should be destroyed...\r\n            if (this.m_def.destroyByAge) {\r\n                this.DestroyOldestParticle(0, false);\r\n                // Need to destroy this particle *now* so that it's possible to\r\n                // create a new particle.\r\n                this.SolveZombie();\r\n            }\r\n            else {\r\n                return b2_invalidParticleIndex;\r\n            }\r\n        }\r\n        const index = this.m_count++;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        this.m_flagsBuffer.data[index] = 0;\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            this.m_lastBodyContactStepBuffer.data[index] = 0;\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            this.m_bodyContactCountBuffer.data[index] = 0;\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            this.m_consecutiveContactStepsBuffer.data[index] = 0;\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        this.m_positionBuffer.data[index] = (this.m_positionBuffer.data[index] || new b2Vec2()).Copy(b2Maybe(def.position, b2Vec2.ZERO));\r\n        this.m_velocityBuffer.data[index] = (this.m_velocityBuffer.data[index] || new b2Vec2()).Copy(b2Maybe(def.velocity, b2Vec2.ZERO));\r\n        this.m_weightBuffer[index] = 0;\r\n        this.m_forceBuffer[index] = (this.m_forceBuffer[index] || new b2Vec2()).SetZero();\r\n        if (this.m_staticPressureBuffer) {\r\n            this.m_staticPressureBuffer[index] = 0;\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            this.m_depthBuffer[index] = 0;\r\n        }\r\n        const color = new b2Color().Copy(b2Maybe(def.color, b2Color.ZERO));\r\n        if (this.m_colorBuffer.data || !color.IsZero()) {\r\n            this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n            this.m_colorBuffer.data[index] = (this.m_colorBuffer.data[index] || new b2Color()).Copy(color);\r\n        }\r\n        if (this.m_userDataBuffer.data || def.userData) {\r\n            this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\r\n            this.m_userDataBuffer.data[index] = def.userData;\r\n        }\r\n        if (this.m_handleIndexBuffer.data) {\r\n            this.m_handleIndexBuffer.data[index] = null;\r\n        }\r\n        ///Proxy& proxy = m_proxyBuffer.Append();\r\n        const proxy = this.m_proxyBuffer.data[this.m_proxyBuffer.Append()];\r\n        // If particle lifetimes are enabled or the lifetime is set in the particle\r\n        // definition, initialize the lifetime.\r\n        const lifetime = b2Maybe(def.lifetime, 0.0);\r\n        const finiteLifetime = lifetime > 0.0;\r\n        if (this.m_expirationTimeBuffer.data || finiteLifetime) {\r\n            this.SetParticleLifetime(index, finiteLifetime ? lifetime :\r\n                this.ExpirationTimeToLifetime(-this.GetQuantizedTimeElapsed()));\r\n            // Add a reference to the newly added particle to the end of the\r\n            // queue.\r\n            if (!this.m_indexByExpirationTimeBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            this.m_indexByExpirationTimeBuffer.data[index] = index;\r\n        }\r\n        proxy.index = index;\r\n        const group = b2Maybe(def.group, null);\r\n        this.m_groupBuffer[index] = group;\r\n        if (group) {\r\n            if (group.m_firstIndex < group.m_lastIndex) {\r\n                // Move particles in the group just before the new particle.\r\n                this.RotateBuffer(group.m_firstIndex, group.m_lastIndex, index);\r\n                // DEBUG: b2Assert(group.m_lastIndex === index);\r\n                // Update the index range of the group to contain the new particle.\r\n                group.m_lastIndex = index + 1;\r\n            }\r\n            else {\r\n                // If the group is empty, reset the index range to contain only the\r\n                // new particle.\r\n                group.m_firstIndex = index;\r\n                group.m_lastIndex = index + 1;\r\n            }\r\n        }\r\n        this.SetParticleFlags(index, b2Maybe(def.flags, 0));\r\n        return index;\r\n    }\r\n    /**\r\n     * Retrieve a handle to the particle at the specified index.\r\n     *\r\n     * Please see #b2ParticleHandle for why you might want a handle.\r\n     */\r\n    GetParticleHandleFromIndex(index) {\r\n        // DEBUG: b2Assert(index >= 0 && index < this.GetParticleCount() && index !== b2_invalidParticleIndex);\r\n        this.m_handleIndexBuffer.data = this.RequestBuffer(this.m_handleIndexBuffer.data);\r\n        let handle = this.m_handleIndexBuffer.data[index];\r\n        if (handle) {\r\n            return handle;\r\n        }\r\n        // Create a handle.\r\n        ///handle = m_handleAllocator.Allocate();\r\n        handle = new b2ParticleHandle();\r\n        // DEBUG: b2Assert(handle !== null);\r\n        handle.SetIndex(index);\r\n        this.m_handleIndexBuffer.data[index] = handle;\r\n        return handle;\r\n    }\r\n    /**\r\n     * Destroy a particle.\r\n     *\r\n     * The particle is removed after the next simulation step (see\r\n     * b2World::Step()).\r\n     *\r\n     * @param index Index of the particle to destroy.\r\n     * @param callDestructionListener Whether to call the\r\n     *      destruction listener just before the particle is\r\n     *      destroyed.\r\n     */\r\n    DestroyParticle(index, callDestructionListener = false) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        let flags = b2ParticleFlag.b2_zombieParticle;\r\n        if (callDestructionListener) {\r\n            flags |= b2ParticleFlag.b2_destructionListenerParticle;\r\n        }\r\n        this.SetParticleFlags(index, this.m_flagsBuffer.data[index] | flags);\r\n    }\r\n    /**\r\n     * Destroy the Nth oldest particle in the system.\r\n     *\r\n     * The particle is removed after the next b2World::Step().\r\n     *\r\n     * @param index Index of the Nth oldest particle to\r\n     *      destroy, 0 will destroy the oldest particle in the\r\n     *      system, 1 will destroy the next oldest particle etc.\r\n     * @param callDestructionListener Whether to call the\r\n     *      destruction listener just before the particle is\r\n     *      destroyed.\r\n     */\r\n    DestroyOldestParticle(index, callDestructionListener = false) {\r\n        const particleCount = this.GetParticleCount();\r\n        // DEBUG: b2Assert(index >= 0 && index < particleCount);\r\n        // Make sure particle lifetime tracking is enabled.\r\n        // DEBUG: b2Assert(this.m_indexByExpirationTimeBuffer.data !== null);\r\n        if (!this.m_indexByExpirationTimeBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_expirationTimeBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        // Destroy the oldest particle (preferring to destroy finite\r\n        // lifetime particles first) to free a slot in the buffer.\r\n        const oldestFiniteLifetimeParticle = this.m_indexByExpirationTimeBuffer.data[particleCount - (index + 1)];\r\n        const oldestInfiniteLifetimeParticle = this.m_indexByExpirationTimeBuffer.data[index];\r\n        this.DestroyParticle(this.m_expirationTimeBuffer.data[oldestFiniteLifetimeParticle] > 0.0 ?\r\n            oldestFiniteLifetimeParticle : oldestInfiniteLifetimeParticle, callDestructionListener);\r\n    }\r\n    /**\r\n     * Destroy particles inside a shape.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * In addition, this function immediately destroys particles in\r\n     * the shape in constrast to DestroyParticle() which defers the\r\n     * destruction until the next simulation step.\r\n     *\r\n     * @return Number of particles destroyed.\r\n     * @param shape Shape which encloses particles\r\n     *      that should be destroyed.\r\n     * @param xf Transform applied to the shape.\r\n     * @param callDestructionListener Whether to call the\r\n     *      world b2DestructionListener for each particle\r\n     *      destroyed.\r\n     */\r\n    DestroyParticlesInShape(shape, xf, callDestructionListener = false) {\r\n        const s_aabb = b2ParticleSystem.DestroyParticlesInShape_s_aabb;\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const callback = new b2ParticleSystem.DestroyParticlesInShapeCallback(this, shape, xf, callDestructionListener);\r\n        const aabb = s_aabb;\r\n        shape.ComputeAABB(aabb, xf, 0);\r\n        this.m_world.QueryAABB(callback, aabb);\r\n        return callback.Destroyed();\r\n    }\r\n    /**\r\n     * Create a particle group whose properties have been defined.\r\n     *\r\n     * No reference to the definition is retained.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     */\r\n    CreateParticleGroup(groupDef) {\r\n        const s_transform = b2ParticleSystem.CreateParticleGroup_s_transform;\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const transform = s_transform;\r\n        transform.SetPositionAngle(b2Maybe(groupDef.position, b2Vec2.ZERO), b2Maybe(groupDef.angle, 0));\r\n        const firstIndex = this.m_count;\r\n        if (groupDef.shape) {\r\n            this.CreateParticlesWithShapeForGroup(groupDef.shape, groupDef, transform);\r\n        }\r\n        if (groupDef.shapes) {\r\n            this.CreateParticlesWithShapesForGroup(groupDef.shapes, b2Maybe(groupDef.shapeCount, groupDef.shapes.length), groupDef, transform);\r\n        }\r\n        if (groupDef.positionData) {\r\n            const count = b2Maybe(groupDef.particleCount, groupDef.positionData.length);\r\n            for (let i = 0; i < count; i++) {\r\n                const p = groupDef.positionData[i];\r\n                this.CreateParticleForGroup(groupDef, transform, p);\r\n            }\r\n        }\r\n        const lastIndex = this.m_count;\r\n        let group = new b2ParticleGroup(this);\r\n        group.m_firstIndex = firstIndex;\r\n        group.m_lastIndex = lastIndex;\r\n        group.m_strength = b2Maybe(groupDef.strength, 1);\r\n        group.m_userData = groupDef.userData;\r\n        group.m_transform.Copy(transform);\r\n        group.m_prev = null;\r\n        group.m_next = this.m_groupList;\r\n        if (this.m_groupList) {\r\n            this.m_groupList.m_prev = group;\r\n        }\r\n        this.m_groupList = group;\r\n        ++this.m_groupCount;\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            this.m_groupBuffer[i] = group;\r\n        }\r\n        this.SetGroupFlags(group, b2Maybe(groupDef.groupFlags, 0));\r\n        // Create pairs and triads between particles in the group.\r\n        const filter = new b2ParticleSystem.ConnectionFilter();\r\n        this.UpdateContacts(true);\r\n        this.UpdatePairsAndTriads(firstIndex, lastIndex, filter);\r\n        if (groupDef.group) {\r\n            this.JoinParticleGroups(groupDef.group, group);\r\n            group = groupDef.group;\r\n        }\r\n        return group;\r\n    }\r\n    /**\r\n     * Join two particle groups.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * @param groupA the first group. Expands to encompass the second group.\r\n     * @param groupB the second group. It is destroyed.\r\n     */\r\n    JoinParticleGroups(groupA, groupB) {\r\n        if (this.m_world.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        // DEBUG: b2Assert(groupA !== groupB);\r\n        this.RotateBuffer(groupB.m_firstIndex, groupB.m_lastIndex, this.m_count);\r\n        // DEBUG: b2Assert(groupB.m_lastIndex === this.m_count);\r\n        this.RotateBuffer(groupA.m_firstIndex, groupA.m_lastIndex, groupB.m_firstIndex);\r\n        // DEBUG: b2Assert(groupA.m_lastIndex === groupB.m_firstIndex);\r\n        // Create pairs and triads connecting groupA and groupB.\r\n        const filter = new b2ParticleSystem.JoinParticleGroupsFilter(groupB.m_firstIndex);\r\n        this.UpdateContacts(true);\r\n        this.UpdatePairsAndTriads(groupA.m_firstIndex, groupB.m_lastIndex, filter);\r\n        for (let i = groupB.m_firstIndex; i < groupB.m_lastIndex; i++) {\r\n            this.m_groupBuffer[i] = groupA;\r\n        }\r\n        const groupFlags = groupA.m_groupFlags | groupB.m_groupFlags;\r\n        this.SetGroupFlags(groupA, groupFlags);\r\n        groupA.m_lastIndex = groupB.m_lastIndex;\r\n        groupB.m_firstIndex = groupB.m_lastIndex;\r\n        this.DestroyParticleGroup(groupB);\r\n    }\r\n    /**\r\n     * Split particle group into multiple disconnected groups.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * @param group the group to be split.\r\n     */\r\n    SplitParticleGroup(group) {\r\n        this.UpdateContacts(true);\r\n        const particleCount = group.GetParticleCount();\r\n        // We create several linked lists. Each list represents a set of connected particles.\r\n        ///ParticleListNode* nodeBuffer = (ParticleListNode*) m_world.m_stackAllocator.Allocate(sizeof(ParticleListNode) * particleCount);\r\n        const nodeBuffer = b2MakeArray(particleCount, (index) => new b2ParticleSystem.ParticleListNode());\r\n        b2ParticleSystem.InitializeParticleLists(group, nodeBuffer);\r\n        this.MergeParticleListsInContact(group, nodeBuffer);\r\n        const survivingList = b2ParticleSystem.FindLongestParticleList(group, nodeBuffer);\r\n        this.MergeZombieParticleListNodes(group, nodeBuffer, survivingList);\r\n        this.CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList);\r\n        this.UpdatePairsAndTriadsWithParticleList(group, nodeBuffer);\r\n        ///this.m_world.m_stackAllocator.Free(nodeBuffer);\r\n    }\r\n    /**\r\n     * Get the world particle group list. With the returned group,\r\n     * use b2ParticleGroup::GetNext to get the next group in the\r\n     * world list.\r\n     *\r\n     * A null group indicates the end of the list.\r\n     *\r\n     * @return the head of the world particle group list.\r\n     */\r\n    GetParticleGroupList() {\r\n        return this.m_groupList;\r\n    }\r\n    /**\r\n     * Get the number of particle groups.\r\n     */\r\n    GetParticleGroupCount() {\r\n        return this.m_groupCount;\r\n    }\r\n    /**\r\n     * Get the number of particles.\r\n     */\r\n    GetParticleCount() {\r\n        return this.m_count;\r\n    }\r\n    /**\r\n     * Get the maximum number of particles.\r\n     */\r\n    GetMaxParticleCount() {\r\n        return this.m_def.maxCount;\r\n    }\r\n    /**\r\n     * Set the maximum number of particles.\r\n     *\r\n     * A value of 0 means there is no maximum. The particle buffers\r\n     * can continue to grow while b2World's block allocator still\r\n     * has memory.\r\n     *\r\n     * Note: If you try to CreateParticle() with more than this\r\n     * count, b2_invalidParticleIndex is returned unless\r\n     * SetDestructionByAge() is used to enable the destruction of\r\n     * the oldest particles in the system.\r\n     */\r\n    SetMaxParticleCount(count) {\r\n        // DEBUG: b2Assert(this.m_count <= count);\r\n        this.m_def.maxCount = count;\r\n    }\r\n    /**\r\n     * Get all existing particle flags.\r\n     */\r\n    GetAllParticleFlags() {\r\n        return this.m_allParticleFlags;\r\n    }\r\n    /**\r\n     * Get all existing particle group flags.\r\n     */\r\n    GetAllGroupFlags() {\r\n        return this.m_allGroupFlags;\r\n    }\r\n    /**\r\n     * Pause or unpause the particle system. When paused,\r\n     * b2World::Step() skips over this particle system. All\r\n     * b2ParticleSystem function calls still work.\r\n     *\r\n     * @param paused paused is true to pause, false to un-pause.\r\n     */\r\n    SetPaused(paused) {\r\n        this.m_paused = paused;\r\n    }\r\n    /**\r\n     * Initially, true, then, the last value passed into\r\n     * SetPaused().\r\n     *\r\n     * @return true if the particle system is being updated in b2World::Step().\r\n     */\r\n    GetPaused() {\r\n        return this.m_paused;\r\n    }\r\n    /**\r\n     * Change the particle density.\r\n     *\r\n     * Particle density affects the mass of the particles, which in\r\n     * turn affects how the particles interact with b2Bodies. Note\r\n     * that the density does not affect how the particles interact\r\n     * with each other.\r\n     */\r\n    SetDensity(density) {\r\n        this.m_def.density = density;\r\n        this.m_inverseDensity = 1 / this.m_def.density;\r\n    }\r\n    /**\r\n     * Get the particle density.\r\n     */\r\n    GetDensity() {\r\n        return this.m_def.density;\r\n    }\r\n    /**\r\n     * Change the particle gravity scale. Adjusts the effect of the\r\n     * global gravity vector on particles.\r\n     */\r\n    SetGravityScale(gravityScale) {\r\n        this.m_def.gravityScale = gravityScale;\r\n    }\r\n    /**\r\n     * Get the particle gravity scale.\r\n     */\r\n    GetGravityScale() {\r\n        return this.m_def.gravityScale;\r\n    }\r\n    /**\r\n     * Damping is used to reduce the velocity of particles. The\r\n     * damping parameter can be larger than 1.0f but the damping\r\n     * effect becomes sensitive to the time step when the damping\r\n     * parameter is large.\r\n     */\r\n    SetDamping(damping) {\r\n        this.m_def.dampingStrength = damping;\r\n    }\r\n    /**\r\n     * Get damping for particles\r\n     */\r\n    GetDamping() {\r\n        return this.m_def.dampingStrength;\r\n    }\r\n    /**\r\n     * Change the number of iterations when calculating the static\r\n     * pressure of particles. By default, 8 iterations. You can\r\n     * reduce the number of iterations down to 1 in some situations,\r\n     * but this may cause instabilities when many particles come\r\n     * together. If you see particles popping away from each other\r\n     * like popcorn, you may have to increase the number of\r\n     * iterations.\r\n     *\r\n     * For a description of static pressure, see\r\n     * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\r\n     */\r\n    SetStaticPressureIterations(iterations) {\r\n        this.m_def.staticPressureIterations = iterations;\r\n    }\r\n    /**\r\n     * Get the number of iterations for static pressure of\r\n     * particles.\r\n     */\r\n    GetStaticPressureIterations() {\r\n        return this.m_def.staticPressureIterations;\r\n    }\r\n    /**\r\n     * Change the particle radius.\r\n     *\r\n     * You should set this only once, on world start.\r\n     * If you change the radius during execution, existing particles\r\n     * may explode, shrink, or behave unexpectedly.\r\n     */\r\n    SetRadius(radius) {\r\n        this.m_particleDiameter = 2 * radius;\r\n        this.m_squaredDiameter = this.m_particleDiameter * this.m_particleDiameter;\r\n        this.m_inverseDiameter = 1 / this.m_particleDiameter;\r\n    }\r\n    /**\r\n     * Get the particle radius.\r\n     */\r\n    GetRadius() {\r\n        return this.m_particleDiameter / 2;\r\n    }\r\n    /**\r\n     * Get the position of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle positions array.\r\n     */\r\n    GetPositionBuffer() {\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        return this.m_positionBuffer.data;\r\n    }\r\n    /**\r\n     * Get the velocity of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle velocities array.\r\n     */\r\n    GetVelocityBuffer() {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        return this.m_velocityBuffer.data;\r\n    }\r\n    /**\r\n     * Get the color of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle colors array.\r\n     */\r\n    GetColorBuffer() {\r\n        this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n        return this.m_colorBuffer.data;\r\n    }\r\n    /**\r\n     * Get the particle-group of each particle.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle group array.\r\n     */\r\n    GetGroupBuffer() {\r\n        return this.m_groupBuffer;\r\n    }\r\n    /**\r\n     * Get the weight of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle positions array.\r\n     */\r\n    GetWeightBuffer() {\r\n        return this.m_weightBuffer;\r\n    }\r\n    /**\r\n     * Get the user-specified data of each particle.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle user-data array.\r\n     */\r\n    GetUserDataBuffer() {\r\n        this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\r\n        return this.m_userDataBuffer.data;\r\n    }\r\n    /**\r\n     * Get the flags for each particle. See the b2ParticleFlag enum.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle-flags array.\r\n     */\r\n    GetFlagsBuffer() {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        return this.m_flagsBuffer.data;\r\n    }\r\n    /**\r\n     * Set flags for a particle. See the b2ParticleFlag enum.\r\n     */\r\n    SetParticleFlags(index, newFlags) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const oldFlags = this.m_flagsBuffer.data[index];\r\n        if (oldFlags & ~newFlags) {\r\n            // If any flags might be removed\r\n            this.m_needsUpdateAllParticleFlags = true;\r\n        }\r\n        if (~this.m_allParticleFlags & newFlags) {\r\n            // If any flags were added\r\n            if (newFlags & b2ParticleFlag.b2_tensileParticle) {\r\n                this.m_accumulation2Buffer = this.RequestBuffer(this.m_accumulation2Buffer);\r\n            }\r\n            if (newFlags & b2ParticleFlag.b2_colorMixingParticle) {\r\n                this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n            }\r\n            this.m_allParticleFlags |= newFlags;\r\n        }\r\n        this.m_flagsBuffer.data[index] = newFlags;\r\n    }\r\n    /**\r\n     * Get flags for a particle. See the b2ParticleFlag enum.\r\n     */\r\n    GetParticleFlags(index) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        return this.m_flagsBuffer.data[index];\r\n    }\r\n    /**\r\n     * Set an external buffer for particle data.\r\n     *\r\n     * Normally, the b2World's block allocator is used for particle\r\n     * data. However, sometimes you may have an OpenGL or Java\r\n     * buffer for particle data. To avoid data duplication, you may\r\n     * supply this external buffer.\r\n     *\r\n     * Note that, when b2World's block allocator is used, the\r\n     * particle data buffers can grow as required. However, when\r\n     * external buffers are used, the maximum number of particles is\r\n     * clamped to the size of the smallest external buffer.\r\n     *\r\n     * @param buffer a pointer to a block of memory.\r\n     * @param capacity the number of values in the block.\r\n     */\r\n    SetFlagsBuffer(buffer, capacity) {\r\n        this.SetUserOverridableBuffer(this.m_flagsBuffer, buffer, capacity);\r\n    }\r\n    SetPositionBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Float32Array) {\r\n        ///let array = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Vec2(buffer.subarray(i * 2, i * 2 + 2));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_positionBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_positionBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetVelocityBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Float32Array) {\r\n        ///let array = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Vec2(buffer.subarray(i * 2, i * 2 + 2));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_velocityBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_velocityBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetColorBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Uint8Array) {\r\n        ///let array: b2Color[] = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Color(buffer.subarray(i * 4, i * 4 + 4));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_colorBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_colorBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetUserDataBuffer(buffer, capacity) {\r\n        this.SetUserOverridableBuffer(this.m_userDataBuffer, buffer, capacity);\r\n    }\r\n    /**\r\n     * Get contacts between particles\r\n     * Contact data can be used for many reasons, for example to\r\n     * trigger rendering or audio effects.\r\n     */\r\n    GetContacts() {\r\n        return this.m_contactBuffer.data;\r\n    }\r\n    GetContactCount() {\r\n        return this.m_contactBuffer.count;\r\n    }\r\n    /**\r\n     * Get contacts between particles and bodies\r\n     *\r\n     * Contact data can be used for many reasons, for example to\r\n     * trigger rendering or audio effects.\r\n     */\r\n    GetBodyContacts() {\r\n        return this.m_bodyContactBuffer.data;\r\n    }\r\n    GetBodyContactCount() {\r\n        return this.m_bodyContactBuffer.count;\r\n    }\r\n    /**\r\n     * Get array of particle pairs. The particles in a pair:\r\n     *   (1) are contacting,\r\n     *   (2) are in the same particle group,\r\n     *   (3) are part of a rigid particle group, or are spring, elastic,\r\n     *       or wall particles.\r\n     *   (4) have at least one particle that is a spring or barrier\r\n     *       particle (i.e. one of the types in k_pairFlags),\r\n     *   (5) have at least one particle that returns true for\r\n     *       ConnectionFilter::IsNecessary,\r\n     *   (6) are not zombie particles.\r\n     *\r\n     * Essentially, this is an array of spring or barrier particles\r\n     * that are interacting. The array is sorted by b2ParticlePair's\r\n     * indexA, and then indexB. There are no duplicate entries.\r\n     */\r\n    GetPairs() {\r\n        return this.m_pairBuffer.data;\r\n    }\r\n    GetPairCount() {\r\n        return this.m_pairBuffer.count;\r\n    }\r\n    /**\r\n     * Get array of particle triads. The particles in a triad:\r\n     *   (1) are in the same particle group,\r\n     *   (2) are in a Voronoi triangle together,\r\n     *   (3) are within b2_maxTriadDistance particle diameters of each\r\n     *       other,\r\n     *   (4) return true for ConnectionFilter::ShouldCreateTriad\r\n     *   (5) have at least one particle of type elastic (i.e. one of the\r\n     *       types in k_triadFlags),\r\n     *   (6) are part of a rigid particle group, or are spring, elastic,\r\n     *       or wall particles.\r\n     *   (7) are not zombie particles.\r\n     *\r\n     * Essentially, this is an array of elastic particles that are\r\n     * interacting. The array is sorted by b2ParticleTriad's indexA,\r\n     * then indexB, then indexC. There are no duplicate entries.\r\n     */\r\n    GetTriads() {\r\n        return this.m_triadBuffer.data;\r\n    }\r\n    GetTriadCount() {\r\n        return this.m_triadBuffer.count;\r\n    }\r\n    /**\r\n     * Set an optional threshold for the maximum number of\r\n     * consecutive particle iterations that a particle may contact\r\n     * multiple bodies before it is considered a candidate for being\r\n     * \"stuck\". Setting to zero or less disables.\r\n     */\r\n    SetStuckThreshold(steps) {\r\n        this.m_stuckThreshold = steps;\r\n        if (steps > 0) {\r\n            this.m_lastBodyContactStepBuffer.data = this.RequestBuffer(this.m_lastBodyContactStepBuffer.data);\r\n            this.m_bodyContactCountBuffer.data = this.RequestBuffer(this.m_bodyContactCountBuffer.data);\r\n            this.m_consecutiveContactStepsBuffer.data = this.RequestBuffer(this.m_consecutiveContactStepsBuffer.data);\r\n        }\r\n    }\r\n    /**\r\n     * Get potentially stuck particles from the last step; the user\r\n     * must decide if they are stuck or not, and if so, delete or\r\n     * move them\r\n     */\r\n    GetStuckCandidates() {\r\n        ///return m_stuckParticleBuffer.Data();\r\n        return this.m_stuckParticleBuffer.Data();\r\n    }\r\n    /**\r\n     * Get the number of stuck particle candidates from the last\r\n     * step.\r\n     */\r\n    GetStuckCandidateCount() {\r\n        ///return m_stuckParticleBuffer.GetCount();\r\n        return this.m_stuckParticleBuffer.GetCount();\r\n    }\r\n    /**\r\n     * Compute the kinetic energy that can be lost by damping force\r\n     */\r\n    ComputeCollisionEnergy() {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const s_v = b2ParticleSystem.ComputeCollisionEnergy_s_v;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        let sum_v2 = 0;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const n = contact.normal;\r\n            ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n            const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n            const vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                sum_v2 += vn * vn;\r\n            }\r\n        }\r\n        return 0.5 * this.GetParticleMass() * sum_v2;\r\n    }\r\n    /**\r\n     * Set strict Particle/Body contact check.\r\n     *\r\n     * This is an option that will help ensure correct behavior if\r\n     * there are corners in the world model where Particle/Body\r\n     * contact is ambiguous. This option scales at n*log(n) of the\r\n     * number of Particle/Body contacts, so it is best to only\r\n     * enable if it is necessary for your geometry. Enable if you\r\n     * see strange particle behavior around b2Body intersections.\r\n     */\r\n    SetStrictContactCheck(enabled) {\r\n        this.m_def.strictContactCheck = enabled;\r\n    }\r\n    /**\r\n     * Get the status of the strict contact check.\r\n     */\r\n    GetStrictContactCheck() {\r\n        return this.m_def.strictContactCheck;\r\n    }\r\n    /**\r\n     * Set the lifetime (in seconds) of a particle relative to the\r\n     * current time.  A lifetime of less than or equal to 0.0f\r\n     * results in the particle living forever until it's manually\r\n     * destroyed by the application.\r\n     */\r\n    SetParticleLifetime(index, lifetime) {\r\n        // DEBUG: b2Assert(this.ValidateParticleIndex(index));\r\n        const initializeExpirationTimes = this.m_indexByExpirationTimeBuffer.data === null;\r\n        this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\r\n        this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\r\n        // Initialize the inverse mapping buffer.\r\n        if (initializeExpirationTimes) {\r\n            const particleCount = this.GetParticleCount();\r\n            for (let i = 0; i < particleCount; ++i) {\r\n                this.m_indexByExpirationTimeBuffer.data[i] = i;\r\n            }\r\n        }\r\n        ///const int32 quantizedLifetime = (int32)(lifetime / m_def.lifetimeGranularity);\r\n        const quantizedLifetime = lifetime / this.m_def.lifetimeGranularity;\r\n        // Use a negative lifetime so that it's possible to track which\r\n        // of the infinite lifetime particles are older.\r\n        const newExpirationTime = quantizedLifetime > 0.0 ? this.GetQuantizedTimeElapsed() + quantizedLifetime : quantizedLifetime;\r\n        if (newExpirationTime !== this.m_expirationTimeBuffer.data[index]) {\r\n            this.m_expirationTimeBuffer.data[index] = newExpirationTime;\r\n            this.m_expirationTimeBufferRequiresSorting = true;\r\n        }\r\n    }\r\n    /**\r\n     * Get the lifetime (in seconds) of a particle relative to the\r\n     * current time.  A value > 0.0f is returned if the particle is\r\n     * scheduled to be destroyed in the future, values <= 0.0f\r\n     * indicate the particle has an infinite lifetime.\r\n     */\r\n    GetParticleLifetime(index) {\r\n        // DEBUG: b2Assert(this.ValidateParticleIndex(index));\r\n        return this.ExpirationTimeToLifetime(this.GetExpirationTimeBuffer()[index]);\r\n    }\r\n    /**\r\n     * Enable / disable destruction of particles in CreateParticle()\r\n     * when no more particles can be created due to a prior call to\r\n     * SetMaxParticleCount().  When this is enabled, the oldest\r\n     * particle is destroyed in CreateParticle() favoring the\r\n     * destruction of particles with a finite lifetime over\r\n     * particles with infinite lifetimes. This feature is enabled by\r\n     * default when particle lifetimes are tracked.  Explicitly\r\n     * enabling this feature using this function enables particle\r\n     * lifetime tracking.\r\n     */\r\n    SetDestructionByAge(enable) {\r\n        if (enable) {\r\n            this.GetExpirationTimeBuffer();\r\n        }\r\n        this.m_def.destroyByAge = enable;\r\n    }\r\n    /**\r\n     * Get whether the oldest particle will be destroyed in\r\n     * CreateParticle() when the maximum number of particles are\r\n     * present in the system.\r\n     */\r\n    GetDestructionByAge() {\r\n        return this.m_def.destroyByAge;\r\n    }\r\n    /**\r\n     * Get the array of particle expiration times indexed by\r\n     * particle index.\r\n     *\r\n     * GetParticleCount() items are in the returned array.\r\n     */\r\n    GetExpirationTimeBuffer() {\r\n        this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\r\n        return this.m_expirationTimeBuffer.data;\r\n    }\r\n    /**\r\n     * Convert a expiration time value in returned by\r\n     * GetExpirationTimeBuffer() to a time in seconds relative to\r\n     * the current simulation time.\r\n     */\r\n    ExpirationTimeToLifetime(expirationTime) {\r\n        return (expirationTime > 0 ?\r\n            expirationTime - this.GetQuantizedTimeElapsed() :\r\n            expirationTime) * this.m_def.lifetimeGranularity;\r\n    }\r\n    /**\r\n     * Get the array of particle indices ordered by reverse\r\n     * lifetime. The oldest particle indexes are at the end of the\r\n     * array with the newest at the start.  Particles with infinite\r\n     * lifetimes (i.e expiration times less than or equal to 0) are\r\n     * placed at the start of the array.\r\n     * ExpirationTimeToLifetime(GetExpirationTimeBuffer()[index]) is\r\n     * equivalent to GetParticleLifetime(index).\r\n     *\r\n     * GetParticleCount() items are in the returned array.\r\n     */\r\n    GetIndexByExpirationTimeBuffer() {\r\n        // If particles are present, initialize / reinitialize the lifetime buffer.\r\n        if (this.GetParticleCount()) {\r\n            this.SetParticleLifetime(0, this.GetParticleLifetime(0));\r\n        }\r\n        else {\r\n            this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\r\n        }\r\n        if (!this.m_indexByExpirationTimeBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        return this.m_indexByExpirationTimeBuffer.data;\r\n    }\r\n    /**\r\n     * Apply an impulse to one particle. This immediately modifies\r\n     * the velocity. Similar to b2Body::ApplyLinearImpulse.\r\n     *\r\n     * @param index the particle that will be modified.\r\n     * @param impulse impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n     */\r\n    ParticleApplyLinearImpulse(index, impulse) {\r\n        this.ApplyLinearImpulse(index, index + 1, impulse);\r\n    }\r\n    /**\r\n     * Apply an impulse to all particles between 'firstIndex' and\r\n     * 'lastIndex'. This immediately modifies the velocity. Note\r\n     * that the impulse is applied to the total mass of all\r\n     * particles. So, calling ParticleApplyLinearImpulse(0, impulse)\r\n     * and ParticleApplyLinearImpulse(1, impulse) will impart twice\r\n     * as much velocity as calling just ApplyLinearImpulse(0, 1,\r\n     * impulse).\r\n     *\r\n     * @param firstIndex the first particle to be modified.\r\n     * @param lastIndex the last particle to be modified.\r\n     * @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n     */\r\n    ApplyLinearImpulse(firstIndex, lastIndex, impulse) {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const numParticles = (lastIndex - firstIndex);\r\n        const totalMass = numParticles * this.GetParticleMass();\r\n        ///const b2Vec2 velocityDelta = impulse / totalMass;\r\n        const velocityDelta = new b2Vec2().Copy(impulse).SelfMul(1 / totalMass);\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            ///m_velocityBuffer.data[i] += velocityDelta;\r\n            vel_data[i].SelfAdd(velocityDelta);\r\n        }\r\n    }\r\n    static IsSignificantForce(force) {\r\n        return force.x !== 0 || force.y !== 0;\r\n    }\r\n    /**\r\n     * Apply a force to the center of a particle.\r\n     *\r\n     * @param index the particle that will be modified.\r\n     * @param force the world force vector, usually in Newtons (N).\r\n     */\r\n    ParticleApplyForce(index, force) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (b2ParticleSystem.IsSignificantForce(force) &&\r\n            this.ForceCanBeApplied(this.m_flagsBuffer.data[index])) {\r\n            this.PrepareForceBuffer();\r\n            ///m_forceBuffer[index] += force;\r\n            this.m_forceBuffer[index].SelfAdd(force);\r\n        }\r\n    }\r\n    /**\r\n     * Distribute a force across several particles. The particles\r\n     * must not be wall particles. Note that the force is\r\n     * distributed across all the particles, so calling this\r\n     * function for indices 0..N is not the same as calling\r\n     * ParticleApplyForce(i, force) for i in 0..N.\r\n     *\r\n     * @param firstIndex the first particle to be modified.\r\n     * @param lastIndex the last particle to be modified.\r\n     * @param force the world force vector, usually in Newtons (N).\r\n     */\r\n    ApplyForce(firstIndex, lastIndex, force) {\r\n        // Ensure we're not trying to apply force to particles that can't move,\r\n        // such as wall particles.\r\n        // DEBUG: if (!this.m_flagsBuffer.data) { throw new Error(); }\r\n        // DEBUG: let flags = 0;\r\n        // DEBUG: for (let i = firstIndex; i < lastIndex; i++) {\r\n        // DEBUG:   flags |= this.m_flagsBuffer.data[i];\r\n        // DEBUG: }\r\n        // DEBUG: b2Assert(this.ForceCanBeApplied(flags));\r\n        // Early out if force does nothing (optimization).\r\n        ///const b2Vec2 distributedForce = force / (float32)(lastIndex - firstIndex);\r\n        const distributedForce = new b2Vec2().Copy(force).SelfMul(1 / (lastIndex - firstIndex));\r\n        if (b2ParticleSystem.IsSignificantForce(distributedForce)) {\r\n            this.PrepareForceBuffer();\r\n            // Distribute the force over all the particles.\r\n            for (let i = firstIndex; i < lastIndex; i++) {\r\n                ///m_forceBuffer[i] += distributedForce;\r\n                this.m_forceBuffer[i].SelfAdd(distributedForce);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get the next particle-system in the world's particle-system\r\n     * list.\r\n     */\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /**\r\n     * Query the particle system for all particles that potentially\r\n     * overlap the provided AABB.\r\n     * b2QueryCallback::ShouldQueryParticleSystem is ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param aabb the query box.\r\n     */\r\n    QueryAABB(callback, aabb) {\r\n        if (this.m_proxyBuffer.count === 0) {\r\n            return;\r\n        }\r\n        const beginProxy = 0;\r\n        const endProxy = this.m_proxyBuffer.count;\r\n        const firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x, this.m_inverseDiameter * aabb.lowerBound.y), b2ParticleSystem.Proxy.CompareProxyTag);\r\n        const lastProxy = std_upper_bound(this.m_proxyBuffer.data, firstProxy, endProxy, b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x, this.m_inverseDiameter * aabb.upperBound.y), b2ParticleSystem.Proxy.CompareTagProxy);\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        for (let k = firstProxy; k < lastProxy; ++k) {\r\n            const proxy = this.m_proxyBuffer.data[k];\r\n            const i = proxy.index;\r\n            const p = pos_data[i];\r\n            if (aabb.lowerBound.x < p.x && p.x < aabb.upperBound.x &&\r\n                aabb.lowerBound.y < p.y && p.y < aabb.upperBound.y) {\r\n                if (!callback.ReportParticle(this, i)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Query the particle system for all particles that potentially\r\n     * overlap the provided shape's AABB. Calls QueryAABB\r\n     * internally. b2QueryCallback::ShouldQueryParticleSystem is\r\n     * ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param shape the query shape\r\n     * @param xf the transform of the AABB\r\n     * @param childIndex\r\n     */\r\n    QueryShapeAABB(callback, shape, xf, childIndex = 0) {\r\n        const s_aabb = b2ParticleSystem.QueryShapeAABB_s_aabb;\r\n        const aabb = s_aabb;\r\n        shape.ComputeAABB(aabb, xf, childIndex);\r\n        this.QueryAABB(callback, aabb);\r\n    }\r\n    QueryPointAABB(callback, point, slop = b2_linearSlop) {\r\n        const s_aabb = b2ParticleSystem.QueryPointAABB_s_aabb;\r\n        const aabb = s_aabb;\r\n        aabb.lowerBound.Set(point.x - slop, point.y - slop);\r\n        aabb.upperBound.Set(point.x + slop, point.y + slop);\r\n        this.QueryAABB(callback, aabb);\r\n    }\r\n    /**\r\n     * Ray-cast the particle system for all particles in the path of\r\n     * the ray. Your callback controls whether you get the closest\r\n     * point, any point, or n-points. The ray-cast ignores particles\r\n     * that contain the starting point.\r\n     * b2RayCastCallback::ShouldQueryParticleSystem is ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param point1 the ray starting point\r\n     * @param point2 the ray ending point\r\n     */\r\n    RayCast(callback, point1, point2) {\r\n        const s_aabb = b2ParticleSystem.RayCast_s_aabb;\r\n        const s_p = b2ParticleSystem.RayCast_s_p;\r\n        const s_v = b2ParticleSystem.RayCast_s_v;\r\n        const s_n = b2ParticleSystem.RayCast_s_n;\r\n        const s_point = b2ParticleSystem.RayCast_s_point;\r\n        if (this.m_proxyBuffer.count === 0) {\r\n            return;\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const aabb = s_aabb;\r\n        b2Vec2.MinV(point1, point2, aabb.lowerBound);\r\n        b2Vec2.MaxV(point1, point2, aabb.upperBound);\r\n        let fraction = 1;\r\n        // solving the following equation:\r\n        // ((1-t)*point1+t*point2-position)^2=diameter^2\r\n        // where t is a potential fraction\r\n        ///b2Vec2 v = point2 - point1;\r\n        const v = b2Vec2.SubVV(point2, point1, s_v);\r\n        const v2 = b2Vec2.DotVV(v, v);\r\n        const enumerator = this.GetInsideBoundsEnumerator(aabb);\r\n        let i;\r\n        while ((i = enumerator.GetNext()) >= 0) {\r\n            ///b2Vec2 p = point1 - m_positionBuffer.data[i];\r\n            const p = b2Vec2.SubVV(point1, pos_data[i], s_p);\r\n            const pv = b2Vec2.DotVV(p, v);\r\n            const p2 = b2Vec2.DotVV(p, p);\r\n            const determinant = pv * pv - v2 * (p2 - this.m_squaredDiameter);\r\n            if (determinant >= 0) {\r\n                const sqrtDeterminant = b2Sqrt(determinant);\r\n                // find a solution between 0 and fraction\r\n                let t = (-pv - sqrtDeterminant) / v2;\r\n                if (t > fraction) {\r\n                    continue;\r\n                }\r\n                if (t < 0) {\r\n                    t = (-pv + sqrtDeterminant) / v2;\r\n                    if (t < 0 || t > fraction) {\r\n                        continue;\r\n                    }\r\n                }\r\n                ///b2Vec2 n = p + t * v;\r\n                const n = b2Vec2.AddVMulSV(p, t, v, s_n);\r\n                n.Normalize();\r\n                ///float32 f = callback.ReportParticle(this, i, point1 + t * v, n, t);\r\n                const f = callback.ReportParticle(this, i, b2Vec2.AddVMulSV(point1, t, v, s_point), n, t);\r\n                fraction = b2Min(fraction, f);\r\n                if (fraction <= 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Compute the axis-aligned bounding box for all particles\r\n     * contained within this particle system.\r\n     * @param aabb Returns the axis-aligned bounding box of the system.\r\n     */\r\n    ComputeAABB(aabb) {\r\n        const particleCount = this.GetParticleCount();\r\n        // DEBUG: b2Assert(aabb !== null);\r\n        aabb.lowerBound.x = +b2_maxFloat;\r\n        aabb.lowerBound.y = +b2_maxFloat;\r\n        aabb.upperBound.x = -b2_maxFloat;\r\n        aabb.upperBound.y = -b2_maxFloat;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const p = pos_data[i];\r\n            b2Vec2.MinV(aabb.lowerBound, p, aabb.lowerBound);\r\n            b2Vec2.MaxV(aabb.upperBound, p, aabb.upperBound);\r\n        }\r\n        aabb.lowerBound.x -= this.m_particleDiameter;\r\n        aabb.lowerBound.y -= this.m_particleDiameter;\r\n        aabb.upperBound.x += this.m_particleDiameter;\r\n        aabb.upperBound.y += this.m_particleDiameter;\r\n    }\r\n    FreeBuffer(b, capacity) {\r\n        if (b === null) {\r\n            return;\r\n        }\r\n        b.length = 0;\r\n    }\r\n    FreeUserOverridableBuffer(b) {\r\n        if (b.userSuppliedCapacity === 0) {\r\n            this.FreeBuffer(b.data, this.m_internalAllocatedCapacity);\r\n        }\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer3(oldBuffer, oldCapacity, newCapacity) {\r\n        // b2Assert(newCapacity > oldCapacity);\r\n        if (newCapacity <= oldCapacity) {\r\n            throw new Error();\r\n        }\r\n        const newBuffer = (oldBuffer) ? oldBuffer.slice() : [];\r\n        newBuffer.length = newCapacity;\r\n        return newBuffer;\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer5(buffer, userSuppliedCapacity, oldCapacity, newCapacity, deferred) {\r\n        // b2Assert(newCapacity > oldCapacity);\r\n        if (newCapacity <= oldCapacity) {\r\n            throw new Error();\r\n        }\r\n        // A 'deferred' buffer is reallocated only if it is not NULL.\r\n        // If 'userSuppliedCapacity' is not zero, buffer is user supplied and must\r\n        // be kept.\r\n        // b2Assert(!userSuppliedCapacity || newCapacity <= userSuppliedCapacity);\r\n        if (!(!userSuppliedCapacity || newCapacity <= userSuppliedCapacity)) {\r\n            throw new Error();\r\n        }\r\n        if ((!deferred || buffer) && !userSuppliedCapacity) {\r\n            buffer = this.ReallocateBuffer3(buffer, oldCapacity, newCapacity);\r\n        }\r\n        return buffer; // TODO: fix this\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer4(buffer, oldCapacity, newCapacity, deferred) {\r\n        // DEBUG: b2Assert(newCapacity > oldCapacity);\r\n        return this.ReallocateBuffer5(buffer.data, buffer.userSuppliedCapacity, oldCapacity, newCapacity, deferred);\r\n    }\r\n    RequestBuffer(buffer) {\r\n        if (!buffer) {\r\n            if (this.m_internalAllocatedCapacity === 0) {\r\n                this.ReallocateInternalAllocatedBuffers(b2_minParticleSystemBufferCapacity);\r\n            }\r\n            buffer = [];\r\n            buffer.length = this.m_internalAllocatedCapacity;\r\n        }\r\n        return buffer;\r\n    }\r\n    /**\r\n     * Reallocate the handle / index map and schedule the allocation\r\n     * of a new pool for handle allocation.\r\n     */\r\n    ReallocateHandleBuffers(newCapacity) {\r\n        // DEBUG: b2Assert(newCapacity > this.m_internalAllocatedCapacity);\r\n        // Reallocate a new handle / index map buffer, copying old handle pointers\r\n        // is fine since they're kept around.\r\n        this.m_handleIndexBuffer.data = this.ReallocateBuffer4(this.m_handleIndexBuffer, this.m_internalAllocatedCapacity, newCapacity, true);\r\n        // Set the size of the next handle allocation.\r\n        ///this.m_handleAllocator.SetItemsPerSlab(newCapacity - this.m_internalAllocatedCapacity);\r\n    }\r\n    ReallocateInternalAllocatedBuffers(capacity) {\r\n        function LimitCapacity(capacity, maxCount) {\r\n            return maxCount && capacity > maxCount ? maxCount : capacity;\r\n        }\r\n        // Don't increase capacity beyond the smallest user-supplied buffer size.\r\n        capacity = LimitCapacity(capacity, this.m_def.maxCount);\r\n        capacity = LimitCapacity(capacity, this.m_flagsBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_positionBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_velocityBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_colorBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_userDataBuffer.userSuppliedCapacity);\r\n        if (this.m_internalAllocatedCapacity < capacity) {\r\n            this.ReallocateHandleBuffers(capacity);\r\n            this.m_flagsBuffer.data = this.ReallocateBuffer4(this.m_flagsBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            // Conditionally defer these as they are optional if the feature is\r\n            // not enabled.\r\n            const stuck = this.m_stuckThreshold > 0;\r\n            this.m_lastBodyContactStepBuffer.data = this.ReallocateBuffer4(this.m_lastBodyContactStepBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_bodyContactCountBuffer.data = this.ReallocateBuffer4(this.m_bodyContactCountBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_consecutiveContactStepsBuffer.data = this.ReallocateBuffer4(this.m_consecutiveContactStepsBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_positionBuffer.data = this.ReallocateBuffer4(this.m_positionBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_velocityBuffer.data = this.ReallocateBuffer4(this.m_velocityBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_forceBuffer = this.ReallocateBuffer5(this.m_forceBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_weightBuffer = this.ReallocateBuffer5(this.m_weightBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_staticPressureBuffer = this.ReallocateBuffer5(this.m_staticPressureBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_accumulationBuffer = this.ReallocateBuffer5(this.m_accumulationBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_accumulation2Buffer = this.ReallocateBuffer5(this.m_accumulation2Buffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_depthBuffer = this.ReallocateBuffer5(this.m_depthBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_colorBuffer.data = this.ReallocateBuffer4(this.m_colorBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_groupBuffer = this.ReallocateBuffer5(this.m_groupBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_userDataBuffer.data = this.ReallocateBuffer4(this.m_userDataBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_expirationTimeBuffer.data = this.ReallocateBuffer4(this.m_expirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_indexByExpirationTimeBuffer.data = this.ReallocateBuffer4(this.m_indexByExpirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_internalAllocatedCapacity = capacity;\r\n        }\r\n    }\r\n    CreateParticleForGroup(groupDef, xf, p) {\r\n        const particleDef = new b2ParticleDef();\r\n        particleDef.flags = b2Maybe(groupDef.flags, 0);\r\n        ///particleDef.position = b2Mul(xf, p);\r\n        b2Transform.MulXV(xf, p, particleDef.position);\r\n        ///particleDef.velocity =\r\n        ///  groupDef.linearVelocity +\r\n        ///  b2Cross(groupDef.angularVelocity,\r\n        ///      particleDef.position - groupDef.position);\r\n        b2Vec2.AddVV(b2Maybe(groupDef.linearVelocity, b2Vec2.ZERO), b2Vec2.CrossSV(b2Maybe(groupDef.angularVelocity, 0), b2Vec2.SubVV(particleDef.position, b2Maybe(groupDef.position, b2Vec2.ZERO), b2Vec2.s_t0), b2Vec2.s_t0), particleDef.velocity);\r\n        particleDef.color.Copy(b2Maybe(groupDef.color, b2Color.ZERO));\r\n        particleDef.lifetime = b2Maybe(groupDef.lifetime, 0);\r\n        particleDef.userData = groupDef.userData;\r\n        this.CreateParticle(particleDef);\r\n    }\r\n    CreateParticlesStrokeShapeForGroup(shape, groupDef, xf) {\r\n        const s_edge = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge;\r\n        const s_d = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d;\r\n        const s_p = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p;\r\n        let stride = b2Maybe(groupDef.stride, 0);\r\n        if (stride === 0) {\r\n            stride = this.GetParticleStride();\r\n        }\r\n        let positionOnEdge = 0;\r\n        const childCount = shape.GetChildCount();\r\n        for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n            let edge = null;\r\n            if (shape.GetType() === b2ShapeType.e_edgeShape) {\r\n                edge = shape;\r\n            }\r\n            else {\r\n                // DEBUG: b2Assert(shape.GetType() === b2ShapeType.e_chainShape);\r\n                edge = s_edge;\r\n                shape.GetChildEdge(edge, childIndex);\r\n            }\r\n            const d = b2Vec2.SubVV(edge.m_vertex2, edge.m_vertex1, s_d);\r\n            const edgeLength = d.Length();\r\n            while (positionOnEdge < edgeLength) {\r\n                ///b2Vec2 p = edge.m_vertex1 + positionOnEdge / edgeLength * d;\r\n                const p = b2Vec2.AddVMulSV(edge.m_vertex1, positionOnEdge / edgeLength, d, s_p);\r\n                this.CreateParticleForGroup(groupDef, xf, p);\r\n                positionOnEdge += stride;\r\n            }\r\n            positionOnEdge -= edgeLength;\r\n        }\r\n    }\r\n    CreateParticlesFillShapeForGroup(shape, groupDef, xf) {\r\n        const s_aabb = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb;\r\n        const s_p = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_p;\r\n        let stride = b2Maybe(groupDef.stride, 0);\r\n        if (stride === 0) {\r\n            stride = this.GetParticleStride();\r\n        }\r\n        ///b2Transform identity;\r\n        /// identity.SetIdentity();\r\n        const identity = b2Transform.IDENTITY;\r\n        const aabb = s_aabb;\r\n        // DEBUG: b2Assert(shape.GetChildCount() === 1);\r\n        shape.ComputeAABB(aabb, identity, 0);\r\n        for (let y = Math.floor(aabb.lowerBound.y / stride) * stride; y < aabb.upperBound.y; y += stride) {\r\n            for (let x = Math.floor(aabb.lowerBound.x / stride) * stride; x < aabb.upperBound.x; x += stride) {\r\n                const p = s_p.Set(x, y);\r\n                if (shape.TestPoint(identity, p)) {\r\n                    this.CreateParticleForGroup(groupDef, xf, p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    CreateParticlesWithShapeForGroup(shape, groupDef, xf) {\r\n        switch (shape.GetType()) {\r\n            case b2ShapeType.e_edgeShape:\r\n            case b2ShapeType.e_chainShape:\r\n                this.CreateParticlesStrokeShapeForGroup(shape, groupDef, xf);\r\n                break;\r\n            case b2ShapeType.e_polygonShape:\r\n            case b2ShapeType.e_circleShape:\r\n                this.CreateParticlesFillShapeForGroup(shape, groupDef, xf);\r\n                break;\r\n            default:\r\n                // DEBUG: b2Assert(false);\r\n                break;\r\n        }\r\n    }\r\n    CreateParticlesWithShapesForGroup(shapes, shapeCount, groupDef, xf) {\r\n        const compositeShape = new b2ParticleSystem.CompositeShape(shapes, shapeCount);\r\n        this.CreateParticlesFillShapeForGroup(compositeShape, groupDef, xf);\r\n    }\r\n    CloneParticle(oldIndex, group) {\r\n        const def = new b2ParticleDef();\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        def.flags = this.m_flagsBuffer.data[oldIndex];\r\n        def.position.Copy(this.m_positionBuffer.data[oldIndex]);\r\n        def.velocity.Copy(this.m_velocityBuffer.data[oldIndex]);\r\n        if (this.m_colorBuffer.data) {\r\n            def.color.Copy(this.m_colorBuffer.data[oldIndex]);\r\n        }\r\n        if (this.m_userDataBuffer.data) {\r\n            def.userData = this.m_userDataBuffer.data[oldIndex];\r\n        }\r\n        def.group = group;\r\n        const newIndex = this.CreateParticle(def);\r\n        if (this.m_handleIndexBuffer.data) {\r\n            const handle = this.m_handleIndexBuffer.data[oldIndex];\r\n            if (handle) {\r\n                handle.SetIndex(newIndex);\r\n            }\r\n            this.m_handleIndexBuffer.data[newIndex] = handle;\r\n            this.m_handleIndexBuffer.data[oldIndex] = null;\r\n        }\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            this.m_lastBodyContactStepBuffer.data[newIndex] =\r\n                this.m_lastBodyContactStepBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            this.m_bodyContactCountBuffer.data[newIndex] =\r\n                this.m_bodyContactCountBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            this.m_consecutiveContactStepsBuffer.data[newIndex] =\r\n                this.m_consecutiveContactStepsBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_hasForce) {\r\n            this.m_forceBuffer[newIndex].Copy(this.m_forceBuffer[oldIndex]);\r\n        }\r\n        if (this.m_staticPressureBuffer) {\r\n            this.m_staticPressureBuffer[newIndex] = this.m_staticPressureBuffer[oldIndex];\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            this.m_depthBuffer[newIndex] = this.m_depthBuffer[oldIndex];\r\n        }\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            this.m_expirationTimeBuffer.data[newIndex] =\r\n                this.m_expirationTimeBuffer.data[oldIndex];\r\n        }\r\n        return newIndex;\r\n    }\r\n    DestroyParticlesInGroup(group, callDestructionListener = false) {\r\n        for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n            this.DestroyParticle(i, callDestructionListener);\r\n        }\r\n    }\r\n    DestroyParticleGroup(group) {\r\n        // DEBUG: b2Assert(this.m_groupCount > 0);\r\n        // DEBUG: b2Assert(group !== null);\r\n        if (this.m_world.m_destructionListener) {\r\n            this.m_world.m_destructionListener.SayGoodbyeParticleGroup(group);\r\n        }\r\n        this.SetGroupFlags(group, 0);\r\n        for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n            this.m_groupBuffer[i] = null;\r\n        }\r\n        if (group.m_prev) {\r\n            group.m_prev.m_next = group.m_next;\r\n        }\r\n        if (group.m_next) {\r\n            group.m_next.m_prev = group.m_prev;\r\n        }\r\n        if (group === this.m_groupList) {\r\n            this.m_groupList = group.m_next;\r\n        }\r\n        --this.m_groupCount;\r\n    }\r\n    static ParticleCanBeConnected(flags, group) {\r\n        return ((flags & (b2ParticleFlag.b2_wallParticle | b2ParticleFlag.b2_springParticle | b2ParticleFlag.b2_elasticParticle)) !== 0) ||\r\n            ((group !== null) && ((group.GetGroupFlags() & b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0));\r\n    }\r\n    UpdatePairsAndTriads(firstIndex, lastIndex, filter) {\r\n        const s_dab = b2ParticleSystem.UpdatePairsAndTriads_s_dab;\r\n        const s_dbc = b2ParticleSystem.UpdatePairsAndTriads_s_dbc;\r\n        const s_dca = b2ParticleSystem.UpdatePairsAndTriads_s_dca;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        // Create pairs or triads.\r\n        // All particles in each pair/triad should satisfy the following:\r\n        // * firstIndex <= index < lastIndex\r\n        // * don't have b2_zombieParticle\r\n        // * ParticleCanBeConnected returns true\r\n        // * ShouldCreatePair/ShouldCreateTriad returns true\r\n        // Any particles in each pair/triad should satisfy the following:\r\n        // * filter.IsNeeded returns true\r\n        // * have one of k_pairFlags/k_triadsFlags\r\n        // DEBUG: b2Assert(firstIndex <= lastIndex);\r\n        let particleFlags = 0;\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            particleFlags |= this.m_flagsBuffer.data[i];\r\n        }\r\n        if (particleFlags & b2ParticleSystem.k_pairFlags) {\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                const contact = this.m_contactBuffer.data[k];\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                const af = this.m_flagsBuffer.data[a];\r\n                const bf = this.m_flagsBuffer.data[b];\r\n                const groupA = this.m_groupBuffer[a];\r\n                const groupB = this.m_groupBuffer[b];\r\n                if (a >= firstIndex && a < lastIndex &&\r\n                    b >= firstIndex && b < lastIndex &&\r\n                    !((af | bf) & b2ParticleFlag.b2_zombieParticle) &&\r\n                    ((af | bf) & b2ParticleSystem.k_pairFlags) &&\r\n                    (filter.IsNecessary(a) || filter.IsNecessary(b)) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(af, groupA) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(bf, groupB) &&\r\n                    filter.ShouldCreatePair(a, b)) {\r\n                    ///b2ParticlePair& pair = m_pairBuffer.Append();\r\n                    const pair = this.m_pairBuffer.data[this.m_pairBuffer.Append()];\r\n                    pair.indexA = a;\r\n                    pair.indexB = b;\r\n                    pair.flags = contact.flags;\r\n                    pair.strength = b2Min(groupA ? groupA.m_strength : 1, groupB ? groupB.m_strength : 1);\r\n                    ///pair.distance = b2Distance(pos_data[a], pos_data[b]); // TODO: this was wrong!\r\n                    pair.distance = b2Vec2.DistanceVV(pos_data[a], pos_data[b]);\r\n                }\r\n                ///std::stable_sort(m_pairBuffer.Begin(), m_pairBuffer.End(), ComparePairIndices);\r\n                std_stable_sort(this.m_pairBuffer.data, 0, this.m_pairBuffer.count, b2ParticleSystem.ComparePairIndices);\r\n                ///m_pairBuffer.Unique(MatchPairIndices);\r\n                this.m_pairBuffer.Unique(b2ParticleSystem.MatchPairIndices);\r\n            }\r\n        }\r\n        if (particleFlags & b2ParticleSystem.k_triadFlags) {\r\n            const diagram = new b2VoronoiDiagram(lastIndex - firstIndex);\r\n            ///let necessary_count = 0;\r\n            for (let i = firstIndex; i < lastIndex; i++) {\r\n                const flags = this.m_flagsBuffer.data[i];\r\n                const group = this.m_groupBuffer[i];\r\n                if (!(flags & b2ParticleFlag.b2_zombieParticle) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(flags, group)) {\r\n                    ///if (filter.IsNecessary(i)) {\r\n                    ///++necessary_count;\r\n                    ///}\r\n                    diagram.AddGenerator(pos_data[i], i, filter.IsNecessary(i));\r\n                }\r\n            }\r\n            ///if (necessary_count === 0) {\r\n            /////debugger;\r\n            ///for (let i = firstIndex; i < lastIndex; i++) {\r\n            ///  filter.IsNecessary(i);\r\n            ///}\r\n            ///}\r\n            const stride = this.GetParticleStride();\r\n            diagram.Generate(stride / 2, stride * 2);\r\n            const system = this;\r\n            const callback = /*UpdateTriadsCallback*/ (a, b, c) => {\r\n                if (!system.m_flagsBuffer.data) {\r\n                    throw new Error();\r\n                }\r\n                const af = system.m_flagsBuffer.data[a];\r\n                const bf = system.m_flagsBuffer.data[b];\r\n                const cf = system.m_flagsBuffer.data[c];\r\n                if (((af | bf | cf) & b2ParticleSystem.k_triadFlags) &&\r\n                    filter.ShouldCreateTriad(a, b, c)) {\r\n                    const pa = pos_data[a];\r\n                    const pb = pos_data[b];\r\n                    const pc = pos_data[c];\r\n                    const dab = b2Vec2.SubVV(pa, pb, s_dab);\r\n                    const dbc = b2Vec2.SubVV(pb, pc, s_dbc);\r\n                    const dca = b2Vec2.SubVV(pc, pa, s_dca);\r\n                    const maxDistanceSquared = b2_maxTriadDistanceSquared * system.m_squaredDiameter;\r\n                    if (b2Vec2.DotVV(dab, dab) > maxDistanceSquared ||\r\n                        b2Vec2.DotVV(dbc, dbc) > maxDistanceSquared ||\r\n                        b2Vec2.DotVV(dca, dca) > maxDistanceSquared) {\r\n                        return;\r\n                    }\r\n                    const groupA = system.m_groupBuffer[a];\r\n                    const groupB = system.m_groupBuffer[b];\r\n                    const groupC = system.m_groupBuffer[c];\r\n                    ///b2ParticleTriad& triad = m_system.m_triadBuffer.Append();\r\n                    const triad = system.m_triadBuffer.data[system.m_triadBuffer.Append()];\r\n                    triad.indexA = a;\r\n                    triad.indexB = b;\r\n                    triad.indexC = c;\r\n                    triad.flags = af | bf | cf;\r\n                    triad.strength = b2Min(b2Min(groupA ? groupA.m_strength : 1, groupB ? groupB.m_strength : 1), groupC ? groupC.m_strength : 1);\r\n                    ///let midPoint = b2Vec2.MulSV(1.0 / 3.0, b2Vec2.AddVV(pa, b2Vec2.AddVV(pb, pc, new b2Vec2()), new b2Vec2()), new b2Vec2());\r\n                    const midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\r\n                    const midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\r\n                    ///triad.pa = b2Vec2.SubVV(pa, midPoint, new b2Vec2());\r\n                    triad.pa.x = pa.x - midPoint_x;\r\n                    triad.pa.y = pa.y - midPoint_y;\r\n                    ///triad.pb = b2Vec2.SubVV(pb, midPoint, new b2Vec2());\r\n                    triad.pb.x = pb.x - midPoint_x;\r\n                    triad.pb.y = pb.y - midPoint_y;\r\n                    ///triad.pc = b2Vec2.SubVV(pc, midPoint, new b2Vec2());\r\n                    triad.pc.x = pc.x - midPoint_x;\r\n                    triad.pc.y = pc.y - midPoint_y;\r\n                    triad.ka = -b2Vec2.DotVV(dca, dab);\r\n                    triad.kb = -b2Vec2.DotVV(dab, dbc);\r\n                    triad.kc = -b2Vec2.DotVV(dbc, dca);\r\n                    triad.s = b2Vec2.CrossVV(pa, pb) + b2Vec2.CrossVV(pb, pc) + b2Vec2.CrossVV(pc, pa);\r\n                }\r\n            };\r\n            diagram.GetNodes(callback);\r\n            ///std::stable_sort(m_triadBuffer.Begin(), m_triadBuffer.End(), CompareTriadIndices);\r\n            std_stable_sort(this.m_triadBuffer.data, 0, this.m_triadBuffer.count, b2ParticleSystem.CompareTriadIndices);\r\n            ///m_triadBuffer.Unique(MatchTriadIndices);\r\n            this.m_triadBuffer.Unique(b2ParticleSystem.MatchTriadIndices);\r\n        }\r\n    }\r\n    UpdatePairsAndTriadsWithReactiveParticles() {\r\n        const filter = new b2ParticleSystem.ReactiveFilter(this.m_flagsBuffer);\r\n        this.UpdatePairsAndTriads(0, this.m_count, filter);\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_flagsBuffer.data[i] &= ~b2ParticleFlag.b2_reactiveParticle;\r\n        }\r\n        this.m_allParticleFlags &= ~b2ParticleFlag.b2_reactiveParticle;\r\n    }\r\n    static ComparePairIndices(a, b) {\r\n        const diffA = a.indexA - b.indexA;\r\n        if (diffA !== 0) {\r\n            return diffA < 0;\r\n        }\r\n        return a.indexB < b.indexB;\r\n    }\r\n    static MatchPairIndices(a, b) {\r\n        return a.indexA === b.indexA && a.indexB === b.indexB;\r\n    }\r\n    static CompareTriadIndices(a, b) {\r\n        const diffA = a.indexA - b.indexA;\r\n        if (diffA !== 0) {\r\n            return diffA < 0;\r\n        }\r\n        const diffB = a.indexB - b.indexB;\r\n        if (diffB !== 0) {\r\n            return diffB < 0;\r\n        }\r\n        return a.indexC < b.indexC;\r\n    }\r\n    static MatchTriadIndices(a, b) {\r\n        return a.indexA === b.indexA && a.indexB === b.indexB && a.indexC === b.indexC;\r\n    }\r\n    static InitializeParticleLists(group, nodeBuffer) {\r\n        const bufferIndex = group.GetBufferIndex();\r\n        const particleCount = group.GetParticleCount();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const node = nodeBuffer[i];\r\n            node.list = node;\r\n            node.next = null;\r\n            node.count = 1;\r\n            node.index = i + bufferIndex;\r\n        }\r\n    }\r\n    MergeParticleListsInContact(group, nodeBuffer) {\r\n        const bufferIndex = group.GetBufferIndex();\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            /*const b2ParticleContact&*/\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            if (!group.ContainsParticle(a) || !group.ContainsParticle(b)) {\r\n                continue;\r\n            }\r\n            let listA = nodeBuffer[a - bufferIndex].list;\r\n            let listB = nodeBuffer[b - bufferIndex].list;\r\n            if (listA === listB) {\r\n                continue;\r\n            }\r\n            // To minimize the cost of insertion, make sure listA is longer than\r\n            // listB.\r\n            if (listA.count < listB.count) {\r\n                const _tmp = listA;\r\n                listA = listB;\r\n                listB = _tmp; ///b2Swap(listA, listB);\r\n            }\r\n            // DEBUG: b2Assert(listA.count >= listB.count);\r\n            b2ParticleSystem.MergeParticleLists(listA, listB);\r\n        }\r\n    }\r\n    static MergeParticleLists(listA, listB) {\r\n        // Insert listB between index 0 and 1 of listA\r\n        // Example:\r\n        //     listA => a1 => a2 => a3 => null\r\n        //     listB => b1 => b2 => null\r\n        // to\r\n        //     listA => listB => b1 => b2 => a1 => a2 => a3 => null\r\n        // DEBUG: b2Assert(listA !== listB);\r\n        for (let b = listB;;) {\r\n            b.list = listA;\r\n            const nextB = b.next;\r\n            if (nextB) {\r\n                b = nextB;\r\n            }\r\n            else {\r\n                b.next = listA.next;\r\n                break;\r\n            }\r\n        }\r\n        listA.next = listB;\r\n        listA.count += listB.count;\r\n        listB.count = 0;\r\n    }\r\n    static FindLongestParticleList(group, nodeBuffer) {\r\n        const particleCount = group.GetParticleCount();\r\n        let result = nodeBuffer[0];\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const node = nodeBuffer[i];\r\n            if (result.count < node.count) {\r\n                result = node;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    MergeZombieParticleListNodes(group, nodeBuffer, survivingList) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const particleCount = group.GetParticleCount();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const node = nodeBuffer[i];\r\n            if (node !== survivingList &&\r\n                (this.m_flagsBuffer.data[node.index] & b2ParticleFlag.b2_zombieParticle)) {\r\n                b2ParticleSystem.MergeParticleListAndNode(survivingList, node);\r\n            }\r\n        }\r\n    }\r\n    static MergeParticleListAndNode(list, node) {\r\n        // Insert node between index 0 and 1 of list\r\n        // Example:\r\n        //     list => a1 => a2 => a3 => null\r\n        //     node => null\r\n        // to\r\n        //     list => node => a1 => a2 => a3 => null\r\n        // DEBUG: b2Assert(node !== list);\r\n        // DEBUG: b2Assert(node.list === node);\r\n        // DEBUG: b2Assert(node.count === 1);\r\n        node.list = list;\r\n        node.next = list.next;\r\n        list.next = node;\r\n        list.count++;\r\n        node.count = 0;\r\n    }\r\n    CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const particleCount = group.GetParticleCount();\r\n        const def = new b2ParticleGroupDef();\r\n        def.groupFlags = group.GetGroupFlags();\r\n        def.userData = group.GetUserData();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            const list = nodeBuffer[i];\r\n            if (!list.count || list === survivingList) {\r\n                continue;\r\n            }\r\n            // DEBUG: b2Assert(list.list === list);\r\n            const newGroup = this.CreateParticleGroup(def);\r\n            for (let node = list; node; node = node.next) {\r\n                const oldIndex = node.index;\r\n                // DEBUG: const flags = this.m_flagsBuffer.data[oldIndex];\r\n                // DEBUG: b2Assert(!(flags & b2ParticleFlag.b2_zombieParticle));\r\n                const newIndex = this.CloneParticle(oldIndex, newGroup);\r\n                this.m_flagsBuffer.data[oldIndex] |= b2ParticleFlag.b2_zombieParticle;\r\n                node.index = newIndex;\r\n            }\r\n        }\r\n    }\r\n    UpdatePairsAndTriadsWithParticleList(group, nodeBuffer) {\r\n        const bufferIndex = group.GetBufferIndex();\r\n        // Update indices in pairs and triads. If an index belongs to the group,\r\n        // replace it with the corresponding value in nodeBuffer.\r\n        // Note that nodeBuffer is allocated only for the group and the index should\r\n        // be shifted by bufferIndex.\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            const pair = this.m_pairBuffer.data[k];\r\n            const a = pair.indexA;\r\n            const b = pair.indexB;\r\n            if (group.ContainsParticle(a)) {\r\n                pair.indexA = nodeBuffer[a - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(b)) {\r\n                pair.indexB = nodeBuffer[b - bufferIndex].index;\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            const triad = this.m_triadBuffer.data[k];\r\n            const a = triad.indexA;\r\n            const b = triad.indexB;\r\n            const c = triad.indexC;\r\n            if (group.ContainsParticle(a)) {\r\n                triad.indexA = nodeBuffer[a - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(b)) {\r\n                triad.indexB = nodeBuffer[b - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(c)) {\r\n                triad.indexC = nodeBuffer[c - bufferIndex].index;\r\n            }\r\n        }\r\n    }\r\n    ComputeDepth() {\r\n        ///b2ParticleContact* contactGroups = (b2ParticleContact*) this.m_world.m_stackAllocator.Allocate(sizeof(b2ParticleContact) * this.m_contactBuffer.GetCount());\r\n        const contactGroups = []; // TODO: static\r\n        let contactGroupsCount = 0;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const groupA = this.m_groupBuffer[a];\r\n            const groupB = this.m_groupBuffer[b];\r\n            if (groupA && groupA === groupB &&\r\n                (groupA.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth)) {\r\n                contactGroups[contactGroupsCount++] = contact;\r\n            }\r\n        }\r\n        ///b2ParticleGroup** groupsToUpdate = (b2ParticleGroup**) this.m_world.m_stackAllocator.Allocate(sizeof(b2ParticleGroup*) * this.m_groupCount);\r\n        const groupsToUpdate = []; // TODO: static\r\n        let groupsToUpdateCount = 0;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\r\n                groupsToUpdate[groupsToUpdateCount++] = group;\r\n                this.SetGroupFlags(group, group.m_groupFlags &\r\n                    ~b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\r\n                for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                    this.m_accumulationBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        // Compute sum of weight of contacts except between different groups.\r\n        for (let k = 0; k < contactGroupsCount; k++) {\r\n            const contact = contactGroups[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const w = contact.weight;\r\n            this.m_accumulationBuffer[a] += w;\r\n            this.m_accumulationBuffer[b] += w;\r\n        }\r\n        // DEBUG: b2Assert(this.m_depthBuffer !== null);\r\n        for (let i = 0; i < groupsToUpdateCount; i++) {\r\n            const group = groupsToUpdate[i];\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                const w = this.m_accumulationBuffer[i];\r\n                this.m_depthBuffer[i] = w < 0.8 ? 0 : b2_maxFloat;\r\n            }\r\n        }\r\n        // The number of iterations is equal to particle number from the deepest\r\n        // particle to the nearest surface particle, and in general it is smaller\r\n        // than sqrt of total particle number.\r\n        ///int32 iterationCount = (int32)b2Sqrt((float)m_count);\r\n        const iterationCount = b2Sqrt(this.m_count) >> 0;\r\n        for (let t = 0; t < iterationCount; t++) {\r\n            let updated = false;\r\n            for (let k = 0; k < contactGroupsCount; k++) {\r\n                const contact = contactGroups[k];\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                const r = 1 - contact.weight;\r\n                ///float32& ap0 = m_depthBuffer[a];\r\n                const ap0 = this.m_depthBuffer[a];\r\n                ///float32& bp0 = m_depthBuffer[b];\r\n                const bp0 = this.m_depthBuffer[b];\r\n                const ap1 = bp0 + r;\r\n                const bp1 = ap0 + r;\r\n                if (ap0 > ap1) {\r\n                    ///ap0 = ap1;\r\n                    this.m_depthBuffer[a] = ap1;\r\n                    updated = true;\r\n                }\r\n                if (bp0 > bp1) {\r\n                    ///bp0 = bp1;\r\n                    this.m_depthBuffer[b] = bp1;\r\n                    updated = true;\r\n                }\r\n            }\r\n            if (!updated) {\r\n                break;\r\n            }\r\n        }\r\n        for (let i = 0; i < groupsToUpdateCount; i++) {\r\n            const group = groupsToUpdate[i];\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                if (this.m_depthBuffer[i] < b2_maxFloat) {\r\n                    this.m_depthBuffer[i] *= this.m_particleDiameter;\r\n                }\r\n                else {\r\n                    this.m_depthBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        ///this.m_world.m_stackAllocator.Free(groupsToUpdate);\r\n        ///this.m_world.m_stackAllocator.Free(contactGroups);\r\n    }\r\n    GetInsideBoundsEnumerator(aabb) {\r\n        const lowerTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x - 1, this.m_inverseDiameter * aabb.lowerBound.y - 1);\r\n        const upperTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x + 1, this.m_inverseDiameter * aabb.upperBound.y + 1);\r\n        ///const Proxy* beginProxy = m_proxyBuffer.Begin();\r\n        const beginProxy = 0;\r\n        ///const Proxy* endProxy = m_proxyBuffer.End();\r\n        const endProxy = this.m_proxyBuffer.count;\r\n        ///const Proxy* firstProxy = std::lower_bound(beginProxy, endProxy, lowerTag);\r\n        const firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, lowerTag, b2ParticleSystem.Proxy.CompareProxyTag);\r\n        ///const Proxy* lastProxy = std::upper_bound(firstProxy, endProxy, upperTag);\r\n        const lastProxy = std_upper_bound(this.m_proxyBuffer.data, beginProxy, endProxy, upperTag, b2ParticleSystem.Proxy.CompareTagProxy);\r\n        // DEBUG: b2Assert(beginProxy <= firstProxy);\r\n        // DEBUG: b2Assert(firstProxy <= lastProxy);\r\n        // DEBUG: b2Assert(lastProxy <= endProxy);\r\n        return new b2ParticleSystem.InsideBoundsEnumerator(this, lowerTag, upperTag, firstProxy, lastProxy);\r\n    }\r\n    UpdateAllParticleFlags() {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        this.m_allParticleFlags = 0;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_allParticleFlags |= this.m_flagsBuffer.data[i];\r\n        }\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n    }\r\n    UpdateAllGroupFlags() {\r\n        this.m_allGroupFlags = 0;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            this.m_allGroupFlags |= group.m_groupFlags;\r\n        }\r\n        this.m_needsUpdateAllGroupFlags = false;\r\n    }\r\n    AddContact(a, b, contacts) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const s_d = b2ParticleSystem.AddContact_s_d;\r\n        const pos_data = this.m_positionBuffer.data;\r\n        // DEBUG: b2Assert(contacts === this.m_contactBuffer);\r\n        ///b2Vec2 d = m_positionBuffer.data[b] - m_positionBuffer.data[a];\r\n        const d = b2Vec2.SubVV(pos_data[b], pos_data[a], s_d);\r\n        const distBtParticlesSq = b2Vec2.DotVV(d, d);\r\n        if (distBtParticlesSq < this.m_squaredDiameter) {\r\n            let invD = b2InvSqrt(distBtParticlesSq);\r\n            if (!isFinite(invD)) {\r\n                invD = 1.98177537e+019;\r\n            }\r\n            ///b2ParticleContact& contact = contacts.Append();\r\n            const contact = this.m_contactBuffer.data[this.m_contactBuffer.Append()];\r\n            contact.indexA = a;\r\n            contact.indexB = b;\r\n            contact.flags = this.m_flagsBuffer.data[a] | this.m_flagsBuffer.data[b];\r\n            contact.weight = 1 - distBtParticlesSq * invD * this.m_inverseDiameter;\r\n            ///contact.SetNormal(invD * d);\r\n            b2Vec2.MulSV(invD, d, contact.normal);\r\n        }\r\n    }\r\n    FindContacts_Reference(contacts) {\r\n        // DEBUG: b2Assert(contacts === this.m_contactBuffer);\r\n        const beginProxy = 0;\r\n        const endProxy = this.m_proxyBuffer.count;\r\n        this.m_contactBuffer.count = 0;\r\n        for (let a = beginProxy, c = beginProxy; a < endProxy; a++) {\r\n            const rightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 0);\r\n            for (let b = a + 1; b < endProxy; b++) {\r\n                if (rightTag < this.m_proxyBuffer.data[b].tag) {\r\n                    break;\r\n                }\r\n                this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\r\n            }\r\n            const bottomLeftTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, -1, 1);\r\n            for (; c < endProxy; c++) {\r\n                if (bottomLeftTag <= this.m_proxyBuffer.data[c].tag) {\r\n                    break;\r\n                }\r\n            }\r\n            const bottomRightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 1);\r\n            for (let b = c; b < endProxy; b++) {\r\n                if (bottomRightTag < this.m_proxyBuffer.data[b].tag) {\r\n                    break;\r\n                }\r\n                this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\r\n            }\r\n        }\r\n    }\r\n    ///void ReorderForFindContact(FindContactInput* reordered, int alignedCount) const;\r\n    ///void GatherChecksOneParticle(const uint32 bound, const int startIndex, const int particleIndex, int* nextUncheckedIndex, b2GrowableBuffer<FindContactCheck>& checks) const;\r\n    ///void GatherChecks(b2GrowableBuffer<FindContactCheck>& checks) const;\r\n    ///void FindContacts_Simd(b2GrowableBuffer<b2ParticleContact>& contacts) const;\r\n    FindContacts(contacts) {\r\n        this.FindContacts_Reference(contacts);\r\n    }\r\n    ///static void UpdateProxyTags(const uint32* const tags, b2GrowableBuffer<Proxy>& proxies);\r\n    ///static bool ProxyBufferHasIndex(int32 index, const Proxy* const a, int count);\r\n    ///static int NumProxiesWithSameTag(const Proxy* const a, const Proxy* const b, int count);\r\n    ///static bool AreProxyBuffersTheSame(const b2GrowableBuffer<Proxy>& a, const b2GrowableBuffer<Proxy>& b);\r\n    UpdateProxies_Reference(proxies) {\r\n        // DEBUG: b2Assert(proxies === this.m_proxyBuffer);\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const inv_diam = this.m_inverseDiameter;\r\n        for (let k = 0; k < this.m_proxyBuffer.count; ++k) {\r\n            const proxy = this.m_proxyBuffer.data[k];\r\n            const i = proxy.index;\r\n            const p = pos_data[i];\r\n            proxy.tag = b2ParticleSystem.computeTag(inv_diam * p.x, inv_diam * p.y);\r\n        }\r\n    }\r\n    ///void UpdateProxies_Simd(b2GrowableBuffer<Proxy>& proxies) const;\r\n    UpdateProxies(proxies) {\r\n        this.UpdateProxies_Reference(proxies);\r\n    }\r\n    SortProxies(proxies) {\r\n        // DEBUG: b2Assert(proxies === this.m_proxyBuffer);\r\n        ///std::sort(proxies.Begin(), proxies.End());\r\n        std_sort(this.m_proxyBuffer.data, 0, this.m_proxyBuffer.count, b2ParticleSystem.Proxy.CompareProxyProxy);\r\n    }\r\n    FilterContacts(contacts) {\r\n        // Optionally filter the contact.\r\n        const contactFilter = this.GetParticleContactFilter();\r\n        if (contactFilter === null) {\r\n            return;\r\n        }\r\n        /// contacts.RemoveIf(b2ParticleContactRemovePredicate(this, contactFilter));\r\n        // DEBUG: b2Assert(contacts === this.m_contactBuffer);\r\n        const system = this;\r\n        const predicate = (contact) => {\r\n            return ((contact.flags & b2ParticleFlag.b2_particleContactFilterParticle) !== 0) && !contactFilter.ShouldCollideParticleParticle(system, contact.indexA, contact.indexB);\r\n        };\r\n        this.m_contactBuffer.RemoveIf(predicate);\r\n    }\r\n    NotifyContactListenerPreContact(particlePairs) {\r\n        const contactListener = this.GetParticleContactListener();\r\n        if (contactListener === null) {\r\n            return;\r\n        }\r\n        ///particlePairs.Initialize(m_contactBuffer.Begin(), m_contactBuffer.GetCount(), GetFlagsBuffer());\r\n        particlePairs.Initialize(this.m_contactBuffer, this.m_flagsBuffer);\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    NotifyContactListenerPostContact(particlePairs) {\r\n        const contactListener = this.GetParticleContactListener();\r\n        if (contactListener === null) {\r\n            return;\r\n        }\r\n        // Loop through all new contacts, reporting any new ones, and\r\n        // \"invalidating\" the ones that still exist.\r\n        ///const b2ParticleContact* const endContact = m_contactBuffer.End();\r\n        ///for (b2ParticleContact* contact = m_contactBuffer.Begin(); contact < endContact; ++contact)\r\n        for (let k = 0; k < this.m_contactBuffer.count; ++k) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            ///ParticlePair pair;\r\n            ///pair.first = contact.GetIndexA();\r\n            ///pair.second = contact.GetIndexB();\r\n            ///const int32 itemIndex = particlePairs.Find(pair);\r\n            const itemIndex = -1; // TODO\r\n            if (itemIndex >= 0) {\r\n                // Already touching, ignore this contact.\r\n                particlePairs.Invalidate(itemIndex);\r\n            }\r\n            else {\r\n                // Just started touching, inform the listener.\r\n                contactListener.BeginContactParticleParticle(this, contact);\r\n            }\r\n        }\r\n        // Report particles that are no longer touching.\r\n        // That is, any pairs that were not invalidated above.\r\n        ///const int32 pairCount = particlePairs.GetCount();\r\n        ///const ParticlePair* const pairs = particlePairs.GetBuffer();\r\n        ///const int8* const valid = particlePairs.GetValidBuffer();\r\n        ///for (int32 i = 0; i < pairCount; ++i)\r\n        ///{\r\n        ///  if (valid[i])\r\n        ///  {\r\n        ///    contactListener.EndContactParticleParticle(this, pairs[i].first, pairs[i].second);\r\n        ///  }\r\n        ///}\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    static b2ParticleContactIsZombie(contact) {\r\n        return (contact.flags & b2ParticleFlag.b2_zombieParticle) === b2ParticleFlag.b2_zombieParticle;\r\n    }\r\n    UpdateContacts(exceptZombie) {\r\n        this.UpdateProxies(this.m_proxyBuffer);\r\n        this.SortProxies(this.m_proxyBuffer);\r\n        ///b2ParticlePairSet particlePairs(&this.m_world.m_stackAllocator);\r\n        const particlePairs = new b2ParticleSystem.b2ParticlePairSet(); // TODO: static\r\n        this.NotifyContactListenerPreContact(particlePairs);\r\n        this.FindContacts(this.m_contactBuffer);\r\n        this.FilterContacts(this.m_contactBuffer);\r\n        this.NotifyContactListenerPostContact(particlePairs);\r\n        if (exceptZombie) {\r\n            this.m_contactBuffer.RemoveIf(b2ParticleSystem.b2ParticleContactIsZombie);\r\n        }\r\n    }\r\n    NotifyBodyContactListenerPreContact(fixtureSet) {\r\n        const contactListener = this.GetFixtureContactListener();\r\n        if (contactListener === null) {\r\n            return;\r\n        }\r\n        ///fixtureSet.Initialize(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.GetCount(), GetFlagsBuffer());\r\n        fixtureSet.Initialize(this.m_bodyContactBuffer, this.m_flagsBuffer);\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    NotifyBodyContactListenerPostContact(fixtureSet) {\r\n        const contactListener = this.GetFixtureContactListener();\r\n        if (contactListener === null) {\r\n            return;\r\n        }\r\n        // Loop through all new contacts, reporting any new ones, and\r\n        // \"invalidating\" the ones that still exist.\r\n        ///for (b2ParticleBodyContact* contact = m_bodyContactBuffer.Begin(); contact !== m_bodyContactBuffer.End(); ++contact)\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            // DEBUG: b2Assert(contact !== null);\r\n            ///FixtureParticle fixtureParticleToFind;\r\n            ///fixtureParticleToFind.first = contact.fixture;\r\n            ///fixtureParticleToFind.second = contact.index;\r\n            ///const int32 index = fixtureSet.Find(fixtureParticleToFind);\r\n            const index = -1; // TODO\r\n            if (index >= 0) {\r\n                // Already touching remove this from the set.\r\n                fixtureSet.Invalidate(index);\r\n            }\r\n            else {\r\n                // Just started touching, report it!\r\n                contactListener.BeginContactFixtureParticle(this, contact);\r\n            }\r\n        }\r\n        // If the contact listener is enabled, report all fixtures that are no\r\n        // longer in contact with particles.\r\n        ///const FixtureParticle* const fixtureParticles = fixtureSet.GetBuffer();\r\n        ///const int8* const fixtureParticlesValid = fixtureSet.GetValidBuffer();\r\n        ///const int32 fixtureParticleCount = fixtureSet.GetCount();\r\n        ///for (int32 i = 0; i < fixtureParticleCount; ++i)\r\n        ///{\r\n        ///  if (fixtureParticlesValid[i])\r\n        ///  {\r\n        ///    const FixtureParticle* const fixtureParticle = &fixtureParticles[i];\r\n        ///    contactListener.EndContactFixtureParticle(fixtureParticle.first, this, fixtureParticle.second);\r\n        ///  }\r\n        ///}\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    UpdateBodyContacts() {\r\n        const s_aabb = b2ParticleSystem.UpdateBodyContacts_s_aabb;\r\n        // If the particle contact listener is enabled, generate a set of\r\n        // fixture / particle contacts.\r\n        ///FixtureParticleSet fixtureSet(&m_world.m_stackAllocator);\r\n        const fixtureSet = new b2ParticleSystem.FixtureParticleSet(); // TODO: static\r\n        this.NotifyBodyContactListenerPreContact(fixtureSet);\r\n        if (this.m_stuckThreshold > 0) {\r\n            if (!this.m_bodyContactCountBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (!this.m_lastBodyContactStepBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (!this.m_consecutiveContactStepsBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const particleCount = this.GetParticleCount();\r\n            for (let i = 0; i < particleCount; i++) {\r\n                // Detect stuck particles, see comment in\r\n                // b2ParticleSystem::DetectStuckParticle()\r\n                this.m_bodyContactCountBuffer.data[i] = 0;\r\n                if (this.m_timestamp > (this.m_lastBodyContactStepBuffer.data[i] + 1)) {\r\n                    this.m_consecutiveContactStepsBuffer.data[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        this.m_bodyContactBuffer.SetCount(0);\r\n        this.m_stuckParticleBuffer.SetCount(0);\r\n        const aabb = s_aabb;\r\n        this.ComputeAABB(aabb);\r\n        const callback = new b2ParticleSystem.UpdateBodyContactsCallback(this, this.GetFixtureContactFilter());\r\n        this.m_world.QueryAABB(callback, aabb);\r\n        if (this.m_def.strictContactCheck) {\r\n            this.RemoveSpuriousBodyContacts();\r\n        }\r\n        this.NotifyBodyContactListenerPostContact(fixtureSet);\r\n    }\r\n    Solve(step) {\r\n        const s_subStep = b2ParticleSystem.Solve_s_subStep;\r\n        if (this.m_count === 0) {\r\n            return;\r\n        }\r\n        // If particle lifetimes are enabled, destroy particles that are too old.\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            this.SolveLifetimes(step);\r\n        }\r\n        if (this.m_allParticleFlags & b2ParticleFlag.b2_zombieParticle) {\r\n            this.SolveZombie();\r\n        }\r\n        if (this.m_needsUpdateAllParticleFlags) {\r\n            this.UpdateAllParticleFlags();\r\n        }\r\n        if (this.m_needsUpdateAllGroupFlags) {\r\n            this.UpdateAllGroupFlags();\r\n        }\r\n        if (this.m_paused) {\r\n            return;\r\n        }\r\n        for (this.m_iterationIndex = 0; this.m_iterationIndex < step.particleIterations; this.m_iterationIndex++) {\r\n            ++this.m_timestamp;\r\n            const subStep = s_subStep.Copy(step);\r\n            subStep.dt /= step.particleIterations;\r\n            subStep.inv_dt *= step.particleIterations;\r\n            this.UpdateContacts(false);\r\n            this.UpdateBodyContacts();\r\n            this.ComputeWeight();\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\r\n                this.ComputeDepth();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_reactiveParticle) {\r\n                this.UpdatePairsAndTriadsWithReactiveParticles();\r\n            }\r\n            if (this.m_hasForce) {\r\n                this.SolveForce(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_viscousParticle) {\r\n                this.SolveViscous();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_repulsiveParticle) {\r\n                this.SolveRepulsive(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_powderParticle) {\r\n                this.SolvePowder(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_tensileParticle) {\r\n                this.SolveTensile(subStep);\r\n            }\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                this.SolveSolid(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_colorMixingParticle) {\r\n                this.SolveColorMixing();\r\n            }\r\n            this.SolveGravity(subStep);\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_staticPressureParticle) {\r\n                this.SolveStaticPressure(subStep);\r\n            }\r\n            this.SolvePressure(subStep);\r\n            this.SolveDamping(subStep);\r\n            if (this.m_allParticleFlags & b2ParticleSystem.k_extraDampingFlags) {\r\n                this.SolveExtraDamping();\r\n            }\r\n            // SolveElastic and SolveSpring refer the current velocities for\r\n            // numerical stability, they should be called as late as possible.\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_elasticParticle) {\r\n                this.SolveElastic(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_springParticle) {\r\n                this.SolveSpring(subStep);\r\n            }\r\n            this.LimitVelocity(subStep);\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                this.SolveRigidDamping();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_barrierParticle) {\r\n                this.SolveBarrier(subStep);\r\n            }\r\n            // SolveCollision, SolveRigid and SolveWall should be called after\r\n            // other force functions because they may require particles to have\r\n            // specific velocities.\r\n            this.SolveCollision(subStep);\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                this.SolveRigid(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_wallParticle) {\r\n                this.SolveWall();\r\n            }\r\n            // The particle positions can be updated only at the end of substep.\r\n            if (!this.m_positionBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (!this.m_velocityBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                ///m_positionBuffer.data[i] += subStep.dt * m_velocityBuffer.data[i];\r\n                this.m_positionBuffer.data[i].SelfMulAdd(subStep.dt, this.m_velocityBuffer.data[i]);\r\n            }\r\n        }\r\n    }\r\n    SolveCollision(step) {\r\n        const s_aabb = b2ParticleSystem.SolveCollision_s_aabb;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // This function detects particles which are crossing boundary of bodies\r\n        // and modifies velocities of them so that they will move just in front of\r\n        // boundary. This function function also applies the reaction force to\r\n        // bodies as precisely as the numerical stability is kept.\r\n        const aabb = s_aabb;\r\n        aabb.lowerBound.x = +b2_maxFloat;\r\n        aabb.lowerBound.y = +b2_maxFloat;\r\n        aabb.upperBound.x = -b2_maxFloat;\r\n        aabb.upperBound.y = -b2_maxFloat;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            const v = vel_data[i];\r\n            const p1 = pos_data[i];\r\n            ///let p2 = p1 + step.dt * v;\r\n            const p2_x = p1.x + step.dt * v.x;\r\n            const p2_y = p1.y + step.dt * v.y;\r\n            ///aabb.lowerBound = b2Min(aabb.lowerBound, b2Min(p1, p2));\r\n            aabb.lowerBound.x = b2Min(aabb.lowerBound.x, b2Min(p1.x, p2_x));\r\n            aabb.lowerBound.y = b2Min(aabb.lowerBound.y, b2Min(p1.y, p2_y));\r\n            ///aabb.upperBound = b2Max(aabb.upperBound, b2Max(p1, p2));\r\n            aabb.upperBound.x = b2Max(aabb.upperBound.x, b2Max(p1.x, p2_x));\r\n            aabb.upperBound.y = b2Max(aabb.upperBound.y, b2Max(p1.y, p2_y));\r\n        }\r\n        const callback = new b2ParticleSystem.SolveCollisionCallback(this, step);\r\n        this.m_world.QueryAABB(callback, aabb);\r\n    }\r\n    LimitVelocity(step) {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const criticalVelocitySquared = this.GetCriticalVelocitySquared(step);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            const v = vel_data[i];\r\n            const v2 = b2Vec2.DotVV(v, v);\r\n            if (v2 > criticalVelocitySquared) {\r\n                ///v *= b2Sqrt(criticalVelocitySquared / v2);\r\n                v.SelfMul(b2Sqrt(criticalVelocitySquared / v2));\r\n            }\r\n        }\r\n    }\r\n    SolveGravity(step) {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const s_gravity = b2ParticleSystem.SolveGravity_s_gravity;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        ///b2Vec2 gravity = step.dt * m_def.gravityScale * m_world.GetGravity();\r\n        const gravity = b2Vec2.MulSV(step.dt * this.m_def.gravityScale, this.m_world.GetGravity(), s_gravity);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            vel_data[i].SelfAdd(gravity);\r\n        }\r\n    }\r\n    SolveBarrier(step) {\r\n        const s_aabb = b2ParticleSystem.SolveBarrier_s_aabb;\r\n        const s_va = b2ParticleSystem.SolveBarrier_s_va;\r\n        const s_vb = b2ParticleSystem.SolveBarrier_s_vb;\r\n        const s_pba = b2ParticleSystem.SolveBarrier_s_pba;\r\n        const s_vba = b2ParticleSystem.SolveBarrier_s_vba;\r\n        const s_vc = b2ParticleSystem.SolveBarrier_s_vc;\r\n        const s_pca = b2ParticleSystem.SolveBarrier_s_pca;\r\n        const s_vca = b2ParticleSystem.SolveBarrier_s_vca;\r\n        const s_qba = b2ParticleSystem.SolveBarrier_s_qba;\r\n        const s_qca = b2ParticleSystem.SolveBarrier_s_qca;\r\n        const s_dv = b2ParticleSystem.SolveBarrier_s_dv;\r\n        const s_f = b2ParticleSystem.SolveBarrier_s_f;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // If a particle is passing between paired barrier particles,\r\n        // its velocity will be decelerated to avoid passing.\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            const flags = this.m_flagsBuffer.data[i];\r\n            ///if ((flags & b2ParticleSystem.k_barrierWallFlags) === b2ParticleSystem.k_barrierWallFlags)\r\n            if ((flags & b2ParticleSystem.k_barrierWallFlags) !== 0) {\r\n                vel_data[i].SetZero();\r\n            }\r\n        }\r\n        const tmax = b2_barrierCollisionTime * step.dt;\r\n        const mass = this.GetParticleMass();\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            const pair = this.m_pairBuffer.data[k];\r\n            if (pair.flags & b2ParticleFlag.b2_barrierParticle) {\r\n                const a = pair.indexA;\r\n                const b = pair.indexB;\r\n                const pa = pos_data[a];\r\n                const pb = pos_data[b];\r\n                /// b2AABB aabb;\r\n                const aabb = s_aabb;\r\n                ///aabb.lowerBound = b2Min(pa, pb);\r\n                b2Vec2.MinV(pa, pb, aabb.lowerBound);\r\n                ///aabb.upperBound = b2Max(pa, pb);\r\n                b2Vec2.MaxV(pa, pb, aabb.upperBound);\r\n                const aGroup = this.m_groupBuffer[a];\r\n                const bGroup = this.m_groupBuffer[b];\r\n                ///b2Vec2 va = GetLinearVelocity(aGroup, a, pa);\r\n                const va = this.GetLinearVelocity(aGroup, a, pa, s_va);\r\n                ///b2Vec2 vb = GetLinearVelocity(bGroup, b, pb);\r\n                const vb = this.GetLinearVelocity(bGroup, b, pb, s_vb);\r\n                ///b2Vec2 pba = pb - pa;\r\n                const pba = b2Vec2.SubVV(pb, pa, s_pba);\r\n                ///b2Vec2 vba = vb - va;\r\n                const vba = b2Vec2.SubVV(vb, va, s_vba);\r\n                ///InsideBoundsEnumerator enumerator = GetInsideBoundsEnumerator(aabb);\r\n                const enumerator = this.GetInsideBoundsEnumerator(aabb);\r\n                let c;\r\n                while ((c = enumerator.GetNext()) >= 0) {\r\n                    const pc = pos_data[c];\r\n                    const cGroup = this.m_groupBuffer[c];\r\n                    if (aGroup !== cGroup && bGroup !== cGroup) {\r\n                        ///b2Vec2 vc = GetLinearVelocity(cGroup, c, pc);\r\n                        const vc = this.GetLinearVelocity(cGroup, c, pc, s_vc);\r\n                        // Solve the equation below:\r\n                        //   (1-s)*(pa+t*va)+s*(pb+t*vb) = pc+t*vc\r\n                        // which expresses that the particle c will pass a line\r\n                        // connecting the particles a and b at the time of t.\r\n                        // if s is between 0 and 1, c will pass between a and b.\r\n                        ///b2Vec2 pca = pc - pa;\r\n                        const pca = b2Vec2.SubVV(pc, pa, s_pca);\r\n                        ///b2Vec2 vca = vc - va;\r\n                        const vca = b2Vec2.SubVV(vc, va, s_vca);\r\n                        const e2 = b2Vec2.CrossVV(vba, vca);\r\n                        const e1 = b2Vec2.CrossVV(pba, vca) - b2Vec2.CrossVV(pca, vba);\r\n                        const e0 = b2Vec2.CrossVV(pba, pca);\r\n                        let s, t;\r\n                        ///b2Vec2 qba, qca;\r\n                        const qba = s_qba, qca = s_qca;\r\n                        if (e2 === 0) {\r\n                            if (e1 === 0) {\r\n                                continue;\r\n                            }\r\n                            t = -e0 / e1;\r\n                            if (!(t >= 0 && t < tmax)) {\r\n                                continue;\r\n                            }\r\n                            ///qba = pba + t * vba;\r\n                            b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                            ///qca = pca + t * vca;\r\n                            b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                            s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                            if (!(s >= 0 && s <= 1)) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        else {\r\n                            const det = e1 * e1 - 4 * e0 * e2;\r\n                            if (det < 0) {\r\n                                continue;\r\n                            }\r\n                            const sqrtDet = b2Sqrt(det);\r\n                            let t1 = (-e1 - sqrtDet) / (2 * e2);\r\n                            let t2 = (-e1 + sqrtDet) / (2 * e2);\r\n                            ///if (t1 > t2) b2Swap(t1, t2);\r\n                            if (t1 > t2) {\r\n                                const tmp = t1;\r\n                                t1 = t2;\r\n                                t2 = tmp;\r\n                            }\r\n                            t = t1;\r\n                            ///qba = pba + t * vba;\r\n                            b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                            ///qca = pca + t * vca;\r\n                            b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                            ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\r\n                            s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                            if (!(t >= 0 && t < tmax && s >= 0 && s <= 1)) {\r\n                                t = t2;\r\n                                if (!(t >= 0 && t < tmax)) {\r\n                                    continue;\r\n                                }\r\n                                ///qba = pba + t * vba;\r\n                                b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                                ///qca = pca + t * vca;\r\n                                b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                                ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\r\n                                s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                                if (!(s >= 0 && s <= 1)) {\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        }\r\n                        // Apply a force to particle c so that it will have the\r\n                        // interpolated velocity at the collision point on line ab.\r\n                        ///b2Vec2 dv = va + s * vba - vc;\r\n                        const dv = s_dv;\r\n                        dv.x = va.x + s * vba.x - vc.x;\r\n                        dv.y = va.y + s * vba.y - vc.y;\r\n                        ///b2Vec2 f = GetParticleMass() * dv;\r\n                        const f = b2Vec2.MulSV(mass, dv, s_f);\r\n                        if (cGroup && this.IsRigidGroup(cGroup)) {\r\n                            // If c belongs to a rigid group, the force will be\r\n                            // distributed in the group.\r\n                            const mass = cGroup.GetMass();\r\n                            const inertia = cGroup.GetInertia();\r\n                            if (mass > 0) {\r\n                                ///cGroup.m_linearVelocity += 1 / mass * f;\r\n                                cGroup.m_linearVelocity.SelfMulAdd(1 / mass, f);\r\n                            }\r\n                            if (inertia > 0) {\r\n                                ///cGroup.m_angularVelocity += b2Cross(pc - cGroup.GetCenter(), f) / inertia;\r\n                                cGroup.m_angularVelocity += b2Vec2.CrossVV(b2Vec2.SubVV(pc, cGroup.GetCenter(), b2Vec2.s_t0), f) / inertia;\r\n                            }\r\n                        }\r\n                        else {\r\n                            ///m_velocityBuffer.data[c] += dv;\r\n                            vel_data[c].SelfAdd(dv);\r\n                        }\r\n                        // Apply a reversed force to particle c after particle\r\n                        // movement so that momentum will be preserved.\r\n                        ///ParticleApplyForce(c, -step.inv_dt * f);\r\n                        this.ParticleApplyForce(c, f.SelfMul(-step.inv_dt));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveStaticPressure(step) {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        this.m_staticPressureBuffer = this.RequestBuffer(this.m_staticPressureBuffer);\r\n        const criticalPressure = this.GetCriticalPressure(step);\r\n        const pressurePerWeight = this.m_def.staticPressureStrength * criticalPressure;\r\n        const maxPressure = b2_maxParticlePressure * criticalPressure;\r\n        const relaxation = this.m_def.staticPressureRelaxation;\r\n        /// Compute pressure satisfying the modified Poisson equation:\r\n        ///   Sum_for_j((p_i - p_j) * w_ij) + relaxation * p_i =\r\n        ///   pressurePerWeight * (w_i - b2_minParticleWeight)\r\n        /// by iterating the calculation:\r\n        ///   p_i = (Sum_for_j(p_j * w_ij) + pressurePerWeight *\r\n        ///         (w_i - b2_minParticleWeight)) / (w_i + relaxation)\r\n        /// where\r\n        ///   p_i and p_j are static pressure of particle i and j\r\n        ///   w_ij is contact weight between particle i and j\r\n        ///   w_i is sum of contact weight of particle i\r\n        for (let t = 0; t < this.m_def.staticPressureIterations; t++) {\r\n            ///memset(m_accumulationBuffer, 0, sizeof(*m_accumulationBuffer) * m_count);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                this.m_accumulationBuffer[i] = 0;\r\n            }\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                const contact = this.m_contactBuffer.data[k];\r\n                if (contact.flags & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    const a = contact.indexA;\r\n                    const b = contact.indexB;\r\n                    const w = contact.weight;\r\n                    this.m_accumulationBuffer[a] += w * this.m_staticPressureBuffer[b]; // a <- b\r\n                    this.m_accumulationBuffer[b] += w * this.m_staticPressureBuffer[a]; // b <- a\r\n                }\r\n            }\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                const w = this.m_weightBuffer[i];\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    const wh = this.m_accumulationBuffer[i];\r\n                    const h = (wh + pressurePerWeight * (w - b2_minParticleWeight)) /\r\n                        (w + relaxation);\r\n                    this.m_staticPressureBuffer[i] = b2Clamp(h, 0.0, maxPressure);\r\n                }\r\n                else {\r\n                    this.m_staticPressureBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ComputeWeight() {\r\n        // calculates the sum of contact-weights for each particle\r\n        // that means dimensionless density\r\n        ///memset(m_weightBuffer, 0, sizeof(*m_weightBuffer) * m_count);\r\n        for (let k = 0; k < this.m_count; k++) {\r\n            this.m_weightBuffer[k] = 0;\r\n        }\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            const w = contact.weight;\r\n            this.m_weightBuffer[a] += w;\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const w = contact.weight;\r\n            this.m_weightBuffer[a] += w;\r\n            this.m_weightBuffer[b] += w;\r\n        }\r\n    }\r\n    SolvePressure(step) {\r\n        const s_f = b2ParticleSystem.SolvePressure_s_f;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // calculates pressure as a linear function of density\r\n        const criticalPressure = this.GetCriticalPressure(step);\r\n        const pressurePerWeight = this.m_def.pressureStrength * criticalPressure;\r\n        const maxPressure = b2_maxParticlePressure * criticalPressure;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            const w = this.m_weightBuffer[i];\r\n            const h = pressurePerWeight * b2Max(0.0, w - b2_minParticleWeight);\r\n            this.m_accumulationBuffer[i] = b2Min(h, maxPressure);\r\n        }\r\n        // ignores particles which have their own repulsive force\r\n        if (this.m_allParticleFlags & b2ParticleSystem.k_noPressureFlags) {\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleSystem.k_noPressureFlags) {\r\n                    this.m_accumulationBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        // static pressure\r\n        if (this.m_allParticleFlags & b2ParticleFlag.b2_staticPressureParticle) {\r\n            // DEBUG: b2Assert(this.m_staticPressureBuffer !== null);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    this.m_accumulationBuffer[i] += this.m_staticPressureBuffer[i];\r\n                }\r\n            }\r\n        }\r\n        // applies pressure between each particles in contact\r\n        const velocityPerPressure = step.dt / (this.m_def.density * this.m_particleDiameter);\r\n        const inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            const b = contact.body;\r\n            const w = contact.weight;\r\n            const m = contact.mass;\r\n            const n = contact.normal;\r\n            const p = pos_data[a];\r\n            const h = this.m_accumulationBuffer[a] + pressurePerWeight * w;\r\n            ///b2Vec2 f = velocityPerPressure * w * m * h * n;\r\n            const f = b2Vec2.MulSV(velocityPerPressure * w * m * h, n, s_f);\r\n            ///m_velocityBuffer.data[a] -= GetParticleInvMass() * f;\r\n            vel_data[a].SelfMulSub(inv_mass, f);\r\n            b.ApplyLinearImpulse(f, p, true);\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const w = contact.weight;\r\n            const n = contact.normal;\r\n            const h = this.m_accumulationBuffer[a] + this.m_accumulationBuffer[b];\r\n            ///b2Vec2 f = velocityPerPressure * w * h * n;\r\n            const f = b2Vec2.MulSV(velocityPerPressure * w * h, n, s_f);\r\n            ///m_velocityBuffer.data[a] -= f;\r\n            vel_data[a].SelfSub(f);\r\n            ///m_velocityBuffer.data[b] += f;\r\n            vel_data[b].SelfAdd(f);\r\n        }\r\n    }\r\n    SolveDamping(step) {\r\n        const s_v = b2ParticleSystem.SolveDamping_s_v;\r\n        const s_f = b2ParticleSystem.SolveDamping_s_f;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // reduces normal velocity of each contact\r\n        const linearDamping = this.m_def.dampingStrength;\r\n        const quadraticDamping = 1 / this.GetCriticalVelocity(step);\r\n        const inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            const b = contact.body;\r\n            const w = contact.weight;\r\n            const m = contact.mass;\r\n            const n = contact.normal;\r\n            const p = pos_data[a];\r\n            ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n            const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n            const vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                const damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\r\n                ///b2Vec2 f = damping * m * vn * n;\r\n                const f = b2Vec2.MulSV(damping * m * vn, n, s_f);\r\n                ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                vel_data[a].SelfMulAdd(inv_mass, f);\r\n                ///b.ApplyLinearImpulse(-f, p, true);\r\n                b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const w = contact.weight;\r\n            const n = contact.normal;\r\n            ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n            const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n            const vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                ///float32 damping = b2Max(linearDamping * w, b2Min(- quadraticDamping * vn, 0.5f));\r\n                const damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\r\n                ///b2Vec2 f = damping * vn * n;\r\n                const f = b2Vec2.MulSV(damping * vn, n, s_f);\r\n                ///this.m_velocityBuffer.data[a] += f;\r\n                vel_data[a].SelfAdd(f);\r\n                ///this.m_velocityBuffer.data[b] -= f;\r\n                vel_data[b].SelfSub(f);\r\n            }\r\n        }\r\n    }\r\n    SolveRigidDamping() {\r\n        const s_t0 = b2ParticleSystem.SolveRigidDamping_s_t0;\r\n        const s_t1 = b2ParticleSystem.SolveRigidDamping_s_t1;\r\n        const s_p = b2ParticleSystem.SolveRigidDamping_s_p;\r\n        const s_v = b2ParticleSystem.SolveRigidDamping_s_v;\r\n        const invMassA = [0.0], invInertiaA = [0.0], tangentDistanceA = [0.0]; // TODO: static\r\n        const invMassB = [0.0], invInertiaB = [0.0], tangentDistanceB = [0.0]; // TODO: static\r\n        // Apply impulse to rigid particle groups colliding with other objects\r\n        // to reduce relative velocity at the colliding point.\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const damping = this.m_def.dampingStrength;\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            const aGroup = this.m_groupBuffer[a];\r\n            if (aGroup && this.IsRigidGroup(aGroup)) {\r\n                const b = contact.body;\r\n                const n = contact.normal;\r\n                const w = contact.weight;\r\n                const p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - aGroup.GetLinearVelocityFromWorldPoint(p);\r\n                const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, s_t0), aGroup.GetLinearVelocityFromWorldPoint(p, s_t1), s_v);\r\n                const vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    // The group's average velocity at particle position 'p' is pushing\r\n                    // the particle into the body.\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, true, aGroup, a, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, p, n);\r\n                    // Calculate b.m_I from public functions of b2Body.\r\n                    ///this.InitDampingParameter(&invMassB, &invInertiaB, &tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\r\n                    this.InitDampingParameter(invMassB, invInertiaB, tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\r\n                    ///float32 f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\r\n                    const f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\r\n                    ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, f, n);\r\n                    this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], true, aGroup, a, f, n);\r\n                    ///b.ApplyLinearImpulse(-f * n, p, true);\r\n                    b.ApplyLinearImpulse(b2Vec2.MulSV(-f, n, b2Vec2.s_t0), p, true);\r\n                }\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            const n = contact.normal;\r\n            const w = contact.weight;\r\n            const aGroup = this.m_groupBuffer[a];\r\n            const bGroup = this.m_groupBuffer[b];\r\n            const aRigid = this.IsRigidGroup(aGroup);\r\n            const bRigid = this.IsRigidGroup(bGroup);\r\n            if (aGroup !== bGroup && (aRigid || bRigid)) {\r\n                ///b2Vec2 p = 0.5f * (this.m_positionBuffer.data[a] + this.m_positionBuffer.data[b]);\r\n                const p = b2Vec2.MidVV(pos_data[a], pos_data[b], s_p);\r\n                ///b2Vec2 v = GetLinearVelocity(bGroup, b, p) - GetLinearVelocity(aGroup, a, p);\r\n                const v = b2Vec2.SubVV(this.GetLinearVelocity(bGroup, b, p, s_t0), this.GetLinearVelocity(aGroup, a, p, s_t1), s_v);\r\n                const vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, aRigid, aGroup, a, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, p, n);\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassB, &invInertiaB, &tangentDistanceB, bRigid, bGroup, b, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, p, n);\r\n                    ///float32 f = damping * w * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\r\n                    const f = damping * w * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\r\n                    ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, f, n);\r\n                    this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], aRigid, aGroup, a, f, n);\r\n                    ///this.ApplyDamping(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, -f, n);\r\n                    this.ApplyDamping(invMassB[0], invInertiaB[0], tangentDistanceB[0], bRigid, bGroup, b, -f, n);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveExtraDamping() {\r\n        const s_v = b2ParticleSystem.SolveExtraDamping_s_v;\r\n        const s_f = b2ParticleSystem.SolveExtraDamping_s_f;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // Applies additional damping force between bodies and particles which can\r\n        // produce strong repulsive force. Applying damping force multiple times\r\n        // is effective in suppressing vibration.\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleSystem.k_extraDampingFlags) {\r\n                const b = contact.body;\r\n                const m = contact.mass;\r\n                const n = contact.normal;\r\n                const p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n                const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n                ///float32 vn = b2Dot(v, n);\r\n                const vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    ///b2Vec2 f = 0.5f * m * vn * n;\r\n                    const f = b2Vec2.MulSV(0.5 * m * vn, n, s_f);\r\n                    ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                    vel_data[a].SelfMulAdd(inv_mass, f);\r\n                    ///b.ApplyLinearImpulse(-f, p, true);\r\n                    b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveWall() {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_wallParticle) {\r\n                vel_data[i].SetZero();\r\n            }\r\n        }\r\n    }\r\n    SolveRigid(step) {\r\n        const s_position = b2ParticleSystem.SolveRigid_s_position;\r\n        const s_rotation = b2ParticleSystem.SolveRigid_s_rotation;\r\n        const s_transform = b2ParticleSystem.SolveRigid_s_transform;\r\n        const s_velocityTransform = b2ParticleSystem.SolveRigid_s_velocityTransform;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                group.UpdateStatistics();\r\n                ///b2Rot rotation(step.dt * group.m_angularVelocity);\r\n                const rotation = s_rotation;\r\n                rotation.SetAngle(step.dt * group.m_angularVelocity);\r\n                ///b2Transform transform(group.m_center + step.dt * group.m_linearVelocity - b2Mul(rotation, group.m_center), rotation);\r\n                const position = b2Vec2.AddVV(group.m_center, b2Vec2.SubVV(b2Vec2.MulSV(step.dt, group.m_linearVelocity, b2Vec2.s_t0), b2Rot.MulRV(rotation, group.m_center, b2Vec2.s_t1), b2Vec2.s_t0), s_position);\r\n                const transform = s_transform;\r\n                transform.SetPositionRotation(position, rotation);\r\n                ///group.m_transform = b2Mul(transform, group.m_transform);\r\n                b2Transform.MulXX(transform, group.m_transform, group.m_transform);\r\n                const velocityTransform = s_velocityTransform;\r\n                velocityTransform.p.x = step.inv_dt * transform.p.x;\r\n                velocityTransform.p.y = step.inv_dt * transform.p.y;\r\n                velocityTransform.q.s = step.inv_dt * transform.q.s;\r\n                velocityTransform.q.c = step.inv_dt * (transform.q.c - 1);\r\n                for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                    ///m_velocityBuffer.data[i] = b2Mul(velocityTransform, m_positionBuffer.data[i]);\r\n                    b2Transform.MulXV(velocityTransform, pos_data[i], vel_data[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveElastic(step) {\r\n        const s_pa = b2ParticleSystem.SolveElastic_s_pa;\r\n        const s_pb = b2ParticleSystem.SolveElastic_s_pb;\r\n        const s_pc = b2ParticleSystem.SolveElastic_s_pc;\r\n        const s_r = b2ParticleSystem.SolveElastic_s_r;\r\n        const s_t0 = b2ParticleSystem.SolveElastic_s_t0;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const elasticStrength = step.inv_dt * this.m_def.elasticStrength;\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            const triad = this.m_triadBuffer.data[k];\r\n            if (triad.flags & b2ParticleFlag.b2_elasticParticle) {\r\n                const a = triad.indexA;\r\n                const b = triad.indexB;\r\n                const c = triad.indexC;\r\n                const oa = triad.pa;\r\n                const ob = triad.pb;\r\n                const oc = triad.pc;\r\n                ///b2Vec2 pa = m_positionBuffer.data[a];\r\n                const pa = s_pa.Copy(pos_data[a]);\r\n                ///b2Vec2 pb = m_positionBuffer.data[b];\r\n                const pb = s_pb.Copy(pos_data[b]);\r\n                ///b2Vec2 pc = m_positionBuffer.data[c];\r\n                const pc = s_pc.Copy(pos_data[c]);\r\n                const va = vel_data[a];\r\n                const vb = vel_data[b];\r\n                const vc = vel_data[c];\r\n                ///pa += step.dt * va;\r\n                pa.SelfMulAdd(step.dt, va);\r\n                ///pb += step.dt * vb;\r\n                pb.SelfMulAdd(step.dt, vb);\r\n                ///pc += step.dt * vc;\r\n                pc.SelfMulAdd(step.dt, vc);\r\n                ///b2Vec2 midPoint = (float32) 1 / 3 * (pa + pb + pc);\r\n                const midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\r\n                const midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\r\n                ///pa -= midPoint;\r\n                pa.x -= midPoint_x;\r\n                pa.y -= midPoint_y;\r\n                ///pb -= midPoint;\r\n                pb.x -= midPoint_x;\r\n                pb.y -= midPoint_y;\r\n                ///pc -= midPoint;\r\n                pc.x -= midPoint_x;\r\n                pc.y -= midPoint_y;\r\n                ///b2Rot r;\r\n                const r = s_r;\r\n                r.s = b2Vec2.CrossVV(oa, pa) + b2Vec2.CrossVV(ob, pb) + b2Vec2.CrossVV(oc, pc);\r\n                r.c = b2Vec2.DotVV(oa, pa) + b2Vec2.DotVV(ob, pb) + b2Vec2.DotVV(oc, pc);\r\n                const r2 = r.s * r.s + r.c * r.c;\r\n                let invR = b2InvSqrt(r2);\r\n                if (!isFinite(invR)) {\r\n                    invR = 1.98177537e+019;\r\n                }\r\n                r.s *= invR;\r\n                r.c *= invR;\r\n                ///r.angle = Math.atan2(r.s, r.c); // TODO: optimize\r\n                const strength = elasticStrength * triad.strength;\r\n                ///va += strength * (b2Mul(r, oa) - pa);\r\n                b2Rot.MulRV(r, oa, s_t0);\r\n                b2Vec2.SubVV(s_t0, pa, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                va.SelfAdd(s_t0);\r\n                ///vb += strength * (b2Mul(r, ob) - pb);\r\n                b2Rot.MulRV(r, ob, s_t0);\r\n                b2Vec2.SubVV(s_t0, pb, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                vb.SelfAdd(s_t0);\r\n                ///vc += strength * (b2Mul(r, oc) - pc);\r\n                b2Rot.MulRV(r, oc, s_t0);\r\n                b2Vec2.SubVV(s_t0, pc, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                vc.SelfAdd(s_t0);\r\n            }\r\n        }\r\n    }\r\n    SolveSpring(step) {\r\n        const s_pa = b2ParticleSystem.SolveSpring_s_pa;\r\n        const s_pb = b2ParticleSystem.SolveSpring_s_pb;\r\n        const s_d = b2ParticleSystem.SolveSpring_s_d;\r\n        const s_f = b2ParticleSystem.SolveSpring_s_f;\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const springStrength = step.inv_dt * this.m_def.springStrength;\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            const pair = this.m_pairBuffer.data[k];\r\n            if (pair.flags & b2ParticleFlag.b2_springParticle) {\r\n                ///int32 a = pair.indexA;\r\n                const a = pair.indexA;\r\n                ///int32 b = pair.indexB;\r\n                const b = pair.indexB;\r\n                ///b2Vec2 pa = m_positionBuffer.data[a];\r\n                const pa = s_pa.Copy(pos_data[a]);\r\n                ///b2Vec2 pb = m_positionBuffer.data[b];\r\n                const pb = s_pb.Copy(pos_data[b]);\r\n                ///b2Vec2& va = m_velocityBuffer.data[a];\r\n                const va = vel_data[a];\r\n                ///b2Vec2& vb = m_velocityBuffer.data[b];\r\n                const vb = vel_data[b];\r\n                ///pa += step.dt * va;\r\n                pa.SelfMulAdd(step.dt, va);\r\n                ///pb += step.dt * vb;\r\n                pb.SelfMulAdd(step.dt, vb);\r\n                ///b2Vec2 d = pb - pa;\r\n                const d = b2Vec2.SubVV(pb, pa, s_d);\r\n                ///float32 r0 = pair.distance;\r\n                const r0 = pair.distance;\r\n                ///float32 r1 = d.Length();\r\n                const r1 = d.Length();\r\n                ///float32 strength = springStrength * pair.strength;\r\n                const strength = springStrength * pair.strength;\r\n                ///b2Vec2 f = strength * (r0 - r1) / r1 * d;\r\n                const f = b2Vec2.MulSV(strength * (r0 - r1) / r1, d, s_f);\r\n                ///va -= f;\r\n                va.SelfSub(f);\r\n                ///vb += f;\r\n                vb.SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveTensile(step) {\r\n        const s_weightedNormal = b2ParticleSystem.SolveTensile_s_weightedNormal;\r\n        const s_s = b2ParticleSystem.SolveTensile_s_s;\r\n        const s_f = b2ParticleSystem.SolveTensile_s_f;\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // DEBUG: b2Assert(this.m_accumulation2Buffer !== null);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_accumulation2Buffer[i] = new b2Vec2();\r\n            this.m_accumulation2Buffer[i].SetZero();\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_tensileParticle) {\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                const w = contact.weight;\r\n                const n = contact.normal;\r\n                ///b2Vec2 weightedNormal = (1 - w) * w * n;\r\n                const weightedNormal = b2Vec2.MulSV((1 - w) * w, n, s_weightedNormal);\r\n                ///m_accumulation2Buffer[a] -= weightedNormal;\r\n                this.m_accumulation2Buffer[a].SelfSub(weightedNormal);\r\n                ///m_accumulation2Buffer[b] += weightedNormal;\r\n                this.m_accumulation2Buffer[b].SelfAdd(weightedNormal);\r\n            }\r\n        }\r\n        const criticalVelocity = this.GetCriticalVelocity(step);\r\n        const pressureStrength = this.m_def.surfaceTensionPressureStrength * criticalVelocity;\r\n        const normalStrength = this.m_def.surfaceTensionNormalStrength * criticalVelocity;\r\n        const maxVelocityVariation = b2_maxParticleForce * criticalVelocity;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_tensileParticle) {\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                const w = contact.weight;\r\n                const n = contact.normal;\r\n                const h = this.m_weightBuffer[a] + this.m_weightBuffer[b];\r\n                ///b2Vec2 s = m_accumulation2Buffer[b] - m_accumulation2Buffer[a];\r\n                const s = b2Vec2.SubVV(this.m_accumulation2Buffer[b], this.m_accumulation2Buffer[a], s_s);\r\n                const fn = b2Min(pressureStrength * (h - 2) + normalStrength * b2Vec2.DotVV(s, n), maxVelocityVariation) * w;\r\n                ///b2Vec2 f = fn * n;\r\n                const f = b2Vec2.MulSV(fn, n, s_f);\r\n                ///m_velocityBuffer.data[a] -= f;\r\n                vel_data[a].SelfSub(f);\r\n                ///m_velocityBuffer.data[b] += f;\r\n                vel_data[b].SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveViscous() {\r\n        const s_v = b2ParticleSystem.SolveViscous_s_v;\r\n        const s_f = b2ParticleSystem.SolveViscous_s_f;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const viscousStrength = this.m_def.viscousStrength;\r\n        const inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleFlag.b2_viscousParticle) {\r\n                const b = contact.body;\r\n                const w = contact.weight;\r\n                const m = contact.mass;\r\n                const p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n                const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n                ///b2Vec2 f = viscousStrength * m * w * v;\r\n                const f = b2Vec2.MulSV(viscousStrength * m * w, v, s_f);\r\n                ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                vel_data[a].SelfMulAdd(inv_mass, f);\r\n                ///b.ApplyLinearImpulse(-f, p, true);\r\n                b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_viscousParticle) {\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                const w = contact.weight;\r\n                ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n                const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n                ///b2Vec2 f = viscousStrength * w * v;\r\n                const f = b2Vec2.MulSV(viscousStrength * w, v, s_f);\r\n                ///m_velocityBuffer.data[a] += f;\r\n                vel_data[a].SelfAdd(f);\r\n                ///m_velocityBuffer.data[b] -= f;\r\n                vel_data[b].SelfSub(f);\r\n            }\r\n        }\r\n    }\r\n    SolveRepulsive(step) {\r\n        const s_f = b2ParticleSystem.SolveRepulsive_s_f;\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const repulsiveStrength = this.m_def.repulsiveStrength * this.GetCriticalVelocity(step);\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_repulsiveParticle) {\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\r\n                    const w = contact.weight;\r\n                    const n = contact.normal;\r\n                    ///b2Vec2 f = repulsiveStrength * w * n;\r\n                    const f = b2Vec2.MulSV(repulsiveStrength * w, n, s_f);\r\n                    ///m_velocityBuffer.data[a] -= f;\r\n                    vel_data[a].SelfSub(f);\r\n                    ///m_velocityBuffer.data[b] += f;\r\n                    vel_data[b].SelfAdd(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolvePowder(step) {\r\n        const s_f = b2ParticleSystem.SolvePowder_s_f;\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const pos_data = this.m_positionBuffer.data;\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const powderStrength = this.m_def.powderStrength * this.GetCriticalVelocity(step);\r\n        const minWeight = 1.0 - b2_particleStride;\r\n        const inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            const a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleFlag.b2_powderParticle) {\r\n                const w = contact.weight;\r\n                if (w > minWeight) {\r\n                    const b = contact.body;\r\n                    const m = contact.mass;\r\n                    const p = pos_data[a];\r\n                    const n = contact.normal;\r\n                    const f = b2Vec2.MulSV(powderStrength * m * (w - minWeight), n, s_f);\r\n                    vel_data[a].SelfMulSub(inv_mass, f);\r\n                    b.ApplyLinearImpulse(f, p, true);\r\n                }\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_powderParticle) {\r\n                const w = contact.weight;\r\n                if (w > minWeight) {\r\n                    const a = contact.indexA;\r\n                    const b = contact.indexB;\r\n                    const n = contact.normal;\r\n                    const f = b2Vec2.MulSV(powderStrength * (w - minWeight), n, s_f);\r\n                    vel_data[a].SelfSub(f);\r\n                    vel_data[b].SelfAdd(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveSolid(step) {\r\n        const s_f = b2ParticleSystem.SolveSolid_s_f;\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        // applies extra repulsive force from solid particle groups\r\n        this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\r\n        const ejectionStrength = step.inv_dt * this.m_def.ejectionStrength;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            const a = contact.indexA;\r\n            const b = contact.indexB;\r\n            if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\r\n                const w = contact.weight;\r\n                const n = contact.normal;\r\n                const h = this.m_depthBuffer[a] + this.m_depthBuffer[b];\r\n                const f = b2Vec2.MulSV(ejectionStrength * h * w, n, s_f);\r\n                vel_data[a].SelfSub(f);\r\n                vel_data[b].SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveForce(step) {\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const vel_data = this.m_velocityBuffer.data;\r\n        const velocityPerForce = step.dt * this.GetParticleInvMass();\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            ///m_velocityBuffer.data[i] += velocityPerForce * m_forceBuffer[i];\r\n            vel_data[i].SelfMulAdd(velocityPerForce, this.m_forceBuffer[i]);\r\n        }\r\n        this.m_hasForce = false;\r\n    }\r\n    SolveColorMixing() {\r\n        // mixes color between contacting particles\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_colorBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        const colorMixing = 0.5 * this.m_def.colorMixingStrength;\r\n        if (colorMixing) {\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                const contact = this.m_contactBuffer.data[k];\r\n                const a = contact.indexA;\r\n                const b = contact.indexB;\r\n                if (this.m_flagsBuffer.data[a] & this.m_flagsBuffer.data[b] &\r\n                    b2ParticleFlag.b2_colorMixingParticle) {\r\n                    const colorA = this.m_colorBuffer.data[a];\r\n                    const colorB = this.m_colorBuffer.data[b];\r\n                    // Use the static method to ensure certain compilers inline\r\n                    // this correctly.\r\n                    b2Color.MixColors(colorA, colorB, colorMixing);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveZombie() {\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        // removes particles with zombie flag\r\n        let newCount = 0;\r\n        ///int32* newIndices = (int32*) this.m_world.m_stackAllocator.Allocate(sizeof(int32) * this.m_count);\r\n        const newIndices = []; // TODO: static\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            newIndices[i] = b2_invalidParticleIndex;\r\n        }\r\n        // DEBUG: b2Assert(newIndices.length === this.m_count);\r\n        let allParticleFlags = 0;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            const flags = this.m_flagsBuffer.data[i];\r\n            if (flags & b2ParticleFlag.b2_zombieParticle) {\r\n                const destructionListener = this.m_world.m_destructionListener;\r\n                if ((flags & b2ParticleFlag.b2_destructionListenerParticle) && destructionListener) {\r\n                    destructionListener.SayGoodbyeParticle(this, i);\r\n                }\r\n                // Destroy particle handle.\r\n                if (this.m_handleIndexBuffer.data) {\r\n                    const handle = this.m_handleIndexBuffer.data[i];\r\n                    if (handle) {\r\n                        handle.SetIndex(b2_invalidParticleIndex);\r\n                        this.m_handleIndexBuffer.data[i] = null;\r\n                        ///m_handleAllocator.Free(handle);\r\n                    }\r\n                }\r\n                newIndices[i] = b2_invalidParticleIndex;\r\n            }\r\n            else {\r\n                newIndices[i] = newCount;\r\n                if (i !== newCount) {\r\n                    // Update handle to reference new particle index.\r\n                    if (this.m_handleIndexBuffer.data) {\r\n                        const handle = this.m_handleIndexBuffer.data[i];\r\n                        if (handle) {\r\n                            handle.SetIndex(newCount);\r\n                        }\r\n                        this.m_handleIndexBuffer.data[newCount] = handle;\r\n                    }\r\n                    this.m_flagsBuffer.data[newCount] = this.m_flagsBuffer.data[i];\r\n                    if (this.m_lastBodyContactStepBuffer.data) {\r\n                        this.m_lastBodyContactStepBuffer.data[newCount] = this.m_lastBodyContactStepBuffer.data[i];\r\n                    }\r\n                    if (this.m_bodyContactCountBuffer.data) {\r\n                        this.m_bodyContactCountBuffer.data[newCount] = this.m_bodyContactCountBuffer.data[i];\r\n                    }\r\n                    if (this.m_consecutiveContactStepsBuffer.data) {\r\n                        this.m_consecutiveContactStepsBuffer.data[newCount] = this.m_consecutiveContactStepsBuffer.data[i];\r\n                    }\r\n                    this.m_positionBuffer.data[newCount].Copy(this.m_positionBuffer.data[i]);\r\n                    this.m_velocityBuffer.data[newCount].Copy(this.m_velocityBuffer.data[i]);\r\n                    this.m_groupBuffer[newCount] = this.m_groupBuffer[i];\r\n                    if (this.m_hasForce) {\r\n                        this.m_forceBuffer[newCount].Copy(this.m_forceBuffer[i]);\r\n                    }\r\n                    if (this.m_staticPressureBuffer) {\r\n                        this.m_staticPressureBuffer[newCount] = this.m_staticPressureBuffer[i];\r\n                    }\r\n                    if (this.m_depthBuffer) {\r\n                        this.m_depthBuffer[newCount] = this.m_depthBuffer[i];\r\n                    }\r\n                    if (this.m_colorBuffer.data) {\r\n                        this.m_colorBuffer.data[newCount].Copy(this.m_colorBuffer.data[i]);\r\n                    }\r\n                    if (this.m_userDataBuffer.data) {\r\n                        this.m_userDataBuffer.data[newCount] = this.m_userDataBuffer.data[i];\r\n                    }\r\n                    if (this.m_expirationTimeBuffer.data) {\r\n                        this.m_expirationTimeBuffer.data[newCount] = this.m_expirationTimeBuffer.data[i];\r\n                    }\r\n                }\r\n                newCount++;\r\n                allParticleFlags |= flags;\r\n            }\r\n        }\r\n        // predicate functions\r\n        const Test = {\r\n            ///static bool IsProxyInvalid(const Proxy& proxy)\r\n            IsProxyInvalid: (proxy) => {\r\n                return proxy.index < 0;\r\n            },\r\n            ///static bool IsContactInvalid(const b2ParticleContact& contact)\r\n            IsContactInvalid: (contact) => {\r\n                return contact.indexA < 0 || contact.indexB < 0;\r\n            },\r\n            ///static bool IsBodyContactInvalid(const b2ParticleBodyContact& contact)\r\n            IsBodyContactInvalid: (contact) => {\r\n                return contact.index < 0;\r\n            },\r\n            ///static bool IsPairInvalid(const b2ParticlePair& pair)\r\n            IsPairInvalid: (pair) => {\r\n                return pair.indexA < 0 || pair.indexB < 0;\r\n            },\r\n            ///static bool IsTriadInvalid(const b2ParticleTriad& triad)\r\n            IsTriadInvalid: (triad) => {\r\n                return triad.indexA < 0 || triad.indexB < 0 || triad.indexC < 0;\r\n            },\r\n        };\r\n        // update proxies\r\n        for (let k = 0; k < this.m_proxyBuffer.count; k++) {\r\n            const proxy = this.m_proxyBuffer.data[k];\r\n            proxy.index = newIndices[proxy.index];\r\n        }\r\n        this.m_proxyBuffer.RemoveIf(Test.IsProxyInvalid);\r\n        // update contacts\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            contact.indexA = newIndices[contact.indexA];\r\n            contact.indexB = newIndices[contact.indexB];\r\n        }\r\n        this.m_contactBuffer.RemoveIf(Test.IsContactInvalid);\r\n        // update particle-body contacts\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            contact.index = newIndices[contact.index];\r\n        }\r\n        this.m_bodyContactBuffer.RemoveIf(Test.IsBodyContactInvalid);\r\n        // update pairs\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            const pair = this.m_pairBuffer.data[k];\r\n            pair.indexA = newIndices[pair.indexA];\r\n            pair.indexB = newIndices[pair.indexB];\r\n        }\r\n        this.m_pairBuffer.RemoveIf(Test.IsPairInvalid);\r\n        // update triads\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            const triad = this.m_triadBuffer.data[k];\r\n            triad.indexA = newIndices[triad.indexA];\r\n            triad.indexB = newIndices[triad.indexB];\r\n            triad.indexC = newIndices[triad.indexC];\r\n        }\r\n        this.m_triadBuffer.RemoveIf(Test.IsTriadInvalid);\r\n        // Update lifetime indices.\r\n        if (this.m_indexByExpirationTimeBuffer.data) {\r\n            let writeOffset = 0;\r\n            for (let readOffset = 0; readOffset < this.m_count; readOffset++) {\r\n                const newIndex = newIndices[this.m_indexByExpirationTimeBuffer.data[readOffset]];\r\n                if (newIndex !== b2_invalidParticleIndex) {\r\n                    this.m_indexByExpirationTimeBuffer.data[writeOffset++] = newIndex;\r\n                }\r\n            }\r\n        }\r\n        // update groups\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            let firstIndex = newCount;\r\n            let lastIndex = 0;\r\n            let modified = false;\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                const j = newIndices[i];\r\n                if (j >= 0) {\r\n                    firstIndex = b2Min(firstIndex, j);\r\n                    lastIndex = b2Max(lastIndex, j + 1);\r\n                }\r\n                else {\r\n                    modified = true;\r\n                }\r\n            }\r\n            if (firstIndex < lastIndex) {\r\n                group.m_firstIndex = firstIndex;\r\n                group.m_lastIndex = lastIndex;\r\n                if (modified) {\r\n                    if (group.m_groupFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                        this.SetGroupFlags(group, group.m_groupFlags | b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                group.m_firstIndex = 0;\r\n                group.m_lastIndex = 0;\r\n                if (!(group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupCanBeEmpty)) {\r\n                    this.SetGroupFlags(group, group.m_groupFlags | b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed);\r\n                }\r\n            }\r\n        }\r\n        // update particle count\r\n        this.m_count = newCount;\r\n        ///m_world.m_stackAllocator.Free(newIndices);\r\n        this.m_allParticleFlags = allParticleFlags;\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n        // destroy bodies with no particles\r\n        for (let group = this.m_groupList; group;) {\r\n            const next = group.GetNext();\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed) {\r\n                this.DestroyParticleGroup(group);\r\n            }\r\n            group = next;\r\n        }\r\n    }\r\n    /**\r\n     * Destroy all particles which have outlived their lifetimes set\r\n     * by SetParticleLifetime().\r\n     */\r\n    SolveLifetimes(step) {\r\n        if (!this.m_expirationTimeBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_indexByExpirationTimeBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        // Update the time elapsed.\r\n        this.m_timeElapsed = this.LifetimeToExpirationTime(step.dt);\r\n        // Get the floor (non-fractional component) of the elapsed time.\r\n        const quantizedTimeElapsed = this.GetQuantizedTimeElapsed();\r\n        const expirationTimes = this.m_expirationTimeBuffer.data;\r\n        const expirationTimeIndices = this.m_indexByExpirationTimeBuffer.data;\r\n        const particleCount = this.GetParticleCount();\r\n        // Sort the lifetime buffer if it's required.\r\n        if (this.m_expirationTimeBufferRequiresSorting) {\r\n            ///const ExpirationTimeComparator expirationTimeComparator(expirationTimes);\r\n            ///std::sort(expirationTimeIndices, expirationTimeIndices + particleCount, expirationTimeComparator);\r\n            /**\r\n             * Compare the lifetime of particleIndexA and particleIndexB\r\n             * returning true if the lifetime of A is greater than B for\r\n             * particles that will expire.  If either particle's lifetime is\r\n             * infinite (<= 0.0f) this function return true if the lifetime\r\n             * of A is lesser than B. When used with std::sort() this\r\n             * results in an array of particle indicies sorted in reverse\r\n             * order by particle lifetime.\r\n             *\r\n             * For example, the set of lifetimes\r\n             * (1.0, 0.7, 0.3, 0.0, -1.0, 2.0)\r\n             * would be sorted as\r\n             * (0.0, 1.0, -2.0, 1.0, 0.7, 0.3)\r\n             */\r\n            const ExpirationTimeComparator = (particleIndexA, particleIndexB) => {\r\n                const expirationTimeA = expirationTimes[particleIndexA];\r\n                const expirationTimeB = expirationTimes[particleIndexB];\r\n                const infiniteExpirationTimeA = expirationTimeA <= 0.0;\r\n                const infiniteExpirationTimeB = expirationTimeB <= 0.0;\r\n                return infiniteExpirationTimeA === infiniteExpirationTimeB ?\r\n                    expirationTimeA > expirationTimeB : infiniteExpirationTimeA;\r\n            };\r\n            std_sort(expirationTimeIndices, 0, particleCount, ExpirationTimeComparator);\r\n            this.m_expirationTimeBufferRequiresSorting = false;\r\n        }\r\n        // Destroy particles which have expired.\r\n        for (let i = particleCount - 1; i >= 0; --i) {\r\n            const particleIndex = expirationTimeIndices[i];\r\n            const expirationTime = expirationTimes[particleIndex];\r\n            // If no particles need to be destroyed, skip this.\r\n            if (quantizedTimeElapsed < expirationTime || expirationTime <= 0) {\r\n                break;\r\n            }\r\n            // Destroy this particle.\r\n            this.DestroyParticle(particleIndex);\r\n        }\r\n    }\r\n    RotateBuffer(start, mid, end) {\r\n        // move the particles assigned to the given group toward the end of array\r\n        if (start === mid || mid === end) {\r\n            return;\r\n        }\r\n        // DEBUG: b2Assert(mid >= start && mid <= end);\r\n        function newIndices(i) {\r\n            if (i < start) {\r\n                return i;\r\n            }\r\n            else if (i < mid) {\r\n                return i + end - mid;\r\n            }\r\n            else if (i < end) {\r\n                return i + start - mid;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        if (!this.m_flagsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_positionBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_velocityBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        ///std::rotate(m_flagsBuffer.data + start, m_flagsBuffer.data + mid, m_flagsBuffer.data + end);\r\n        std_rotate(this.m_flagsBuffer.data, start, mid, end);\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            ///std::rotate(m_lastBodyContactStepBuffer.data + start, m_lastBodyContactStepBuffer.data + mid, m_lastBodyContactStepBuffer.data + end);\r\n            std_rotate(this.m_lastBodyContactStepBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            ///std::rotate(m_bodyContactCountBuffer.data + start, m_bodyContactCountBuffer.data + mid, m_bodyContactCountBuffer.data + end);\r\n            std_rotate(this.m_bodyContactCountBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            ///std::rotate(m_consecutiveContactStepsBuffer.data + start, m_consecutiveContactStepsBuffer.data + mid, m_consecutiveContactStepsBuffer.data + end);\r\n            std_rotate(this.m_consecutiveContactStepsBuffer.data, start, mid, end);\r\n        }\r\n        ///std::rotate(m_positionBuffer.data + start, m_positionBuffer.data + mid, m_positionBuffer.data + end);\r\n        std_rotate(this.m_positionBuffer.data, start, mid, end);\r\n        ///std::rotate(m_velocityBuffer.data + start, m_velocityBuffer.data + mid, m_velocityBuffer.data + end);\r\n        std_rotate(this.m_velocityBuffer.data, start, mid, end);\r\n        ///std::rotate(m_groupBuffer + start, m_groupBuffer + mid, m_groupBuffer + end);\r\n        std_rotate(this.m_groupBuffer, start, mid, end);\r\n        if (this.m_hasForce) {\r\n            ///std::rotate(m_forceBuffer + start, m_forceBuffer + mid, m_forceBuffer + end);\r\n            std_rotate(this.m_forceBuffer, start, mid, end);\r\n        }\r\n        if (this.m_staticPressureBuffer) {\r\n            ///std::rotate(m_staticPressureBuffer + start, m_staticPressureBuffer + mid, m_staticPressureBuffer + end);\r\n            std_rotate(this.m_staticPressureBuffer, start, mid, end);\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            ///std::rotate(m_depthBuffer + start, m_depthBuffer + mid, m_depthBuffer + end);\r\n            std_rotate(this.m_depthBuffer, start, mid, end);\r\n        }\r\n        if (this.m_colorBuffer.data) {\r\n            ///std::rotate(m_colorBuffer.data + start, m_colorBuffer.data + mid, m_colorBuffer.data + end);\r\n            std_rotate(this.m_colorBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_userDataBuffer.data) {\r\n            ///std::rotate(m_userDataBuffer.data + start, m_userDataBuffer.data + mid, m_userDataBuffer.data + end);\r\n            std_rotate(this.m_userDataBuffer.data, start, mid, end);\r\n        }\r\n        // Update handle indices.\r\n        if (this.m_handleIndexBuffer.data) {\r\n            ///std::rotate(m_handleIndexBuffer.data + start, m_handleIndexBuffer.data + mid, m_handleIndexBuffer.data + end);\r\n            std_rotate(this.m_handleIndexBuffer.data, start, mid, end);\r\n            for (let i = start; i < end; ++i) {\r\n                const handle = this.m_handleIndexBuffer.data[i];\r\n                if (handle) {\r\n                    handle.SetIndex(newIndices(handle.GetIndex()));\r\n                }\r\n            }\r\n        }\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            ///std::rotate(m_expirationTimeBuffer.data + start, m_expirationTimeBuffer.data + mid, m_expirationTimeBuffer.data + end);\r\n            std_rotate(this.m_expirationTimeBuffer.data, start, mid, end);\r\n            // Update expiration time buffer indices.\r\n            const particleCount = this.GetParticleCount();\r\n            if (!this.m_indexByExpirationTimeBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const indexByExpirationTime = this.m_indexByExpirationTimeBuffer.data;\r\n            for (let i = 0; i < particleCount; ++i) {\r\n                indexByExpirationTime[i] = newIndices(indexByExpirationTime[i]);\r\n            }\r\n        }\r\n        // update proxies\r\n        for (let k = 0; k < this.m_proxyBuffer.count; k++) {\r\n            const proxy = this.m_proxyBuffer.data[k];\r\n            proxy.index = newIndices(proxy.index);\r\n        }\r\n        // update contacts\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            const contact = this.m_contactBuffer.data[k];\r\n            contact.indexA = newIndices(contact.indexA);\r\n            contact.indexB = newIndices(contact.indexB);\r\n        }\r\n        // update particle-body contacts\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            const contact = this.m_bodyContactBuffer.data[k];\r\n            contact.index = newIndices(contact.index);\r\n        }\r\n        // update pairs\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            const pair = this.m_pairBuffer.data[k];\r\n            pair.indexA = newIndices(pair.indexA);\r\n            pair.indexB = newIndices(pair.indexB);\r\n        }\r\n        // update triads\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            const triad = this.m_triadBuffer.data[k];\r\n            triad.indexA = newIndices(triad.indexA);\r\n            triad.indexB = newIndices(triad.indexB);\r\n            triad.indexC = newIndices(triad.indexC);\r\n        }\r\n        // update groups\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            group.m_firstIndex = newIndices(group.m_firstIndex);\r\n            group.m_lastIndex = newIndices(group.m_lastIndex - 1) + 1;\r\n        }\r\n    }\r\n    GetCriticalVelocity(step) {\r\n        return this.m_particleDiameter * step.inv_dt;\r\n    }\r\n    GetCriticalVelocitySquared(step) {\r\n        const velocity = this.GetCriticalVelocity(step);\r\n        return velocity * velocity;\r\n    }\r\n    GetCriticalPressure(step) {\r\n        return this.m_def.density * this.GetCriticalVelocitySquared(step);\r\n    }\r\n    GetParticleStride() {\r\n        return b2_particleStride * this.m_particleDiameter;\r\n    }\r\n    GetParticleMass() {\r\n        const stride = this.GetParticleStride();\r\n        return this.m_def.density * stride * stride;\r\n    }\r\n    GetParticleInvMass() {\r\n        ///return 1.777777 * this.m_inverseDensity * this.m_inverseDiameter * this.m_inverseDiameter;\r\n        // mass = density * stride^2, so we take the inverse of this.\r\n        const inverseStride = this.m_inverseDiameter * (1.0 / b2_particleStride);\r\n        return this.m_inverseDensity * inverseStride * inverseStride;\r\n    }\r\n    /**\r\n     * Get the world's contact filter if any particles with the\r\n     * b2_contactFilterParticle flag are present in the system.\r\n     */\r\n    GetFixtureContactFilter() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_fixtureContactFilterParticle) ?\r\n            this.m_world.m_contactManager.m_contactFilter : null;\r\n    }\r\n    /**\r\n     * Get the world's contact filter if any particles with the\r\n     * b2_particleContactFilterParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetParticleContactFilter() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_particleContactFilterParticle) ?\r\n            this.m_world.m_contactManager.m_contactFilter : null;\r\n    }\r\n    /**\r\n     * Get the world's contact listener if any particles with the\r\n     * b2_fixtureContactListenerParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetFixtureContactListener() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_fixtureContactListenerParticle) ?\r\n            this.m_world.m_contactManager.m_contactListener : null;\r\n    }\r\n    /**\r\n     * Get the world's contact listener if any particles with the\r\n     * b2_particleContactListenerParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetParticleContactListener() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_particleContactListenerParticle) ?\r\n            this.m_world.m_contactManager.m_contactListener : null;\r\n    }\r\n    SetUserOverridableBuffer(buffer, newData, newCapacity) {\r\n        // DEBUG: b2Assert(((newData !== null) && (newCapacity > 0)) || ((newData === null) && (newCapacity === 0)));\r\n        ///if (!buffer.userSuppliedCapacity)\r\n        ///{\r\n        ///this.m_world.m_blockAllocator.Free(buffer.data, sizeof(T) * m_internalAllocatedCapacity);\r\n        ///}\r\n        buffer.data = newData;\r\n        buffer.userSuppliedCapacity = newCapacity;\r\n    }\r\n    SetGroupFlags(group, newFlags) {\r\n        const oldFlags = group.m_groupFlags;\r\n        if ((oldFlags ^ newFlags) & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n            // If the b2_solidParticleGroup flag changed schedule depth update.\r\n            newFlags |= b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth;\r\n        }\r\n        if (oldFlags & ~newFlags) {\r\n            // If any flags might be removed\r\n            this.m_needsUpdateAllGroupFlags = true;\r\n        }\r\n        if (~this.m_allGroupFlags & newFlags) {\r\n            // If any flags were added\r\n            if (newFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\r\n            }\r\n            this.m_allGroupFlags |= newFlags;\r\n        }\r\n        group.m_groupFlags = newFlags;\r\n    }\r\n    static BodyContactCompare(lhs, rhs) {\r\n        if (lhs.index === rhs.index) {\r\n            // Subsort by weight, decreasing.\r\n            return lhs.weight > rhs.weight;\r\n        }\r\n        return lhs.index < rhs.index;\r\n    }\r\n    RemoveSpuriousBodyContacts() {\r\n        // At this point we have a list of contact candidates based on AABB\r\n        // overlap.The AABB query that  generated this returns all collidable\r\n        // fixtures overlapping particle bounding boxes.  This breaks down around\r\n        // vertices where two shapes intersect, such as a \"ground\" surface made\r\n        // of multiple b2PolygonShapes; it potentially applies a lot of spurious\r\n        // impulses from normals that should not actually contribute.  See the\r\n        // Ramp example in Testbed.\r\n        //\r\n        // To correct for this, we apply this algorithm:\r\n        //   * sort contacts by particle and subsort by weight (nearest to farthest)\r\n        //   * for each contact per particle:\r\n        //      - project a point at the contact distance along the inverse of the\r\n        //        contact normal\r\n        //      - if this intersects the fixture that generated the contact, apply\r\n        //         it, otherwise discard as impossible\r\n        //      - repeat for up to n nearest contacts, currently we get good results\r\n        //        from n=3.\r\n        ///std::sort(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleSystem::BodyContactCompare);\r\n        std_sort(this.m_bodyContactBuffer.data, 0, this.m_bodyContactBuffer.count, b2ParticleSystem.BodyContactCompare);\r\n        ///int32 discarded = 0;\r\n        ///std::remove_if(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleBodyContactRemovePredicate(this, &discarded));\r\n        ///\r\n        ///m_bodyContactBuffer.SetCount(m_bodyContactBuffer.GetCount() - discarded);\r\n        const s_n = b2ParticleSystem.RemoveSpuriousBodyContacts_s_n;\r\n        const s_pos = b2ParticleSystem.RemoveSpuriousBodyContacts_s_pos;\r\n        const s_normal = b2ParticleSystem.RemoveSpuriousBodyContacts_s_normal;\r\n        // Max number of contacts processed per particle, from nearest to farthest.\r\n        // This must be at least 2 for correctness with concave shapes; 3 was\r\n        // experimentally arrived at as looking reasonable.\r\n        const k_maxContactsPerPoint = 3;\r\n        const system = this;\r\n        // Index of last particle processed.\r\n        let lastIndex = -1;\r\n        // Number of contacts processed for the current particle.\r\n        let currentContacts = 0;\r\n        // Output the number of discarded contacts.\r\n        // let discarded = 0;\r\n        const b2ParticleBodyContactRemovePredicate = (contact) => {\r\n            // This implements the selection criteria described in\r\n            // RemoveSpuriousBodyContacts().\r\n            // This functor is iterating through a list of Body contacts per\r\n            // Particle, ordered from near to far.  For up to the maximum number of\r\n            // contacts we allow per point per step, we verify that the contact\r\n            // normal of the Body that genenerated the contact makes physical sense\r\n            // by projecting a point back along that normal and seeing if it\r\n            // intersects the fixture generating the contact.\r\n            if (contact.index !== lastIndex) {\r\n                currentContacts = 0;\r\n                lastIndex = contact.index;\r\n            }\r\n            if (currentContacts++ > k_maxContactsPerPoint) {\r\n                // ++discarded;\r\n                return true;\r\n            }\r\n            // Project along inverse normal (as returned in the contact) to get the\r\n            // point to check.\r\n            ///b2Vec2 n = contact.normal;\r\n            const n = s_n.Copy(contact.normal);\r\n            // weight is 1-(inv(diameter) * distance)\r\n            ///n *= system.m_particleDiameter * (1 - contact.weight);\r\n            n.SelfMul(system.m_particleDiameter * (1 - contact.weight));\r\n            ///b2Vec2 pos = system.m_positionBuffer.data[contact.index] + n;\r\n            if (!system.m_positionBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const pos = b2Vec2.AddVV(system.m_positionBuffer.data[contact.index], n, s_pos);\r\n            // pos is now a point projected back along the contact normal to the\r\n            // contact distance. If the surface makes sense for a contact, pos will\r\n            // now lie on or in the fixture generating\r\n            if (!contact.fixture.TestPoint(pos)) {\r\n                const childCount = contact.fixture.GetShape().GetChildCount();\r\n                for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n                    const normal = s_normal;\r\n                    const distance = contact.fixture.ComputeDistance(pos, normal, childIndex);\r\n                    if (distance < b2_linearSlop) {\r\n                        return false;\r\n                    }\r\n                }\r\n                // ++discarded;\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        this.m_bodyContactBuffer.count = std_remove_if(this.m_bodyContactBuffer.data, b2ParticleBodyContactRemovePredicate, this.m_bodyContactBuffer.count);\r\n    }\r\n    DetectStuckParticle(particle) {\r\n        // Detect stuck particles\r\n        //\r\n        // The basic algorithm is to allow the user to specify an optional\r\n        // threshold where we detect whenever a particle is contacting\r\n        // more than one fixture for more than threshold consecutive\r\n        // steps. This is considered to be \"stuck\", and these are put\r\n        // in a list the user can query per step, if enabled, to deal with\r\n        // such particles.\r\n        if (this.m_stuckThreshold <= 0) {\r\n            return;\r\n        }\r\n        if (!this.m_bodyContactCountBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_consecutiveContactStepsBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        if (!this.m_lastBodyContactStepBuffer.data) {\r\n            throw new Error();\r\n        }\r\n        // Get the state variables for this particle.\r\n        ///int32 * const consecutiveCount = &m_consecutiveContactStepsBuffer.data[particle];\r\n        ///int32 * const lastStep = &m_lastBodyContactStepBuffer.data[particle];\r\n        ///int32 * const bodyCount = &m_bodyContactCountBuffer.data[particle];\r\n        // This is only called when there is a body contact for this particle.\r\n        ///++(*bodyCount);\r\n        ++this.m_bodyContactCountBuffer.data[particle];\r\n        // We want to only trigger detection once per step, the first time we\r\n        // contact more than one fixture in a step for a given particle.\r\n        ///if (*bodyCount === 2)\r\n        if (this.m_bodyContactCountBuffer.data[particle] === 2) {\r\n            ///++(*consecutiveCount);\r\n            ++this.m_consecutiveContactStepsBuffer.data[particle];\r\n            ///if (*consecutiveCount > m_stuckThreshold)\r\n            if (this.m_consecutiveContactStepsBuffer.data[particle] > this.m_stuckThreshold) {\r\n                ///int32& newStuckParticle = m_stuckParticleBuffer.Append();\r\n                ///newStuckParticle = particle;\r\n                this.m_stuckParticleBuffer.data[this.m_stuckParticleBuffer.Append()] = particle;\r\n            }\r\n        }\r\n        ///*lastStep = m_timestamp;\r\n        this.m_lastBodyContactStepBuffer.data[particle] = this.m_timestamp;\r\n    }\r\n    /**\r\n     * Determine whether a particle index is valid.\r\n     */\r\n    ValidateParticleIndex(index) {\r\n        return index >= 0 && index < this.GetParticleCount() &&\r\n            index !== b2_invalidParticleIndex;\r\n    }\r\n    /**\r\n     * Get the time elapsed in\r\n     * b2ParticleSystemDef::lifetimeGranularity.\r\n     */\r\n    GetQuantizedTimeElapsed() {\r\n        ///return (int32)(m_timeElapsed >> 32);\r\n        return Math.floor(this.m_timeElapsed / 0x100000000);\r\n    }\r\n    /**\r\n     * Convert a lifetime in seconds to an expiration time.\r\n     */\r\n    LifetimeToExpirationTime(lifetime) {\r\n        ///return m_timeElapsed + (int64)((lifetime / m_def.lifetimeGranularity) * (float32)(1LL << 32));\r\n        return this.m_timeElapsed + Math.floor(((lifetime / this.m_def.lifetimeGranularity) * 0x100000000));\r\n    }\r\n    ForceCanBeApplied(flags) {\r\n        return !(flags & b2ParticleFlag.b2_wallParticle);\r\n    }\r\n    PrepareForceBuffer() {\r\n        if (!this.m_hasForce) {\r\n            ///memset(m_forceBuffer, 0, sizeof(*m_forceBuffer) * m_count);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                this.m_forceBuffer[i].SetZero();\r\n            }\r\n            this.m_hasForce = true;\r\n        }\r\n    }\r\n    IsRigidGroup(group) {\r\n        return (group !== null) && ((group.m_groupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0);\r\n    }\r\n    GetLinearVelocity(group, particleIndex, point, out) {\r\n        if (group && this.IsRigidGroup(group)) {\r\n            return group.GetLinearVelocityFromWorldPoint(point, out);\r\n        }\r\n        else {\r\n            if (!this.m_velocityBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            ///return m_velocityBuffer.data[particleIndex];\r\n            return out.Copy(this.m_velocityBuffer.data[particleIndex]);\r\n        }\r\n    }\r\n    InitDampingParameter(invMass, invInertia, tangentDistance, mass, inertia, center, point, normal) {\r\n        ///*invMass = mass > 0 ? 1 / mass : 0;\r\n        invMass[0] = mass > 0 ? 1 / mass : 0;\r\n        ///*invInertia = inertia > 0 ? 1 / inertia : 0;\r\n        invInertia[0] = inertia > 0 ? 1 / inertia : 0;\r\n        ///*tangentDistance = b2Cross(point - center, normal);\r\n        tangentDistance[0] = b2Vec2.CrossVV(b2Vec2.SubVV(point, center, b2Vec2.s_t0), normal);\r\n    }\r\n    InitDampingParameterWithRigidGroupOrParticle(invMass, invInertia, tangentDistance, isRigidGroup, group, particleIndex, point, normal) {\r\n        if (group && isRigidGroup) {\r\n            this.InitDampingParameter(invMass, invInertia, tangentDistance, group.GetMass(), group.GetInertia(), group.GetCenter(), point, normal);\r\n        }\r\n        else {\r\n            if (!this.m_flagsBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const flags = this.m_flagsBuffer.data[particleIndex];\r\n            this.InitDampingParameter(invMass, invInertia, tangentDistance, flags & b2ParticleFlag.b2_wallParticle ? 0 : this.GetParticleMass(), 0, point, point, normal);\r\n        }\r\n    }\r\n    ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, normalVelocity) {\r\n        const invMass = invMassA + invInertiaA * tangentDistanceA * tangentDistanceA +\r\n            invMassB + invInertiaB * tangentDistanceB * tangentDistanceB;\r\n        return invMass > 0 ? normalVelocity / invMass : 0;\r\n    }\r\n    ApplyDamping(invMass, invInertia, tangentDistance, isRigidGroup, group, particleIndex, impulse, normal) {\r\n        if (group && isRigidGroup) {\r\n            ///group.m_linearVelocity += impulse * invMass * normal;\r\n            group.m_linearVelocity.SelfMulAdd(impulse * invMass, normal);\r\n            ///group.m_angularVelocity += impulse * tangentDistance * invInertia;\r\n            group.m_angularVelocity += impulse * tangentDistance * invInertia;\r\n        }\r\n        else {\r\n            if (!this.m_velocityBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            ///m_velocityBuffer.data[particleIndex] += impulse * invMass * normal;\r\n            this.m_velocityBuffer.data[particleIndex].SelfMulAdd(impulse * invMass, normal);\r\n        }\r\n    }\r\n}\r\nb2ParticleSystem.xTruncBits = 12;\r\nb2ParticleSystem.yTruncBits = 12;\r\nb2ParticleSystem.tagBits = 8 * 4; // 8u * sizeof(uint32);\r\nb2ParticleSystem.yOffset = 1 << (b2ParticleSystem.yTruncBits - 1);\r\nb2ParticleSystem.yShift = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits;\r\nb2ParticleSystem.xShift = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits - b2ParticleSystem.xTruncBits;\r\nb2ParticleSystem.xScale = 1 << b2ParticleSystem.xShift;\r\nb2ParticleSystem.xOffset = b2ParticleSystem.xScale * (1 << (b2ParticleSystem.xTruncBits - 1));\r\nb2ParticleSystem.yMask = ((1 << b2ParticleSystem.yTruncBits) - 1) << b2ParticleSystem.yShift;\r\nb2ParticleSystem.xMask = ~b2ParticleSystem.yMask;\r\nb2ParticleSystem.DestroyParticlesInShape_s_aabb = new b2AABB();\r\nb2ParticleSystem.CreateParticleGroup_s_transform = new b2Transform();\r\nb2ParticleSystem.ComputeCollisionEnergy_s_v = new b2Vec2();\r\nb2ParticleSystem.QueryShapeAABB_s_aabb = new b2AABB();\r\nb2ParticleSystem.QueryPointAABB_s_aabb = new b2AABB();\r\nb2ParticleSystem.RayCast_s_aabb = new b2AABB();\r\nb2ParticleSystem.RayCast_s_p = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_v = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_n = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_point = new b2Vec2();\r\n/**\r\n * All particle types that require creating pairs\r\n */\r\nb2ParticleSystem.k_pairFlags = b2ParticleFlag.b2_springParticle;\r\n/**\r\n * All particle types that require creating triads\r\n */\r\nb2ParticleSystem.k_triadFlags = b2ParticleFlag.b2_elasticParticle;\r\n/**\r\n * All particle types that do not produce dynamic pressure\r\n */\r\nb2ParticleSystem.k_noPressureFlags = b2ParticleFlag.b2_powderParticle | b2ParticleFlag.b2_tensileParticle;\r\n/**\r\n * All particle types that apply extra damping force with bodies\r\n */\r\nb2ParticleSystem.k_extraDampingFlags = b2ParticleFlag.b2_staticPressureParticle;\r\nb2ParticleSystem.k_barrierWallFlags = b2ParticleFlag.b2_barrierParticle | b2ParticleFlag.b2_wallParticle;\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge = new b2EdgeShape();\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d = new b2Vec2();\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p = new b2Vec2();\r\nb2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb = new b2AABB();\r\nb2ParticleSystem.CreateParticlesFillShapeForGroup_s_p = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dab = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dbc = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dca = new b2Vec2();\r\nb2ParticleSystem.AddContact_s_d = new b2Vec2();\r\nb2ParticleSystem.UpdateBodyContacts_s_aabb = new b2AABB();\r\nb2ParticleSystem.Solve_s_subStep = new b2TimeStep();\r\nb2ParticleSystem.SolveCollision_s_aabb = new b2AABB();\r\nb2ParticleSystem.SolveGravity_s_gravity = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_aabb = new b2AABB();\r\nb2ParticleSystem.SolveBarrier_s_va = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vb = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_pba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vc = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_pca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_qba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_qca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_dv = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_f = new b2Vec2();\r\nb2ParticleSystem.SolvePressure_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveDamping_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_t0 = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_t1 = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_p = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveExtraDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveExtraDamping_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRigid_s_position = new b2Vec2();\r\nb2ParticleSystem.SolveRigid_s_rotation = new b2Rot();\r\nb2ParticleSystem.SolveRigid_s_transform = new b2Transform();\r\nb2ParticleSystem.SolveRigid_s_velocityTransform = new b2Transform();\r\nb2ParticleSystem.SolveElastic_s_pa = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_pb = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_pc = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_r = new b2Rot();\r\nb2ParticleSystem.SolveElastic_s_t0 = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_pa = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_pb = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_d = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_weightedNormal = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_s = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveViscous_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveViscous_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRepulsive_s_f = new b2Vec2();\r\nb2ParticleSystem.SolvePowder_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveSolid_s_f = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_n = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_pos = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_normal = new b2Vec2();\r\n(function (b2ParticleSystem) {\r\n    class UserOverridableBuffer {\r\n        constructor() {\r\n            this.data = null;\r\n            this.userSuppliedCapacity = 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.UserOverridableBuffer = UserOverridableBuffer;\r\n    class Proxy {\r\n        constructor() {\r\n            this.index = b2_invalidParticleIndex;\r\n            this.tag = 0;\r\n        }\r\n        static CompareProxyProxy(a, b) {\r\n            return a.tag < b.tag;\r\n        }\r\n        static CompareTagProxy(a, b) {\r\n            return a < b.tag;\r\n        }\r\n        static CompareProxyTag(a, b) {\r\n            return a.tag < b;\r\n        }\r\n    }\r\n    b2ParticleSystem.Proxy = Proxy;\r\n    class InsideBoundsEnumerator {\r\n        /**\r\n         * InsideBoundsEnumerator enumerates all particles inside the\r\n         * given bounds.\r\n         *\r\n         * Construct an enumerator with bounds of tags and a range of\r\n         * proxies.\r\n         */\r\n        constructor(system, lower, upper, first, last) {\r\n            this.m_system = system;\r\n            this.m_xLower = (lower & b2ParticleSystem.xMask) >>> 0;\r\n            this.m_xUpper = (upper & b2ParticleSystem.xMask) >>> 0;\r\n            this.m_yLower = (lower & b2ParticleSystem.yMask) >>> 0;\r\n            this.m_yUpper = (upper & b2ParticleSystem.yMask) >>> 0;\r\n            this.m_first = first;\r\n            this.m_last = last;\r\n            // DEBUG: b2Assert(this.m_first <= this.m_last);\r\n        }\r\n        /**\r\n         * Get index of the next particle. Returns\r\n         * b2_invalidParticleIndex if there are no more particles.\r\n         */\r\n        GetNext() {\r\n            while (this.m_first < this.m_last) {\r\n                const xTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.xMask) >>> 0;\r\n                // #if B2_ASSERT_ENABLED\r\n                // DEBUG: const yTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.yMask) >>> 0;\r\n                // DEBUG: b2Assert(yTag >= this.m_yLower);\r\n                // DEBUG: b2Assert(yTag <= this.m_yUpper);\r\n                // #endif\r\n                if (xTag >= this.m_xLower && xTag <= this.m_xUpper) {\r\n                    return (this.m_system.m_proxyBuffer.data[this.m_first++]).index;\r\n                }\r\n                this.m_first++;\r\n            }\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.InsideBoundsEnumerator = InsideBoundsEnumerator;\r\n    class ParticleListNode {\r\n        constructor() {\r\n            /**\r\n             * The next node in the list.\r\n             */\r\n            this.next = null;\r\n            /**\r\n             * Number of entries in the list. Valid only for the node at the\r\n             * head of the list.\r\n             */\r\n            this.count = 0;\r\n            /**\r\n             * Particle index.\r\n             */\r\n            this.index = 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.ParticleListNode = ParticleListNode;\r\n    /**\r\n     * @constructor\r\n     */\r\n    class FixedSetAllocator {\r\n        Allocate(itemSize, count) {\r\n            // TODO\r\n            return count;\r\n        }\r\n        Clear() {\r\n            // TODO\r\n        }\r\n        GetCount() {\r\n            // TODO\r\n            return 0;\r\n        }\r\n        Invalidate(itemIndex) {\r\n            // TODO\r\n        }\r\n        GetValidBuffer() {\r\n            // TODO\r\n            return [];\r\n        }\r\n        GetBuffer() {\r\n            // TODO\r\n            return [];\r\n        }\r\n        SetCount(count) {\r\n            // TODO\r\n        }\r\n    }\r\n    b2ParticleSystem.FixedSetAllocator = FixedSetAllocator;\r\n    class FixtureParticle {\r\n        constructor(fixture, particle) {\r\n            this.second = b2_invalidParticleIndex;\r\n            this.first = fixture;\r\n            this.second = particle;\r\n        }\r\n    }\r\n    b2ParticleSystem.FixtureParticle = FixtureParticle;\r\n    class FixtureParticleSet extends b2ParticleSystem.FixedSetAllocator {\r\n        Initialize(bodyContactBuffer, flagsBuffer) {\r\n            // TODO\r\n        }\r\n        Find(pair) {\r\n            // TODO\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.FixtureParticleSet = FixtureParticleSet;\r\n    class ParticlePair {\r\n        constructor(particleA, particleB) {\r\n            this.first = b2_invalidParticleIndex;\r\n            this.second = b2_invalidParticleIndex;\r\n            this.first = particleA;\r\n            this.second = particleB;\r\n        }\r\n    }\r\n    b2ParticleSystem.ParticlePair = ParticlePair;\r\n    class b2ParticlePairSet extends b2ParticleSystem.FixedSetAllocator {\r\n        Initialize(contactBuffer, flagsBuffer) {\r\n            // TODO\r\n        }\r\n        Find(pair) {\r\n            // TODO\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.b2ParticlePairSet = b2ParticlePairSet;\r\n    class ConnectionFilter {\r\n        /**\r\n         * Is the particle necessary for connection?\r\n         * A pair or a triad should contain at least one 'necessary'\r\n         * particle.\r\n         */\r\n        IsNecessary(index) {\r\n            return true;\r\n        }\r\n        /**\r\n         * An additional condition for creating a pair.\r\n         */\r\n        ShouldCreatePair(a, b) {\r\n            return true;\r\n        }\r\n        /**\r\n         * An additional condition for creating a triad.\r\n         */\r\n        ShouldCreateTriad(a, b, c) {\r\n            return true;\r\n        }\r\n    }\r\n    b2ParticleSystem.ConnectionFilter = ConnectionFilter;\r\n    class DestroyParticlesInShapeCallback extends b2QueryCallback {\r\n        constructor(system, shape, xf, callDestructionListener) {\r\n            super();\r\n            this.m_callDestructionListener = false;\r\n            this.m_destroyed = 0;\r\n            this.m_system = system;\r\n            this.m_shape = shape;\r\n            this.m_xf = xf;\r\n            this.m_callDestructionListener = callDestructionListener;\r\n            this.m_destroyed = 0;\r\n        }\r\n        ReportFixture(fixture) {\r\n            return false;\r\n        }\r\n        ReportParticle(particleSystem, index) {\r\n            if (particleSystem !== this.m_system) {\r\n                return false;\r\n            }\r\n            // DEBUG: b2Assert(index >= 0 && index < this.m_system.m_count);\r\n            if (!this.m_system.m_positionBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (this.m_shape.TestPoint(this.m_xf, this.m_system.m_positionBuffer.data[index])) {\r\n                this.m_system.DestroyParticle(index, this.m_callDestructionListener);\r\n                this.m_destroyed++;\r\n            }\r\n            return true;\r\n        }\r\n        Destroyed() {\r\n            return this.m_destroyed;\r\n        }\r\n    }\r\n    b2ParticleSystem.DestroyParticlesInShapeCallback = DestroyParticlesInShapeCallback;\r\n    class JoinParticleGroupsFilter extends b2ParticleSystem.ConnectionFilter {\r\n        constructor(threshold) {\r\n            super();\r\n            this.m_threshold = 0;\r\n            this.m_threshold = threshold;\r\n        }\r\n        /**\r\n         * An additional condition for creating a pair.\r\n         */\r\n        ShouldCreatePair(a, b) {\r\n            return (a < this.m_threshold && this.m_threshold <= b) ||\r\n                (b < this.m_threshold && this.m_threshold <= a);\r\n        }\r\n        /**\r\n         * An additional condition for creating a triad.\r\n         */\r\n        ShouldCreateTriad(a, b, c) {\r\n            return (a < this.m_threshold || b < this.m_threshold || c < this.m_threshold) &&\r\n                (this.m_threshold <= a || this.m_threshold <= b || this.m_threshold <= c);\r\n        }\r\n    }\r\n    b2ParticleSystem.JoinParticleGroupsFilter = JoinParticleGroupsFilter;\r\n    class CompositeShape extends b2Shape {\r\n        constructor(shapes, shapeCount = shapes.length) {\r\n            super(b2ShapeType.e_unknown, 0);\r\n            this.m_shapeCount = 0;\r\n            this.m_shapes = shapes;\r\n            this.m_shapeCount = shapeCount;\r\n        }\r\n        Clone() {\r\n            // DEBUG: b2Assert(false);\r\n            throw new Error();\r\n        }\r\n        GetChildCount() {\r\n            return 1;\r\n        }\r\n        /**\r\n         * @see b2Shape::TestPoint\r\n         */\r\n        TestPoint(xf, p) {\r\n            for (let i = 0; i < this.m_shapeCount; i++) {\r\n                if (this.m_shapes[i].TestPoint(xf, p)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeDistance\r\n         */\r\n        ComputeDistance(xf, p, normal, childIndex) {\r\n            // DEBUG: b2Assert(false);\r\n            return 0;\r\n        }\r\n        /**\r\n         * Implement b2Shape.\r\n         */\r\n        RayCast(output, input, xf, childIndex) {\r\n            // DEBUG: b2Assert(false);\r\n            return false;\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeAABB\r\n         */\r\n        ComputeAABB(aabb, xf, childIndex) {\r\n            const s_subaabb = new b2AABB();\r\n            aabb.lowerBound.x = +b2_maxFloat;\r\n            aabb.lowerBound.y = +b2_maxFloat;\r\n            aabb.upperBound.x = -b2_maxFloat;\r\n            aabb.upperBound.y = -b2_maxFloat;\r\n            // DEBUG: b2Assert(childIndex === 0);\r\n            for (let i = 0; i < this.m_shapeCount; i++) {\r\n                const childCount = this.m_shapes[i].GetChildCount();\r\n                for (let j = 0; j < childCount; j++) {\r\n                    const subaabb = s_subaabb;\r\n                    this.m_shapes[i].ComputeAABB(subaabb, xf, j);\r\n                    aabb.Combine1(subaabb);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeMass\r\n         */\r\n        ComputeMass(massData, density) {\r\n            // DEBUG: b2Assert(false);\r\n        }\r\n        SetupDistanceProxy(proxy, index) {\r\n            // DEBUG: b2Assert(false);\r\n        }\r\n        ComputeSubmergedArea(normal, offset, xf, c) {\r\n            // DEBUG: b2Assert(false);\r\n            return 0;\r\n        }\r\n        Dump(log) {\r\n            // DEBUG: b2Assert(false);\r\n        }\r\n    }\r\n    b2ParticleSystem.CompositeShape = CompositeShape;\r\n    class ReactiveFilter extends b2ParticleSystem.ConnectionFilter {\r\n        constructor(flagsBuffer) {\r\n            super();\r\n            this.m_flagsBuffer = flagsBuffer;\r\n        }\r\n        IsNecessary(index) {\r\n            if (!this.m_flagsBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            return (this.m_flagsBuffer.data[index] & b2ParticleFlag.b2_reactiveParticle) !== 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.ReactiveFilter = ReactiveFilter;\r\n    class UpdateBodyContactsCallback extends b2FixtureParticleQueryCallback {\r\n        constructor(system, contactFilter) {\r\n            super(system); // base class constructor\r\n            this.m_contactFilter = contactFilter;\r\n        }\r\n        ShouldCollideFixtureParticle(fixture, particleSystem, particleIndex) {\r\n            // Call the contact filter if it's set, to determine whether to\r\n            // filter this contact.  Returns true if contact calculations should\r\n            // be performed, false otherwise.\r\n            if (this.m_contactFilter) {\r\n                const flags = this.m_system.GetFlagsBuffer();\r\n                if (flags[particleIndex] & b2ParticleFlag.b2_fixtureContactFilterParticle) {\r\n                    return this.m_contactFilter.ShouldCollideFixtureParticle(fixture, this.m_system, particleIndex);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        ReportFixtureAndParticle(fixture, childIndex, a) {\r\n            const s_n = b2ParticleSystem.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n;\r\n            const s_rp = b2ParticleSystem.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp;\r\n            if (!this.m_system.m_flagsBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (!this.m_system.m_positionBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const ap = this.m_system.m_positionBuffer.data[a];\r\n            const n = s_n;\r\n            const d = fixture.ComputeDistance(ap, n, childIndex);\r\n            if (d < this.m_system.m_particleDiameter && this.ShouldCollideFixtureParticle(fixture, this.m_system, a)) {\r\n                const b = fixture.GetBody();\r\n                const bp = b.GetWorldCenter();\r\n                const bm = b.GetMass();\r\n                const bI = b.GetInertia() - bm * b.GetLocalCenter().LengthSquared();\r\n                const invBm = bm > 0 ? 1 / bm : 0;\r\n                const invBI = bI > 0 ? 1 / bI : 0;\r\n                const invAm = this.m_system.m_flagsBuffer.data[a] &\r\n                    b2ParticleFlag.b2_wallParticle ? 0 : this.m_system.GetParticleInvMass();\r\n                ///b2Vec2 rp = ap - bp;\r\n                const rp = b2Vec2.SubVV(ap, bp, s_rp);\r\n                const rpn = b2Vec2.CrossVV(rp, n);\r\n                const invM = invAm + invBm + invBI * rpn * rpn;\r\n                ///b2ParticleBodyContact& contact = m_system.m_bodyContactBuffer.Append();\r\n                const contact = this.m_system.m_bodyContactBuffer.data[this.m_system.m_bodyContactBuffer.Append()];\r\n                contact.index = a;\r\n                contact.body = b;\r\n                contact.fixture = fixture;\r\n                contact.weight = 1 - d * this.m_system.m_inverseDiameter;\r\n                ///contact.normal = -n;\r\n                contact.normal.Copy(n.SelfNeg());\r\n                contact.mass = invM > 0 ? 1 / invM : 0;\r\n                this.m_system.DetectStuckParticle(a);\r\n            }\r\n        }\r\n    }\r\n    UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n = new b2Vec2();\r\n    UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp = new b2Vec2();\r\n    b2ParticleSystem.UpdateBodyContactsCallback = UpdateBodyContactsCallback;\r\n    class SolveCollisionCallback extends b2FixtureParticleQueryCallback {\r\n        constructor(system, step) {\r\n            super(system); // base class constructor\r\n            this.m_step = step;\r\n        }\r\n        ReportFixtureAndParticle(fixture, childIndex, a) {\r\n            const s_p1 = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_p1;\r\n            const s_output = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_output;\r\n            const s_input = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_input;\r\n            const s_p = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_p;\r\n            const s_v = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_v;\r\n            const s_f = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_f;\r\n            const body = fixture.GetBody();\r\n            if (!this.m_system.m_positionBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            if (!this.m_system.m_velocityBuffer.data) {\r\n                throw new Error();\r\n            }\r\n            const ap = this.m_system.m_positionBuffer.data[a];\r\n            const av = this.m_system.m_velocityBuffer.data[a];\r\n            const output = s_output;\r\n            const input = s_input;\r\n            if (this.m_system.m_iterationIndex === 0) {\r\n                // Put 'ap' in the local space of the previous frame\r\n                ///b2Vec2 p1 = b2MulT(body.m_xf0, ap);\r\n                const p1 = b2Transform.MulTXV(body.m_xf0, ap, s_p1);\r\n                if (fixture.GetShape().GetType() === b2ShapeType.e_circleShape) {\r\n                    // Make relative to the center of the circle\r\n                    ///p1 -= body.GetLocalCenter();\r\n                    p1.SelfSub(body.GetLocalCenter());\r\n                    // Re-apply rotation about the center of the circle\r\n                    ///p1 = b2Mul(body.m_xf0.q, p1);\r\n                    b2Rot.MulRV(body.m_xf0.q, p1, p1);\r\n                    // Subtract rotation of the current frame\r\n                    ///p1 = b2MulT(body.m_xf.q, p1);\r\n                    b2Rot.MulTRV(body.m_xf.q, p1, p1);\r\n                    // Return to local space\r\n                    ///p1 += body.GetLocalCenter();\r\n                    p1.SelfAdd(body.GetLocalCenter());\r\n                }\r\n                // Return to global space and apply rotation of current frame\r\n                ///input.p1 = b2Mul(body.m_xf, p1);\r\n                b2Transform.MulXV(body.m_xf, p1, input.p1);\r\n            }\r\n            else {\r\n                ///input.p1 = ap;\r\n                input.p1.Copy(ap);\r\n            }\r\n            ///input.p2 = ap + m_step.dt * av;\r\n            b2Vec2.AddVMulSV(ap, this.m_step.dt, av, input.p2);\r\n            input.maxFraction = 1;\r\n            if (fixture.RayCast(output, input, childIndex)) {\r\n                const n = output.normal;\r\n                ///b2Vec2 p = (1 - output.fraction) * input.p1 + output.fraction * input.p2 + b2_linearSlop * n;\r\n                const p = s_p;\r\n                p.x = (1 - output.fraction) * input.p1.x + output.fraction * input.p2.x + b2_linearSlop * n.x;\r\n                p.y = (1 - output.fraction) * input.p1.y + output.fraction * input.p2.y + b2_linearSlop * n.y;\r\n                ///b2Vec2 v = m_step.inv_dt * (p - ap);\r\n                const v = s_v;\r\n                v.x = this.m_step.inv_dt * (p.x - ap.x);\r\n                v.y = this.m_step.inv_dt * (p.y - ap.y);\r\n                ///m_system.m_velocityBuffer.data[a] = v;\r\n                this.m_system.m_velocityBuffer.data[a].Copy(v);\r\n                ///b2Vec2 f = m_step.inv_dt * m_system.GetParticleMass() * (av - v);\r\n                const f = s_f;\r\n                f.x = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.x - v.x);\r\n                f.y = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.y - v.y);\r\n                this.m_system.ParticleApplyForce(a, f);\r\n            }\r\n        }\r\n        ReportParticle(system, index) {\r\n            return false;\r\n        }\r\n    }\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_p1 = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_output = new b2RayCastOutput();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_input = new b2RayCastInput();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_p = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_v = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_f = new b2Vec2();\r\n    b2ParticleSystem.SolveCollisionCallback = SolveCollisionCallback;\r\n})(b2ParticleSystem || (b2ParticleSystem = {}));\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_epsilon, b2_maxSubSteps, b2_maxTOIContacts } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Vec2, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2Color, b2DrawFlags } from \"../Common/b2Draw\";\r\nimport { b2AABB, b2RayCastInput, b2RayCastOutput, b2TestOverlapShape } from \"../Collision/b2Collision\";\r\nimport { b2TimeOfImpact, b2TOIInput, b2TOIOutput, b2TOIOutputState } from \"../Collision/b2TimeOfImpact\";\r\nimport { b2ShapeType } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2JointType } from \"./Joints/b2Joint\";\r\nimport { b2AreaJoint } from \"./Joints/b2AreaJoint\";\r\nimport { b2DistanceJoint } from \"./Joints/b2DistanceJoint\";\r\nimport { b2FrictionJoint } from \"./Joints/b2FrictionJoint\";\r\nimport { b2GearJoint } from \"./Joints/b2GearJoint\";\r\nimport { b2MotorJoint } from \"./Joints/b2MotorJoint\";\r\nimport { b2MouseJoint } from \"./Joints/b2MouseJoint\";\r\nimport { b2PrismaticJoint } from \"./Joints/b2PrismaticJoint\";\r\nimport { b2PulleyJoint } from \"./Joints/b2PulleyJoint\";\r\nimport { b2RevoluteJoint } from \"./Joints/b2RevoluteJoint\";\r\nimport { b2RopeJoint } from \"./Joints/b2RopeJoint\";\r\nimport { b2WeldJoint } from \"./Joints/b2WeldJoint\";\r\nimport { b2WheelJoint } from \"./Joints/b2WheelJoint\";\r\nimport { b2Body, b2BodyType } from \"./b2Body\";\r\nimport { b2ContactManager } from \"./b2ContactManager\";\r\nimport { b2Island } from \"./b2Island\";\r\nimport { b2Profile, b2TimeStep } from \"./b2TimeStep\";\r\nimport { b2QueryCallback } from \"./b2WorldCallbacks\";\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_maxFloat } from \"../Common/b2Settings\";\r\nimport { b2CalculateParticleIterations } from \"../Particle/b2Particle\";\r\nimport { b2ParticleSystem } from \"../Particle/b2ParticleSystem\";\r\n// #endif\r\n/// The world class manages all physics entities, dynamic simulation,\r\n/// and asynchronous queries. The world also contains efficient memory\r\n/// management facilities.\r\nexport class b2World {\r\n    // #endif\r\n    /// Construct a world object.\r\n    /// @param gravity the world gravity vector.\r\n    constructor(gravity) {\r\n        // b2BlockAllocator m_blockAllocator;\r\n        // b2StackAllocator m_stackAllocator;\r\n        this.m_newFixture = false;\r\n        this.m_locked = false;\r\n        this.m_clearForces = true;\r\n        this.m_contactManager = new b2ContactManager();\r\n        this.m_bodyList = null;\r\n        this.m_jointList = null;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_particleSystemList = null;\r\n        // #endif\r\n        this.m_bodyCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_gravity = new b2Vec2();\r\n        this.m_allowSleep = true;\r\n        this.m_destructionListener = null;\r\n        this.m_debugDraw = null;\r\n        // This is used to compute the time step ratio to\r\n        // support a variable time step.\r\n        this.m_inv_dt0 = 0;\r\n        // These are for debugging the solver.\r\n        this.m_warmStarting = true;\r\n        this.m_continuousPhysics = true;\r\n        this.m_subStepping = false;\r\n        this.m_stepComplete = true;\r\n        this.m_profile = new b2Profile();\r\n        this.m_island = new b2Island();\r\n        this.s_stack = [];\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        this.m_gravity.Copy(gravity);\r\n    }\r\n    /// Register a destruction listener. The listener is owned by you and must\r\n    /// remain in scope.\r\n    SetDestructionListener(listener) {\r\n        this.m_destructionListener = listener;\r\n    }\r\n    /// Register a contact filter to provide specific control over collision.\r\n    /// Otherwise the default filter is used (b2_defaultFilter). The listener is\r\n    /// owned by you and must remain in scope.\r\n    SetContactFilter(filter) {\r\n        this.m_contactManager.m_contactFilter = filter;\r\n    }\r\n    /// Register a contact event listener. The listener is owned by you and must\r\n    /// remain in scope.\r\n    SetContactListener(listener) {\r\n        this.m_contactManager.m_contactListener = listener;\r\n    }\r\n    /// Register a routine for debug drawing. The debug draw functions are called\r\n    /// inside with b2World::DrawDebugData method. The debug draw object is owned\r\n    /// by you and must remain in scope.\r\n    SetDebugDraw(debugDraw) {\r\n        this.m_debugDraw = debugDraw;\r\n    }\r\n    /// Create a rigid body given a definition. No reference to the definition\r\n    /// is retained.\r\n    /// @warning This function is locked during callbacks.\r\n    CreateBody(def = {}) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const b = new b2Body(def, this);\r\n        // Add to world doubly linked list.\r\n        b.m_prev = null;\r\n        b.m_next = this.m_bodyList;\r\n        if (this.m_bodyList) {\r\n            this.m_bodyList.m_prev = b;\r\n        }\r\n        this.m_bodyList = b;\r\n        ++this.m_bodyCount;\r\n        return b;\r\n    }\r\n    /// Destroy a rigid body given a definition. No reference to the definition\r\n    /// is retained. This function is locked during callbacks.\r\n    /// @warning This automatically deletes all associated shapes and joints.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyBody(b) {\r\n        // DEBUG: b2Assert(this.m_bodyCount > 0);\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        // Delete the attached joints.\r\n        let je = b.m_jointList;\r\n        while (je) {\r\n            const je0 = je;\r\n            je = je.next;\r\n            if (this.m_destructionListener) {\r\n                this.m_destructionListener.SayGoodbyeJoint(je0.joint);\r\n            }\r\n            this.DestroyJoint(je0.joint);\r\n            b.m_jointList = je;\r\n        }\r\n        b.m_jointList = null;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        // @see b2Controller list\r\n        let coe = b.m_controllerList;\r\n        while (coe) {\r\n            const coe0 = coe;\r\n            coe = coe.nextController;\r\n            coe0.controller.RemoveBody(b);\r\n        }\r\n        // #endif\r\n        // Delete the attached contacts.\r\n        let ce = b.m_contactList;\r\n        while (ce) {\r\n            const ce0 = ce;\r\n            ce = ce.next;\r\n            this.m_contactManager.Destroy(ce0.contact);\r\n        }\r\n        b.m_contactList = null;\r\n        // Delete the attached fixtures. This destroys broad-phase proxies.\r\n        let f = b.m_fixtureList;\r\n        while (f) {\r\n            const f0 = f;\r\n            f = f.m_next;\r\n            if (this.m_destructionListener) {\r\n                this.m_destructionListener.SayGoodbyeFixture(f0);\r\n            }\r\n            f0.DestroyProxies();\r\n            f0.Destroy();\r\n            b.m_fixtureList = f;\r\n            b.m_fixtureCount -= 1;\r\n        }\r\n        b.m_fixtureList = null;\r\n        b.m_fixtureCount = 0;\r\n        // Remove world body list.\r\n        if (b.m_prev) {\r\n            b.m_prev.m_next = b.m_next;\r\n        }\r\n        if (b.m_next) {\r\n            b.m_next.m_prev = b.m_prev;\r\n        }\r\n        if (b === this.m_bodyList) {\r\n            this.m_bodyList = b.m_next;\r\n        }\r\n        --this.m_bodyCount;\r\n    }\r\n    static _Joint_Create(def, allocator) {\r\n        switch (def.type) {\r\n            case b2JointType.e_distanceJoint: return new b2DistanceJoint(def);\r\n            case b2JointType.e_mouseJoint: return new b2MouseJoint(def);\r\n            case b2JointType.e_prismaticJoint: return new b2PrismaticJoint(def);\r\n            case b2JointType.e_revoluteJoint: return new b2RevoluteJoint(def);\r\n            case b2JointType.e_pulleyJoint: return new b2PulleyJoint(def);\r\n            case b2JointType.e_gearJoint: return new b2GearJoint(def);\r\n            case b2JointType.e_wheelJoint: return new b2WheelJoint(def);\r\n            case b2JointType.e_weldJoint: return new b2WeldJoint(def);\r\n            case b2JointType.e_frictionJoint: return new b2FrictionJoint(def);\r\n            case b2JointType.e_ropeJoint: return new b2RopeJoint(def);\r\n            case b2JointType.e_motorJoint: return new b2MotorJoint(def);\r\n            case b2JointType.e_areaJoint: return new b2AreaJoint(def);\r\n        }\r\n        throw new Error();\r\n    }\r\n    static _Joint_Destroy(joint, allocator) {\r\n    }\r\n    CreateJoint(def) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const j = b2World._Joint_Create(def, null);\r\n        // Connect to the world list.\r\n        j.m_prev = null;\r\n        j.m_next = this.m_jointList;\r\n        if (this.m_jointList) {\r\n            this.m_jointList.m_prev = j;\r\n        }\r\n        this.m_jointList = j;\r\n        ++this.m_jointCount;\r\n        // Connect to the bodies' doubly linked lists.\r\n        // j.m_edgeA.joint = j;\r\n        // j.m_edgeA.other = j.m_bodyB;\r\n        j.m_edgeA.prev = null;\r\n        j.m_edgeA.next = j.m_bodyA.m_jointList;\r\n        if (j.m_bodyA.m_jointList) {\r\n            j.m_bodyA.m_jointList.prev = j.m_edgeA;\r\n        }\r\n        j.m_bodyA.m_jointList = j.m_edgeA;\r\n        // j.m_edgeB.joint = j;\r\n        // j.m_edgeB.other = j.m_bodyA;\r\n        j.m_edgeB.prev = null;\r\n        j.m_edgeB.next = j.m_bodyB.m_jointList;\r\n        if (j.m_bodyB.m_jointList) {\r\n            j.m_bodyB.m_jointList.prev = j.m_edgeB;\r\n        }\r\n        j.m_bodyB.m_jointList = j.m_edgeB;\r\n        const bodyA = def.bodyA;\r\n        const bodyB = def.bodyB;\r\n        // If the joint prevents collisions, then flag any contacts for filtering.\r\n        if (!def.collideConnected) {\r\n            let edge = bodyB.GetContactList();\r\n            while (edge) {\r\n                if (edge.other === bodyA) {\r\n                    // Flag the contact for filtering at the next time step (where either\r\n                    // body is awake).\r\n                    edge.contact.FlagForFiltering();\r\n                }\r\n                edge = edge.next;\r\n            }\r\n        }\r\n        // Note: creating a joint doesn't wake the bodies.\r\n        return j;\r\n    }\r\n    /// Destroy a joint. This may cause the connected bodies to begin colliding.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyJoint(j) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const collideConnected = j.m_collideConnected;\r\n        // Remove from the doubly linked list.\r\n        if (j.m_prev) {\r\n            j.m_prev.m_next = j.m_next;\r\n        }\r\n        if (j.m_next) {\r\n            j.m_next.m_prev = j.m_prev;\r\n        }\r\n        if (j === this.m_jointList) {\r\n            this.m_jointList = j.m_next;\r\n        }\r\n        // Disconnect from island graph.\r\n        const bodyA = j.m_bodyA;\r\n        const bodyB = j.m_bodyB;\r\n        // Wake up connected bodies.\r\n        bodyA.SetAwake(true);\r\n        bodyB.SetAwake(true);\r\n        // Remove from body 1.\r\n        if (j.m_edgeA.prev) {\r\n            j.m_edgeA.prev.next = j.m_edgeA.next;\r\n        }\r\n        if (j.m_edgeA.next) {\r\n            j.m_edgeA.next.prev = j.m_edgeA.prev;\r\n        }\r\n        if (j.m_edgeA === bodyA.m_jointList) {\r\n            bodyA.m_jointList = j.m_edgeA.next;\r\n        }\r\n        j.m_edgeA.prev = null;\r\n        j.m_edgeA.next = null;\r\n        // Remove from body 2\r\n        if (j.m_edgeB.prev) {\r\n            j.m_edgeB.prev.next = j.m_edgeB.next;\r\n        }\r\n        if (j.m_edgeB.next) {\r\n            j.m_edgeB.next.prev = j.m_edgeB.prev;\r\n        }\r\n        if (j.m_edgeB === bodyB.m_jointList) {\r\n            bodyB.m_jointList = j.m_edgeB.next;\r\n        }\r\n        j.m_edgeB.prev = null;\r\n        j.m_edgeB.next = null;\r\n        b2World._Joint_Destroy(j, null);\r\n        // DEBUG: b2Assert(this.m_jointCount > 0);\r\n        --this.m_jointCount;\r\n        // If the joint prevents collisions, then flag any contacts for filtering.\r\n        if (!collideConnected) {\r\n            let edge = bodyB.GetContactList();\r\n            while (edge) {\r\n                if (edge.other === bodyA) {\r\n                    // Flag the contact for filtering at the next time step (where either\r\n                    // body is awake).\r\n                    edge.contact.FlagForFiltering();\r\n                }\r\n                edge = edge.next;\r\n            }\r\n        }\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    CreateParticleSystem(def) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        const p = new b2ParticleSystem(def, this);\r\n        // Add to world doubly linked list.\r\n        p.m_prev = null;\r\n        p.m_next = this.m_particleSystemList;\r\n        if (this.m_particleSystemList) {\r\n            this.m_particleSystemList.m_prev = p;\r\n        }\r\n        this.m_particleSystemList = p;\r\n        return p;\r\n    }\r\n    DestroyParticleSystem(p) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        // Remove world particleSystem list.\r\n        if (p.m_prev) {\r\n            p.m_prev.m_next = p.m_next;\r\n        }\r\n        if (p.m_next) {\r\n            p.m_next.m_prev = p.m_prev;\r\n        }\r\n        if (p === this.m_particleSystemList) {\r\n            this.m_particleSystemList = p.m_next;\r\n        }\r\n    }\r\n    CalculateReasonableParticleIterations(timeStep) {\r\n        if (this.m_particleSystemList === null) {\r\n            return 1;\r\n        }\r\n        function GetSmallestRadius(world) {\r\n            let smallestRadius = b2_maxFloat;\r\n            for (let system = world.GetParticleSystemList(); system !== null; system = system.m_next) {\r\n                smallestRadius = b2Min(smallestRadius, system.GetRadius());\r\n            }\r\n            return smallestRadius;\r\n        }\r\n        // Use the smallest radius, since that represents the worst-case.\r\n        return b2CalculateParticleIterations(this.m_gravity.Length(), GetSmallestRadius(this), timeStep);\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    Step(dt, velocityIterations, positionIterations, particleIterations = this.CalculateReasonableParticleIterations(dt)) {\r\n        // #else\r\n        // public Step(dt: number, velocityIterations: number, positionIterations: number): void {\r\n        // #endif\r\n        const stepTimer = b2World.Step_s_stepTimer.Reset();\r\n        // If new fixtures were added, we need to find the new contacts.\r\n        if (this.m_newFixture) {\r\n            this.m_contactManager.FindNewContacts();\r\n            this.m_newFixture = false;\r\n        }\r\n        this.m_locked = true;\r\n        const step = b2World.Step_s_step;\r\n        step.dt = dt;\r\n        step.velocityIterations = velocityIterations;\r\n        step.positionIterations = positionIterations;\r\n        // #if B2_ENABLE_PARTICLE\r\n        step.particleIterations = particleIterations;\r\n        // #endif\r\n        if (dt > 0) {\r\n            step.inv_dt = 1 / dt;\r\n        }\r\n        else {\r\n            step.inv_dt = 0;\r\n        }\r\n        step.dtRatio = this.m_inv_dt0 * dt;\r\n        step.warmStarting = this.m_warmStarting;\r\n        // Update contacts. This is where some contacts are destroyed.\r\n        const timer = b2World.Step_s_timer.Reset();\r\n        this.m_contactManager.Collide();\r\n        this.m_profile.collide = timer.GetMilliseconds();\r\n        // Integrate velocities, solve velocity constraints, and integrate positions.\r\n        if (this.m_stepComplete && step.dt > 0) {\r\n            const timer = b2World.Step_s_timer.Reset();\r\n            // #if B2_ENABLE_PARTICLE\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                p.Solve(step); // Particle Simulation\r\n            }\r\n            // #endif\r\n            this.Solve(step);\r\n            this.m_profile.solve = timer.GetMilliseconds();\r\n        }\r\n        // Handle TOI events.\r\n        if (this.m_continuousPhysics && step.dt > 0) {\r\n            const timer = b2World.Step_s_timer.Reset();\r\n            this.SolveTOI(step);\r\n            this.m_profile.solveTOI = timer.GetMilliseconds();\r\n        }\r\n        if (step.dt > 0) {\r\n            this.m_inv_dt0 = step.inv_dt;\r\n        }\r\n        if (this.m_clearForces) {\r\n            this.ClearForces();\r\n        }\r\n        this.m_locked = false;\r\n        this.m_profile.step = stepTimer.GetMilliseconds();\r\n    }\r\n    /// Manually clear the force buffer on all bodies. By default, forces are cleared automatically\r\n    /// after each call to Step. The default behavior is modified by calling SetAutoClearForces.\r\n    /// The purpose of this function is to support sub-stepping. Sub-stepping is often used to maintain\r\n    /// a fixed sized time step under a variable frame-rate.\r\n    /// When you perform sub-stepping you will disable auto clearing of forces and instead call\r\n    /// ClearForces after all sub-steps are complete in one pass of your game loop.\r\n    /// @see SetAutoClearForces\r\n    ClearForces() {\r\n        for (let body = this.m_bodyList; body; body = body.m_next) {\r\n            body.m_force.SetZero();\r\n            body.m_torque = 0;\r\n        }\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    DrawParticleSystem(system) {\r\n        if (this.m_debugDraw === null) {\r\n            return;\r\n        }\r\n        const particleCount = system.GetParticleCount();\r\n        if (particleCount) {\r\n            const radius = system.GetRadius();\r\n            const positionBuffer = system.GetPositionBuffer();\r\n            if (system.m_colorBuffer.data) {\r\n                const colorBuffer = system.GetColorBuffer();\r\n                this.m_debugDraw.DrawParticles(positionBuffer, radius, colorBuffer, particleCount);\r\n            }\r\n            else {\r\n                this.m_debugDraw.DrawParticles(positionBuffer, radius, null, particleCount);\r\n            }\r\n        }\r\n    }\r\n    DrawDebugData() {\r\n        if (this.m_debugDraw === null) {\r\n            return;\r\n        }\r\n        const flags = this.m_debugDraw.GetFlags();\r\n        const color = b2World.DrawDebugData_s_color.SetRGB(0, 0, 0);\r\n        if (flags & b2DrawFlags.e_shapeBit) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                const xf = b.m_xf;\r\n                this.m_debugDraw.PushTransform(xf);\r\n                for (let f = b.GetFixtureList(); f; f = f.m_next) {\r\n                    if (!b.IsActive()) {\r\n                        color.SetRGB(0.5, 0.5, 0.3);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                        color.SetRGB(0.5, 0.9, 0.5);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (b.GetType() === b2BodyType.b2_kinematicBody) {\r\n                        color.SetRGB(0.5, 0.5, 0.9);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (!b.IsAwake()) {\r\n                        color.SetRGB(0.6, 0.6, 0.6);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else {\r\n                        color.SetRGB(0.9, 0.7, 0.7);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                }\r\n                this.m_debugDraw.PopTransform(xf);\r\n            }\r\n        }\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (flags & b2DrawFlags.e_particleBit) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                this.DrawParticleSystem(p);\r\n            }\r\n        }\r\n        // #endif\r\n        if (flags & b2DrawFlags.e_jointBit) {\r\n            for (let j = this.m_jointList; j; j = j.m_next) {\r\n                this.DrawJoint(j);\r\n            }\r\n        }\r\n        /*\r\n        if (flags & b2DrawFlags.e_pairBit) {\r\n          color.SetRGB(0.3, 0.9, 0.9);\r\n          for (let contact = this.m_contactManager.m_contactList; contact; contact = contact.m_next) {\r\n            const fixtureA = contact.GetFixtureA();\r\n            const fixtureB = contact.GetFixtureB();\r\n    \r\n            const cA = fixtureA.GetAABB().GetCenter();\r\n            const cB = fixtureB.GetAABB().GetCenter();\r\n    \r\n            this.m_debugDraw.DrawSegment(cA, cB, color);\r\n          }\r\n        }\r\n        */\r\n        if (flags & b2DrawFlags.e_aabbBit) {\r\n            color.SetRGB(0.9, 0.3, 0.9);\r\n            const vs = b2World.DrawDebugData_s_vs;\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                if (!b.IsActive()) {\r\n                    continue;\r\n                }\r\n                for (let f = b.GetFixtureList(); f; f = f.m_next) {\r\n                    for (let i = 0; i < f.m_proxyCount; ++i) {\r\n                        const proxy = f.m_proxies[i];\r\n                        const aabb = proxy.treeNode.aabb;\r\n                        vs[0].Set(aabb.lowerBound.x, aabb.lowerBound.y);\r\n                        vs[1].Set(aabb.upperBound.x, aabb.lowerBound.y);\r\n                        vs[2].Set(aabb.upperBound.x, aabb.upperBound.y);\r\n                        vs[3].Set(aabb.lowerBound.x, aabb.upperBound.y);\r\n                        this.m_debugDraw.DrawPolygon(vs, 4, color);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (flags & b2DrawFlags.e_centerOfMassBit) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                const xf = b2World.DrawDebugData_s_xf;\r\n                xf.q.Copy(b.m_xf.q);\r\n                xf.p.Copy(b.GetWorldCenter());\r\n                this.m_debugDraw.DrawTransform(xf);\r\n            }\r\n        }\r\n        // #if B2_ENABLE_CONTROLLER\r\n        // @see b2Controller list\r\n        if (flags & b2DrawFlags.e_controllerBit) {\r\n            for (let c = this.m_controllerList; c; c = c.m_next) {\r\n                c.Draw(this.m_debugDraw);\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    /// Query the world for all fixtures that potentially overlap the\r\n    /// provided AABB.\r\n    /// @param callback a user implemented callback class.\r\n    /// @param aabb the query box.\r\n    QueryAABB(callback, aabb, fn) {\r\n        this.m_contactManager.m_broadPhase.Query(aabb, (proxy) => {\r\n            const fixture_proxy = proxy.userData;\r\n            // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            if (callback) {\r\n                return callback.ReportFixture(fixture);\r\n            }\r\n            else if (fn) {\r\n                return fn(fixture);\r\n            }\r\n            return true;\r\n        });\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryAABB(callback, aabb);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryAllAABB(aabb, out = []) {\r\n        this.QueryAABB(null, aabb, (fixture) => { out.push(fixture); return true; });\r\n        return out;\r\n    }\r\n    /// Query the world for all fixtures that potentially overlap the\r\n    /// provided point.\r\n    /// @param callback a user implemented callback class.\r\n    /// @param point the query point.\r\n    QueryPointAABB(callback, point, fn) {\r\n        this.m_contactManager.m_broadPhase.QueryPoint(point, (proxy) => {\r\n            const fixture_proxy = proxy.userData;\r\n            // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            if (callback) {\r\n                return callback.ReportFixture(fixture);\r\n            }\r\n            else if (fn) {\r\n                return fn(fixture);\r\n            }\r\n            return true;\r\n        });\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryPointAABB(callback, point);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryAllPointAABB(point, out = []) {\r\n        this.QueryPointAABB(null, point, (fixture) => { out.push(fixture); return true; });\r\n        return out;\r\n    }\r\n    QueryFixtureShape(callback, shape, index, transform, fn) {\r\n        const aabb = b2World.QueryFixtureShape_s_aabb;\r\n        shape.ComputeAABB(aabb, transform, index);\r\n        this.m_contactManager.m_broadPhase.Query(aabb, (proxy) => {\r\n            const fixture_proxy = proxy.userData;\r\n            // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            if (b2TestOverlapShape(shape, index, fixture.GetShape(), fixture_proxy.childIndex, transform, fixture.GetBody().GetTransform())) {\r\n                if (callback) {\r\n                    return callback.ReportFixture(fixture);\r\n                }\r\n                else if (fn) {\r\n                    return fn(fixture);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryAABB(callback, aabb);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryAllFixtureShape(shape, index, transform, out = []) {\r\n        this.QueryFixtureShape(null, shape, index, transform, (fixture) => { out.push(fixture); return true; });\r\n        return out;\r\n    }\r\n    QueryFixturePoint(callback, point, fn) {\r\n        this.m_contactManager.m_broadPhase.QueryPoint(point, (proxy) => {\r\n            const fixture_proxy = proxy.userData;\r\n            // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            if (fixture.TestPoint(point)) {\r\n                if (callback) {\r\n                    return callback.ReportFixture(fixture);\r\n                }\r\n                else if (fn) {\r\n                    return fn(fixture);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryPointAABB(callback, point);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryAllFixturePoint(point, out = []) {\r\n        this.QueryFixturePoint(null, point, (fixture) => { out.push(fixture); return true; });\r\n        return out;\r\n    }\r\n    RayCast(callback, point1, point2, fn) {\r\n        const input = b2World.RayCast_s_input;\r\n        input.maxFraction = 1;\r\n        input.p1.Copy(point1);\r\n        input.p2.Copy(point2);\r\n        this.m_contactManager.m_broadPhase.RayCast(input, (input, proxy) => {\r\n            const fixture_proxy = proxy.userData;\r\n            // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            const index = fixture_proxy.childIndex;\r\n            const output = b2World.RayCast_s_output;\r\n            const hit = fixture.RayCast(output, input, index);\r\n            if (hit) {\r\n                const fraction = output.fraction;\r\n                const point = b2World.RayCast_s_point;\r\n                point.Set((1 - fraction) * point1.x + fraction * point2.x, (1 - fraction) * point1.y + fraction * point2.y);\r\n                if (callback) {\r\n                    return callback.ReportFixture(fixture, point, output.normal, fraction);\r\n                }\r\n                else if (fn) {\r\n                    return fn(fixture, point, output.normal, fraction);\r\n                }\r\n            }\r\n            return input.maxFraction;\r\n        });\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.RayCast(callback, point1, point2);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    RayCastOne(point1, point2) {\r\n        let result = null;\r\n        let min_fraction = 1;\r\n        this.RayCast(null, point1, point2, (fixture, point, normal, fraction) => {\r\n            if (fraction < min_fraction) {\r\n                min_fraction = fraction;\r\n                result = fixture;\r\n            }\r\n            return min_fraction;\r\n        });\r\n        return result;\r\n    }\r\n    RayCastAll(point1, point2, out = []) {\r\n        this.RayCast(null, point1, point2, (fixture, point, normal, fraction) => {\r\n            out.push(fixture);\r\n            return 1;\r\n        });\r\n        return out;\r\n    }\r\n    /// Get the world body list. With the returned body, use b2Body::GetNext to get\r\n    /// the next body in the world list. A NULL body indicates the end of the list.\r\n    /// @return the head of the world body list.\r\n    GetBodyList() {\r\n        return this.m_bodyList;\r\n    }\r\n    /// Get the world joint list. With the returned joint, use b2Joint::GetNext to get\r\n    /// the next joint in the world list. A NULL joint indicates the end of the list.\r\n    /// @return the head of the world joint list.\r\n    GetJointList() {\r\n        return this.m_jointList;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    GetParticleSystemList() {\r\n        return this.m_particleSystemList;\r\n    }\r\n    // #endif\r\n    /// Get the world contact list. With the returned contact, use b2Contact::GetNext to get\r\n    /// the next contact in the world list. A NULL contact indicates the end of the list.\r\n    /// @return the head of the world contact list.\r\n    /// @warning contacts are created and destroyed in the middle of a time step.\r\n    /// Use b2ContactListener to avoid missing contacts.\r\n    GetContactList() {\r\n        return this.m_contactManager.m_contactList;\r\n    }\r\n    /// Enable/disable sleep.\r\n    SetAllowSleeping(flag) {\r\n        if (flag === this.m_allowSleep) {\r\n            return;\r\n        }\r\n        this.m_allowSleep = flag;\r\n        if (!this.m_allowSleep) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                b.SetAwake(true);\r\n            }\r\n        }\r\n    }\r\n    GetAllowSleeping() {\r\n        return this.m_allowSleep;\r\n    }\r\n    /// Enable/disable warm starting. For testing.\r\n    SetWarmStarting(flag) {\r\n        this.m_warmStarting = flag;\r\n    }\r\n    GetWarmStarting() {\r\n        return this.m_warmStarting;\r\n    }\r\n    /// Enable/disable continuous physics. For testing.\r\n    SetContinuousPhysics(flag) {\r\n        this.m_continuousPhysics = flag;\r\n    }\r\n    GetContinuousPhysics() {\r\n        return this.m_continuousPhysics;\r\n    }\r\n    /// Enable/disable single stepped continuous physics. For testing.\r\n    SetSubStepping(flag) {\r\n        this.m_subStepping = flag;\r\n    }\r\n    GetSubStepping() {\r\n        return this.m_subStepping;\r\n    }\r\n    /// Get the number of broad-phase proxies.\r\n    GetProxyCount() {\r\n        return this.m_contactManager.m_broadPhase.GetProxyCount();\r\n    }\r\n    /// Get the number of bodies.\r\n    GetBodyCount() {\r\n        return this.m_bodyCount;\r\n    }\r\n    /// Get the number of joints.\r\n    GetJointCount() {\r\n        return this.m_jointCount;\r\n    }\r\n    /// Get the number of contacts (each may have 0 or more contact points).\r\n    GetContactCount() {\r\n        return this.m_contactManager.m_contactCount;\r\n    }\r\n    /// Get the height of the dynamic tree.\r\n    GetTreeHeight() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeHeight();\r\n    }\r\n    /// Get the balance of the dynamic tree.\r\n    GetTreeBalance() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeBalance();\r\n    }\r\n    /// Get the quality metric of the dynamic tree. The smaller the better.\r\n    /// The minimum is 1.\r\n    GetTreeQuality() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeQuality();\r\n    }\r\n    /// Change the global gravity vector.\r\n    SetGravity(gravity, wake = true) {\r\n        if (!b2Vec2.IsEqualToV(this.m_gravity, gravity)) {\r\n            this.m_gravity.Copy(gravity);\r\n            if (wake) {\r\n                for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                    b.SetAwake(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /// Get the global gravity vector.\r\n    GetGravity() {\r\n        return this.m_gravity;\r\n    }\r\n    /// Is the world locked (in the middle of a time step).\r\n    IsLocked() {\r\n        return this.m_locked;\r\n    }\r\n    /// Set flag to control automatic clearing of forces after each time step.\r\n    SetAutoClearForces(flag) {\r\n        this.m_clearForces = flag;\r\n    }\r\n    /// Get the flag that controls automatic clearing of forces after each time step.\r\n    GetAutoClearForces() {\r\n        return this.m_clearForces;\r\n    }\r\n    /// Shift the world origin. Useful for large worlds.\r\n    /// The body shift formula is: position -= newOrigin\r\n    /// @param newOrigin the new origin with respect to the old origin\r\n    ShiftOrigin(newOrigin) {\r\n        if (this.IsLocked()) {\r\n            throw new Error();\r\n        }\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_xf.p.SelfSub(newOrigin);\r\n            b.m_sweep.c0.SelfSub(newOrigin);\r\n            b.m_sweep.c.SelfSub(newOrigin);\r\n        }\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.ShiftOrigin(newOrigin);\r\n        }\r\n        this.m_contactManager.m_broadPhase.ShiftOrigin(newOrigin);\r\n    }\r\n    /// Get the contact manager for testing.\r\n    GetContactManager() {\r\n        return this.m_contactManager;\r\n    }\r\n    /// Get the current profile.\r\n    GetProfile() {\r\n        return this.m_profile;\r\n    }\r\n    /// Dump the world into the log file.\r\n    /// @warning this should be called outside of a time step.\r\n    Dump(log) {\r\n        if (this.m_locked) {\r\n            return;\r\n        }\r\n        log(\"const g: b2Vec2 = new b2Vec2(%.15f, %.15f);\\n\", this.m_gravity.x, this.m_gravity.y);\r\n        log(\"this.m_world.SetGravity(g);\\n\");\r\n        log(\"const bodies: b2Body[] = [];\\n\");\r\n        log(\"const joints: b2Joint[] = [];\\n\");\r\n        let i = 0;\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_islandIndex = i;\r\n            b.Dump(log);\r\n            ++i;\r\n        }\r\n        i = 0;\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.m_index = i;\r\n            ++i;\r\n        }\r\n        // First pass on joints, skip gear joints.\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            if (j.m_type === b2JointType.e_gearJoint) {\r\n                continue;\r\n            }\r\n            log(\"{\\n\");\r\n            j.Dump(log);\r\n            log(\"}\\n\");\r\n        }\r\n        // Second pass on joints, only gear joints.\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            if (j.m_type !== b2JointType.e_gearJoint) {\r\n                continue;\r\n            }\r\n            log(\"{\\n\");\r\n            j.Dump(log);\r\n            log(\"}\\n\");\r\n        }\r\n    }\r\n    DrawJoint(joint) {\r\n        if (this.m_debugDraw === null) {\r\n            return;\r\n        }\r\n        const bodyA = joint.GetBodyA();\r\n        const bodyB = joint.GetBodyB();\r\n        const xf1 = bodyA.m_xf;\r\n        const xf2 = bodyB.m_xf;\r\n        const x1 = xf1.p;\r\n        const x2 = xf2.p;\r\n        const p1 = joint.GetAnchorA(b2World.DrawJoint_s_p1);\r\n        const p2 = joint.GetAnchorB(b2World.DrawJoint_s_p2);\r\n        const color = b2World.DrawJoint_s_color.SetRGB(0.5, 0.8, 0.8);\r\n        switch (joint.m_type) {\r\n            case b2JointType.e_distanceJoint:\r\n                this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                break;\r\n            case b2JointType.e_pulleyJoint: {\r\n                const pulley = joint;\r\n                const s1 = pulley.GetGroundAnchorA();\r\n                const s2 = pulley.GetGroundAnchorB();\r\n                this.m_debugDraw.DrawSegment(s1, p1, color);\r\n                this.m_debugDraw.DrawSegment(s2, p2, color);\r\n                this.m_debugDraw.DrawSegment(s1, s2, color);\r\n                break;\r\n            }\r\n            case b2JointType.e_mouseJoint: {\r\n                const c = b2World.DrawJoint_s_c;\r\n                c.Set(0.0, 1.0, 0.0);\r\n                this.m_debugDraw.DrawPoint(p1, 4.0, c);\r\n                this.m_debugDraw.DrawPoint(p2, 4.0, c);\r\n                c.Set(0.8, 0.8, 0.8);\r\n                this.m_debugDraw.DrawSegment(p1, p2, c);\r\n                break;\r\n            }\r\n            default:\r\n                this.m_debugDraw.DrawSegment(x1, p1, color);\r\n                this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                this.m_debugDraw.DrawSegment(x2, p2, color);\r\n        }\r\n    }\r\n    DrawShape(fixture, color) {\r\n        if (this.m_debugDraw === null) {\r\n            return;\r\n        }\r\n        const shape = fixture.GetShape();\r\n        switch (shape.m_type) {\r\n            case b2ShapeType.e_circleShape: {\r\n                const circle = shape;\r\n                const center = circle.m_p;\r\n                const radius = circle.m_radius;\r\n                const axis = b2Vec2.UNITX;\r\n                this.m_debugDraw.DrawSolidCircle(center, radius, axis, color);\r\n                break;\r\n            }\r\n            case b2ShapeType.e_edgeShape: {\r\n                const edge = shape;\r\n                const v1 = edge.m_vertex1;\r\n                const v2 = edge.m_vertex2;\r\n                this.m_debugDraw.DrawSegment(v1, v2, color);\r\n                break;\r\n            }\r\n            case b2ShapeType.e_chainShape: {\r\n                const chain = shape;\r\n                const count = chain.m_count;\r\n                const vertices = chain.m_vertices;\r\n                const ghostColor = b2World.DrawShape_s_ghostColor.SetRGBA(0.75 * color.r, 0.75 * color.g, 0.75 * color.b, color.a);\r\n                let v1 = vertices[0];\r\n                this.m_debugDraw.DrawPoint(v1, 4.0, color);\r\n                if (chain.m_hasPrevVertex) {\r\n                    const vp = chain.m_prevVertex;\r\n                    this.m_debugDraw.DrawSegment(vp, v1, ghostColor);\r\n                    this.m_debugDraw.DrawCircle(vp, 0.1, ghostColor);\r\n                }\r\n                for (let i = 1; i < count; ++i) {\r\n                    const v2 = vertices[i];\r\n                    this.m_debugDraw.DrawSegment(v1, v2, color);\r\n                    this.m_debugDraw.DrawPoint(v2, 4.0, color);\r\n                    v1 = v2;\r\n                }\r\n                if (chain.m_hasNextVertex) {\r\n                    const vn = chain.m_nextVertex;\r\n                    this.m_debugDraw.DrawSegment(vn, v1, ghostColor);\r\n                    this.m_debugDraw.DrawCircle(vn, 0.1, ghostColor);\r\n                }\r\n                break;\r\n            }\r\n            case b2ShapeType.e_polygonShape: {\r\n                const poly = shape;\r\n                const vertexCount = poly.m_count;\r\n                const vertices = poly.m_vertices;\r\n                this.m_debugDraw.DrawSolidPolygon(vertices, vertexCount, color);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    Solve(step) {\r\n        // #if B2_ENABLE_PARTICLE\r\n        // update previous transforms\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_xf0.Copy(b.m_xf);\r\n        }\r\n        // #endif\r\n        // #if B2_ENABLE_CONTROLLER\r\n        // @see b2Controller list\r\n        for (let controller = this.m_controllerList; controller; controller = controller.m_next) {\r\n            controller.Step(step);\r\n        }\r\n        // #endif\r\n        this.m_profile.solveInit = 0;\r\n        this.m_profile.solveVelocity = 0;\r\n        this.m_profile.solvePosition = 0;\r\n        // Size the island for the worst case.\r\n        const island = this.m_island;\r\n        island.Initialize(this.m_bodyCount, this.m_contactManager.m_contactCount, this.m_jointCount, null, // this.m_stackAllocator,\r\n        this.m_contactManager.m_contactListener);\r\n        // Clear all the island flags.\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_islandFlag = false;\r\n        }\r\n        for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n            c.m_islandFlag = false;\r\n        }\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.m_islandFlag = false;\r\n        }\r\n        // Build and simulate all awake islands.\r\n        // DEBUG: const stackSize: number = this.m_bodyCount;\r\n        const stack = this.s_stack;\r\n        for (let seed = this.m_bodyList; seed; seed = seed.m_next) {\r\n            if (seed.m_islandFlag) {\r\n                continue;\r\n            }\r\n            if (!seed.IsAwake() || !seed.IsActive()) {\r\n                continue;\r\n            }\r\n            // The seed can be dynamic or kinematic.\r\n            if (seed.GetType() === b2BodyType.b2_staticBody) {\r\n                continue;\r\n            }\r\n            // Reset island and stack.\r\n            island.Clear();\r\n            let stackCount = 0;\r\n            stack[stackCount++] = seed;\r\n            seed.m_islandFlag = true;\r\n            // Perform a depth first search (DFS) on the constraint graph.\r\n            while (stackCount > 0) {\r\n                // Grab the next body off the stack and add it to the island.\r\n                const b = stack[--stackCount];\r\n                if (!b) {\r\n                    throw new Error();\r\n                }\r\n                // DEBUG: b2Assert(b.IsActive());\r\n                island.AddBody(b);\r\n                // Make sure the body is awake. (without resetting sleep timer).\r\n                b.m_awakeFlag = true;\r\n                // To keep islands as small as possible, we don't\r\n                // propagate islands across static bodies.\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    continue;\r\n                }\r\n                // Search all contacts connected to this body.\r\n                for (let ce = b.m_contactList; ce; ce = ce.next) {\r\n                    const contact = ce.contact;\r\n                    // Has this contact already been added to an island?\r\n                    if (contact.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    // Is this contact solid and touching?\r\n                    if (!contact.IsEnabled() || !contact.IsTouching()) {\r\n                        continue;\r\n                    }\r\n                    // Skip sensors.\r\n                    const sensorA = contact.m_fixtureA.m_isSensor;\r\n                    const sensorB = contact.m_fixtureB.m_isSensor;\r\n                    if (sensorA || sensorB) {\r\n                        continue;\r\n                    }\r\n                    island.AddContact(contact);\r\n                    contact.m_islandFlag = true;\r\n                    const other = ce.other;\r\n                    if (!other) {\r\n                        throw new Error();\r\n                    }\r\n                    // Was the other body already added to this island?\r\n                    if (other.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    // DEBUG: b2Assert(stackCount < stackSize);\r\n                    stack[stackCount++] = other;\r\n                    other.m_islandFlag = true;\r\n                }\r\n                // Search all joints connect to this body.\r\n                for (let je = b.m_jointList; je; je = je.next) {\r\n                    if (je.joint.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    const other = je.other;\r\n                    // Don't simulate joints connected to inactive bodies.\r\n                    if (!other.IsActive()) {\r\n                        continue;\r\n                    }\r\n                    island.AddJoint(je.joint);\r\n                    je.joint.m_islandFlag = true;\r\n                    if (other.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    // DEBUG: b2Assert(stackCount < stackSize);\r\n                    stack[stackCount++] = other;\r\n                    other.m_islandFlag = true;\r\n                }\r\n            }\r\n            const profile = new b2Profile();\r\n            island.Solve(profile, step, this.m_gravity, this.m_allowSleep);\r\n            this.m_profile.solveInit += profile.solveInit;\r\n            this.m_profile.solveVelocity += profile.solveVelocity;\r\n            this.m_profile.solvePosition += profile.solvePosition;\r\n            // Post solve cleanup.\r\n            for (let i = 0; i < island.m_bodyCount; ++i) {\r\n                // Allow static bodies to participate in other islands.\r\n                const b = island.m_bodies[i];\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    b.m_islandFlag = false;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < stack.length; ++i) {\r\n            if (!stack[i]) {\r\n                break;\r\n            }\r\n            stack[i] = null;\r\n        }\r\n        const timer = new b2Timer();\r\n        // Synchronize fixtures, check for out of range bodies.\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            // If a body was not in an island then it did not move.\r\n            if (!b.m_islandFlag) {\r\n                continue;\r\n            }\r\n            if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                continue;\r\n            }\r\n            // Update fixtures (for broad-phase).\r\n            b.SynchronizeFixtures();\r\n        }\r\n        // Look for new contacts.\r\n        this.m_contactManager.FindNewContacts();\r\n        this.m_profile.broadphase = timer.GetMilliseconds();\r\n    }\r\n    SolveTOI(step) {\r\n        // b2Island island(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, &m_stackAllocator, m_contactManager.m_contactListener);\r\n        const island = this.m_island;\r\n        island.Initialize(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, null, this.m_contactManager.m_contactListener);\r\n        if (this.m_stepComplete) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                b.m_islandFlag = false;\r\n                b.m_sweep.alpha0 = 0;\r\n            }\r\n            for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n                // Invalidate TOI\r\n                c.m_toiFlag = false;\r\n                c.m_islandFlag = false;\r\n                c.m_toiCount = 0;\r\n                c.m_toi = 1;\r\n            }\r\n        }\r\n        // Find TOI events and solve them.\r\n        for (;;) {\r\n            // Find the first TOI.\r\n            let minContact = null;\r\n            let minAlpha = 1;\r\n            for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n                // Is this contact disabled?\r\n                if (!c.IsEnabled()) {\r\n                    continue;\r\n                }\r\n                // Prevent excessive sub-stepping.\r\n                if (c.m_toiCount > b2_maxSubSteps) {\r\n                    continue;\r\n                }\r\n                let alpha = 1;\r\n                if (c.m_toiFlag) {\r\n                    // This contact has a valid cached TOI.\r\n                    alpha = c.m_toi;\r\n                }\r\n                else {\r\n                    const fA = c.GetFixtureA();\r\n                    const fB = c.GetFixtureB();\r\n                    // Is there a sensor?\r\n                    if (fA.IsSensor() || fB.IsSensor()) {\r\n                        continue;\r\n                    }\r\n                    const bA = fA.GetBody();\r\n                    const bB = fB.GetBody();\r\n                    const typeA = bA.m_type;\r\n                    const typeB = bB.m_type;\r\n                    // DEBUG: b2Assert(typeA !== b2BodyType.b2_staticBody || typeB !== b2BodyType.b2_staticBody);\r\n                    const activeA = bA.IsAwake() && typeA !== b2BodyType.b2_staticBody;\r\n                    const activeB = bB.IsAwake() && typeB !== b2BodyType.b2_staticBody;\r\n                    // Is at least one body active (awake and dynamic or kinematic)?\r\n                    if (!activeA && !activeB) {\r\n                        continue;\r\n                    }\r\n                    const collideA = bA.IsBullet() || typeA !== b2BodyType.b2_dynamicBody;\r\n                    const collideB = bB.IsBullet() || typeB !== b2BodyType.b2_dynamicBody;\r\n                    // Are these two non-bullet dynamic bodies?\r\n                    if (!collideA && !collideB) {\r\n                        continue;\r\n                    }\r\n                    // Compute the TOI for this contact.\r\n                    // Put the sweeps onto the same time interval.\r\n                    let alpha0 = bA.m_sweep.alpha0;\r\n                    if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\r\n                        alpha0 = bB.m_sweep.alpha0;\r\n                        bA.m_sweep.Advance(alpha0);\r\n                    }\r\n                    else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\r\n                        alpha0 = bA.m_sweep.alpha0;\r\n                        bB.m_sweep.Advance(alpha0);\r\n                    }\r\n                    // DEBUG: b2Assert(alpha0 < 1);\r\n                    const indexA = c.GetChildIndexA();\r\n                    const indexB = c.GetChildIndexB();\r\n                    // Compute the time of impact in interval [0, minTOI]\r\n                    const input = b2World.SolveTOI_s_toi_input;\r\n                    input.proxyA.SetShape(fA.GetShape(), indexA);\r\n                    input.proxyB.SetShape(fB.GetShape(), indexB);\r\n                    input.sweepA.Copy(bA.m_sweep);\r\n                    input.sweepB.Copy(bB.m_sweep);\r\n                    input.tMax = 1;\r\n                    const output = b2World.SolveTOI_s_toi_output;\r\n                    b2TimeOfImpact(output, input);\r\n                    // Beta is the fraction of the remaining portion of the .\r\n                    const beta = output.t;\r\n                    if (output.state === b2TOIOutputState.e_touching) {\r\n                        alpha = b2Min(alpha0 + (1 - alpha0) * beta, 1);\r\n                    }\r\n                    else {\r\n                        alpha = 1;\r\n                    }\r\n                    c.m_toi = alpha;\r\n                    c.m_toiFlag = true;\r\n                }\r\n                if (alpha < minAlpha) {\r\n                    // This is the minimum TOI found so far.\r\n                    minContact = c;\r\n                    minAlpha = alpha;\r\n                }\r\n            }\r\n            if (minContact === null || 1 - 10 * b2_epsilon < minAlpha) {\r\n                // No more TOI events. Done!\r\n                this.m_stepComplete = true;\r\n                break;\r\n            }\r\n            // Advance the bodies to the TOI.\r\n            const fA = minContact.GetFixtureA();\r\n            const fB = minContact.GetFixtureB();\r\n            const bA = fA.GetBody();\r\n            const bB = fB.GetBody();\r\n            const backup1 = b2World.SolveTOI_s_backup1.Copy(bA.m_sweep);\r\n            const backup2 = b2World.SolveTOI_s_backup2.Copy(bB.m_sweep);\r\n            bA.Advance(minAlpha);\r\n            bB.Advance(minAlpha);\r\n            // The TOI contact likely has some new contact points.\r\n            minContact.Update(this.m_contactManager.m_contactListener);\r\n            minContact.m_toiFlag = false;\r\n            ++minContact.m_toiCount;\r\n            // Is the contact solid?\r\n            if (!minContact.IsEnabled() || !minContact.IsTouching()) {\r\n                // Restore the sweeps.\r\n                minContact.SetEnabled(false);\r\n                bA.m_sweep.Copy(backup1);\r\n                bB.m_sweep.Copy(backup2);\r\n                bA.SynchronizeTransform();\r\n                bB.SynchronizeTransform();\r\n                continue;\r\n            }\r\n            bA.SetAwake(true);\r\n            bB.SetAwake(true);\r\n            // Build the island\r\n            island.Clear();\r\n            island.AddBody(bA);\r\n            island.AddBody(bB);\r\n            island.AddContact(minContact);\r\n            bA.m_islandFlag = true;\r\n            bB.m_islandFlag = true;\r\n            minContact.m_islandFlag = true;\r\n            // Get contacts on bodyA and bodyB.\r\n            // const bodies: b2Body[] = [bA, bB];\r\n            for (let i = 0; i < 2; ++i) {\r\n                const body = (i === 0) ? (bA) : (bB); // bodies[i];\r\n                if (body.m_type === b2BodyType.b2_dynamicBody) {\r\n                    for (let ce = body.m_contactList; ce; ce = ce.next) {\r\n                        if (island.m_bodyCount === island.m_bodyCapacity) {\r\n                            break;\r\n                        }\r\n                        if (island.m_contactCount === island.m_contactCapacity) {\r\n                            break;\r\n                        }\r\n                        const contact = ce.contact;\r\n                        // Has this contact already been added to the island?\r\n                        if (contact.m_islandFlag) {\r\n                            continue;\r\n                        }\r\n                        // Only add static, kinematic, or bullet bodies.\r\n                        const other = ce.other;\r\n                        if (other.m_type === b2BodyType.b2_dynamicBody &&\r\n                            !body.IsBullet() && !other.IsBullet()) {\r\n                            continue;\r\n                        }\r\n                        // Skip sensors.\r\n                        const sensorA = contact.m_fixtureA.m_isSensor;\r\n                        const sensorB = contact.m_fixtureB.m_isSensor;\r\n                        if (sensorA || sensorB) {\r\n                            continue;\r\n                        }\r\n                        // Tentatively advance the body to the TOI.\r\n                        const backup = b2World.SolveTOI_s_backup.Copy(other.m_sweep);\r\n                        if (!other.m_islandFlag) {\r\n                            other.Advance(minAlpha);\r\n                        }\r\n                        // Update the contact points\r\n                        contact.Update(this.m_contactManager.m_contactListener);\r\n                        // Was the contact disabled by the user?\r\n                        if (!contact.IsEnabled()) {\r\n                            other.m_sweep.Copy(backup);\r\n                            other.SynchronizeTransform();\r\n                            continue;\r\n                        }\r\n                        // Are there contact points?\r\n                        if (!contact.IsTouching()) {\r\n                            other.m_sweep.Copy(backup);\r\n                            other.SynchronizeTransform();\r\n                            continue;\r\n                        }\r\n                        // Add the contact to the island\r\n                        contact.m_islandFlag = true;\r\n                        island.AddContact(contact);\r\n                        // Has the other body already been added to the island?\r\n                        if (other.m_islandFlag) {\r\n                            continue;\r\n                        }\r\n                        // Add the other body to the island.\r\n                        other.m_islandFlag = true;\r\n                        if (other.m_type !== b2BodyType.b2_staticBody) {\r\n                            other.SetAwake(true);\r\n                        }\r\n                        island.AddBody(other);\r\n                    }\r\n                }\r\n            }\r\n            const subStep = b2World.SolveTOI_s_subStep;\r\n            subStep.dt = (1 - minAlpha) * step.dt;\r\n            subStep.inv_dt = 1 / subStep.dt;\r\n            subStep.dtRatio = 1;\r\n            subStep.positionIterations = 20;\r\n            subStep.velocityIterations = step.velocityIterations;\r\n            // #if B2_ENABLE_PARTICLE\r\n            subStep.particleIterations = step.particleIterations;\r\n            // #endif\r\n            subStep.warmStarting = false;\r\n            island.SolveTOI(subStep, bA.m_islandIndex, bB.m_islandIndex);\r\n            // Reset island flags and synchronize broad-phase proxies.\r\n            for (let i = 0; i < island.m_bodyCount; ++i) {\r\n                const body = island.m_bodies[i];\r\n                body.m_islandFlag = false;\r\n                if (body.m_type !== b2BodyType.b2_dynamicBody) {\r\n                    continue;\r\n                }\r\n                body.SynchronizeFixtures();\r\n                // Invalidate all contact TOIs on this displaced body.\r\n                for (let ce = body.m_contactList; ce; ce = ce.next) {\r\n                    ce.contact.m_toiFlag = false;\r\n                    ce.contact.m_islandFlag = false;\r\n                }\r\n            }\r\n            // Commit fixture proxy movements to the broad-phase so that new contacts are created.\r\n            // Also, some contacts can be destroyed.\r\n            this.m_contactManager.FindNewContacts();\r\n            if (this.m_subStepping) {\r\n                this.m_stepComplete = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // #if B2_ENABLE_CONTROLLER\r\n    AddController(controller) {\r\n        // b2Assert(controller.m_world === null, \"Controller can only be a member of one world\");\r\n        // controller.m_world = this;\r\n        controller.m_next = this.m_controllerList;\r\n        controller.m_prev = null;\r\n        if (this.m_controllerList) {\r\n            this.m_controllerList.m_prev = controller;\r\n        }\r\n        this.m_controllerList = controller;\r\n        ++this.m_controllerCount;\r\n        return controller;\r\n    }\r\n    RemoveController(controller) {\r\n        // b2Assert(controller.m_world === this, \"Controller is not a member of this world\");\r\n        if (controller.m_prev) {\r\n            controller.m_prev.m_next = controller.m_next;\r\n        }\r\n        if (controller.m_next) {\r\n            controller.m_next.m_prev = controller.m_prev;\r\n        }\r\n        if (this.m_controllerList === controller) {\r\n            this.m_controllerList = controller.m_next;\r\n        }\r\n        --this.m_controllerCount;\r\n        controller.m_prev = null;\r\n        controller.m_next = null;\r\n        // delete controller.m_world; // = null;\r\n        return controller;\r\n    }\r\n}\r\n// #endif\r\n/// Take a time step. This performs collision detection, integration,\r\n/// and constraint solution.\r\n/// @param timeStep the amount of time to simulate, this should not vary.\r\n/// @param velocityIterations for the velocity constraint solver.\r\n/// @param positionIterations for the position constraint solver.\r\nb2World.Step_s_step = new b2TimeStep();\r\nb2World.Step_s_stepTimer = new b2Timer();\r\nb2World.Step_s_timer = new b2Timer();\r\n// #endif\r\n/// Call this to draw shapes and other debug draw data.\r\nb2World.DrawDebugData_s_color = new b2Color(0, 0, 0);\r\nb2World.DrawDebugData_s_vs = b2Vec2.MakeArray(4);\r\nb2World.DrawDebugData_s_xf = new b2Transform();\r\nb2World.QueryFixtureShape_s_aabb = new b2AABB();\r\n/// Ray-cast the world for all fixtures in the path of the ray. Your callback\r\n/// controls whether you get the closest point, any point, or n-points.\r\n/// The ray-cast ignores shapes that contain the starting point.\r\n/// @param callback a user implemented callback class.\r\n/// @param point1 the ray starting point\r\n/// @param point2 the ray ending point\r\nb2World.RayCast_s_input = new b2RayCastInput();\r\nb2World.RayCast_s_output = new b2RayCastOutput();\r\nb2World.RayCast_s_point = new b2Vec2();\r\nb2World.DrawJoint_s_p1 = new b2Vec2();\r\nb2World.DrawJoint_s_p2 = new b2Vec2();\r\nb2World.DrawJoint_s_color = new b2Color(0.5, 0.8, 0.8);\r\nb2World.DrawJoint_s_c = new b2Color();\r\nb2World.DrawShape_s_ghostColor = new b2Color();\r\nb2World.SolveTOI_s_subStep = new b2TimeStep();\r\nb2World.SolveTOI_s_backup = new b2Sweep();\r\nb2World.SolveTOI_s_backup1 = new b2Sweep();\r\nb2World.SolveTOI_s_backup2 = new b2Sweep();\r\nb2World.SolveTOI_s_toi_input = new b2TOIInput();\r\nb2World.SolveTOI_s_toi_output = new b2TOIOutput();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n/**\r\n * A controller edge is used to connect bodies and controllers\r\n * together in a bipartite graph.\r\n */\r\nexport class b2ControllerEdge {\r\n    constructor(controller, body) {\r\n        this.prevBody = null; ///< the previous controller edge in the controllers's joint list\r\n        this.nextBody = null; ///< the next controller edge in the controllers's joint list\r\n        this.prevController = null; ///< the previous controller edge in the body's joint list\r\n        this.nextController = null; ///< the next controller edge in the body's joint list\r\n        this.controller = controller;\r\n        this.body = body;\r\n    }\r\n}\r\n/**\r\n * Base class for controllers. Controllers are a convience for\r\n * encapsulating common per-step functionality.\r\n */\r\nexport class b2Controller {\r\n    constructor() {\r\n        // m_world: b2World;\r\n        this.m_bodyList = null;\r\n        this.m_bodyCount = 0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n    }\r\n    /**\r\n     * Get the next controller in the world's body list.\r\n     */\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /**\r\n     * Get the previous controller in the world's body list.\r\n     */\r\n    GetPrev() {\r\n        return this.m_prev;\r\n    }\r\n    /**\r\n     * Get the parent world of this body.\r\n     */\r\n    // GetWorld() {\r\n    //   return this.m_world;\r\n    // }\r\n    /**\r\n     * Get the attached body list\r\n     */\r\n    GetBodyList() {\r\n        return this.m_bodyList;\r\n    }\r\n    /**\r\n     * Adds a body to the controller list.\r\n     */\r\n    AddBody(body) {\r\n        const edge = new b2ControllerEdge(this, body);\r\n        //Add edge to controller list\r\n        edge.nextBody = this.m_bodyList;\r\n        edge.prevBody = null;\r\n        if (this.m_bodyList) {\r\n            this.m_bodyList.prevBody = edge;\r\n        }\r\n        this.m_bodyList = edge;\r\n        ++this.m_bodyCount;\r\n        //Add edge to body list\r\n        edge.nextController = body.m_controllerList;\r\n        edge.prevController = null;\r\n        if (body.m_controllerList) {\r\n            body.m_controllerList.prevController = edge;\r\n        }\r\n        body.m_controllerList = edge;\r\n        ++body.m_controllerCount;\r\n    }\r\n    /**\r\n     * Removes a body from the controller list.\r\n     */\r\n    RemoveBody(body) {\r\n        //Assert that the controller is not empty\r\n        if (this.m_bodyCount <= 0) {\r\n            throw new Error();\r\n        }\r\n        //Find the corresponding edge\r\n        /*b2ControllerEdge*/\r\n        let edge = this.m_bodyList;\r\n        while (edge && edge.body !== body) {\r\n            edge = edge.nextBody;\r\n        }\r\n        //Assert that we are removing a body that is currently attached to the controller\r\n        if (edge === null) {\r\n            throw new Error();\r\n        }\r\n        //Remove edge from controller list\r\n        if (edge.prevBody) {\r\n            edge.prevBody.nextBody = edge.nextBody;\r\n        }\r\n        if (edge.nextBody) {\r\n            edge.nextBody.prevBody = edge.prevBody;\r\n        }\r\n        if (this.m_bodyList === edge) {\r\n            this.m_bodyList = edge.nextBody;\r\n        }\r\n        --this.m_bodyCount;\r\n        //Remove edge from body list\r\n        if (edge.nextController) {\r\n            edge.nextController.prevController = edge.prevController;\r\n        }\r\n        if (edge.prevController) {\r\n            edge.prevController.nextController = edge.nextController;\r\n        }\r\n        if (body.m_controllerList === edge) {\r\n            body.m_controllerList = edge.nextController;\r\n        }\r\n        --body.m_controllerCount;\r\n    }\r\n    /**\r\n     * Removes all bodies from the controller list.\r\n     */\r\n    Clear() {\r\n        while (this.m_bodyList) {\r\n            this.RemoveBody(this.m_bodyList.body);\r\n        }\r\n        this.m_bodyCount = 0;\r\n    }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vQm94MkQvQ29udHJvbGxlcnMvYjJDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBUUg7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLGdCQUFnQjtJQU8zQixZQUFZLFVBQXdCLEVBQUUsSUFBWTtRQUozQyxhQUFRLEdBQTRCLElBQUksQ0FBQyxDQUFDLGlFQUFpRTtRQUMzRyxhQUFRLEdBQTRCLElBQUksQ0FBQyxDQUFDLDZEQUE2RDtRQUN2RyxtQkFBYyxHQUE0QixJQUFJLENBQUMsQ0FBQywwREFBMEQ7UUFDMUcsbUJBQWMsR0FBNEIsSUFBSSxDQUFDLENBQUMsc0RBQXNEO1FBRTNHLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQUVEOzs7R0FHRztBQUNILE1BQU0sT0FBZ0IsWUFBWTtJQUFsQztRQUNFLG9CQUFvQjtRQUNiLGVBQVUsR0FBNEIsSUFBSSxDQUFDO1FBQzNDLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ3hCLFdBQU0sR0FBd0IsSUFBSSxDQUFDO1FBQ25DLFdBQU0sR0FBd0IsSUFBSSxDQUFDO0lBcUg1QyxDQUFDO0lBekdDOztPQUVHO0lBQ0ksT0FBTztRQUNaLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRUQ7O09BRUc7SUFDSSxPQUFPO1FBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7T0FFRztJQUNILGVBQWU7SUFDZix5QkFBeUI7SUFDekIsSUFBSTtJQUVKOztPQUVHO0lBQ0ksV0FBVztRQUNoQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksT0FBTyxDQUFDLElBQVk7UUFD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","/*\r\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_CONTROLLER\r\nimport { b2Controller } from \"./b2Controller\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2_epsilon } from \"../Common/b2Settings\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\n/**\r\n * Calculates buoyancy forces for fluids in the form of a half\r\n * plane.\r\n */\r\nexport class b2BuoyancyController extends b2Controller {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * The outer surface normal\r\n         */\r\n        this.normal = new b2Vec2(0, 1);\r\n        /**\r\n         * The height of the fluid surface along the normal\r\n         */\r\n        this.offset = 0;\r\n        /**\r\n         * The fluid density\r\n         */\r\n        this.density = 0;\r\n        /**\r\n         * Fluid velocity, for drag calculations\r\n         */\r\n        this.velocity = new b2Vec2(0, 0);\r\n        /**\r\n         * Linear drag co-efficient\r\n         */\r\n        this.linearDrag = 0;\r\n        /**\r\n         * Angular drag co-efficient\r\n         */\r\n        this.angularDrag = 0;\r\n        /**\r\n         * If false, bodies are assumed to be uniformly dense, otherwise\r\n         * use the shapes densities\r\n         */\r\n        this.useDensity = false; //False by default to prevent a gotcha\r\n        /**\r\n         * If true, gravity is taken from the world instead of the\r\n         */\r\n        this.useWorldGravity = true;\r\n        /**\r\n         * Gravity vector, if the world's gravity is not used\r\n         */\r\n        this.gravity = new b2Vec2(0, 0);\r\n    }\r\n    Step(step) {\r\n        if (!this.m_bodyList) {\r\n            return;\r\n        }\r\n        if (this.useWorldGravity) {\r\n            this.gravity.Copy(this.m_bodyList.body.GetWorld().GetGravity());\r\n        }\r\n        for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n            const body = i.body;\r\n            if (!body.IsAwake()) {\r\n                //Buoyancy force is just a function of position,\r\n                //so unlike most forces, it is safe to ignore sleeping bodes\r\n                continue;\r\n            }\r\n            const areac = new b2Vec2();\r\n            const massc = new b2Vec2();\r\n            let area = 0;\r\n            let mass = 0;\r\n            for (let fixture = body.GetFixtureList(); fixture; fixture = fixture.m_next) {\r\n                const sc = new b2Vec2();\r\n                const sarea = fixture.GetShape().ComputeSubmergedArea(this.normal, this.offset, body.GetTransform(), sc);\r\n                area += sarea;\r\n                areac.x += sarea * sc.x;\r\n                areac.y += sarea * sc.y;\r\n                let shapeDensity = 0;\r\n                if (this.useDensity) {\r\n                    //TODO: Expose density publicly\r\n                    shapeDensity = fixture.GetDensity();\r\n                }\r\n                else {\r\n                    shapeDensity = 1;\r\n                }\r\n                mass += sarea * shapeDensity;\r\n                massc.x += sarea * sc.x * shapeDensity;\r\n                massc.y += sarea * sc.y * shapeDensity;\r\n            }\r\n            areac.x /= area;\r\n            areac.y /= area;\r\n            //    b2Vec2 localCentroid = b2MulT(body->GetXForm(),areac);\r\n            massc.x /= mass;\r\n            massc.y /= mass;\r\n            if (area < b2_epsilon) {\r\n                continue;\r\n            }\r\n            //Buoyancy\r\n            const buoyancyForce = this.gravity.Clone().SelfNeg();\r\n            buoyancyForce.SelfMul(this.density * area);\r\n            body.ApplyForce(buoyancyForce, massc);\r\n            //Linear drag\r\n            const dragForce = body.GetLinearVelocityFromWorldPoint(areac, new b2Vec2());\r\n            dragForce.SelfSub(this.velocity);\r\n            dragForce.SelfMul((-this.linearDrag * area));\r\n            body.ApplyForce(dragForce, areac);\r\n            //Angular drag\r\n            //TODO: Something that makes more physical sense?\r\n            body.ApplyTorque((-body.GetInertia() / body.GetMass() * area * body.GetAngularVelocity() * this.angularDrag));\r\n        }\r\n    }\r\n    Draw(debugDraw) {\r\n        const r = 100;\r\n        const p1 = new b2Vec2();\r\n        const p2 = new b2Vec2();\r\n        p1.x = this.normal.x * this.offset + this.normal.y * r;\r\n        p1.y = this.normal.y * this.offset - this.normal.x * r;\r\n        p2.x = this.normal.x * this.offset - this.normal.y * r;\r\n        p2.y = this.normal.y * this.offset + this.normal.x * r;\r\n        const color = new b2Color(0, 0, 0.8);\r\n        debugDraw.DrawSegment(p1, p2, color);\r\n    }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJCdW95YW5jeUNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9Cb3gyRC9Db250cm9sbGVycy9iMkJ1b3lhbmN5Q29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRztBQUVILDJCQUEyQjtBQUUzQixPQUFPLEVBQUUsWUFBWSxFQUFvQixNQUFNLGdCQUFnQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUUxQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbEQsT0FBTyxFQUFVLE9BQU8sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRW5EOzs7R0FHRztBQUNILE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxZQUFZO0lBQXREOztRQUNFOztXQUVHO1FBQ2EsV0FBTSxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMxQzs7V0FFRztRQUNJLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFDbEI7O1dBRUc7UUFDSSxZQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ25COztXQUVHO1FBQ2EsYUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUM1Qzs7V0FFRztRQUNJLGVBQVUsR0FBRyxDQUFDLENBQUM7UUFDdEI7O1dBRUc7UUFDSSxnQkFBVyxHQUFHLENBQUMsQ0FBQztRQUN2Qjs7O1dBR0c7UUFDSSxlQUFVLEdBQUcsS0FBSyxDQUFDLENBQUMsc0NBQXNDO1FBQ2pFOztXQUVHO1FBQ0ksb0JBQWUsR0FBRyxJQUFJLENBQUM7UUFDOUI7O1dBRUc7UUFDYSxZQUFPLEdBQUcsSUFBSSxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBeUU3QyxDQUFDO0lBdkVRLElBQUksQ0FBQyxJQUFnQjtRQUMxQixJQUFJLENBQUMsSUFB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","/*\r\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_CONTROLLER\r\nimport { b2Controller } from \"./b2Controller\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\n/**\r\n * Applies a force every frame\r\n */\r\nexport class b2ConstantAccelController extends b2Controller {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * The acceleration to apply\r\n         */\r\n        this.A = new b2Vec2(0, 0);\r\n    }\r\n    Step(step) {\r\n        const dtA = b2Vec2.MulSV(step.dt, this.A, b2ConstantAccelController.Step_s_dtA);\r\n        for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n            const body = i.body;\r\n            if (!body.IsAwake()) {\r\n                continue;\r\n            }\r\n            body.SetLinearVelocity(b2Vec2.AddVV(body.GetLinearVelocity(), dtA, b2Vec2.s_t0));\r\n        }\r\n    }\r\n    Draw(draw) { }\r\n}\r\nb2ConstantAccelController.Step_s_dtA = new b2Vec2();\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb25zdGFudEFjY2VsQ29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbnRyb2xsZXJzL2IyQ29uc3RhbnRBY2NlbENvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCwyQkFBMkI7QUFFM0IsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUkxQzs7R0FFRztBQUNILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxZQUFZO0lBQTNEOztRQUNFOztXQUVHO1FBQ2EsTUFBQyxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQWV2QyxDQUFDO0lBYlEsSUFBSSxDQUFDLElBQWdCO1FBQzFCLE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLHlCQUF5QixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2hGLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUU7WUFDL0MsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUNuQixTQUFTO2FBQ1Y7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDbEY7SUFDSCxDQUFDO0lBR00sSUFBSSxDQUFDLElBQVksSUFBRyxDQUFDOztBQUZiLG9DQUFVLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQztBQUszQyxTQUFTIn0=","/*\r\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_CONTROLLER\r\nimport { b2Controller } from \"./b2Controller\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\n/**\r\n * Applies a force every frame\r\n */\r\nexport class b2ConstantForceController extends b2Controller {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * The force to apply\r\n         */\r\n        this.F = new b2Vec2(0, 0);\r\n    }\r\n    Step(step) {\r\n        for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n            const body = i.body;\r\n            if (!body.IsAwake()) {\r\n                continue;\r\n            }\r\n            body.ApplyForce(this.F, body.GetWorldCenter());\r\n        }\r\n    }\r\n    Draw(draw) { }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb25zdGFudEZvcmNlQ29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbnRyb2xsZXJzL2IyQ29uc3RhbnRGb3JjZUNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCwyQkFBMkI7QUFFM0IsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUkxQzs7R0FFRztBQUNILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxZQUFZO0lBQTNEOztRQUNFOztXQUVHO1FBQ2EsTUFBQyxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQWF2QyxDQUFDO0lBWFEsSUFBSSxDQUFDLElBQWdCO1FBQzFCLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUU7WUFDL0MsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUNuQixTQUFTO2FBQ1Y7WUFDRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7U0FDaEQ7SUFDSCxDQUFDO0lBRU0sSUFBSSxDQUFDLElBQVksSUFBRyxDQUFDO0NBQzdCO0FBRUQsU0FBUyJ9","/*\r\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_CONTROLLER\r\nimport { b2Controller } from \"./b2Controller\";\r\nimport { b2_epsilon } from \"../Common/b2Settings\";\r\nimport { b2Sqrt, b2Vec2 } from \"../Common/b2Math\";\r\n/**\r\n * Applies simplified gravity between every pair of bodies\r\n */\r\nexport class b2GravityController extends b2Controller {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Specifies the strength of the gravitiation force\r\n         */\r\n        this.G = 1;\r\n        /**\r\n         * If true, gravity is proportional to r^-2, otherwise r^-1\r\n         */\r\n        this.invSqr = true;\r\n    }\r\n    /**\r\n     * @see b2Controller::Step\r\n     */\r\n    Step(step) {\r\n        if (this.invSqr) {\r\n            for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n                const body1 = i.body;\r\n                const p1 = body1.GetWorldCenter();\r\n                const mass1 = body1.GetMass();\r\n                for (let j = this.m_bodyList; j && j !== i; j = j.nextBody) {\r\n                    const body2 = j.body;\r\n                    const p2 = body2.GetWorldCenter();\r\n                    const mass2 = body2.GetMass();\r\n                    const dx = p2.x - p1.x;\r\n                    const dy = p2.y - p1.y;\r\n                    const r2 = dx * dx + dy * dy;\r\n                    if (r2 < b2_epsilon) {\r\n                        continue;\r\n                    }\r\n                    const f = b2GravityController.Step_s_f.Set(dx, dy);\r\n                    f.SelfMul(this.G / r2 / b2Sqrt(r2) * mass1 * mass2);\r\n                    if (body1.IsAwake()) {\r\n                        body1.ApplyForce(f, p1);\r\n                    }\r\n                    if (body2.IsAwake()) {\r\n                        body2.ApplyForce(f.SelfMul(-1), p2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n                const body1 = i.body;\r\n                const p1 = body1.GetWorldCenter();\r\n                const mass1 = body1.GetMass();\r\n                for (let j = this.m_bodyList; j && j !== i; j = j.nextBody) {\r\n                    const body2 = j.body;\r\n                    const p2 = body2.GetWorldCenter();\r\n                    const mass2 = body2.GetMass();\r\n                    const dx = p2.x - p1.x;\r\n                    const dy = p2.y - p1.y;\r\n                    const r2 = dx * dx + dy * dy;\r\n                    if (r2 < b2_epsilon) {\r\n                        continue;\r\n                    }\r\n                    const f = b2GravityController.Step_s_f.Set(dx, dy);\r\n                    f.SelfMul(this.G / r2 * mass1 * mass2);\r\n                    if (body1.IsAwake()) {\r\n                        body1.ApplyForce(f, p1);\r\n                    }\r\n                    if (body2.IsAwake()) {\r\n                        body2.ApplyForce(f.SelfMul(-1), p2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Draw(draw) { }\r\n}\r\nb2GravityController.Step_s_f = new b2Vec2();\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJHcmF2aXR5Q29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbnRyb2xsZXJzL2IyR3Jhdml0eUNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCwyQkFBMkI7QUFFM0IsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTlDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBR2xEOztHQUVHO0FBQ0gsTUFBTSxPQUFPLG1CQUFvQixTQUFRLFlBQVk7SUFBckQ7O1FBQ0U7O1dBRUc7UUFDSSxNQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2I7O1dBRUc7UUFDSSxXQUFNLEdBQUcsSUFBSSxDQUFDO0lBNkR2QixDQUFDO0lBM0RDOztPQUVHO0lBQ0ksSUFBSSxDQUFDLElBQWdCO1FBQzFCLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUU7Z0JBQy9DLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQ3JCLE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFDbEMsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUM5QixLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUU7b0JBQzFELE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7b0JBQ3JCLE1B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","/*\r\n * Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_CONTROLLER\r\nimport { b2Controller } from \"./b2Controller\";\r\nimport { b2Mat22, b2Vec2, b2Max } from \"../Common/b2Math\";\r\nimport { b2_epsilon } from \"../Common/b2Settings\";\r\n/**\r\n * Applies top down linear damping to the controlled bodies\r\n * The damping is calculated by multiplying velocity by a matrix\r\n * in local co-ordinates.\r\n */\r\nexport class b2TensorDampingController extends b2Controller {\r\n    constructor() {\r\n        super(...arguments);\r\n        /// Tensor to use in damping model\r\n        this.T = new b2Mat22();\r\n        /*Some examples (matrixes in format (row1; row2))\r\n        (-a 0; 0 -a)    Standard isotropic damping with strength a\r\n        ( 0 a; -a 0)    Electron in fixed field - a force at right angles to velocity with proportional magnitude\r\n        (-a 0; 0 -b)    Differing x and y damping. Useful e.g. for top-down wheels.\r\n        */\r\n        //By the way, tensor in this case just means matrix, don't let the terminology get you down.\r\n        /// Set this to a positive number to clamp the maximum amount of damping done.\r\n        this.maxTimestep = 0;\r\n    }\r\n    // Typically one wants maxTimestep to be 1/(max eigenvalue of T), so that damping will never cause something to reverse direction\r\n    /**\r\n     * @see b2Controller::Step\r\n     */\r\n    Step(step) {\r\n        let timestep = step.dt;\r\n        if (timestep <= b2_epsilon) {\r\n            return;\r\n        }\r\n        if (timestep > this.maxTimestep && this.maxTimestep > 0) {\r\n            timestep = this.maxTimestep;\r\n        }\r\n        for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n            const body = i.body;\r\n            if (!body.IsAwake()) {\r\n                continue;\r\n            }\r\n            const damping = body.GetWorldVector(b2Mat22.MulMV(this.T, body.GetLocalVector(body.GetLinearVelocity(), b2Vec2.s_t0), b2Vec2.s_t1), b2TensorDampingController.Step_s_damping);\r\n            //    body->SetLinearVelocity(body->GetLinearVelocity() + timestep * damping);\r\n            body.SetLinearVelocity(b2Vec2.AddVV(body.GetLinearVelocity(), b2Vec2.MulSV(timestep, damping, b2Vec2.s_t0), b2Vec2.s_t1));\r\n        }\r\n    }\r\n    Draw(draw) { }\r\n    /**\r\n     * Sets damping independantly along the x and y axes\r\n     */\r\n    SetAxisAligned(xDamping, yDamping) {\r\n        this.T.ex.x = (-xDamping);\r\n        this.T.ex.y = 0;\r\n        this.T.ey.x = 0;\r\n        this.T.ey.y = (-yDamping);\r\n        if (xDamping > 0 || yDamping > 0) {\r\n            this.maxTimestep = 1 / b2Max(xDamping, yDamping);\r\n        }\r\n        else {\r\n            this.maxTimestep = 0;\r\n        }\r\n    }\r\n}\r\nb2TensorDampingController.Step_s_damping = new b2Vec2();\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJUZW5zb3JEYW1waW5nQ29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL0JveDJEL0NvbnRyb2xsZXJzL2IyVGVuc29yRGFtcGluZ0NvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCwyQkFBMkI7QUFFM0IsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTFELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUdsRDs7OztHQUlHO0FBQ0gsTUFBTSxPQUFPLHlCQUEwQixTQUFRLFlBQVk7SUFBM0Q7O1FBQ0ksa0NBQWtDO1FBQ2xCLE1BQUMsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQ2xDOzs7O1VBSUU7UUFDRiw0RkFBNEY7UUFFNUYsOEVBQThFO1FBQ3ZFLGdCQUFXLEdBQUcsQ0FBQyxDQUFDO0lBaUQzQixDQUFDO0lBaERHLGlJQUFpSTtJQUVqSTs7T0FFRztJQUNJLElBQUksQ0FBQyxJQUFnQjtRQUN4QixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3ZCLElBQUksUUFBUSxJQUFJLFVBQVUsRUFBRTtZQUN4QixPQUFPO1NBQ1Y7UUFDRCxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxFQUFFO1lBQ3JELFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQy9CO1FBQ0QsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRTtZQUM3QyxNQUFNLElBQUksR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUU7Z0JBQ2pCLFNBQVM7YUFDWjtZQUNELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQ25DLE9BQU8sQ0FBQyxLQUFLLENBQ1QsSUFBSSxDQUFDLENBQUMsRUFDTixJQUFJLENBQUMsY0FBYyxDQUNuQixJQUFJLENBQUMsaUJBQWlCLEVBQUUsRUFDeEIsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUNaLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFDaEIseUJBQXlCLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDMUMsOEVBQThFO1lBQzlFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDN0g7SUFDTCxDQUFDO0lBR00sSUFBSSxDQUFDLElBQVksSUFBRyxDQUFDO0lBRTVCOztPQUVHO0lBQ0ksY0FBYyxDQUFDLFFBQWdCLEVBQUUsUUFBZ0I7UUFDdEQsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDaEIsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMxQixJQUFJLFFBQVEsR0FBRyxDQUFDLElBQUksUUFBUSxHQUFHLENBQUMsRUFBRTtZQUNoQyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQ2xEO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztTQUN0QjtJQUNILENBQUM7O0FBakJjLHdDQUFjLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQztBQW9CakQsU0FBUyJ9","/*\r\n* Copyright (c) 2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_pi, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2Atan2, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\n///\r\nexport class b2RopeDef {\r\n    constructor() {\r\n        ///\r\n        this.vertices = [];\r\n        ///\r\n        this.count = 0;\r\n        ///\r\n        this.masses = [];\r\n        ///\r\n        this.gravity = new b2Vec2(0, 0);\r\n        ///\r\n        this.damping = 0.1;\r\n        /// Stretching stiffness\r\n        this.k2 = 0.9;\r\n        /// Bending stiffness. Values above 0.5 can make the simulation blow up.\r\n        this.k3 = 0.1;\r\n    }\r\n}\r\n///\r\nexport class b2Rope {\r\n    constructor() {\r\n        this.m_count = 0;\r\n        this.m_ps = [];\r\n        this.m_p0s = [];\r\n        this.m_vs = [];\r\n        this.m_ims = [];\r\n        this.m_Ls = [];\r\n        this.m_as = [];\r\n        this.m_gravity = new b2Vec2();\r\n        this.m_damping = 0;\r\n        this.m_k2 = 1;\r\n        this.m_k3 = 0.1;\r\n    }\r\n    GetVertexCount() {\r\n        return this.m_count;\r\n    }\r\n    GetVertices() {\r\n        return this.m_ps;\r\n    }\r\n    ///\r\n    Initialize(def) {\r\n        // DEBUG: b2Assert(def.count >= 3);\r\n        this.m_count = def.count;\r\n        // this.m_ps = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_ps = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_p0s = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_p0s = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_vs = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_vs = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_ims = (float32*)b2Alloc(this.m_count * sizeof(float32));\r\n        this.m_ims = b2MakeNumberArray(this.m_count);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_ps[i].Copy(def.vertices[i]);\r\n            this.m_p0s[i].Copy(def.vertices[i]);\r\n            this.m_vs[i].SetZero();\r\n            const m = def.masses[i];\r\n            if (m > 0) {\r\n                this.m_ims[i] = 1 / m;\r\n            }\r\n            else {\r\n                this.m_ims[i] = 0;\r\n            }\r\n        }\r\n        const count2 = this.m_count - 1;\r\n        const count3 = this.m_count - 2;\r\n        // this.m_Ls = (float32*)be2Alloc(count2 * sizeof(float32));\r\n        this.m_Ls = b2MakeNumberArray(count2);\r\n        // this.m_as = (float32*)b2Alloc(count3 * sizeof(float32));\r\n        this.m_as = b2MakeNumberArray(count3);\r\n        for (let i = 0; i < count2; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            this.m_Ls[i] = b2Vec2.DistanceVV(p1, p2);\r\n        }\r\n        for (let i = 0; i < count3; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const p3 = this.m_ps[i + 2];\r\n            const d1 = b2Vec2.SubVV(p2, p1, b2Vec2.s_t0);\r\n            const d2 = b2Vec2.SubVV(p3, p2, b2Vec2.s_t1);\r\n            const a = b2Vec2.CrossVV(d1, d2);\r\n            const b = b2Vec2.DotVV(d1, d2);\r\n            this.m_as[i] = b2Atan2(a, b);\r\n        }\r\n        this.m_gravity.Copy(def.gravity);\r\n        this.m_damping = def.damping;\r\n        this.m_k2 = def.k2;\r\n        this.m_k3 = def.k3;\r\n    }\r\n    ///\r\n    Step(h, iterations) {\r\n        if (h === 0) {\r\n            return;\r\n        }\r\n        const d = Math.exp(-h * this.m_damping);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_p0s[i].Copy(this.m_ps[i]);\r\n            if (this.m_ims[i] > 0) {\r\n                this.m_vs[i].SelfMulAdd(h, this.m_gravity);\r\n            }\r\n            this.m_vs[i].SelfMul(d);\r\n            this.m_ps[i].SelfMulAdd(h, this.m_vs[i]);\r\n        }\r\n        for (let i = 0; i < iterations; ++i) {\r\n            this.SolveC2();\r\n            this.SolveC3();\r\n            this.SolveC2();\r\n        }\r\n        const inv_h = 1 / h;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            b2Vec2.MulSV(inv_h, b2Vec2.SubVV(this.m_ps[i], this.m_p0s[i], b2Vec2.s_t0), this.m_vs[i]);\r\n        }\r\n    }\r\n    SolveC2() {\r\n        const count2 = this.m_count - 1;\r\n        for (let i = 0; i < count2; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const d = b2Vec2.SubVV(p2, p1, b2Rope.s_d);\r\n            const L = d.Normalize();\r\n            const im1 = this.m_ims[i];\r\n            const im2 = this.m_ims[i + 1];\r\n            if (im1 + im2 === 0) {\r\n                continue;\r\n            }\r\n            const s1 = im1 / (im1 + im2);\r\n            const s2 = im2 / (im1 + im2);\r\n            p1.SelfMulSub(this.m_k2 * s1 * (this.m_Ls[i] - L), d);\r\n            p2.SelfMulAdd(this.m_k2 * s2 * (this.m_Ls[i] - L), d);\r\n            // this.m_ps[i] = p1;\r\n            // this.m_ps[i + 1] = p2;\r\n        }\r\n    }\r\n    SetAngle(angle) {\r\n        const count3 = this.m_count - 2;\r\n        for (let i = 0; i < count3; ++i) {\r\n            this.m_as[i] = angle;\r\n        }\r\n    }\r\n    SolveC3() {\r\n        const count3 = this.m_count - 2;\r\n        for (let i = 0; i < count3; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const p3 = this.m_ps[i + 2];\r\n            const m1 = this.m_ims[i];\r\n            const m2 = this.m_ims[i + 1];\r\n            const m3 = this.m_ims[i + 2];\r\n            const d1 = b2Vec2.SubVV(p2, p1, b2Rope.s_d1);\r\n            const d2 = b2Vec2.SubVV(p3, p2, b2Rope.s_d2);\r\n            const L1sqr = d1.LengthSquared();\r\n            const L2sqr = d2.LengthSquared();\r\n            if (L1sqr * L2sqr === 0) {\r\n                continue;\r\n            }\r\n            const a = b2Vec2.CrossVV(d1, d2);\r\n            const b = b2Vec2.DotVV(d1, d2);\r\n            let angle = b2Atan2(a, b);\r\n            const Jd1 = b2Vec2.MulSV((-1 / L1sqr), d1.SelfSkew(), b2Rope.s_Jd1);\r\n            const Jd2 = b2Vec2.MulSV((1 / L2sqr), d2.SelfSkew(), b2Rope.s_Jd2);\r\n            const J1 = b2Vec2.NegV(Jd1, b2Rope.s_J1);\r\n            const J2 = b2Vec2.SubVV(Jd1, Jd2, b2Rope.s_J2);\r\n            const J3 = Jd2;\r\n            let mass = m1 * b2Vec2.DotVV(J1, J1) + m2 * b2Vec2.DotVV(J2, J2) + m3 * b2Vec2.DotVV(J3, J3);\r\n            if (mass === 0) {\r\n                continue;\r\n            }\r\n            mass = 1 / mass;\r\n            let C = angle - this.m_as[i];\r\n            while (C > b2_pi) {\r\n                angle -= 2 * b2_pi;\r\n                C = angle - this.m_as[i];\r\n            }\r\n            while (C < -b2_pi) {\r\n                angle += 2 * b2_pi;\r\n                C = angle - this.m_as[i];\r\n            }\r\n            const impulse = -this.m_k3 * mass * C;\r\n            p1.SelfMulAdd((m1 * impulse), J1);\r\n            p2.SelfMulAdd((m2 * impulse), J2);\r\n            p3.SelfMulAdd((m3 * impulse), J3);\r\n            // this.m_ps[i] = p1;\r\n            // this.m_ps[i + 1] = p2;\r\n            // this.m_ps[i + 2] = p3;\r\n        }\r\n    }\r\n    Draw(draw) {\r\n        const c = new b2Color(0.4, 0.5, 0.7);\r\n        for (let i = 0; i < this.m_count - 1; ++i) {\r\n            draw.DrawSegment(this.m_ps[i], this.m_ps[i + 1], c);\r\n        }\r\n    }\r\n}\r\n///\r\nb2Rope.s_d = new b2Vec2();\r\nb2Rope.s_d1 = new b2Vec2();\r\nb2Rope.s_d2 = new b2Vec2();\r\nb2Rope.s_Jd1 = new b2Vec2();\r\nb2Rope.s_Jd2 = new b2Vec2();\r\nb2Rope.s_J1 = new b2Vec2();\r\nb2Rope.s_J2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/**\r\n * \\mainpage Box2D API Documentation\r\n * \\section intro_sec Getting Started\r\n * For documentation please see http://box2d.org/documentation.html\r\n * For discussion please visit http://box2d.org/forum\r\n */\r\n// These include files constitute the main Box2D API\r\nexport * from \"./Common/b2Settings\";\r\nexport * from \"./Common/b2Math\";\r\nexport * from \"./Common/b2Draw\";\r\nexport * from \"./Common/b2Timer\";\r\nexport * from \"./Common/b2GrowableStack\";\r\nexport * from \"./Common/b2BlockAllocator\";\r\nexport * from \"./Common/b2StackAllocator\";\r\nexport * from \"./Collision/b2Collision\";\r\nexport * from \"./Collision/b2Distance\";\r\nexport * from \"./Collision/b2BroadPhase\";\r\nexport * from \"./Collision/b2DynamicTree\";\r\nexport * from \"./Collision/b2TimeOfImpact\";\r\nexport * from \"./Collision/b2CollideCircle\";\r\nexport * from \"./Collision/b2CollidePolygon\";\r\nexport * from \"./Collision/b2CollideEdge\";\r\nexport * from \"./Collision/Shapes/b2Shape\";\r\nexport * from \"./Collision/Shapes/b2CircleShape\";\r\nexport * from \"./Collision/Shapes/b2PolygonShape\";\r\nexport * from \"./Collision/Shapes/b2EdgeShape\";\r\nexport * from \"./Collision/Shapes/b2ChainShape\";\r\nexport * from \"./Dynamics/b2Fixture\";\r\nexport * from \"./Dynamics/b2Body\";\r\nexport * from \"./Dynamics/b2World\";\r\nexport * from \"./Dynamics/b2WorldCallbacks\";\r\nexport * from \"./Dynamics/b2Island\";\r\nexport * from \"./Dynamics/b2TimeStep\";\r\nexport * from \"./Dynamics/b2ContactManager\";\r\nexport * from \"./Dynamics/Contacts/b2Contact\";\r\nexport * from \"./Dynamics/Contacts/b2ContactFactory\";\r\nexport * from \"./Dynamics/Contacts/b2ContactSolver\";\r\nexport * from \"./Dynamics/Contacts/b2CircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2PolygonContact\";\r\nexport * from \"./Dynamics/Contacts/b2PolygonAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2EdgeAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2EdgeAndPolygonContact\";\r\nexport * from \"./Dynamics/Contacts/b2ChainAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2ChainAndPolygonContact\";\r\nexport * from \"./Dynamics/Joints/b2Joint\";\r\nexport * from \"./Dynamics/Joints/b2AreaJoint\";\r\nexport * from \"./Dynamics/Joints/b2DistanceJoint\";\r\nexport * from \"./Dynamics/Joints/b2FrictionJoint\";\r\nexport * from \"./Dynamics/Joints/b2GearJoint\";\r\nexport * from \"./Dynamics/Joints/b2MotorJoint\";\r\nexport * from \"./Dynamics/Joints/b2MouseJoint\";\r\nexport * from \"./Dynamics/Joints/b2PrismaticJoint\";\r\nexport * from \"./Dynamics/Joints/b2PulleyJoint\";\r\nexport * from \"./Dynamics/Joints/b2RevoluteJoint\";\r\nexport * from \"./Dynamics/Joints/b2RopeJoint\";\r\nexport * from \"./Dynamics/Joints/b2WeldJoint\";\r\nexport * from \"./Dynamics/Joints/b2WheelJoint\";\r\n// #if B2_ENABLE_CONTROLLER\r\nexport * from \"./Controllers/b2Controller\";\r\nexport * from \"./Controllers/b2BuoyancyController\";\r\nexport * from \"./Controllers/b2ConstantAccelController\";\r\nexport * from \"./Controllers/b2ConstantForceController\";\r\nexport * from \"./Controllers/b2GravityController\";\r\nexport * from \"./Controllers/b2TensorDampingController\";\r\n// #endif\r\n// #if B2_ENABLE_PARTICLE\r\nexport * from \"./Particle/b2Particle\";\r\nexport * from \"./Particle/b2ParticleGroup\";\r\nexport * from \"./Particle/b2ParticleSystem\";\r\n// #endif\r\nexport * from \"./Rope/b2Rope\";\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm94MkQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9Cb3gyRC9Cb3gyRC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGOzs7OztHQUtHO0FBRUgsb0RBQW9EO0FBRXBELGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLGlCQUFpQixDQUFDO0FBQ2hDLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLDJCQUEyQixDQUFDO0FBQzFDLGNBQWMsMkJBQTJCLENBQUM7QUFFMUMsY0FBYyx5QkFBeUIsQ0FBQztBQUN4QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyw4QkFBOEIsQ0FBQztBQUM3QyxjQUFjLDJCQUEyQixDQUFDO0FBRTFDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxpQ0FBaUMsQ0FBQztBQUVoRCxjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYyx1QkFBdUIsQ0FBQztBQUN0QyxjQUFjLDZCQUE2QixDQUFDO0FBRTVDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLHFDQUFxQyxDQUFDO0FBQ3BELGNBQWMscUNBQXFDLENBQUM7QUFDcEQsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLCtDQUErQyxDQUFDO0FBQzlELGNBQWMsNENBQTRDLENBQUM7QUFDM0QsY0FBYyw2Q0FBNkMsQ0FBQztBQUM1RCxjQUFjLDZDQUE2QyxDQUFDO0FBQzVELGNBQWMsOENBQThDLENBQUM7QUFFN0QsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsbUNBQW1DLENBQUM7QUFDbEQsY0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLG9DQUFvQyxDQUFDO0FBQ25ELGNBQWMsaUNBQWlDLENBQUM7QUFDaEQsY0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUUvQywyQkFBMkI7QUFDM0IsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLG9DQUFvQyxDQUFDO0FBQ25ELGNBQWMseUNBQXlDLENBQUM7QUFDeEQsY0FBYyx5Q0FBeUMsQ0FBQztBQUN4RCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMseUNBQXlDLENBQUM7QUFDeEQsU0FBUztBQUVULHlCQUF5QjtBQUN6QixjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyw2QkFBNkIsQ0FBQztBQUM1QyxTQUFTO0FBRVQsY0FBYyxlQUFlLENBQUMifQ==","﻿\r\nimport {\r\n\tb2Vec2, b2Transform, b2Rot,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact,\r\n} from \"./Physics.js\";\r\n\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { Rectangle } from \"../math.js\";\r\n\r\n\r\nexport class FootholdChain {\r\n\t/**\r\n\t * @param {number} id\r\n\t */\r\n\tconstructor(id) {\r\n\t\tthis.id = id;\r\n\r\n\t\t/** @type {FootholdSingle[]} */\r\n\t\tthis.footholds = [];\r\n\r\n\t\tthis.bound = new Rectangle();\r\n\r\n\t\tthis.loop = false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {FootholdSingle} head - foothold chain head\r\n\t * @param {FootholdSingle[]} map_footholds - map footholds\r\n\t * @param {function} type - foothold constructor\r\n\t */\r\n\tinit(head, map_footholds, type) {\r\n\t\tlet left, top, right, bottom;\r\n\r\n\t\tleft = head.x1;\r\n\t\ttop = head.y1;\r\n\t\tright = head.x2;\r\n\t\tbottom = head.y2;\r\n\r\n\t\tfor (let fh = head, childIndex = 0; fh != null; fh = map_footholds[fh.next], ++childIndex) {\r\n\t\t\tleft = Math.min(left, fh.x1, fh.x2);\r\n\t\t\ttop = Math.min(top, fh.y1, fh.y2);\r\n\t\t\tright = Math.max(right, fh.x1, fh.x2);\r\n\t\t\tbottom = Math.max(bottom, fh.y1, fh.y2);\r\n\r\n\t\t\tthis.footholds.push(fh);\r\n\r\n\t\t\tif (fh.next == head.id) {\r\n\t\t\t\tthis.loop = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.bound.parse(left, top, right, bottom);\r\n\r\n\t\tthis.FootholdType = type;\r\n\r\n\t\tif (type == FootholdSingle) {\r\n\t\t\tthis.footholds.forEach((fh, childIndex) => {\r\n\t\t\t\tfh.init(this, childIndex);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if (type == FootholdChainChild) {\r\n\t\t\tlet center = this.bound.center;\r\n\t\t\tlet xf = new b2Transform();\r\n\r\n\t\t\txf.SetPositionXY(center.x, center.y);\r\n\r\n\t\t\tthis.footholds.forEach((fh, childIndex) => {\r\n\t\t\t\tfh.init(this, childIndex, xf);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} childIndex\r\n\t * @returns {FootholdChainChild}\r\n\t */\r\n\tgetFootholdFromContact(childIndex) {\r\n\t\treturn this.footholds[childIndex];\r\n\t}\r\n}\r\n\r\nexport class FootholdSingle {\r\n\t/**\r\n\t * @param {object} _raw\r\n\t * @param {number} index\r\n\t * @param {number} layerIndex\r\n\t * @param {number} groupIndex\r\n\t */\r\n\tconstructor(_raw, index, layerIndex, groupIndex) {\r\n\t\tthis._raw = _raw;\r\n\r\n\t\t// ground.footholds\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.layer = layerIndex | 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.group = groupIndex | 0;\r\n\r\n\t\t/** @type {number} - in ground.footholds */\r\n\t\tthis.id = index;\r\n\t\t\r\n\t\t/** @type {number} - prev id */\r\n\t\tthis.prev = _raw.prev ? (_raw.prev - 1) : null;\r\n\r\n\t\t/** @type {number} - next id */\r\n\t\tthis.next = _raw.next ? (_raw.next - 1) : null;\r\n\r\n\t\t// chain.footholds\r\n\r\n\t\t/** @type {FootholdChain} */\r\n\t\tthis.chain = null;\r\n\r\n\t\t/** @type {number} - in chain.footholds */\r\n\t\tthis.childIndex = null;\r\n\r\n\t\t// body\r\n\t\t\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.m_angle = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.m_length = 0;\r\n\r\n\t\t// debug\r\n\r\n\t\t/** @type {number} - this和next_fh的夾角 */\r\n\t\tthis.next_a = undefined;\r\n\r\n\t\tthis.next_a_deg = undefined;\r\n\t\t\r\n\t\tthis.$showDebugInfo = false;\r\n\t}\r\n\t\r\n\tgetFootholdFromContact() {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {FootholdChain} chain\r\n\t * @param {number} childIndex\r\n\t * @param {b2Transform} body_xf\r\n\t */\r\n\tinit(chain, childIndex, body_xf) {\r\n\t\tlet x1, y1, x2, y2;\r\n\t\t\r\n\t\tthis.chain = chain;\r\n\t\tthis.childIndex = childIndex;\r\n\r\n\t\tx1 = this.x1 / $gv.CANVAS_SCALE;\r\n\t\ty1 = this.y1 / $gv.CANVAS_SCALE;\r\n\t\tx2 = this.x2 / $gv.CANVAS_SCALE;\r\n\t\ty2 = this.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\tconst dx = x2 - x1;\r\n\t\tconst dy = y2 - y1;\r\n\r\n\t\tif (dy == 0) {\r\n\t\t\tthis.m_angle = dx < 0 ? Math.PI : 0;\r\n\t\t\tthis.m_length = dx;\r\n\t\t}\r\n\t\telse if (dx == 0) {\r\n\t\t\tthis.m_angle = dy < 0 ? (-Math.PI * 0.5) : (Math.PI * 0.5);\r\n\t\t\tthis.m_length = dy;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.m_angle = Math.atan2(dy, dx);\r\n\t\t\tthis.m_length = Math.sqrt(dy ** 2 + dx ** 2);\r\n\t\t}\r\n\t}\r\n\r\n\tGetVertex1() {\r\n\t\treturn new b2Vec2(this.x1 / $gv.CANVAS_SCALE, this.y1 / $gv.CANVAS_SCALE);\r\n\t}\r\n\r\n\tGetVertex2() {\r\n\t\treturn new b2Vec2(this.x2 / $gv.CANVAS_SCALE, this.y2 / $gv.CANVAS_SCALE);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tGetWorldCenter() {\r\n\t\treturn this.body.GetWorldCenter();\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalPoint(worldPoint, out) {\r\n\t\treturn this.body.GetLocalPoint(worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n\t\treturn this.body.GetLinearVelocityFromWorldPoint(worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldVector\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalVector(worldVector, out) {\r\n\t\treturn this.body.GetLocalVector(worldVector, out);\r\n\t}\r\n\r\n\t/** @type {FootholdSingle} */\r\n\tget next_fh() {\r\n\t\tconst footholds = this.body.m_world.ground.footholds;\r\n\t\treturn footholds[this.next];\r\n\t}\r\n\t/** @type {FootholdSingle} */\r\n\tget prev_fh() {\r\n\t\tconst footholds = this.body.m_world.ground.footholds;\r\n\t\treturn footholds[this.prev];\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget x1() { return this._raw.x1; }\r\n\t/** @type {number} */\r\n\tget y1() { return this._raw.y1; }\r\n\t/** @type {number} */\r\n\tget x2() { return this._raw.x2; }\r\n\t/** @type {number} */\r\n\tget y2() { return this._raw.y2; }\r\n\r\n\tget is_empty() {\r\n\t\treturn this.is_first && this.is_last;\r\n\t}\r\n\tget is_first() {\r\n\t\treturn this._raw.prev == 0;\r\n\t}\r\n\tget is_last() {\r\n\t\treturn this._raw.next == 0;\r\n\t}\r\n\tget is_wall() {\r\n\t\treturn this.x1 == this.x2;\r\n\t}\r\n\tget _is_horizontal_floor() {\r\n\t\treturn this.y1 == this.y2;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLine(ctx) {\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(this.x1, this.y1);\r\n\t\tctx.lineTo(this.x2, this.y2);\r\n\t\tctx.stroke();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLineV01(ctx) {\r\n\t\tif (this.m_hasVertex0) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.moveTo(this.x0, this.y0);\r\n\t\t\tctx.lineTo(this.x1, this.y1);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLineV23(ctx) {\r\n\t\tif (this.m_hasVertex3) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.moveTo(this.x2, this.y2);\r\n\t\t\tctx.lineTo(this.x3, this.y3);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\t$_text_pos(x1, y1, x2, y2) {\r\n\t\treturn {\r\n\t\t\tx: (x2 + x1) / 2,\r\n\t\t\ty: Math.max(y2, y1),\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t$drawDebugInfo(renderer) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst fh = this;\r\n\t\tconst text = `[${fh.id}](${fh.x1}, ${fh.y1})[${fh.group}]{${fh._raw.piece}}∠${fh.next_a_deg}`;\r\n\r\n\t\tconst ta = ctx.textAlign, tb = ctx.textBaseline;\r\n\t\tconst tp = this.$_text_pos(fh.x1, fh.y1, fh.x2, fh.y2);\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"top\";\r\n\r\n\t\tctx.lineWidth = 5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#FF00FF\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.strokeText(text, tp.x, tp.y);\r\n\r\n\t\tctx.fillStyle = \"#FFF\";\r\n\t\tctx.fillText(text, tp.x, tp.y);\r\n\r\n\t\t//ctx.fillText(`[${fh.piece}][1](${fh.x2}, ${fh.y2})`, fh.x2, fh.y2);\r\n\r\n\t\tctx.textAlign = ta;\r\n\t\tctx.textBaseline = tb;\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} color\r\n\t */\r\n\t$drawDebugInfo2(renderer, color) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst fh = this;\r\n\t\tconst text = `${fh.prev}<${fh.id}>${fh.next} C{${fh.chain.id}} (${fh.x1}, ${fh.y1})(${fh.x2}, ${fh.y2}) L[${fh.layer}] G[${fh.group}] P{${fh._raw.piece}}∠${fh.next_a_deg}`;\r\n\r\n\t\tlet ta = ctx.textAlign, tb = ctx.textBaseline;\r\n\t\tconst tp = this.$_text_pos(fh.x1, fh.y1, fh.x2, fh.y2);\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"top\";\r\n\r\n\t\tctx.lineWidth = 5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = color || \"#FF00FF\";\r\n\t\tfh._drawLine(ctx);\r\n\t\t\r\n\t\t//ctx.strokeStyle = \"#FF0\";\r\n\t\t//fh._drawLineV01(ctx);\r\n\t\t//fh._drawLineV23(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.strokeText(text, tp.x, tp.y);\r\n\r\n\t\tctx.fillStyle = \"#FFF\";\r\n\t\tctx.fillText(text, tp.x, tp.y);\r\n\r\n\t\t//ctx.fillText(`[${fh.piece}][1](${fh.x2}, ${fh.y2})`, fh.x2, fh.y2);\r\n\r\n\t\tctx.textAlign = ta;\r\n\t\tctx.textBaseline = tb;\r\n\t}\r\n}\r\n\r\nexport class FootholdChainChild extends FootholdSingle {\r\n\tconstructor(_raw, index, layerIndex, groupIndex) {\r\n\t\tsuper(_raw, index, layerIndex, groupIndex);\r\n\r\n\t\t/** @type {b2Transform} - local */\r\n\t\tthis.m_xf = new b2Transform();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {FootholdChain} chain\r\n\t * @param {number} childIndex\r\n\t * @param {b2Transform} body_xf\r\n\t */\r\n\tinit(chain, childIndex, body_xf) {\r\n\t\tsuper.init(chain, childIndex, body_xf);\r\n\t\t\r\n\t\tb2Vec2.AddVV(this.GetVertex1(), this.GetVertex2(), this.m_xf.p);\r\n\t\tb2Vec2.MulVS(this.m_xf.p, 0.5, this.m_xf.p);\r\n\t\tthis.m_xf.SetRotationAngle(this.m_angle);\r\n\r\n\t\tb2Transform.MulTXX(this.m_xf, body_xf, this.m_xf);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tGetWorldCenter() {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn xf.p;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalPoint(worldPoint, out) {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn b2Transform.MulTXV(xf, worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n\t\tconst body = this.body;\r\n\t\treturn b2Vec2.AddVCrossSV(body.m_linearVelocity, body.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.GetWorldCenter(), b2Vec2.s_t0), out);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldVector\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalVector(worldVector, out) {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn b2Rot.MulTRV(xf.q, worldVector, out);\r\n\t}\r\n}\r\n","﻿\r\nimport {\r\n\tb2_polygonRadius,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2PolygonShape, b2EdgeShape, b2ChainShape,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact, b2Manifold, b2ContactImpulse, b2WorldManifold\r\n} from \"./Physics.js\";\r\n\r\nimport { Vec2, Rectangle } from \"../math.js\";\r\n\r\nimport { World, GRAVITY } from \"./World.js\";\r\nimport { FootholdChain, FootholdSingle, FootholdChainChild} from \"./Foothold.js\";\r\n\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport const Foothold = FootholdSingle;\r\n//export const Foothold = FootholdChainChild;\r\n\r\n\r\n/**\r\n * 可以防止player卡在foothold裡面\r\n */\r\nwindow.CREATE_SOLID_FOOTHOLD = false;\r\n/**\r\n * polygon + edge\r\n */\r\nwindow.CREATE_SOLID_AND_EDGE_FOOTHOLD = false;\r\n\r\n/**\r\n * b2EdgeShape ghost vertex\r\n */\r\nwindow.USE_GHOST_VERTEX = true;\r\n\r\nwindow.FOOTHOLD_IS_BULLET = true;\r\n\r\n/**\r\n * @param {number} left\r\n * @param {number} right\r\n * @param {number} interpolater - 0~1\r\n */\r\nfunction lerp(left, right, interpolater) {\r\n\treturn left + interpolater * (right - left);\r\n}\r\n\r\nexport class Ground {\r\n\tconstructor() {\r\n\t\t/** @type {b2Body[]} */\r\n\t\tthis.bodies = null;\r\n\r\n\t\t/** @type {Foothold[]} */\r\n\t\tthis.footholds = null;\r\n\t\t\r\n\t\t/** @type {Rectangle[]} */\r\n\t\tthis.rectChains = null;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.footholds = [];\r\n\t\tthis.bodies = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {object} data\r\n\t * @param {World} world\r\n\t */\r\n\tload(map_raw_data, world) {\r\n\t\tif (!(\"foothold\" in map_raw_data)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (let layerIndex in map_raw_data.foothold) {\r\n\t\t\tlet groups = map_raw_data.foothold[layerIndex];\r\n\r\n\t\t\t//foothold[5] maybe is Bounding-Box(loop line)\r\n\r\n\t\t\tfor (let groupIndex in groups) {\r\n\t\t\t\tlet segment = groups[groupIndex];\r\n\t\t\t\tfor (let k in segment) {\r\n\t\t\t\t\tconst index = k - 1;\r\n\r\n\t\t\t\t\tlet fh = new Foothold(segment[k], index, layerIndex, groupIndex);\r\n\r\n\t\t\t\t\tthis.footholds[index] = fh;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/** @type {FootholdChain[]} */\r\n\t\tlet chains = [];\r\n\r\n\t\tlet chainId = 0;\r\n\t\tlet rectChains = this.rectChains = [];\r\n\r\n\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\tconst foothold = this.footholds[i];\r\n\t\t\t\r\n\t\t\tif (foothold.chain == null) {\r\n\t\t\t\t/** @type {foothold} */\r\n\t\t\t\tlet head;\r\n\r\n\t\t\t\t//find head\r\n\t\t\t\tfor (let fh = foothold; fh != null; fh = this.footholds[fh.prev]) {\r\n\t\t\t\t\tif (fh.prev != null && fh.prev == foothold.id) {\r\n\t\t\t\t\t\thead = fh;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!head) {\r\n\t\t\t\t\thead = foothold;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet chain = new FootholdChain(chainId);\r\n\r\n\t\t\t\tchain.init(head, this.footholds, Foothold);\r\n\r\n\t\t\t\tif (Foothold == FootholdSingle) {\r\n\t\t\t\t\tif (window.CREATE_SOLID_AND_EDGE_FOOTHOLD) {\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, false);//edge\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, true);//polygon\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, window.CREATE_SOLID_FOOTHOLD);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (Foothold == FootholdChainChild) {\r\n\t\t\t\t\tthis._create_chain(world, chain);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchains.push(chain);\r\n\r\n\t\t\t\trectChains[chainId] = chain.bound;\r\n\t\t\t\t\r\n\t\t\t\tchainId++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @param {FootholdChain} chain\r\n\t */\r\n\t_create_chain(world, chain) {\r\n\t\t/** @type {b2Body} */\r\n\t\tlet body;\r\n\r\n\t\t/** @type {b2ChainShape} */\r\n\t\tlet shape;\r\n\r\n\t\t{\r\n\t\t\tlet bdef = new b2BodyDef();\r\n\r\n\t\t\tconst center = chain.bound.center;\r\n\r\n\t\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\t\tbdef.position.Set(center.x / $gv.CANVAS_SCALE, center.y / $gv.CANVAS_SCALE);\r\n\t\t\tbdef.angle = 0;\r\n\t\t\tbdef.gravityScale = 0;\r\n\t\t\tbdef.linearDamping = 1;\r\n\t\t\tbdef.bullet = true;\r\n\t\t\tbdef.userData = this;\r\n\r\n\t\t\tbody = world.CreateBody(bdef);\r\n\t\t\tbody.$type = \"ground\";\r\n\r\n\t\t\tthis.bodies.push(body);\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tshape = new b2ChainShape();\r\n\r\n\t\t\t/** @type {b2Vec2[]} */\r\n\t\t\tlet vertices = [body.GetLocalPoint(chain.footholds[0].GetVertex1(), new b2Vec2())];\r\n\r\n\t\t\tfor (let i = 0; i < chain.footholds.length; ++i) {\r\n\t\t\t\tconst fh = chain.footholds[i];\r\n\r\n\t\t\t\tvertices.push(body.GetLocalPoint(fh.GetVertex2(), new b2Vec2()));\r\n\r\n\t\t\t\tfh.body = body;\r\n\t\t\t\tfh._chain = chain;\r\n\t\t\t}\r\n\r\n\t\t\tif (chain.loop) {\r\n\t\t\t\tshape.CreateLoop(vertices);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.CreateChain(vertices);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tlet fdef = new b2FixtureDef();\r\n\t\t\tfdef.shape = shape;\r\n\t\t\tfdef.density = 1;\r\n\t\t\tfdef.filter.Copy(FilterHelper.get(\"foothold\"));\r\n\t\t\tfdef.friction = 1;\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tfdef.userData = chain;\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\t//fixture.beginContact = this.beginContact_bodyBase_oneway;\r\n\t\t\tfixture.endContact = this.endContact_bodyBase_oneway;\r\n\t\t\tfixture.preSolve = this.preSolveGround_bodyBase_oneway;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @param {FootholdChain} chain\r\n\t * @param {boolean} is_solid\r\n\t */\r\n\t_create_foothold(world, chain, is_solid) {\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\r\n\t\t/** @type {b2PolygonShape&b2EdgeShape} */\r\n\t\tlet shape;\r\n\r\n\r\n\t\tif (is_solid) {\r\n\t\t\tshape = new b2PolygonShape();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tshape = new b2EdgeShape();\r\n\t\t}\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\tbdef.linearDamping = 1;\r\n\t\tbdef.gravityScale = 0;\r\n\t\tbdef.userData = this;\r\n\t\tbdef.bullet = window.FOOTHOLD_IS_BULLET;\r\n\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.density = 1;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"foothold\"));\r\n\t\tfdef.friction = 1;\r\n\t\tfdef.restitution = 0;\r\n\t\t//fdef.userData = chain;\r\n\r\n\t\tfor (let i = 0; i < chain.footholds.length; ++i) {\r\n\t\t\tconst fh = chain.footholds[i];\r\n\t\t\t//if (fh.is_wall) {\r\n\t\t\t//\tthis._create_wall(fh);\r\n\t\t\t//\tcontinue;\r\n\t\t\t//}\r\n\t\t\tlet x1, y1, x2, y2;\r\n\r\n\t\t\tx1 = fh.x1 / $gv.CANVAS_SCALE;\r\n\t\t\ty1 = fh.y1 / $gv.CANVAS_SCALE;\r\n\t\t\tx2 = fh.x2 / $gv.CANVAS_SCALE;\r\n\t\t\ty2 = fh.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\t\tcreate.call(this, fh);\r\n\t\t\t\r\n\t\t\tconst next = this.footholds[fh.next];\r\n\t\t\tif (next) {\r\n\t\t\t\tlet x1n, y1n, x2n, y2n;\r\n\t\t\t\tlet nx1, ny1, nx2, ny2;\r\n\r\n\t\t\t\tnx1 = next.x1 / $gv.CANVAS_SCALE;\r\n\t\t\t\tny1 = next.y1 / $gv.CANVAS_SCALE;\r\n\t\t\t\tnx2 = next.x2 / $gv.CANVAS_SCALE;\r\n\t\t\t\tny2 = next.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\t\t\tlet v1 = new b2Vec2(x1 - x2, y1 - y2);\r\n\t\t\t\tlet v2 = new b2Vec2(nx2 - nx1, ny2 - ny1);\r\n\t\t\t\tlet a = Math.atan2(b2Vec2.CrossVV(v1, v2), b2Vec2.DotVV(v1, v2));\r\n\r\n\t\t\t\tfh.next_a = a;\r\n\t\t\t\tfh.next_a_deg = Math.abs(Math.trunc(a * 180 / Math.PI)) % 180;\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * @param {Foothold} fh\r\n\t\t * @param {number} x1\r\n\t\t * @param {number} y1\r\n\t\t * @param {number} x2\r\n\t\t * @param {number} y2\r\n\t\t */\r\n\t\tfunction create(fh) {\r\n\t\t\tb2Vec2.AddVV(fh.GetVertex1(), fh.GetVertex2(), bdef.position);\r\n\t\t\tb2Vec2.MulVS(bdef.position, 0.5, bdef.position);\r\n\r\n\t\t\tlet hlen = fh.m_length * 0.5;\r\n\t\t\tbdef.angle = fh.m_angle;\r\n\r\n\t\t\tlet body = world.CreateBody(bdef);\r\n\t\t\tbody.$type = \"ground\";\r\n\r\n\t\t\tif (is_solid) {\r\n\t\t\t\tshape.SetAsBox(hlen, b2_polygonRadius);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.m_vertex1.Set(-hlen, 0)\r\n\t\t\t\tshape.m_vertex2.Set(hlen, 0);\r\n\r\n\t\t\t\tif (window.USE_GHOST_VERTEX) {\r\n\t\t\t\t\tif (fh.prev != null) {\r\n\t\t\t\t\t\tconst prev = this.footholds[fh.prev];\r\n\t\t\t\t\t\tshape.m_hasVertex0 = true;\r\n\t\t\t\t\t\tshape.m_vertex0.Copy(prev.GetVertex2());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (fh.next != null) {\r\n\t\t\t\t\t\tconst next = this.footholds[fh.next];\r\n\t\t\t\t\t\tshape.m_hasVertex3 = true;\r\n\t\t\t\t\t\tshape.m_vertex3.Copy(next.GetVertex1());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfdef.userData = fh;\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\t//fixture.beginContact = this.beginContact_bodyBase_oneway;\r\n\t\t\tfixture.endContact = this.endContact_bodyBase_oneway;\r\n\t\t\tfixture.preSolve = this.preSolveGround_bodyBase_oneway;\r\n\r\n\t\t\tfh.body = body;\r\n\t\t\tthis.bodies.push(body);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {{left: number, right: number}}\r\n\t */\r\n\t_compute_left_right_border() {\r\n\t\tlet left = null, right = null;\r\n\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\tlet fh = this.footholds[i];\r\n\t\t\t//if (fh.layer == 5) {\r\n\t\t\t\tlet x1, x2;\r\n\t\t\t\t\r\n\t\t\t\tif (fh.x1 < fh.x2) {\r\n\t\t\t\t\tx1 = fh.x1;\r\n\t\t\t\t\tx2 = fh.x2;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tx1 = fh.x2;\r\n\t\t\t\t\tx2 = fh.x1;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (left == null || x1 < left) {\r\n\t\t\t\t\tleft = x1;\r\n\t\t\t\t}\r\n\t\t\t\tif (right == null || x2 > right) {\r\n\t\t\t\t\tright = x2;\r\n\t\t\t\t}\r\n\t\t\t\t//if (left != null) {\r\n\t\t\t\t//\tleft = Math.min(left, fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\tleft = Math.min(fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\tright = Math.max(fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t//}\r\n\t\t}\r\n\t\treturn { left, right };\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tbeginContact_bodyBase_oneway(contact, fa, fb, childIndexA, childIndexB) {\r\n\t\tif (fb.$type == \"player\") {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tlet numPoints, worldManifold;\r\n\t\tconst playerBody = fb.GetBody();\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tconst fh = this.getFootholdFromContact(childIndexA);\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = fb.GetUserData();\r\n\t\tif (!player || !player.body || player.body.$type != \"player\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (player.state.ladder) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst $fh = player.$foothold;\r\n\t\tconst player_pos = player.foot_walk.GetWorldCenter();//player.getPosition();\r\n\r\n\t\tif (fh.is_wall) {\r\n\t\t\tcontact.SetFriction(0);\r\n\r\n\t\t\tconst p$fh = player.prev_$fh;\r\n\r\n\t\t\tif ((!$fh || $fh.chain != fh.chain) &&\r\n\t\t\t\tp$fh &&\r\n\t\t\t\tp$fh.chain != fh.chain &&\r\n\t\t\t\tp$fh.layer != fh.layer\r\n\t\t\t) {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (player.state.dropDown && player.leave_$fh != null) {\r\n\t\t\t//HACK: ?? foothold edge\r\n\t\t\tif (player.leave_$fh == $fh && $fh != fh) {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (playerBody.$type == \"pl_ft_walk\" &&// player.leave_$fh &&\r\n\t\t\t\tplayer.leave_$fh.id != fh.id &&\r\n\t\t\t\tplayer.leave_$fh.chain.id != fh.chain.id &&\r\n\t\t\t\t(player.leave_$fh.prev == null || player.leave_$fh.prev != fh.id) &&\r\n\t\t\t\t(player.leave_$fh.next == null || player.leave_$fh.next != fh.id)\r\n\t\t\t) {\r\n\t\t\t\tconst foot = player.foot_walk.GetWorldCenter();\r\n\t\t\t\tnumPoints = contact.GetManifold().pointCount;\r\n\t\t\t\tworldManifold = new b2WorldManifold();\r\n\t\t\t\tcontact.GetWorldManifold(worldManifold);\r\n\r\n\t\t\t\t//check if contact points are moving into platform\r\n\t\t\t\tfor (let i = 0; i < numPoints; ++i) {\r\n\t\t\t\t\tconst cpoint = worldManifold.points[i];\r\n\t\t\t\t\tif (cpoint.y > foot.y) {\r\n\t\t\t\t\t\tplayer.leave_$fh = null;\r\n\t\t\t\t\t\tplayer.state.dropDown = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tplayer.state.dropDown = false;\r\n\t\t}\r\n\r\n\t\tif (player.leave_$fh && player.leave_$fh == fh) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet ccc = $fh && (\r\n\t\t\tfh.is_wall ||\r\n\t\t\t(fh == player._foothold && (fh.y1 < $fh.y1 || fh.y2 < $fh.y2)) ||\r\n\t\t\t(fh != player._foothold && (fh.y1 > $fh.y1 || fh.y2 > $fh.y2))\r\n\t\t);\r\n\t\tif (ccc && $fh != fh && (!player._$fallEdge || player._$fallEdge != $fh)) {\r\n\t\t\tif (fh.chain.id != $fh.chain.id &&\r\n\t\t\t\t(!$fh.prev || $fh.y1 != fh.y2) &&\r\n\t\t\t\t(!$fh.next || $fh.y2 != fh.y1)\r\n\t\t\t) {\r\n\t\t\t\tplayer.leave_$fh = fh;\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (player._$fallEdge && player._$fallEdge == fh) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst relative_position = fh.GetLocalPoint(player_pos, new b2Vec2());\r\n\t\tconst platformFaceY = b2_polygonRadius;\r\n\r\n\t\tconst foot_width = player.chara_profile.foot_width;\r\n\r\n\t\tif (numPoints == null) {\r\n\t\t\tnumPoints = contact.GetManifold().pointCount;\r\n\t\t\tworldManifold = new b2WorldManifold();\r\n\t\t\tcontact.GetWorldManifold(worldManifold);\r\n\t\t}\r\n\r\n\t\t//check if contact points are moving into platform\r\n\t\tfor (let i = 0; i < numPoints; ++i) {\r\n\t\t\tconst cpoint = worldManifold.points[i];\r\n\t\t\tconst pointVelPlatform = fh.GetLinearVelocityFromWorldPoint(cpoint, new b2Vec2());\r\n\t\t\tconst pointVelOther = playerBody.GetLinearVelocityFromWorldPoint(cpoint, new b2Vec2());\r\n\t\t\tconst point = new b2Vec2(pointVelOther.x - pointVelPlatform.x, pointVelOther.y - pointVelPlatform.y);\r\n\t\t\tconst relativeVel = fh.GetLocalVector(point, new b2Vec2());\r\n\t\t\tconst relativePosition = fh.GetLocalPoint(cpoint, new b2Vec2());\r\n\r\n\t\t\tif (relative_position.y <= -(foot_width - platformFaceY) ||\r\n\t\t\t\t(cpoint.y > player_pos.y && relativePosition.y <= platformFaceY)\r\n\t\t\t) {\r\n\t\t\t\tif (relativeVel.y > 1) {//if moving down faster than 1 m/s, handle as before\r\n\t\t\t\t\t//player._foothold = fh;\r\n\t\t\t\t\tif (fh.is_wall || player._which_foothold_contact(fh, cpoint)) {\r\n\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tnormal_contact(cpoint);\r\n\t\t\t\t\t//\treturn;//not primary, normal contact \r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse if (relativeVel.y > -1) { //if moving slower than 1 m/s\r\n\t\t\t\t\t//borderline case, moving only slightly out of platform\r\n\t\t\t\t\t//player._foothold = fh;\r\n\t\t\t\t\tif (fh.is_wall || player._which_foothold_contact(fh, cpoint)) {\r\n\t\t\t\t\t\tif ($fh && $fh.id != fh.id) {\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\treturn;//contact point is less than 5cm inside front face of platfrom\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tnormal_contact(cpoint);\r\n\t\t\t\t\t//\treturn;//not primary, normal contact\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse if (fh.is_wall) {//contact wall's upper vertex\r\n\t\t\t\t\tconst py = player_pos.y * $gv.CANVAS_SCALE;\r\n\t\t\t\t\tif (fh.y2 >= fh.y1) {\r\n\t\t\t\t\t\tif (py <= fh.y1) {\r\n\t\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (py <= fh.y2) {\r\n\t\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//no points are moving into platform, contact should not be solid\r\n\t\tcontact.SetEnabled(false);\r\n\r\n\t\t/**\r\n\t\t * @param {b2Vec2} cpoint\r\n\t\t */\r\n\t\tfunction normal_contact(cpoint) {\r\n\t\t\tif ((fh.prev == null && (cpoint.x * $gv.CANVAS_SCALE) < fh.x1) ||\r\n\t\t\t\t(fh.next == null && (cpoint.x * $gv.CANVAS_SCALE) > fh.x2)\r\n\t\t\t) {\r\n\t\t\t\tplayer.state.jump = true;\r\n\r\n\t\t\t\tplayer._$fallEdge = fh;\r\n\r\n\t\t\t\tplayer._foothold = null;\r\n\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t//\r\n\t\t\t\tplayer.$foothold = null;\r\n\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tendContact_bodyBase_oneway(contact, fa, fb, childIndexA, childIndexB) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = fb.GetUserData();\r\n\t\tif (!player) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tconst fh = this.getFootholdFromContact(childIndexA);\r\n\r\n\t\tplayer.prev_$fh = fh;\r\n\r\n\t\tif (player._foot_contact_list.length) {\r\n\t\t\tplayer._foot_contact_list.forEach((fc, i) => {\r\n\t\t\t\tif (fc.foothold == fh) {\r\n\t\t\t\t\tplayer._foot_contact_list.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif (player._$fallEdge && fh == player._$fallEdge) {\r\n\t\t\tplayer._$fallEdge = null;\r\n\t\t}\r\n\t\telse if (player._foothold && fh == player._foothold) {\r\n\t\t\tif (player._foot_contact_list.length) {\r\n\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\tlet max = player._foot_contact_list.pop();\r\n\t\t\t\tplayer.$foothold = max.foothold;\r\n\t\t\t\tplayer._foothold = max.foothold;\r\n\t\t\t\tplayer._foot_at = max.position;\r\n\t\t\t\tplayer._foothold_priority = max.priority;\r\n\t\t\t\t//console.log(\"end contact: contact old foothold: fh == player._foothold\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tplayer._foothold = null;//正常離開地面\r\n\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t//console.log(\"end contact: 正常離開地面: fh == player._foothold\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (player.$foothold && fh == player.$foothold) {\r\n\t\t\tif (player._foot_contact_list.length) {\r\n\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\tlet max = player._foot_contact_list.pop();\r\n\t\t\t\tplayer.$foothold = max.foothold;\r\n\t\t\t\tplayer._foothold = max.foothold;\r\n\t\t\t\tplayer._foot_at = max.position;\r\n\t\t\t\tplayer._foothold_priority = max.priority;\r\n\t\t\t\t//console.log(\"end contact: contact old foothold: fh == player.$foothold\");\r\n\t\t\t}\r\n\t\t\telse {//afterStep\r\n\t\t\t\tif (player._foothold) {\r\n\t\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\t\tplayer.$foothold = player._foothold;\r\n\t\t\t\t\t//console.log(\"end contact: contact other foothold\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tplayer.$foothold = null;//正常離開地面\r\n\t\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t\t//console.info(\"end contact: 正常離開地面: fh == player.$foothold\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (player.leave_$fh && player.leave_$fh == fh) {\r\n\t\t\tplayer.leave_$fh = null;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tpreSolveGround_bodyBase_oneway(contact, oldManifold, fa, fb, childIndexA, childIndexB) {\r\n\t\t/** @type {Ground} */\r\n\t\tlet that = fa.GetBody().GetUserData();\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tlet target = this;\r\n\r\n\t\tthat.beginContact_bodyBase_oneway.call(target, contact, fa, fb, childIndexA, childIndexB);\r\n\t\t\r\n\t\t//if (contact.IsEnabled() && contact.IsTouching()) {\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\tunload(world) {\r\n\t\tfor (let i = 0; i < this.bodies.length; ++i) {\r\n\t\t\tworld.DestroyBody(this.bodies[i]);\r\n\t\t}\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {object} data\r\n\t */\r\n\taddFoothold(data) {\r\n\t\tthis.footholds.push(new Foothold(data));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t$drawDebugInfo(renderer) {\r\n\t\tif ($gv.m_display_foothold) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.lineCap = \"round\";\r\n\t\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\t\tlet fh = this.footholds[i];\r\n\t\t\t\tif (fh == null) {//line end\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (fh.$showDebugInfo) {\r\n\t\t\t\t\tfh.$drawDebugInfo(renderer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t$showDebugInfo(layer, group, isShow, isHide) {\r\n\t\tif (isShow == null) {\r\n\t\t\tisShow = true;\r\n\t\t}\r\n\t\tif (isHide == null) {\r\n\t\t\tisHide = false;\r\n\t\t}\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tif (fh.layer == layer && fh.group == group) {\r\n\t\t\t\tfh.$showDebugInfo = isShow;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfh.$showDebugInfo = isHide;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t$showDebugInfoByLayer(layer, isShow, isHide) {\r\n\t\tif (isShow == null) {\r\n\t\t\tisShow = true;\r\n\t\t}\r\n\t\tif (isHide == null) {\r\n\t\t\tisHide = false;\r\n\t\t}\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tif (fh.layer == layer) {\r\n\t\t\t\tfh.$showDebugInfo = isShow;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfh.$showDebugInfo = isHide;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//static $showDebugInfoByGroup() {\r\n\t//}\r\n\t$hideAllDebugInfo() {\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tfh.$showDebugInfo = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nGround.Foothold = Foothold;\r\n\r\n/*\r\nmap=100000000\r\n$$hhh = -1.5;\r\nclearInterval($$$si)\r\n$$$si = setInterval(() => {\r\n    chara.$physics.setPosition(113.96875, 7.84375 + $$hhh);\r\n\t$$hhh += 0.005;//1 / $gv.CANVAS_SCALE;\r\n\t$$hhh = $$hhh > 2 ? 0 : $$hhh;\r\n    chara.$physics.body.SetAwake(true);\r\n    setTimeout(() => {\r\n        chara.$physics.state.jump = true;\r\n        $gv.input_keyDown.f = 1;\r\n        setTimeout(() => {\r\n            $gv.input_keyDown.f = 0;\r\n            $gv.input_keyUp.f = 1;\r\n            setTimeout(() => {\r\n                $gv.input_keyUp.f = 0;\r\n            }, 50);\r\n        }, 50);\r\n    }, 140);\r\n}, 1000);\r\n\r\n*/\r\n\r\n/*\r\nmap=100000000\r\nchara.$physics.setPosition(4583/32+3,364/32-3)\r\nchara.$physics.body.m_linearVelocity.Set(-22,15)\r\n\r\n*/\r\n","﻿\r\nimport { Vec2 } from \"../math.js\";\r\n\r\n\r\nexport class ActionAnimationFrameData {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.move = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded raw data\r\n\t * @param {ActionAnimationFrameData} raw\r\n\t * @param {string} action\r\n\t * @param {number} frame\r\n\t */\r\n\t_load(raw, action, frame) {\r\n\t\tthis._raw = raw;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = raw.delay;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tif (raw.move) {\r\n\t\t\tthis.move = new Vec2(raw.move.x, raw.move.y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.move = new Vec2(0, 0);\r\n\t\t}\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = raw.action || action;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = raw.frame || frame;\r\n\t}\r\n}\r\n\r\nexport class ActionAnimation {\r\n\tconstructor(raw) {\r\n\t\t/** @returns {ActionAnimationFrameData[]} */\r\n\t\tthis.frames = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._action = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\r\n\t\t/** @type {number} this.delay = delay < 0 ? -delay:0; if (this.delay == 0) launch attack */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.loop = false;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\t_load(action) {\r\n\t\tthis._action = action;\r\n\t\tthis.frames = ActionAnimation.Adef[action];\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\treload(action) {\r\n\t\tthis.reset();\r\n\t\tthis._load(action);\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * update action delay, target.action, target.action_frame, target.tx, target.ty\r\n\t * @param {number} stamp\r\n\t * @param {CharacterRenderer} target\r\n\t */\r\n\tupdate(stamp, target) {\r\n\t\tif (!this.frames || !stamp) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fdat = this.fdat;\r\n\t\tlet delay = 0;\r\n\r\n\t\tif (!fdat) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.time = this.time + stamp;\r\n\r\n\t\tif (fdat.delay < 0) {\r\n\t\t\tfdat.delay = -fdat.delay;\r\n\t\t}\r\n\r\n\t\tif (fdat.delay > 0) {\r\n\t\t\tdelay = fdat.delay;\r\n\t\t\tthis.delay = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelay = -fdat.delay;\r\n\t\t\tthis.delay = delay;\r\n\t\t}\r\n\r\n\t\tif (this.time > delay) {\r\n\t\t\tthis.frame = ++this.frame;\r\n\t\t\tthis.time = 0;\r\n\t\t}\r\n\r\n\t\t//translate target position\r\n\t\tif (fdat.move) {\r\n\t\t\ttarget.tx = -fdat.move.x * target.front;\r\n\t\t\ttarget.ty = fdat.move.y;//Y 軸相反\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\tif (this.isEnd()) {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// 改變 action & action_frame 會造成迴圈: this.reload(this._action)\r\n\t\tif (!target._ride_action) {\r\n\t\t\ttarget._action = fdat.action;\r\n\t\t}\r\n\t\ttarget._action_frame = fdat.frame;\r\n\r\n\t\tif (!this.frames || this.fdat == null) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t\telse if (!this.loop) {\r\n\t\t\tthis._is_end = false;\r\n\t\t}\r\n\t\tif (this.frames.length <= 1) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\treturn this._is_end;\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.frames.reduce((total, frame) => total + frame.delay, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * frame data\r\n\t * @returns {ActionAnimationFrameData}\r\n\t */\r\n\tget fdat() {\r\n\t\treturn this.frames[this.frame];\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\t/** @type {{[action:string]:ActionAnimationFrameData[]}} */\r\n\t\tlet raw = await $get.data(ActionAnimation._base_path);\r\n\r\n\t\tlet aadef = Object.assign({}, raw);\r\n\t\t\r\n\t\tdelete aadef['info'];\r\n\r\n\t\tfor (let actName in aadef) {\r\n\t\t\tlet aa = aadef[actName];\r\n\t\t\taadef[actName] = Object.values(aa).map((_fdef, frame) => {\r\n\t\t\t\tlet fdef = new ActionAnimationFrameData();\r\n\t\t\t\tfdef._load(_fdef, actName, frame);\r\n\t\t\t\treturn fdef;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//action definition\r\n\t\tActionAnimation.Adef = aadef;\r\n\r\n\t\twindow.CharacterActionAnimationDefinition = aadef;\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Character/00002000\";\r\n\t}\r\n}\r\n/**\r\n * action definition\r\n * @type {{[action:string]:ActionAnimationFrameData[]}}\r\n */\r\nActionAnimation.Adef = null;\r\n\r\n","﻿\r\nimport { ItemCategoryInfo } from \"../../public/javascripts/resource.js\";\r\n\r\nimport { Sprite } from \"./Sprite\";\r\n\r\nimport { KeySlotData } from \"../ui/Basic/KeySlotData.js\";\r\n\r\n\r\n/** @type {$ItemRawData} */\r\nlet _loadedItem = {};\r\n\r\nwindow.$loadedItem = _loadedItem;\r\n\r\n\r\nclass $ItemRawData {\r\n\tconstructor() {\r\n\t}\r\n}\r\n\r\n\r\n//class ItemInfo {\r\n//\t/**\r\n//\t * @param {{}} _rawInfo\r\n//\t */\r\n//\tconstructor(_raw) {\r\n//\t\tthis.icon = new Sprite(_raw.icon);\r\n//\t\tthis.iconRaw = new Sprite(_raw.iconRaw);\r\n//\t}\r\n//\r\n//\t/**\r\n//\t * @param {string} itemId\r\n//\t * @returns {Promise<Sprite[]>}\r\n//\t */\r\n//\tload(itemId, loadSprite = false) {\r\n//\t\tlet url = ItemCategoryInfo.getIconUrl(itemId);\r\n//\t\tlet rawUrl = ItemCategoryInfo.getIconRawUrl(itemId);\r\n//\r\n//\t\tthis.icon._url = url;\r\n//\t\tthis.iconRaw._url = rawUrl;\r\n//\r\n//\t\t// 目前用不到 Sprite\r\n//\t\t// UI 只會用到 _raw, Image\r\n//\r\n//\t\tif (loadSprite) {\r\n//\t\t\t//manual load\r\n//\t\t\tthis.icon.__loadTexture();\r\n//\t\t\tthis.iconRaw.__loadTexture();\r\n//\r\n//\t\t\treturn Promise.all([this.icon.$promise, this.iconRaw.$promise]);\r\n//\t\t}\r\n//\t}\r\n//}\r\n\r\nconst SLOT_EQUIP = 0;\r\nconst SLOT_COS = 1;\r\nconst SLOT_ETC = 2;\r\nconst SLOT_INS = 3;\r\nconst SLOT_CASH = 4;\r\n\r\nconst TYPE_TO_SLOT_MAP = [\r\n\tSLOT_EQUIP, SLOT_EQUIP, SLOT_COS, SLOT_INS, SLOT_ETC, SLOT_CASH\r\n];\r\n\r\nexport class ItemBase {\r\n\t/**\r\n\t * @param {string} itemId\r\n\t * @param {{}} _raw\r\n\t */\r\n\tconstructor(itemId, _raw) {\r\n\t\t//this.assign(this, _raw);\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis._raw = null;\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.id = null;\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t\"_raw\": {\r\n\t\t\t\tvalue: _raw\r\n\t\t\t},\r\n\t\t\t\"id\": {\r\n\t\t\t\tvalue: itemId\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetSlot() {\r\n\t\treturn TYPE_TO_SLOT_MAP[this.id[1]];\r\n\t}\r\n}\r\n\r\nexport class ItemEquip extends ItemBase {\r\n}\r\n\r\nexport class ItemConsume extends ItemBase {\r\n}\r\n\r\nexport class ItemEtc extends ItemBase {\r\n}\r\n\r\nexport class ItemInstall extends ItemBase {\r\n}\r\n\r\nexport class ItemCash extends ItemBase {\r\n\tgetSlot() {\r\n\t\tif (this.id == 7) {\r\n\t\t\treturn TYPE_TO_SLOT_MAP[this.id[0]];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn TYPE_TO_SLOT_MAP[this.id[1]];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * 自訂道具\r\n * @template T\r\n * @param {string} itemId\r\n * @param {...Partial<T>} props\r\n * @returns {Promise<T>}\r\n */\r\nfunction _createItemSync(itemId, ...props) {\r\n\tlet itemPrototype = _loadedItem[itemId];\r\n\tif (!itemPrototype) {\r\n\t\tthrow new TypeError();\r\n\t}\r\n\r\n\t/** @type {string} - 1 digit */\r\n\tlet typeId = itemId[1];\r\n\r\n\t/** @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} */\r\n\tlet _itemType;\r\n\r\n\tswitch (typeId) {\r\n\t\tcase '0':\r\n\t\t\t_itemType = ItemEquip;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"未完成\");\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tlet item = new _itemType(itemId, itemPrototype);\r\n\r\n\tif (props && props.length) {\r\n\t\tObject.assign(item, ...props);\r\n\t}\r\n\r\n\treturn item;\r\n}\r\n\r\n/**\r\n * 載入道具\r\n * @template T\r\n * @param {string} itemId\r\n * @param {...Partial<T>} props\r\n * @returns {Promise<T>}\r\n */\r\nexport async function $createItem(itemId, ...props) {\r\n\tif (itemId.length == 7 && itemId[0] == 5) {\r\n\t\tthrow new Error(\"未完成 pet\");\r\n\t}\r\n\t/** @type {string} - 1 digit */\r\n\tlet typeId = itemId[1];\r\n\r\n\t/** @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} */\r\n\tlet _itemType;\r\n\r\n\tswitch (typeId) {\r\n\t\tcase \"0\":\r\n\t\t\tif (!$gv.m_editor_mode) {\r\n\t\t\t\tthrow new Error(\"$gv.m_editor_mode: %o\" + $gv.m_editor_mode);\r\n\t\t\t}\r\n\t\tcase \"1\":\r\n\t\t\t_itemType = ItemEquip;\r\n\t\t\tbreak;\r\n\t\tcase \"2\":\r\n\t\t\tconsole.error(\"未完成 ItemConsume\");\r\n\t\t\t_itemType = ItemConsume;\r\n\t\t\tbreak;\r\n\t\tcase \"3\":\r\n\t\t\t//TODO: ItemInstall\r\n\t\t\t_itemType = ItemInstall;\r\n\t\t\tbreak;\r\n\t\tcase \"4\":\r\n\t\t\tconsole.error(\"未完成 ItemEtc\");\r\n\t\t\t_itemType = ItemEtc;\r\n\t\t\tbreak;\r\n\t\tcase \"5\":\r\n\t\t\tconsole.error(\"未完成 ItemCash\");\r\n\t\t\t_itemType = ItemCash;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"?? typeId: \" + typeId);\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tlet itemPrototype;\r\n\ttry {\r\n\t\titemPrototype = await ItemCategoryInfo.getItem(itemId);// raw\r\n\t}\r\n\tcatch (ex) {\r\n\t\tthrow ex;\r\n\t}\r\n\tif (!itemPrototype) {\r\n\t\tconsole.warn(\"item not exist: \" + itemId);\r\n\t\treturn null;\r\n\t}\r\n\t_loadedItem[itemId] = itemPrototype;\r\n\r\n\tlet item = new _itemType(itemId, itemPrototype);\r\n\r\n\tif (props && props.length) {\r\n\t\t//TODO: deep copy\r\n\t\tObject.assign(item, ...props);\r\n\t}\r\n\r\n\treturn item;\r\n}\r\n\r\n\r\nexport class ItemSlot extends KeySlotData {\r\n\t/**\r\n\t * @template T\r\n\t * @param {number} itemSlot\r\n\t * @param {number} itemSN\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\tconstructor(itemSlot, itemSN, itemData, amount) {\r\n\t\tsuper();\r\n\r\n\t\tthis.SN = itemSN;\r\n\t\tthis.slot = itemSlot;\r\n\t\tthis.amount = amount;\r\n\t\t\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} - item props\r\n\t\t */\r\n\t\tthis.data = itemData;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @template T\r\n\t * @param {number} itemSlot\r\n\t * @param {number} itemSN\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\tassign(itemSlot, itemSN, itemData, amount) {\r\n\t\tthis.SN = itemSN;\r\n\t\tthis.slot = itemSlot;\r\n\t\tthis.amount = amount;\r\n\r\n\t\tthis.data = itemData;\r\n\t}\r\n\r\n\t_clear() {\r\n\t\tthis.data = null;\r\n\t\tthis.amount = 0;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((!this.data && this.amount) || (this.data && !this.amount)) {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !this.data && !this.amount;\r\n\t}\r\n\r\n\tgetData() {\r\n\t\treturn this.data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} data\r\n\t */\r\n\tsetData(data) {\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t */\r\n\tstatic parse(text) {\r\n\t\tif (text.__proto__ == String.prototype) {\r\n\t\t\tlet iSlot = new ItemSlot();\r\n\t\t\tlet o = JSON.parse(text);\r\n\t\t\t//iSlot.SN = o.SN;\r\n\t\t\t//iSlot.slot = o.slot;\r\n\t\t\t//iSlot.amount = o.amount;\r\n\t\t\t//iSlot.itemId = o.itemId;\r\n\t\t\tObject.assign(iSlot, o);\r\n\t\t\treturn iSlot;\r\n\t\t}\r\n\t\tthrow new TypeError();\r\n\t}\r\n}\r\n","﻿\r\nclass CharacterBaseStat {\r\n\tconstructor() {\r\n\t\tthis.hp = 8855;\r\n\t\tthis.mp = 5246;\r\n\t\tthis.mhp = 28855;\r\n\t\tthis.mmp = 25246;\r\n\t\tthis.exp = 55;\r\n\r\n\t\tthis.str = 123;\r\n\t\tthis.luk = 4;\r\n\t\tthis.dex = 999;\r\n\t\tthis.int = 4;\r\n\t}\r\n}\r\n\r\nclass CharacterTemporaryStat {\r\n}\r\n\r\nconst symbol_job = Symbol(\"job\");\r\nconst symbol_onJobChange = Symbol(\"onJobChange\");\r\n\r\nclass CharacterStat extends CharacterBaseStat {\r\n\tconstructor(sceneChara) {\r\n\t\tsuper();\r\n\r\n\t\tthis._$sceneChara = sceneChara;\r\n\r\n\t\tthis.level = 150;\r\n\r\n\t\t//this._job = 3;\r\n\t\t//this._spec_job = 3;\r\n\r\n\t\t///** @type {number} - 最大屬性攻擊 */\r\n\t\t//this.currentMaxBaseDamage = 10000;\r\n\r\n\t\t///** @type {number} - 最小屬性攻擊 */\r\n\t\t//this.currentMinBaseDamage = 1000;\r\n\r\n\t\t/** @type {number} - 爆擊率 0~100 */\r\n\t\tthis.critRate = 50;\r\n\r\n\t\t/** @type {number} - 爆擊傷害 0~100 */\r\n\t\tthis.critDamage = 80;\r\n\r\n\t\t///** @type {number} - 最大爆擊傷害 0~100 */\r\n\t\t//this.maxCritDamage = 80;\r\n\r\n\t\t///** @type {number} - 最小爆擊傷害 0~100 */\r\n\t\t//this.minCritDamage = 40;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget job() {\r\n\t\treturn this[symbolStatJob];\r\n\t}\r\n\tset job(value) {\r\n\t\tthis[symbolStatJob] = value;\r\n\r\n\t\tconst onJobChange = this[symbol_onJobChange];\r\n\r\n\t\tif (_onJobChange) {\r\n\t\t\t_onJobChange()\r\n\t\t}\r\n\t}\r\n\r\n\t/** @param {function():void} cbfunc */\r\n\tonJobChange(cbfunc) {\r\n\t\tthis[symbol_onJobChange] = cbfunc;\r\n\t}\r\n\r\n\t_getTotalAttack() {\r\n\t\treturn 100;\r\n\t}\r\n\r\n\t/** @returns {number} - 最大屬性攻擊 */\r\n\tgetCurrentMaxBaseDamage() {\r\n\t\t//return this.currentMaxBaseDamage;\r\n\t\treturn 1.30 * (4 * this.dex + this.str) * (this._getTotalAttack() / 100);\r\n\t}\r\n\t/** @returns {number} - 最小屬性攻擊 */\r\n\tgetCurrentMinBaseDamage() {\r\n\t\t//return this.currentMinBaseDamage;\r\n\t\treturn 1.30 * (this.dex + this.str) * (this._getTotalAttack() / 100);\r\n\t}\r\n\t/** @returns {number} - 爆擊率 0~100 */\r\n\tgetCritRate() {\r\n\t\treturn this.critRate;\r\n\t}\r\n\t/** @returns {number} - 爆擊傷害 0~100 */\r\n\tgetCritDamage() {\r\n\t\treturn this.critDamage;\r\n\t}\r\n\t///** @returns {number} - 最大爆擊傷害 0~100 */\r\n\t//getMaxCritDamage() {\r\n\t//\treturn this._$maxCritDamage;\r\n\t//}\r\n\t///** @returns {number} - 最小爆擊傷害 0~100 */\r\n\t//getMinCritDamage() {\r\n\t//\treturn this._$minCritDamage;\r\n\t//}\r\n\r\n\tgetHpPercentS() {\r\n\t\treturn (this.hp * 100 / this.mhp).toFixed(0);\r\n\t}\r\n\tgetMpPercentS() {\r\n\t\treturn (this.mp * 100 / this.mmp).toFixed(0);\r\n\t}\r\n\tgetExpPercentS() {\r\n\t\treturn (this.exp * 100 / this.getNextExp()).toFixed(2);\r\n\t}\r\n\tgetNextExp() {\r\n\t\treturn 100;\r\n\t}\r\n}\r\n\r\n//?? packet\r\nclass $RemotePlayerData {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.id = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.equips_code = null;\r\n\t\t\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.chatBalloonStyle = 0;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.labelStyle = 0;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.damageSkin = \"default\";\r\n\t}\r\n}\r\n//?? packet\r\nclass $PlayerData extends $RemotePlayerData {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t/** @type {CharacterStat} */\r\n\t\tthis.stat = undefined;\r\n\t}\r\n\r\n\tgetRemoteData() {\r\n\t\treturn {\r\n\t\t\tid: this.id,\r\n\t\t\tmapId: this.mapId,\r\n\t\t\tequips_code: this.equips_code,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tCharacterStat,\r\n\t$RemotePlayerData, $PlayerData,\r\n};\r\n","\r\nimport { LayerObject, Layer } from \"./Layer.js\"\r\nimport { RenderingOption } from \"./RenderingOption\";\r\n\r\n\r\n/**\r\n * @implements {LayerObject}\r\n */\r\nclass SceneRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {Layer[]} */\r\n\t\tthis.layers = [];\r\n\t\t\r\n\t\t/** @type {RenderingOption} */\r\n\t\tthis.rendering_option = new RenderingOption();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} amount\r\n\t */\r\n\taddLayerBack(amount) {\r\n\t\tfor (let i = 0; i < amount; ++i) {\r\n\t\t\tthis.layers.push(new Layer()); \r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tfor (let layer of this.layers) {\r\n\t\t\tlayer.update(stamp);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} layerIndex\r\n\t */\r\n\trenderLayer(renderer, layerIndex) {\r\n\t\tconst layer = this.layers[layerIndex];\r\n\t\tlayer.render(renderer, this.rendering_option);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_renderAll(renderer) {\r\n\t\tfor (let layer of this.layers) {\r\n\t\t\tlayer.render(renderer, this.rendering_option);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const sceneRenderer = new SceneRenderer();\r\n\r\nwindow.$sceneRenderer = sceneRenderer;\r\n\r\n","﻿\r\nimport { Rectangle, Vec2 } from \"../math.js\";\r\n\r\nimport {\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2Body, b2Fixture,\r\n\tb2PolygonShape, b2CircleShape,\r\n\tb2Contact, b2Manifold,\r\n\tFixtureContactListener,\r\n} from \"./Physics.js\";\r\n\r\nimport { World } from \"./World.js\";\r\n\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { SceneSkill, SkillEffectAnimation } from \"../Skill.js\";\r\n\r\nimport { AttackInfo } from \"../../Common/AttackInfo.js\";\r\n\r\nimport { BaseSceneCharacter } from \"../SceneCharacter.js\";//?? SceneCharacter, SceneRemoteCharacter\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport class PBullet {\r\n\t/**\r\n\t * @param {PPlayer} owner\r\n\t * @param {SceneSkill} skill\r\n\t * @param {SkillEffectAnimation} bulletRenderer\r\n\t */\r\n\tconstructor(owner, skill, bulletRenderer) {\r\n\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\tif (!owner || !skill || !bulletRenderer) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\talert(\"new PBullet(owner, skill)\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.owner = owner;\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {SceneSkill} */\r\n\t\tthis.skill = skill;\r\n\r\n\t\t/** @type {SkillEffectAnimation} */\r\n\t\tthis.bulletRenderer = bulletRenderer;\r\n\r\n\t\t/** @type {BaseBulletMoveFunc} */\r\n\t\tthis.bulletMoveFunc = null;\r\n\r\n\t\t/** @type {-1|1} */\r\n\t\tthis.front = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Partial<FixtureContactListener>=} listener\r\n\t */\r\n\t_create(listener) {\r\n\t\tconst world = this.owner.body.GetWorld();\r\n\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tconst cx = (this.bulletRenderer.textures[0]._raw.__w * 0.5) / $gv.CANVAS_SCALE;\r\n\t\tconst cy = (this.bulletRenderer.textures[0]._raw.__h * 0.5) / $gv.CANVAS_SCALE;\r\n\r\n\t\tlet { x, y } = this.owner.body.GetWorldCenter();\r\n\t\tconst front = this.owner.state.front;\r\n\r\n\t\t//TODO: set bullet position, front, angle\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;\r\n\t\tif (front > 0) {\r\n\t\t\tbdef.position.Set(x + cx, y);\r\n\t\t}\r\n\t\telse if (front < 0) {\r\n\t\t\tbdef.position.Set(x - cx, y);\r\n\t\t}\r\n\t\telse {//?? center position\r\n\t\t\tbdef.position.Set(x, y);\r\n\t\t}\r\n\t\tbdef.angle = 0;//???\r\n\t\tbdef.gravityScale = 0;\r\n\t\tbdef.allowSleep = false;\r\n\t\tbdef.bullet = true;\r\n\t\tbdef.fixedRotation = true;\r\n\t\tbdef.userData = this;\r\n\r\n\t\tthis.body = world.CreateBody(bdef);\r\n\r\n\t\tshape.SetAsBox(cx, cy);//renderer origin is center\r\n\t\t\r\n\t\t//TODO: implement filter: player_bullet\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"bullet\"));\r\n\t\t//fdef.filter.Copy(FilterHelper.get(\"pvp_bullet\"));\r\n\t\t\r\n\t\tfdef.userData = this;\r\n\r\n\t\tlet fixture = this.body.CreateFixture(fdef);\r\n\r\n\t\tif (listener) {\r\n\t\t\tObject.keys(FixtureContactListener.prototype).forEach(key => fixture[key] = listener[key]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfixture.preSolve = bullet_default_preSolve;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetPosition() {\r\n\t\treturn this.body.GetPosition();\r\n\t}\r\n\r\n\t/**\r\n\t * default is horizontal move front\r\n\t * @param {BaseBulletMoveFunc=} bulletMoveFunc\r\n\t * @param {number=} linearVelocityX - unit is meter\r\n\t * @param {number=} linearVelocityY - unit is meter\r\n\t */\r\n\tlaunch(bulletMoveFunc, linearVelocityX, linearVelocityY) {\r\n\t\tif (bulletMoveFunc) {\r\n\t\t\tdebugger;\r\n\r\n\t\t\tthis.bulletMoveFunc = bulletMoveFunc;\r\n\t\t\t//TODO: this.bulletMoveFunc.Step\r\n\t\t\t//TODO: this.bulletMoveFunc.AfterStep\r\n\r\n\t\t\tthis.body.addStep(bulletMoveFunc.Step.bind(bulletMoveFunc, this));\r\n\t\t\tthis.body.addAfterStep(bulletMoveFunc.AfterStep.bind(bulletMoveFunc, this));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.body.m_linearVelocity.Set(linearVelocityX, linearVelocityY);\r\n\r\n\t\t\t//TODO: time to live, range limit\r\n\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\tthis.body.AfterStep = () => {\r\n\t\t\t\t\tthis.$tick = (this.$tick | 0) + 1;\r\n\t\t\t\t\tif (this.$tick > (window.$FIRE_BULLET_TIME_TO_LIVE || 60)) {\r\n\t\t\t\t\t\tthis.bulletRenderer.destroy();\r\n\t\t\t\t\t\tthis.destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tif (this.body) {\r\n\t\t\tthis.body.m_world.DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\r\n\t\t\t//this.bulletRenderer.destroy();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Manifold} oldManifold\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nfunction bullet_default_preSolve(contact, oldManifold, fa, fb) {\r\n\t/** @type {PPlayer} */\r\n\tconst targetPlayer = fb.m_userData;\r\n\tif (!targetPlayer) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/** @type {BaseSceneCharacter} */\r\n\tconst targetChara = targetPlayer.chara;//not implement yet\r\n\tif (!targetChara) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/** @type {PBullet} */\r\n\tconst that = fa.m_userData;\r\n\r\n\t/** @type {PPlayer} */\r\n\tconst ownerPlayer = that.owner;\r\n\t\r\n\t//not from self\r\n\tif (ownerPlayer == targetPlayer) {\r\n\t\treturn;\r\n\t}\r\n\tthat.skill.addAttack(targetChara);\r\n\r\n\tcontact.SetEnabled(false);\r\n\r\n\tthat.bulletRenderer.destroy();\r\n\tthat.destroy();\r\n}\r\n\r\n\r\n/**\r\n * 子彈的移動方式\r\n */\r\nexport class BaseBulletMoveFunc {\r\n\tconstructor() {\r\n\t}\r\n\r\n\t//TODO: base bullet move function\r\n\r\n\t/**\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tinit(bullet) {\r\n\t}\r\n\r\n\t/**\r\n\t * before update\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tStep(bullet) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tAfterStep(bullet) {\r\n\t}\r\n}\r\n\r\n\r\n\t///**\r\n\t// * b2Vec2(meter) to Vec2 (pixel)\r\n\t// * @returns {Vec2}\r\n\t// */\r\n\t//getPosition() { }","﻿\r\nimport { IRenderer } from \"./IRenderer.js\";\r\nimport { Sprite } from \"./Sprite.js\";\r\nimport { Animation } from \"./Animation\";\r\nimport { SceneObject } from \"./SceneObject\";\r\nimport { ActionAnimation } from './Renderer/CharacterActionAnimation.js';\r\nimport { CharacterAnimationBase } from \"./Renderer/CharacterRenderer.js\";\r\nimport { PPlayer } from \"./Physics/PPlayer.js\";\r\nimport { SceneCharacter } from \"./SceneCharacter.js\";\r\nimport { World } from \"./Physics/World.js\";\r\nimport { PBullet } from \"./Physics/PBullet.js\";\r\nimport { AttackInfo, AttackPair } from \"../Common/AttackInfo.js\";\r\n\r\nimport { Vec2 } from \"./math.js\";//dev\r\n\r\n\r\n// skill timeline\r\n//\r\n// 以 ActionAnimation 控制流程\r\n// skill 必須要有 ActionAnimation 才能正確運作(開始、結束)\r\n//\r\n// # normal skill\r\n// -delay1        | delay2\r\n// _init          | update\r\n// defaultAction  | wait current_action end\r\n//                | SkillEffect\r\n//\r\n// # rapid skill\r\n// delay1      | delay2         | delay3\r\n// _init       | control/update | update\r\n// prepare     | loop           | end\r\n// SkillEffect | SkillEffect    | SkillEffect\r\n\r\n\r\n/**\r\n * 23001002(藝術跳躍)\r\n * 24001002(幻影瞬步)\r\n */\r\nlet jump2_info = {\r\n\ttype: 40,\r\n\tcasterMove: 1,\r\n\tavaliableInJumpingState: 1\r\n};\r\n\r\n/**\r\n * 23121000(伊修塔爾之環): localhost/xml2/Skill/2312/skill/23121000\r\n */\r\nlet rapid_attack_info = {\r\n\ttype: 2,\r\n\tknockbackLimit: 80,\r\n\trapidAttack: 1\r\n};\r\n\r\n\r\nclass _SkillInfo {\r\n\tconstructor() {\r\n\t\tthis.type = 40;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.casterMove = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.avaliableInJumpingState = 1;\r\n\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.areaAttack = 1;\r\n\r\n\t\tthis.knockbackLimit = 80;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.rapidAttack = 1;\r\n\t}\r\n}\r\nclass _SkillCommonData {\r\n\tconstructor() {\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.lt = null;//new Vec2(-200, -113)\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.rb = null;//new Vec2(-10, 0)\r\n\r\n\t\t/** @type {string} - code */\r\n\t\tthis.mpCon = \"3 + d(x / 6)\";\r\n\r\n\t\t/** @type {string} - code */\r\n\t\tthis.damage = \"175 + 8 * x\";\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.mobCount = 6;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.attackCount = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.maxLevel = 20;\r\n\t}\r\n}\r\nclass _SkillData {\r\n\tconstructor() {\r\n\t\t/** @type {{ [actType: number]: string }} */\r\n\t\tthis.action = {\r\n\t\t\t\"0\": \"dualVulcanLoop\"\r\n\t\t};\r\n\r\n\t\t/** @type {_SkillCommonData} */\r\n\t\tthis.common = null;\r\n\r\n\t\t/** @type {_SkillInfo} */\r\n\t\tthis.info = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.effect = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.prepare = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydown = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydown0 = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydownend = null;\r\n\r\n\t\t/** @type {{[skill_id:string]:{[type:number]:number}}} */\r\n\t\tthis.finalAttack = {\r\n\t\t\t\"23100006\": {\r\n\t\t\t\t\"0\": 52\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.masterLevel = 10;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.combatOrders = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.weapon = 52;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.subWeapon = 35;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.psd = 1;\r\n\r\n\t\t/** @type {number} - ?? */\r\n\t\tthis.psdSkill = {\r\n\t\t\t23111002: {}\r\n\t\t};\r\n\r\n\t\t/** @type {{[skill_id:string]:number}} */\r\n\t\tthis.req = {\r\n\t\t\t\"23111000\": 20\r\n\t\t};\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.canJobRidingUse = 1;\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport class SkillEffectAnimation extends Animation {\r\n\tconstructor(raw/*, url*/) {\r\n\t\tsuper(raw/*, url*/);\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {{x: number, y: number, front:-1|1}} */\r\n\t\tthis.targetRenderer = null;\r\n\r\n\t\t/** @type {PBullet} */\r\n\t\tthis.$physics = null;\r\n\r\n\t\tthis.is_loop = false;\r\n\r\n\t\tthis.opacity = 1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string|number} type - ??\r\n\t * @param {string} url - ??\r\n\t * @param {object} raw - ??\r\n\t */\r\n\tload(type) {\r\n\t\tif (!this._raw) {\r\n\t\t\tthrow new TypeError(\"raw\");\r\n\t\t\t//this._url = [this._url, type].join(\"/\");\r\n\t\t\t//return super.load();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (Array.isArray(this._raw[type])) {\r\n\t\t\t\t/** @type {Sprite[]} */\r\n\t\t\t\tthis.textures = this._raw[type];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/** @type {Sprite[]} */\r\n\t\t\t\tthis.textures = this._raw;\r\n\t\t\t}\r\n\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\tif (!(this.textures[0] instanceof Sprite)) {\r\n\t\t\t\t\tthrow new TypeError();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\r\n\t\tthis.$physics = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.update_p(stamp);\r\n\t\t}\r\n\t\telse if (this.targetRenderer) {\r\n\t\t\tthis.update_r(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.render_p(renderer);\r\n\t\t}\r\n\t\telse if (this.targetRenderer) {\r\n\t\t\tthis.render_r(renderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate_p(stamp) {\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender_p(renderer) {\r\n\t\tconst pos = this.$physics.getPosition();\r\n\t\tconst front = this.$physics.front;\r\n\t\tconst x = pos.x * $gv.CANVAS_SCALE;\r\n\t\tconst y = pos.y * $gv.CANVAS_SCALE;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\t//renderer.pushGlobalAlpha();\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tthis.draw(renderer, x, y, 0, front > 0);\r\n\r\n\t\t//renderer.popGlobalAlpha();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate_r(stamp) {\r\n\t\tstamp *= this.targetRenderer.getSpeed();\r\n\t\t\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender_r(renderer) {\r\n\t\tthis.x = this.targetRenderer.x + this.targetRenderer.tx;//TODO: crr.tx and crr.ty ??\r\n\t\tthis.y = this.targetRenderer.y + this.targetRenderer.ty;\r\n\r\n\t\t//renderer.pushGlobalAlpha();\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tthis.draw(renderer, this.x, this.y, 0, this.targetRenderer.front > 0);\r\n\r\n\t\t//renderer.popGlobalAlpha();\r\n\t}\r\n}\r\n\r\nclass SkillHitAnimation extends SkillEffectAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * TODO: SceneObject 取代 EffectManager\r\n */\r\nexport class EffectManager {\r\n\tconstructor() {\r\n\t}\r\n\t\r\n\tstatic AddEffect(effect) {\r\n\t\teffect.update(0);//init effect position\r\n\t\t\r\n\t\tEffectManager._effects.push(effect);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tstatic Update(stamp) {\r\n\t\tconst effects = EffectManager._effects;\r\n\t\t\r\n\t\tEffectManager._effects = effects.filter(function (eff) {\r\n\t\t\tif (!eff.isEnd()) {\r\n\t\t\t\teff.update(stamp);\r\n\t\t\t}\r\n\t\t\tif (eff.isEnd()) {\r\n\t\t\t\teff.destroy();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tstatic Render(renderer) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\tconst effects = EffectManager._effects;\r\n\t\tfor (let i = 0; i < effects.length; ++i) {\r\n\t\t\teffects[i].render(renderer);\r\n\t\t}\r\n\r\n\t\trenderer.popGlobalAlpha();\r\n\t}\r\n}\r\n/** @type {Animation[]} */\r\nEffectManager._effects = [];\r\n\r\nwindow.$EffectManager = EffectManager;\r\n\r\n\r\n\r\n/**\r\n * \r\n */\r\nclass SkillAnimationBase {\r\n\t///**\r\n\t// * @param {object} raw\r\n\t// * @param {string} url\r\n\t// */\r\n\tconstructor(/*raw, url*/) {\r\n\t\t//this._raw = raw;\r\n\r\n\t\t/**\r\n\t\t * @type {_SkillData}\r\n\t\t */\r\n\t\tthis.data = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.url = null;\r\n\t\t\r\n\t\t//this.textures = {\r\n\t\t//\teffect: [],\r\n\t\t//\thit: {\r\n\t\t//\t\t\"0\": []\r\n\t\t//\t},\r\n\t\t//}\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.skillId = null;\r\n\r\n\t\t/**\r\n\t\t * actType = GetJobInfo(chara).avaliableWeapon.indexOf(ItemInfo.get(chara.weapon).type)\r\n\t\t */\r\n\t\tthis.actType = 0;\r\n\t\t\r\n\t\t/** @type {SceneObject} */\r\n\t\tthis._owner = null;\r\n\r\n\t\t/** @type {CharacterAnimationBase} */\r\n\t\tthis._crr = null;\r\n\r\n\t\t/** @type {ActionAnimation} */\r\n\t\tthis._actani = null;\r\n\t\t\r\n\t\t/** @type {number} - skill type */\r\n\t\tthis.type = 0;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis._$is_end = false;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_launch = false;\r\n\t\t\r\n\t\t//if (raw && url) {\r\n\t\t//\tthis.__load(url, raw, null);\r\n\t\t//}\r\n\r\n\t\t/** @type {\"prepare\"|\"keydown\"|\"keydownend\"} */\r\n\t\tthis.state = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t}\r\n\r\n\tget is_end() {\r\n\t\treturn this._$is_end;\r\n\t}\r\n\tset is_end(value) {\r\n\t\tthis._$is_end = value;\r\n\t\tif (value) {\r\n\t\t\tthis.owner.$physics.state.invokeSkill = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {SceneObject} */\r\n\tget owner() {\r\n\t\treturn this._owner;\r\n\t}\r\n\tset owner(value) {\r\n\t\tif (!value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._owner = value;\r\n\r\n\t\tthis._crr = value.renderer;\r\n\t\tif (!this._crr) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//const chara = value; //??\r\n\t\t//this.actType = GetJobInfo(chara).avaliableWeapon.indexOf(ItemInfo.get(chara.weapon).type)\r\n\r\n\t\tthis._actani = this._crr.actani;\r\n\t\tif (!this._actani) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * return this._owner as SceneCharacter\r\n\t * @alias owner\r\n\t * @returns {SceneCharacter}\r\n\t */\r\n\tget _owner_player() {\r\n\t\treturn this._owner;\r\n\t}\r\n\tset _owner_player(value) {\r\n\t\tthis.owner = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} action\r\n\t */\r\n\t_applyAction(action) {\r\n\t\tif (this._actani && this.data) {\r\n\t\t\tconst actions = this.data.action;\r\n\t\t\tthis._actani.reload(action);//action ? 0, 1\r\n\t\t\tthis._actani.loop = false;\r\n\t\t\t\r\n\t\t\tthis.owner.$physics.state.invokeSkill = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\t_getDefaultAction() {\r\n\t\tconst actions = this.data.action;\r\n\t\treturn actions[this.actType];\r\n\t}\r\n\r\n\t/** skill default action */\r\n\t_applyDefaultAction() {\r\n\t\tthis._applyAction(this._getDefaultAction());\r\n\t}\r\n\r\n\t_isFinishDefaultAction() {\r\n\t\tconst act = this._getDefaultAction();\r\n\t\tif (this._actani) {\r\n\t\t\treturn this._actani._action != act;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * download data, load texture\r\n\t * @param {string} skillId\r\n\t */\r\n\tasync _load(skillId) {\r\n\t\tconst jobID = /^(\\d+)\\d{4}$/.exec(skillId)[1];\r\n\r\n\t\tconst url = `${this.constructor._base_path}/${jobID}/skill/${skillId}`;\r\n\r\n\t\tlet raw;\r\n\t\ttry {\r\n\t\t\traw = await $get.data(url);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\tif (!raw) {\r\n\t\t\talert(\"SkillAnimationBase\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.data = raw;\r\n\t\t\r\n\t\tthis.url = url;\r\n\r\n\t\tthis.skillId = skillId;\r\n\r\n\t\tthis.type = this.data.info ? (this.data.info.type || 0) : 0;//const\r\n\r\n\t\tthis.__proto__ = this._decide_type().prototype;\r\n\t\t{\r\n\t\t\tthis._loadTexture(raw);\r\n\r\n\t\t\tthis._init();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * copy\r\n\t * @param {SkillAnimationBase} skill_anim\r\n\t * @param {SkillAnimationBase} proto - skill prototype\r\n\t */\r\n\t_assign(skill_anim, proto) {\r\n\t\tthis.data = skill_anim.data;\r\n\t\t\r\n\t\tthis.url = skill_anim.url;\r\n\r\n\t\tthis.skillId = skill_anim.skillId;\r\n\t\t\r\n\t\tthis.type = skill_anim.type;//const\r\n\r\n\t\tthis.__proto__ = this._decide_type().prototype;\r\n\t\t{\r\n\t\t\tthis._init();\r\n\t\t}\r\n\t}\r\n\t\r\n\t_loadTexture() {\r\n\t\tfor (let effName of this._effect_names) {\r\n\t\t\tlet eff = this.data[effName];\r\n\t\t\tif (eff) {\r\n\t\t\t\tthis.data[effName] = arrNd_texture(eff/*, [this.url, effName].join(\"/\")*/);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction arrNd_texture(arrNd/*, url*/) {\r\n\t\t\tif (\"0\" in arrNd[0]) {\r\n\t\t\t\treturn arr2d_texture(arrNd/*, url*/);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn arr1d_texture(arrNd/*, url*/);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction arr1d_texture(arr1d/*, url*/) {\r\n\t\t\tlet effect = [];\r\n\t\t\tfor (let  i = 0; i in arr1d; ++i) {\r\n\t\t\t\tlet data = arr1d[i];\r\n\t\t\t\tlet tex = new Sprite(data);\r\n\t\t\t\t//tex._url = `${url}/${i}`;\r\n\t\t\t\teffect[i] = tex;\r\n\t\t\t}\r\n\t\t\teffect.action = arr1d.action;\r\n\t\t\treturn effect;\r\n\t\t}\r\n\t\tfunction arr2d_texture(arr2d/*, url*/) {\r\n\t\t\tlet hit = [];\r\n\t\t\tfor (let i = 0; i in arr2d; ++i) {\r\n\t\t\t\t//const url_i = `${url}/${i}`;\r\n\t\t\t\tlet group = arr2d[i];\r\n\t\t\t\thit[i] = [];\r\n\t\t\t\tfor (let  j = 0; j in group; ++j) {\r\n\t\t\t\t\tlet data = group[j];\r\n\t\t\t\t\tlet tex = new Sprite(data);\r\n\t\t\t\t\t//tex._url = `${url_i}/${j}`;\r\n\t\t\t\t\thit[i][j] = tex;\r\n\t\t\t\t}\r\n\t\t\t\thit[i].action = group.action;\r\n\t\t\t}\r\n\t\t\treturn hit;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * reset and restart\r\n\t */\r\n\treset() {\r\n\t\tthis._actani.reset();\r\n\t\tthis.is_launch = false;\r\n\t}\r\n\r\n\t/**\r\n\t * is owner can invoke skill\r\n\t * @virtual\r\n\t * @param {SceneCharacter} owner\r\n\t * @returns {boolean}\r\n\t */\r\n\ttest(owner) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * onKeydown + onKeyup\r\n\t * TODO: 可控制方向的技能\r\n\t * @virtual\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * TODO: 自動攻擊、被動技能、debuf\r\n\t * @virtual\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$promise) {\r\n\t\t\t//Now loading...\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t\tconsole.warn(\"Skill not implement: \" + this.skillId);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * no timer\r\n\t * @param {number} stamp\r\n\t */\r\n\t_default_update(stamp) {\r\n\t\t//stamp *= this.targetRenderer.getSpeed();\r\n\r\n\t\tif (this._actani) {\r\n\t\t\tif (this._actani.delay) {// not start yet\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (!this.is_launch) {\r\n\t\t\t\tthis._addEffect();\r\n\r\n\t\t\t\tthis.is_launch = true;\r\n\t\t\t}\r\n\t\t\tif (this._actani.isEnd()) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneObject} targetObject\r\n\t */\r\n\taddAttack(targetObject) {\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tconst owner = this._owner;\r\n\r\n\t\tlet attack = new AttackPair();\r\n\r\n\t\t//attack.objectid = targetObject.$objectid;\r\n\t\tattack.setTargetObject(targetObject);\r\n\r\n\t\tattack.allDamage.length = this.data.common.attackCount;\r\n\r\n\t\t////apply damage\r\n\t\t//for (let i = 0; i < attack.allDamage.length; ++i) {\r\n\t\t//\ttargetObject.damage(owner, 123);\r\n\t\t//}\r\n\t\t////\r\n\t\t//targetObject.knockback(chara, 16, 16);\r\n\r\n\t\tthis.attackInfo.allAttack.push(attack);\r\n\t}\r\n\t\r\n\tcreateBullet(effectName) {\r\n\t\tlet eff, bullet;\r\n\r\n\t\t//bullet renderer\r\n\t\t{\r\n\t\t\teff = this._addEffect(effectName);\r\n\r\n\t\t\teff.is_loop = true;\r\n\t\t}\r\n\r\n\t\t//bullet physics\r\n\t\t{\r\n\t\t\tbullet = new PBullet(this.owner.$physics, this, eff);\r\n\r\n\t\t\tbullet._create();\r\n\r\n\t\t\tbullet.launch(null, this.owner.$physics.state.front * (window.$BULLET_SPEED | 32), 0);\r\n\t\t}\r\n\r\n\t\t//link renderer and physics\r\n\t\teff.$physics = bullet;\r\n\r\n\t\treturn bullet;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {boolean} [isBullet=false]\r\n\t */\r\n\t_addDefaultEffect(isBullet) {\r\n\t\tthis._applyDefaultAction();\r\n\t\tthis._addEffect(\"effect\", isBullet);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} [effectName=\"effect\"]\r\n\t * @param {boolean} [isBullet=false]\r\n\t */\r\n\t_addEffect(effectName = \"effect\", isBullet) {\r\n\t\tlet action = this.data[effectName].action;\r\n\t\tif (action) {\r\n\t\t\tthis._applyAction(action);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst type = this.actType;\r\n\t\t\tlet effect = new SkillEffectAnimation(this.data[effectName]/*, [this.url, effectName].join(\"/\")*/);\r\n\r\n\t\t\tif (isBullet) {\r\n\t\t\t\t//...??\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\teffect.targetRenderer = this._crr;\r\n\t\t\t}\r\n\t\t\teffect.load(type);\r\n\r\n\t\t\tEffectManager.AddEffect(effect);\r\n\r\n\t\t\treturn effect;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {{x: number, y: number}=} target\r\n\t * @param {number=} type\r\n\t */\r\n\t_addHitEffect(x, y, target, type) {\r\n\t\tlet hit = new SkillHitAnimation();\r\n\t\t\r\n\t\thit.target = target;\r\n\t\t\r\n\t\thit.load(this.url + \"/hit/\" + type, this.data.hit, type);\r\n\t\t\r\n\t\tEffectManager.AddEffect(hit);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @returns {function():(T extends SkillAnimationBase)}\r\n\t */\r\n\t_decide_type() {\r\n\t\tconst info = this.data.info;\r\n\r\n\t\t//TODO: register skill\r\n\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\tcase 2:\r\n\t\t\t\tif (info.rapidAttack) {\r\n\t\t\t\t\treturn _SkillAnimation_RapidAttack;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40:\r\n\t\t\t\tif (info.casterMove && info.avaliableInJumpingState) {\r\n\t\t\t\t\treturn _SkillAnimation_N_Jump;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn _SkillAnimation_Default;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _effect_names() {\r\n\t\treturn [\"effect\", \"hit\"];\r\n\t}\r\n\t\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Skill\";\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_Default extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis._default_update(stamp);\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_RapidAttack extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\r\n\t\tthis.state = \"prepare\";\r\n\t\tthis._state_func = this._prepare;\r\n\t\tthis.current_effect = this._addEffect(this.state);\r\n\r\n\t\t/** animation */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** fire bullet */\r\n\t\tthis.tick = 0;\r\n\r\n\t\tthis.fadeTotalTime = this._actani.getTotalTime();\r\n\r\n\t\tthis._crr.fixed_speed = true;\r\n\t}\r\n\r\n\t_prepare() {\r\n\t\tthis.current_effect.opacity = this.time / this.fadeTotalTime;\r\n\t\tif (this.current_effect.opacity > 1) {\r\n\t\t\tthis.current_effect.opacity = 1;\r\n\t\t}\r\n\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\tthis.current_effect.opacity = 0;//prepare\r\n\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\tthis.state = \"keydown\";\r\n\t\t\tthis._state_func = this._keydown;\r\n\t\t\tthis.current_effect = this._addEffect(this.state);\r\n\r\n\t\t\tthis._actani.loop = true;\r\n\t\t\tthis.current_effect.is_loop = true;\r\n\r\n\t\t\tthis.time = 0;//reset\r\n\t\t}\r\n\t}\r\n\t_keydown() {\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\t//this.current_effect.reset();\r\n\t\t\t//this.current_effect.opacity = 1;\r\n\t\t\t//this._actani.reset();\r\n\t\t\tthis.time = 0;//reset\r\n\t\t}\r\n\t}\r\n\t_keydownend() {\r\n\t\tthis.current_effect.opacity = 1 - (this.time / this.fadeTotalTime);\r\n\t\tif (this.current_effect.opacity < 0) {\r\n\t\t\tthis.current_effect.opacity = 0;\r\n\t\t}\r\n\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\tthis.current_effect.opacity = 0;//keydownend\r\n\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\tthis._crr.fixed_speed = false;\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * is owner can invoke skill\r\n\t * @override\r\n\t * @param {SceneCharacter} owner\r\n\t * @returns {boolean}\r\n\t */\r\n\ttest(owner) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t\tswitch (this.state) {\r\n\t\t\tcase \"prepare\":\r\n\t\t\tcase \"keydown\":\r\n\t\t\t\tif (!keyDown || keyUp) {\r\n\t\t\t\t\tthis.current_effect.opacity = 0;//keydown\r\n\t\t\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\t\t\tthis.state = \"keydownend\";\r\n\t\t\t\t\tthis._state_func = this._keydownend;\r\n\t\t\t\t\tthis.current_effect = this._addEffect(this.state);\r\n\t\t\t\t\tthis.fadeTotalTime = this._actani.getTotalTime();\r\n\r\n\t\t\t\t\tthis._actani.loop = false;\r\n\t\t\t\t\tthis.time = 0;//reset\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\t//keydown(first step): prepare\r\n\t\t//keydown(second step): keydown + keydown0\r\n\t\t//keyup: keydownend\r\n\r\n\t\tstamp *= this._crr.getSpeed();\r\n\t\tthis.time += stamp;\r\n\r\n\t\t++this.tick;\r\n\r\n\t\tthis._state_func();\r\n\r\n\t\tif (this.tick % (window.$FIRE_BULLET_T | 3) == (window.$FIRE_BULLET_T2 | 2) && this.state != \"keydownend\") {\r\n\t\t\tthis.createBullet(\"ball\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _effect_names() {\r\n\t\treturn [\"prepare\", \"keydown\", \"keydownend\", \"hit\", \"ball\"];\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_N_Jump extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis.jump_max_count = (window.jump_max_count || 2);\r\n\t}\r\n\r\n\tjump2() {\r\n\t\tconst crr = this._crr;\r\n\t\t//const body = this._owner_player.$physics.body;\r\n\t\tconst foot_walk = this._owner_player.$physics.foot_walk;\r\n\r\n\t\tconst pos = this._owner_player.$physics.getPosition();\r\n\t\tconsole.log(\"pos: { x: %o, y: %o }\", pos.x, pos.y);\r\n\r\n\t\t//body.ConstantVelocityWorldCenter2((window.$NJmpX || 40) * crr.front, (window.$NJmpY || 0));\r\n\t\tfoot_walk.ConstantVelocityWorldCenter2((window.$NJmpX || 40) * crr.front, (window.$NJmpY || 0));\r\n\r\n\t\tthis._addDefaultEffect();\r\n\t}\r\n\r\n\t/**\r\n\t * is owner can invoke skill\r\n\t * @override\r\n\t * @param {SceneCharacter} owner\r\n\t * @returns {boolean}\r\n\t */\r\n\ttest(owner) {\r\n\t\tconst $physics = owner.$physics;\r\n\t\tconst state = owner.$physics.state;\r\n\t\treturn !$physics.$foothold && state.jump && state.jump_count < this.jump_max_count;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t\tif (!this._owner_player) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (keyDown == 1 && this.test(this._owner_player)) {\r\n\t\t\tconst $physics = this._owner_player.$physics;\r\n\t\t\t\r\n\t\t\t$physics.state.jump_count += $physics.state.jump_count ? 1 : 2;\r\n\r\n\t\t\tthis.jump2()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst $physics = this._owner_player.$physics;\r\n\r\n\t\tif (this._isFinishDefaultAction()) {\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ($physics.$foothold) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t\telse if (!$physics.state.jump) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * TODO: add skill\r\n */\r\nclass __SkillAnimation_Template extends SkillAnimationBase {\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t\t// ...\r\n\t}\r\n\r\n\t/**\r\n\t * is owner can invoke skill\r\n\t * @override\r\n\t * @param {SceneCharacter} owner\r\n\t * @returns {boolean}\r\n\t */\r\n\ttest(owner) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t}\r\n}\r\n\r\nexport class SceneSkill extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {AttackInfo} */\r\n\t\tthis.attackInfo = new AttackInfo();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @param {SceneObject} owner\r\n\t */\r\n\tasync load(skillId, owner) {\r\n\t\tthis.owner = owner;\r\n\r\n\t\tif (!skillId) {\r\n\t\t\tthrow new Error(\"1 argument required\");\r\n\t\t}\r\n\t\t\r\n\t\tif (String(skillId).length <= 4) {\r\n\t\t\tthrow new Error(\"skill ID format\");\r\n\t\t}\r\n\t\t//skillId = 1120017;//1001005;// jobId + 4-digit\r\n\r\n\t\tthis.attackInfo.skillId = skillId;\r\n\t\t\r\n\t\tthis.update = this.wait_loading;\r\n\t\tthis.control = this.wait_loading;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tlet loaded_skill = SceneSkill.__loaded_skill[skillId];\r\n\t\t\tif (loaded_skill) {\r\n\t\t\t\tif (loaded_skill.$promise) {\r\n\t\t\t\t\tthis.$promise = loaded_skill.$promise;\r\n\t\t\t\t\tawait loaded_skill.$promise;\r\n\t\t\t\t\tdelete this.$promise;\r\n\t\t\t\t}\r\n\t\t\t\tthis._assign(loaded_skill);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet promise = this._load(skillId/*, owner*/);//owner ??\r\n\r\n\t\t\t\tthis.$promise = promise;\r\n\r\n\t\t\t\tSceneSkill.__loaded_skill[skillId] = this;\r\n\r\n\t\t\t\tawait promise;\r\n\r\n\t\t\t\tdelete this.$promise;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(\"can not load skill: %o, owner: %o\", skillId, owner);\r\n\t\t\tdelete this.$promise;\r\n\t\t\tthis.update = this.__load_failed;//debug\r\n\t\t\tthis.control = this.__load_failed;//debug\r\n\t\t\t//delete SceneSkill.__loaded_skill[skillId];//try reload\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\tdelete this.update;\r\n\t\tdelete this.control;\r\n\t}\r\n\t\r\n\twait_loading() {\r\n\t}\r\n\t\r\n\t/**\r\n\t * debug\r\n\t */\r\n\t__load_failed() {\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @returns {SceneSkill}\r\n\t */\r\n\tstatic preload(skillId) {\r\n\t\ttry {\r\n\t\t\tlet loaded_skill = SceneSkill.__loaded_skill[skillId];\r\n\t\t\tif (loaded_skill) {\r\n\t\t\t\treturn loaded_skill;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet skill = new SceneSkill();\r\n\t\t\t\t\r\n\t\t\t\tskill.load(skillId, \"static preload no owner\");\r\n\t\t\t\t\r\n\t\t\t\treturn skill;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(\"can not preload skill: %o\", skillId);\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t}\r\n}\r\nSceneSkill.__loaded_skill = {};\r\n\r\nwindow.$SceneSkill = SceneSkill;\r\n\r\nclass _ArrowKey {\r\n\tconstructor() {\r\n\t\tthis.left = 0;\r\n\t\tthis.up = 0;\r\n\t\tthis.right = 0;\r\n\t\tthis.down = 0;\r\n\t}\r\n}\r\n","﻿/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\nimport {\r\n\tb2_pi,\r\n\tb2Vec2, b2Rot, b2DegToRad, b2Transform, b2AABB,\r\n\tb2Color, b2Draw, b2DrawFlags,\r\n\tb2Body, b2Fixture,\r\n\tb2Joint,\r\n} from \"./Physics.js\";\r\nimport { Rectangle } from \"../math.js\";\r\n\r\n\r\nfunction setFlags(flags, bit, flag) {\r\n\treturn flag ? (flags | bit):(flags & ~bit);\r\n}\r\n\r\nclass DebugDraw extends b2Draw {\r\n\t/**\r\n\t * This class implements debug drawing callbacks that are\r\n\t * invoked inside b2World::Step.\r\n\t * @export\r\n\t * @constructor\r\n\t * @extends {b2Draw}\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\tconstructor(ctx) {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/**\r\n\t\t * @type {CanvasRenderingContext2D}\r\n\t\t */\r\n\t\tthis.m_ctx = ctx;\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.axis_length = 1;\r\n\r\n\t\t/**\r\n\t\t * @type {b2Rot}\r\n\t\t */\r\n\t\tthis.viewRotation = new b2Rot(b2DegToRad(0));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.viewZoom = 1;\r\n\t\t\r\n\t\tthis.flag_drawShape = true;\r\n\t\tthis.flag_drawJoint = true;\r\n\t\tthis.flag_drawAabb = false;\r\n\t\tthis.flag_drawCenterOfMass = true;\r\n\t\tthis.flag_drawController = true;\r\n\t\tthis.flag_drawParticle = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tget canvasScale() {\r\n\t\treturn $gv.CANVAS_SCALE;\r\n\t}\r\n\tset canvasScale(value) {\r\n\t\t$gv.CANVAS_SCALE = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {Rectangle}\r\n\t */\r\n\tget viewRect() {\r\n\t\treturn $gv.m_viewRect;\r\n\t}\r\n\r\n\tset flag_drawAll(flag) { this.m_drawFlags = flag ? b2DrawFlags.e_all : b2DrawFlags.e_none;  }\r\n\tset flag_drawShape(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_shapeBit, flag); }\r\n\tset flag_drawJoint(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_jointBit, flag); }\r\n\tset flag_drawAabb(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_aabbBit, flag); }\r\n\tset flag_drawPair(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_pairBit, flag); }\r\n\tset flag_drawCenterOfMass(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_centerOfMassBit, flag); }\r\n\tset flag_drawParticle(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_particleBit, flag); }\r\n\tset flag_drawController(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_controllerBit, flag); }\r\n\t\r\n\tget flag_drawAll() { this.m_drawFlags; }\r\n\tget flag_drawShape() { return this.m_drawFlags & b2DrawFlags.e_shapeBit; }\r\n\tget flag_drawJoint() { return this.m_drawFlags & b2DrawFlags.e_jointBit; }\r\n\tget flag_drawAabb() { return this.m_drawFlags & b2DrawFlags.e_aabbBit; }\r\n\tget flag_drawPair() { return this.m_drawFlags & b2DrawFlags.e_pairBit; }\r\n\tget flag_drawCenterOfMass() { return this.m_drawFlags & b2DrawFlags.e_centerOfMassBit; }\r\n\tget flag_drawParticle() { return this.m_drawFlags & b2DrawFlags.e_particleBit; }\r\n\tget flag_drawController() { return this.m_drawFlags & b2DrawFlags.e_controllerBit; }\r\n\r\n\tget flagNames() {\r\n\t\treturn [\r\n\t\t\t\"flag_drawAll\",\r\n\t\t\t\"flag_drawShape\",\r\n\t\t\t\"flag_drawJoint\",\r\n\t\t\t\"flag_drawAabb\",\r\n\t\t\t\"flag_drawPair\",\r\n\t\t\t\"flag_drawCenterOfMass\",\r\n\t\t\t\"flag_drawParticle\",\r\n\t\t\t\"flag_drawController\",\r\n\t\t];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.PushTransform = function (xf)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tctx.save();\r\n\t//ctx.translate(xf.p.x, xf.p.y);\r\n\t//ctx.rotate(xf.q.GetAngle());\r\n\tctx.transform(xf.q.c, xf.q.s, -xf.q.s, xf.q.c, xf.p.x, xf.p.y);\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.PopTransform = function (xf)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tctx.restore();\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2[]} vertices\r\n * @param {number} vertexCount\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawPolygon = function (vertices, vertexCount, color)\r\n{\r\n\tif (!vertexCount) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(vertices[0].x, vertices[0].y);\r\n\tfor (let i = 1; i < vertexCount; i++)\r\n\t{\r\n\t\tctx.lineTo(vertices[i].x, vertices[i].y);\r\n\t}\r\n\tctx.closePath();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} vertices\r\n * @param {number} vertexCount\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSolidPolygon = function (vertices, vertexCount, color)\r\n{\r\n\tif (!vertexCount) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(vertices[0].x, vertices[0].y);\r\n\tfor (let i = 1; i < vertexCount; i++)\r\n\t{\r\n\t\tctx.lineTo(vertices[i].x, vertices[i].y);\r\n\t}\r\n\tctx.closePath();\r\n\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\tctx.fill();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} center\r\n * @param {number} radius\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawCircle = function (center, radius, color)\r\n{\r\n\tif (!radius) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.arc(center.x, center.y, radius, 0, b2_pi * 2, true);\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} center\r\n * @param {number} radius\r\n * @param {b2Vec2} axis\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSolidCircle = function (center, radius, axis, color)\r\n{\r\n\tif (!radius) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tlet cx = center.x;\r\n\tlet cy = center.y;\r\n\tctx.beginPath();\r\n\tctx.arc(cx, cy, radius, 0, b2_pi * 2, true);\r\n\tctx.moveTo(cx, cy);\r\n\tctx.lineTo((cx + axis.x * radius), (cy + axis.y * radius));\r\n\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\tctx.fill();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} centers\r\n * @param {number} radius\r\n * @param {b2Color} colors\r\n * @param {number} count\r\n */\r\nDebugDraw.prototype.DrawParticles = function (centers, radius, colors, count) {\r\n\tconst ctx = this.m_ctx;\r\n\tif (ctx) {\r\n\t\tif (colors !== null) {\r\n\t\t\tfor (let i = 0; i < count; ++i) {\r\n\t\t\t\tlet center = centers[i];\r\n\t\t\t\t/** @type {b2Color} */let color = colors[i];\r\n\t\t\t\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\t\t\t\tctx.fillRect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n\t\t\t\t///ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, box2d.b2_pi * 2, true); ctx.fill();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n\t\t\tctx.beginPath();\r\n\t\t\tfor (let i = 0; i < count; ++i) {\r\n\t\t\t\tlet center = centers[i];\r\n\t\t\t\tctx.rect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n\t\t\t\t///ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, box2d.b2_pi * 2, true); ctx.fill();\r\n\t\t\t}\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} p1\r\n * @param {b2Vec2} p2\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSegment = function (p1, p2, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(p1.x, p1.y);\r\n\tctx.lineTo(p2.x, p2.y);\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.DrawTransform = function (xf)\r\n{\r\n\tif (this.axis_length == 0) {\r\n\t\treturn;\r\n\t}\r\n\t// viewport -> canvas\r\n\tlet cs = this.canvasScale;\r\n\tif (!this.viewRect.collide4f2(xf.p.x * cs, xf.p.y * cs, this.axis_length * cs, this.axis_length * cs)) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tthis.PushTransform(xf);\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(0, 0);\r\n\tctx.lineTo(this.axis_length, 0);\r\n\tctx.strokeStyle = b2Color.RED.MakeStyleString(1);\r\n\tctx.stroke();\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(0, 0);\r\n\tctx.lineTo(0, this.axis_length);\r\n\tctx.strokeStyle = b2Color.GREEN.MakeStyleString(1);\r\n\tctx.stroke();\r\n\r\n\tthis.PopTransform(xf);\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} p\r\n * @param {number} size\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawPoint = function (p, size, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.fillStyle = color.MakeStyleString();\r\n\tsize /= this.viewZoom;\r\n\tsize /= this.canvasScale;\r\n\tlet hsize = size / 2;\r\n\tctx.fillRect(p.x - hsize, p.y - hsize, size, size);\r\n}\r\n\r\n/**\r\n * @export\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {string} format\r\n * @param {...string|number} var_args\r\n */\r\nDebugDraw.prototype.DrawString = function (x, y, format, var_args)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tconst font = ctx.font;\r\n\r\n\tlet args = Array.prototype.slice.call(arguments);\r\n\tlet string = goog.string.format.apply(null, args.slice(2));\r\n\r\n\tctx.save();\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.font = '18pt helvetica';//'9pt lucida console';\r\n\t\tlet color = DebugDraw.prototype.DrawString.s_color;\r\n\t\tctx.fillStyle = color.MakeStyleString();\r\n\t\tctx.fillText(string, x, y);\r\n\tctx.restore();\r\n\r\n\tctx.font = font;\r\n}\r\nDebugDraw.prototype.DrawString.s_color = new b2Color(0.9, 0.6, 0.6);\r\n\r\n/**\r\n * @export\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {string} format\r\n * @param {...string|number} var_args\r\n */\r\nDebugDraw.prototype.DrawStringWorld = function (x, y, format, var_args)\r\n{\r\n\tlet p = DebugDraw.prototype.DrawStringWorld.s_p.Set(x, y);\r\n\r\n\t// world -> viewport\r\n\tlet vt = this.viewCenter;\r\n\tb2Vec2.SubVV(p, vt, p);\r\n\tlet vr = this.viewRotation;\r\n\tb2Rot.MulTRV(vr, p, p);\r\n\tlet vs = this.viewZoom;\r\n\tb2Vec2.MulSV(vs, p, p);\r\n\r\n\t// viewport -> canvas\r\n\tlet cs = this.canvasScale;\r\n\tb2Vec2.MulSV(cs, p, p);\r\n\tp.y *= -1;\r\n\tlet cc = DebugDraw.prototype.DrawStringWorld.s_cc.Set(0.5 * this.m_canvas.width, 0.5 * this.m_canvas.height);\r\n\tb2Vec2.AddVV(p, cc, p);\r\n\r\n\tlet ctx = this.m_ctx;\r\n\tconst font = ctx.font;\r\n\r\n\tlet args = Array.prototype.slice.call(arguments);\r\n\tlet string = goog.string.format.apply(null, args.slice(2));\r\n\r\n\tctx.save();\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.font = '18pt helvetica';//'9pt lucida console';\r\n\t\tlet color = DebugDraw.prototype.DrawStringWorld.s_color;\r\n\t\tctx.fillStyle = color.MakeStyleString();\r\n\t\tctx.fillText(string, p.x, p.y);\r\n\tctx.restore();\r\n\r\n\tctx.font = font;\r\n}\r\nDebugDraw.prototype.DrawStringWorld.s_p = new b2Vec2();\r\nDebugDraw.prototype.DrawStringWorld.s_cc = new b2Vec2();\r\nDebugDraw.prototype.DrawStringWorld.s_color = new b2Color(0.5, 0.9, 0.5);\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2AABB} aabb\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawAABB = function (aabb, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.strokeStyle = color.MakeStyleString();\r\n\tlet x = aabb.lowerBound.x;\r\n\tlet y = aabb.lowerBound.y;\r\n\tlet w = aabb.upperBound.x - aabb.lowerBound.x;\r\n\tlet h = aabb.upperBound.y - aabb.lowerBound.y;\r\n\tctx.strokeRect(x, y, w, h);\r\n}\r\n\r\nexport default DebugDraw;\r\n","﻿\r\nimport {\r\n\tb2_linearSlop,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2PolygonShape, b2EdgeShape,\r\n\tb2Body,\r\n\tb2Contact, b2Manifold, b2ContactImpulse, b2WorldManifold\r\n} from \"./Physics.js\";\r\n\r\nimport { World } from \"./World\";\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport class MapLadderRope {\r\n\tconstructor(raw) {\r\n\t\t/** @type {number} - is ladder ? 1 : 0 */\r\n\t\tthis.l = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.uf = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.x = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y1 = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y2 = null;\r\n\r\n\t\t/** @type {number} - ?? */\r\n\t\tthis.page = null;\r\n\r\n\t\t/** @type {number} - select obj from layeredObject[layer] where obj.piece == piece */\r\n\t\tthis.piece = null;\r\n\r\n\t\tObject.assign(this, raw);\r\n\t}\r\n\r\n\tisLadder() {\r\n\t\treturn !!this.l;\r\n\t}\r\n}\r\n\r\n\r\nexport class LadderRope extends MapLadderRope {\r\n\tconstructor(raw) {\r\n\t\tsuper(raw);\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\t}\r\n\r\n\tcalcHeight() {\r\n\t\treturn (this.y2 - this.y1);\r\n\t}\r\n\tcalcHalfHeight() {\r\n\t\treturn (this.y2 - this.y1) * 0.5;\r\n\t}\r\n\tcalcWidth() {\r\n\t\treturn (this.isLadder() ? 16 : 4);\r\n\t}\r\n\tcalcHalfWidth() {\r\n\t\treturn (this.isLadder() ? 16 : 4) * 0.5;\r\n\t}\r\n\tcalcLength() {\r\n\t\treturn (this.y2 - this.y1) / $gv.CANVAS_SCALE;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\t_create(world) {\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tconst x = this.x / $gv.CANVAS_SCALE;\r\n\t\tconst y1 = this.y1 / $gv.CANVAS_SCALE;\r\n\t\tconst y2 = this.y2 / $gv.CANVAS_SCALE;\r\n\t\tconst hwidth = this.calcHalfWidth() / $gv.CANVAS_SCALE;\r\n\t\tconst hheight = (y2 - y1) * 0.5;\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\tbdef.position.Set(x, y1);\r\n\r\n\t\tbdef.angle = 0;\r\n\t\tbdef.gravityScale = 0;\r\n\t\t//bdef.allowSleep = true;\r\n\t\t//bdef.bullet = true;\r\n\t\tbdef.fixedRotation = true;\r\n\t\tbdef.userData = this;\r\n\r\n\t\tthis.body = world.CreateBody(bdef);\r\n\r\n\t\tshape.SetAsBox(hwidth, hheight + 0.5, new b2Vec2(0, hheight - 0.5), 0);\r\n\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"ladder\"));\r\n\r\n\t\tfdef.isSensor = true;\r\n\t\tfdef.userData = this;\r\n\r\n\t\tlet fixture = this.body.CreateFixture(fdef);\r\n\r\n\t\tfixture.beginContact = this.beginContact.bind(this);\r\n\t\tfixture.endContact = this.endContact.bind(this);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tbeginContact(contact, fa, fb) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst targetPlayer = fb.m_userData;\r\n\t\tif (!targetPlayer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!targetPlayer.state.ladder) {\r\n\t\t\ttargetPlayer.contactLadder(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tendContact(contact, fa, fb) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst targetPlayer = fb.m_userData;\r\n\t\tif (!targetPlayer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttargetPlayer.leaveLadder();\r\n\t}\r\n}\r\n\r\n\r\nexport class MapLadderRopeLoader {\r\n\t/**\r\n\t * @param {{[prop:string]:any}} map_raw_data\r\n\t * @param {World} world\r\n\t * @returns {LadderRope[]}\r\n\t */\r\n\tstatic load(map_raw_data, world) {\r\n\t\t/** @type {LadderRope[]} */\r\n\t\tlet ladderRopes = [];\r\n\r\n\t\tfor (let i in map_raw_data.ladderRope) {\r\n\t\t\tlet raw = map_raw_data.ladderRope[i];\r\n\t\t\tlet idx = parseInt(i, 10) - 1;\r\n\t\t\tif (idx >= 0 && Number.isSafeInteger(idx)) {\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: ?? ladderRope\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t\tlet ladderRope = new LadderRope(raw);\r\n\t\t\tladderRope._$index = i;\r\n\t\t\tladderRope._create(world);\r\n\t\t\tladderRopes.push(ladderRope);\r\n\t\t};\r\n\r\n\t\treturn ladderRopes;\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { PRemoteCharacter } from \"./PPlayer.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\n\r\n\r\nwindow.$MobAction_Move_Priority = 2;\r\nwindow.$MobAction_Jump_Priority = 1;\r\n\r\n\r\nexport class MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\t/** @type {string} - ?? */\r\n\t\tthis._name = null;\r\n\r\n\t\t/** @type {Animation} */\r\n\t\tthis._ani = animation;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\tinit() {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tisEnd(pMob) {\r\n\t\tlet end = this._ani.isEnd();\r\n\t\tif (end) {\r\n\t\t\tthis.onEnd(pMob);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tonEnd(pMob) {\r\n\t}\r\n}\r\n\r\nexport class MobAction_Stand extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"stand\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\t//保持停止。\r\n\t\tpMob.ikey[\"left\"] = 0;\r\n\t\tpMob.ikey[\"right\"] = 0;\r\n\t}\r\n}\r\n\r\nexport class _MobAction_Move extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"move\";\r\n\t\tthis.front = 0;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn window.$MobAction_Move_Priority;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\tlet name = pMob.action._name;\r\n\r\n\t\t//switch (pMob.action._name) {\r\n\t\t//\tcase \"attack\":\r\n\t\t//\t\treturn false;\r\n\t\t//\tdefault:\r\n\t\t\t\tif (name.startsWith(\"attack\")) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t//\t\tbreak;\r\n\t\t//}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport class MobAction_MoveLeft extends _MobAction_Move {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis.front = -1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn super.isValid(pMob) && (!pMob.state.jump || this.front == pMob.state.front);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tpMob.ikey[\"left\"] = 1;\r\n\t\tpMob.ikey[\"right\"] = 0;\r\n\t}\r\n\t\r\n\t///**\r\n\t// * @param {PMob} pMob\r\n\t// */\r\n\t//onEnd(pMob) {\r\n\t//\tpMob.ikey[\"left\"] = 0;//不停止移動，下個動作在處理。\r\n\t//}\r\n}\r\n\r\nexport class MobAction_MoveRight extends _MobAction_Move {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis.front = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn super.isValid(pMob) && (!pMob.state.jump || this.front == pMob.state.front);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tpMob.ikey[\"left\"] = 0;\r\n\t\tpMob.ikey[\"right\"] = 1;\r\n\t}\r\n\t\r\n\t///**\r\n\t// * @param {PMob} pMob\r\n\t// */\r\n\t//onEnd(pMob) {\r\n\t//\tpMob.ikey[\"right\"] = 0;//不停止移動，下個動作在處理。\r\n\t//}\r\n}\r\n\r\nexport class MobAction_Jump extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"jump\";\r\n\t\t//this.move = false;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn window.$MobAction_Jump_Priority;\r\n\t}\r\n\r\n\tinit() {\r\n\t\t//this.move = 1 || Math.random() > 0.5;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\tlet name = pMob.action._name;\r\n\r\n\t\tswitch (pMob.action._name) {\r\n\t\t\tcase \"attack\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tif (name.startsWith(\"attack\")) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn !pMob.state.jump;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tif (pMob.state.walk) {\r\n\t\t\tif (pMob.state.front < 0) {\r\n\t\t\t\tpMob.ikey[\"left\"] = 1;\r\n\t\t\t}\r\n\t\t\telse if (pMob.state.front > 0) {\r\n\t\t\t\tpMob.ikey[\"right\"] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tpMob.ikey[\"jump\"] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tonEnd(pMob) {\r\n\t\t//if (this.move) {\r\n\t\t//\tif (pMob.state.front < 0) {\r\n\t\t//\t\tpMob.ikey[\"left\"] = 0;\r\n\t\t//\t}\r\n\t\t//\telse if (pMob.state.front > 0) {\r\n\t\t//\t\tpMob.ikey[\"right\"] = 0;\r\n\t\t//\t}\r\n\t\t//}\r\n\t\tpMob.ikey[\"jump\"] = 0;\r\n\t}\r\n}\r\n\r\nexport class MobAction_Attack extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"attack\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn pMob.action.isEnd();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t}\r\n}\r\n\r\nexport class PMob extends PRemoteCharacter {\r\n\t/**\r\n\t * @param {MapMob} mapMob\r\n\t */\r\n\tconstructor(mapMob) {\r\n\t\tsuper();\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.attackTarget = true;\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis._enable_rx = false;\r\n\t\t\r\n\t\t/** @type {MapMob} */\r\n\t\tthis.chara = mapMob;\r\n\r\n\t\t//TODO: move this code to ??\r\n\t\tif (mapMob) {\r\n\t\t\tif (mapMob.renderer.isFlyMob()) {\r\n\t\t\t\tthis.setMovementSpeed(this._info.flySpeed);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setMovementSpeed(this._info.speed);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.activityRegion = null;\r\n\t\t\r\n\t\tthis.$debugControl = false;\r\n\r\n\t\t/** @type {{[action:string]:number}} */\r\n\t\tthis.ikey = {};\r\n\r\n\t\t/** @type {MobActionController[]} */\r\n\t\tthis.actions = [];\r\n\r\n\t\t/** @type {MobActionController} */\r\n\t\tthis.action = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {} param - ??\r\n\t */\r\n\t_registerAction(param) {\r\n\t\tthis.actions.push(param);\r\n\t}\r\n\r\n\t/**\r\n\t * {[action:string]:{ controller:MobActionController, renderer:Animation }}\r\n\t * @param {{[action:string]:Animation}} actions\r\n\t * @param {{[action:string]:MobActionController[]} =act_map\r\n\t */\r\n\t_loadAction(actions, act_map) {\r\n\t\tact_map = act_map || {\r\n\t\t\tstand: [MobAction_Stand],\r\n\t\t\tmove: [MobAction_MoveLeft, MobAction_MoveRight],\r\n\t\t\tjump: [MobAction_Jump],\r\n\t\t};\r\n\t\t\r\n\t\tObject.keys(actions).forEach(key => {\r\n\t\t\tif (actions[key] && act_map[key]) {\r\n\t\t\t\tconst list = act_map[key];\r\n\t\t\t\tfor (let type of list) {\r\n\t\t\t\t\tlet controller = new type(actions[key]);\r\n\t\t\t\t\tlet priority = controller.priority;\r\n\r\n\t\t\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\t\t\tif (!(Number.isSafeInteger(priority) && priority > 0)) {\r\n\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0; i < priority; ++i) {\r\n\t\t\t\t\t\tthis._registerAction(controller);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.warn(\"未完成 MobActionController: \" + key);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.action = this.actions[0];\r\n\t\tif (!this.action) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _info() {\r\n\t\treturn this.chara.renderer._raw.info;\r\n\t}\r\n\tget hasBodyDamage() {\r\n\t\tif (this._info.bodyAttack != 0 && this._info.bodyAttack != 1) {\r\n\t\t\talert(\"bodyAttack:\" + this._info.bodyAttack);\r\n\t\t}\r\n\t\treturn this._info.bodyAttack != 0;\r\n\t}\r\n\tget _speed() {\r\n\t\treturn this._info.speed;\r\n\t}\r\n\tget _pushed() {\r\n\t\treturn this._info.pushed;\r\n\t}\r\n\tget _fs() {\r\n\t\treturn this._info.fs;\r\n\t}\r\n\tget _category() {\r\n\t\treturn this._info.category;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {string}\r\n\t */\r\n\tget _body_category() {\r\n\t\treturn \"mob\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\t\t\r\n\t\tthis.setPosition(this.chara.x / $gv.CANVAS_SCALE, this.chara.y / $gv.CANVAS_SCALE, true);\r\n\t\t\r\n\t\tthis._appleMobCategory(this._category);\r\n\t}\r\n\t_appleMobCategory(category) {\r\n\t\tswitch (category) {\r\n\t\t\tcase 1:\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.__setAsWalkOnlyMob();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.__setAsJumpDropMob();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.__setAsWalkOnlyMob();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.chara.front = this.chara.spawn.f ? 1:-1;\r\n\t}\r\n\t__setAsWalkOnlyMob() {\r\n\t\tconst ground = this.body.GetWorld().ground;\r\n\t\t\r\n\t\tconst fhId = this.chara.spawn.fh;\r\n\t\t\r\n\t\tif (fhId >= 0) {\r\n\t\t\tlet fh = ground.footholds[fhId];\r\n\r\n\t\t\tthis.activityRegion = ground.rectChains[fh.chain];\r\n\t\t}\r\n\t}\r\n\t__setAsJumpDropMob() {\r\n\t}\r\n\t\r\n\tisCanMove() {\r\n\t\treturn !(this._info.ignoreMoveImpact || this._walker_omega == 0 || this._info.noFlip);\r\n\t}\r\n\t\r\n\t/** @override */\r\n\tcontrol() {\r\n\t\tif (this.isCanMove()) {\r\n\t\t\tswitch (this._category) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tthis._control_basic(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tthis._control_basic(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._control_basic(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//this.ikey[\"jump\"] = 0;\r\n\t\t\t//this.ikey[\"left\"] = 0;\r\n\t\t\t//this.ikey[\"right\"] = 0;\r\n\r\n\t\t\tsuper.control(this.ikey);\r\n\t\t}\r\n\t}\r\n\t_control_basic(isAllowJump) {\r\n\t\tif (this.action) {\r\n\t\t\tif (this.action.isEnd(this)) {\r\n\t\t\t\tlet actions = this.actions.filter(act => act.isValid(this));\r\n\t\t\t\tlet next = Math.trunc(Math.random() * 100) % actions.length;\r\n\r\n\t\t\t\tthis.action = actions[next];\r\n\r\n\t\t\t\tif (!this.action) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.action.init();\r\n\r\n\t\t\t\t//console.log(\"mob: \" + this.action.name);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t}\r\n\r\n\t\t\tthis.action.update(this);\r\n\t\t}\r\n\t}\r\n\r\n\tstop() {\r\n\t\tconst empty = {};\r\n\t\tthis.ikey = empty;\r\n\t\tsuper.control(empty);\r\n\t}\r\n\t\r\n\tStep() {\t\t\r\n\t\tsuper.Step();\r\n\t\t\r\n\t\tthis.control();\r\n\t\t\r\n\t\tlet rx0, rx1, limit_action;\r\n\t\t\r\n\t\tif (this.attackTarget && this.activityRegion) {\r\n\t\t\trx0 = this.activityRegion.left;\r\n\t\t\trx1 = this.activityRegion.right;\r\n\t\t\tlimit_action = true;\r\n\t\t}\r\n\t\telse if (!this._enable_rx) {\r\n\t\t\trx0 = this.chara.spawn.rx0;\r\n\t\t\trx1 = this.chara.spawn.rx1;\r\n\t\t\tlimit_action = false;\r\n\t\t}\r\n\t\t\r\n\t\tif (limit_action) {\r\n\t\t\tconst cbpos = this.body.GetPosition();\r\n\t\t\tconst x = cbpos.x * $gv.CANVAS_SCALE;\r\n\t\t\tconst y = cbpos.y * $gv.CANVAS_SCALE;\r\n\t\t\tconst dx0 = rx0 - x;\r\n\t\t\tconst dx1 = x - rx1;\r\n\t\t\t\r\n\t\t\tif (dx0 > 0) {\r\n\t\t\t\tconst fwpos = this.foot_walk.GetPosition();\r\n\t\t\t\tthis.body.SetPositionXY(rx0 / $gv.CANVAS_SCALE, cbpos.y);\r\n\t\t\t\tthis.foot_walk.SetPositionXY(rx0 / $gv.CANVAS_SCALE, fwpos.y);\r\n\t\t\t}\r\n\t\t\telse if (dx1 > 0) {\r\n\t\t\t\tconst fwpos = this.foot_walk.GetPosition();\r\n\t\t\t\tthis.body.SetPositionXY(rx1 / $gv.CANVAS_SCALE, cbpos.y);\r\n\t\t\t\tthis.foot_walk.SetPositionXY(rx1 / $gv.CANVAS_SCALE, fwpos.y);\r\n\r\n\t\t\t\tif (!this.attackTarget) {\r\n\t\t\t\t\tthis.state.front *= -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tAfterStep() {\r\n\t\tsuper.AfterStep();\r\n\t\t\r\n\t\tconst pos = this.getPosition();\r\n\t\tconst x = pos.x * $gv.CANVAS_SCALE;\r\n\t\tconst y = pos.y * $gv.CANVAS_SCALE;\r\n\t\t\r\n\t\tthis.chara.x = x;\r\n\t\tthis.chara.y = y;\r\n\t\t\r\n\t\tif (!this._info.noFlip) {\r\n\t\t\tthis.chara.front = -this.state.front;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nexport class MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tthis.createDelay = 0;\r\n\t\tthis.collisionDelay = 0;\r\n\t\tthis.duration = 0;\r\n\t\t\r\n\t\tthis.moveSpeed = 0;\r\n\t\tthis.angle = 0;\r\n\t\t\r\n\t\tthis.flip = false;\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis._speed_x = 0;//uint: px/second\r\n\t\tthis._speed_y = 0;//uint: px/second\r\n\t}\r\n}\r\n\r\nexport class MobSkillBallBase extends SceneObject {\r\n\t/**\r\n\t * @param {MobSkillBallDefinition} ballDef\r\n\t * @param {{[x:string]:Animation} animations\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tballDef = Object.assign(new this._BallDefinition(), ballDef);\r\n\t\t\r\n\t\tthis.createDelay = ballDef.createDelay;\r\n\t\tthis.collisionDelay = ballDef.collisionDelay;\r\n\t\tthis.duration = ballDef.duration;\r\n\t\t\r\n\t\tthis.moveSpeed = ballDef.moveSpeed;\r\n\t\tthis.angle = ballDef.angle * Math.PI / 180;//deg to rad\r\n\t\t\r\n\t\tthis.x = ballDef.x;\r\n\t\tthis.y = ballDef.y;\r\n\t\t\r\n\t\tif (this.moveSpeed) {\r\n\t\t\tthis._speed_x = Math.cos(this.angle + Math.PI) * this.moveSpeed;//uint: px/second\r\n\t\t\tthis._speed_y = Math.sin(this.angle + Math.PI) * this.moveSpeed;//uint: px/second\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._speed_x = 0;//uint: px/second\r\n\t\t\tthis._speed_y = 0;//uint: px/second\r\n\t\t}\r\n\t\t\r\n\t\tthis.state = this.E_BEFORE_CREATE;\r\n\t}\r\n\t\r\n\tget E_BEFORE_CREATE() { return 0; }\r\n\tget E_CREATED() { return 1; }\r\n\tget E_BEGIN_COLLISION() { return 2; }\r\n\tget E_ENG_COLLISION() { return 3; }\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.state = this.E_CREATED;\r\n\t\tif (this.collisionDelay > 0) {\r\n\t\t\tthis.enablePhysics = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tbegin_collision() {\r\n\t\tthis.enablePhysics = true;\r\n\t\tthis.state = this.E_BEGIN_COLLISION;\r\n\t}\r\n\t\r\n\tend_collision() {\r\n\t\tthis.enablePhysics = false;\r\n\t\tthis.state = this.E_ENG_COLLISION;\r\n\t}\r\n\t\r\n\t/**\r\n\t * debug\r\n\t * @param {PWorld} pWorld\r\n\t */\r\n\tupdate(stamp, pWorld) {\r\n\t\tif (this.state == this.E_BEFORE_CREATE) {\r\n\t\t\tthis.createDelay -= stamp;\r\n\t\t\tif (this.createDelay <= 0) {\r\n\t\t\t\tthis.create();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state == this.E_CREATED) {\r\n\t\t\t\tthis.collisionDelay -= stamp;\r\n\t\t\t\tif (this.collisionDelay <= 0) {\r\n\t\t\t\t\tthis.begin_collision();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.state == this.E_BEGIN_COLLISION) {\r\n\t\t\t\tif (this.duration > 0) {\r\n\t\t\t\t\tthis.duration -= stamp;\r\n\t\t\t\t\tif (this.duration) {\r\n\t\t\t\t\t\tthis.end_collision();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!window.$stop) {//debug\r\n\t\t\t\tthis.x += this._speed_x * stamp / 1000;//debug\r\n\t\t\t\tthis.y += this._speed_y * stamp / 1000;//debug\r\n\t\t\t}\r\n\t\t\tthis.renderer.update(stamp);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} engine\r\n\t */\r\n\trender(engine) {\r\n\t\tif (this.state != this.E_BEFORE_CREATE) {\r\n\t\t\tconst flip = this.flip;\r\n\t\t\tthis.renderer.draw(engine, this.x, this.y, this.angle, flip);\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nexport class MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tthis._raw = _raw;\r\n\t\tthis._url = _url;\r\n\t\t\r\n\t\tthis.level = null;\r\n\t\t\r\n\t\tthis.animations = {};\r\n\t}\r\n\t\r\n\t/** @param {number} level */\r\n\tasync load(level) {\r\n\t\tthis.level = level;\r\n\t\t\r\n\t\tif (!this._raw && !this._url) {\r\n\t\t\tthis._url = [this._base_path, level].join(\"/\");\r\n\t\t\t\r\n\t\t\tthis._raw = await $get.data(this._url);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let name of this._anima_name_list) {\r\n\t\t\t//name = \"ball0\";\r\n\t\t\tlet anima = new Animation(this._raw[name], [this._url, name].join(\"/\"));\r\n\t\t\tanima.is_loop = true;\r\n\t\t\tanima.load();\r\n\t\t\tthis.animations[name] = anima;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {void} */\r\n\tinvoke() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/** @returns {string} */\r\n\tget _base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\n","﻿\r\nexport class KeySlotData {\r\n}\r\n\r\n","\r\nwindow.DownloadData = (function () {\r\n\tlet a = document.createElement(\"a\");\r\n\tdocument.body.appendChild(a);\r\n\ta.style = \"display: none\";\r\n\ta.target = \"_blank\";\r\n\treturn function (text, type, fileName) {\r\n\t\tlet blob = new Blob([text], { type: type || \"octet/stream\" });\r\n\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\tif (fileName && fileName != \"\") {\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = fileName;\r\n\t\t\ta.click();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//a.href = url;\r\n\t\t\t//a.click();\r\n\t\t\twindow.open(url, '_blank');\r\n\t\t}\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n}());\r\n\r\nwindow.SelectText = function (elem) {\r\n\tvar range, selection;\r\n\r\n\tif (document.body.createTextRange) {\r\n\t\trange = document.body.createTextRange();\r\n\t\trange.moveToElementText(elem);\r\n\t\trange.select();\r\n\t}\r\n\telse if (window.getSelection) {\r\n\t\tselection = window.getSelection();\r\n\t\trange = document.createRange();\r\n\t\trange.selectNodeContents(elem);\r\n\t\tselection.removeAllRanges();\r\n\t\tselection.addRange(range);\r\n\t}\r\n}\r\nwindow.copyToClipboard = function (text) {\r\n\tvar $temp = $(\"<input>\");\r\n\t$(\"body\").append($temp);\r\n\t$temp.val(text).select();\r\n\tdocument.execCommand(\"copy\");\r\n\t$temp.remove();\r\n}\r\n\r\n/**\r\n * disable textNode \"#text\"\r\n * @param {string} xml - xml\r\n * @param {string[]=} arrayTags - optional\r\n * @returns {object}\r\n */\r\nfunction parseXml(xml, arrayTags) {\r\n\tvar dom = null;\r\n\tif (window.DOMParser) {\r\n\t\tdom = (new DOMParser()).parseFromString(xml, \"text/xml\");\r\n\t}\r\n\telse if (window.ActiveXObject) {\r\n\t\tdom = new ActiveXObject('Microsoft.XMLDOM');\r\n\t\tdom.async = false;\r\n\t\tif (!dom.loadXML(xml)) {\r\n\t\t\tthrow dom.parseError.reason + \" \" + dom.parseError.srcText;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tthrow \"cannot parse xml string!\";\r\n\t}\r\n\r\n\tfunction isArray(o) {\r\n\t\treturn Object.prototype.toString.apply(o) === '[object Array]';\r\n\t}\r\n\r\n\tfunction parseNode(xmlNode, result) {\r\n\t\tif (xmlNode.nodeName == \"#text\" && xmlNode.nodeValue.trim() == \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar jsonNode = {};\r\n\t\tvar existing = result[xmlNode.nodeName];\r\n\t\tif (existing) {\r\n\t\t\tif (!isArray(existing)) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [existing, jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName].push(jsonNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName] = jsonNode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (xmlNode.attributes) {\r\n\t\t\tvar length = xmlNode.attributes.length;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tvar attribute = xmlNode.attributes[i];\r\n\t\t\t\tjsonNode[attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar length = xmlNode.childNodes.length;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tparseNode(xmlNode.childNodes[i], jsonNode);\r\n\t\t}\r\n\t}\r\n\r\n\tvar result = {};\r\n\tif (dom.childNodes.length) {\r\n\t\tparseNode(dom.childNodes[0], result);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n","\r\n/**\r\n * usage:\r\n *\tvar fairyDust = new FairyDust();\r\n *\tfairyDust.load(4).then(()=>fairyDust.invoke());\r\n */\r\n\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { MobSkillBallDefinition, MobSkillBallBase, MobSkillBase } from \"./MobSkillBase.js\";\r\n\r\n\r\nclass FairyDustBallDefinition extends MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.scale = 0;// 1~3\r\n\t}\r\n}\r\n\r\nexport class FairyDustBall extends MobSkillBallBase {\r\n\t/**\r\n\t * @param {FairyDustBallDefinition} ballDef\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper(ballDef, animations);\r\n\t\t\r\n\t\tthis.x = 1000;\r\n\t\tthis.y = -80;\r\n\t\t\r\n\t\t//this.scale = ballDef.scale;\r\n\t\t\r\n\t\tthis.renderer = animations[\"ball\" + ballDef.scale].clone();\r\n\t}\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.$physics = {// make dummy for debug\r\n\t\t\tstate: {}\r\n\t\t};\r\n\t\t\r\n\t\tsuper.create(pWorld);//complete create\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\treturn FairyDustBallDefinition;\r\n\t}\r\n}\r\nexport class FairyDustBallHit extends SceneObject {\r\n\tconstructor(target, animations) {\r\n\t\tsuper();\r\n\t\t//MouseJoint\r\n\t\t//World.CreateJoint()\r\n\t}\r\n}\r\n\r\nexport class FairyDust extends MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t}\r\n\t\r\n\t/** @param {4|10} level */\r\n\t\r\n\tinvoke() {\r\n\t\tconst s = this._raw.s;\r\n\t\tconst s2 = this._raw.s2;\r\n\t\tconst v = this._raw.v;\r\n\t\tconst v2 = this._raw.v2;\r\n\t\tconst w = this._raw.w;\r\n\t\tconst w2 = this._raw.w2;\r\n\t\tconst u = this._raw.u;\r\n\t\tlet x = this._raw.x;\r\n\t\t\r\n\t\tfor (let i = 0, max = Randomizer.randInt(w, w + w2); i < max; i++) {\r\n\t\t\tx += Randomizer.nextInt(x);\r\n\t\t\tlet ball = new FairyDustBall({\r\n\t\t\t\tscale: Randomizer.nextInt(3),\r\n\t\t\t\tcreateDelay: u,\r\n\t\t\t\tmoveSpeed: v + Randomizer.nextInt(v2),\r\n\t\t\t\tangle: x + Randomizer.randInt(s, s2),\r\n\t\t\t}, this.animations);\r\n\t\t\t$gv.SceneObjectMgr.addToScene(10, ball);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\treturn [\"ball0\", \"ball1\", \"ball2\"];\r\n\t}\r\n\t\r\n\tget _base_path() {\r\n\t\treturn \"/Skill/MobSkill/238/level\";\r\n\t}\r\n}\r\n\r\nexport class _FairyDust extends FairyDust {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t}\r\n\t/** @override */\r\n\tload(level) {\r\n\t\tif (!this._raw && !this._url) {\r\n\t\t\tthis._raw = window.MOB_SKILL_RAW[238].level[level];\r\n\t\t\tthis._url = [this._base_path, level].join(\"/\");\r\n\t\t}\r\n\t\tsuper.load(level);\r\n\t}\r\n}\r\n\r\n","﻿\r\nlet LoginPacket = require(\"./LoginPacket.js\");\r\nlet ChatPacket = require(\"./ChatPacket.js\");\r\nlet CharacterPacket = require(\"./CharacterPacket.js\");\r\n\r\nlet ex = Object.assign({},\r\n\tLoginPacket,\r\n\tChatPacket,\r\n\tCharacterPacket\r\n);\r\n\r\nmodule.exports = ex;\r\n","﻿\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { Sprite } from \"../Sprite.js\";\r\nimport { LayerObject, Layer } from \"./Layer.js\";\r\nimport { RenderingOption } from \"./RenderingOption.js\";\r\nimport { DamagePair, AttackInfo } from \"../../Common/AttackInfo.js\";\r\n\r\n// 123\r\n// NoRed[1][1], NoRed[0][2], NoRed[0][3], ...\r\n\r\nclass _DamageSkin {\r\n\tconstructor() {\r\n\t\t/** @type {DamageNumberTextures} */\r\n\t\tthis.NoRed = null;\r\n\t\t/** @type {DamageNumberTextures} */\r\n\t\tthis.NoCri = null;\r\n\t}\r\n}\r\nclass _DamageSkinDefault extends _DamageSkin {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoBlue = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoViolet = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoProduction = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoKite = null;\r\n\t}\r\n}\r\n\r\n\r\n/** @type {{default:_DamageSkinDefault,[skin:string]:_DamageSkin}} */\r\nconst loaded_skin = {};\r\n\r\nclass DamageNumberTextures {\r\n\tconstructor() {\r\n\t\t/** @type {Sprite} */\r\n\t\tfor (let i = 0; i <= 9; ++i) {\r\n\t\t\tthis[i] = null;\r\n\t\t}\r\n\t\tthis.addedCanvasH = 0;\r\n\t}\r\n\t/**\r\n\t * @param {string} path\r\n\t */\r\n\tasync _load(path) {\r\n\t\tconst _raw = await $get.data(path);\r\n\t\t\r\n\t\tObject.keys(_raw).forEach(key => {\r\n\t\t\tlet texture = new Sprite(_raw[key]);\r\n\r\n\t\t\ttexture._url = [path, key].join(\"/\");\r\n\r\n\t\t\tthis[key] = texture;\r\n\t\t});\r\n\r\n\t\tthis.addedCanvasH = _raw.addedCanvasH | 0;\r\n\t}\r\n}\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.Miss = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.guard = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.shot = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.effect = null;\r\n\r\n\r\nfunction font_adv(texture) {\r\n\treturn texture.width * 3 / 4;\r\n}\r\n\r\nfunction draw_axis(ctx, x, y) {\r\n\tctx.strokeStyle = \"#F00\";\r\n\tctx.beginPath();\r\n\tctx.moveTo(x, y);\r\n\tctx.lineTo(x, y + 10);\r\n\tctx.stroke();\r\n\r\n\tctx.strokeStyle = \"#0F0\";\r\n\tctx.beginPath();\r\n\tctx.moveTo(x, y);\r\n\tctx.lineTo(x + 10, y);\r\n\tctx.stroke();\r\n}\r\n\r\nclass DamageNumberRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.style = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.skin = null;\r\n\r\n\t\t/** @type {DamageNumberTextures[]} - this.textures[is_first_num ? 1:0][num] */\r\n\t\tthis.textures = [];\r\n\r\n\t\t/** @type {number[]} */\r\n\t\tthis.rand_y = [0];\r\n\t\tfor (let i = 1, sign = Math.random() > 0.5 ? -1:1; i < DamageNumberRenderer.max_display_digit; ++i) {\r\n\t\t\tthis.rand_y[i] = Math.random() * DamageNumberRenderer.max_rand_y * sign;\r\n\t\t\tsign *= -1;\r\n\t\t}\r\n\r\n\t\t///** @type {Promise<void>} */\r\n\t\t//this._$promise = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {DamageNumberRenderer} other\r\n\t */\r\n\t_copy(other) {\r\n\t\tthis._url = other._url;\r\n\t\tthis.skin = other.skin;\r\n\t\tthis.style = other.style;\r\n\t\tthis.textures = other.textures;\r\n\r\n\t\t//loading\r\n\t\tif (this._$promise) {\r\n\t\t\tthis._$promise = other._$promise;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @returns {Promise<DamageNumberRenderer>}\r\n\t */\r\n\tasync _load(skin, style) {\r\n\t\tlet tasks = [];\r\n\t\tlet url;\r\n\r\n\t\tif (skin == \"default\") {\r\n\t\t\turl = this._default_base_path + style;\r\n\t\t}\r\n\t\telse {\r\n\t\t\turl = this._skin_base_path + [skin, style].join(\"/\");\r\n\t\t}\r\n\r\n\t\tif (!loaded_skin[skin]) {\r\n\t\t\tloaded_skin[skin] = {};\r\n\t\t}\r\n\t\tloaded_skin[skin][style] = this;\r\n\r\n\t\tthis._url = url;\r\n\t\tthis.skin = skin;\r\n\t\tthis.style = style;\r\n\r\n\t\tfor (let i = 0; i <= 1; ++i) {\r\n\t\t\tconst sPath = url + i;\r\n\t\t\t\r\n\t\t\tthis.textures[i] = new DamageNumberTextures();\r\n\r\n\t\t\ttasks[i] = this.textures[i]._load(sPath);\r\n\t\t}\r\n\r\n\t\tawait Promise.all(tasks);\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @returns {Promise<DamageNumberRenderer>}\r\n\t */\r\n\tasync load(skin, style) {\r\n\t\tlet loaded;\r\n\r\n\t\tif (loaded_skin[skin]) {\r\n\t\t\tloaded = loaded_skin[skin][style];\r\n\t\t}\r\n\r\n\t\tif (loaded) {\r\n\t\t\tthis._copy(skin, loaded);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._$promise = this._load(skin, style);\r\n\r\n\t\t\tawait this._$promise;\r\n\r\n\t\t\tdelete this._$promise;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} damage\r\n\t * @param {boolean} critical\r\n\t * @param {number} cx\r\n\t * @param {number} cy\r\n\t */\r\n\tdraw(renderer, damage, critical, cx, cy) {\r\n\t\tlet str_damage = damage.toFixed(0);\r\n\r\n\t\t/** @type {Sprite} */\r\n\t\tlet texture;\r\n\t\tlet text_width = 0;\r\n\r\n\t\t{\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\ttext_width += -texture.x;\r\n\t\t\ttext_width += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length - 1; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\ttext_width += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tlet x = cx - text_width / 2;\r\n\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\ttexture.draw2(x, cy);\r\n\t\t\tx += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\ttexture.draw2(x, cy + this.rand_y[i]);\r\n\r\n\t\t\t\tx += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._display_axis) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\t\t\tlet x = cx - text_width / 2;\r\n\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\tdraw_axis(ctx, x, cy);\r\n\t\t\tx += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\tdraw_axis(ctx, x, cy + this.rand_y[i]);\r\n\r\n\t\t\t\tx += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget _default_base_path() {\r\n\t\treturn \"/Effect/BasicEff/\";\r\n\t}\r\n\tget _skin_base_path() {\r\n\t\treturn \"/Effect/BasicEff/damageSkin/\";\r\n\t}\r\n}\r\nDamageNumberRenderer.loaded_skin = loaded_skin;\r\nDamageNumberRenderer.max_display_digit = Math.trunc(Math.log10(Number.MAX_SAFE_INTEGER) + 1);\r\nDamageNumberRenderer.max_rand_y = 5;\r\n\r\n\r\nexport class DamageNumber extends LayerObject {\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @param {DamagePair} damagePair\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t */\r\n\tconstructor(skin, style, damagePair, x, y, delay) {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\tthis.vy = DamageNumber.move_y / DamageNumber.time_tt;\r\n\r\n\t\tthis.delay = delay;\r\n\t\tthis.time = 0;\r\n\t\tthis.state = 0;\r\n\r\n\t\tthis.damagePair = damagePair;\r\n\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.renderer;\r\n\r\n\t\tthis._load(skin, style);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @param {number} recursive\r\n\t */\r\n\t_load(skin, style, recursive) {\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tlet loaded;\r\n\t\t\r\n\t\tif (loaded_skin[skin]) {\r\n\t\t\tloaded = loaded_skin[skin][style];\r\n\t\t}\r\n\r\n\t\tif (loaded) {\r\n\t\t\tthis.renderer = loaded;\r\n\r\n\t\t\tthis._$promise = this.renderer._$promise;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderer = new DamageNumberRenderer();\r\n\t\t\tthis._$promise = this.renderer.load(skin, style);\r\n\t\t}\r\n\t\tif (this._$promise) {\r\n\t\t\tthis.render = this.$noRender;\r\n\r\n\t\t\tthis._$promise\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tdelete this.render;\r\n\t\t\t\t\tdelete this._$promise;\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\tdelete this._$promise;\r\n\t\t\t\t\tconsole.error(`Can't load damageSkin[${skin}][${style}]`);\r\n\r\n\t\t\t\t\tif (recursive) {\r\n\t\t\t\t\t\tthrow Error();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log(`try load damageSkin[\"default\"][${style}]`);\r\n\t\t\t\t\t\tthis._load(\"default\", style, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t$noRender() {\r\n\t\t// nothing\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.state = 2;\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\treturn this.state >= 1 && this.time > 1000;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.time += stamp;\r\n\r\n\t\tif (this.delay && this.time >= this.delay) {\r\n\t\t\tthis.time = 0;\r\n\t\t\tthis.delay = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.y += this.vy * stamp;\r\n\r\n\t\t\tif (this.state == 0) {\r\n\t\t\t\tthis.vy = this.vy * DamageNumber.move_avy;\r\n\r\n\t\t\t\tif (this.time > DamageNumber.time_d1) {\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.state = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.state == 1) {\r\n\t\t\t\tthis.vy = this.vy * DamageNumber.move_avy2;\r\n\r\n\t\t\t\tif (this.time < DamageNumber.time_d2) {\r\n\t\t\t\t\tthis.opacity = 1 - (this.time / DamageNumber.time_d2);\r\n\t\t\t\t\t//this.opacity = Math.clamp(this.opacity, 0, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.opacity = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\trenderer.globalAlpha = this.opacity * option.opacity;\r\n\t\tthis.renderer.draw(renderer, this.damagePair.realDamage, this.damagePair.critical, this.x, this.y);\r\n\t}\r\n}\r\nDamageNumber.time_d1 = 1000;\r\nDamageNumber.time_d2 = 1000;\r\nDamageNumber.time_tt = DamageNumber.time_d1 + DamageNumber.time_d2;\r\nDamageNumber.move_y = -300;\r\nDamageNumber.move_avy = 1.001;\r\nDamageNumber.move_avy2 = 0.99;\r\n\r\nexport class DamageNumberTest extends DamageNumber {\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t}\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n}\r\n\r\nexport class DamageNumberLayer extends Layer {\r\n\t//constructor() {\r\n\t//\tsuper();\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {number} critical\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t */\r\n\t_addTest(realDamage = 9876543210, critical = false, x = 0, y = 0, delay = 0, skin = null, style = \"NoRed\") {\r\n\t\tthis.objects.push(new DamageNumber(skin, style, new DamagePair(realDamage, critical), x, y, delay));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {number} critical\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t */\r\n\t_addTest2(realDamage = 9876543210, critical = false, x = 0, y = 0, delay = 0, skin = null, style = \"NoRed\") {\r\n\t\tthis.objects.push(new DamageNumberTest(skin, style, new DamagePair(realDamage, critical), x, y, delay));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {AttackInfo} attackInfo\r\n\t */\r\n\t_addAttack(skin, style, attackInfo) {\r\n\t\tattackInfo.allAttack.forEach(attack => {\r\n\t\t\tlet target = attack.getTargetObject();\r\n\t\t\tif (target) {\r\n\t\t\t\tconst pos = target.$physics.getPosition();\r\n\t\t\t\tlet x, y;\r\n\r\n\t\t\t\tx = pos.x * $gv.CANVAS_SCALE;\r\n\t\t\t\ty = pos.y * $gv.CANVAS_SCALE - 70;\r\n\r\n\t\t\t\tattack.allDamage.forEach(damage => {\r\n\t\t\t\t\tthis.addDamagePair(skin, style, damage, x, y);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @template K\r\n\t * @param {string} skin\r\n\t * @param {K extends keyof loaded_skin[skin] ? K:never} style\r\n\t * @param {DamagePair} damagePair\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t */\r\n\taddDamagePair(skin, style, damagePair, x, y, delay = 0) {\r\n\t\tthis.objects.push(new DamageNumber(skin, style, damagePair, x, y, delay));\r\n\t}\r\n}\r\n\r\n\r\nexport const damageNumberLayer = new DamageNumberLayer();\r\n\r\nwindow.$damageNumberLayer = damageNumberLayer;\r\nwindow.$DamageNumber = DamageNumber\r\nwindow.$DamageNumberTest = DamageNumberTest;\r\nwindow.$DamageNumberRenderer = DamageNumberRenderer;\r\n//DamageNumberRenderer.prototype._display_axis = true;\r\n\r\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"788124ce\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-resizable.vue?vue&type=style&index=0&id=1bddbe96&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5f85f4a0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=style&index=0&id=0674233c&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"75bfce73\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"75c445d8\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"473486e4\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"35e0cd34\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"aebb14a0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"53332437\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=style&index=0&id=370f889e&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1a60712e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f38edc12\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=style&index=0&id=4b8d3dd5&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"39d84824\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=style&index=0&id=0d3044c8&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7b10627e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4e89edc5\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&id=becf171c&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"719b6374\", content, true, {});","\r\n<template>\r\n\t<div @mousedown=\"mousedown($event)\"\r\n\t\t @touchstart=\"onTouch\"\r\n\t\t @touchmove=\"onTouch\"\r\n\t\t @touchend=\"onTouch\"\r\n\t\t class=\"ui-draggable\">\r\n\t\t<slot></slot>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\t//var cs = getComputedStyle(event.currentTarget, null);\r\n\t\r\n\t//not effective in ui\r\n\t//this func no work, mouse event from window\r\n\tfunction reset_mouse() {\r\n\t\t$gv.mouse_move = 0;\r\n\t\t$gv.mouse_x = 0;\r\n\t\t$gv.mouse_y = 0;\r\n\t\t$gv.mouse_dl = 0;\r\n\t\t$gv.mouse_ul = 0;\r\n\t\t$gv.mouse_dm = 0;\r\n\t\t$gv.mouse_um = 0;\r\n\t\t$gv.mouse_dr = 0;\r\n\t\t$gv.mouse_ur = 0;\r\n\t}\r\n\r\n\tfunction _calc_origin_pos(el) {\r\n\t\tlet left = el.style.left;\r\n\t\tlet top = el.style.top;\r\n\t\tlet x, y;\r\n\r\n\t\tel.style.left = \"0px\";\r\n\t\tx = el.offsetLeft;\r\n\t\tel.style.left = left;\r\n\r\n\t\tel.style.top = \"0px\";\r\n\t\ty = el.offsetTop;\r\n\t\tel.style.top = top;\r\n\r\n\t\treturn {\r\n\t\t\tx, y\r\n\t\t}\r\n\t}\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\thandle: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"header\",\r\n\t\t\t\tdescription: \"class only\"\r\n\t\t\t},\r\n\t\t\tzIndex: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 0,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tdefault: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\trequired: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tmouse_x0: 0,\r\n\t\t\t\tmouse_y0: 0,\r\n\t\t\t\torigin_x: 0,\r\n\t\t\t\torigin_y: 0,\r\n\t\t\t\told_width: 0,\r\n\t\t\t\told_height: 0,\r\n\t\t\t\t//elem_handle: null,\r\n\t\t\t\thandle_mousemove: null,\r\n\t\t\t\thandle_mouseup: null,\r\n\t\t\t}\r\n\t\t},\r\n\t\t//computed: {\r\n\t\t//\thandleClassName: function () {\r\n\t\t//\t\treturn this.handle || \"header\";\r\n\t\t//\t},\r\n\t\t//},\r\n\t\tmethods: {\r\n\t\t\tmousemove: function () {\r\n\t\t\t\treset_mouse();\r\n\t\t\t\tif (event.which == 1) {\r\n\t\t\t\t\tlet el = this.$el;//event.currentTarget\r\n\r\n\t\t\t\t\tlet x = event.clientX - this.mouse_x0;\r\n\t\t\t\t\tlet y = event.clientY - this.mouse_y0;\r\n\r\n\t\t\t\t\tel.style.left = Math.max(x, 0) + \"px\";\r\n\t\t\t\t\tel.style.top = Math.max(y, 0) + \"px\";\r\n\r\n\t\t\t\t\tlet pw = el.parentElement.offsetWidth;\r\n\t\t\t\t\tlet ph = el.parentElement.offsetHeight;\r\n\r\n\t\t\t\t\tlet ox = el.offsetLeft;\r\n\t\t\t\t\tlet oy = el.offsetTop;\r\n\t\t\t\t\tlet ow = this.old_width;//el.offsetWidth;\r\n\t\t\t\t\tlet oh = this.old_height;//el.offsetHeight;\r\n\r\n\t\t\t\t\tif (ox < 0) {\r\n\t\t\t\t\t\tel.style.left = \"0px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (ox + ow >= pw) {\r\n\t\t\t\t\t\tel.style.left = (pw - ow) + \"px\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// parent 高度不足時對齊上邊\r\n\t\t\t\t\tif (oy >= 0) {\r\n\t\t\t\t\t\tif (oh < ph) {\r\n\t\t\t\t\t\t\tif (oy + oh >= ph) {\r\n\t\t\t\t\t\t\t\tel.style.top = (ph - oh) + \"px\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tel.style.top = (-this.origin_y) + \"px\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (oy < 0) {\r\n\t\t\t\t\t\tel.style.top = \"0px\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//el.style.minWidth = ow + \"px\";\r\n\t\t\t\t\t//el.style.minHeight = oh + \"px\";\r\n\r\n\r\n\r\n\t\t\t\t\t//if (el.style.width != \"auto\") {\r\n\t\t\t\t\t//\tel.style.width = ow = \"px\";\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t//if (el.style.height != \"auto\") {\r\n\t\t\t\t\t//\tel.style.height = oh = \"px\";\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.mouseup();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmousedown: function (event) {\r\n\t\t\t\treset_mouse();\r\n\t\t\t\t//if (event.target != this.elem_handle) {\r\n\t\t\t\t//\treturn;\r\n\t\t\t\t//}\r\n\t\t\t\tif (!event.target.classList.contains(this.handle)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tevent.target.focus();\r\n\r\n\t\t\t\tlet rp = this.get_relative_position();\r\n\r\n\t\t\t\t//calc click-position of parent\r\n\t\t\t\tthis.mouse_x0 = event.clientX - rp.x;\r\n\t\t\t\tthis.mouse_y0 = event.clientY - rp.y;\r\n\t\t\t\tif (event.which == 1) {\r\n\t\t\t\t\tlet el = this.$el;\r\n\t\t\t\t\tthis.old_width = el.offsetWidth;\r\n\t\t\t\t\tthis.old_height = el.offsetHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet vm = this;\r\n\r\n\t\t\t\tthis.handle_mousemove = function (event) {\r\n\t\t\t\t\tvm.mousemove(event);\r\n\t\t\t\t};\r\n\t\t\t\tthis.handle_mouseup = function () {\r\n\t\t\t\t\tvm.mouseup();\r\n\t\t\t\t};\r\n\r\n\t\t\t\twindow.addEventListener(\"mousemove\", vm.handle_mousemove);\r\n\t\t\t\twindow.addEventListener(\"mouseup\", vm.handle_mouseup);\r\n\t\t\t},\r\n\t\t\tmouseup: function () {\r\n\t\t\t\treset_mouse();\r\n\t\t\t\twindow.removeEventListener(\"mousemove\", this.handle_mousemove);\r\n\t\t\t\twindow.removeEventListener(\"mouseup\", this.handle_mouseup);\r\n\t\t\t\tthis.$emit(\"update:position\", this.get_relative_position());\r\n\t\t\t},\r\n\t\t\tget_relative_position: function () {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: this.$el.offsetLeft,\r\n\t\t\t\t\ty: this.$el.offsetTop\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonTouch: function (evt) {\r\n\t\t\t\tconst tt = evt.target.tagName.toLowerCase();\r\n\t\t\t\tif (tt == \"input\" || tt == \"select\" || tt == \"button\" || tt == \"summary\") {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//evt.preventDefault();\r\n\t\t\t\t\r\n\t\t\t\tif (evt.touches.length > 1 || (evt.type == \"touchend\" && evt.touches.length > 0)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet newEvt = document.createEvent(\"MouseEvents\");\r\n\t\t\t\tlet type = null;\r\n\t\t\t\tlet touch = null;\r\n\t\t\t\t\r\n\t\t\t\tswitch (evt.type) {\r\n\t\t\t\t\tcase \"touchstart\": \r\n\t\t\t\t\t\ttype = \"mousedown\";\r\n\t\t\t\t\t\ttouch = evt.changedTouches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"touchmove\":\r\n\t\t\t\t\t\ttype = \"mousemove\";\r\n\t\t\t\t\t\ttouch = evt.changedTouches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"touchend\":\r\n\t\t\t\t\t\ttype = \"mouseup\";\r\n\t\t\t\t\t\ttouch = evt.changedTouches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tnewEvt.initMouseEvent(type, true, true, evt.target.ownerDocument.defaultView, 0,\r\n\t\t\t\ttouch.screenX, touch.screenY, touch.clientX, touch.clientY,\r\n\t\t\t\tevt.ctrlKey, evt.altKey, evt.shiftKey, evt.metaKey, 0, null);\r\n\t\t\t\t\r\n\t\t\t\tevt.target.dispatchEvent(newEvt);\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tlet el = this.$el;\r\n\t\t\tlet x, y;\r\n\r\n\t\t\tx = this.position.x;\r\n\t\t\ty = this.position.y;\r\n\r\n\t\t\tif (this.position.x || this.position.y) {\r\n\t\t\t\tthis.$el.style.left = x + \"px\";\r\n\t\t\t\tthis.$el.style.top = y + \"px\";\r\n\t\t\t\tthis.origin_x = x;\r\n\t\t\t\tthis.origin_y = y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet ori_pos = _calc_origin_pos(el);\r\n\r\n\t\t\t\tthis.origin_x = ori_pos.x;\r\n\t\t\t\tthis.origin_y = ori_pos.y;\r\n\t\t\t}\r\n\t\t\t//this.elem_handle = el.querySelector(this.handle);\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tzIndex: function (val) {\r\n\t\t\t\tthis.$el.style.zIndex = val;\r\n\t\t\t},\r\n\t\t\t\"position.x\": function (val) {\r\n\t\t\t\tthis.$el.style.left = val + \"px\";\r\n\t\t\t},\r\n\t\t\t\"position.y\": function (val) {\r\n\t\t\t\tthis.$el.style.top = val + \"px\";\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.ui-draggable {\r\n\t\tposition: absolute;\r\n\t\tdisplay: inline-block;\r\n\t\tuser-select: none;\r\n\t}\r\n</style>\r\n\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-draggable.vue?vue&type=template&id=4ac24424&\"\nimport script from \"./ui-draggable.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-draggable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-draggable.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ui-draggable.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ui-draggable\",on:{\"mousedown\":function($event){_vm.mousedown($event)},\"touchstart\":_vm.onTouch,\"touchmove\":_vm.onTouch,\"touchend\":_vm.onTouch}},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { MobSkillBallDefinition, MobSkillBallBase, MobSkillBase } from \"./MobSkillBase.js\";\r\n\r\nclass FlowerTrapBallDefinition extends MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.size = 0;// 1~3\r\n\t}\r\n}\r\n\r\nexport class FlowerTrapBall extends MobSkillBallBase {\r\n\t/**\r\n\t * @param {FlowerTrapBallDefinition} ballDef\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper(ballDef, animations);\r\n\t\t\r\n\t\tthis.renderer = animations[ballDef.size].clone();\r\n\t}\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.$physics = {// make dummy for debug\r\n\t\t\tstate: {}\r\n\t\t};\r\n\t\t\r\n\t\tsuper.create(pWorld);//complete create\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\treturn FlowerTrapBallDefinition;\r\n\t}\r\n}\r\n\r\nexport class FlowerTrap extends MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t\tthis.patterns = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} pattern - 0~2 int\r\n\t * @param {number} x - int\r\n\t * @param {number} y - int\r\n\t * @param {boolean} flip - not sure\r\n\t */\r\n\t_invoke(pattern, x, y, flip) {\r\n\t\tconst pats = this._raw[\"pattern\" + pattern];\r\n\t\tfor (let i = 0; i in pats; ++i) {\r\n\t\t\tconst pat = pats[i];\r\n\t\t\tlet mx, my, angle;\r\n\t\t\t\r\n\t\t\tmx = x + (flip ? (-pat.pos.x) : (pat.pos.x));\r\n\t\t\tmy = y + pat.pos.y;\r\n\t\t\tangle = pat.angle - 90;//texture is vertical, angle - 90deg\r\n\t\t\t\r\n\t\t\tlet ball = new FlowerTrapBall({\r\n\t\t\t\tx: mx, y: my, angle: angle,\r\n\t\t\t\tsize: pat.size,\r\n\t\t\t\tcreateDelay: pat.createDelay,\r\n\t\t\t\tcollisionDelay: pat.collisionDelay,\r\n\t\t\t\tduration: pat.duration\r\n\t\t\t}, this.animations);\r\n\t\t\t\r\n\t\t\t$gv.SceneObjectMgr.addToScene(10, ball);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {void} */\r\n\tinvoke() {\r\n\t\tthis._invoke(Randomizer.nextInt(3), 1000, 48, Randomizer.nextBoolean());\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\treturn [\"XL\", \"L\", \"M\", \"S\"];\r\n\t}\r\n\t\r\n\t/** @returns {string} */\r\n\tget _base_path() {\r\n\t\treturn \"/Skill/MobSkill/238/level\";\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { CharacterStat, $RemotePlayerData, $PlayerData } from \"../../Common/PlayerData\";\r\n\r\nexport class $RequestPacket_SelectChara {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.charaId = undefined;\r\n\t}\r\n}\r\nexport class $ResponsePacket_SelectChara {\r\n\tconstructor() {\r\n\t\t/** @type {$PlayerData} */\r\n\t\tthis.charaData = null;\r\n\r\n\t\t/** @type {$RemotePlayerData[]} */\r\n\t\tthis.remoteCharacters = null;\r\n\t}\r\n}\r\n","﻿\r\n\r\nexport class $Packet_CharacterChat {\r\n\tconstructor() {\r\n\t\t/** @type {number} - chat type */\r\n\t\tthis.type = null;\r\n\r\n\t\t/** @type {number} - ChatBalloon style */\r\n\t\tthis.$style = null;\r\n\r\n\t\t/** @type {string} - chat text */\r\n\t\tthis.text = null;\r\n\t}\r\n}\r\n","﻿\r\nimport { CharacterMoveElem } from \"../../Client/PMovePath\";\r\n\r\n/**\r\n * @type {{[x:string]:string}[]}\r\n */\r\nconst keyboard_map = [{\r\n\tArrowUp: \"up\",\r\n\tArrowLeft: \"left\",\r\n\tArrowDown: \"down\",\r\n\tArrowRight: \"right\",\r\n\tz: \"jump\",\r\n\tx: \"skill_1\",\r\n\tc: \"skill_2\",\r\n\tv: \"skill_3\",\r\n},\r\n{\r\n\tw: \"up\",\r\n\ta: \"left\",\r\n\ts: \"down\",\r\n\td: \"right\",\r\n\tq: \"jump\",\r\n\tx: \"skill_1\",\r\n\tc: \"skill_2\",\r\n\tv: \"skill_3\",\r\n}];\r\n\r\nexport class $Packet_CharacterMove {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.id = undefined;\r\n\r\n\t\t/** @type {CharacterMoveElem[]} */\r\n\t\tthis.path = [];\r\n\r\n\t\t/** @type {number} - time stamp */\r\n\t\tthis.stamp = (new Date().getTime());\r\n\t}\r\n\tcapture(chara) {\r\n\t\tconst phy = chara.$physics;\r\n\t\tconst body = phy.body;\r\n\t\tlet elem = new CharacterMoveElem();\r\n\r\n\t\t{\r\n\t\t\tconst crr = chara.renderer;\r\n\r\n\t\t\telem.action = crr.action;\r\n\t\t\t//elem.action_frame = crr.action_frame;\r\n\t\t\telem.emotion = crr.emotion;\r\n\t\t\t//elem.emotion_frame = crr.emotion_frame;\r\n\t\t}\r\n\r\n\t\telem.isAwake = body.IsAwake();\r\n\t\tif (elem.isAwake) {\r\n\r\n\t\t\tlet pos = phy.getPosition();\r\n\t\t\tlet vel = body.GetLinearVelocity();\r\n\r\n\t\t\telem.x = pos.x;\r\n\t\t\telem.y = pos.y;\r\n\t\t\telem.vx = vel.x;\r\n\t\t\telem.vy = vel.y;\r\n\t\t\t//elem.fx = force.x;\r\n\t\t\t//elem.fy = force.y;\r\n\r\n\t\t\telem.pState = phy.state;\r\n\r\n\t\t\telem.elapsed = (new Date().getTime()) - this.stamp;\r\n\t\t}\r\n\r\n\t\tthis.path.push(elem);\r\n\t}\r\n}\r\n\r\nclass $CharacterMoveItemElem {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.from = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.to = null;\r\n\r\n\t\t/** @type {string} - equip id */\r\n\t\tthis.item = null;\r\n\t}\r\n}\r\nclass $Packet_CharacterMoveItem {\r\n\tconstructor() {\r\n\t\t/** @type {$CharacterMoveItemElem} */\r\n\t\tthis.elem = [];\r\n\t}\r\n}\r\n\r\nclass $Packet_CharacterSkill {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.skillId = null;\r\n\t}\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ui-resizable',{ref:\"window\",staticClass:\"ui-dialog\",on:{\"mousedown\":function($event){_vm.requireOrder($event)}}},[_c('div',{staticClass:\"inner-frame\",on:{\"mousedown\":function($event){_vm.requireOrder($event)}}},[_c('div',{ref:\"header\",staticClass:\"header\",on:{\"mousedown\":function($event){_vm.requireOrder($event)}}},[_c('div',{staticClass:\"header\",staticStyle:{\"overflow-x\":\"hidden\"},on:{\"contextmenu\":function($event){if($event.target !== $event.currentTarget){ return null; }$event.preventDefault();_vm.minimum=!_vm.minimum}}},[_c('div',{staticStyle:{\"display\":\"inline-block\"}},[_vm._t(\"header\")],2),_vm._v(\" \"),_c('div',{staticClass:\"header-buttons\",staticStyle:{\"display\":\"inline-block\"}},[(_vm.minimum)?_c('button',{staticClass:\"header-button\",on:{\"click\":function($event){_vm.onCollapsed(false)}}},[_c('span',{staticClass:\"ui-icon ui-icon-plus\"})]):_c('button',{staticClass:\"header-button\",on:{\"click\":function($event){_vm.onCollapsed(true)}}},[_c('span',{staticClass:\"ui-icon ui-icon-minus\"})])])])]),_vm._v(\" \"),_c('div',{style:({ display: (_vm.minimum ? 'none' : 'table-row'), height: '100%' })},[_vm._t(\"content\"),_vm._v(\" \"),_vm._t(\"default\")],2)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<div :style=\"style\"\r\n\t\t @touchstart=\"onTouch\"\r\n\t\t @touchmove=\"onTouch\"\r\n\t\t @touchend=\"onTouch\"\r\n\t\t >\r\n\t\t<table class=\"fill frame\" ref=\"frame\">\r\n\t\t\t<tr>\r\n\t\t\t\t<td class=\"resize-border nw color_nw\" @mousedown=\"resizable_mousedown('nw', $event)\" @mouseup=\"resizable_mouseup('nw', $event)\"></td>\r\n\t\t\t\t<td class=\"resize-border n color_n\" @mousedown=\"resizable_mousedown('n', $event)\" @mouseup=\"resizable_mouseup('n', $event)\"></td>\r\n\t\t\t\t<td class=\"resize-border ne color_ne\" @mousedown=\"resizable_mousedown('ne', $event)\" @mouseup=\"resizable_mouseup('ne', $event)\"></td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td class=\"resize-border w color_w\" @mousedown=\"resizable_mousedown('w', $event)\" @mouseup=\"resizable_mouseup('w', $event)\"></td>\r\n\t\t\t\t<td class=\"fill\" @mousedown=\"resizable_mousedown('move', $event)\" @mouseup=\"resizable_mouseup('move', $event)\">\r\n\t\t\t\t\t<div ref=\"content\" class=\"fill content\">\r\n\t\t\t\t\t\t<slot></slot>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td class=\"resize-border e color_e\" @mousedown=\"resizable_mousedown('e', $event)\" @mouseup=\"resizable_mouseup('e', $event)\"></td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td class=\"resize-border sw color_sw\" @mousedown=\"resizable_mousedown('sw', $event)\" @mouseup=\"resizable_mouseup('sw', $event)\"></td>\r\n\t\t\t\t<td class=\"resize-border s color_s\" @mousedown=\"resizable_mousedown('s', $event)\" @mouseup=\"resizable_mouseup('s', $event)\"></td>\r\n\t\t\t\t<td class=\"resize-border se color_se\" @mousedown=\"resizable_mousedown('se', $event)\" @mouseup=\"resizable_mouseup('se', $event)\"></td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\tlet resizable_target = null;\r\n\tlet resizable_current_target = null;\r\n\tlet resizable_orientation = null;\r\n\tlet resizable_local_left = 0;\r\n\tlet resizable_local_top = 0;\r\n\tlet resizable_local_right = 0;\r\n\tlet resizable_local_bottom = 0;\r\n\r\n\tfunction resizable_mouseMove(ev) {\r\n\t\tif (!resizable_target) return;\r\n\t\t//document.body.style.cursor = resizable_orientation + \"-resize\";\r\n\t\tresizable_target.resizable_onresize(resizable_orientation, ev);\r\n\t}\r\n\tfunction resizable_mouseUp(ev) {\r\n\t\t//console.log(\"o: \" + resizable_orientation + \", up gv\");\r\n\t\t//if (!resizable_target) return;\r\n\t\tresizable_target = null;\r\n\t\tresizable_orientation = null;\r\n\t}\r\n\r\n\twindow.addEventListener(\"mousemove\", resizable_mouseMove, false);\r\n\twindow.addEventListener(\"mouseup\", resizable_mouseUp, false);\r\n\r\n\tfunction _to_css_px(value) {\r\n\t\treturn CSS.px(Math.trunc(value));\r\n\t}\r\n\r\n\texport default {\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tboxSizing: \"border-box\",\r\n\t\t\t\t\t//outline: \"1px solid blue\",\r\n\t\t\t\t\t//border: \"1px solid gray\",\r\n\t\t\t\t\tborderRadius: CSS.px(5),\r\n\t\t\t\t\tleft: CSS.em(5 + Math.trunc(Math.random() * 20)),\r\n\t\t\t\t\ttop: CSS.em(5 + Math.trunc(Math.random() * 20)),\r\n\t\t\t\t\twidth: CSS.em(20),\r\n\t\t\t\t\theight: CSS.em(20),\r\n\t\t\t\t\tzIndex: 0,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tsetStyle: function (style) {\r\n\t\t\t\tfor (let [cssPropName, value] of Object.entries(style)) {\r\n\t\t\t\t\tthis.$set(this.style, cssPropName, value);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\tlet rect = this.$el.getBoundingClientRect();\r\n\t\t\t\t\tthis.style.left = _to_css_px(rect.left);\r\n\t\t\t\t\tthis.style.top = _to_css_px(rect.top);\r\n\t\t\t\t\tthis.style.width = _to_css_px(rect.width);\r\n\t\t\t\t\tthis.style.height = _to_css_px(rect.height);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tsetMinSize: function (width, height) {\r\n\t\t\t\tlet minWidth, minHeight;\r\n\t\t\t\tif (this.style.minWidth instanceof CSSUnitValue) {\r\n\t\t\t\t\tif (width > this.style.minWidth.value) {\r\n\t\t\t\t\t\tminWidth = Math.trunc(width);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!this.style.minWidth) {\r\n\t\t\t\t\tminWidth = Math.trunc(width);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.style.minHeight instanceof CSSUnitValue) {\r\n\t\t\t\t\tif (height > this.style.minHeight.value) {\r\n\t\t\t\t\t\tminHeight = Math.trunc(height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!this.style.minHeight) {\r\n\t\t\t\t\tminHeight = Math.trunc(height);\r\n\t\t\t\t}\r\n\t\t\t\tthis.setStyle({\r\n\t\t\t\t\tminWidth: CSS.px(minWidth),\r\n\t\t\t\t\tminHeight: CSS.px(minHeight),\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tresizable_mousedown: function (orientation, ev) {\r\n\t\t\t\tif (ev.buttons == 1) {\r\n\t\t\t\t\tif (!resizable_target) {\r\n\t\t\t\t\t\tconst tt = ev.target.tagName;\r\n\t\t\t\t\t\tif (tt == \"INPUT\" || tt == \"SELECT\" || tt == \"BUTTON\" || tt == \"SUMMARY\") {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (orientation == \"move\" && ev.target.className.indexOf(\"header\") < 0) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//debugger;\r\n\t\t\t\t\t\t//console.log(\"o: \" + orientation + \", down\");\r\n\t\t\t\t\t\tresizable_target = this;\r\n\t\t\t\t\t\tresizable_current_target = ev.currentTarget;\r\n\t\t\t\t\t\tresizable_orientation = orientation;\r\n\t\t\t\t\t\tlet el = ev.currentTarget;\r\n\t\t\t\t\t\tlet rect = el.getBoundingClientRect();\r\n\t\t\t\t\t\tresizable_local_left = rect.left - ev.pageX;\r\n\t\t\t\t\t\tresizable_local_top = rect.top - ev.pageY;\r\n\t\t\t\t\t\tresizable_local_right = rect.right - ev.pageX;\r\n\t\t\t\t\t\tresizable_local_bottom = rect.bottom - ev.pageY;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tresizable_mouseup: function (orientation, ev) {\r\n\t\t\t\tif (resizable_target == this) {\r\n\t\t\t\t\tresizable_target = null;\r\n\t\t\t\t\t//console.log(\"o: \" + orientation + \", up this\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tresizable_target = null;\r\n\t\t\t\t\t//console.log(\"o: \" + orientation + \", up ??\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tresizable_onresize: function (orientation, ev) {\r\n\t\t\t\t//console.log(\"o: \" + orientation + \", x:\" + ev.pageX);\r\n\t\t\t\t\r\n\t\t\t\t/*//check old width\r\n\t\t\t\tif (this.style.minWidth && (this.style.minWidth instanceof CSSUnitValue)) {\r\n\t\t\t\t\tconst width = this.style.width.value;\r\n\t\t\t\t\tconst minWidth = this.style.minWidth.value;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (width >= minWidth && (\r\n\t\t\t\t\t\torientation == \"nw\" || orientation == \"ne\" ||\r\n\t\t\t\t\t\torientation == \"w\" || orientation == \"e\" ||\r\n\t\t\t\t\t\torientation == \"sw\" || orientation == \"se\")\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//check old height\r\n\t\t\t\tif (this.style.minHeight && (this.style.minHeight instanceof CSSUnitValue)) {\r\n\t\t\t\t\tconst height = this.style.height.value;\r\n\t\t\t\t\tconst minHeight = this.style.minHeight.value;\r\n\t\t\t\t\tif (height >= minHeight && (\r\n\t\t\t\t\t\torientation == \"nw\" || orientation == \"n\" || orientation == \"ne\" ||\r\n\t\t\t\t\t\torientation == \"sw\" || orientation == \"s\" || orientation == \"se\")\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tlet rect_content = this.$refs.content.getBoundingClientRect();\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet rect = this.$el.getBoundingClientRect();\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet left = (ev.pageX + resizable_local_left);\r\n\t\t\t\t\tlet top = (ev.pageY + resizable_local_top);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet right = (ev.pageX + resizable_local_right);\r\n\t\t\t\t\tlet bottom = (ev.pageY + resizable_local_bottom);\r\n\t\t\t\t\tlet width = (Math.max(right - rect.left, rect_content.width));\r\n\t\t\t\t\tlet height = (Math.max(bottom - rect.top, rect_content.height));\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet d_left = left - rect.left;\r\n\t\t\t\t\tlet d_top = top - rect.top;\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet width1, height1;\r\n\t\t\t\t\tif (this.style.boxSizing == \"border-box\") {\r\n\t\t\t\t\t\twidth1 = (Math.max(rect.right - left, rect_content.width));\r\n\t\t\t\t\t\theight1 = (Math.max(rect.bottom - top, rect_content.height));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse/* if (this.style.boxSizing == \"content-box\")*/ {//default\r\n\t\t\t\t\t\tstyle = this.$el.computedStyleMap();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//TODO: calc unit\r\n\t\t\t\t\t\tlet bw = style.get(\"border-left-width\").value + style.get(\"border-right-width\").value;\r\n\t\t\t\t\t\tlet bh = style.get(\"border-top-width\").value + style.get(\"border-bottom-width\").value;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\twidth1 = (Math.max(rect.right - left - bw, rect_content.width));\r\n\t\t\t\t\t\theight1 = (Math.max(rect.bottom - top - bh, rect_content.height));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (orientation) {\r\n\t\t\t\t\t\tcase \"nw\":\r\n\t\t\t\t\t\t\tthis.style.left = _to_css_px(left);\r\n\t\t\t\t\t\t\tthis.style.top = _to_css_px(top);\r\n\t\t\t\t\t\t\tthis.style.width = _to_css_px(width1);\r\n\t\t\t\t\t\t\tthis.style.height = _to_css_px(height1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"w\":\r\n\t\t\t\t\t\t\tthis.style.left = _to_css_px(left);\r\n\t\t\t\t\t\t\tthis.style.width = _to_css_px(width1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"n\":\r\n\t\t\t\t\t\t\tthis.style.top = _to_css_px(top);\r\n\t\t\t\t\t\t\tthis.style.height = _to_css_px(height1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase \"ne\":\r\n\t\t\t\t\t\t\tthis.style.top = _to_css_px(top);\r\n\t\t\t\t\t\t\tthis.style.width = _to_css_px(width);\r\n\t\t\t\t\t\t\tthis.style.height = _to_css_px(height1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"sw\":\r\n\t\t\t\t\t\t\tthis.style.left = _to_css_px(left);\r\n\t\t\t\t\t\t\tthis.style.width = _to_css_px(width1);\r\n\t\t\t\t\t\t\tthis.style.height = _to_css_px(height);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase \"se\":\r\n\t\t\t\t\t\t\tthis.style.width = _to_css_px(width);\r\n\t\t\t\t\t\t\tthis.style.height = _to_css_px(height);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"e\":\r\n\t\t\t\t\t\t\tthis.style.width = _to_css_px(width);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"s\":\r\n\t\t\t\t\t\t\tthis.style.height = _to_css_px(height);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase \"move\":\r\n\t\t\t\t\t\t\t//TODO: pos - ResizeHolder\r\n\t\t\t\t\t\t\tthis.style.left = _to_css_px(left - 5);\r\n\t\t\t\t\t\t\tthis.style.top = _to_css_px(top - 5);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//check new position and size\r\n\t\t\t\t{\r\n\t\t\t\t\tlet left = this.style.left.value;\r\n\t\t\t\t\tlet top = this.style.top.value;\r\n\t\t\t\t\tlet width = this.style.width.value;\r\n\t\t\t\t\tlet height = this.style.height.value;\r\n\t\t\t\t\tlet right = left + width;\r\n\t\t\t\t\tlet bottom = top + height;\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet bound = this.$el.parentElement.getBoundingClientRect();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (left < bound.left) {\r\n\t\t\t\t\t\tthis.style.left = _to_css_px(bound.left);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (right > bound.right) {\r\n\t\t\t\t\t\tthis.style.left = _to_css_px(bound.right - width);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (top < bound.top) {\r\n\t\t\t\t\t\tthis.style.top = _to_css_px(bound.top);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (bottom > bound.bottom) {\r\n\t\t\t\t\t\tthis.style.top = _to_css_px(bound.bottom - height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t/*this.$emit(\"resizable\", {\r\n\t\t\t\t\torientation: orientation,\r\n\t\t\t\t});*/\r\n\t\t\t},\r\n\t\t\tonTouch: function (evt) {\r\n\t\t\t\tconst tt = evt.target.tagName;\r\n\t\t\t\tif (tt == \"INPUT\" || tt == \"SELECT\" || tt == \"BUTTON\" || tt == \"SUMMARY\") {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//evt.preventDefault();\r\n\t\t\t\t\r\n\t\t\t\tif (evt.touches.length > 1 || (evt.type == \"touchend\" && evt.touches.length > 0)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet newEvt = document.createEvent(\"MouseEvents\");\r\n\t\t\t\tlet type = null;\r\n\t\t\t\tlet touch = null;\r\n\t\t\t\t\r\n\t\t\t\tswitch (evt.type) {\r\n\t\t\t\t\tcase \"touchstart\": \r\n\t\t\t\t\t\ttype = \"mousedown\";\r\n\t\t\t\t\t\ttouch = evt.changedTouches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"touchmove\":\r\n\t\t\t\t\t\ttype = \"mousemove\";\r\n\t\t\t\t\t\ttouch = evt.changedTouches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"touchend\":\r\n\t\t\t\t\t\ttype = \"mouseup\";\r\n\t\t\t\t\t\ttouch = evt.changedTouches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tnewEvt.initMouseEvent(type, true, true, evt.target.ownerDocument.defaultView, 0,\r\n\t\t\t\ttouch.screenX, touch.screenY, touch.clientX, touch.clientY,\r\n\t\t\t\tevt.ctrlKey, evt.altKey, evt.shiftKey, evt.metaKey, 0, null);\r\n\t\t\t\t\r\n\t\t\t\tevt.target.dispatchEvent(newEvt);\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tlet rect;\r\n\t\t\t\r\n\t\t\tif (this.$refs.frame) {\r\n\t\t\t\trect = this.$refs.frame.getBoundingClientRect();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trect = this.$el.getBoundingClientRect();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet width = rect.width;\r\n\t\t\tlet height = rect.height;\r\n\t\t\tif (this.style.boxSizing != \"border-box\") {\r\n\t\t\t\tstyle = this.$el.computedStyleMap();\r\n\t\t\t\t\r\n\t\t\t\t//TODO: calc unit\r\n\t\t\t\tlet bw = style.get(\"border-left-width\").value + style.get(\"border-right-width\").value;\r\n\t\t\t\tlet bh = style.get(\"border-top-width\").value + style.get(\"border-bottom-width\").value;\r\n\t\t\t\t\r\n\t\t\t\twidth -= bw;\r\n\t\t\t\theight -= bh;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//apply default style\r\n\t\t\tfor (let i in this.style) {\r\n\t\t\t\tthis.$el.style[i] = this.style[i];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.style.width = _to_css_px(width);\r\n\t\t\tthis.style.height = _to_css_px(height);\r\n\t\t},\r\n\t\tbeforeDestroy: function () {\r\n\t\t\tresizable_target = null;\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\ttable.frame {\r\n\t\tborder-collapse: collapse;\r\n\t\tborder-spacing: 0;\r\n\t\tuser-select: none;\r\n\t\t\r\n\t\tborder-radius: 5px;\r\n\t\tbox-shadow: black 0px 0px 0px 1px inset;\r\n\t}\r\n\r\n\t.fill {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.content {\r\n\t\toverflow: auto;\r\n\t\tbox-shadow: 0 0 1px 0px black;\r\n\t}\r\n\r\n\t.resize-border {\r\n\t\tpadding: 0;\r\n\t\tbackground: hsla(208, 100%, 80%, 0.5);\r\n\t}\r\n\r\n\t.resize-border.nw {\r\n\t\tcursor: nw-resize;\r\n\t\twidth: 5px;\r\n\t\theight: 5px;\r\n\t\tborder-radius: 5px 0 0 0;\r\n\t}\r\n\t.resize-border.n {\r\n\t\tcursor: n-resize;\r\n\t\theight: 5px;\r\n\t\t/*border-bottom: 1px solid gray;*/\r\n\t}\r\n\t.resize-border.ne {\r\n\t\tcursor: ne-resize;\r\n\t\twidth: 5px;\r\n\t\theight: 5px;\r\n\t\tborder-radius: 0 5px 0 0;\r\n\t}\r\n\t.resize-border.w {\r\n\t\tcursor: w-resize;\r\n\t\twidth: 5px;\r\n\t\theight: 100%;\r\n\t\tdisplay: block;\r\n\t\t/*border-right: 1px solid gray;*/\r\n\t}\r\n\t.resize-border.e {\r\n\t\tcursor: e-resize;\r\n\t\twidth: 5px;\r\n\t\theight: 100%;\r\n\t\tdisplay: block;\r\n\t\t/*border-left: 1px solid gray;*/\r\n\t}\r\n\t.resize-border.sw {\r\n\t\tcursor: sw-resize;\r\n\t\twidth: 5px;\r\n\t\theight: 5px;\r\n\t\tborder-radius: 0 0 0 5px;\r\n\t}\r\n\t.resize-border.s {\r\n\t\tcursor: s-resize;\r\n\t\theight: 5px;\r\n\t\t/*border-top: 1px solid gray;*/\r\n\t}\r\n\t.resize-border.se {\r\n\t\tcursor: se-resize;\r\n\t\twidth: 5px;\r\n\t\theight: 5px;\r\n\t\tborder-radius: 0 0 5px 0;\r\n\t}\r\n\r\n\r\n\t/*.color_nw {\r\n\t\tborder-right: 1px solid gray;\r\n\t\tborder-bottom: 1px solid gray;\r\n\t\tbackground: aliceblue;\r\n\t}\r\n\t.color_n {\r\n\t\tborder-bottom: 1px solid gray;\r\n\t\tbackground: aliceblue;\r\n\t}\r\n\t.color_ne {\r\n\t\tborder-left: 1px solid gray;\r\n\t\tborder-bottom: 1px solid gray;\r\n\t\tbackground: aliceblue;\r\n\t}\r\n\t.color_w {\r\n\t\tborder-right: 1px solid gray;\r\n\t\tbackground: aliceblue;\r\n\t}\r\n\t.color_e {\r\n\t\tborder-left: 1px solid gray;\r\n\t\tbackground: aliceblue;\r\n\t}\r\n\t.color_sw {\r\n\t\tborder-right: 1px solid gray;\r\n\t\tborder-top: 1px solid gray;\r\n\t\tbackground: aliceblue;\r\n\t}\r\n\t.color_s {\r\n\t\tborder-top: 1px solid gray;\r\n\t\tbackground: aliceblue;\r\n\t}\r\n\t.color_se {\r\n\t\tborder-left: 1px solid gray;\r\n\t\tborder-top: 1px solid gray;\r\n\t\tbackground: aliceblue;\r\n\t}*/\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-resizable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-resizable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-resizable.vue?vue&type=template&id=1bddbe96&scoped=true&\"\nimport script from \"./ui-resizable.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-resizable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-resizable.vue?vue&type=style&index=0&id=1bddbe96&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1bddbe96\",\n  null\n  \n)\n\ncomponent.options.__file = \"ui-resizable.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:(_vm.style),on:{\"touchstart\":_vm.onTouch,\"touchmove\":_vm.onTouch,\"touchend\":_vm.onTouch}},[_c('table',{ref:\"frame\",staticClass:\"fill frame\"},[_c('tr',[_c('td',{staticClass:\"resize-border nw color_nw\",on:{\"mousedown\":function($event){_vm.resizable_mousedown('nw', $event)},\"mouseup\":function($event){_vm.resizable_mouseup('nw', $event)}}}),_vm._v(\" \"),_c('td',{staticClass:\"resize-border n color_n\",on:{\"mousedown\":function($event){_vm.resizable_mousedown('n', $event)},\"mouseup\":function($event){_vm.resizable_mouseup('n', $event)}}}),_vm._v(\" \"),_c('td',{staticClass:\"resize-border ne color_ne\",on:{\"mousedown\":function($event){_vm.resizable_mousedown('ne', $event)},\"mouseup\":function($event){_vm.resizable_mouseup('ne', $event)}}})]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"resize-border w color_w\",on:{\"mousedown\":function($event){_vm.resizable_mousedown('w', $event)},\"mouseup\":function($event){_vm.resizable_mouseup('w', $event)}}}),_vm._v(\" \"),_c('td',{staticClass:\"fill\",on:{\"mousedown\":function($event){_vm.resizable_mousedown('move', $event)},\"mouseup\":function($event){_vm.resizable_mouseup('move', $event)}}},[_c('div',{ref:\"content\",staticClass:\"fill content\"},[_vm._t(\"default\")],2)]),_vm._v(\" \"),_c('td',{staticClass:\"resize-border e color_e\",on:{\"mousedown\":function($event){_vm.resizable_mousedown('e', $event)},\"mouseup\":function($event){_vm.resizable_mouseup('e', $event)}}})]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"resize-border sw color_sw\",on:{\"mousedown\":function($event){_vm.resizable_mousedown('sw', $event)},\"mouseup\":function($event){_vm.resizable_mouseup('sw', $event)}}}),_vm._v(\" \"),_c('td',{staticClass:\"resize-border s color_s\",on:{\"mousedown\":function($event){_vm.resizable_mousedown('s', $event)},\"mouseup\":function($event){_vm.resizable_mouseup('s', $event)}}}),_vm._v(\" \"),_c('td',{staticClass:\"resize-border se color_se\",on:{\"mousedown\":function($event){_vm.resizable_mousedown('se', $event)},\"mouseup\":function($event){_vm.resizable_mouseup('se', $event)}}})])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<ui-resizable ref=\"window\" class=\"ui-dialog\" @mousedown=\"requireOrder($event)\">\r\n\t\t<div class=\"inner-frame\" @mousedown=\"requireOrder($event)\">\r\n\t\t\t<div ref=\"header\" class=\"header\" @mousedown=\"requireOrder($event)\">\r\n\t\t\t\t<div @contextmenu.self.prevent=\"minimum=!minimum\" class=\"header\" style=\"overflow-x: hidden;\">\r\n\t\t\t\t\t<div style=\"display: inline-block\">\r\n\t\t\t\t\t\t<slot name=\"header\"></slot>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"header-buttons\" style=\"display: inline-block\">\r\n\t\t\t\t\t\t<button v-if=\"minimum\"\r\n\t\t\t\t\t\t\t\t@click=\"onCollapsed(false)\"\r\n\t\t\t\t\t\t\t\tclass=\"header-button\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-plus\"></span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button v-else\r\n\t\t\t\t\t\t\t\t@click=\"onCollapsed(true)\"\r\n\t\t\t\t\t\t\t\tclass=\"header-button\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-minus\"></span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div :style=\"{ display: (minimum ? 'none' : 'table-row'), height: '100%' }\">\r\n\t\t\t\t<slot name=\"content\"></slot>\r\n\t\t\t\t<slot></slot>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ui-resizable>\r\n</template>\r\n\r\n<script>\r\n\timport UIDraggable from \"./ui-draggable.vue\";\r\n\timport UIResizable from \"./ui-resizable.vue\";\r\n\r\n\tlet zIndices = [];\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\ttitle: {\r\n\t\t\t\ttype: String,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t\"min-width\": {\r\n\t\t\t\tdefault: \"\",\r\n\t\t\t},\r\n\t\t\t\"min-height\": {\r\n\t\t\t\tdefault: \"\",\r\n\t\t\t},\r\n\t\t\twidth: {//max-width\r\n\t\t\t\tdefault: \"\",//auto\r\n\t\t\t\t//validator: function (value) {\r\n\t\t\t\t//\treturn value == \"\" || px_regx.test(value) || Number.isSafeInteger(value);\r\n\t\t\t\t//}\r\n\t\t\t},\r\n\t\t\theight: {//max-height\r\n\t\t\t\tdefault: \"\",//auto\r\n\t\t\t\t//validator: function (value) {\r\n\t\t\t\t//\treturn value == \"\" || px_regx.test(value) || Number.isSafeInteger(value);\r\n\t\t\t\t//}\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\trequired: false\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tcontent_style: {\r\n\t\t\t\t},\r\n\t\t\t\theader_style: {\r\n\t\t\t\t},\r\n\t\t\t\tminimum: false,\r\n\t\t//\t\t_option: {}\r\n\t\t\t\t\r\n\t\t\t\tzIndex: 0,\r\n\t\t\t\t\r\n\t\t\t\t_$width: 0,\r\n\t\t\t\t_$height: 0,\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcomputed: {\r\n\t\t\tstyle: function () {\r\n\t\t\t\treturn this.$refs.window.style;\r\n\t\t\t},\r\n\t\t\t/*zIndex: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this.style.zIndex;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tthis.style.zIndex = value;\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t},\r\n\r\n\t\t//directives: {\r\n\t\t//}\r\n\r\n\t\tmethods: {\r\n\t\t\tsetStyle: function (style) {\r\n\t\t\t\tthis.$refs.window.setStyle(style);\r\n\t\t\t},\r\n\t\t\tupdateDialogPosition: function (event) {\r\n\t\t\t\tthis.$emit('update:position', event);\r\n\t\t\t},\r\n\t\t\tonCollapsed: function (value) {\r\n\t\t\t\tthis.minimum = value;\r\n\t\t\t\t\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\t//save size\r\n\t\t\t\t\tthis._$width = this.$refs.window.style.width + \"\";\r\n\t\t\t\t\tthis._$height = this.$refs.window.style.height + \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst { width, height} = this.$refs.header.getBoundingClientRect();\r\n\t\t\t\t\t\r\n\t\t\t\t\t//const outerBorder = 1 + 1;//left + right\r\n\t\t\t\t\tconst ResizeHolder = 5 + 5;//left + right\r\n\t\t\t\t\tconst innerBorder = 1 + 1;//?? left + right\r\n\t\t\t\t\tconst bbb = /*outerBorder + */ResizeHolder + innerBorder;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.$refs.window.style.width = (width + bbb) + \"px\";\r\n\t\t\t\t\tthis.$refs.window.style.height = (height + bbb) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//restore size\r\n\t\t\t\t\tthis.$refs.window.style.width = this._$width;\r\n\t\t\t\t\tthis.$refs.window.style.height = this._$height;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//let contents = this.$children[0].$children;\r\n\t\t\t\t//for (let i = 0; i < contents.length; ++i) {\r\n\t\t\t\t//\tcontents[i].$emit(\"onCollapsed\");\r\n\t\t\t\t//}\r\n\t\t\t},\r\n\t\t\tshow: function (...args) {\r\n\t\t\t\tlet el = $(this.$el);\r\n\t\t\t\tel.show.apply(el, args);\r\n\t\t\t},\r\n\t\t\thide: function (...args) {\r\n\t\t\t\tlet el = $(this.$el);\r\n\t\t\t\tel.hide.apply(el, args);\r\n\t\t\t},\r\n\t\t\t//_resize_content: function (this_elem) {\r\n\t\t\t//},\r\n\t\t\trequireOrder: function () {\r\n\t\t\t\tconst index = zIndices.indexOf(this);\r\n\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\tlet removed = zIndices.splice(index, 1);//remove\r\n\t\t\t\t\tif (removed[0] != this) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tzIndices.push(this);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < zIndices.length; ++i) {\r\n\t\t\t\t\t\tzIndices[i].__set_z_index(i + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t__set_z_index: function (z) {\r\n\t\t\t\tthis.$refs.window.style.zIndex = z;\r\n\t\t\t},\r\n\t\t\t/*reset_content_style: function () {\r\n\t\t\t}*/\r\n\t\t},\r\n\t\t\r\n\t\twatch: {\r\n\t\t\tminimum: function () {\r\n\t\t\t\t//this.reset_content_style();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmounted: function () {\r\n\t\t\tzIndices.push(this);\r\n\r\n\t\t\tconst zIndex = zIndices.length;\r\n\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tthis.__set_z_index(zIndex);\r\n\t\t\t\t\r\n\t\t\t\t//this.reset_content_style();\r\n\t\t\t\t\r\n\t\t\t\tif (this.$refs.header && this.$refs.window) {\r\n\t\t\t\t\tconst ResizeHolder = 5 + 5;//left + right\r\n\t\t\t\t\tconst { width, height} = this.$refs.header.getBoundingClientRect();\r\n\t\t\t\t\tconst [minWidth, minHeight] = [width + ResizeHolder, height + ResizeHolder];\r\n\t\t\t\t\tthis.$refs.window.setMinSize(minWidth, minHeight);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"ui-dialog not ui-resizable: \", this);\r\n\t\t\t\t\t//eval(\"de\" + \"bug\" + \"ger\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdated: function () {\r\n\t\t},\r\n\r\n\t\t//   watch: {\r\n\t\t//   }\r\n\r\n\t\tcomponents: {\r\n\t\t\t\"ui-draggable\": UIDraggable,\r\n\t\t\t\"ui-resizable\": UIResizable,\r\n\t\t},\r\n\t\t\r\n\t\t//mixins: [\r\n\t\t//\tUIResizable,\r\n\t\t//]\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.ui-dialog {\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tdisplay: table-row;\r\n\t\tuser-select: none;\r\n\t\tbackground: #e9e9e9;\r\n\t\ttext-align: left;\r\n\t\tbox-sizing: border-box;\r\n\t\t/*padding: 0.1em;*/\r\n\t\tposition: relative;\r\n\t\theight: 0;/*make minimum height*/\r\n\t\tcursor: move;\r\n\t}\r\n\r\n\t.header .header-buttons {\r\n\t\tdisplay: inline;\r\n\t\tright: 0.5em;\r\n\t\tmargin-right: 1px;\r\n\t\tposition: absolute;\r\n\t}\r\n\t.header .header-buttons > * {\r\n\t\tpadding: 0;\r\n\t\tborder: none;\r\n\t\tbackground: transparent;\r\n\t}\r\n\t.header .header-buttons > .header-button {\r\n\t}\r\n\t.header .header-buttons > .header-button:hover {\r\n\t\tbackground: lightgray;\r\n\t}\r\n\t.header .header-buttons > .header-button:active {\r\n\t\tbackground: lightblue;\r\n\t}\r\n\r\n\t.inner-frame {\r\n\t\tdisplay: table;\r\n\t\tbackground: white;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.footer {\r\n\t\tpadding: 0.1em 0.25em;\r\n\t\tuser-select: none;\r\n\t\tbackground: #e9e9e9;\r\n\t\tborder: 1px solid #dddddd;\r\n\t\t/*border-bottom-left-radius: 4px;*/\r\n\t\t/*border-bottom-right-radius: 4px;*/\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-dialog.vue?vue&type=template&id=0674233c&scoped=true&\"\nimport script from \"./ui-dialog.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-dialog.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-dialog.vue?vue&type=style&index=0&id=0674233c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0674233c\",\n  null\n  \n)\n\ncomponent.options.__file = \"ui-dialog.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-draggable {\\n\\tposition: absolute;\\n\\tdisplay: inline-block;\\n\\tuser-select: none;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-resizable.vue?vue&type=style&index=0&id=1bddbe96&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-resizable.vue?vue&type=style&index=0&id=1bddbe96&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\ntable.frame[data-v-1bddbe96] {\\n\\tborder-collapse: collapse;\\n\\tborder-spacing: 0;\\n\\tuser-select: none;\\n\\t\\n\\tborder-radius: 5px;\\n\\tbox-shadow: black 0px 0px 0px 1px inset;\\n}\\n.fill[data-v-1bddbe96] {\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n.content[data-v-1bddbe96] {\\n\\toverflow: auto;\\n\\tbox-shadow: 0 0 1px 0px black;\\n}\\n.resize-border[data-v-1bddbe96] {\\n\\tpadding: 0;\\n\\tbackground: hsla(208, 100%, 80%, 0.5);\\n}\\n.resize-border.nw[data-v-1bddbe96] {\\n\\tcursor: nw-resize;\\n\\twidth: 5px;\\n\\theight: 5px;\\n\\tborder-radius: 5px 0 0 0;\\n}\\n.resize-border.n[data-v-1bddbe96] {\\n\\tcursor: n-resize;\\n\\theight: 5px;\\n\\t/*border-bottom: 1px solid gray;*/\\n}\\n.resize-border.ne[data-v-1bddbe96] {\\n\\tcursor: ne-resize;\\n\\twidth: 5px;\\n\\theight: 5px;\\n\\tborder-radius: 0 5px 0 0;\\n}\\n.resize-border.w[data-v-1bddbe96] {\\n\\tcursor: w-resize;\\n\\twidth: 5px;\\n\\theight: 100%;\\n\\tdisplay: block;\\n\\t/*border-right: 1px solid gray;*/\\n}\\n.resize-border.e[data-v-1bddbe96] {\\n\\tcursor: e-resize;\\n\\twidth: 5px;\\n\\theight: 100%;\\n\\tdisplay: block;\\n\\t/*border-left: 1px solid gray;*/\\n}\\n.resize-border.sw[data-v-1bddbe96] {\\n\\tcursor: sw-resize;\\n\\twidth: 5px;\\n\\theight: 5px;\\n\\tborder-radius: 0 0 0 5px;\\n}\\n.resize-border.s[data-v-1bddbe96] {\\n\\tcursor: s-resize;\\n\\theight: 5px;\\n\\t/*border-top: 1px solid gray;*/\\n}\\n.resize-border.se[data-v-1bddbe96] {\\n\\tcursor: se-resize;\\n\\twidth: 5px;\\n\\theight: 5px;\\n\\tborder-radius: 0 0 5px 0;\\n}\\n\\n\\n/*.color_nw {\\n\\tborder-right: 1px solid gray;\\n\\tborder-bottom: 1px solid gray;\\n\\tbackground: aliceblue;\\n}\\n.color_n {\\n\\tborder-bottom: 1px solid gray;\\n\\tbackground: aliceblue;\\n}\\n.color_ne {\\n\\tborder-left: 1px solid gray;\\n\\tborder-bottom: 1px solid gray;\\n\\tbackground: aliceblue;\\n}\\n.color_w {\\n\\tborder-right: 1px solid gray;\\n\\tbackground: aliceblue;\\n}\\n.color_e {\\n\\tborder-left: 1px solid gray;\\n\\tbackground: aliceblue;\\n}\\n.color_sw {\\n\\tborder-right: 1px solid gray;\\n\\tborder-top: 1px solid gray;\\n\\tbackground: aliceblue;\\n}\\n.color_s {\\n\\tborder-top: 1px solid gray;\\n\\tbackground: aliceblue;\\n}\\n.color_se {\\n\\tborder-left: 1px solid gray;\\n\\tborder-top: 1px solid gray;\\n\\tbackground: aliceblue;\\n}*/\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=style&index=0&id=0674233c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=style&index=0&id=0674233c&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-dialog[data-v-0674233c] {\\n\\tborder-radius: 4px;\\n}\\n.header[data-v-0674233c] {\\n\\tdisplay: table-row;\\n\\tuser-select: none;\\n\\tbackground: #e9e9e9;\\n\\ttext-align: left;\\n\\tbox-sizing: border-box;\\n\\t/*padding: 0.1em;*/\\n\\tposition: relative;\\n\\theight: 0;/*make minimum height*/\\n\\tcursor: move;\\n}\\n.header .header-buttons[data-v-0674233c] {\\n\\tdisplay: inline;\\n\\tright: 0.5em;\\n\\tmargin-right: 1px;\\n\\tposition: absolute;\\n}\\n.header .header-buttons > *[data-v-0674233c] {\\n\\tpadding: 0;\\n\\tborder: none;\\n\\tbackground: transparent;\\n}\\n.header .header-buttons > .header-button[data-v-0674233c] {\\n}\\n.header .header-buttons > .header-button[data-v-0674233c]:hover {\\n\\tbackground: lightgray;\\n}\\n.header .header-buttons > .header-button[data-v-0674233c]:active {\\n\\tbackground: lightblue;\\n}\\n.inner-frame[data-v-0674233c] {\\n\\tdisplay: table;\\n\\tbackground: white;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tbox-sizing: border-box;\\n}\\n.footer[data-v-0674233c] {\\n\\tpadding: 0.1em 0.25em;\\n\\tuser-select: none;\\n\\tbackground: #e9e9e9;\\n\\tborder: 1px solid #dddddd;\\n\\t/*border-bottom-left-radius: 4px;*/\\n\\t/*border-bottom-right-radius: 4px;*/\\n\\tbox-sizing: border-box;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\ndiv[data-v-550d0e17] {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n}\\n.active[data-v-550d0e17] {\\n\\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\\n\\tbackground-color: #ffec64;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.menu-frame {\\n\\tuser-select: none;\\n\\tposition: absolute;\\n\\toverflow: hidden;\\n}\\n.menu {\\n\\tlist-style: none;\\n\\tmargin: 0;\\n\\tpadding: 0em 0em;\\n\\tbackground: #f0f9ff;\\n\\tborder: 1px solid darkgray;\\n\\tbox-shadow: 0.2em 0.2em 0.2em darkgray;\\n}\\n.menu > *:not(hr) {\\n\\tdisplay: block;\\n\\tpadding: 0.25em 1em 0.25em 1em;\\n\\tbackground: #f0f9ff;\\n\\tcursor: pointer;\\n}\\n.menu > *.disable {\\n\\tcursor: not-allowed;\\n\\tcolor: darkgray;\\n}\\n.menu > *:not(.disable):not(hr):hover {\\n\\tbackground: linear-gradient(to bottom, #4096ee 0%,#4096ee 100%);\\n\\tbox-shadow: inset 0 0 1px #1e69de;\\n}\\n.menu > *:not(.disable):not(hr):active {\\n\\tbackground: linear-gradient(to bottom, #6db3f2 0%,#54a3ee 50%,#3690f0 51%,#1e69de 100%);\\n\\tbox-shadow: inset 0 0 1px #1e69de;\\n}\\n.menu > hr {\\n\\tmargin: 0.2em 0;\\n}\\n.menu-enter-active {\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n\\twhite-space: nowrap;\\n\\twidth: 100%;\\n\\theight: 5em;\\n\\ttransition: .3s;\\n}\\n.menu-enter {\\n\\topacity: 0;\\n\\theight: 0;\\n\\twidth: 0;\\n}\\n.menu-leave-active {\\n\\ttransition: .4s;\\n}\\n.menu-leave-to {\\n\\topacity: 0;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-button-group input[type=\\\"radio\\\"] {\\n\\tdisplay: none;\\n}\\n.ui-button-group {\\n\\tdisplay: flex;\\n}\\n.ui-button-group button {\\n\\tflex: 1;\\n\\tpadding: 0;\\n\\toutline: none;\\n}\\n/*.ui-button-group button > * {\\n\\twidth: 100%;\\n\\theight: 100%;\\n}*/\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-equip-box {\\n\\theight: 100%;\\n\\twidth: 100%;\\n}\\n.ui-equip-box-content {\\n\\tdisplay: table;\\n\\theight: 100%;\\n\\twidth: 100%;\\n}\\n.ui-equip-box .header {\\n\\tdisplay: table-row;\\n\\ttext-align: left;\\n}\\n.ui-equip-box .header.btn-group, .ui-equip-box .pagination {\\n\\ttext-align: center;\\n}\\n.ui-equip-box .pagination {\\n\\theight: 2em;\\n\\toverflow: auto;\\n\\tfont-size: initial;\\n}\\n.ui-equip-box .item-list-page {\\n\\theight: 100%;\\n\\tdisplay: table-row;\\n}\\n.ui-equip-box .item-list-page > * {\\n\\toverflow: auto;\\n\\theight: 100%;\\n}\\n.ui-equip-box .item-list {\\n\\tlist-style: none;\\n\\tmargin: auto;\\n\\tpadding: 1px;\\n}\\n.ui-equip-box .item-list-sm {\\n\\tmargin: auto;\\n\\tpadding: 1px;\\n\\tline-height: 0;\\n\\ttext-align: center;\\n}\\n.ui-equip-box .item-detail {\\n\\twidth: 100%;\\n\\tborder-spacing: 1px;\\n}\\n.ui-equip-box .list-item, .ui-equip-box .list-item-sm {\\n\\tborder: 1px solid black;\\n\\tborder-bottom: none;\\n\\tbackground: linear-gradient(to bottom, rgba(240,249,255,0.9) 0%,rgba(203,235,255,0.9) 30%,rgba(201,234,255,0.9) 50%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 75%,rgba(240,249,255,0.9) 100%);\\n}\\n.ui-equip-box .list-item-sm {\\n\\tdisplay: inline-block;\\n\\tborder: none;\\n\\toutline: 1px solid black;\\n\\tbox-shadow: inset 1px 1px 0 lightblue;\\n}\\n.ui-equip-box .list-item:target, .ui-equip-box .list-item-sm:target {\\n\\tbox-shadow: inset 0 0 0 1px red;\\n\\toutline: 1px solid red;\\n\\tposition: relative;\\n}\\n.ui-equip-box .list-item:last-child {\\n\\tborder-bottom: 1px solid black;\\n}\\n.ui-equip-box .list-item:hover, .ui-equip-box .list-item-sm:hover {\\n\\tbackground: aliceblue;\\n}\\n.ui-equip-box .list-item:active, .ui-equip-box .list-item-sm:active {\\n\\tbackground: lightgray;\\n}\\n.ui-equip-box .item-name {\\n\\tuser-select: text;\\n\\twidth: 12em;\\n\\twhite-space: nowrap;\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n}\\n.ui-equip-box .list-item:target .item-name {\\n\\tcolor: red;\\n\\tfont-weight: bold;\\n}\\n.ui-equip-box .item-id {\\n\\tuser-select: text;\\n}\\n.ui-equip-box .item-icon-outer-frame {\\n\\tposition: relative;\\n\\twidth: 48px;\\n\\theight: 48px;\\n\\tuser-select: none;\\n}\\n.ui-equip-box .item-icon-frame > img, .ui-equip-box .item-icon-frame-sm > img {\\n\\tmax-width: 48px;\\n\\tmax-height: 48px;\\n\\tdisplay: block;\\n\\tmargin: auto;\\n}\\n.ui-equip-box .filters button:hover {\\n\\tborder: 1px solid blue;\\n\\tborder-radius: 3px;\\n\\tbackground: rgba(240, 249, 255, 0.9);\\n}\\n.ui-equip-box .filters button:hover, .face_color button:hover, .hair_color button:hover {\\n\\tfilter: contrast(150%) brightness(110%);\\n}\\n.ui-equip-box .filters button.active {\\n\\tborder-radius: 3px;\\n\\tbackground-color: hsl(203, 0%, 70%);\\n}\\n.ui-equip-box .filters button.active img {\\n\\tfilter: grayscale(100%) brightness(90%) contrast(150%);\\n}\\n.ui-equip-box .filters button.active:hover {\\n\\tborder: 1px solid blue;\\n\\tbackground: rgba(240, 249, 255, 0.9);\\n}\\n.ui-equip-box .filters button.active:hover {\\n\\tfilter: contrast(150%) grayscale(100%) brightness(110%);\\n}\\n.ui-equip-box .face_color, hair_color {\\n\\tborder: 1px solid transparent;\\n\\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\\n}\\n.ui-equip-box .face_color button.active, .hair_color button.active {\\n\\tborder: 1px solid white;\\n\\tbox-shadow: 0 0 0.5em 0 blue, 0 0 1em 0 yellow;\\n\\tcolor: white;\\n\\ttext-shadow: 0 0 0.1em black, 0 0 0.5em black;\\n\\tz-index: 1;\\n}\\n.ui-equip-box .mix-color {\\n\\ttext-align: center;\\n\\twidth: 3em;\\n}\\n.ui-equip-box .button-area > * {\\n\\tpadding-top: 1px;\\n}\\n.ui-equip-box .button-area {\\n\\tuser-select: none;\\n}\\n.ui-equip-box .button-area button {\\n\\ttext-align: center;\\n\\tcursor: pointer;\\n\\tborder: 1px solid transparent;\\n\\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\\n\\tfont-family: 微軟正黑體;\\n\\tfont-weight: bold;\\n\\tfont-size: 1em;\\n}\\n.ui-equip-box .button-area button > img {\\n\\tdisplay: block;\\n\\tmargin: auto;\\n}\\n.m-pagination {\\n\\tbackground: #efefef;\\n\\tborder-top: 1px solid lightgray;\\n\\tborder-bottom: 1px solid lightgray;\\n}\\n.m-pagination-item {\\n\\tbox-sizing: border-box;\\n\\tdisplay: inline-block;\\n\\tmin-width: 2em;\\n\\twidth: auto;\\n\\ttext-align: center;\\n\\tcolor: blue;\\n\\tborder: 1px solid transparent;\\n\\tborder-right: 1px solid darkgray;\\n}\\n.m-pagination-item:last-child {\\n\\tborder-right: 1px solid transparent;\\n}\\n.m-pagination-item:hover {\\n\\tborder-radius: 5px;\\n\\tborder: 1px solid darkgray;\\n}\\n.m-pagination-item .active {\\n\\tcolor: red;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=style&index=0&id=370f889e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=style&index=0&id=370f889e&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\ndiv.frame[data-v-370f889e] {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\twidth: 64px;\\n\\theight: 96px;\\n\\n\\tuser-select: none;\\n\\tbackground-position: 0px 0px, 10px 10px;\\n\\tbackground-size: 20px 20px;\\n\\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\\n}\\ndiv.center[data-v-370f889e] {\\n\\tposition: absolute;\\n\\tleft: 32px;\\n\\ttop: 96px;\\n}\\nimg[data-v-370f889e] {\\n\\tposition: absolute;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-character-frame {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\twidth: 64px;\\n\\theight: 96px;\\n\\n\\tuser-select: none;\\n\\tbackground-position: 0px 0px, 10px 10px;\\n\\tbackground-size: 20px 20px;\\n\\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\\n}\\n.ui-character-center {\\n\\tposition: absolute;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tbackground: rgba(0,0,0,0.2);\\n\\toverflow: hidden;\\n\\ttext-align: center;\\n}\\n.ui-character-text {\\n\\ttext-align: center;\\n\\tposition: absolute;\\n\\ttop: calc(50% - 0.5em);\\n\\tfont-weight: bold;\\n\\tcolor: white;\\n\\ttext-shadow: 0 0 1px black, 0 0 2px black, 0 0 5px black;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=style&index=0&id=4b8d3dd5&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=style&index=0&id=4b8d3dd5&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.UIEditCharacterAttribute td > *[data-v-4b8d3dd5] {\\n\\twidth: 100%;\\n}\\n.btn[data-v-4b8d3dd5] {\\n\\tmargin: auto;\\n\\tpadding: 0;\\n\\tuser-select: none;\\n}\\n.chara_ear[data-v-4b8d3dd5] {\\n\\twidth: 100%;\\n\\tdisplay: block;\\n}\\n.equip-icon[data-v-4b8d3dd5] {\\n\\tmargin: auto;\\n\\tmax-width: 32px;\\n\\tmax-height: 32px;\\n\\twidth: auto !important;\\n\\theight: auto !important;\\n\\tdisplay: table-row;\\n}\\n.open[data-v-4b8d3dd5] {\\n\\tcolor: red;\\n}\\n.tb-equip-filter[data-v-4b8d3dd5] {\\n\\tborder-spacing: 0px;\\n\\tborder-collapse: collapse;\\n\\twidth: 100%;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=style&index=0&id=0d3044c8&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=style&index=0&id=0d3044c8&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-life-list[data-v-0d3044c8] {\\r\\n\\tpadding: 0 1px;\\n}\\ntable[data-v-0d3044c8] {\\r\\n\\tborder-collapse: collapse;\\r\\n\\tborder-spacing: 0;\\r\\n\\twidth: 100%;\\n}\\ntr.new-item[data-v-0d3044c8] {\\r\\n\\tbackground: lightgray;\\n}\\ntr.item[data-v-0d3044c8]:hover {\\r\\n\\tbackground: lightblue;\\r\\n\\toutline: 1px auto rgb(77, 144, 254);\\n}\\n.button[data-v-0d3044c8] {\\r\\n\\twidth: 100%;\\n}\\n.input[data-v-0d3044c8] {\\r\\n  width: 2.7em;\\n}\\n.input[type=text][data-v-0d3044c8] {\\r\\n  width: 4em;\\n}\\n.input[type=number][data-v-0d3044c8] {\\r\\n  width: 4em;\\n}\\n.input[type=checkbox][data-v-0d3044c8] {\\r\\n  width: 1em;\\n}\\n.input-mobid[type=number][data-v-0d3044c8] {\\r\\n  width: 5em;\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.sticky[data-v-6e4fb2d8] {\\r\\n\\tposition: sticky;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\n}\\n.info[data-v-6e4fb2d8] {\\r\\n\\tbackground: #f5f5f5;\\n}\\n.view[data-v-6e4fb2d8] {\\r\\n\\tdisplay: flex;\\n}\\n.view > div[data-v-6e4fb2d8] {\\r\\n\\tflex: 100;\\n}\\n.imgbox[data-v-6e4fb2d8] {\\r\\n\\tflex: 80;\\n}\\n.table[data-v-6e4fb2d8] {\\r\\n\\tborder-collapse: collapse;\\r\\n\\tborder-spacing: 0;\\n}\\n.input[data-v-6e4fb2d8] {\\r\\n\\twidth: 5em;\\n}\\n.input-xy[data-v-6e4fb2d8] {\\r\\n\\twidth: 8em;\\n}\\n.input-xy > *[data-v-6e4fb2d8] {\\r\\n\\twidth: 4em;\\n}\\n.img[data-v-6e4fb2d8] {\\r\\n\\tmax-width: 25vh;\\r\\n\\tmax-height: 25vh;\\r\\n\\tborder-bottom: 1px solid red;\\r\\n\\tborder-left: 1px solid green;\\n}\\n.text[data-v-6e4fb2d8] {\\r\\n\\tuser-select: text;\\n}\\n.red-text[data-v-6e4fb2d8] {\\r\\n\\tcolor: red;\\n}\\n.tb[data-v-6e4fb2d8], .tb td[data-v-6e4fb2d8] {\\r\\n\\tborder: 1px solid black;\\r\\n\\tborder-collapse: collapse;\\r\\n\\tborder-spacing: 0;\\r\\n\\tuser-select: text;\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&id=becf171c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&id=becf171c&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.dialog-group[data-v-becf171c] {\\n\\tposition: fixed;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n.ui-dialog .ui-equip-box-dialog.ui-dialog-content[data-v-becf171c] {\\n\\tpadding: 0;\\n\\twidth: 100% !important;\\n}\\n\\n/*li.active {\\n\\tbackground-color: lightcyan;\\n}\\n*/\\n.ui-character-list .active[data-v-becf171c] {\\n\\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\\n\\tbackground-color: #ffec64;\\n}\\n.ui-character-list[data-v-becf171c] {\\n\\tlist-style: none;\\n\\tpadding: 0;\\n}\\n.ui-character-list > li[data-v-becf171c] {\\n\\twidth: 16em;\\n}\\n.ui-character-list table[data-v-becf171c] {\\n\\twidth: 100%;\\n\\t/*border-collapse: collapse;*/\\n}\\n.ui-character-list td[data-v-becf171c]:nth-child(1) {\\n\\t/*border: 1px solid black;*/\\n\\twidth: 20%;\\n}\\n.ui-character-list td[data-v-becf171c]:nth-child(2) {\\n\\t/*border: 1px solid black;*/\\n\\twidth: 50%;\\n}\\n\\n/*\\n.ui-character-list td:first-child {\\n}\\n*/\\n\\n/*.ui-character-list td:last-child {\\n\\tfloat: right;\\n}*/\\n.chara-ls-btn-group[data-v-becf171c] {\\n\\tdisplay: inline;\\n\\tfloat: right;\\n}\\n.chara-ls-btn[data-v-becf171c] {\\n    display: inline-flex;\\n\\twidth: 20px;\\n\\theight: 20px;\\n\\tpadding: 0;\\n}\\n.chara-ls-btn > *[data-v-becf171c] {\\n\\tmargin: auto;\\n\\tpadding: 0;\\n}\\n.loading[data-v-becf171c] {\\n\\tposition: absolute;\\n\\ttop:0;\\n\\tleft:0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tbackground: rgba(100, 100, 100, 0.5);\\n\\ttext-shadow: 1px 1px 0 white, 0 0 1px white;\\n\\t\\n\\tdisplay:flex;\\n\\talign-items:center;\\n\\tjustify-content:center;\\n}\\n\\n/*\\n\\thttp://www.oxxostudio.tw/articles/201408/sticky-ball.html\\n*/\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}