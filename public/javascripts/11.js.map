{"version":3,"sources":["webpack:///./src/game/Animation.js","webpack:///./src/game/Renderer/CharacterRenderer.js","webpack:///./src/init.js","webpack:///./src/game/Renderer/ChatBalloon.js","webpack:///./src/editor/editor.vue?b5e0","webpack:///./src/components/ui-sortable.vue?b47b","webpack:///src/components/ui-sortable.vue","webpack:///./src/components/ui-sortable.vue","webpack:///./src/components/ui-sortable.vue?0a64","webpack:///./src/components/ui-trigger.vue?25aa","webpack:///src/components/ui-trigger.vue","webpack:///./src/components/ui-trigger.vue","webpack:///./src/components/ui-trigger.vue?94ec","webpack:///./src/components/CorePosition.js","webpack:///./src/components/ui-menu.vue?b0c7","webpack:///src/components/ui-menu.vue","webpack:///./src/components/ui-menu.vue","webpack:///./src/components/ui-menu.vue?a4f1","webpack:///./src/editor/ui-equip-box.vue?d13f","webpack:///./src/components/ui-button-group.vue?a16d","webpack:///src/components/ui-button-group.vue","webpack:///./src/components/ui-button-group.vue","webpack:///./src/components/ui-button-group.vue?5045","webpack:///src/editor/ui-equip-box.vue","webpack:///./src/editor/ui-equip-box.vue?396c","webpack:///./src/editor/ui-equip-box.vue","webpack:///./src/editor/ui-character.vue?12d3","webpack:///src/editor/ui-character.vue","webpack:///./src/editor/ui-character.vue","webpack:///./src/editor/ui-character.vue?6caf","webpack:///./src/editor/ui-character-svg.vue?f107","webpack:///src/editor/ui-character-svg.vue","webpack:///./src/editor/ui-character-svg.vue","webpack:///./src/editor/ui-character-svg.vue?bcf1","webpack:///./src/editor/ui-character-attribute.vue?6a03","webpack:///src/editor/ui-character-attribute.vue","webpack:///./src/editor/ui-character-attribute.vue","webpack:///./src/editor/ui-character-attribute.vue?fd11","webpack:///src/editor/ui-mob-list.vue","webpack:///./src/editor/ui-mob-list.vue?22b4","webpack:///./src/editor/ui-mob-list.vue","webpack:///./src/editor/ui-mob-list.vue?f6f3","webpack:///./src/editor/ui-map-editor.vue?f2e6","webpack:///src/editor/ui-map-editor.vue","webpack:///./src/editor/ui-map-editor.vue","webpack:///./src/editor/ui-map-editor.vue?f2a3","webpack:///src/editor/editor.vue","webpack:///./src/editor/editor.vue?9915","webpack:///./src/editor/editor.vue","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2Settings.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2Math.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2Collision.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/Shapes/b2Shape.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./src/game/Sprite.js","webpack:///./src/game/Physics/PPlayer.js","webpack:///./public/javascripts/resource.js","webpack:///./src/game/SceneObject.js","webpack:///./src/game/Physics/Physics.js","webpack:///./src/game/Physics/Filter.js","webpack:///./src/game/Physics/World.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2Distance.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2Fixture.js","webpack:///./src/Common/AttackInfo.js","webpack:///./src/game/Renderer/MobRenderer.js","webpack:///./src/game/Renderer/NpcRenderer.js","webpack:///./src/game/Renderer/ParticleSystem.js","webpack:///./src/game/Map.js","webpack:///./src/ui/Basic/KeySlot.js","webpack:///./src/game/SceneCharacter.js","webpack:///./src/Client/PMovePath.js","webpack:///./src/game/Renderer/LifeRenderer.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2Draw.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2Timer.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2GrowableStack.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2BlockAllocator.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2StackAllocator.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2DynamicTree.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2BroadPhase.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2TimeOfImpact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2CollideCircle.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2CollidePolygon.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2CollideEdge.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/Shapes/b2CircleShape.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/Shapes/b2PolygonShape.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/Shapes/b2EdgeShape.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/Shapes/b2ChainShape.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2Body.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2Joint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2DistanceJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2AreaJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2FrictionJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2GearJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2MotorJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2MouseJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2PrismaticJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2PulleyJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2RevoluteJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2RopeJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2WeldJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2WheelJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2JointFactory.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2Contact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2CircleContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2PolygonContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2EdgeAndCircleContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2EdgeAndPolygonContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2ChainAndCircleContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2ChainAndPolygonContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2ContactFactory.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2WorldCallbacks.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2ContactManager.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2TimeStep.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2ContactSolver.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2Island.js","webpack:///./src/Box2D/build/Box2D/Box2D/Particle/b2Particle.js","webpack:///./src/Box2D/build/Box2D/Box2D/Particle/b2ParticleGroup.js","webpack:///./src/Box2D/build/Box2D/Box2D/Particle/b2StackQueue.js","webpack:///./src/Box2D/build/Box2D/Box2D/Particle/b2VoronoiDiagram.js","webpack:///./src/Box2D/build/Box2D/Box2D/Particle/b2ParticleSystem.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2World.js","webpack:///./src/Box2D/build/Box2D/Box2D/Rope/b2Rope.js","webpack:///./src/Box2D/build/Box2D/Box2D/Box2D.js","webpack:///./src/game/Physics/Foothold.js","webpack:///./src/game/Physics/Ground.js","webpack:///./src/game/Renderer/CharacterActionAnimation.js","webpack:///./src/game/Item.js","webpack:///./src/Common/PlayerData.js","webpack:///./src/util.js","webpack:///src/components/ui-draggable.vue","webpack:///./src/components/ui-draggable.vue?0d95","webpack:///./src/components/ui-draggable.vue","webpack:///./src/components/ui-draggable.vue?5457","webpack:///./src/game/Physics/PBullet.js","webpack:///./src/game/Skill.js","webpack:///./src/game/Physics/DebugDraw.js","webpack:///./src/game/Physics/LadderRope.js","webpack:///./src/game/Physics/PMob.js","webpack:///./src/game/MobSkill/MobSkillBase.js","webpack:///./src/ui/Basic/KeySlotData.js","webpack:///./src/components/ui-draggable.vue?1fda","webpack:///./src/components/ui-dialog.vue?2a4d","webpack:///./src/components/ui-sortable.vue?e333","webpack:///./src/components/ui-trigger.vue?3fd0","webpack:///./src/components/ui-menu.vue?1e26","webpack:///./src/components/ui-button-group.vue?ea58","webpack:///./src/editor/ui-equip-box.vue?a67f","webpack:///./src/editor/ui-character.vue?737d","webpack:///./src/editor/ui-character-svg.vue?360a","webpack:///./src/editor/ui-character-attribute.vue?08dc","webpack:///./src/editor/ui-mob-list.vue?eb58","webpack:///./src/editor/ui-map-editor.vue?6a39","webpack:///./src/editor/editor.vue?f010","webpack:///src/components/ui-dialog.vue","webpack:///./src/components/ui-dialog.vue?9232","webpack:///./src/components/ui-dialog.vue","webpack:///./src/components/ui-dialog.vue?1564","webpack:///./src/game/MobSkill/238.FairyDust.js","webpack:///./src/Common/Packet/index.js","webpack:///./src/game/Renderer/Layer.js","webpack:///./src/game/Renderer/DamageNumber.js","webpack:///./src/game/MobSkill/238.FlowerTrap.js","webpack:///./src/Common/Packet/LoginPacket.js","webpack:///./src/Common/Packet/ChatPacket.js","webpack:///./src/Common/Packet/CharacterPacket.js","webpack:///./src/components/ui-draggable.vue?9385","webpack:///./src/components/ui-draggable.vue?eb3f","webpack:///./src/components/ui-dialog.vue?9072","webpack:///./src/components/ui-dialog.vue?d8b9","webpack:///./src/components/ui-sortable.vue?bc72","webpack:///./src/components/ui-sortable.vue?8988","webpack:///./src/components/ui-trigger.vue?6479","webpack:///./src/components/ui-trigger.vue?705e","webpack:///./src/components/ui-menu.vue?6bca","webpack:///./src/components/ui-menu.vue?501f","webpack:///./src/components/ui-button-group.vue?d78a","webpack:///./src/components/ui-button-group.vue?4ed0","webpack:///./src/editor/ui-equip-box.vue?d030","webpack:///./src/editor/ui-equip-box.vue?b767","webpack:///./src/editor/ui-character.vue?f8cb","webpack:///./src/editor/ui-character.vue?dfe7","webpack:///./src/editor/ui-character-svg.vue?3a46","webpack:///./src/editor/ui-character-svg.vue?4231","webpack:///./src/editor/ui-character-attribute.vue?dca3","webpack:///./src/editor/ui-character-attribute.vue?522f","webpack:///./src/editor/ui-mob-list.vue?c582","webpack:///./src/editor/ui-mob-list.vue?2bca","webpack:///./src/editor/ui-map-editor.vue?4b39","webpack:///./src/editor/ui-map-editor.vue?1e30","webpack:///./src/editor/editor.vue?c392","webpack:///./src/editor/editor.vue?7dad"],"names":["window","m_draw_animation_texture_info","IAnimation","[object Object]","raw","url","this","_raw","_url","frame","time","delta","textures","is_loop","is_end","reduce","pv","cv","delay","newAnim","constructor","Error","stamp","texture","AnimationBase","super","i","_Sprite_js__WEBPACK_IMPORTED_MODULE_2__","isLoaded","__loadTexture","fc","length","reset","renderer","x","y","angle","flip","drawRotaGraph","Animation","draw","_draw_and_preload","zMap","sMap","FragmentTexture","_Sprite_js__WEBPACK_IMPORTED_MODULE_5__","full_path","origin","__proto__","_math_js__WEBPACK_IMPORTED_MODULE_6__","prototype","map","relative","calcRelative","_calcRelative","filter","_IRenderer_js__WEBPACK_IMPORTED_MODULE_4__","opacity","_slot","_place","classList","z","not_value","console","warn","order","stack","empty","brow","neck","navel","hand","handMove","_earBelowHead","earBelowHead","_earOverHead","earOverHead","that","base","anchor","sub","add","chara","_getRelativeFunction","isHasAnchor","isAnchorNeck","_calcRelative_neck","isAnchorBrow","_calcRelative_brow","isAnchorNavel","slots","body","_getOrigin","_calcRelative_navel","isAnchorHand","_calcRelative_hand","isAnchorHandMove","lastIndexOf","_calcRelative_handMove_lHand","_calcRelative_handMove","_calcRelativeEmpty","fragments","getTexture","_anchor","head","arm","globalAlpha","isEmpty","drawGraph2","ctx","toString","HairFragmentTexture","args","graph2","graph3","_render","ItemEffectAnimation","_Animation__WEBPACK_IMPORTED_MODULE_2__","Object","defineProperty","value","__getAttr","load","attr","defVal","actionExceptRotation","oy","height","ItemEffect","animation","action","fixed","itemEffectList","_list","$get","list","clear","forEach","id","parseInt","ex","equipID","eff","Number","has","data","_load","update","render","front","__construct","join","Set","CharacterFragmentBase","place","CharacterBodyFragment","getFrameTexture","action_frame","ft","CharacterFaceFragment","emotion_frame","emotion","EquipImageFilter","equip","hue","j","k","sat","bri","contrast","ICharacterEquip","_animation_type","CharacterEquipBase","effect","_onload","categoryInfo","slot_order","islot","vslot","toJSON","__onload","func","call","cateInfo","use_category","promise_raw","promise_name","__load","path","then","name","desc","reason","Promise","resolve","all","result","_public_javascripts_resource_js__WEBPACK_IMPORTED_MODULE_0__","isEquipExist","load_extern_item_data","__load_slot","__load_fragments","a","fragmentConstructor","action_list","keys","_raw_textures","_base_path","__load_frame_textures","fragment_textures","frag","__load_place_textures","FragmentTextureType","slot","info","islots","match","vslots","getIconUrl","getIconRawUrl","CharacterEquip","d","isNaN","isFinite","CharacterEquipHair","CharacterEquipFaceAcc","face","_info","fragmentType","elfEarFragment","lefEarFragment","highlefEarFragment","ear","lefEar","highlefEar","elfEar","slice","CharacterSlots","_ordered_slot","_hair","_hair2","_hairMix2","_hair3","_hairMix3","hair","cap","accessoryFace","accessoryEyes","accessoryEars","coat","longcoat","pants","shoes","glove","cape","shield","weapon","configurable","writable","enumerable","hairColor2","hairMix2","hairColor3","hairMix3","color","getColorHairID","get","undefined","getHairColor","error","TypeError","hc2Id","$promise_hair2","__loadColoredHair","hair2","item","ori","hc3Id","$promise_hair3","hair3","loadedEquip","alert","_unload","push","ha","Math","trunc","enumerate_equip","CharacterChangeLog","useEquip","unuseEquip","weaponType","CharacterAnimationBase","_$dirty","job","subJob","actani","_CharacterActionAnimation_js__WEBPACK_IMPORTED_MODULE_7__","speed","fixed_speed","_action","_action_frame","_action_time","_emotion","_emotion_frame","_emotion_time","_emotion_frame_sequence","__require_update","__frag_list","$$changeLog","nc","tasks","getFrameCount","count","_isLoaded_or_doload","$promise","act","reload","frame_count","action_frame_count","next","f","action_time","action_delay","getDelay","emo","_action_list","indexOf","circularSequence","emotion_frame_count","random","emotion_time","emotion_delay","isEnd","loop","getSpeed","_update","__update_frag_list","pushGlobalAlpha","__draw_list","popGlobalAlpha","pushMatrix","translate","rotate","m_a","scale","popMatrix","__add_frag_to_list","__add_equip_to_frag_list","is_back","fts","startsWith","ae","_calcBoundBox","left","top","right","bottom","x0","y0","x1","width","y1","min","max","_boundBox","obj","CharacterRenderer","tx","ty","__load_task","Init","reverse","use","initAnimation","waitLoaded","_draw","__forceUpdate","_waitFrameTexturesLoaded","category","getJobWeaponCategory","isCashWeapon","task","_use","_unuse","code","es","split","_clear","v","ss","cate","h2","h3","hc","c2","m2","c3","m3","hairMix4","apply","hairColor","col","faceColor","getFaceColor","getColorFaceID","changeLog","unuse","genCode","_stringify","link","enumerate","log","open","_outlink","__texture_to_base64","frag_list","file_name","svg","clz","DownloadData","filename","bound","size","$swapCanvas","c2w","_ctx2","canvas","c2h","base64","toDataURL","elem","document","createElement","download","href","appendChild","click","removeChild","$src","src","reject","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","onerror","ev","readAsDataURL","response","responseType","send","_init_js__WEBPACK_IMPORTED_MODULE_1__","jQuery","jquery__WEBPACK_IMPORTED_MODULE_0___default","$","vue__WEBPACK_IMPORTED_MODULE_14___default","config","productionTip","vuex__WEBPACK_IMPORTED_MODULE_15__","onwheel","init_tasks","AddInitTask","InitAll","ChatBalloon","style","_d_path","nw","_Sprite_js__WEBPACK_IMPORTED_MODULE_1__","n","ne","w","c","e","sw","s","se","arrow","cache","text","lines","line","LINE_HEIGHT","font","textAlign","textBaseline","_tw","measureText","sort","b","tw","ceil","hw","th","draw2","_drawPattern","xw","arrow_hw","hw_arrow_hw","draw2i","cy","fillStyle","fillText","$images_ChatBalloon","components_ui_sortablevue_type_script_lang_js_","props","methods","getValue","$el","sortable","items","indices","new_list","$emit","mounted","$$el","bind","disableSelection","beforeUpdate","$nextTick","el","remove","append","updated","watch","newValue","ui_sortable","componentNormalizer","_vm","_h","$createElement","_self","_c","_l","index","_t","components_ui_triggervue_type_script_lang_js_","active","ui_trigger","class","components_ui_menuvue_type_script_lang_js_","mixins","position","default","my","at","collision","calcPosition","rel","mypos","pos","assign","replace","setPosition","val","handler","of","deep","show","_cp_onclick","on","off","ui_menu","staticClass","attrs","_e","ui_equip_boxvue_type_template_id_cfe311ba_staticRenderFns","staticStyle","display","directives","rawName","expression","flex","change","$event","$$selectedVal","Array","target","options","o","selected","_value","selected_category","multiple","og","key","label","cat","domProps","id_prefix","_v","_s","categoryName","ref","type","keydown","_k","keyCode","searchNextText","input","composing","search_text","DATA_TAG_VERSION","arg","modifiers","mouseenter","mouseleave","padding","background","border","text-align","checked","isArray","onlyShowSearchResult","_i","$$a","$$c","$$i","concat","displayMode","components_ui_button_groupvue_type_script_lang_js_","buttons","required","String","onclick","splice","btns","_update_element","actives","isInteger","querySelectorAll","querySelector","toggle","ui_button_group","data-id","filter_buttons","face_color_buttons","hair_color_buttons","ItemFilter","cash","gender","reqJob","fn","pageSize","editor_ui_equip_boxvue_type_script_lang_js_","search_next","column_count","loaded_equip_list","loaded_category","equip_list","search_equip_result","filters","face_color","hair_color","hair_color2","hair_mix2","page","face_names","hair_names","computed","DATA_TAG","DATA_VERSION","categoryGroupList","ks","values","resource","_g","group","toLocaleLowerCase","listPath","__count_of_item_in_page","start","__count_of_page","clip-path","copyImageUrl","img","currentTarget","confirm","copyToClipboard","copyInnerText","innerText","SelectText","copyText","search_equip","async","clearSearch","loadList","old_search_equip_result","rr","isSafeInteger","si","_is_category_hair","black","b1","$page","calcPage","_is_category_face","regexp","RegExp","test","localeCompare","sa","sb","toLowerCase","change_page","location","hash","$refs","input_search","focus","content","scrollTop","__get_category_slot","cateinfo","__get_color","prefix","coloredPath","JSON","parse","asset","concat_external_resource","cash_weapon","wt","va","__t","_equip","fnFilter","__get_filter","count_of_page","fnFilters","every","__get_item","first","__get_item_id","__get_item_name","__get_item_name_ex","_name","__get_item_icon_url","icon","__face_or_hair_img_onerror","sp","ls","clickItem","num","groupCollapsed","groupEnd","event","hoverItem","mouseleaveItem","selected_category_onchange","oldVal","mix","inserted","components","ui-draggable","ui_draggable","ui-button-group","ui_dialog","ui_equip_box","zIndex","mousedown","button","requireOrder","minimum","_m","update:active","scopedSlots","_u","alt","title","font-family","text-shadow","border-spacing","getHairMixColor1CSS","number","step","__r","_n","blur","$forceUpdate","getHairMixColor2CSS","preventDefault","mousemove","contextmenu","rowspan","$foreign","pre","editor_ui_charactervue_type_script_lang_js_","arr","set","newVal","get_ft_src","get_ft_style","ui_character","editor_ui_character_svgvue_type_script_lang_js_","is_loading","is_processing","fake","vm","setTimeout","download2","innerHTML","cursor","ui_character_svg","version","xmlns","xmlns:xlink","transform","xlink:href","editor_ui_character_attributevue_type_script_lang_js_","isShowDebug","isShowEquipImageFilter","actions","character_action_list","emotions","character_emotion_list","sceneChara","chara_angle","round","degrees","deg","radians","pauseAnimation","isEquip","getEquipCategoryName","ui_character_attribute","vertical-align","border-collapse","$set","enablePhysics","clicl","update_frame_list","disabled","colspan","_q","user-select","mouseover","editor_ui_mob_listvue_type_script_lang_js_","store","vuex_esm","Store","state","spawns","m","mobTime","hide","fh","rx0","rx1","is_clear","onCollapsed","hidePreview","showPreview","smallTip","$root","Map","loadLifeDesc","imageUrl","html","addSpawn","scene_map","lifeMgr","spawnPoints","removeAll","killAll","entities","life","die","$on","ui_mob_list","float","spawn","for","editor_ui_map_editorvue_type_script_lang_js_","aaaa","isShowRX","typeb","isShowRY","isShowCX","isShowCY","get_ObjPath_style","display_aabb","aabb_color","scrollIntoView","center","aabb","$gv","m_viewRect","setCenter","$select","fupdate","ui_map_editor","model","callback","$$v","_texture_base_path","__h","movetype","endsWith","editor_editorvue_type_script_lang_js_","charaList","_last_id","progressValue","progressMaximum","getters","lastId","mutations","increaseProgress","payload","amount","increaseProgressMax","isIdExist","context","sortCharaById","get_n","selectChara","selected_chara","$remote","$physics","CANVAS_SCALE","_addChara","SceneCharacter","__synchronize","dispatch","commit","_createChara","$io","remote_chara","emplace","_parse","_setup_test","addChara","createChara","loadCharacters","localStorage","getItem","savedChara","saveCharacters","ls_charaList","setItem","stringify","scr_rat_x","innerWidth","scr_rat_y","innerHeight","dirty","is_show_chara_dl_menu","mapEditorMode","selectedLayer","wnd_debug_style","wnds","menu","visable","character_list","character_attribute","equip_box","spawnpoint","debug_window","gv","mapState","$store","addNewChara","addCloneChara","oninput_sort","app","updateScreen","$hairMixColor2","catch","params","useItem","openCharacterDLMenu","chara_dl_menu","closeCharacterDLMenu","copyCharaCode","_save_as_png","Engine","getElementById","bgm_outer","ui-dialog","ui-sortable","ui-trigger","ui-menu","ui-character","ui-character-svg","ui-character-attribute","ui-equip-box","ui-mob-list","ui-map-editor","editor_component","wnd","padStart","m_is_rendering_map","m_display_back","m_display_front","m_display_mapobj","m_display_maptile","m_display_portal","m_display_particle_system","m_display_skeletal_anim","m_display_life","m_display_player","m_display_other_player","m_display_foothold","m_display_selected_object","m_display_debug_info","m_display_physics_debug","m_debugDraw","flagName","update:position","resize","reset_content_style","layer","objs","z-index","close","_save_as_svg","__webpack_exports__","b2Assert","condition","__webpack_require__","b2MakeNumberArray","b2_maxFloat","b2_epsilon","b2_epsilon_sq","b2_pi","b2_maxManifoldPoints","b2_maxPolygonVertices","b2_aabbExtension","b2_aabbMultiplier","b2_linearSlop","b2_angularSlop","b2_polygonRadius","b2_maxSubSteps","b2_maxTOIContacts","b2_velocityThreshold","b2_maxLinearCorrection","b2_maxAngularCorrection","b2_maxTranslation","b2_maxTranslationSquared","b2_maxRotation","b2_maxRotationSquared","b2_baumgarte","b2_toiBaumgarte","b2_invalidParticleIndex","b2_maxParticleIndex","b2_particleStride","b2_minParticleWeight","b2_maxParticlePressure","b2_maxParticleForce","b2_maxTriadDistance","b2_maxTriadDistanceSquared","b2_minParticleSystemBufferCapacity","b2_barrierCollisionTime","b2_timeToSleep","b2_linearSleepTolerance","b2_angularSleepTolerance","b2Alloc","b2Free","mem","b2Log","message","b2Version","major","minor","revision","b2_version","b2_changelist","b2ParseInt","b2ParseUInt","abs","b2MakeArray","init","b2MakeNullArray","_b2Settings__WEBPACK_IMPORTED_MODULE_0__","b2_pi_over_180","b2_180_over_pi","b2_two_pi","b2Abs","b2Min","b2Max","b2Clamp","lo","hi","b2Swap","tmp","b2IsValid","b2Sq","b2InvSqrt","sqrt","b2Sqrt","b2Pow","pow","b2DegToRad","b2RadToDeg","b2Cos","cos","b2Sin","sin","b2Acos","acos","b2Asin","asin","b2Atan2","atan2","b2NextPowerOfTwo","b2IsPowerOfTwo","b2Random","b2RandomRange","b2Vec2","other","Length","inv_length","out","b2AbsV","b2MinV","b2MaxV","b2ClampV","v_x","v_y","b2RotateV","b2DotVV","b2CrossVV","b2CrossVS","b2CrossVOne","b2CrossSV","b2CrossOneV","b2AddVV","b2SubVV","b2MulSV","b2MulVS","b2AddVMulSV","b2SubVMulSV","b2AddVCrossSV","b2MidVV","b2ExtVV","b2IsEqualToV","c_x","c_y","b2DistanceVV","b2DistanceSquaredVV","b2NegV","ZERO","UNITX","UNITY","s_t0","s_t1","s_t2","s_t3","b2Vec2_zero","b2Vec3","b2DotV3V3","b2CrossV3V3","a_x","a_y","a_z","b_x","b_y","b_z","b2Mat22","ey","Copy","c1","SetVV","r1c1","r1c2","r2c1","r2c2","SetSSSS","SetAngle","SetZero","det","a11","a12","a21","a22","SelfAbs","GetInverse","M","SelfAdd","SelfSub","M_ex","M_ey","b2AbsM","b2MulMV","b2MulTMV","A","B","A_ex","A_ey","B_ex","B_ey","b2AddMM","A_ex_x","A_ex_y","A_ey_x","A_ey_y","B_ex_x","B_ex_y","B_ey_x","B_ey_y","b2MulMM","b2MulTMM","IDENTITY","b2Mat33","ez","SetXYZ","a31","a32","a13","a23","a33","v_z","b2MulM33V3","b2MulM33XYZ","b2MulM33V2","b2MulM33XY","b2Rot","q","r","b2MulRR","b2MulTRR","b2MulRV","b2MulTRV","q_c","q_s","r_c","r_s","b2Transform","p","SetIdentity","rotation","GetAngle","T","T_q_c","T_q_s","b2MulXV","p_x","p_y","b2MulTXV","b2MulXX","b2MulTXX","b2Sweep","localCenter","c0","a0","alpha0","xf","beta","one_minus_beta","alpha","floor","b2ContactFeatureType","b2ManifoldType","b2PointState","_b2Distance__WEBPACK_IMPORTED_MODULE_2__","b2ContactFeature","_key","_key_invalid","_indexA","_indexB","_typeA","_typeB","indexA","indexB","typeA","typeB","b2ContactID","cf","b2ManifoldPoint","localPoint","_Common_b2Math__WEBPACK_IMPORTED_MODULE_1__","normalImpulse","tangentImpulse","_Common_b2Settings__WEBPACK_IMPORTED_MODULE_0__","b2Manifold","points","MakeArray","localNormal","e_unknown","pointCount","Reset","b2WorldManifold","normal","separations","manifold","xfA","radiusA","xfB","radiusB","e_circles","pointA","MulXV","Initialize_s_pointA","pointB","Initialize_s_pointB","DistanceSquaredVV","SubVV","SelfNormalize","cA","AddVMulSV","Initialize_s_cA","cB","SubVMulSV","Initialize_s_cB","MidVV","DotVV","e_faceA","MulRV","planePoint","Initialize_s_planePoint","clipPoint","Initialize_s_clipPoint","e_faceB","SelfNeg","b2GetPointStates","state1","state2","manifold1","manifold2","b2_removeState","jct","b2_persistState","b2_nullState","b2_addState","b2ClipVertex","b2RayCastInput","p1","p2","maxFraction","b2RayCastOutput","fraction","b2AABB","lowerBound","upperBound","m_cache_center","m_cache_extent","d_x","d_y","valid","IsValid","ExtVV","aabb1","aabb2","Combine2","output","tmin","tmax","absD_x","absD_y","inv_d","t1","t2","t3","d1_x","d1_y","d2_x","d2_y","b2TestOverlapAABB","b2ClipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","vIn0","vIn1","distance0","distance1","interp","e_vertex","e_face","b2TestOverlapShape_s_input","b2TestOverlapShape_s_simplexCache","b2TestOverlapShape_s_output","b2TestOverlapShape","shapeA","shapeB","proxyA","SetShape","proxyB","transformA","transformB","useRadii","simplexCache","distance","b2ShapeType","_Common_b2Math__WEBPACK_IMPORTED_MODULE_0__","b2MassData","mass","I","b2Shape","radius","m_type","m_radius","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","exports","SpriteBase","_Engine_js__WEBPACK_IMPORTED_MODULE_2__","__w","isTexture","hasOwnProperty","__isEmpty","_order","defaultValue","propertyName","converter","_engine","drawGraph","Sprite","_get","_math_js__WEBPACK_IMPORTED_MODULE_0__","save","rect","clip","restore","drawPattern","drawHorizontalPattern","drawVerticalPattern","_drawHorizontalPattern","_drawVerticalPattern","DEGTORAD","PI","b2Vec2_temp","_Physics_js__WEBPACK_IMPORTED_MODULE_0__","chara_profile","density","foot_width","foot_j_width","JUMP_FORCE","MOVEMENT_VELOCITY","$LADDER_SPEED","PLAYER_USE_WHEEL_WALKER","FOOT_FRICTION","MOVEMENT_POWER","MOVEMENT_STOP_POWER","PORTAL_COOLDOWN","PPlayerState","_begin_jump","jump","jump_count","_drop","walk","prone","dropDown","_fly","brake","ladder","ladder_move_dir","invincible","freeze","invokeSkill","portal_cooldown","knockback","outOfControl","FootContact","foothold","priority","PCharacterBase","disable","setMovementSpeed","foot_walk","walker","$foothold","prev_$fh","leave_$fh","_foothold","_foot_at","_foothold_priority","_foot_contact_list","portal","_walker_omega","jump_force","clearForce","by","fy","SetPositionXY","ConstantVelocity","GetPosition","enable","mapRenderer","mapController","controller","map_id","getMap","exeScript","reg","tn","cmd","fromTn","toPortal","portalMgr","portals","find","pn","_gotoPortal","tpid","tp","doAfterStep","unload","m_world","onceUnlock","_useLadder","contactLadder","flag","world","$ladder_pj","ladderBody","GetAngularVelocity","SetFixedRotation","SetAwake","SetLinearVelocity2","b2_kinematicBody","SetMotorSpeed","calcHeight","getPosition","pjd","bodyA","bodyB","localAxisA","lowerTranslation","upperTranslation","enableLimit","maxMotorForce","_getMass","pj","CreateJoint","b2_dynamicBody","DestroyJoint","$sticky_pj","_isCanMove","up","down","EnableMotor","useLadder","ApplyLinearImpulseToCenter2","_usePortal","GetLocalPoint","wheel_sp","velocity","GetLinearVelocity","actionDropdown","SetMaxMotorTorque","remove_sticky","vx","止滑","sticky","_isCanJump","actionJump","isDrop","increment_percent","_setWalkerOmegaFromVelocity","movement_velocity","GetWorld","GetGravity","GetMass","SetGravityScale","_body_category","first_pos","jmp_body_pos_y","bdef","fdef","shape","bullet","userData","CreateBody","$type","_Filter_js__WEBPACK_IMPORTED_MODULE_7__","SetAsBox","friction","restitution","fixture","CreateFixture","circle","m_p","_set_foot_listener","jd","Initialize","enableMotor","maxMotorTorque","lowerAngle","upperAngle","referenceAngle","frequencyHz","dampingRatio","addStep","Step","addAfterStep","AfterStep","setjumpForce","DestroyBody","fa","fb","GetBody","GetUserData","contact","_isFromSelfContact","SetEnabled","foot_fixture","beginContact","__beginContact_walker","endContact","__endContact_walker","preSolve","__preSolve_walker","_ignoreSelfContact","targetBody","m_body","_beginContactPortal","m_userData","_endContactPortal","oldManifold","script","foot_at","is_wall","chain","prev","y2","__priority_foothold_contact","Clone","foot_contact","mapBound_body","_endContactFootholdList","_$fallEdge","force","ApplyForceToCenter","upper","GetUpperLimit","lower","GetLowerLimit","translation","GetJointTranslation","m_awakeFlag","pop","PCharacter","arguments","moveX","moveY","move","ApplyLinearImpulseToCenter","kbTime","fx","forceMove","md","ground","bodies","maxForce","moveElem","elapsed","ConstantVelocityWorldCenter2","vy","ALPHA","ONE_MINUS_ALPHA","dx","dy","sx","FRAME_ELAPSED","sy","oldVel","pState","setGravityScale","sign","PPlayer","_create","SCREEN_PRINTLN","toFixed","m_linearVelocity","input_keyDown","mouse_dl","px","mouse_x","py","mouse_y","SetLinearVelocity","mouse_dm","_$renderer","PRemoteCharacter","_create_anchor","moveTo","m_targetA","$failed_urls","$archive","ItemCategoryInfo","imgDir","dataDir","iconPath","iconRawPath","defineProperties","_id","itemId","Equip","Consume","Etc","Install","Cash","typeName","0","1","2","3","4","typeId","0000","0001","0002","0003","0004","0100","0101","0102","0103","0104","0105","0106","0107","0108","0109","0110","0121","0122","0123","0124","0125","0126","0127","0128","0130","0131","0132","0133","0134","013526","013530","0136","0137","0138","0140","0141","0142","0143","0144","0145","0146","0147","0148","0149","0150","0151","0152","0153","0154","0155","0156","0157","0158","0170","_categoryList","info_map","ResourceManager","dp","equip_map","$setValue","timeout","status","responseText","ontimeout","onabort","root_path","$ROOT_PATH","archive","failed_urls","ps","lastIndex","origin_value","$getValue","$ResourceManager","symbol_isPack","Symbol","url_startsWith_protocol","_setValueByPath","is_pack","_getValueFromArchiveByPath","_path","_getDataPathByUrl","$getValueAsync","pack","packUrl","jsonText","packSync","dataUrl","dataSync","listUrl","listSync","soundMp3Url","soundWavUrl","assetUrl","ItemAttrNormalize","g","regexp_getHairStyleID","regexp_getFaceStyleID","regexp_getHairColor","regexp_getFaceColor","CharacterRenderConfig","id_1","id_2","ItemTypeInfo","Hat","Cape","Top","Overall","Glove","Bottom","Shield","Shoes","Eye Decoration","Earrings","Face Accessory","Face","Hair","external","load_external_resource","_external_raw","typeInfo","overallCategory","subCategory","it","isCash","","external_resource_promise","_concat_external_resource_p","origin_data","_concat_external_resource","id_map","ori_item","_desc","trigger_update_external_equip_list","default_","frameBooks","frames","_act","effects","_frags","frags","_frag","image","originOrZero","mapOffset","metaInfo","iconRaw","SceneObject","$objectid","$layer","damage","crr","_left","_top","_right","_bottom","strokeStyle","beginPath","lineTo","arcTo","fill","box2d","FilterHelper","b2Body","b2Fixture","b2Contact","b2ContactImpulse","b2ContactListener","$box2d","_on_step","_on_after_step","ApplyForceToCenter2","Acceleration","desiredVel","sourceVel","point","GetWorldCenter","velChange","ix","iy","impulse","ApplyLinearImpulse","AccelerationX","desiredVelX","velChangeX","AccelerationY","desiredVelY","velChangeY","ConstantVelocity2","pointX","pointY","ConstantVelocityX","ConstantVelocityY","postSolve","getOwnerID","host","owner","module","FixtureContactListener","filter_preset","next_category","_Box2D_build_Box2D_Box2D_Dynamics_b2Fixture__WEBPACK_IMPORTED_MODULE_0__","preset","maskBits","categoryBits","debugName","debugCategory","groupIndex","filter_table","filter_list","registerCategory","contactFilter","_Box2D_build_Box2D_Box2D_Box2D__WEBPACK_IMPORTED_MODULE_1__","Fixture","filterName","GetFilterData","GetType","ShouldCollideConnected","ShouldCollide","$gravityAcc","$positionIterations","$velocityIterations","$particleIterations","$particleRadius","GRAVITY","ContactListener","m_fixtureA","m_fixtureB","childIndexA","m_indexA","childIndexB","m_indexB","World","SetDebugDraw","SetContactListener","_Ground_js__WEBPACK_IMPORTED_MODULE_2__","ladderRope","stop","$_mouseJoint","_onceAfterStep","_destryBodyList","_DestroyBody","m_locked","draw_foothold_path_count","particleType","b2_elasticParticle","particleSystemDef","m_particleSystem","CreateParticleSystem","SetRadius","SetDamping","pd","flags","CreateParticleGroup","b2_colorMixingParticle","ColorParticleGroup","$vbo_ps","map_raw_data","_LadderRope_js__WEBPACK_IMPORTED_MODULE_3__","IsLocked","mapMob","mob","_PMob_js__WEBPACK_IMPORTED_MODULE_5__","_destroy","mapNpc","compute_rectangle","_Filter_js__WEBPACK_IMPORTED_MODULE_8__","b2_staticBody","MAP_PORTAL_FULL_SIZE","isSensor","bb","m_vertex1","m_vertex2","player","sceneObject","_PPlayer_js__WEBPACK_IMPORTED_MODULE_4__","AddVV","hit_fixture","QueryAABB","TestPoint","SetTarget","$_mouseDown","mouse_ul","$_mouseUp","mouse_move","$_mouseMove","$_onMouseEvent","GetBodyList","m_next","MAX_FPS","debugDraw","m_ctx","canvasScale","lineWidth","viewZoom","DrawDebugData","fillRect","m_display_particleSystem","gl","GetParticleCount","buf","GetPositionBuffer","vertices","Float32Array","bufferData","ARRAY_BUFFER","STATIC_DRAW","vbo","createBuffer","bindBuffer","m_groupList","particleCount","instanceOffset","GetBufferIndex","drawArrays","POINTS","m_positionBuffer","m_colorBuffer","m_weightBuffer","r2","$particle_grd","grd","createRadialGradient","addColorStop","m_firstIndex","m_lastIndex","setTransform","$ladderRope","$drawDebugInfo","$drawDebugInfo2","footholds","_drawLine","lr","calcWidth","b2DistanceProxy","m_buffer","m_vertices","m_count","SetupDistanceProxy","bestIndex","bestValue","b2SimplexCache","metric","b2DistanceInput","b2DistanceOutput","iterations","b2_gjkCalls","b2_gjkIters","b2_gjkMaxIters","b2_gjk_reset","b2SimplexVertex","wA","wB","b2Simplex","m_v1","m_v2","m_v3","wALocal","GetVertex","wBLocal","metric1","metric2","GetMetric","NegV","e12","CrossVV","CrossOneV","CrossVOne","pA","pB","DistanceVV","w1","w2","s_e12","d12_2","d12_1","inv_d12","w3","w1e12","e13","s_e13","w1e13","d13_1","d13_2","e23","s_e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","b2Distance_s_simplex","b2Distance_s_saveA","b2Distance_s_saveB","b2Distance_s_p","b2Distance_s_d","b2Distance_s_normal","b2Distance_s_supportA","b2Distance_s_supportB","b2Distance","simplex","ReadCache","saveA","saveB","saveCount","distanceSqr1","distanceSqr2","iter","Solve2","Solve3","GetClosestPoint","LengthSquared","GetSearchDirection","vertex","GetSupport","MulTRV","duplicate","GetWitnessPoints","WriteCache","rA","rB","Normalize","SelfMulAdd","SelfMulSub","_Collision_Shapes_b2Shape__WEBPACK_IMPORTED_MODULE_3__","b2Filter","b2FixtureDef","b2FixtureProxy","_Collision_b2Collision__WEBPACK_IMPORTED_MODULE_2__","childIndex","treeNode","def","m_density","m_friction","m_restitution","m_proxies","m_proxyCount","m_filter","m_isSensor","m_shape","sensor","Refilter","edge","GetContactList","fixtureA","GetFixtureA","fixtureB","GetFixtureB","FlagForFiltering","broadPhase","m_contactManager","m_broadPhase","TouchProxy","GetTransform","ComputeDistance","RayCast","massData","ComputeMass","bodyIndex","Dump","GetChildCount","proxy","ComputeAABB","CreateProxy","DestroyProxy","transform1","transform2","Synchronize_s_aabb1","Synchronize_s_aabb2","displacement","Synchronize_s_displacement","MoveProxy","AttackInfo","allAttack","skill","symbol_targetObject","AttackPair","allDamage","targetObject","objectid","setTargetObject","realDamage","critical","DamagePair","MobAnimationSpeed","$mob_name","MobRenderer_MobRenderer","LifeRenderer","__info","noFlip","level","maxHP","maxMP","PADamage","PDRate","MADamage","MDRate","acc","eva","pushed","fs","summonType","elemAttr","mobType","firstAttack","hideHP","boss","hpTagColor","hpTagBgcolor","showNotRemoteDam","defaultHP","defaultMP","ignoreMoveImpact","_get_desc_base_path","flySpeed","_animations","NpcAnimationSpeed","NpcRenderer_NpcRenderer","rand_r","range","rand_color2i","colorVar","IRenderer","fromInt24","ParticleSystem_Particle","_initParam","math","startScale","lifeMax","lifeVar","angleVar","startColor","startColorVar","color_d","endColor","endColorVar","selfSub","sizeX","sizeY","startSize","startSizeVar","endScale","endSize","endSizeVar","scale_d","startX","posX","posVarX","startY","posY","posVarY","emitterMode","emitterType","gravity","speedVar","dir","radialAccel","radialAccelVar","tangentialAccel","tangentialAccelVar","rotationIsDir","dt","radial","tangential","normalize","clone","mul","newy","_radial","_dir","mx","toHSV","drawColoredGraph2","ParticleSystem_ParticleGroupData","duration","totalParticle","ParticleSystem_ParticleGroup","particles","Infinity","pg","totalTime","particle","t","particle_name","particleName","_particle_path","_experimental_particle","Image","helper","imagedata","imageToImagedata","imagedataToDataURL","whiteToRed","encodeURIComponent","naturalWidth","naturalHeight","URL","viewRect","blendFuncDst","blendFuncSrc","globalCompositeOperation","hh","collide4f2","enable_skeletal_anim","map_sprite","Back","Obj","Tile","map_load_package","$map_sprite","allQuest","Map_MapTexture","texture0","raw_default","a1","movew","moveh","movep","mover","ratio","loadIdentity","_drawRotaGraph","Map_MapObjectBase","quest","qid","_load_object_info","_load_back_info","_load_tile_info","zM","rx","ry","cx","backTags","flow","_load_texture","_texture_raw","__calc_aabb","compute_max_rectangle","hr","m_editor_mode","$editor_mouse","next_texture","mcx","mcy","m_selected_object","m_hover_object","$unselect","index_of_texture","collide","setLineDash","lineDashOffset","stroke","__draw_texture","horizontal","vertical","x2","yy","xx","__draw","mrx","mry","MapObject","_update_and_preload","oS","l0","l1","l2","Map_MapParticle","groups","evaluate","mapRawData","sceneMap","particleList","particleRaw","mpp","Map_MapObjectSkeletalAnim","ssanim","_fname","_folder","SSAnim","spineRandomStart","anim_length","setAnimTime","MapTile","tS","u","no","MapPortal","tm","states","skin","_loadTexture","__display_mode","_portals_raw","_type_map","pt","editor","game","_getTexturePath","_script","MapPortalManager","createPortal","MapBackBase","MapBack","bS","MapBackAnimation","MapBackSkeletalAnim","ob","LifeSpawnPoint","spawnId","Map_MapLifeEntity","lifeSpawnPoint","lifeId","is_dead","Map_MapMob","Map_MapNpc","loadDescription","skills","hp","createMob","_loadAction","_load_skill_by_mob_id","_load_skill_info","attack","skill_map","firstSkillInfo","skill_list","_applyState","m_display_mob","skill1","sname","anim","skill_info","$anim","mob_id","FlowerTrap","FairyDust","5","invoke","6","7","8","9","10","skill_map_action","lev","skill_id","unknow skill","decreaseLife","destroyMob","m_display_npc","destroyNpc","MapLifeEntityCapacityRate","MapLifeManager","entity","increaseLife","destroyLife","Create","npcID","is_dummy","mobID","whereLayer","Map_SceneMap","frontground","layeredObject","layeredTile","namedObject","mapBound","$load_tasks","$loading_status","$_mapString","$mapString","$region","_map_names","$MapNames","_Init","loading_task_map","back","ani","objIsEmpty","__constructLayeredObject_obj","tiles","__constructLayeredObject_tile","tile","ti","spineAni","objtb","__compute_top_bottom_border","tiletb","reCalc","VRLeft","VRTop","VRRight","VRBottom","tb","_compute_top_bottom_border","_compute_left_right_border","_window_title","mapName","streetName","_get_map_data_url","url2","_loadBgm","_constructBack","_constructLayeredObject","mapobj","__constructMiniMap","construct","results","_compute_map_bound","viewCenter","_createMapBound","spawnMob","bgmPath","bgm","elem_bgm","_getBgmPath","_bgm_path","autoplay","play","pause","miniMap","centerX","centerY","mouse_dr","player_spawns","isActivated","layerIndex","KeySlot","KeySlot_ActionSlot","KeySlotData","KeySlot_SkillSlot","$addItem_repeatEquip","SceneCharacter_ChatController","$outputText","_isDisplay","isDisplay","$displayDuration","displayDuration","ChatBalloon_default_style","cb","$colon","colon","boundBox","$maxLength","ChatBalloon_display_duration","keyboard_map","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","SceneCharacter_BaseSceneCharacter","stat","PlayerData","activeSkills","chatCtrl","$inPacket","$outPacket","_move","shift","isAwake","equipId","from","to","skillId","Skill","delete","_handleAttack","attackInfo","_player_control","getLayer","__drawName","player_state","fly","isLadder","_is_end","getTargetObject","damVar","getCurrentMaxBaseDamage","getCurrentMinBaseDamage","critRate","critDamage","DamageNumber","addDamagePair","m_damageSkin","SceneCharacter_SceneCharacter","scene","$createPlayer","Item","onJobChange","_onJobChange","newJob","$recMove","key_map","ikey","can_use_skill","keyName","keySlot","keyDown","input_keyUp","itemSlot","keyUp","sk","control","incDEXr","timeLimited","Date","_addItem","itemData","slotType","_removeItem","emit","update_renderer","findItem","_consume","addItem","$style","enter","socket","charaMove","Packet","capture","SceneCharacter_SceneRemoteCharacter","_remote_control","BaseMoveElem","CharacterMoveElem","stand","_construct_actions","getDefaultAction","$index","eval","_Animation_js__WEBPACK_IMPORTED_MODULE_1__","engine","b2DrawFlags","b2Color","gg","aa","a2","a3","SetRGBA","mixColor","strength","MixColors","colorA","colorB","dr","dg","db","da","MakeStyleString","RED","GREEN","BLUE","b2Draw","m_drawFlags","vertexCount","axis","centers","colors","b2Timer","m_start","now","b2Counter","m_min_count","m_max_count","b2GrowableStack","N","m_stack","element","b2BlockAllocator","b2StackAllocator","verify","b2DynamicTree_b2TreeNode","m_id","b2Collision","child1","child2","b2DynamicTree_b2DynamicTree","m_root","m_freeList","m_path","m_insertionCount","s_stack","Push","GetCount","node","Pop","TestOverlap","IsLeaf","b2Math","s_r","s_v","abs_v","AbsV","s_abs_v","segmentAABB","s_segmentAABB","t_x","t_y","GetCenter","GetExtents","subInput","s_subInput","s_node_id","AllocateNode","r_x","b2Settings","r_y","InsertLeaf","RemoveLeaf","FreeNode","Contains","leaf","leafAABB","area","GetPerimeter","combinedAABB","s_combinedAABB","combinedArea","cost","inheritanceCost","cost1","s_aabb","oldArea","newArea","cost2","sibling","oldParent","newParent","Balance","grandParent","C","balance","F","G","D","E","GetAreaNode","rootArea","height1","ComputeHeightNode","height2","ValidateStructure","ValidateMetrics","freeIndex","maxBalance","GetMaxBalanceNode","Validate","newOrigin","ShiftOriginNode","b2Pair","b2BroadPhase_b2BroadPhase","m_tree","m_moveCount","m_moveBuffer","m_pairCount","m_pairBuffer","BufferMove","UnBufferMove","GetFatAABB","aabbA","aabbB","contactManager","queryProxy","QueryCallback","pair","fatAABB","Query","b2PairLessThan","primaryPair","userDataA","userDataB","AddPair","GetHeight","GetMaxBalance","GetAreaRatio","ShiftOrigin","pair1","pair2","b2_toiTime","b2_toiMaxTime","b2_toiCalls","b2_toiIters","b2_toiMaxIters","b2_toiRootIters","b2_toiMaxRootIters","b2_toi_reset","b2TimeOfImpact_s_xfA","b2TimeOfImpact_s_xfB","b2TimeOfImpact_s_pointA","b2TimeOfImpact_s_pointB","b2TimeOfImpact_s_normal","b2TimeOfImpact_s_axisA","b2TimeOfImpact_s_axisB","b2TimeOfImpact_b2TOIInput","sweepA","sweepB","tMax","b2TOIOutputState","b2SeparationFunctionType","b2TOIOutput","b2TimeOfImpact_b2SeparationFunction","m_sweepA","m_sweepB","m_localPoint","m_axis","m_proxyA","m_proxyB","e_points","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","axisA","axisB","b2TimeOfImpact_s_timer","b2TimeOfImpact_s_cache","b2TimeOfImpact_s_distanceInput","b2TimeOfImpact_s_distanceOutput","b2TimeOfImpact_s_fcn","b2TimeOfImpact_s_indexA","b2TimeOfImpact_s_indexB","b2TimeOfImpact_s_sweepA","b2TimeOfImpact_s_sweepB","b2TimeOfImpact","timer","totalRadius","tolerance","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","done","pushBackIter","s2","FindMinSeparation","e_separated","s1","Evaluate","e_failed","rootIterCount","GetMilliseconds","b2CollideCircles_s_pA","b2CollideCircles_s_pB","b2CollideCircles","circleA","circleB","distSqr","b2CollidePolygonAndCircle_s_c","b2CollidePolygonAndCircle_s_cLocal","b2CollidePolygonAndCircle_s_faceCenter","b2CollidePolygonAndCircle","polygonA","cLocal","MulTXV","normalIndex","separation","normals","m_normals","vertIndex1","vertIndex2","v1","v2","u1","u2","faceCenter","b2EdgeSeparation_s_normal1World","b2EdgeSeparation_s_normal1","b2EdgeSeparation_s_v1","b2EdgeSeparation_s_v2","b2EdgeSeparation","poly1","xf1","edge1","poly2","xf2","vertices1","normals1","count2","vertices2","normal1World","normal1","minDot","dot","b2FindMaxSeparation_s_d","b2FindMaxSeparation_s_dLocal1","b2FindMaxSeparation","edgeIndex","count1","m_centroid","dLocal1","maxDot","prevEdge","sPrev","nextEdge","sNext","bestEdge","bestSeparation","increment","b2FindIncidentEdge_s_normal1","b2CollidePolygons_s_incidentEdge","b2CollidePolygons_s_clipPoints1","b2CollidePolygons_s_clipPoints2","b2CollidePolygons_s_edgeA","b2CollidePolygons_s_edgeB","b2CollidePolygons_s_localTangent","b2CollidePolygons_s_localNormal","b2CollidePolygons_s_planePoint","b2CollidePolygons_s_normal","b2CollidePolygons_s_tangent","b2CollidePolygons_s_ntangent","b2CollidePolygons_s_v11","b2CollidePolygons_s_v12","b2CollidePolygons","polyA","polyB","edgeA","separationA","edgeB","separationB","incidentEdge","normals2","i1","i2","cf0","cf1","b2FindIncidentEdge","iv1","iv2","local_v11","local_v12","localTangent","tangent","v11","v12","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","np","ntangent","cp","b2CollideEdgeAndCircle_s_Q","b2CollideEdgeAndCircle_s_e","b2CollideEdgeAndCircle_s_d","b2CollideEdgeAndCircle_s_e1","b2CollideEdgeAndCircle_s_e2","b2CollideEdgeAndCircle_s_P","b2CollideEdgeAndCircle_s_n","b2CollideEdgeAndCircle_s_id","b2CollideEdgeAndCircle","Q","P","m_hasVertex0","A1","m_vertex0","B1","e1","m_hasVertex3","B2","m_vertex3","A2","e2","den","b2EPAxis","b2CollideEdge_b2TempPolygon","b2CollideEdge_b2EPCollider","m_polygonB","m_xf","m_centroidB","m_v0","m_normal0","m_normal1","m_normal2","m_normal","m_type1","m_type2","m_lowerLimit","m_upperLimit","m_front","polygonB","MulTXX","hasVertex0","hasVertex3","s_edge1","offset1","offset0","offset2","convex1","convex2","edge0","s_edge0","edge2","s_edge2","edgeAxis","ComputeEdgeSeparation","s_edgeAxis","polygonAxis","ComputePolygonSeparation","s_polygonAxis","primaryAxis","ie","s_ie","rf","s_rf","ie0","ie1","sideNormal1","sideNormal2","s_clipPoints1","s_clipPoints2","perp","s_perp","s_n","b2CollideEdgeAndPolygon_s_collider","b2CollideEdgeAndPolygon","Collide","b2CircleShape_b2CircleShape","e_circleShape","TestPoint_s_center","TestPoint_s_d","ComputeDistance_s_center","RayCast_s_position","RayCast_s_s","RayCast_s_r","sigma","ComputeAABB_s_p","radius_sq","l","com","b2PolygonShape_b2PolygonShape","e_polygonShape","Set_s_ps","tempCount","unique","i0","hull","Set_s_hull","ih","Set_s_r","Set_s_v","vertexi1","vertexi2","ComputeCentroid","hx","hy","SetPosition","SetRotationAngle","pLocal","TestPoint_s_pLocal","ComputeDistance_s_pLocal","maxDistance","normalForMaxDistance","ComputeDistance_s_normalForMaxDistance","minDistance","ComputeDistance_s_minDistance","minDistance2","ComputeDistance_s_distance","distance2","RayCast_s_p1","RayCast_s_p2","RayCast_s_d","numerator","denominator","ComputeAABB_s_v","MinV","MaxV","SelfSubXY","SelfAddXY","ComputeMass_s_center","ComputeMass_s_s","SelfMul","ComputeMass_s_e1","ComputeMass_s_e2","triangleArea","MulSV","ex1","ey1","ex2","ey2","Validate_s_e","Validate_s_v","normalL","ComputeSubmergedArea_s_normalL","offsetL","depths","ComputeSubmergedArea_s_depths","diveCount","intoIndex","outoIndex","lastSubmerged","isSubmerged","ComputeSubmergedArea_s_md","intoIndex2","outoIndex2","intoLamdda","outoLamdda","intoVec","ComputeSubmergedArea_s_intoVec","outoVec","ComputeSubmergedArea_s_outoVec","ComputeSubmergedArea_s_center","p3","vs","pRef","ComputeCentroid_s_pRef","ComputeCentroid_s_e1","ComputeCentroid_s_e2","b2EdgeShape_b2EdgeShape","e_edgeShape","ComputeDistance_s_v1","ComputeDistance_s_v2","ComputeDistance_s_d","ComputeDistance_s_s","ds","RayCast_s_e","RayCast_s_q","ComputeAABB_s_v1","ComputeAABB_s_v2","b2ChainShape_b2ChainShape","e_chainShape","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","prevVertex","nextVertex","CreateChain","ComputeDistance_s_edgeShape","GetChildEdge","edgeShape","RayCast_s_edgeShape","b2BodyType","b2JointType","b2LimitState","b2Body_b2BodyDef","linearVelocity","angularVelocity","linearDamping","angularDamping","allowSleep","awake","fixedRotation","gravityScale","b2Body_b2Body","bd","m_islandFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_toiFlag","m_islandIndex","m_xf0","m_sweep","m_angularVelocity","m_force","m_torque","m_prev","m_fixtureList","m_fixtureCount","m_jointList","m_contactList","m_mass","m_invMass","m_I","m_invI","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_controllerList","m_controllerCount","CreateFixtureDef","CreateFixtureShapeDensity","CreateProxies","ResetMassData","m_newFixture","CreateFixtureShapeDensity_s_def","ppF","Destroy","DestroyProxies","SetTransformXY","Synchronize","FindNewContacts","SetTransformVec","wake","torque","oldCenter","SetMassData_s_oldCenter","AddVCrossSV","ResetMassData_s_localCenter","GetMassData","ResetMassData_s_massData","ResetMassData_s_oldCenter","localVector","worldPoint","worldVector","GetLinearVelocityFromWorldPoint","GetWorldPoint","SynchronizeFixtures","ce","ce0","proxyCount","IsActive","type_str","SynchronizeFixtures_s_xf1","jn","joint","m_collideConnected","Advance","b2Joint_b2Jacobian","linear","angularA","angularB","b2JointEdge","b2JointDef","e_unknownJoint","collideConnected","b2Joint","m_index","m_edgeA","m_edgeB","m_bodyA","m_bodyB","inv_dt","b2DistanceJoint_b2DistanceJointDef","e_distanceJoint","localAnchorA","localAnchorB","b2","anchor1","anchor2","b2DistanceJoint_b2DistanceJoint","m_frequencyHz","m_dampingRatio","m_bias","m_localAnchorA","m_localAnchorB","m_gamma","m_impulse","m_length","m_u","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_qA","m_qB","m_lalcA","m_lalcB","hz","positions","aA","vA","velocities","aB","vB","qA","qB","crAu","crBu","invMass","omega","warmStarting","dtRatio","InitVelocityConstraints_s_P","vpA","SolveVelocityConstraints_s_vpA","vpB","SolveVelocityConstraints_s_vpB","Cdot","SolveVelocityConstraints_s_P","SolvePositionConstraints_s_P","b2AreaJoint_b2AreaJointDef","e_areaJoint","b2AreaJoint_b2AreaJoint","m_bodies","m_targetLengths","m_targetArea","m_joints","m_deltas","m_delta","djd","body_c","next_c","SetFrequency","SetDampingRatio","prev_c","body_v","dotMassSum","crossMassSum","lambda","perimeter","dist","toExtrude","next_i","norm_sq","b2FrictionJoint_b2FrictionJointDef","e_frictionJoint","maxTorque","bA","bB","b2FrictionJoint_b2FrictionJoint","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","m_K","mA","mB","iA","iB","K","oldImpulse","maxImpulse","Cdot_v2","SolveVelocityConstraints_s_Cdot_v2","impulseV","MulMV","SolveVelocityConstraints_s_impulseV","oldImpulseV","SolveVelocityConstraints_s_oldImpulseV","b2GearJoint_b2GearJointDef","e_gearJoint","joint1","joint2","b2GearJoint_b2GearJoint","coordinateA","coordinateB","m_joint1","m_joint2","m_typeA","m_typeB","m_bodyC","m_bodyD","m_localAnchorC","m_localAnchorD","m_localAxisC","m_localAxisD","m_referenceAngleA","m_referenceAngleB","m_constant","m_ratio","m_indexC","m_indexD","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","m_qC","m_qD","m_lalcC","m_lalcD","GetBodyA","GetBodyB","xfC","aC","e_revoluteJoint","revolute","m_referenceAngle","prismatic","m_localXAxisA","pC","xfD","aD","pD","vC","wC","vD","wD","qC","qD","InitVelocityConstraints_s_u","rC","InitVelocityConstraints_s_rC","InitVelocityConstraints_s_rA","rD","InitVelocityConstraints_s_rD","InitVelocityConstraints_s_rB","cC","cD","JvAC","JvBD","JwA","JwB","JwC","JwD","SolvePositionConstraints_s_u","SolvePositionConstraints_s_rC","SolvePositionConstraints_s_rA","SolvePositionConstraints_s_rD","SolvePositionConstraints_s_rB","index1","index2","b2MotorJoint_b2MotorJointDef","e_motorJoint","linearOffset","angularOffset","correctionFactor","angleA","angleB","b2MotorJoint_b2MotorJoint","m_linearOffset","m_angularOffset","m_correctionFactor","m_linearError","m_angularError","IsEqualToV","inv_h","CrossSV","impulse_v2","SolveVelocityConstraints_s_impulse_v2","oldImpulse_v2","SolveVelocityConstraints_s_oldImpulse_v2","b2MouseJoint_b2MouseJointDef","e_mouseJoint","b2MouseJoint_b2MouseJoint","m_beta","m_C","IsAwake","SolveVelocityConstraints_s_Cdot","SolveVelocityConstraints_s_impulse","SolveVelocityConstraints_s_oldImpulse","b2PrismaticJoint_b2PrismaticJointDef","e_prismaticJoint","motorSpeed","GetLocalVector","b2PrismaticJoint_b2PrismaticJoint","m_localYAxisA","m_motorImpulse","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_motorSpeed","m_enableLimit","m_enableMotor","m_limitState","e_inactiveLimit","m_perp","m_s1","m_s2","m_a1","m_a2","m_K3","m_K2","m_motorMass","InitVelocityConstraints_s_d","jointTranslation","e_equalLimits","e_atLowerLimit","e_atUpperLimit","LA","LB","Cdot1_x","Cdot1_y","Cdot2","f1","SolveVelocityConstraints_s_f1","df3","Solve33","SolveVelocityConstraints_s_df3","f2r","Solve22","SolveVelocityConstraints_s_f2r","df2","SolveVelocityConstraints_s_df2","SolvePositionConstraints_s_d","SolvePositionConstraints_s_impulse","C1_x","C1_y","linearError","angularError","C2","k11","k12","k13","k22","k23","k33","K2","impulse1","Solve","SolvePositionConstraints_s_impulse1","GetJointTranslation_s_pA","GetJointTranslation_s_pB","GetJointTranslation_s_d","GetWorldVector","GetJointTranslation_s_axis","b2PulleyJoint_b2PulleyJointDef","e_pulleyJoint","groundAnchorA","groundAnchorB","lengthA","lengthB","groundA","groundB","anchorA","anchorB","b2PulleyJoint_b2PulleyJoint","m_groundAnchorA","m_groundAnchorB","m_lengthA","m_lengthB","m_uA","m_uB","ruA","ruB","PA","InitVelocityConstraints_s_PA","PB","InitVelocityConstraints_s_PB","SolveVelocityConstraints_s_PA","SolveVelocityConstraints_s_PB","uA","uB","SolvePositionConstraints_s_PA","SolvePositionConstraints_s_PB","GetCurrentLengthA_s_p","GetCurrentLengthB_s_p","b2RevoluteJoint_b2RevoluteJointDef","b2RevoluteJoint_b2RevoluteJoint","m_maxMotorTorque","m_lowerAngle","m_upperAngle","jointAngle","Cdot1","SolveVelocityConstraints_s_Cdot1","impulse_v3","SolveVelocityConstraints_s_impulse_v3","rhs_x","rhs_y","reduced_v2","SolveVelocityConstraints_s_reduced_v2","positionError","limitImpulse","C_v2","SolvePositionConstraints_s_C_v2","b2RopeJoint_b2RopeJointDef","e_ropeJoint","maxLength","b2RopeJoint_b2RopeJoint","m_maxLength","m_state","crA","crB","b2WeldJoint_b2WeldJointDef","e_weldJoint","b2WeldJoint_b2WeldJoint","GetInverse22","invM","GetSymInverse33","impulse2","MulM33XY","SolveVelocityConstraints_s_impulse1","MulM33XYZ","C1","SolvePositionConstraints_s_C1","b2WheelJoint_b2WheelJointDef","e_wheelJoint","b2WheelJoint_b2WheelJoint","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","m_springMass","dc","ay","sAy","sBy","GetPrismaticJointTranslation","GetRevoluteJointSpeed","b2JointFactory_b2JointFactory","allocator","b2MixFriction","friction1","friction2","b2MixRestitution","restitution1","restitution2","b2ContactEdge","b2Contact_b2Contact","m_touchingFlag","m_enabledFlag","m_filterFlag","m_bulletHitFlag","m_nodeA","m_nodeB","m_manifold","m_toiCount","m_toi","m_tangentSpeed","m_oldManifold","worldManifold","GetShape","listener","tManifold","touching","wasTouching","sensorA","IsSensor","sensorB","mp2","id2","mp1","BeginContact","EndContact","PreSolve","ComputeTOI_s_input","ComputeTOI_s_output","b2CircleContact_b2CircleContact","b2PolygonContact_b2PolygonContact","b2PolygonAndCircleContact_b2PolygonAndCircleContact","b2EdgeAndCircleContact_b2EdgeAndCircleContact","b2EdgeAndPolygonContact_b2EdgeAndPolygonContact","b2ChainAndCircleContact_b2ChainAndCircleContact","Evaluate_s_edge","b2ChainAndPolygonContact_b2ChainAndPolygonContact","b2ContactRegister","pool","createFcn","destroyFcn","primary","b2ContactFactory_b2ContactFactory","m_allocator","InitializeRegisters","type1","type2","poolCreateFcn","poolDestroyFcn","m_registers","e_shapeTypeCount","AddType","b2DestructionListener","system","b2WorldCallbacks_b2ContactFilter","filter1","filter2","b2_defaultFilter","b2WorldCallbacks_b2ContactImpulse","normalImpulses","tangentImpulses","b2_defaultListener","b2QueryCallback","b2RayCastCallback","b2ContactManager_b2ContactManager","m_contactCount","m_contactFilter","m_contactListener","m_contactFactory","fA","fB","GetChildIndexA","GetChildIndexB","UpdatePairs","IsTouching","cNuke","activeA","activeB","Update","b2Profile","solve","solveInit","solveVelocity","solvePosition","broadphase","solveTOI","b2TimeStep","velocityIterations","positionIterations","particleIterations","b2TimeStep_b2Position","b2TimeStep_b2Velocity","b2SolverData","b2ContactSolver_b2VelocityConstraintPoint","normalMass","tangentMass","velocityBias","b2ContactSolver_b2ContactVelocityConstraint","invMassA","invMassB","invIA","invIB","tangentSpeed","contactIndex","b2ContactSolver_b2ContactPositionConstraint","localPoints","localCenterA","localCenterB","b2ContactSolver_b2ContactSolverDef","contacts","b2ContactSolver_b2PositionSolverManifold","pc","b2ContactSolver_b2ContactSolver","m_step","m_positions","m_velocities","m_positionConstraints","m_velocityConstraints","m_contacts","new_length","GetManifold","vc","vcp","InitializeVelocityConstraints_s_xfA","InitializeVelocityConstraints_s_xfB","InitializeVelocityConstraints_s_worldManifold","rnA","rnB","kNormal","rtA","rtB","kTangent","vRel","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","WarmStart_s_P","dv","SolveVelocityConstraints_s_dv","dv1","SolveVelocityConstraints_s_dv1","dv2","SolveVelocityConstraints_s_dv2","SolveVelocityConstraints_s_a","SolveVelocityConstraints_s_b","SolveVelocityConstraints_s_x","SolveVelocityConstraints_s_d","P1","SolveVelocityConstraints_s_P1","P2","SolveVelocityConstraints_s_P2","P1P2","SolveVelocityConstraints_s_P1P2","vt","maxFriction","newImpulse","vn","cp1","cp2","vn1","vn2","SolvePositionConstraints_s_xfA","SolvePositionConstraints_s_xfB","psm","SolvePositionConstraints_s_psm","minSeparation","toiIndexA","toiIndexB","SolveTOIPositionConstraints_s_xfA","SolveTOIPositionConstraints_s_xfB","SolveTOIPositionConstraints_s_psm","SolveTOIPositionConstraints_s_rA","SolveTOIPositionConstraints_s_rB","SolveTOIPositionConstraints_s_P","b2Island_b2Island","m_listener","m_bodyCount","m_jointCount","m_bodyCapacity","m_contactCapacity","m_jointCapacity","bodyCapacity","contactCapacity","jointCapacity","profile","s_timer","solverData","s_solverData","contactSolverDef","s_contactSolverDef","contactSolver","s_contactSolver","InitializeVelocityConstraints","WarmStart","InitVelocityConstraints","SolveVelocityConstraints","StoreImpulses","s_translation","positionSolved","contactsOkay","SolvePositionConstraints","jointsOkay","jointOkay","SynchronizeTransform","Report","minSleepTime","linTolSqr","angTolSqr","subStep","SolveTOIPositionConstraints","constraints","s_impulse","PostSolve","b2ParticleFlag","b2ParticleGroupFlag","b2Particle_b2ParticleDef","lifetime","b2CalculateParticleIterations","timeStep","b2Particle_b2ParticleHandle","b2ParticleGroup_b2ParticleGroupDef","groupFlags","shapes","shapeCount","stride","positionData","b2ParticleGroup_b2ParticleGroup","m_system","m_groupFlags","m_strength","m_timestamp","m_inertia","m_center","m_transform","m_flagsBuffer","b2_particleGroupInternalMask","SetGroupFlags","UpdateStatistics","GetLinearVelocityFromWorldPoint_s_t0","ApplyForce","callDestructionListener","DestroyParticle","GetParticleMass","m_velocityBuffer","inv_mass","b2StackQueue_b2StackQueue","capacity","m_back","m_capacity","b2VoronoiDiagram_b2VoronoiDiagram","generatorCapacity","m_generatorBuffer","m_generatorCapacity","m_generatorCount","m_countX","m_countY","m_diagram","Generator","tag","necessary","margin","inverseRadius","necessary_count","queue","Task","Empty","Front","m_x","m_y","m_i","m_generator","ax","bx","std_iter_swap","array","default_compare","std_sort","len","cmp","pivot","std_stable_sort","std_remove_if","predicate","std_lower_bound","last","std_upper_bound","std_rotate","n_first","b2VoronoiDiagram","b2ParticleSystem_b2GrowableBuffer","Grow","newCapacity","Reserve","newEnd","newCount","pred","std_unique","b2ParticleSystem_b2FixtureParticleQueryCallback","childCount","GetAABB","enumerator","GetInsideBoundsEnumerator","GetNext","ReportFixtureAndParticle","b2ParticleSystem_b2ParticleContact","weight","rhs","IsEqual","b2ParticleSystem_b2ParticleBodyContact","b2ParticlePair","b2ParticleSystem_b2ParticleTriad","indexC","pa","pb","ka","kb","kc","b2ParticleSystemDef","strictContactCheck","maxCount","pressureStrength","dampingStrength","elasticStrength","springStrength","viscousStrength","surfaceTensionPressureStrength","surfaceTensionNormalStrength","repulsiveStrength","powderStrength","ejectionStrength","staticPressureStrength","staticPressureRelaxation","staticPressureIterations","colorMixingStrength","destroyByAge","lifetimeGranularity","b2ParticleSystem_b2ParticleSystem","m_paused","m_allParticleFlags","m_needsUpdateAllParticleFlags","m_allGroupFlags","m_needsUpdateAllGroupFlags","m_hasForce","m_iterationIndex","m_inverseDensity","m_particleDiameter","m_inverseDiameter","m_squaredDiameter","m_internalAllocatedCapacity","m_handleIndexBuffer","UserOverridableBuffer","m_forceBuffer","m_staticPressureBuffer","m_accumulationBuffer","m_accumulation2Buffer","m_depthBuffer","m_groupBuffer","m_userDataBuffer","m_stuckThreshold","m_lastBodyContactStepBuffer","m_bodyContactCountBuffer","m_consecutiveContactStepsBuffer","m_stuckParticleBuffer","m_proxyBuffer","Proxy","m_contactBuffer","m_bodyContactBuffer","m_triadBuffer","m_expirationTimeBuffer","m_indexByExpirationTimeBuffer","m_timeElapsed","m_expirationTimeBufferRequiresSorting","m_groupCount","m_def","SetStrictContactCheck","SetDensity","SetMaxParticleCount","SetDestructionByAge","yOffset","yShift","xScale","xOffset","xShift","DestroyParticleGroup","FreeUserOverridableBuffer","FreeBuffer","ReallocateInternalAllocatedBuffers","DestroyOldestParticle","SolveZombie","IsZero","RequestBuffer","Append","finiteLifetime","SetParticleLifetime","ExpirationTimeToLifetime","GetQuantizedTimeElapsed","RotateBuffer","SetParticleFlags","handle","SetIndex","b2_zombieParticle","b2_destructionListenerParticle","oldestFiniteLifetimeParticle","oldestInfiniteLifetimeParticle","DestroyParticlesInShape_s_aabb","DestroyParticlesInShapeCallback","Destroyed","groupDef","s_transform","CreateParticleGroup_s_transform","SetPositionAngle","firstIndex","CreateParticlesWithShapeForGroup","CreateParticlesWithShapesForGroup","CreateParticleForGroup","ConnectionFilter","UpdateContacts","UpdatePairsAndTriads","JoinParticleGroups","groupA","groupB","JoinParticleGroupsFilter","nodeBuffer","ParticleListNode","InitializeParticleLists","MergeParticleListsInContact","survivingList","FindLongestParticleList","MergeZombieParticleListNodes","CreateParticleGroupsFromParticleList","UpdatePairsAndTriadsWithParticleList","paused","damping","newFlags","b2_tensileParticle","buffer","SetUserOverridableBuffer","steps","Data","ComputeCollisionEnergy_s_v","vel_data","sum_v2","enabled","ValidateParticleIndex","initializeExpirationTimes","quantizedLifetime","newExpirationTime","GetExpirationTimeBuffer","expirationTime","GetParticleLifetime","totalMass","velocityDelta","IsSignificantForce","ForceCanBeApplied","PrepareForceBuffer","distributedForce","endProxy","firstProxy","computeTag","CompareProxyTag","lastProxy","CompareTagProxy","pos_data","ReportParticle","QueryShapeAABB_s_aabb","slop","QueryPointAABB_s_aabb","point1","point2","RayCast_s_aabb","s_p","RayCast_s_p","RayCast_s_v","RayCast_s_n","s_point","RayCast_s_point","determinant","sqrtDeterminant","userSuppliedCapacity","oldBuffer","oldCapacity","newBuffer","deferred","ReallocateBuffer3","ReallocateBuffer5","ReallocateBuffer4","LimitCapacity","ReallocateHandleBuffers","stuck","particleDef","CreateParticle","s_edge","CreateParticlesStrokeShapeForGroup_s_edge","s_d","CreateParticlesStrokeShapeForGroup_s_d","CreateParticlesStrokeShapeForGroup_s_p","GetParticleStride","positionOnEdge","edgeLength","CreateParticlesFillShapeForGroup_s_aabb","CreateParticlesFillShapeForGroup_s_p","identity","CreateParticlesStrokeShapeForGroup","CreateParticlesFillShapeForGroup","compositeShape","CompositeShape","oldIndex","newIndex","m_destructionListener","SayGoodbyeParticleGroup","b2_wallParticle","b2_springParticle","GetGroupFlags","b2_rigidParticleGroup","s_dab","UpdatePairsAndTriads_s_dab","s_dbc","UpdatePairsAndTriads_s_dbc","s_dca","UpdatePairsAndTriads_s_dca","particleFlags","k_pairFlags","af","bf","IsNecessary","ParticleCanBeConnected","ShouldCreatePair","ComparePairIndices","Unique","MatchPairIndices","k_triadFlags","diagram","AddGenerator","Generate","ShouldCreateTriad","dab","dbc","dca","maxDistanceSquared","groupC","triad","midPoint_x","midPoint_y","GetNodes","CompareTriadIndices","MatchTriadIndices","ReactiveFilter","b2_reactiveParticle","diffA","diffB","bufferIndex","ContainsParticle","listA","listB","_tmp","MergeParticleLists","nextB","MergeParticleListAndNode","newGroup","CloneParticle","contactGroups","contactGroupsCount","b2_particleGroupNeedsUpdateDepth","groupsToUpdate","groupsToUpdateCount","iterationCount","ap0","bp0","ap1","bp1","lowerTag","upperTag","InsideBoundsEnumerator","AddContact_s_d","distBtParticlesSq","invD","rightTag","computeRelativeTag","AddContact","bottomLeftTag","bottomRightTag","FindContacts_Reference","proxies","inv_diam","UpdateProxies_Reference","CompareProxyProxy","GetParticleContactFilter","RemoveIf","b2_particleContactFilterParticle","ShouldCollideParticleParticle","particlePairs","GetParticleContactListener","contactListener","itemIndex","Invalidate","BeginContactParticleParticle","exceptZombie","UpdateProxies","SortProxies","b2ParticlePairSet","NotifyContactListenerPreContact","FindContacts","FilterContacts","NotifyContactListenerPostContact","b2ParticleContactIsZombie","fixtureSet","GetFixtureContactListener","BeginContactFixtureParticle","UpdateBodyContacts_s_aabb","FixtureParticleSet","NotifyBodyContactListenerPreContact","SetCount","UpdateBodyContactsCallback","GetFixtureContactFilter","RemoveSpuriousBodyContacts","NotifyBodyContactListenerPostContact","s_subStep","Solve_s_subStep","SolveLifetimes","UpdateAllParticleFlags","UpdateAllGroupFlags","UpdateBodyContacts","ComputeWeight","ComputeDepth","UpdatePairsAndTriadsWithReactiveParticles","SolveForce","b2_viscousParticle","SolveViscous","b2_repulsiveParticle","SolveRepulsive","b2_powderParticle","SolvePowder","SolveTensile","b2_solidParticleGroup","SolveSolid","SolveColorMixing","SolveGravity","b2_staticPressureParticle","SolveStaticPressure","SolvePressure","SolveDamping","k_extraDampingFlags","SolveExtraDamping","SolveElastic","SolveSpring","LimitVelocity","SolveRigidDamping","b2_barrierParticle","SolveBarrier","SolveCollision","SolveRigid","SolveWall","SolveCollision_s_aabb","p2_x","p2_y","SolveCollisionCallback","criticalVelocitySquared","GetCriticalVelocitySquared","s_gravity","SolveGravity_s_gravity","SolveBarrier_s_aabb","s_va","SolveBarrier_s_va","s_vb","SolveBarrier_s_vb","s_pba","SolveBarrier_s_pba","s_vba","SolveBarrier_s_vba","s_vc","SolveBarrier_s_vc","s_pca","SolveBarrier_s_pca","s_vca","SolveBarrier_s_vca","s_qba","SolveBarrier_s_qba","s_qca","SolveBarrier_s_qca","s_dv","SolveBarrier_s_dv","s_f","SolveBarrier_s_f","k_barrierWallFlags","aGroup","bGroup","vb","pba","vba","cGroup","pca","vca","e0","qba","qca","sqrtDet","IsRigidGroup","inertia","GetInertia","ParticleApplyForce","criticalPressure","GetCriticalPressure","pressurePerWeight","maxPressure","relaxation","SolvePressure_s_f","k_noPressureFlags","velocityPerPressure","GetParticleInvMass","SolveDamping_s_v","SolveDamping_s_f","quadraticDamping","GetCriticalVelocity","SolveRigidDamping_s_t0","SolveRigidDamping_s_t1","SolveRigidDamping_s_p","SolveRigidDamping_s_v","invInertiaA","tangentDistanceA","invInertiaB","tangentDistanceB","InitDampingParameterWithRigidGroupOrParticle","InitDampingParameter","GetLocalCenter","ComputeDampingImpulse","ApplyDamping","aRigid","bRigid","SolveExtraDamping_s_v","SolveExtraDamping_s_f","s_position","SolveRigid_s_position","s_rotation","SolveRigid_s_rotation","SolveRigid_s_transform","s_velocityTransform","SolveRigid_s_velocityTransform","SetPositionRotation","MulXX","velocityTransform","s_pa","SolveElastic_s_pa","s_pb","SolveElastic_s_pb","s_pc","SolveElastic_s_pc","SolveElastic_s_r","SolveElastic_s_t0","oa","oc","invR","SolveSpring_s_pa","SolveSpring_s_pb","SolveSpring_s_d","SolveSpring_s_f","r0","r1","s_weightedNormal","SolveTensile_s_weightedNormal","s_s","SolveTensile_s_s","SolveTensile_s_f","weightedNormal","criticalVelocity","normalStrength","maxVelocityVariation","SolveViscous_s_v","SolveViscous_s_f","SolveRepulsive_s_f","SolvePowder_s_f","minWeight","SolveSolid_s_f","velocityPerForce","colorMixing","newIndices","allParticleFlags","destructionListener","SayGoodbyeParticle","Test","writeOffset","readOffset","modified","b2_particleGroupCanBeEmpty","b2_particleGroupWillBeDestroyed","LifetimeToExpirationTime","quantizedTimeElapsed","expirationTimes","expirationTimeIndices","particleIndexA","particleIndexB","expirationTimeA","expirationTimeB","infiniteExpirationTimeA","particleIndex","mid","end","GetIndex","indexByExpirationTime","inverseStride","b2_fixtureContactFilterParticle","b2_fixtureContactListenerParticle","b2_particleContactListenerParticle","newData","oldFlags","lhs","BodyContactCompare","RemoveSpuriousBodyContacts_s_n","s_pos","RemoveSpuriousBodyContacts_s_pos","s_normal","RemoveSpuriousBodyContacts_s_normal","currentContacts","invInertia","tangentDistance","isRigidGroup","normalVelocity","xTruncBits","yTruncBits","tagBits","yMask","xMask","b2ParticleSystem","m_xLower","m_xUpper","m_yLower","m_yUpper","m_first","m_last","xTag","FixedSetAllocator","itemSize","FixtureParticle","second","bodyContactBuffer","flagsBuffer","ParticlePair","particleA","particleB","contactBuffer","m_callDestructionListener","m_destroyed","particleSystem","threshold","m_threshold","m_shapeCount","m_shapes","s_subaabb","subaabb","Combine1","GetFlagsBuffer","ShouldCollideFixtureParticle","ReportFixtureAndParticle_s_n","s_rp","ReportFixtureAndParticle_s_rp","ap","bp","bm","bI","invBm","invBI","invAm","rp","rpn","DetectStuckParticle","s_p1","ReportFixtureAndParticle_s_p1","s_output","ReportFixtureAndParticle_s_output","s_input","ReportFixtureAndParticle_s_input","ReportFixtureAndParticle_s_p","ReportFixtureAndParticle_s_v","ReportFixtureAndParticle_s_f","av","b2World_b2World","m_clearForces","m_bodyList","m_particleSystemList","m_gravity","m_allowSleep","m_inv_dt0","m_warmStarting","m_continuousPhysics","m_subStepping","m_stepComplete","m_profile","m_island","je","je0","SayGoodbyeJoint","coe","coe0","nextController","RemoveBody","f0","SayGoodbyeFixture","smallestRadius","GetParticleSystemList","GetRadius","GetSmallestRadius","CalculateReasonableParticleIterations","stepTimer","Step_s_stepTimer","Step_s_step","Step_s_timer","SolveTOI","ClearForces","positionBuffer","colorBuffer","GetColorBuffer","DrawParticles","GetFlags","DrawDebugData_s_color","SetRGB","e_shapeBit","PushTransform","GetFixtureList","DrawShape","PopTransform","e_particleBit","DrawParticleSystem","e_jointBit","DrawJoint","e_aabbBit","DrawDebugData_s_vs","DrawPolygon","e_centerOfMassBit","DrawDebugData_s_xf","DrawTransform","e_controllerBit","Draw","ReportFixture","ShouldQueryParticleSystem","QueryShape_s_aabb","QueryPoint_s_aabb","RayCast_s_input","fixture_proxy","RayCast_s_output","min_fraction","GetProxyCount","GetTreeHeight","GetTreeBalance","GetTreeQuality","GetAnchorA","DrawJoint_s_p1","GetAnchorB","DrawJoint_s_p2","DrawJoint_s_color","DrawSegment","pulley","GetGroundAnchorA","GetGroundAnchorB","DrawSolidCircle","DrawCircle","poly","DrawSolidPolygon","island","seed","Clear","stackCount","AddBody","IsEnabled","AddJoint","minContact","minAlpha","collideA","IsBullet","collideB","SolveTOI_s_toi_input","SolveTOI_s_toi_output","backup1","SolveTOI_s_backup1","backup2","SolveTOI_s_backup2","backup","SolveTOI_s_backup","SolveTOI_s_subStep","b2Rope_b2RopeDef","masses","k2","k3","b2Rope_b2Rope","m_ps","m_p0s","m_vs","m_ims","m_Ls","m_as","m_damping","m_k2","m_k3","count3","d1","d2","exp","SolveC2","SolveC3","L","im1","im2","m1","s_d1","s_d2","L1sqr","L2sqr","Jd1","SelfSkew","s_Jd1","Jd2","s_Jd2","J1","s_J1","J2","s_J2","J3","Foothold_FootholdChain","map_footholds","FootholdType","Foothold_FootholdSingle","Foothold_FootholdChainChild","Physics","m_angle","next_a","next_a_deg","$showDebugInfo","body_xf","next_fh","prev_fh","is_empty","is_first","is_last","_is_horizontal_floor","x3","y3","piece","ta","$_text_pos","strokeText","GetVertex1","GetVertex2","MulVS","Foothold","CREATE_SOLID_FOOTHOLD","CREATE_SOLID_AND_EDGE_FOOTHOLD","USE_GHOST_VERTEX","FOOTHOLD_IS_BULLET","Ground_Ground","rectChains","segment","chains","chainId","_create_foothold","_create_chain","_chain","CreateLoop","Filter","endContact_bodyBase_oneway","preSolveGround_bodyBase_oneway","is_solid","create","nx1","ny1","nx2","ny2","hlen","numPoints","playerBody","getFootholdFromContact","$fh","player_pos","relative_position","GetWorldManifold","cpoint","pointVelPlatform","pointVelOther","relativeVel","_which_foothold_contact","normal_contact","SetFriction","foot","beginContact_bodyBase_oneway","lineJoin","lineCap","isShow","isHide","ActionAnimationFrameData","ActionAnimation","Adef","fdat","total","aadef","actName","_fdef","CharacterActionAnimationDefinition","_loadedItem","$loadedItem","ItemBase","__v","isItem","loadString","ItemEquip","$test_proto_prop","$createItem","_itemType","getDataPath","itemPrototype","ItemSlot","_ui_Basic_KeySlotData_js__WEBPACK_IMPORTED_MODULE_2__","itemSN","SN","iSlot","CharacterBaseStat","mp","mhp","mmp","str","luk","dex","int","symbol_onJobChange","$RemotePlayerData","equips_code","CharacterStat","_$sceneChara","symbolStatJob","cbfunc","_getTotalAttack","getNextExp","$PlayerData","mapId","fileName","blob","Blob","createObjectURL","revokeObjectURL","selection","createTextRange","moveToElementText","select","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","$temp","execCommand","reset_mouse","mouse_um","mouse_ur","components_ui_draggablevue_type_script_lang_js_","description","mouse_x0","mouse_y0","origin_x","origin_y","old_width","old_height","handle_mousemove","handle_mouseup","which","clientX","clientY","pw","parentElement","offsetWidth","ph","offsetHeight","ox","offsetLeft","offsetTop","ow","oh","mouseup","contains","get_relative_position","addEventListener","removeEventListener","ori_pos","_calc_origin_pos","position.x","position.y","component","PBullet_PBullet","bulletRenderer","bulletMoveFunc","bullet_default_preSolve","linearVelocityX","linearVelocityY","targetPlayer","targetChara","addAttack","destroy","Skill_SkillEffectAnimation","targetRenderer","update_p","update_r","render_p","render_r","SkillHitAnimation","EffectManager","_effects","$EffectManager","Skill_SkillAnimationBase","actType","_owner","_crr","_actani","_$is_end","is_launch","_applyDefaultAction","_owner_player","_applyAction","jobID","exec","_decide_type","_init","skill_anim","proto","effName","_effect_names","arrNd_texture","arrNd","arr2d","hit","tex","arr2d_texture","arr1d","arr1d_texture","inputKey","_addEffect","common","attackCount","effectName","launch","$BULLET_SPEED","isBullet","AddEffect","rapidAttack","_SkillAnimation_RapidAttack","casterMove","avaliableInJumpingState","_SkillAnimation_N_Jump","_SkillAnimation_Default","_default_update","_state_func","_prepare","current_effect","tick","fadeTotalTime","getTotalTime","_keydown","_keydownend","$FIRE_BULLET_T","$FIRE_BULLET_T2","createBullet","jump_max_count","$NJmpX","$NJmpY","_addDefaultEffect","jump2","Skill_SceneSkill","loaded_skill","__loaded_skill","promise","_assign","$SceneSkill","setFlags","bit","DebugDraw","axis_length","viewRotation","flag_drawShape","flag_drawJoint","flag_drawAabb","flag_drawCenterOfMass","flag_drawController","flag_drawParticle","flag_drawAll","e_all","e_none","flag_drawPair","e_pairBit","flagNames","closePath","arc","cs","DrawPoint","hsize","DrawString","format","var_args","string","goog","s_color","DrawStringWorld","vr","cc","s_cc","m_canvas","DrawAABB","strokeRect","MapLadderRope","uf","LadderRope","hwidth","calcHalfWidth","hheight","_Filter_js__WEBPACK_IMPORTED_MODULE_3__","leaveLadder","MapLadderRopeLoader","ladderRopes","idx","_$index","$MobAction_Move_Priority","$MobAction_Jump_Priority","MobActionController","_ani","pMob","onEnd","MobAction_Stand","_MobAction_Move","MobAction_MoveLeft","isValid","MobAction_MoveRight","MobAction_Jump","PMob","_PPlayer_js__WEBPACK_IMPORTED_MODULE_0__","attackTarget","_enable_rx","isFlyMob","activityRegion","$debugControl","param","act_map","_registerAction","hasBodyDamage","bodyAttack","_speed","_pushed","_fs","_category","_appleMobCategory","__setAsWalkOnlyMob","__setAsJumpDropMob","fhId","isCanMove","_control_basic","isAllowJump","limit_action","cbpos","dx1","fwpos","MobSkillBallDefinition","createDelay","collisionDelay","moveSpeed","_speed_x","_speed_y","MobSkillBallBase","_SceneObject_js__WEBPACK_IMPORTED_MODULE_2__","ballDef","animations","_BallDefinition","E_BEFORE_CREATE","E_CREATED","E_BEGIN_COLLISION","E_ENG_COLLISION","pWorld","begin_collision","end_collision","$stop","MobSkillBase","_anima_name_list","anima","locals","zIndices","components_ui_dialogvue_type_script_lang_js_","content_style","header_style","updateDialogPosition","contents","$children","compute_width","compute_height","__set_z_index","parseFloat","FairyDustBallDefinition","_MobSkillBase_js__WEBPACK_IMPORTED_MODULE_3__","FairyDustBall","FairyDustBallHit","randInt","nextInt","ball","SceneObjectMgr","addToScene","_FairyDust","MOB_SKILL_RAW","LoginPacket","ChatPacket","CharacterPacket","Drawable","Layer","objects","loaded_skin","DamageNumber_DamageNumberTextures","addedCanvasH","font_adv","draw_axis","Miss","guard","shot","DamageNumberRenderer","rand_y","max_display_digit","max_rand_y","_$promise","_default_base_path","_skin_base_path","sPath","loaded","_copy","str_damage","text_width","_display_axis","log10","MAX_SAFE_INTEGER","DamageNumber_DamageNumber","damagePair","move_y","time_tt","recursive","$noRender","move_avy","time_d1","move_avy2","time_d2","DamageNumberTest","damageNumberLayer","$damageNumberLayer","$DamageNumber","$DamageNumberTest","$DamageNumberRenderer","FlowerTrapBallDefinition","FlowerTrapBall","patterns","pattern","pats","pat","_invoke","nextBoolean","$RequestPacket_SelectChara","charaId","$ResponsePacket_SelectChara","charaData","remoteCharacters","$Packet_CharacterChat","$Packet_CharacterMove","getTime","phy","_Client_PMovePath__WEBPACK_IMPORTED_MODULE_0__","vel"],"mappings":"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","file":"11.js","sourcesContent":["﻿\r\nimport { Vec2 } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\n\r\n\r\nwindow.m_draw_animation_texture_info = false;\r\n\r\nclass IAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tthis._raw = raw;\r\n\t\tthis._url = url;\r\n\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** elapsed time */\r\n\t\tthis.delta = 0;\r\n\r\n\t\t/** @type {Sprite[]} */\r\n\t\tthis.textures = [];\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_loop = true;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_end = false;\r\n\r\n\t\tif (!this._url) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.textures.reduce((pv, cv) => pv + cv.delay, 0);\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet newAnim = new this.constructor(this._raw, this._url);\r\n\t\tnewAnim.textures = this.textures;\r\n\t\treturn newAnim;\r\n\t}\r\n\t\r\n\tload() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** reset frame */\r\n\t_resetFrame() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t}\r\n\r\n\t/** restart */\r\n\treset() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.is_end = false;\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * remove at nextStep\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.is_loop = false;//防止重複\r\n\t\tthis.is_end = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * process animation\r\n */\r\nexport class AnimationBase extends IAnimation {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {Promise<Sprite>}\r\n\t */\r\n\tasync load() {\r\n\t\t//if (!this._raw) {\r\n\t\t//\tthis._raw = await $get.data(this._url);\r\n\t\t//}\r\n\r\n\t\tfor (let i = 0; i in this._raw; ++i) {\r\n\t\t\tlet url = this._url + \"/\" + i;\r\n\r\n\t\t\tlet texture = new Sprite(this._raw[i]);\r\n\r\n\t\t\ttexture._url = url;\r\n\r\n\t\t\tthis.textures[i] = texture;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.textures[0]) {\r\n\t\t\tif (!this.textures[0].isLoaded()) {\r\n\t\t\t\tthis.textures[0].__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * aways loop\r\n\t * @param {number} stamp\r\n\t */\r\n\t_update(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame % fc;\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = this.frame + 1;\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tif (this.is_loop) {\r\n\t\t\t\t\t\tthis.reset();//make loop\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//防止錯誤\r\n\t\t\t\t\t\tthis.frame = fc - 1;//this._resetFrame();\r\n\r\n\t\t\t\t\t\tthis.is_end = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, x, y, angle, flip) {\r\n\t\tlet texture = this.texture;\r\n\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\treturn this.textures[this.frame];\r\n\t}\r\n}\r\n\r\n/**\r\n * animation rendering\r\n */\r\nexport class Animation extends AnimationBase {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tthis.draw = this._draw_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * draw and load next frame\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\t_draw_and_preload(renderer, x, y, angle, flip) {\r\n\t\tlet frame;\r\n\r\n\t\t// if current frame is not loaded then render prev frame\r\n\t\tfor (frame = this.frame; frame >= 0; --frame) {\r\n\t\t\tlet texture = this.textures[frame];\r\n\r\n\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//preload next frame\r\n\t\tlet texture = this.textures[++frame];\r\n\t\tif (texture) {//if frame < this.textures.length\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {//if all testure are loaded\r\n\t\t\tdelete this.draw;\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\nimport { CharacterRenderConfig, ItemCategoryInfo, ResourceManager } from '../../../public/javascripts/resource.js';\r\nimport { AddInitTask } from \"../../init.js\";\r\nimport { Animation } from \"../Animation\";\r\nimport { engine } from '../Engine.js';\r\nimport { IRenderer, ImageFilter } from '../IRenderer.js';\r\nimport { Sprite, SpriteBase } from '../Sprite.js';\r\nimport { Rectangle, Vec2 } from '../math.js';\r\nimport { ActionAnimation } from './CharacterActionAnimation.js';\r\n\r\n\r\nlet zMap = {};\r\nlet sMap = {};\r\n\r\n\r\n/**\r\n * 00026623.blink[1].brow has bug\r\n * 'Weapon/01702694' is Longcoat(islot)\r\n * how to use cash-weapon (ex: 01702504|0152)\r\n */\r\n\r\n/**\r\n * multi-image-sprite\r\n */\r\nclass FragmentTexture extends SpriteBase {\r\n\t/**\r\n\t * @param {wzproperty} raw\r\n\t * @param {string} full_path\r\n\t */\r\n\tconstructor(raw, full_path) {\r\n\t\tsuper(raw, full_path);\r\n\r\n\t\tif (this._raw.origin) {\r\n\t\t\tthis._raw.origin.__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\tfor (let i in this._raw.map) {\r\n\t\t\tthis._raw.map[i].__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * if this.relative == null then hide\r\n\t\t */\r\n\t\tthis.relative = new Vec2(0, 0);\r\n\r\n\t\t/** @type {function(CharacterAnimationBase):Vec2} */\r\n\t\tthis.calcRelative = this._calcRelative;//this._getRelativeFunction();//this.__old_calcRelative;//\r\n\r\n\t\tthis.filter = new ImageFilter();\r\n\t\tthis.opacity = 1;\r\n\r\n\r\n\t\t/** @type {string} - extra property. */\r\n\t\tthis._slot = null;\r\n\r\n\t\t/** @type {string} - extra property. 在哪個部位 */\r\n\t\tthis._place = null;\r\n\r\n\t\t/** @type {string} - extra property: _slot itemId, _place, _raw.z z */\r\n\t\tthis.classList = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget z() {\r\n\t\treturn zMap[this._raw.z] || 1;\r\n\t}\r\n\tset z(not_value) {\r\n\t\tconsole.warn(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\tdebugger;\r\n\t\treturn this.z;\r\n\t}\r\n\tset order(not_value) {\r\n\t\tdebugger;\r\n\t\tconsole.warn(new Error(\"Not implement\").stack);\r\n\t}\r\n\r\n\t/** @returns {Vec2} */\r\n\tget origin() { return this._raw.origin || Vec2.empty; }\r\n\r\n\tisHasAnchor() { return !!this._raw.map; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget brow() { return this._raw.map.brow; }\r\n\tisAnchorBrow() { return !!this._raw.map.brow; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget neck() { return this._raw.map.neck; }\r\n\tisAnchorNeck() { return !!this._raw.map.neck; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget navel() { return this._raw.map.navel; }\r\n\tisAnchorNavel() { return !!this._raw.map.navel; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget hand() { return this._raw.map.hand; }\r\n\tisAnchorHand() { return !!this._raw.map.hand; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget handMove() { return this._raw.map.handMove; }\r\n\tisAnchorHandMove() { return !!this._raw.map.handMove; }\r\n\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earBelowHead() { return this._raw.map.earBelowHead; }\r\n\tisAnchor_EarBelowHead() { return !!this._raw.map.earBelowHead; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earOverHead() { return this._raw.map.earOverHead; }\r\n\tisAnchor_EarOverHead() { return !!this._raw.map.earOverHead; }\r\n\r\n\t/**\r\n\t * @param {FragmentTexture} that\r\n\t * @param {FragmentTexture} base\r\n\t * @param {string} anchor - anchor name\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_anchor(that, base, anchor) {\r\n\t\treturn base[anchor].sub(that[anchor]).add(base.origin.sub(that.origin));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative(chara) {\r\n\t\tthis.calcRelative = this._getRelativeFunction(chara);\r\n\t\treturn this.calcRelative(chara);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getRelativeFunction(chara) {\r\n\t\tif (!this.isHasAnchor()) {\r\n\t\t\treturn this._calcRelativeEmpty;\r\n\t\t}\r\n\t\tif (this.isAnchorNeck()) {\r\n\t\t\treturn this._calcRelative_neck;\r\n\t\t}\r\n\t\tif (this.isAnchorBrow()) {\r\n\t\t\treturn this._calcRelative_brow;\r\n\t\t}\r\n\t\tif (this.isAnchorNavel()) {\r\n\t\t\tif (this == chara.slots.body) {\r\n\t\t\t\treturn this._getOrigin;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_navel;\r\n\t\t}\r\n\t\tif (this.isAnchorHand()) {\r\n\t\t\treturn this._calcRelative_hand;\r\n\t\t}\r\n\t\tif (this.isAnchorHandMove()) {\r\n\t\t\tif (this._url.lastIndexOf(\"lHand\") > 0) {\r\n\t\t\t\treturn this._calcRelative_handMove_lHand;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_handMove;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelativeEmpty(chara) {\r\n\t\treturn Vec2.empty;\r\n\t}\r\n\t/**\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getOrigin() {\r\n\t\treturn this.origin;\r\n\t}\r\n\t/**\r\n\t * neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_neck(chara) {\r\n\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\treturn this._anchor(this, body, \"neck\").sub(body.origin);\r\n\t}\r\n\t/**\r\n\t * brow on the head & head on the neck & neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_brow(chara) {\r\n\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\tconst head = chara.slots.head.fragments.head.getTexture(chara);\r\n\t\treturn this._anchor(this, head, \"brow\").add(this._anchor(head, body, \"neck\")).sub(body.origin);//anchor_brow+(-7,-33)\r\n\t}\r\n\t/**\r\n\t * this is origin point, no anchor\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_navel(chara) {\r\n\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\treturn body.navel.sub(this.navel, this.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_hand(chara) {\r\n\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\tconst hand = chara.slots.body.fragments.arm.getTexture(chara);\r\n\t\tif (hand == null) {\r\n\t\t\treturn Vec2.empty.sub(this.hand).sub(this.origin).sub(body.origin);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this._anchor(this, hand, \"hand\").sub(this._anchor(body, hand, \"navel\")).sub(body.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove(chara) {\r\n\t\treturn Vec2.empty.sub(this.origin).sub(this.handMove);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove_lHand(chara) {\r\n\t\treturn Vec2.empty.sub(this.origin);\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tthis.relative = this.calcRelative(chara);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Character} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!this.relative) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.globalAlpha = this.opacity || 1;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass HairFragmentTexture extends FragmentTexture {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph2 = null;\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph3 = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tthis.relative = this.calcRelative(chara);\r\n\t\tif (this.graph2) {\r\n\t\t\tthis.graph2.relative = this.relative;\r\n\t\t}\r\n\t\tif (this.graph3) {\r\n\t\t\tthis.graph3.relative = this.relative;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Character} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!this.relative) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\trenderer.globalAlpha = this.opacity || 1;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\tthis._render(renderer);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\tthis._render(renderer);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n\t_render(renderer) {\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.drawGraph2(this, x, y);\r\n\r\n\t\tif (this.graph2 && this.graph2.opacity) {//color2\r\n\t\t\trenderer.globalAlpha = this.graph2.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph2, x, y);\r\n\t\t}\r\n\t\tif (this.graph3 && this.graph3.opacity) {//color3\r\n\t\t\trenderer.globalAlpha = this.graph3.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph3, x, y);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nclass ItemEffectAnimation extends Animation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t\t\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\t//this._url = this._url;\r\n\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"pos\", 1);\r\n\r\n\t\tsuper.load();\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} actionExceptRotation\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\trender(renderer, actionExceptRotation, angle, flip) {\r\n\t\tif (actionExceptRotation) {\r\n\t\t\tthis.draw(renderer, 0, 0, -angle, flip);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst oy = -this.texture.height * 0.25;\r\n\t\t\tthis.draw(renderer, 0, oy, 0, flip);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\t/data/Effect/ItemEff/1102918\r\nclass ItemEffect {\r\n\tconstructor() {\r\n\t\tthis._url = null;\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {{[animationName:string]:ItemEffectAnimation}} */\r\n\t\tthis.animation = {};\r\n\r\n\t\tthis.action = null;\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\r\n\t\tthis.fixed = 0;\r\n\t\tthis.z = -2;\r\n\t\tthis.action = 1;\r\n\t\tthis.actionExceptRotation = 0;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\ttry {\r\n\t\t\t/** @type {Set<string>} */\r\n\t\t\tlet itemEffectList = ItemEffect._list;\r\n\r\n\t\t\t/** @type {string[]} */\r\n\t\t\tlet raw = $get.list(\"/Effect/ItemEff\");\r\n\r\n\t\t\titemEffectList.clear();\r\n\r\n\t\t\traw.forEach(id => {\r\n\t\t\t\titemEffectList.add(parseInt(id, 10));\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<ItemEffect>}\r\n\t */\r\n\tstatic async load(equipID) {\r\n\t\tlet eff = new ItemEffect();\r\n\t\tawait eff.load(equipID);\r\n\t\treturn eff;\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tasync load(equipID) {\r\n\t\tconst id = Number(equipID);\r\n\t\tconst url = `/Effect/ItemEff/${id}/effect`;\r\n\r\n\t\tif (!ItemEffect._list.has(id)) {\r\n\t\t\t//if (!confirm(\"Try load: \" + url)) {\r\n\t\t\t//\treturn;\r\n\t\t\t//}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet raw = await $get.data(url);\r\n\t\tif (raw) {\r\n\t\t\treturn await this._load(equipID, url, raw);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t * @param {string} action\r\n\t */\r\n\tupdate(stamp, action) {\r\n\t\tif (action in this.animation) {\r\n\t\t\tthis.action = action;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.action = \"default\";\r\n\t\t}\r\n\r\n\t\tif (this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterRenderer} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (this.animation && this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].render(renderer, this.actionExceptRotation, chara.angle, chara.front > 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} equipID\r\n\t * @param {object} raw_data\r\n\t */\r\n\tasync _load(equipID, url, raw) {\r\n\t\tthis.id = equipID;\r\n\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tthis.__construct();\r\n\t}\r\n\t__construct() {\r\n\t\tthis.__getAttr(\"fixed\", 0);\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"action\", 1);\r\n\t\tthis.__getAttr(\"actionExceptRotation\", 0);\r\n\r\n\t\tfor (let i in this._raw) {\r\n\t\t\tif (this._raw[i] && typeof this._raw[i] == \"object\" && '0' in this._raw[i]) {//animation has frames\r\n\t\t\t\tthis.animation[i] = new ItemEffectAnimation(this._raw[i], [this._url, i].join(\"/\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n}\r\n/** @type {Set<string>} */\r\nItemEffect._list = new Set();\r\n\r\nclass CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tthis.textures = textures;\r\n\t\t//this.opacity = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @param {string} place\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara, place) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nclass CharacterBodyFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.action_frame);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.action in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t//if (this.textures.is_show) {\r\n\t\t\tlet ft = this.textures[chara.action][frame];\r\n\t\t\tif (ft) {\r\n\t\t\t\t//ft.opacity = this.opacity;\r\n\t\t\t\treturn ft;\r\n\t\t\t}\r\n\t\t//}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass CharacterFaceFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.emotion_frame);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.emotion in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t//if (this.textures.is_show) {\r\n\t\t\tlet ft = this.textures[chara.emotion][frame];\r\n\t\t\t//ft.opacity = this.opacity;\r\n\t\t\treturn ft;\r\n\t\t//}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass EquipImageFilter {\r\n\t/**\r\n\t * @param {ICharacterEquip} equip\r\n\t */\r\n\tconstructor(equip) {\r\n\t\tthis.equip = equip;\r\n\t}\r\n\r\n\tget hue() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.hue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset hue(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget sat() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.sat;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset sat(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.sat = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget bri() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset bri(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.bri = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget contrast() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.contrast;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset contrast(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.contrast = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\thue: this.hue,\r\n\t\t\tsat: this.sat,\r\n\t\t\tbri: this.bri,\r\n\t\t\tcontrast: this.contrast,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nclass ICharacterEquip {\r\n\tconstructor() {\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t_unload() {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: -1,//invalid ID\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * ??\r\n */\r\nclass _CharacterEquipSlotLink extends ICharacterEquip {\r\n\tconstructor(slot_link) {\r\n\t\tsuper();\r\n\t\tthis.slot_link = slot_link;//??\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: slot_link,//??\r\n\t\t};\r\n\t}\r\n}\r\n\r\nclass CharacterEquipBase extends ICharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\t\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\t//this._url = null;\r\n\t\t\t\r\n\t\t/** @type {ItemEffect} */\r\n\t\tthis.effect = null;\r\n\r\n\t\t/**\r\n\t\t * this.fragments[place][action][frame]\r\n\t\t * @type {{[place:string]:{[action:string]:FragmentTexture[]}}}\r\n\t\t */\r\n\t\tthis.fragments = null;\r\n\r\n\t\tthis._onload = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tthis.categoryInfo = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.slot_order = 0;\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.islot = {};\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.vslot = {};\r\n\r\n\t\tthis.filter = new EquipImageFilter(this);\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: this.id,\r\n\t\t\tfilter: this.filter.toJSON(),\r\n\t\t};\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn this.fragments != null;\r\n\t}\r\n\r\n\t/** @type {function(CharacterEquipBase):void} */\r\n\tget _onload() {\r\n\t\treturn this.__onload;\r\n\t}\r\n\tset _onload(func) {\r\n\t\tthis.__onload = func;\r\n\t\tif (this.isLoaded()) {\r\n\t\t\tthis.__onload.call(this, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {void} use_category - no use\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tlet promise_raw, promise_name;\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.categoryInfo = cateInfo;\r\n\t\t\r\n\t\tpromise_raw = this.__load(url, id, cateInfo);\r\n\r\n\t\tif (cateInfo.path) {\r\n\t\t\tpromise_name = $get.data(`/String/Eqp/Eqp/${cateInfo.path}/${Number(id)}`).then(data => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tthis.name = data.name;\r\n\t\t\t\t\tthis.desc = data.desc;\r\n\t\t\t\t}\r\n\t\t\t}, reason => {\r\n\t\t\t\tthis.name = \"[\" + id + \"]\";\r\n\t\t\t\tthis.desc = \"\";\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn new Promise(function (resolve) {\r\n\t\t\tPromise.all([promise_raw, promise_name]).then(function (result) {\r\n\t\t\t\tresolve(result[0]);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tasync __load(url, id, cateInfo) {\r\n\t\tlet raw;\r\n\r\n\t\ttry {\r\n\t\t\tif (ResourceManager.isEquipExist(id, cateInfo)) {\r\n\t\t\t\traw = await $get.data(url);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!raw && load_extern_item_data) {\r\n\t\t\t\traw = await load_extern_item_data(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tif (!raw) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tlet textures = {};\r\n\r\n\t\tthis.__load_slot();\r\n\r\n\t\tthis.__load_fragments();\r\n\r\n\t\tif (this._onload) {\r\n\t\t\tthis._onload.call(this, this);\r\n\t\t}\r\n\r\n\t\t//// if not body, head, face, hair then try load effect\r\n\t\t//if (id >= \"00050000\") {\r\n\t\t\t// load if exist\r\n\t\t\tItemEffect.load(this.id).then(a => this.effect = a);//01102918\t//01102915\r\n\t\t//}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tconst fragmentConstructor = this.fragmentConstructor;\r\n\r\n\t\t//Object.keys(this._raw_textures).map(k => { return '0' in this._raw_textures[k]; })\r\n\r\n\t\tlet action_list = Object.keys(this._raw_textures);\r\n\r\n\t\tlet textures = {};\r\n\t\tfor (let action of action_list) {\r\n\t\t\tif (\"0\" in this._raw_textures[action]) {\r\n\t\t\t\tlet _url = this._base_path + action;\r\n\r\n\t\t\t\ttextures[action] = this.__load_frame_textures(this._raw_textures[action], _url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragment_textures = {};\r\n\t\tfor (let action in textures) {\r\n\t\t\tfor (let frame in textures[action]) {\r\n\t\t\t\tfor (let place in textures[action][frame]) {\r\n\t\t\t\t\tif (!(place in fragment_textures)) {\r\n\t\t\t\t\t\tfragment_textures[place] = {};\r\n\t\t\t\t\t\t//fragment_textures[place].is_show = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!(action in fragment_textures[place])) {\r\n\t\t\t\t\t\tfragment_textures[place][action] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfragment_textures[place][action][frame] = textures[action][frame][place];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragments = {};\r\n\t\tfor (let frag in fragment_textures) {\r\n\t\t\tfragments[frag] = new fragmentConstructor(fragment_textures[frag]);\r\n\t\t}\r\n\t\tthis.fragments = fragments;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {Object.<string, FragmentTexture>[]} - array - textures[frame][place]\r\n\t */\r\n\t__load_frame_textures(_raw, _url) {\r\n\t\tlet textures = [];\r\n\t\tfor (let frame = 0; frame in _raw; ++frame) {\r\n\t\t\tlet url = `${_url}/${frame}`;\r\n\t\t\ttextures[frame] = this.__load_place_textures(_raw[frame], url);\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {Object.<string, FragmentTexture>} - object - textures[place]\r\n\t */\r\n\t__load_place_textures(_raw, _url) {\r\n\t\tlet textures = {};\r\n\t\tfor (let place in _raw) {\r\n\t\t\tlet path = `${_url}/${place}`;\r\n\t\t\tlet raw = _raw[place];\r\n\r\n\t\t\tif (raw) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tconst FragmentTextureType = this.FragmentTextureType;\r\n\t\t\t\tlet ft;\r\n\t\t\t\tif (raw[\"\"] == \"\") {\r\n\t\t\t\t\tft._url = path;\r\n\t\t\t\t\t//ft._url = path;\r\n\t\t\t\t\ttextures[place] = ft\r\n\t\t\t\t}\r\n\t\t\t\telse if (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\tft = new FragmentTextureType(raw);\r\n\t\t\t\t\t//ft._url = raw[\"\"];\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\telse if (place == \"hairShade\") {\r\n\t\t\t\t\tft = new FragmentTextureType(raw[0]);\r\n\t\t\t\t\t//ft._url = path + \"/0\";\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tft._slot = this.categoryInfo.slot;\r\n\t\t\t\t\tft._place = place;\r\n\r\n\t\t\t\t\tft.classList = [\r\n\t\t\t\t\t\tft._slot,\r\n\t\t\t\t\t\t\"item\" + this.id,\r\n\t\t\t\t\t\tft._place,\r\n\t\t\t\t\t\tft._raw.z,\r\n\t\t\t\t\t\t'z' + ft.z\r\n\t\t\t\t\t].join(' ');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\tget FragmentTextureType() {\r\n\t\treturn FragmentTexture;\r\n\t}\r\n\t__load_slot() {\r\n\t\tif (!this._raw.info.islot) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet islots = this._raw.info.islot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in islots) {\r\n\t\t\tconst slot = islots[i];\r\n\t\t\tconst slot_order = zMap[slot];\r\n\t\t\tthis.islot[slot] = slot_order;\r\n\t\t\t\t\r\n\t\t\tif (slot_order > this.slot_order) {//this.slot_order = Math.max(this.slot_order, slot_order);\r\n\t\t\t\tthis.slot_order = slot_order;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet vslots = this._raw.info.vslot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in vslots) {\r\n\t\t\tconst slot = vslots[i];\r\n\t\t\tthis.vslot[slot] = slot;\r\n\t\t}\r\n\t}\r\n\r\n\t_unload() {\r\n\t\tthis.fragments = null;\r\n\t\tthis.effect == null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget opacity() {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} opacity\r\n\t */\r\n\tset opacity(opacity) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.opacity = opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t */\r\n\tsetFilter(hue, sat, bri) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = hue;\r\n\t\t\t\t\t\tft.filter.sat = sat;\r\n\t\t\t\t\t\tft.filter.bri = bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get icon url\r\n\t * @see {@link ItemCategoryInfo.getIconUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconUrl() {\r\n\t\treturn ItemCategoryInfo.getIconUrl(this.id);\r\n\t}\r\n\r\n\t/**\r\n\t * get iconRaw url\r\n\t * @see {@link ItemCategoryInfo.getIconRawUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconRawUrl() {\r\n\t\treturn ItemCategoryInfo.getIconRawUrl(this.id);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {{[actions:string]:{[\"0\"]:Sprite,[frames:string]:Sprite}}} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw;\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nclass CharacterEquip extends CharacterEquipBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"face\" || k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\ttry {\r\n\t\t\treturn chara.slots.body.fragments.body.textures[chara.action].length;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\ttry {\r\n\t\t\tconst d = this._raw[chara.action][chara.action_frame].delay;\r\n\t\t\tif (d != null) {!isNaN(d) && isFinite(d)\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger\r\n\t\t}\r\n\t\treturn 120;\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipBody extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t///**\r\n\t// * @param {CharacterAnimationBase} chara\r\n\t// * @returns {number}\r\n\t// */\r\n\t//getFrameCount(chara) {\r\n\t//\treturn this.fragments.body.textures[chara.action].length;\r\n\t//}\r\n}\r\n\r\nclass CharacterEquipCashWeapon extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.use_category = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {string} use_category - cash-weapon as [category]\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tif (!use_category && use_category != \"\") {\r\n\t\t\tconsole.warn(\"no use_category\");\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.use_category = use_category.slice(2, 4);\r\n\r\n\t\treturn super.load(url, id, cateInfo);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {object} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw[this.use_category];\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url + this.use_category;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipHead extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.elfEarFragment = null;\r\n\t\tthis.lefEarFragment = null;\r\n\t\tthis.highlefEarFragment = null;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tsuper.__load_fragments()\r\n\t\t\r\n\t\tif (this.fragments) {\r\n\t\t\tif (this.fragments.ear) {\r\n\t\t\t\tthis.elfEarFragment = this.fragments.ear;\r\n\t\t\t\tdelete this.fragments.ear;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.lefEar) {\r\n\t\t\t\tthis.lefEarFragment = this.fragments.lefEar;\r\n\t\t\t\tdelete this.fragments.lefEar;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.highlefEar) {\r\n\t\t\t\tthis.highlefEarFragment = this.fragments.highlefEar;\r\n\t\t\t\tdelete this.fragments.highlefEar;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget elfEar() {\r\n\t\treturn this.fragments.ear != null;\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (!this.elfEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.ear = this.elfEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.ear;\r\n\t\t}\r\n\t}\r\n\r\n\tget lefEar() {\r\n\t\treturn this.fragments.lefEar != null;\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (!this.lefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.lefEar = this.lefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.lefEar;\r\n\t\t}\r\n\t}\r\n\r\n\tget highlefEar() {\r\n\t\treturn this.fragments.highlefEar != null;\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (!this.highlefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.highlefEar = this.highlefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.highlefEar;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass CharacterEquipHair extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget FragmentTextureType() {\r\n\t\treturn HairFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipFaceAcc extends CharacterEquipBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tget _animation_type() {\r\n\t\treturn \"emotion\";\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\ttry {\r\n\t\t\treturn chara.slots.face.fragments.face.textures[chara.emotion].length;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\ttry {\r\n\t\t\tconst d = this._raw[chara.emotion][chara.emotion_frame].delay;\r\n\t\t\tif (d != null) {//!isNaN(d) && isFinite(d)\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterFaceFragment;\r\n\t}\r\n}\r\nclass CharacterEquipFace extends CharacterEquipFaceAcc {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nItemCategoryInfo._info['0000'].fragmentType = CharacterEquipBody;\r\nItemCategoryInfo._info['0001'].fragmentType = CharacterEquipHead;\t//\telfEar\r\nItemCategoryInfo._info['0002'].fragmentType = CharacterEquipFace;\t//\tFace\r\nItemCategoryInfo._info['0003'].fragmentType = CharacterEquipHair;\t//\tCharacterEquipHair;\t//\tHair\r\nItemCategoryInfo._info['0004'].fragmentType = CharacterEquipHair;\t//\tCharacterEquipHair;\t//\tHair\r\n\r\nItemCategoryInfo._info['0100'].fragmentType = CharacterEquip;\t\t//\tCap\r\nItemCategoryInfo._info['0101'].fragmentType = CharacterEquipFaceAcc;//\taccessoryFace\r\nItemCategoryInfo._info['0102'].fragmentType = CharacterEquip;\t\t//\taccessoryEyes\r\nItemCategoryInfo._info['0103'].fragmentType = CharacterEquip;\t\t//\taccessoryEars\r\nItemCategoryInfo._info['0104'].fragmentType = CharacterEquip;\t\t//\tCoat\r\nItemCategoryInfo._info['0105'].fragmentType = CharacterEquip;\t\t//\tLongcoat\r\nItemCategoryInfo._info['0106'].fragmentType = CharacterEquip;\t\t//\tPants\r\nItemCategoryInfo._info['0107'].fragmentType = CharacterEquip;\t\t//\tShoes\r\nItemCategoryInfo._info['0108'].fragmentType = CharacterEquip;\t\t//\tGlove\r\nItemCategoryInfo._info['0109'].fragmentType = CharacterEquip;\t\t//\tShield\r\nItemCategoryInfo._info['0110'].fragmentType = CharacterEquip;\t\t//\tCape\r\n\r\nItemCategoryInfo._info['0170'].fragmentType = CharacterEquipCashWeapon;\t\t//\tcash-weapon\r\n\r\nclass CharacterSlots {\r\n\tconstructor() {\r\n\t\t\t\r\n\t\t/** @type {CharacterEquipBase[]} */\r\n\t\tthis._ordered_slot = [];\r\n\r\n\r\n\t\t/** @type {CharacterEquipHair} */\r\n\t\tthis._hair = null;\r\n\t\t/** @type {CharacterEquipHair} */\r\n\t\tthis._hair2 = null;\r\n\t\t/** @type {CharacterEquipHair} 0~1.0 */\r\n\t\tthis._hairMix2 = null;\r\n\t\t/** @type {CharacterEquipHair} */\r\n\t\tthis._hair3 = null;\r\n\t\t/** @type {CharacterEquipHair} 0~1.0 */\r\n\t\tthis._hairMix3 = null;\r\n\r\n\r\n\t\t/** @type {CharacterEquipBody} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.head = null;\r\n\r\n\t\t/** @type {CharacterEquipFace} */\r\n\t\tthis.face = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.hair = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 1 */\r\n\t\tthis.cap = null;\r\n\r\n\t\t/** @type {CharacterEquipFace} - 2 */\r\n\t\tthis.accessoryFace = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 3*/\r\n\t\tthis.accessoryEyes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 4 */\r\n\t\tthis.accessoryEars = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.coat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.longcoat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 6 */\r\n\t\tthis.pants = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 7 */\r\n\t\tthis.shoes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 8 */\r\n\t\tthis.glove = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 9 */\r\n\t\tthis.cape = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 10 */\r\n\t\tthis.shield = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 11 */\r\n\t\tthis.weapon = null;\r\n\t\r\n\t\t{\r\n\t\t\tObject.defineProperty(this, \"_ordered_slot\", {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: []\r\n\t\t\t});\r\n\r\n\t\t\tObject.defineProperty(this, \"_hair\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair2\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix2\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair3\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix3\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {CharacterEquipHair} */\r\n\tget hair() {\r\n\t\treturn this._hair;\r\n\t}\r\n\tset hair(value) {\r\n\t\tthis._hair = value;\r\n\t\tif (value) {\r\n\t\t\tif (this._hair2 && this._hairMix2) {\r\n\t\t\t\tthis.hairColor2 = this.hairColor2;\r\n\t\t\t\tthis.hairMix2 = this.hairMix2;\r\n\t\t\t}\r\n\t\t\tif (this._hair3 && this._hairMix3) {\r\n\t\t\t\tthis.hairColor3 = this.hairColor3;\r\n\t\t\t\tthis.hairMix3 = this.hairMix3;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync __loadColoredHair(color) {\r\n\t\tconst id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tconst url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\" : \"\") + id}`;\r\n\t\t\tconst use_category = undefined;\r\n\r\n\t\t\tlet hair = new CharacterEquipHair();\r\n\r\n\t\t\tawait hair.load(url, id, cateInfo, use_category);\r\n\r\n\t\t\treturn hair;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget hairColor2() {\r\n\t\tif (this._hair2) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair2.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor2(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc2Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair2 || hc2Id != this._hair2.id) {\r\n\t\t\tif (hc2Id == this._hair.id) {\r\n\t\t\t\tthis._hair2 = null;\r\n\t\t\t\tthis.hairMix2 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair2 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair2.then(hair2 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair2;\r\n\r\n\t\t\t\t\tthis._hair2 = hair2;\r\n\t\t\t\t\tif (this._hair2 && this.hairMix2 != null) {\r\n\t\t\t\t\t\tthis.hairMix2 = this.hairMix2;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix2 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairMix2() {\r\n\t\treturn this._hairMix2;\r\n\t}\r\n\tset hairMix2(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair2).then(() => {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this._hair2;\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph2 = ft;\r\n\t\t\t\t\t\t\tori.graph2.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix2 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairColor3() {\r\n\t\tif (this._hair3) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair3.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor3(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc3Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair3 || this._hair3.id != hc3Id) {\r\n\t\t\tif (this._hair.id == hc3Id || this._hair2.id == hc3Id) {\r\n\t\t\t\tthis._hair3 = null;\r\n\t\t\t\tthis.hairMix3 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair3 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair3.then(hair3 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair3;\r\n\r\n\t\t\t\t\tthis._hair3 = hair3;\r\n\t\t\t\t\tif (this._hair3 && this.hairMix3 != null) {\r\n\t\t\t\t\t\tthis.hairMix3 = this.hairMix3;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix3 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hairMix3() {\r\n\t\treturn this._hairMix3;\r\n\t}\r\n\tset hairMix3(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair3).then(() => {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this._hair3;\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph3 = ft;\r\n\t\t\t\t\t\t\tori.graph3.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix3 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t//__order_slot() {\r\n\t//\tlet slot_map = new Map();\r\n\t//\r\n\t//\tfor (let i in this) {\r\n\t//\t\tlet equip = this[i];\r\n\t//\r\n\t//\t\tequip.cs\r\n\t//\t}\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {CharacterEquipBase} loadedEquip\r\n\t * @param {string} use_category - category which used of cash-weapon\r\n\t */\r\n\tasync _use(id, loadedEquip, use_category) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tlet url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\":\"\") + id}`;\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item;\r\n\r\n\t\t\tif (loadedEquip instanceof CharacterEquipBase) {\r\n\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\tdebugger;\r\n\t\t\t\titem = loadedEquip;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (loadedEquip) {\r\n\t\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tconst fragmentType = cateInfo.fragmentType || CharacterEquip;\r\n\r\n\t\t\t\titem = new fragmentType();\r\n\t\t\t}\r\n\t\t\t/** _use_loaded_equip */\r\n\t\t\tif (0) {\r\n\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t}\r\n\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t}\r\n\r\n\t\t\tlet is_exist = loadedEquip || await item.load(url, id, cateInfo, use_category);\r\n\t\t\tif (is_exist) {\r\n\t\t\t\t/** _use_loaded_equip */\r\n\t\t\t\tif (1) {\r\n\t\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.warn(\"item(\" + id + \") is not exist\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {boolean}\r\n\t */\r\n\t_unuse(id) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet cateInfo, equip;\r\n\r\n\t\tif (id instanceof CharacterEquipBase) {\r\n\t\t\tequip = id;\r\n\t\t\tid = equip.id;\r\n\t\t\tcateInfo = equip.categoryInfo;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcateInfo = ItemCategoryInfo.get(id);\r\n\t\t}\r\n\r\n\t\tif (cateInfo.slot != \"head\" && cateInfo.slot != \"body\") {\r\n\t\t\tif (this[cateInfo.slot] && this[cateInfo.slot].id == id) {\r\n\t\t\t\tequip = this[cateInfo.slot];\r\n\t\t\t\tfor (let slot in equip.islot) {\r\n\t\t\t\t\tlet order = equip.islot[slot];\r\n\t\t\t\t\tif (this._ordered_slot[order]) {\r\n\t\t\t\t\t\tthis._ordered_slot[order]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._ordered_slot[order];\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t_clear() {\r\n\t\t//this.body = null;\r\n\t\t//this.head = null;\r\n\t\tthis.face = null;\r\n\t\tthis.hair = null;\r\n\t\tthis.cap = null;\r\n\t\tthis.accessoryFace = null;\r\n\t\tthis.accessoryEyes = null;\r\n\t\tthis.accessoryEars = null;\r\n\t\tthis.coat = null;\r\n\t\tthis.longcoat = null;\r\n\t\tthis.pants = null;\r\n\t\tthis.shoes = null;\r\n\t\tthis.glove = null;\r\n\t\tthis.cape = null;\r\n\t\tthis.shield = null;\r\n\r\n\t\t//temp\r\n\t\tlet head = this.head;\r\n\t\tlet body = this.body;\r\n\r\n\t\t//clear\r\n\t\tthis._ordered_slot = [];\r\n\r\n\t\t//restore\r\n\t\tif (head) {\r\n\t\t\tthis._ordered_slot[head.slot_order] = head;\r\n\t\t}\r\n\t\tif (body) {\r\n\t\t\tthis._ordered_slot[body.slot_order] = body;\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify() {\r\n\t\tlet slots = [\"c\"];\r\n\t\t\t\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id + \"|\" + this.face.id);\r\n\t\tif (this.hair) {\r\n\t\t\tlet ha = [];\r\n\t\t\tha.push(this.hair.id);\r\n\t\t\tif (this.hairColor2 && this.hairMix2 > 0) ha.push(this.hairColor2 + \"%\" + Math.trunc(this.hairMix2 * 100));\r\n\t\t\tif (this.hairColor3 && this.hairMix3 > 0) ha.push(this.hairColor3 + \"%\" + Math.trunc(this.hairMix3 * 100));\r\n\t\t\tslots.push(ha.join(\"|\"));\r\n\t\t}\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots.join(\",\");\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\tlet slots = [];\r\n\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id);\r\n\t\tif (this.hair) slots.push(this.hair.id);\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots;\r\n\t}\r\n\r\n\t/**\r\n\t * returns: [face, hair, cap, ..., weapon]\r\n\t */\r\n\t*enumerate() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.hair) yield this.hair;\r\n\r\n\t\tyield* this.enumerate_equip();\r\n\t}\r\n\t*enumerate_equip() {\r\n\t\tif (this.cap) yield this.cap;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t\tif (this.accessoryEyes) yield this.accessoryEyes;\r\n\t\tif (this.accessoryEars) yield this.accessoryEars;\r\n\t\tif (this.coat) yield this.coat;\r\n\t\tif (this.longcoat) yield this.longcoat;\r\n\t\tif (this.pants) yield this.pants;\r\n\t\tif (this.shoes) yield this.shoes;\r\n\t\tif (this.glove) yield this.glove;\r\n\t\tif (this.shield) yield this.shield;\r\n\t\tif (this.cape) yield this.cape;\r\n\t\tif (this.weapon) yield this.weapon;\r\n\t}\r\n\t*enumerate_face() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t}\r\n}\r\n\r\nclass CharacterChangeLog {\r\n\tconstructor() {\r\n\t\t/** @type {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\t\tthis.ear = undefined;\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.useEquip = [];\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.unuseEquip = [];\r\n\t\t\r\n\t\t/** @type {string} - hair2 id */\r\n\t\tthis.hair2 = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.hairMix2 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hair3 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hairMix3 = undefined;\r\n\r\n\t\t/** @type {string} weapon => equip id */\r\n\t\tthis.weapon = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.ear = undefined;\r\n\t\tthis.useEquip = [];\r\n\t\tthis.unuseEquip = [];\r\n\t\tthis.hair2 = undefined;\r\n\t\tthis.hairMix2 = undefined;\r\n\t\t//this.hair3 = undefined;\r\n\t\t//this.hairMix3 = undefined;\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n}\r\n\r\nexport class CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tthis._$dirty = 0;//force update vue\r\n\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.job = null;\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.subJob = null;\r\n\r\n\t\t/** @type {ActionAnimation} */\r\n\t\tthis.actani = new ActionAnimation();\r\n\r\n\t\t/** @type {number} - animation speed rate */\r\n\t\tthis.speed = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.fixed_speed = false;\r\n\t\t\r\n\t\tthis._action = \"stand1\";\r\n\t\tthis._action_frame = 0;\r\n\t\tthis._action_time = 0;\r\n\r\n\t\tthis._emotion = \"blink\";\r\n\t\tthis._emotion_frame = 0;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis._emotion_frame_sequence = [0, 1, 2, 1];\r\n\r\n\t\t/** @type {CharacterSlots} */\r\n\t\tthis.slots = new CharacterSlots();\r\n\r\n\t\t/**\r\n\t\t * is require update render data\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.__require_update = true;\r\n\r\n\t\t/** @type {FragmentTexture[]} */\r\n\t\tthis.__frag_list = [];\r\n\r\n\t\t/** @type {CharacterChangeLog} **/\r\n\t\tthis.$$changeLog = new CharacterChangeLog();\r\n\t}\r\n\r\n\t_clone() {\r\n\t\talert(this.constructor.name + \"::_clone\");\r\n\r\n\t\t/** @type {CharacterAnimationBase} */\r\n\t\tlet nc = new this.constructor();//not must CharacterRender\r\n\t\tif (!nc) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnc.speed = 0;\r\n\r\n\t\tnc.x = this.x;\r\n\t\tnc.y = this.y;\r\n\t\tnc.angle = this.angle;\r\n\r\n\t\tnc.action = this.action;\r\n\t\tnc.action_frame = this.action_frame;\r\n\r\n\t\tnc.emotion = this._emotion;\r\n\t\tnc.emotion_frame = this.emotion_frame;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tnc.slots[i] = this.slots[i];//not need colne ?\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nc;\r\n\t}\r\n\t\t\r\n\t_waitFrameTexturesLoaded() {\r\n\t\tlet tasks = [];\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tif (typeof item.getFrameCount != \"function\") {\r\n\t\t\t\t\talert('typeof item.getFrameCount != \"function\"');\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tlet count = item.getFrameCount(this);\r\n\t\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\t\tlet frag = item.fragments[j];\r\n\t\t\t\t\tfor (let k = 0; k < count; ++k) {\r\n\t\t\t\t\t\tlet ft = frag.getFrameTexture(this, k);\r\n\t\t\t\t\t\tif (ft && !ft._isLoaded_or_doload()) {\r\n\t\t\t\t\t\t\ttasks.push(ft.$promise);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * init animation status\r\n\t */\r\n\tinitAnimation() {\r\n\t\t/** @type {string} */\r\n\t\tthis.action = \"stand1\";\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._action_time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._action_frame = 0;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.emotion = \"blink\";\r\n\t\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_frame = 0;\r\n\t}\r\n\r\n\t/** @type {number} - 0~1 */\r\n\tgetSpeed() {\r\n\t\treturn this.fixed_speed ? 1 : this.speed;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget elfEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.elfEar;\r\n\t\t}\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.elfEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget lefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar;\r\n\t\t}\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.lefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget highlefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.highlefEar;\r\n\t\t}\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.highlefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\tget ear() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar ? \"lef\" : (this.slots.head.elfEar ? \"elf\" : (this.slots.head.highlefEar ? \"highlef\" : \"human\"));\r\n\t\t}\r\n\t}\r\n\tset ear(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tif (value == \"elf\") {\r\n\t\t\t\tthis.slots.head.elfEar = true;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"lef\") {\r\n\t\t\t\tthis.slots.head.lefEar = true;\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"highlef\") {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = true;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = \"human\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.$$changeLog.ear = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget action() {\r\n\t\treturn this._action;\r\n\t}\r\n\tset action(act) {\r\n\t\tif (this.actani._action != act && this.slots.body) {\r\n\t\t//if (this._action != act && this.slots.body) {\r\n\t\t\t//if (this.slots.body._action_list.indexOf(act) >= 0) {\r\n\t\t\t//\tthis._action = act;\r\n\t\t\t//}\r\n\t\t\t//this._action_frame = 0;\r\n\t\t\t//this._action_time = 0;\r\n\t\t\t////\r\n\t\t\t////this.action_frame_sequence = [...circularSequence(this.action_frame_count)];\r\n\r\n\t\t\tthis._action = act;\r\n\t\t\tthis.actani.reload(act);\r\n\r\n\t\t\tthis.__require_update |= true;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame() {\r\n\t\tconst frame_count = this.action_frame_count;\r\n\t\tif (frame_count) {\r\n\t\t\treturn this._action_frame % frame_count;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\tset action_frame(value) {\r\n\t\tthis._action_time = 0;\r\n\t\tthis._action_frame = value;\r\n\t\tthis.__require_update |= true;\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._action_frame = Number(value) | 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} next\r\n\t */\r\n\t_get_action_next_frame(next) {\r\n\t\tconst frame_count = this.action_frame_count;\r\n\t\tif (frame_count) {\r\n\t\t\tlet f = this._action_frame + next;\r\n\t\t\treturn f < 0 ? (frame_count - 1) : (f % frame_count);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_time() {\r\n\t\treturn this._action_time;\r\n\t}\r\n\tset action_time(time) {\r\n\t\tconst frame_count = this.action_frame_count;\r\n\r\n\t\tif (frame_count) {\r\n\t\t\tif (time < this.action_delay) {\r\n\t\t\t\tthis._action_time = time;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._action_time = 0;\r\n\t\t\t\t++this._action_frame;\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget action_delay() {\r\n\t\tif (this.slots.body) {\r\n\t\t\treturn this.slots.body.getDelay(this);\r\n\t\t}\r\n\t\treturn 180;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.body) {\r\n\t\t\t\treturn this.slots.body.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget emotion() {\r\n\t\treturn this._emotion;\r\n\t}\r\n\tset emotion(emo) {\r\n\t\tif (this._emotion != emo && this.slots.face && this.slots.face._action_list.indexOf(emo) >= 0) {\r\n\t\t\tthis._emotion = emo;\r\n\t\t\tthis._emotion_frame = 0;\r\n\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\tthis._emotion_frame_sequence = [...circularSequence(this.emotion_frame_count)];\r\n\r\n\t\t\tthis.__require_update |= true;\r\n\t\t}\r\n\t}\r\n\r\n\t*emotion_frame_sequence_generator(length) {\r\n\t\tfor (; ;) {\r\n\t\t\tyield* circularSequence(length);\r\n\r\n\t\t\tfor (; Math.random() < 0.5;) {\r\n\t\t\t\tyield 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t/** @type {number} */\r\n\tget emotion_frame() {\r\n\t\tlet f = this._emotion_frame_sequence[this._emotion_frame % this._emotion_frame_sequence.length];\r\n\t\treturn f;\r\n\t}\r\n\tset emotion_frame(value) {\r\n\t\tthis._emotion_frame = value;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis.__require_update |= true;\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._emotion_frame = Number(value) | 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} next\r\n\t */\r\n\t_get_emotion_next_frame(next) {\r\n\t\tlet f = this._emotion_frame + next;\r\n\t\tf = f < 0 ? (this._emotion_frame_sequence.length - 1) : (f % this._emotion_frame_sequence.length);\r\n\t\treturn this._emotion_frame_sequence[f];\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_time() {\r\n\t\treturn this._emotion_time;\r\n\t}\r\n\tset emotion_time(time) {\r\n\t\tif (this.emotion_frame_count) {\r\n\t\t\tif (time < this.emotion_delay) {\r\n\t\t\t\tthis._emotion_time = time;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\t\t++this._emotion_frame;\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget emotion_delay() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn this.slots.face.getDelay(this);\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.face) {\r\n\t\t\t\treturn this.slots.face.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp - 0 <= stamp < Infinity\r\n\t */\r\n\t_update(stamp) {\r\n\t\tif (this.actani) {\r\n\t\t\tif (this.actani.isEnd() && this.actani.loop) {\r\n\t\t\t\tthis.actani.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.actani.update(stamp, this);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.action_time += stamp;\r\n\t\t}\r\n\r\n\t\tthis.emotion_time += stamp;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet equip = this.slots[i];\r\n\t\t\tif (equip && equip.effect) {\r\n\t\t\t\tequip.effect.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tstamp *= this.getSpeed();\r\n\r\n\t\tthis._update(stamp);\r\n\t}\r\n\r\n\t__forceUpdate(stamp) {\r\n\t\tthis._$dirty = -Math.random() + Math.random() * 3.1415926535897;\r\n\t\tthis._update(stamp | 0);\r\n\t\tthis.__update_frag_list();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} x\r\n\t * @param {number} y, \r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\t_draw(renderer, x, y, angle, flip) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\tif (this.__require_update) {\r\n\t\t\tthis.__update_frag_list();\r\n\t\t\tthis.__require_update = false;\r\n\t\t}\r\n\r\n\t\t//list.filter(a=>a&&a._raw.map).forEach(a=>{ for (let i in a._raw.map) { if (q[i]) { q[i].push(a); } else { q[i] = [a]; } } })\r\n\t\tthis.__draw_list(renderer, this.__frag_list, x, y, angle, flip);\r\n\r\n\t\trenderer.popGlobalAlpha();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {FragmentTexture[]} list\r\n\t */\r\n\t__draw_list(renderer, list, x, y, angle, flip) {\r\n\t\trenderer.pushMatrix();\r\n\r\n\t\trenderer.translate(x, y);\r\n\t\t\r\n\t\tif (0) {\r\n\t\t\tlet ctx = renderer.ctx;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(100, 0);\r\n\t\t\tctx.strokeStyle = \"#F00\";\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(0, 100);\r\n\t\t\tctx.strokeStyle = \"#0F0\";\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t\trenderer.rotate(window.m_a || angle);\r\n\r\n\t\tif (flip) {\r\n\t\t\trenderer.scale(-1, 1);\r\n\t\t}\r\n\t\t//{\r\n\t\t//\tlet ctx = renderer.ctx;\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(100, 0);\r\n\t\t//\tctx.strokeStyle = \"#F00\";\r\n\t\t//\tctx.stroke();\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(0, 100);\r\n\t\t//\tctx.strokeStyle = \"#0F0\";\r\n\t\t//\tctx.stroke();\r\n\t\t//}\r\n\r\n\t\t{\r\n\t\t\tfor (let i in this.slots) {\r\n\t\t\t\tlet equip = this.slots[i];\r\n\t\t\t\tif (equip && equip.effect) {\r\n\t\t\t\t\tequip.effect.render(renderer, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i in list) {\r\n\t\t\t\tlet ft = list[i];\r\n\t\t\t\tft.render(renderer, this);\r\n\t\t\t}\r\n\t\t}\r\n\t\trenderer.popMatrix();\r\n\t}\r\n\t/**\r\n\t * @param {Array<CharacterEquipBase>[]} slots\r\n\t * @param {CharacterEquipBase} item\r\n\t */\r\n\t__add_equip_to_frag_list(slots, item) {\r\n\t\t// if equip not use then value is mumber(slot_order) where this.slots._ordered_slot\r\n\t\tif (item == null) {\r\n\t\t\treturn;//debugger;\r\n\t\t}\r\n\t\telse if (item > 0) {// typeof item == 'number'; item != null && (item instanceof CharacterEquipBase || item >= 0)\r\n\t\t\treturn;//continue;\r\n\t\t}\r\n\r\n\t\t// init slots\r\n\t\tfor (let j in item.vslot) {\r\n\t\t\tlet slot = item.vslot[j];\r\n\t\t\tslots[slot] = [];\r\n\t\t}\r\n\r\n\t\tfor (let j in item.fragments) {//foreach equip place\r\n\t\t\tlet slot = sMap[j];\r\n\t\t\tif (slot != null) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (j == \"default\") {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tslot = item._raw.info.islot;\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//item.fragments[j].is_show = true;\r\n\t\t}\r\n\t}\r\n\t__update_frag_list() {\r\n\t\tthis.__frag_list = [];\r\n\r\n\t\t/** @type {Array<CharacterEquipBase>[]} */\r\n\t\tlet slots = {};\r\n\r\n\t\tfor (let i = 2; i <= 3; ++i) {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this.slots[\"_hair\" + i];\r\n\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\t\tfor (let i in this.slots._ordered_slot) {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this.slots._ordered_slot[i];\r\n\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\r\n\t\tlet is_back = false;\r\n\r\n\t\tfor (let i in slots) {\r\n\t\t\t/** @type {FragmentTexture[]} */\r\n\t\t\tlet fts = slots[i];\r\n\t\t\tfor (let j in fts) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = fts[j];\r\n\t\t\t\tif (is_back) {\r\n\t\t\t\t\tif (ft._place.startsWith(\"face\")) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (ft._place.startsWith(\"backHair\")) {\r\n\t\t\t\t\tis_back = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t}\r\n\t\t}\r\n\t\t{\r\n\t\t\tlet ae = this.__frag_list[114];//TODO: Ae\r\n\t\t\tif (ae) {\r\n\t\t\t\tthis.__frag_list.push(ae);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._calcBoundBox();\r\n\t}\r\n\t/** @param {FragmentTexture} ft */\r\n\t__add_frag_to_list(ft) {\r\n\t\tft.update(this);\r\n\t\tthis.__frag_list[ft.z] = ft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * calc current frame bound box and restore result\r\n\t * @returns {Rectangle}\r\n\t */\r\n\t_calcBoundBox() {\r\n\t\tlet left = 0, top = 0, right = 0, bottom = 0;\r\n\r\n\t\tfor (let i in this.__frag_list) {\r\n\t\t\tlet ft = this.__frag_list[i];\r\n\t\t\tif (ft.texture) {\r\n\t\t\t\tlet x0 = ft.relative.x;\r\n\t\t\t\tlet y0 = ft.relative.y;\r\n\t\t\t\tlet x1 = x0 + ft.width;\r\n\t\t\t\tlet y1 = y0 + ft.height;\r\n\r\n\t\t\t\tleft = Math.min(left, x0);\r\n\t\t\t\ttop = Math.min(top, y0);\r\n\t\t\t\tright = Math.max(right, x1);\r\n\t\t\t\tbottom = Math.max(bottom, y1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._boundBox = new Rectangle(\r\n\t\t\tMath.trunc(left),\r\n\t\t\tMath.trunc(top),\r\n\t\t\tMath.trunc(right - left),\r\n\t\t\tMath.trunc(bottom - top)\r\n\t\t);\r\n\t\treturn this._boundBox;\r\n\t}\r\n\t\r\n\ttoJSON() {\r\n\t\tlet obj = {\r\n\t\t\thair2: this.slots._hair2.id,\r\n\t\t\thairMix2: this.slots.hairMix2,\r\n\t\t\tslots: this.slots.toJSON(),\r\n\t\t};\r\n\r\n\t\tif (this.slots.head.elfEar) {\r\n\t\t\tobj.ear = \"elf\";\r\n\t\t}\r\n\t\telse if (this.slots.head.lefEar) {\r\n\t\t\tobj.ear = \"lef\";\r\n\t\t}\r\n\t\telse if (this.slots.head.highlefEar) {\r\n\t\t\tobj.ear = \"highlef\";\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nexport class CharacterRenderer extends CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {number} - position x */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} - position y */\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {number} - where layer */\r\n\t\tthis.z = 5;\r\n\r\n\t\t/** @type {number} - translate x once frame */\r\n\t\tthis.tx = 0;\r\n\t\t/** @type {number} - translate y once frame */\r\n\t\tthis.ty = 0;\r\n\t\t\r\n\t\tthis.angle = 0;\r\n\t\tthis.front = -1;\r\n\r\n\t\t/** @type {Promise<void>[]} */\r\n\t\tthis.__load_task = [];\r\n\r\n\t\t/** @type {function(IRenderer)} */\r\n\t\tthis.render = function (renderer) {\r\n\t\t\t//not ready to render\r\n\t\t\t//if load then set load render = _render\r\n\t\t}\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis._boundBox = null;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\tlet result = await Promise.all([\r\n\t\t\t$get.data(\"/zmap\"),\r\n\t\t\t$get.data(\"/smap\"),\r\n\t\t\tItemEffect.Init(),\r\n\t\t\tActionAnimation.Init(),//action definition\r\n\t\t]);\r\n\t\t\r\n\t\tzMap = {};\r\n\t\tObject.keys(result[0]).reverse().forEach((k, i) => zMap[k] = i + 1);\r\n\r\n\t\tsMap = result[1];\r\n\t}\r\n\r\n\tload() {\r\n\t\t//load body and head for calc relative position\r\n\t\tthis.use(\"00002012\");\r\n\t\tthis.use(\"00012012\");\r\n\r\n\t\tlet $promise = Promise.all([...this.__load_task]);\r\n\t\t(function (that, $promise) {\r\n\t\t\t$promise.then(function (result) {\r\n\t\t\t\tthat.initAnimation();\r\n\t\t\t\tthat.render = that._render;\r\n\t\t\t});\r\n\t\t})(this, $promise);\r\n\r\n\t\treturn $promise;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.waitLoaded();\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_render(renderer) {\r\n\t\tconst x = Math.trunc(this.x + this.tx);\r\n\t\tconst y = Math.trunc(this.y + this.ty);\r\n\t\t\r\n\t\tthis._draw(renderer, x, y, this.angle, this.front >= 1);\r\n\t\t\r\n\t\t//this.tx = 0;//auto clear\r\n\t\t//this.ty = 0;//auto clear\r\n\t}\r\n\t\r\n\t_setup_test() {\r\n\t\tthis.use(\"00026509\");\r\n\r\n\t\tthis.use(\"00044041\");\r\n\r\n\t\t//this.use(\"01022274\");\r\n\r\n\t\tthis.use(\"01053169\");\r\n\r\n\t\tthis.use(\"01071077\");\r\n\r\n\t\t//this.use(\"01102960\");\r\n\t}\r\n\r\n\t\r\n\tasync __synchronize(stamp) {\r\n\t\tthis.__forceUpdate(stamp);\r\n\t\r\n\t\tawait this.waitLoaded();\r\n\t\tawait this._waitFrameTexturesLoaded();\r\n\t}\r\n\tasync waitLoaded() {\r\n\t\tlet tasks = this.__load_task;\r\n\t\tif (tasks && tasks.length) {\r\n\t\t\tawait Promise.all(tasks).then(() => {\r\n\t\t\t\tthis.__load_task = [];\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t//isLoading() {\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {string} category - category of cash-weapon\r\n\t */\r\n\tasync use(id, category) {\r\n\t\tif (!category) {\r\n\t\t\tcategory = ItemCategoryInfo.getJobWeaponCategory(this.job);\r\n\t\t}\r\n\t\tconst item_type = id[0];\r\n\t\tswitch (item_type) {\r\n\t\t\tcase \"0\"://equip\r\n\t\t\t\tif (ItemCategoryInfo.isCashWeapon(id)) {\r\n\t\t\t\t\t//this.$$changeLog.weaponType = ss[1];/??\r\n\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t}\r\n\t\t\t\t//\r\n\t\t\t\tlet task = this.slots._use(id, null, category);\r\n\t\t\t\tthis.__load_task.push(task);\r\n\t\t\t\tawait task;\r\n\t\t\t\tthis._calcBoundBox();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tunuse(id) {\r\n\t\tdebugger;\r\n\t\tif (id[0] == \"0\") {//equip\r\n\t\t\tlet result = this.slots._unuse(id);\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.$$changeLog.unuseEquip.push(id);\r\n\t\t\t\tthis._calcBoundBox();\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t_parse(code) {\r\n\t\tif (!code) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet es = code.split(\",\");\r\n\t\tthis.slots._clear();\r\n\t\tes.forEach((v, i, a) => {\r\n\t\t\tif (v.indexOf(\"|\") >= 0) {\r\n\t\t\t\tconst ss = v.split(\"|\");\r\n\t\t\t\tconst cate = ItemCategoryInfo.get(ss[0]);\r\n\t\t\t\tlet id;\r\n\t\t\t\tif (cate.slot == \"face\") {\r\n\t\t\t\t\tid = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"hair\") {\r\n\t\t\t\t\tconst slots = this.slots;\r\n\t\t\t\t\tlet h2 = ss[1];\r\n\t\t\t\t\tlet h3 = ss[2];\r\n\t\t\t\t\t//\r\n\t\t\t\t\tid = ss[0];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id).then(() => {\r\n\t\t\t\t\t\tif (h2 && h2.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h2.split(\"%\");\r\n\t\t\t\t\t\t\tconst c2 = hc[0];\r\n\t\t\t\t\t\t\tconst m2 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair2 = c2;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix2 = m2;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor2 = c2;\r\n\t\t\t\t\t\t\tslots.hairMix2 = m2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (h3 && h3.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h3.split(\"%\");\r\n\t\t\t\t\t\t\tconst c3 = hc[0];\r\n\t\t\t\t\t\t\tconst m3 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair3 = c3;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix3 = m3;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor3 = hc[0];\r\n\t\t\t\t\t\t\tslots.hairMix4 = hc[1] / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"weapon\") {\r\n\t\t\t\t\tthis.$$changeLog.weaponType = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t\tthis.use.apply(this, ss, ss[1]);//this.use(ss[0], ss[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (Number.isFinite(parseInt(v, 10))) {\r\n\t\t\t\tthis.use(v);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @type {string} col\r\n\t */\r\n\tget hairColor() {\r\n\t\tif (this.slots.hair) {\r\n\t\t\treturn CharacterRenderConfig.getHairColor(this.slots.hair.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset hairColor(col) {\r\n\t\tif (this.slots.hair && col != this.hairColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorHairID(this.slots.hair.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} col\r\n\t */\r\n\tget faceColor() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn CharacterRenderConfig.getFaceColor(this.slots.face.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset faceColor(col) {\r\n\t\tif (this.slots.face && col != this.faceColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorFaceID(this.slots.face.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterChangeLog} changeLog\r\n\t */\r\n\tcommitChange(changeLog) {\r\n\t\tif (changeLog.ear) {\r\n\t\t\tthis.ear = changeLog.ear;\r\n\t\t}\r\n\r\n\t\tif (this.useEquip) {\r\n\t\t\tfor (let id of this.useEquip) {\r\n\t\t\t\tthis.use(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.unuseEquip) {\r\n\t\t\tfor (let id of this.unuseEquip) {\r\n\t\t\t\tthis.unuse(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair2 && changeLog.hairMix2) {\r\n\t\t\tthis.slots.hairColor2 = changeLog.hair2;\r\n\t\t\tthis.slots.hairMix2 = changeLog.hairMix2;\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair3 && changeLog.hairMix3) {\r\n\t\t\t//this.slots.hairColor3 = changeLog.hair3;\r\n\t\t\t//this.slots.hairMix3 = changeLog.hairMix3;\r\n\t\t}\r\n\t\t\r\n\t\tif (changeLog.weapon && changeLog.weaponType) {\r\n\t\t\tthis.use(changeLog.weapon, changeLog.weaponType);\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify(genCode) {\r\n\t\tlet result = this.slots._stringify();\r\n\t\tif (genCode) {\r\n\t\t\treturn `chara._parse('${result}')`;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_outlink() {\r\n\t\tif (this.slots.body && this.slots.body.id && this.slots.face && this.slots.face.id && this.action && this.emotion) {\r\n\t\t\tlet link = \"https://labs.maplestory.io/api/GMS/latest/character/center/\" + this.slots.body.id + \"/\";\r\n\t\t\tlet slots = [...this.slots.enumerate()].map(a => parseInt(a.id, 10));\r\n\r\n\t\t\tslots[0] = this.slots.face.id + \":\" + this.emotion;\r\n\r\n\t\t\tlink += slots.join(\",\");\r\n\r\n\t\t\tlink += \"/\" + this.action + \"?showears=\" + (this.elfEar ? \"true\" : \"false\");\r\n\r\n\t\t\tlink += \"&showLefEars=\" + (this.lefEar ? \"true\" : \"false\");\r\n\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\tconsole.log(\"character need body, face, action, emotion\");\r\n\t}\r\n\r\n\t_download() {\r\n\t\twindow.open(this._outlink());\r\n\t}\r\n\r\n\t_save_as_svg() {\r\n\t\tthis.__texture_to_base64().then(frag_list => {\r\n\t\t\tlet file_name = this.id + \".svg\";\r\n\t\t\t//let frag_list = this.__frag_list;\r\n\t\r\n\t\t\tlet svg = '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" >';\r\n\r\n\t\t\tsvg += '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink= \"http://www.w3.org/1999/xlink\">\\n';// width=\"64\" height=\"96\"\r\n\r\n\t\t\tsvg += '<g transform=\"translate(32, 96)\">';\r\n\t\t\tfrag_list.forEach(function (ft) {\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tlet clz = ft.classList;\r\n\t\t\t\t\tsvg += `\\t<image class=\"${clz}\" opacity=\"${ft.opacity}\" x=\"${ft.relative.x}\" y=\"${ft.relative.y}\" width=\"${ft.width}\" height=\"${ft.height}\" xlink:href=\"${ft._url}\"></image>\\n`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsvg += '</g>';\r\n\r\n\t\t\tsvg += '<text x=\"0\" y=\"122\" fill=\"transparent\">' + this._stringify(false) + '</text>';\r\n\r\n\t\t\tsvg += '</svg>';\r\n\r\n\t\t\t//let url = \"data:text/plain;utf8,\" + svg;\r\n\r\n\t\t\tdebugger;\r\n\r\n\t\t\t//window.open(url);\r\n\t\t\tDownloadData(svg, \"image/svg+xml;utf8\", file_name);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * \"data:image/png;base64,[...]\"\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} filename\r\n\t * @returns {string}\r\n\t */\r\n\t_save_as_png(renderer, filename) {\r\n\t\tlet bound = this._calcBoundBox();\r\n\t\tlet size = bound.size;\r\n\t\tlet x = -bound.left;\r\n\t\tlet y = bound.height;\r\n\t\tlet angle = 0;\r\n\t\tlet front = false;\r\n\r\n\t\t// use Canvas2, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//save Canvas2 size, current ctx is _ctx2\r\n\t\tconst c2w = renderer._ctx2.canvas.width;\r\n\t\tconst c2h = renderer._ctx2.canvas.height;\r\n\t\t//\r\n\t\trenderer.ctx.canvas.width = size.x;\r\n\t\trenderer.ctx.canvas.height = size.y;\r\n\r\n\t\ttry {\r\n\t\t\tthis._draw(renderer, x, y, angle, front);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\tlet base64 = renderer.ctx.canvas.toDataURL(\"image/png\");\r\n\t\t{\r\n\t\t\tlet elem = document.createElement(\"a\");\r\n\r\n\t\t\tlet name = `${filename ? (filename+\".\"):\"\"}${this.action}[${this.action_frame}].${this.emotion}[${this.emotion_frame}].png`;\r\n\r\n\t\t\telem.id = name;\r\n\t\t\telem.download = name;\r\n\t\t\telem.href = base64;\r\n\r\n\t\t\tdocument.body.appendChild(elem);\r\n\t\t\telem.click();\r\n\t\t\tdocument.body.removeChild(elem);\r\n\t\t}\r\n\r\n\t\t//restore Canvas2 size, current ctx is _ctx2\r\n\t\trenderer.ctx.canvas.width = c2w;\r\n\t\trenderer.ctx.canvas.height = c2h;\r\n\r\n\t\t// restore Canvas, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\treturn base64;\r\n\t}\r\n\t\r\n\tasync __texture_to_base64() {\r\n\t\tlet frag_list = this.__frag_list;\r\n\t\tlet tasks = [];\r\n\r\n\t\tfrag_list.forEach(function (ft) {\r\n\t\t\tif (!ft) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!ft._url.startsWith(\"data:\")) {\r\n\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\tft._url = await toDataURL(ft._url);\r\n\t\t\t\t\treturn ft;\r\n\t\t\t\t})());\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttasks.push(ft);\r\n\t\t\t}\r\n\t\t\tif (ft.graph2) {\r\n\t\t\t\tlet src = ft.graph2._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph2._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph2;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ft.graph3) {\r\n\t\t\t\tlet src = ft.graph3._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph3._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph3;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n}\r\nAddInitTask(CharacterRenderer.Init());\r\n\r\nfunction* circularSequence(length) {\r\n\tlet i = 0;\r\n\tfor (; i < length; ++i) {//a: 0, 1, 2, 3, ...b\r\n\t\tyield i;\r\n\t}\r\n\tfor (i -= 2; i > 0; --i) {//b: 2, 1, ...a\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction* linearSequence(length) {\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction extract_number(input) {\r\n\treturn String(input).match(/(-?\\d+\\.?\\d*)|(\\.\\d*)/g);\r\n}\r\n\r\n/**\r\n * image href to data url\r\n */\r\nfunction toDataURL(url) {\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tlet xhr = new XMLHttpRequest();\r\n\t\txhr.onload = function () {\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\treader.onloadend = function () {\r\n\t\t\t\tresolve(reader.result);\r\n\t\t\t}\r\n\t\t\treader.onerror = function (ev) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treject(ev);\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(xhr.response);\r\n\t\t};\r\n\t\txhr.open('GET', url);\r\n\t\txhr.responseType = 'blob';\r\n\t\txhr.send();\r\n\t});\r\n}\r\n","\r\nimport jQuery from \"jquery\";\r\n\r\nimport \"jquery-ui/themes/base/core.css\";\r\nimport \"jquery-ui/themes/base/theme.css\";\r\nimport \"jquery-ui/themes/base/selectable.css\";\r\nimport \"jquery-ui/themes/base/sortable.css\";\r\nimport \"jquery-ui/themes/base/draggable.css\";\r\n\r\nimport \"jquery-ui/ui/core\";\r\nimport \"jquery-ui/ui/widgets/selectable\";\r\nimport \"jquery-ui/ui/widgets/sortable\";\r\nimport \"jquery-ui/ui/widgets/draggable\";\r\nimport \"jquery-ui/ui/disable-selection\";\r\nimport \"jquery-ui/ui/position\";\r\nimport \"jquery-ui/ui/effect\";\r\n\r\nimport { } from \"./util.js\";\r\n\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nwindow.jQuery = jQuery;\r\nwindow.$ = jQuery;\r\n\r\nVue.config.productionTip = false;\r\n\r\nVue.use(Vuex);\r\n\r\nif (!window.onwheel) {\r\n\twindow.onwheel = function () {\r\n\t}\r\n}\r\n\r\nlet init_tasks = [];\r\n\r\nexport function AddInitTask(task) {\r\n\tinit_tasks.push(task);\r\n}\r\n\r\nexport function InitAll() {\r\n\tlet a = Promise.all(init_tasks);\r\n\tinit_tasks = [];\r\n\treturn a;\r\n}\r\n","\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\n\r\n\r\nexport class ChatBalloon {\r\n\tconstructor() {\r\n\t\tthis._raw = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {any} style\r\n\t */\r\n\tasync load(style) {\r\n\t\tconst _d_path = [this.constructor._base_path, style].join(\"/\");\r\n\t\t//const _i_path = _d_path;\r\n\t\t\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: await $get.data(_d_path),\r\n\t\t});\r\n\r\n\t\tthis.nw = new Sprite(this._raw.nw);\r\n\t\t//this.nw._url = _i_path + \"/nw\";\r\n\r\n\t\tthis.n = new Sprite(this._raw.n);\r\n\t\t//this.n._url = _i_path + \"/n\";\r\n\r\n\t\tthis.ne = new Sprite(this._raw.ne);\r\n\t\t//this.ne._url = _i_path + \"/ne\";\r\n\r\n\t\tthis.w = new Sprite(this._raw.w);\r\n\t\t//this.w._url = _i_path + \"/w\";\r\n\r\n\t\tthis.c = new Sprite(this._raw.c);\r\n\t\t//this.c._url = _i_path + \"/c\";\r\n\r\n\t\tthis.e = new Sprite(this._raw.e);\r\n\t\t//this.e._url = _i_path + \"/e\";\r\n\r\n\t\tthis.sw = new Sprite(this._raw.sw);\r\n\t\t//this.sw._url = _i_path + \"/sw\";\r\n\r\n\t\tthis.s = new Sprite(this._raw.s);\r\n\t\t//this.s._url = _i_path + \"/s\";\r\n\r\n\t\tthis.se = new Sprite(this._raw.se);\r\n\t\t//this.se._url = _i_path + \"/se\";\r\n\r\n\t\tthis.arrow = new Sprite(this._raw.arrow);\r\n\t\t//this.arrow._url = _i_path + \"/arrow\";\r\n\r\n\t\t//this._pat_c = ctx.createPattern(this.c, \"repeat\");\r\n\r\n\t\tChatBalloon.cache[style] = this;\r\n\t}\r\n\r\n\t/*\r\n\t1 12345 12345 1 : 5\r\n\t2 12345 12345 12345\r\n\t3 12345 12345 12345\r\n\t4 12345 12345 12345\r\n\t5 12345 12345 12345\r\n\t6 xxx12 34512 34\r\n\t */\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} text - length = chat.value.length + \" : \".length + name.length = 70 + 3 + name.length\r\n\t * @param {number} x - chat balloon arrow bottom pos.x\r\n\t * @param {number} y - chat balloon arrow bottom pos.y\r\n\t */\r\n\tdraw(renderer, text, x, y) {\r\n\t\tlet lines = [];\r\n\t\tfor (let i = 0; i < text.length; i += 12) {\r\n\t\t\tlet line = text.slice(i, i + 12);\r\n\t\t\tlines.push(line);\r\n\t\t}\r\n\t\tif (!lines.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst LINE_HEIGHT = this.c.height;// = fontSize(12) + PADDING_TOP(2)\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst PADDING_LEFT = 0, PADDING_TOP = 0, PADDING_RIGHT = 0, PADDING_BOTTOM = 0;\r\n\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"top\";//alphabetic\r\n\r\n\t\tconst _tw = lines.map(line => ctx.measureText(line).width + PADDING_LEFT + PADDING_RIGHT).sort((a, b) => b - a)[0];\r\n\t\tconst tw = Math.ceil(_tw / this.n.width) * this.n.width;\r\n\t\tconst hw = tw / 2;\r\n\t\tconst th = lines.length * LINE_HEIGHT + PADDING_TOP + PADDING_BOTTOM;\r\n\r\n\t\tx = Math.trunc((x - hw));\r\n\t\ty = Math.trunc((y - th) - this.arrow.height);\r\n\r\n\t\tthis.nw.draw2(x, y);\r\n\t\tthis.n._drawPattern(x, y, tw, this.n.height);\r\n\t\tthis.ne.draw2(x + tw, y);\r\n\r\n\t\tconst xw = this.w.width - this.w.x;\r\n\r\n\t\tthis.w._drawPattern(x + xw, y, this.w.width, th);\r\n\t\tthis.c._drawPattern(x + xw, y, tw, th);\r\n\t\tthis.e._drawPattern(x + xw + tw, y, this.e.width, th);\r\n\r\n\t\tconst arrow_hw = this.arrow.width / 2;\r\n\t\tconst hw_arrow_hw = hw - arrow_hw;\r\n\r\n\t\tthis.sw.draw2(x, y + th);\r\n\t\tthis.s._drawPattern(x, y + th, hw_arrow_hw, this.s.height);\r\n\t\tthis.s._drawPattern(x + hw + arrow_hw, y + th, hw_arrow_hw, this.s.height);\r\n\t\tthis.se.draw2(x + tw, y + th);\r\n\r\n\t\tthis.arrow.draw2i(x - arrow_hw + hw, y + th);\r\n\t\t\r\n\t\tfor (let i = 0, cy = y; i < lines.length; ++i, cy += LINE_HEIGHT) {\r\n\t\t\tlet line = lines[i];\r\n\r\n\t\t\t//if (this.constructor.DEBUG) {\r\n\t\t\t//\tctx.beginPath();\r\n\t\t\t//\tctx.strokeStyle = \"red\";\r\n\t\t\t//\tctx.strokeRect(x + PADDING_LEFT, cy + PADDING_TOP, tw, LINE_HEIGHT);\r\n\t\t\t//}\r\n\t\t\r\n\t\t\tctx.fillStyle = \"black\";\r\n\t\t\tctx.fillText(line, x + hw + PADDING_LEFT, cy + PADDING_TOP);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/UI/ChatBalloon\";\r\n\t}\r\n\r\n\t//static get DEBUG() {\r\n\t//\treturn false;\r\n\t//}\r\n}\r\n\r\n/** @type {{[style:number]:ChatBalloon}} */\r\nChatBalloon.cache = {};\r\n\r\nwindow.$images_ChatBalloon = ChatBalloon.cache;\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dialog-group Editor\",on:{\"contextmenu\":function($event){if($event.target !== $event.currentTarget){ return null; }$event.preventDefault();}}},[_c('ui-dialog',{attrs:{\"position\":_vm.wnds.menu.pos,\"width\":\"302px\"}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\tMenu\\n\\t\\t\")]),_vm._v(\" \"),[_c('details',{attrs:{\"open\":\"\"}},[_c('summary',[_vm._v(\"bgm\")]),_vm._v(\" \"),_c('div',{ref:\"bgm_outer\"})]),_vm._v(\" \"),_c('details',{attrs:{\"open\":\"\"}},[_c('summary',[_vm._v(\"window\")]),_vm._v(\" \"),_c('p'),_vm._l((_vm.wnds),function(wnd,key){return (!wnd.name.startsWith('$'))?_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(wnd.visable),expression:\"wnd.visable\"}],attrs:{\"type\":\"checkbox\",\"checked\":\"\"},domProps:{\"checked\":Array.isArray(wnd.visable)?_vm._i(wnd.visable,null)>-1:(wnd.visable)},on:{\"click\":function($event){_vm.$refs[key]?_vm.$refs[key].requireOrder($event):undefined},\"change\":function($event){var $$a=wnd.visable,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(wnd, \"visable\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(wnd, \"visable\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(wnd, \"visable\", $$c)}}}}),_vm._v(\" \"+_vm._s(wnd.name)+\"\\n\\t\\t\\t\\t\\t\\t\")])]):_vm._e()}),_vm._v(\" \"),_c('p')],2)],_vm._v(\" \"),[_c('details',[_c('summary',[_vm._v(\"scene\")]),_vm._v(\" \"),_c('p'),_c('div',[_c('label',[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t\\tMap \"),_c('input',{on:{\"keydown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }_vm.gv.scene_map.load($event.target.value.padStart(9, '0'))}}})])]),_vm._v(\" \"),_c('div',[_c('fieldset',[_c('legend',[_vm._v(\"map\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_is_rendering_map),expression:\"gv.m_is_rendering_map\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_is_rendering_map)?_vm._i(_vm.gv.m_is_rendering_map,null)>-1:(_vm.gv.m_is_rendering_map)},on:{\"change\":function($event){var $$a=_vm.gv.m_is_rendering_map,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_is_rendering_map\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_is_rendering_map\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_is_rendering_map\", $$c)}}}}),_vm._v(\"Map\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_back),expression:\"gv.m_display_back\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_back)?_vm._i(_vm.gv.m_display_back,null)>-1:(_vm.gv.m_display_back)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_back,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_back\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_back\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_back\", $$c)}}}}),_vm._v(\"back\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_front),expression:\"gv.m_display_front\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_front)?_vm._i(_vm.gv.m_display_front,null)>-1:(_vm.gv.m_display_front)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_front,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_front\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_front\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_front\", $$c)}}}}),_vm._v(\"front\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_mapobj),expression:\"gv.m_display_mapobj\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_mapobj)?_vm._i(_vm.gv.m_display_mapobj,null)>-1:(_vm.gv.m_display_mapobj)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_mapobj,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_mapobj\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_mapobj\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_mapobj\", $$c)}}}}),_vm._v(\"object\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_maptile),expression:\"gv.m_display_maptile\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_maptile)?_vm._i(_vm.gv.m_display_maptile,null)>-1:(_vm.gv.m_display_maptile)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_maptile,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_maptile\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_maptile\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_maptile\", $$c)}}}}),_vm._v(\"tile\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_portal),expression:\"gv.m_display_portal\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_portal)?_vm._i(_vm.gv.m_display_portal,null)>-1:(_vm.gv.m_display_portal)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_portal,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_portal\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_portal\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_portal\", $$c)}}}}),_vm._v(\"portal\")])]),_vm._v(\" \"),_c('fieldset',[_c('legend',[_vm._v(\"map\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_particle_system),expression:\"gv.m_display_particle_system\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_particle_system)?_vm._i(_vm.gv.m_display_particle_system,null)>-1:(_vm.gv.m_display_particle_system)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_particle_system,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_particle_system\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_particle_system\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_particle_system\", $$c)}}}}),_vm._v(\"particle system\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_skeletal_anim),expression:\"gv.m_display_skeletal_anim\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_skeletal_anim)?_vm._i(_vm.gv.m_display_skeletal_anim,null)>-1:(_vm.gv.m_display_skeletal_anim)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_skeletal_anim,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_skeletal_anim\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_skeletal_anim\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_skeletal_anim\", $$c)}}}}),_vm._v(\"skeletal animation\")])]),_vm._v(\" \"),_c('fieldset',[_c('legend',[_vm._v(\"life\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_life),expression:\"gv.m_display_life\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_life)?_vm._i(_vm.gv.m_display_life,null)>-1:(_vm.gv.m_display_life)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_life,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_life\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_life\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_life\", $$c)}}}}),_vm._v(\"life\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_player),expression:\"gv.m_display_player\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_player)?_vm._i(_vm.gv.m_display_player,null)>-1:(_vm.gv.m_display_player)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_player,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_player\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_player\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_player\", $$c)}}}}),_vm._v(\"player\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_other_player),expression:\"gv.m_display_other_player\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_other_player)?_vm._i(_vm.gv.m_display_other_player,null)>-1:(_vm.gv.m_display_other_player)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_other_player,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_other_player\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_other_player\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_other_player\", $$c)}}}}),_vm._v(\"other player\")])])]),_vm._v(\" \"),_c('p')]),_vm._v(\" \"),_c('details',[_c('summary',[_vm._v(\"editor\")]),_vm._v(\" \"),_c('p',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_foothold),expression:\"gv.m_display_foothold\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_foothold)?_vm._i(_vm.gv.m_display_foothold,null)>-1:(_vm.gv.m_display_foothold)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_foothold,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_foothold\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_foothold\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_foothold\", $$c)}}}}),_vm._v(\" foothold\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_selected_object),expression:\"gv.m_display_selected_object\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_selected_object)?_vm._i(_vm.gv.m_display_selected_object,null)>-1:(_vm.gv.m_display_selected_object)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_selected_object,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_selected_object\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_selected_object\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_selected_object\", $$c)}}}}),_vm._v(\" selected object\")])])]),_vm._v(\" \"),_c('details',[_c('summary',[_vm._v(\"debug\")]),_vm._v(\" \"),_c('p'),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_debug_info),expression:\"gv.m_display_debug_info\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_debug_info)?_vm._i(_vm.gv.m_display_debug_info,null)>-1:(_vm.gv.m_display_debug_info)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_debug_info,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_debug_info\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_debug_info\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_debug_info\", $$c)}}}}),_vm._v(\" debug info\")])]),_vm._v(\" \"),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_physics_debug),expression:\"gv.m_display_physics_debug\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_physics_debug)?_vm._i(_vm.gv.m_display_physics_debug,null)>-1:(_vm.gv.m_display_physics_debug)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_physics_debug,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_physics_debug\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_physics_debug\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_physics_debug\", $$c)}}}}),_vm._v(\" physics debug\")])]),_vm._v(\" \"),_vm._l((_vm.gv.m_debugDraw.flagNames),function(flagName){return _c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.gv.m_debugDraw[flagName]),expression:\"gv.m_debugDraw[flagName]\",modifiers:{\"number\":true}}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_debugDraw[flagName])?_vm._i(_vm.gv.m_debugDraw[flagName],null)>-1:(_vm.gv.m_debugDraw[flagName])},on:{\"change\":function($event){var $$a=_vm.gv.m_debugDraw[flagName],$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=_vm._n(null),$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv.m_debugDraw, flagName, $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv.m_debugDraw, flagName, $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv.m_debugDraw, flagName, $$c)}}}}),_vm._v(\" \"+_vm._s(flagName.slice(5)))])])}),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"axis length \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_debugDraw.axis_length),expression:\"gv.m_debugDraw.axis_length\"}],attrs:{\"type\":\"number\",\"step\":\"0.1\"},domProps:{\"value\":(_vm.gv.m_debugDraw.axis_length)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.gv.m_debugDraw, \"axis_length\", $event.target.value)}}})])]),_vm._v(\" \"),_c('p')],2)]],2),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.character_list.visable),expression:\"wnds.character_list.visable\"}],ref:\"character_list\",attrs:{\"position\":_vm.wnds.character_list.pos,\"width\":\"16.1em\",\"height\":\"50vh\"}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\t\\tCharacters\\n\\t\\t\\t\\t\"),(_vm.progressMaximum)?[_vm._v(\"\\n\\t\\t\\t\\t\\t[loading: \"+_vm._s(_vm.progressValue)+\" / \"+_vm._s(_vm.progressMaximum)+\"]\\n\\t\\t\\t\\t\")]:_vm._e()],2),_vm._v(\" \"),_c('template',{slot:\"content\"},[_c('div',{style:({filter: 'blur(' + (_vm.progressMaximum?3:0) + 'px)'})},[_c('div',[_c('span',[_vm._v(_vm._s(_vm.charaList.length)+\" characters\")]),_vm._v(\" \"),_c('div',{staticClass:\"chara-ls-btn-group\"},[_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Add new\"},on:{\"click\":_vm.addNewChara}},[_c('img',{attrs:{\"src\":\"images/toolstrip_character.png\",\"alt\":\"Add new\"}})]),_vm._v(\" \"),_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Add clone\"},on:{\"click\":_vm.addCloneChara}},[_c('img',{attrs:{\"src\":\"images/toolstrip_duplicate.png\",\"alt\":\"Add clone\"}})]),_vm._v(\" \"),_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Load\"},on:{\"click\":_vm.loadCharacters}},[_c('span',{staticClass:\"ui-icon ui-icon-folder-open\",attrs:{\"alt\":\"📂\"}})]),_vm._v(\" \"),_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Save all\"},on:{\"click\":_vm.saveCharacters}},[_c('img',{attrs:{\"src\":\"images/toolstrip_save_all.png\",\"alt\":\"Save all\"}})])])]),_vm._v(\" \"),_c('ui-sortable',{staticClass:\"ui-character-list\",attrs:{\"items\":_vm.charaList},on:{\"input\":_vm.oninput_sort},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar item = ref.item;\nvar index = ref.index;\nreturn [_c('li',{key:item.id,class:[(_vm.selected == item.id ? 'active':''), item.id].join(' '),attrs:{\"id\":item.id,\"title\":item.id},on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.selectChara(item.id)}}},[_c('table',{staticStyle:{\"width\":\"100%\"}},[_c('tr',{on:{\"contextmenu\":function($event){$event.preventDefault();_vm.openCharacterDLMenu($event, item.id);}}},[_c('td',[_vm._v(_vm._s(index))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(item.id))]),_vm._v(\" \"),_c('td',{staticStyle:{\"position\":\"relative\"}},[_c('ui-character',{attrs:{\"chara\":item.renderer}})],1)])])])]}}])})],1),_vm._v(\" \"),(_vm.progressMaximum)?_c('div',{staticClass:\"loading\"},[_c('div',[_c('progress',{attrs:{\"max\":_vm.progressMaximum},domProps:{\"value\":_vm.progressValue}}),_vm._v(\" \"),_c('div',[_vm._v(\"loading [\"+_vm._s(_vm.progressValue)+\" / \"+_vm._s(_vm.progressMaximum)+\"]\")])])]):_vm._e()])],2)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.character_attribute.visable),expression:\"wnds.character_attribute.visable\"}],ref:\"character_list\",attrs:{\"position\":_vm.wnds.character_attribute.pos,\"width\":\"20em\",\"height\":\"50vh\"}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\t\\tCharacter attribute\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('template',{slot:\"content\"},[(_vm.chara!=null)?_c('div',[_c('ui-character-attribute',{attrs:{\"sceneChara\":_vm.chara}})],1):_vm._e()])],2)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.spawnpoint.visable),expression:\"wnds.spawnpoint.visable\"}],ref:\"spawnpoint\",attrs:{\"position\":_vm.wnds.spawnpoint.pos,\"height\":\"50vh\"},on:{\"update:position\":function($event){_vm.$set(_vm.wnds.spawnpoint, \"pos\", $event)}}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\t\\tSpawn point\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('template',{slot:\"content\"},[_c('ui-mob-list',{on:{\"resize\":function($event){_vm.$refs.spawnpoint.reset_content_style()}}})],1)],2)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-equip-box',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.equip_box.visable),expression:\"wnds.equip_box.visable\"}],ref:\"equip_box\",attrs:{\"position\":_vm.wnds.equip_box.pos,\"width\":\"20em\",\"height\":400},on:{\"clickItem\":_vm.clickItem,\"hoverItem\":_vm.hoverItem,\"mouseleaveItem\":_vm.mouseleaveItem,\"faceColor\":_vm.faceColor,\"hairColor\":_vm.hairColor,\"hairColor2\":_vm.hairColor2,\"hairMix2\":_vm.hairMix2}})],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.mapEditorMode.startsWith('layered'))?[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.debug_window.visable),expression:\"wnds.debug_window.visable\"}],attrs:{\"position\":_vm.wnds.debug_window.pos,\"width\":\"40vw\",\"height\":\"70vh\"}},[_c('template',{slot:\"header\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mapEditorMode),expression:\"mapEditorMode\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.mapEditorMode=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"background\"}},[_vm._v(\"background\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"frontground\"}},[_vm._v(\"frontground\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredObject\"}},[_vm._v(\"layered object\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredTile\"}},[_vm._v(\"layered tile\")])]),_vm._v(\"\\n\\t\\t\\t\\t\\tmode \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.displayMode),expression:\"displayMode\"}],staticStyle:{\"width\":\"1.8em\"},attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"2\"},domProps:{\"value\":(_vm.displayMode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.displayMode=$event.target.value}}}),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){_vm.dirty++}}},[_vm._v(_vm._s(_vm.dirty))])]),_vm._v(\" \"),_c('template',{slot:\"content\"},[(_vm.scene_map() && _vm.scene_map()[_vm.mapEditorMode].length)?_c('div',{style:(_vm.wnd_debug_style)},[_c('div',{staticStyle:{\"background\":\"white\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.wnd_debug_style.background),expression:\"wnd_debug_style.background\"}],attrs:{\"type\":\"color\",\"title\":\"window background color\"},domProps:{\"value\":(_vm.wnd_debug_style.background)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.wnd_debug_style, \"background\", $event.target.value)}}}),_vm._v(\" \"),_c('label',[_vm._v(\"layer \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedLayer),expression:\"selectedLayer\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedLayer=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.scene_map()[_vm.mapEditorMode].length),function(layer){return _c('option',[_vm._v(_vm._s(layer - 1))])}))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.scene_map()[_vm.mapEditorMode][_vm.selectedLayer].length)+\" objs\")])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('ui-map-editor',{attrs:{\"objs\":_vm.scene_map()[_vm.mapEditorMode][_vm.selectedLayer],\"displayMode\":_vm.displayMode}})],1):_vm._e()])],2)]:[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.debug_window.visable),expression:\"wnds.debug_window.visable\"}],attrs:{\"position\":_vm.wnds.debug_window.pos,\"width\":\"40vw\",\"height\":\"70vh\"}},[_c('template',{slot:\"header\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mapEditorMode),expression:\"mapEditorMode\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.mapEditorMode=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"background\"}},[_vm._v(\"background\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"frontground\"}},[_vm._v(\"frontground\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredObject\"}},[_vm._v(\"layered object\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredTile\"}},[_vm._v(\"layered tile\")])]),_vm._v(\"\\n\\t\\t\\t\\t\\ttex info \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.displayMode),expression:\"displayMode\"}],staticStyle:{\"width\":\"1.8em\"},attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"2\"},domProps:{\"value\":(_vm.displayMode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.displayMode=$event.target.value}}}),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){_vm.dirty--}}},[_vm._v(_vm._s(_vm.dirty))])]),_vm._v(\" \"),_c('template',{slot:\"content\"},[(_vm.scene_map() && _vm.scene_map()[_vm.mapEditorMode].length)?_c('div',{style:(_vm.wnd_debug_style)},[_c('div',{staticStyle:{\"background\":\"white\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.wnd_debug_style.background),expression:\"wnd_debug_style.background\"}],attrs:{\"type\":\"color\"},domProps:{\"value\":(_vm.wnd_debug_style.background)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.wnd_debug_style, \"background\", $event.target.value)}}})]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('ui-map-editor',{attrs:{\"objs\":_vm.scene_map()[_vm.mapEditorMode],\"displayMode\":_vm.displayMode}})],1):_vm._e()])],2)]],2),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-menu',{ref:\"chara_dl_menu\",staticStyle:{\"position\":\"absolute\",\"width\":\"8em\",\"z-index\":\"99999\"},attrs:{\"show\":_vm.is_show_chara_dl_menu},on:{\"close\":_vm.closeCharacterDLMenu}},[(_vm.chara)?[_c('a',{on:{\"click\":_vm._save_as_png}},[_vm._v(\"Save as PNG\")]),_vm._v(\" \"),_c('a',{on:{\"click\":function($event){_vm.chara.renderer._save_as_svg()}}},[_vm._v(\"Save as SVG\")]),_vm._v(\" \"),(_vm.progressMaximum == 0 || _vm.progressValue >= _vm.progressMaximum)?[_c('a',{attrs:{\"href\":_vm.chara.renderer._outlink()}},[_vm._v(\"Outlink\")])]:[_c('div',{attrs:{\"title\":\"loading...\"}},[_vm._v(\"Outlink\")])],_vm._v(\" \"),_c('a',{on:{\"click\":_vm.copyCharaCode}},[_vm._v(\"Copy code\")])]:[_c('a',{staticClass:\"disable\"},[_vm._v(\"Save as SVG\")]),_vm._v(\" \"),_c('a',{staticClass:\"disable\",attrs:{\"href\":\"javascript:void(0)\"}},[_vm._v(\"Outlink\")]),_vm._v(\" \"),_c('a',{staticClass:\"disable\"},[_vm._v(\"Copy code\")])]],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<ul>\r\n\t\t<slot v-for=\"(item, index) in items\" :item=\"item\" :index=\"index\"></slot>\r\n\t</ul>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: ['items'],\r\n\t\t//render: function (createElement) {\r\n\t\t//\tlet es = [];\r\n\t\t//\tlet render = this.render;\r\n\t\t//\tif (render && this.order) {\r\n\t\t//\t\tfor (let i = 0; i < this.order.length; ++i) {\r\n\t\t//\t\t\tthis.i = i;\r\n\t\t//\t\t\tes.push(render.apply(this, arguments));\r\n\t\t//\t\t}\r\n\t\t//\t}\r\n\t\t//\treturn createElement(\"ul\", es);\r\n\t\t//},\r\n\t\tmethods: {\r\n\t\t\tgetValue: function () {\r\n\t\t\t\tlet order = $(this.$el).sortable(\"toArray\");\r\n\t\t\t\tif (order.length != this.items.length) {\r\n\t\t\t\t\tthrow new Error(\"Can't get value before update.\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet indices = {};\r\n\t\t\t\tfor (let i = 0; i < order.length; ++i) {\r\n\t\t\t\t\tindices[order[i]] = i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet new_list = [];\r\n\t\t\t\tfor (let i = 0; i < order.length; ++i) {\r\n\t\t\t\t\tconst id = order[i];\r\n\t\t\t\t\tnew_list[i] = this.items[indices[id]];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.$emit('update:items', new_list);\t//output value by async\r\n\t\t\t\tthis.$emit('input', new_list);\t\t\t//output value by event\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tlet that = this;\r\n\t\t\tlet $$el = $(this.$el);\r\n\t\t\t$$el.sortable({\r\n\t\t\t\tupdate: this.getValue.bind(this)\r\n\t\t\t});\r\n\t\t\t$$el.disableSelection();\r\n\t\t},\r\n\t\tbeforeUpdate: function () {\r\n\t\t\tthis.$nextTick(function () {//replace item from vue-component(<slot>) to jquery-ui-component($(this.$el))\r\n\t\t\t\tif (!this.items) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet $$el = $(this.$el);\r\n\t\t\t\tlet el = [];\r\n\t\t\t\tfor (let i = 0; i < this.items.length; ++i) {\r\n\t\t\t\t\tconst item = this.items[i];\r\n\t\t\t\t\tconst id = item.id;\r\n\t\t\t\t\tlet em = el[i] = $(\"#\" + id);\r\n\t\t\t\t\tem.remove();\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < el.length; ++i) {\r\n\t\t\t\t\t$$el.append(el);\r\n\t\t\t\t}\r\n\t\t\t\t$$el.sortable();\r\n\t\t\t});\r\n\t\t},\r\n\t\tupdated: function () {\r\n\t\t\t$(this.$el).sortable();//make sortable\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\titems: function (newValue) {\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-sortable.vue?vue&type=template&id=56a47896&\"\nimport script from \"./ui-sortable.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-sortable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-sortable.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_vm._l((_vm.items),function(item,index){return _vm._t(\"default\",null,{item:item,index:index})})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div :class=\"active ? 'active':''\"><slot></slot></div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tactive: false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\tdiv {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t.active {\r\n\t\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\r\n\t\tbackground-color: #ffec64;\r\n\t}\r\n</style>\r\n\r\n","import { render, staticRenderFns } from \"./ui-trigger.vue?vue&type=template&id=550d0e17&scoped=true&\"\nimport script from \"./ui-trigger.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-trigger.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"550d0e17\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.active ? 'active':''},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","﻿\r\nfunction default_position() {\r\n\treturn {\r\n\t\tx: 0,\t// my props\r\n\t\ty: 0,\t// my props\r\n\t\tmy: \"left top\",\t// my =\t`${h}+${x} ${v}+${y}`\r\n\t\tat: \"left top\",\r\n\t\t//of: selector,\r\n\t\tcollision: \"flip\",\r\n\t\t//using: null,\r\n\t\t//within: window,\r\n\t};\r\n}\r\n\r\nexport default {\r\n\tprops: {\r\n\t\tposition: {\r\n\t\t\tdefault: function () {\r\n\t\t\t\treturn default_position();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tcalcPosition: function (rel) {\r\n\t\t\tlet pos = Object.assign(default_position(), this.position);\r\n\t\t\tlet mypos;\r\n\r\n\t\t\tmypos = pos.my.replace(/[+-\\d]/g, \"\").split(\" \");\r\n\r\n\t\t\tif (mypos.length >= 2) {\r\n\t\t\t\tlet x = rel.x || pos.x;\r\n\t\t\t\tlet y = rel.y || pos.y;\r\n\r\n\t\t\t\tif (x > 0) {\r\n\t\t\t\t\tmypos[0] += \"+\" + x || \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (x < 0) {\r\n\t\t\t\t\tmypos[0] += x || \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (y > 0) {\r\n\t\t\t\t\tmypos[1] += \"+\" + y || \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < 0) {\r\n\t\t\t\t\tmypos[1] += y || \"\";\r\n\t\t\t\t}\r\n\t\t\t\tmypos = mypos.join(\" \");\r\n\t\t\t}\r\n\t\t\tpos.my = mypos;\r\n\r\n\t\t\t//if (!pos.of) {\r\n\t\t\t//\tpos.of = $(this.$el.parentElement);\r\n\t\t\t//}\r\n\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\tsetPosition: function (val) {\r\n\t\t\t$(this.$el).position(val);\r\n\t\t},\r\n\t},\r\n\twatch: {\r\n\t\t\"position\": {\r\n\t\t\thandler: function (val) {\r\n\t\t\t\tlet pos = this.calcPosition(val);\r\n\t\t\t\tif (!pos.of) {\r\n\t\t\t\t\tthis.setPosition(pos);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\talert(\"JQueryUI.position(option)\\nlost option.of:selector\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeep: true,\r\n\t\t},\r\n\t},\r\n};\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div class=\"menu-frame\"><!--outer element keep jquery-ui position-->\r\n\t\t<transition name=\"menu\">\r\n\t\t\t<div v-if=\"show\" class=\"menu\">\r\n\t\t\t\t<slot></slot>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport CorePosition from \"./CorePosition.js\"\r\n\t//function animation_show() {\r\n\t//\treturn {\r\n\t//\t\teffect: \"fade\",\r\n\t//\t\teasing: \"swing\",\r\n\t//\t\tduration: 400,\r\n\t//\t\t//complete: function () { },\r\n\t//\t\t//queue: function () { },\r\n\t//\t};\r\n\t//}\r\n\t//let CoreShow = {\r\n\t//\tprops: {\r\n\t//\t\tshow: {\r\n\t//\t\t\tdefault: true\r\n\t//\t\t},\r\n\t//\t\t\"opt-show\": {\r\n\t//\t\t\tdefault: function () {\r\n\t//\t\t\t\treturn animation_show();\r\n\t//\t\t\t}\r\n\t//\t\t},\r\n\t//\t\t\"opt-hide\": {\r\n\t//\t\t\tdefault: function () {\r\n\t//\t\t\t\treturn animation_show();\r\n\t//\t\t\t}\r\n\t//\t\t},\r\n\t//\t},\r\n\t//\twatch: {\r\n\t//\t\t\"show\": function (val) {\r\n\t//\t\t\tif (val) {\r\n\t//\t\t\t\t$(this.$el).show(this.optShow);\r\n\t//\t\t\t}\r\n\t//\t\t\telse {\r\n\t//\t\t\t\t$(this.$el).hide(this.optHide);\r\n\t//\t\t\t}\r\n\t//\t\t},\r\n\t//\t},\r\n\t//};\r\n\r\n\texport default {\r\n\t\tmixins: [CorePosition],\r\n\t\tprops: {\r\n\t\t\tshow: true\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\t_cp_onclick: null\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t\"show\": function (val) {\r\n\t\t\t\tif (val) {\r\n\t\t\t\t\tif (!this._cp_onclick) {\r\n\t\t\t\t\t\tthis._cp_onclick = (function () {\r\n\t\t\t\t\t\t\tthis.$emit(\"close\");\r\n\t\t\t\t\t\t}).bind(this);\r\n\t\t\t\t\t\t$(window).on(\"mousedown\", this._cp_onclick);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t$(window).off(\"mousedown\", this._cp_onclick);\r\n\t\t\t\t\tthis._cp_onclick = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\t//mounted: function () {\r\n\t\t//}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.menu-frame {\r\n\t\tuser-select: none;\r\n\t\tposition: absolute;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.menu {\r\n\t\tlist-style: none;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0em 0em;\r\n\t\tbackground: #f0f9ff;\r\n\t\tborder: 1px solid darkgray;\r\n\t\tbox-shadow: 0.2em 0.2em 0.2em darkgray;\r\n\t}\r\n\t.menu > *:not(hr) {\r\n\t\tdisplay: block;\r\n\t\tpadding: 0.25em 1em 0.25em 1em;\r\n\t\tbackground: #f0f9ff;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.menu > *.disable {\r\n\t\tcursor: not-allowed;\r\n\t\tcolor: darkgray;\r\n\t}\r\n\t.menu > *:not(.disable):not(hr):hover {\r\n\t\tbackground: linear-gradient(to bottom, #4096ee 0%,#4096ee 100%);\r\n\t\tbox-shadow: inset 0 0 1px #1e69de;\r\n\t}\r\n\t.menu > *:not(.disable):not(hr):active {\r\n\t\tbackground: linear-gradient(to bottom, #6db3f2 0%,#54a3ee 50%,#3690f0 51%,#1e69de 100%);\r\n\t\tbox-shadow: inset 0 0 1px #1e69de;\r\n\t}\r\n\t.menu > hr {\r\n\t\tmargin: 0.2em 0;\r\n\t}\r\n\r\n\t.menu-enter-active {\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\twhite-space: nowrap;\r\n\t\twidth: 100%;\r\n\t\theight: 5em;\r\n\t\ttransition: .3s;\r\n\t}\r\n\t.menu-enter {\r\n\t\topacity: 0;\r\n\t\theight: 0;\r\n\t\twidth: 0;\r\n\t}\r\n\t.menu-leave-active {\r\n\t\ttransition: .4s;\r\n\t}\r\n\t.menu-leave-to {\r\n\t\topacity: 0;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-menu.vue?vue&type=template&id=682e3945&\"\nimport script from \"./ui-menu.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-menu.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-menu.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"menu-frame\"},[_c('transition',{attrs:{\"name\":\"menu\"}},[(_vm.show)?_c('div',{staticClass:\"menu\"},[_vm._t(\"default\")],2):_vm._e()])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ui-draggable',{staticClass:\"ui-dialog ui-equip-box\",attrs:{\"zIndex\":_vm.zIndex,\"position\":_vm.position}},[(_vm.minimum)?_c('div',{staticClass:\"header\",style:(_vm.header_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[_vm._v(\"\\n\\t\\tEquip box\\n\\t\\t\"),_c('div',{staticClass:\"header-buttons\"},[_c('button',{staticClass:\"header-button\",on:{\"click\":function($event){_vm.minimum=!_vm.minimum}}},[_c('span',{staticClass:\"ui-icon ui-icon-plus\"})])])]):_c('div',{staticClass:\"header btn-group\",style:(_vm.header_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[_c('div',{staticClass:\"header\",staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"\\n\\t\\t\\tEquip box\\n\\t\\t\\t\"),_c('div',{staticClass:\"header-buttons\"},[_c('button',{staticClass:\"header-button\",on:{\"click\":function($event){_vm.minimum=!_vm.minimum}}},[_c('span',{staticClass:\"ui-icon ui-icon-minus\"})])])]),_vm._v(\" \"),_c('div',[_vm._m(0)]),_vm._v(\" \"),_c('div',{staticClass:\"button-area\",staticStyle:{\"background\":\"lightgray\"}},[_c('ui-button-group',{staticClass:\"filters\",attrs:{\"type\":\"checkbox\",\"buttons\":_vm.filter_buttons,\"active\":_vm.filters},on:{\"update:active\":function($event){_vm.filters=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('img',{attrs:{\"src\":(\"images/toolstrip_\" + value + \".png\"),\"alt\":text}})]}}])}),_vm._v(\" \"),(_vm._is_category_face())?_c('ui-button-group',{staticClass:\"face_color\",attrs:{\"type\":\"radio\",\"buttons\":_vm.face_color_buttons,\"active\":_vm.face_color},on:{\"update:active\":function($event){_vm.face_color=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('span',{style:({background: '#'+value}),attrs:{\"value\":value,\"title\":(value + \". \" + text + \"色臉型\")}},[_vm._v(_vm._s(text))])]}}])}):_vm._e(),_vm._v(\" \"),(_vm._is_category_hair())?[_c('ui-button-group',{staticClass:\"hair_color\",attrs:{\"type\":\"radio\",\"buttons\":_vm.hair_color_buttons,\"active\":_vm.hair_color},on:{\"update:active\":function($event){_vm.hair_color=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('span',{style:({background: '#'+value}),attrs:{\"value\":value,\"title\":(value + \". \" + text + \"色髮型 (\" + value + \")\")}},[_vm._v(_vm._s(text))])]}}])}),_vm._v(\" \"),_c('table',{staticClass:\"hair_color\",staticStyle:{\"font-family\":\"monospace\",\"text-shadow\":\"0 0 5px white\",\"border-spacing\":\"1px\"}},[_c('tr',[_c('td',{style:(_vm.getHairMixColor1CSS())},[_c('span',{staticStyle:{\"width\":\"3em\",\"display\":\"inline-block\"}},[_vm._v(_vm._s(String(100-_vm.hair_mix2))+\"%\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"100%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.hair_mix2),expression:\"hair_mix2\",modifiers:{\"number\":true}}],staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"100\",\"step\":\"1\"},domProps:{\"value\":(_vm.hair_mix2)},on:{\"__r\":function($event){_vm.hair_mix2=_vm._n($event.target.value)},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',{style:(_vm.getHairMixColor2CSS())},[_c('span',{staticStyle:{\"width\":\"3em\",\"display\":\"inline-block\"}},[_vm._v(_vm._s(String(_vm.hair_mix2))+\"%\")])])])]),_vm._v(\" \"),_c('ui-button-group',{staticClass:\"hair_color\",attrs:{\"type\":\"radio\",\"buttons\":_vm.hair_color_buttons,\"active\":_vm.hair_color2},on:{\"update:active\":function($event){_vm.hair_color2=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('span',{style:({background: '#'+value}),attrs:{\"value\":value,\"title\":(value + \". \" + text + \"色髮型 (\" + value + \")\")}},[_vm._v(_vm._s(text))])]}}])})]:_vm._e()],2),_vm._v(\" \"),(_vm.__count_of_item_in_page > 0)?_c('div',{staticClass:\"header pagination top\"},[_vm._l((_vm.__count_of_page),function(i){return [(_vm.page == (i-1))?_c('a',{staticClass:\"active\",attrs:{\"title\":i - 1}},[_vm._v(_vm._s(i))]):_c('a',{attrs:{\"title\":i - 1,\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.change_page(i - 1)}}},[_vm._v(_vm._s(i))])]})],2):_vm._e()]),_vm._v(\" \"),_c('div',{ref:\"content\",staticClass:\"content\",style:(_vm.content_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[(_vm.__count_of_item_in_page > 0)?[(_vm.displayMode==false)?[_c('ul',{staticClass:\"item-list\",staticStyle:{\"width\":\"calc(6*48px)\"}},[_vm._l((_vm.__count_of_item_in_page),function(i){return [_c('li',{key:_vm.__get_item_id(i - 1),staticClass:\"list-item\",attrs:{\"id\":'item' + _vm.__get_item_id(i - 1)},on:{\"click\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.clickItem($event,i-1)},\"mousemove\":function($event){_vm.hoverItem($event,i-1)},\"mouseleave\":function($event){_vm.mouseleaveItem($event,i-1)}}},[_c('table',{staticClass:\"item-detail\",on:{\"contextmenu\":function($event){$event.preventDefault();}}},[_c('tr',[_c('td',{staticClass:\"item-icon-outer-frame\",attrs:{\"rowspan\":\"2\"}},[_c('div',{staticClass:\"item-icon-frame\",on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyImageUrl($event, _vm.__get_item_id(i - 1))}}},[_c('img',{attrs:{\"src\":_vm.__get_item_icon_url(i - 1)},on:{\"error\":function($event){_vm.__face_or_hair_img_onerror(i - 1)}}})])]),_vm._v(\" \"),_c('td',{on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyInnerText($event)}}},[_c('div',{staticClass:\"item-name\",style:(_vm.__get_item(i - 1).$foreign?'color: red':'')},[_vm._v(_vm._s(_vm.__get_item_name(i - 1)))])])]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"item-id\",on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyInnerText($event)}}},[_vm._v(_vm._s(_vm.__get_item_id(i - 1)))])])])])]})],2)]:[_c('div',{staticClass:\"item-list-sm\",style:({width: (\"calc(\" + (_vm.column_count + 1) + \"*48px)\")})},[_vm._l((_vm.__count_of_item_in_page),function(i){return [_c('div',{key:_vm.__get_item_id(i - 1),staticClass:\"list-item-sm\",attrs:{\"id\":'item' + _vm.__get_item_id(i - 1)},on:{\"contextmenu\":function($event){$event.preventDefault();},\"click\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.clickItem($event,i-1)},\"mousemove\":function($event){_vm.hoverItem($event,i-1)},\"mouseleave\":function($event){_vm.mouseleaveItem($event,i-1)}}},[_c('table',{staticClass:\"item-detail\"},[_c('tr',[_c('td',{staticClass:\"item-icon-outer-frame\"},[_c('div',{staticClass:\"item-icon-frame-sm\",on:{\"mousedown\":[function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyText($event, _vm.__get_item_name(i - 1))},function($event){if('button' in $event && $event.button !== 1){ return null; }$event.preventDefault();_vm.copyText($event, _vm.__get_item_id(i - 1))}]}},[_c('img',{attrs:{\"src\":_vm.__get_item_icon_url(i - 1)},on:{\"error\":function($event){_vm.__face_or_hair_img_onerror(i - 1)}}})])])])])])]})],2)]]:[_c('div',{pre:true,attrs:{\"style\":\"cursor: default;\"}},[_vm._v(\"\\n\\t\\t\\t\\tNo search item\\n\\t\\t\\t\")])]],2),_vm._v(\" \"),(!_vm.minimum)?_c('div',{staticClass:\"footer\",style:(_vm.header_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[(!_vm.minimum)?_c('div',{staticStyle:{\"text-align\":\"center\"}},[(_vm.__count_of_item_in_page > 0)?_c('div',{staticClass:\"pagination bottom\"},[_vm._l((_vm.__count_of_page),function(i){return [(_vm.page == (i-1))?_c('a',{staticClass:\"active\",attrs:{\"title\":i - 1}},[_vm._v(_vm._s(i))]):_c('a',{attrs:{\"title\":i - 1,\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.change_page(i - 1)}}},[_vm._v(_vm._s(i))])]})],2):_vm._e()]):_vm._e()]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"display\":\"inline-flex\",\"width\":\"100%\"}},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selected_category),expression:\"selected_category\"}],staticStyle:{\"flex\":\"1\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selected_category=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_vm._l((_vm.categoryGroupList),function(og,key){return [(og.length>1)?[_c('optgroup',{attrs:{\"label\":key}},_vm._l((og),function(cat){return _c('option',{domProps:{\"value\":cat.id_prefix}},[_vm._v(_vm._s(cat.categoryName))])}))]:[_c('option',{domProps:{\"value\":og[0].id_prefix}},[_vm._v(_vm._s(og[0].categoryName))])]]})],2),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search_text),expression:\"search_text\"}],ref:\"input_search\",attrs:{\"type\":\"search\",\"list\":\"search_param\"},domProps:{\"value\":(_vm.search_text)},on:{\"keydown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchNextText($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.search_text=$event.target.value}}}),_vm._v(\" \"),_c('datalist',{attrs:{\"id\":\"search_param\"}},[_c('option',{attrs:{\"value\":\"劍\"}},[_vm._v(\"item Name\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"01302000\"}},[_vm._v(\"item ID\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"<attr>:/<regexp>/\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"$style:/21158/\"}},[_vm._v(\"face | hair\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"$foreign:/true/\"}},[_vm._v(\"external resource\")]),_vm._v(\" \"),_c('option',{domProps:{\"value\":'__v:/'+_vm.DATA_TAG_VERSION+'/'}},[_vm._v(\"current version\")])]),_vm._v(\" \"),_c('div',{staticStyle:{\"position\":\"relative\",\"display\":\"inline-block\"}},[_c('button',{directives:[{name:\"ui\",rawName:\"v-ui:show.mouseenter\",value:(200),expression:\"200\",arg:\"show\",modifiers:{\"mouseenter\":true}},{name:\"ui\",rawName:\"v-ui:hide.mouseleave\",value:(200),expression:\"200\",arg:\"hide\",modifiers:{\"mouseleave\":true}},{name:\"ui\",rawName:\"v-ui:ref\",value:('setting'),expression:\"'setting'\",arg:\"ref\"}],staticStyle:{\"padding\":\"0\"}},[_c('span',{staticClass:\"ui-icon ui-icon-gear\"})]),_vm._v(\" \"),_c('div',{directives:[{name:\"ui\",rawName:\"v-ui:hide\",arg:\"hide\"},{name:\"ui\",rawName:\"v-ui:show.mouseenter\",value:(200),expression:\"200\",arg:\"show\",modifiers:{\"mouseenter\":true}},{name:\"ui\",rawName:\"v-ui:hide.mouseleave\",value:(200),expression:\"200\",arg:\"hide\",modifiers:{\"mouseleave\":true}},{name:\"ui\",rawName:\"v-ui:ref\",value:('setting'),expression:\"'setting'\",arg:\"ref\"}],ref:\"setting\",staticStyle:{\"position\":\"absolute\",\"left\":\"0\",\"top\":\"0\",\"background\":\"#e9e9e9\",\"border\":\"1px solid #ddd\",\"width\":\"12em\",\"text-align\":\"left\",\"padding\":\"0.25em 0.5em\"}},[_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.onlyShowSearchResult),expression:\"onlyShowSearchResult\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.onlyShowSearchResult)?_vm._i(_vm.onlyShowSearchResult,null)>-1:(_vm.onlyShowSearchResult)},on:{\"change\":function($event){var $$a=_vm.onlyShowSearchResult,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.onlyShowSearchResult=$$a.concat([$$v]))}else{$$i>-1&&(_vm.onlyShowSearchResult=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.onlyShowSearchResult=$$c}}}}),_vm._v(\"Only show result of search\")])]),_vm._v(\" \"),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.displayMode),expression:\"displayMode\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.displayMode)?_vm._i(_vm.displayMode,null)>-1:(_vm.displayMode)},on:{\"change\":function($event){var $$a=_vm.displayMode,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.displayMode=$$a.concat([$$v]))}else{$$i>-1&&(_vm.displayMode=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.displayMode=$$c}}}}),_vm._v(\"display: \"+_vm._s(_vm.displayMode ? \"plain\":\"list\"))])])])])])}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div class=\"ui-button-group\">\r\n\t\t<button v-for=\"(item, index) in buttons\" :data-id=\"index\" @click=\"onclick(index)\" :style=\"item.style\">\r\n\t\t\t<slot :text=\"item.text\" :value=\"item.value\" :index=\"index\"></slot>\r\n\t\t</button>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tbuttons: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'checkbox'\r\n\t\t\t},\r\n\t\t\tactive: {\r\n\t\t\t\ttype: [Number, Array],\r\n\t\t\t\trequired: false\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tonclick: function (id) {\r\n\t\t\t\tlet selected;\r\n\r\n\t\t\t\tif (this.type == 'checkbox') {\r\n\t\t\t\t\tconst index = this.active.indexOf(id);\r\n\t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\tselected = [...this.active];\r\n\t\t\t\t\t\tselected.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tselected = [...this.active, id];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst buttons = this.buttons;\r\n\t\t\t\t\tlet btns = selected.map(function (id) {\r\n\t\t\t\t\t\treturn buttons[id];\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.$emit('update:active', selected);\r\n\t\t\t\t\tthis.$emit('change', btns);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.$emit('update:active', id);\r\n\t\t\t\t\tthis.$emit('change', this.buttons[id]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_update_element: function () {\r\n\t\t\t\tlet actives;\r\n\t\t\t\tif (this.type == 'checkbox') {\r\n\t\t\t\t\tif (!this.active) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactives = this.active;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!Number.isInteger(this.active)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactives = [this.active];\r\n\t\t\t\t}\r\n\t\t\t\tlet $el = this.$el;\r\n\r\n\t\t\t\tlet $all_active = [...this.$el.querySelectorAll(\".active\")];\r\n\t\t\t\tlet selected = $all_active.forEach(function (elem) {\r\n\t\t\t\t\telem.classList.remove(\"active\");\r\n\t\t\t\t});\r\n\r\n\t\t\t\tactives.forEach(function (id) {\r\n\t\t\t\t\tlet elem = $el.querySelector(`[data-id=\"${id}\"]`);\r\n\t\t\t\t\tif (elem) {\r\n\t\t\t\t\t\telem.classList.toggle(\"active\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tactive: function () {\r\n\t\t\t\tthis._update_element();\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis._update_element();\r\n\t\t},\r\n\t};\r\n\t//<slot v-for=\"(value, key) in buttons\" :value=\"value\" :key=\"key\"></slot>\r\n</script>\r\n\r\n<style>\r\n\t.ui-button-group input[type=\"radio\"] {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.ui-button-group {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.ui-button-group button {\r\n\t\tflex: 1;\r\n\t\tpadding: 0;\r\n\t\toutline: none;\r\n\t}\r\n\t/*.ui-button-group button > * {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}*/\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-button-group.vue?vue&type=template&id=44abfdf6&\"\nimport script from \"./ui-button-group.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-button-group.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-button-group.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ui-button-group\"},_vm._l((_vm.buttons),function(item,index){return _c('button',{style:(item.style),attrs:{\"data-id\":index},on:{\"click\":function($event){_vm.onclick(index)}}},[_vm._t(\"default\",null,{text:item.text,value:item.value,index:index})],2)}))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<ui-draggable class=\"ui-dialog ui-equip-box\" :zIndex=\"zIndex\" :position=\"position\">\r\n\t\t<div v-if=\"minimum\" @mousedown.left=\"requireOrder($event)\" class=\"header\" :style=\"header_style\">\r\n\t\t\tEquip box\r\n\t\t\t<div class=\"header-buttons\">\r\n\t\t\t\t<button @click=\"minimum=!minimum\"\r\n\t\t\t\t\t\tclass=\"header-button\">\r\n\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-plus\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div v-else @mousedown.left=\"requireOrder($event)\" class=\"header btn-group\" :style=\"header_style\">\r\n\t\t\t<div class=\"header\" style=\"text-align: left;\">\r\n\t\t\t\tEquip box\r\n\t\t\t\t<div class=\"header-buttons\">\r\n\t\t\t\t\t<button @click=\"minimum=!minimum\"\r\n\t\t\t\t\t\t\tclass=\"header-button\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-minus\"></span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<div v-once style=\"display: inline-flex; width: 100%;\">\r\n\t\t\t\t\t<select v-model=\"selected_category\" style=\"flex: 1;\">\r\n\t\t\t\t\t\t<template v-for=\"(og,key) in categoryGroupList\">\r\n\t\t\t\t\t\t\t<template v-if=\"og.length>1\">\r\n\t\t\t\t\t\t\t\t<optgroup :label=\"key\">\r\n\t\t\t\t\t\t\t\t\t<option v-for=\"cat in og\" :value=\"cat.id_prefix\">{{cat.categoryName}}</option>\r\n\t\t\t\t\t\t\t\t</optgroup>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t\t<option :value=\"og[0].id_prefix\">{{og[0].categoryName}}</option>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<input ref=\"input_search\" type=\"search\" v-model=\"search_text\" @keydown.enter=\"searchNextText\" list=\"search_param\" />\r\n\t\t\t\t\t<datalist id=\"search_param\">\r\n\t\t\t\t\t\t<option value=\"劍\">item Name</option>\r\n\t\t\t\t\t\t<option value=\"01302000\">item ID</option>\r\n\t\t\t\t\t\t<option value=\"<attr>:/<regexp>/\"></option>\r\n\t\t\t\t\t\t<option value=\"$style:/21158/\">face | hair</option>\r\n\t\t\t\t\t\t<option value=\"$foreign:/true/\">external resource</option>\r\n\t\t\t\t\t\t<option :value=\"'__v:/'+DATA_TAG_VERSION+'/'\">current version</option>\r\n\t\t\t\t\t</datalist>\r\n\t\t\t\t\t<div style=\"position: relative; display: inline-block;\">\r\n\t\t\t\t\t\t<button v-ui:show.mouseenter=\"200\" v-ui:hide.mouseleave=\"200\" v-ui:ref=\"'setting'\" style=\"padding: 0;\">\r\n\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-gear\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div v-ui:hide v-ui:show.mouseenter=\"200\" v-ui:hide.mouseleave=\"200\" v-ui:ref=\"'setting'\" ref=\"setting\"\r\n\t\t\t\t\t\t\t style=\"position: absolute; left: 0; top: 0; background: #e9e9e9; border: 1px solid #ddd; width: 12em; text-align:left; padding: 0.25em 0.5em;\">\r\n\t\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"onlyShowSearchResult\" />Only show result of search</label></div>\r\n\t\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"displayMode\" />display: {{displayMode ? \"plain\":\"list\"}}</label></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"button-area\" style=\"background: lightgray;\">\r\n\t\t\t\t<ui-button-group type=\"checkbox\" :buttons=\"filter_buttons\" :active.sync=\"filters\" class=\"filters\">\r\n\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t<img :src=\"`images/toolstrip_${value}.png`\" :alt=\"text\" />\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</ui-button-group>\r\n\r\n\t\t\t\t<ui-button-group v-if=\"_is_category_face()\" type=\"radio\" :buttons=\"face_color_buttons\" :active.sync=\"face_color\" class=\"face_color\">\r\n\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t<span :value=\"value\" :title=\"`${value}. ${text}色臉型`\" :style=\"{background: '#'+value}\">{{text}}</span>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</ui-button-group>\r\n\r\n\t\t\t\t<template v-if=\"_is_category_hair()\">\r\n\t\t\t\t\t<ui-button-group type=\"radio\" :buttons=\"hair_color_buttons\" :active.sync=\"hair_color\" class=\"hair_color\">\r\n\t\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t\t<span :value=\"value\" :title=\"`${value}. ${text}色髮型 (${value})`\" :style=\"{background: '#'+value}\">{{text}}</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</ui-button-group>\r\n\t\t\t\t\t<table class=\"hair_color\" style=\"font-family: monospace; text-shadow: 0 0 5px white; border-spacing: 1px;\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td :style=\"getHairMixColor1CSS()\"><span style=\"width: 3em; display: inline-block;\">{{String(100-hair_mix2)}}%</span></td>\r\n\t\t\t\t\t\t\t<td style=\"width: 100%;\"><input type=\"range\" min=\"0\" max=\"100\" step=\"1\" v-model.number=\"hair_mix2\" style=\"width: 100%;\" /></td>\r\n\t\t\t\t\t\t\t<td :style=\"getHairMixColor2CSS()\"><span style=\"width: 3em; display: inline-block;\">{{String(hair_mix2)}}%</span></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t<ui-button-group type=\"radio\" :buttons=\"hair_color_buttons\" :active.sync=\"hair_color2\" class=\"hair_color\">\r\n\t\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t\t<span :value=\"value\" :title=\"`${value}. ${text}色髮型 (${value})`\" :style=\"{background: '#'+value}\">{{text}}</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</ui-button-group>\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div v-if=\"__count_of_item_in_page > 0\" class=\"header pagination top\">\r\n\t\t\t\t<template v-for=\"i in __count_of_page\">\r\n\t\t\t\t\t<a v-if=\"page == (i-1)\" :title=\"i - 1\" class=\"active\">{{i}}</a>\r\n\t\t\t\t\t<a v-else @click.prevent=\"change_page(i - 1)\" :title=\"i - 1\" href=\"#\">{{i}}</a>\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div ref=\"content\" @mousedown.left=\"requireOrder($event)\" :style=\"content_style\" class=\"content\">\r\n\t\t\t<template v-if=\"__count_of_item_in_page > 0\">\r\n\t\t\t\t<template v-if=\"displayMode==false\">\r\n\t\t\t\t\t<ul class=\"item-list\" style=\"width: calc(6*48px);\">\r\n\t\t\t\t\t\t<template v-for=\"i in __count_of_item_in_page\">\r\n\t\t\t\t\t\t\t<li :key=\"__get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t:id=\"'item' + __get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t@click.left=\"clickItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t@mousemove=\"hoverItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t@mouseleave=\"mouseleaveItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\tclass=\"list-item\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<table @contextmenu.prevent class=\"item-detail\">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan=\"2\" class=\"item-icon-outer-frame\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div @mousedown.right=\"copyImageUrl($event, __get_item_id(i - 1))\" class=\"item-icon-frame\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img :src=\"__get_item_icon_url(i - 1)\" @error=\"__face_or_hair_img_onerror(i - 1)\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td @mousedown.right=\"copyInnerText($event)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"item-name\" :style=\"__get_item(i - 1).$foreign?'color: red':''\">{{__get_item_name(i - 1)}}</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td @mousedown.right=\"copyInnerText($event)\" class=\"item-id\">{{__get_item_id(i - 1)}}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t<div class=\"item-list-sm\" :style=\"{width: `calc(${column_count + 1}*48px)`}\">\r\n\t\t\t\t\t\t<template v-for=\"i in __count_of_item_in_page\">\r\n\t\t\t\t\t\t\t<div @contextmenu.prevent :key=\"__get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t :id=\"'item' + __get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t @click.left=\"clickItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t @mousemove=\"hoverItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t @mouseleave=\"mouseleaveItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t class=\"list-item-sm\"\r\n\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t<table class=\"item-detail\">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td class=\"item-icon-outer-frame\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div @mousedown.right=\"copyText($event, __get_item_name(i - 1))\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t @mousedown.middle.prevent=\"copyText($event, __get_item_id(i - 1))\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t class=\"item-icon-frame-sm\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img :src=\"__get_item_icon_url(i - 1)\" @error=\"__face_or_hair_img_onerror(i - 1)\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<div v-pre style=\"cursor: default;\">\r\n\t\t\t\t\tNo search item\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<div v-if=\"!minimum\" @mousedown.left=\"requireOrder($event)\" class=\"footer\" :style=\"header_style\">\r\n\t\t\t<div v-if=\"!minimum\" style=\"text-align: center;\">\r\n\t\t\t\t<div v-if=\"__count_of_item_in_page > 0\" class=\"pagination bottom\">\r\n\t\t\t\t\t<template v-for=\"i in __count_of_page\">\r\n\t\t\t\t\t\t<a v-if=\"page == (i-1)\" :title=\"i - 1\" class=\"active\">{{i}}</a>\r\n\t\t\t\t\t\t<a v-else @click.prevent=\"change_page(i - 1)\" :title=\"i - 1\" href=\"#\">{{i}}</a>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!--<div style=\"background: lightgray;\">\r\n\t\t\t\t\t<p>selected_category: {{selected_category}}</p>\r\n\t\t\t\t\t<p>search_item: {{search_item}}</p>\r\n\t\t\t\t\t<p>filters: {{filters}}</p>\r\n\t\t\t\t\t<p>face_color: {{face_color}}</p>\r\n\t\t\t\t\t<p>hair_color: {{hair_color}}</p>\r\n\t\t\t\t</div>-->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ui-draggable>\r\n</template>\r\n\r\n<script>\r\n\timport Vuex from 'vuex';\r\n\r\n\timport UIDraggable from \"../components/ui-draggable.vue\";\r\n\timport UIDialog from \"../components/ui-dialog.vue\";\r\n\timport UIButtonGroup from '../components/ui-button-group.vue';\r\n\r\n\timport { ItemCategoryInfo, ResourceManager, ItemAttrNormalize, CharacterRenderConfig } from '../../public/javascripts/resource.js';\r\n\r\n\tfunction emSize(socpe) {\r\n\t\tlet scopeTest = document.createElement(\"div\");\r\n\t\tscopeTest.style.position = \"fixed\";\r\n\t\tscopeTest.style.left = \"0\";\r\n\t\tscopeTest.style.top = \"0\";\r\n\t\tscopeTest.style.height = \"1em\";\r\n\t\tscopeTest.style.width = \"1em\";\r\n\t\tsocpe.appendChild(scopeTest);\r\n\t\tlet scopeVal = scopeTest.clientHeight;\r\n\t\tdocument.body.remove(scopeTest);\r\n\t\treturn scopeVal;\r\n\t};\r\n\r\n\tlet filter_buttons = [\r\n\t\t{ text: \"Cash\", value: \"cash\", style: {} },\r\n\t\t{ text: \"Standard\", value: \"standard\", style: {} },\r\n\t\t{ text: \"Female\", value: \"female\", style: {} },\r\n\t\t{ text: \"Male\", value: \"male\", style: {} },\r\n\t\t{ text: \"Universal\", value: \"neutral\", style: {} },\r\n\t\t{ text: \"Unlimited\", value: \"unlimited\", style: {} },\r\n\t\t{ text: \"Beginner\", value: \"beginner\", style: {} },\r\n\t\t{ text: \"Warrior\", value: \"warrior\", style: {} },\r\n\t\t{ text: \"Magician\", value: \"magician\", style: {} },\r\n\t\t{ text: \"Bowman\", value: \"bowman\", style: {} },\r\n\t\t{ text: \"Thief\", value: \"thief\", style: {} },\r\n\t\t{ text: \"Pirate\", value: \"pirate\", style: {} },\r\n\t];\r\n\r\n\tconst face_color_buttons = [\r\n\t\t{ text: \"黑\", value: \"0\", style: { background: \"#333333\" } },\r\n\t\t{ text: \"藍\", value: \"1\", style: { background: \"#0000ff\" } },\r\n\t\t{ text: \"紅\", value: \"2\", style: { background: \"#ff0000\" } },\r\n\t\t{ text: \"綠\", value: \"3\", style: { background: \"#00ff00\" } },\r\n\t\t{ text: \"棕\", value: \"4\", style: { background: \"#804040\" } },\r\n\t\t{ text: \"青\", value: \"5\", style: { background: \"#00ffc0\" } },\r\n\t\t{ text: \"紫\", value: \"6\", style: { background: \"#8000ff\" } },\r\n\t\t{ text: \"粉\", value: \"7\", style: { background: \"#ff00ff\" } },\r\n\t\t{ text: \"銀\", value: \"8\", style: { background: \"#C0C0C0\" } },\r\n\t];\r\n\r\n\tconst hair_color_buttons = [\r\n\t\t{ text: \"黑\", value: \"0\", style: { background: \"#333333\" } },\r\n\t\t{ text: \"紅\", value: \"1\", style: { background: \"#ff0000\" } },\r\n\t\t{ text: \"橙\", value: \"2\", style: { background: \"#ff8040\" } },\r\n\t\t{ text: \"黃\", value: \"3\", style: { background: \"#ffff00\" } },\r\n\t\t{ text: \"綠\", value: \"4\", style: { background: \"#00ff00\" } },\r\n\t\t{ text: \"藍\", value: \"5\", style: { background: \"#0000ff\" } },\r\n\t\t{ text: \"紫\", value: \"6\", style: { background: \"#8000ff\" } },\r\n\t\t{ text: \"棕\", value: \"7\", style: { background: \"#804040\" } },\r\n\t];\r\n\r\n\tconst face_color_buttons_en = [\r\n\t\t{ text: \"Black\", value: \"0\", style: { background: \"#111111\" } },\r\n\t\t{ text: \"Blue\", value: \"1\", style: { background: \"#0000ff\" } },\r\n\t\t{ text: \"Red\", value: \"2\", style: { background: \"#ff0000\" } },\r\n\t\t{ text: \"Green\", value: \"3\", style: { background: \"#00ff00\" } },\r\n\t\t{ text: \"Hazel\", value: \"4\", style: { background: \"#804040\" } },\r\n\t\t{ text: \"Sapphire\", value: \"5\", style: { background: \"#00ffc0\" } },\r\n\t\t{ text: \"Violet\", value: \"6\", style: { background: \"#8000ff\" } },\r\n\t\t{ text: \"Amethyst\", value: \"7\", style: { background: \"#ff00ff\" } },\r\n\t\t{ text: \"White\", value: \"8\", style: { background: \"#C0C0C0\" } },\r\n\t];\r\n\r\n\tclass ItemFilter {\r\n\t\tstatic cash(item) {\r\n\t\t\t//return item.cash == 1;\r\n\t\t\treturn item.cash > 0;\r\n\t\t}\r\n\t\tstatic standard(item) {\r\n\t\t\t//return item.cash != 1;\r\n\t\t\treturn item.cash == null || item.cash == 0;\r\n\t\t}\r\n\r\n\t\tstatic female(item) {\r\n\t\t\treturn item.gender == 1;\r\n\t\t}\r\n\t\tstatic male(item) {\r\n\t\t\treturn item.gender == 0;\r\n\t\t}\r\n\t\tstatic neutral(item) {\r\n\t\t\treturn item.gender == 2;\r\n\t\t}\r\n\r\n\t\tstatic unlimited(item) {\r\n\t\t\treturn item.reqJob == 0 || item.reqJob == null;\r\n\t\t}\r\n\t\tstatic beginner(item) {\r\n\t\t\treturn item.reqJob == -1;\r\n\t\t}\r\n\t\tstatic warrior(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 1;\r\n\t\t}\r\n\t\tstatic magician(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 2;\r\n\t\t}\r\n\t\tstatic bowman(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 4;\r\n\t\t}\r\n\t\tstatic thief(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 8;\r\n\t\t}\r\n\t\tstatic pirate(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 16;\r\n\t\t}\r\n\t}\r\n\tItemFilter.list = [];\r\n\tfor (let i = 0; i < filter_buttons.length; ++i) {\r\n\t\tlet fn = ItemFilter[filter_buttons[i].value];\r\n\t\tItemFilter.list[i] = fn;\r\n\t}\r\n\r\n\tconst config = new (class {\r\n\t\tconstructor() {\r\n\t\t\tthis.pageSize = 100;\r\n\t\t}\r\n\t\tcalcPage(index) {\r\n\t\t\treturn Math.trunc(index / this.pageSize);\r\n\t\t}\r\n\t});\r\n\r\n\texport default {\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\t//config: config,\r\n\t\t\t\tsearch_text: \"\",\r\n\t\t\t\tsearch_next: -1,\r\n\r\n\t\t\t\tcolumn_count: 5,\r\n\r\n\t\t\t\tloaded_equip_list: [],\t// origin list (no filter)\r\n\t\t\t\tloaded_category: null,\r\n\t\t\t\tequip_list: [],\t\t\t// view list (final result)\r\n\t\t\t\tsearch_equip_result: [],// only search result\r\n\r\n\t\t\t\tselected_category: \"0000\",\r\n\t\t\t\tfilters: [],\r\n\t\t\t\tface_color: 0,\r\n\t\t\t\thair_color: 0,\r\n\t\t\t\thair_color2: 0,\r\n\t\t\t\thair_mix2: 0,\r\n\r\n\t\t\t\tpage: 0,\r\n\r\n\t\t\t\tface_names: null,\r\n\t\t\t\thair_names: null,\r\n\r\n\t\t\t\tonlyShowSearchResult: true,\r\n\t\t\t\tdisplayMode: true,\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tDATA_TAG_VERSION: () => window.DATA_TAG + window.DATA_VERSION,\r\n\t\t\tcategoryGroupList: function () {\r\n\t\t\t\tconst cl = Object.values(ItemCategoryInfo._info);//ItemCategoryInfo._categoryList;\r\n\t\t\t\tlet ss = {};\r\n\t\t\t\tlet ks = {};\r\n\r\n\t\t\t\tcl.forEach(cat => {\r\n\t\t\t\t\tlet _g = cat.slot.match(/^[0-9a-z]+/);\r\n\t\t\t\t\tlet group = _g ? _g[0].toLocaleLowerCase() : cat.slot;\r\n\t\t\t\t\tif (!ss[group]) {\r\n\t\t\t\t\t\tss[group] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet key = cat.categoryName || cat.listPath;\r\n\t\t\t\t\tif (!ks[key]) {\r\n\t\t\t\t\t\tss[group].push(cat);\r\n\t\t\t\t\t\tks[key] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn ss;\r\n\t\t\t},\r\n\t\t\tfilter_buttons: () => filter_buttons,\r\n\t\t\tface_color_buttons: () => face_color_buttons,\r\n\t\t\thair_color_buttons: () => hair_color_buttons,\r\n\t\t\t__count_of_item_in_page: function () {\r\n\t\t\t\tconst start = this.page * config.pageSize;\r\n\t\t\t\tconst end = Math.min(start + config.pageSize, this.equip_list.length);\r\n\t\t\t\tconst count = end - start;\r\n\r\n\t\t\t\treturn Math.min(Math.max(0, count), this.equip_list.length);//return 0 < count < this.equip_list.length\r\n\t\t\t},\r\n\t\t\t__count_of_page: function () {\r\n\t\t\t\treturn Math.ceil(this.equip_list.length / config.pageSize);\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tgetHairMixColor1CSS() {\r\n\t\t\t\treturn Object.assign({ \"clip-path\": \"polygon(50% 0%, 0% 20%, 0% 90%, 100% 90%, 100% 20%)\" }, hair_color_buttons[this.hair_color].style);\r\n\t\t\t},\r\n\t\t\tgetHairMixColor2CSS() {\r\n\t\t\t\treturn Object.assign({ \"clip-path\": \"polygon(0% 10%, 0% 80%, 50% 100%, 100% 80%, 100% 10%)\" }, this.hair_color2 != null ? hair_color_buttons[this.hair_color2].style : {});\r\n\t\t\t},\r\n\t\t\tcopyImageUrl: function (e, id) {\r\n\t\t\t\tlet img = e.currentTarget.querySelector(\"img\");\r\n\t\t\t\tif (img) {\r\n\t\t\t\t\tif (img.src.startsWith(\"data:image/\")) {\r\n\t\t\t\t\t\tif (window.confirm(\"圖示可能不存在，確定要複製圖示位置？\")) {\r\n\t\t\t\t\t\t\tlet url = ItemCategoryInfo.getIconRawUrl(id);\r\n\t\t\t\t\t\t\tcopyToClipboard(url);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcopyToClipboard(img.src);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcopyInnerText: function (e) {\r\n\t\t\t\tlet el = e.currentTarget;\r\n\t\t\t\tlet text = el.innerText;\r\n\t\t\t\tcopyToClipboard(text);\r\n\r\n\t\t\t\tSelectText(el);\r\n\t\t\t},\r\n\t\t\tcopyText: function (e, text) {\r\n\t\t\t\tcopyToClipboard(text);\r\n\t\t\t},\r\n\t\t\tsearch_equip: async function (search_text) {\r\n\t\t\t\tthis.clearSearch();\r\n\r\n\t\t\t\tif (!search_text || search_text == \"\") {\r\n\t\t\t\t\tthis.search_equip_result = [];\r\n\t\t\t\t\tif (this.onlyShowSearchResult) {\r\n\t\t\t\t\t\tawait this.loadList();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tawait this.loadList();\r\n\r\n\t\t\t\t\tlet old_search_equip_result = this.search_equip_result;\r\n\t\t\t\t\tthis.search_equip_result = [];\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet rr = search_text.match(/^(.+):\\/(.+)\\/$/);\r\n\r\n\t\t\t\t\t\tif (rr) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet attr = rr[1];\r\n\r\n\t\t\t\t\t\t\t\tif (attr == \"$style\" && Number.isSafeInteger(Number(rr[2]))) {\r\n\t\t\t\t\t\t\t\t\tlet si = rr[2];\r\n\t\t\t\t\t\t\t\t\tif (this._is_category_hair()) {\r\n\t\t\t\t\t\t\t\t\t\tlet black = CharacterRenderConfig.getColorHairID(String(si), 0);\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet b1 = item.id == null || CharacterRenderConfig.getColorHairID(item.id, 0);\r\n\t\t\t\t\t\t\t\t\t\t\tif (b1 && b1.indexOf(black) != -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.$page = config.calcPage(index);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (this._is_category_face()) {\r\n\t\t\t\t\t\t\t\t\t\tlet black = CharacterRenderConfig.getColorFaceID(String(si), 0);\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet b1 = item.id == null || CharacterRenderConfig.getColorFaceID(item.id, 0);\r\n\t\t\t\t\t\t\t\t\t\t\tif (b1 && b1.indexOf(black) != -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.$page = config.calcPage(index);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.search_equip_result.length == 0) {\r\n\t\t\t\t\t\t\t\t\tlet regexp = RegExp(rr[2]);\r\n\t\t\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\t\t\tif (item[attr] != null && regexp.test(item[attr])) {\r\n\t\t\t\t\t\t\t\t\t\t\titem.$page = config.calcPage(index);\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (this.search_equip_result &&\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result[0] &&\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result[0][attr] &&\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result[0][attr].localeCompare\r\n\t\t\t\t\t\t\t\t\t) {//check attr is can compare\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result.sort(function (a, b) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet sa = a[attr], sb = b[attr];\r\n\t\t\t\t\t\t\t\t\t\t\treturn sa.localeCompare(sb);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\t\tthis.search_equip_result = [];\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\tif (item.id && item.id.indexOf(search_text) >= 0 ||\r\n\t\t\t\t\t\t\t\t\titem.name && (\r\n\t\t\t\t\t\t\t\t\t\titem.name.indexOf(search_text) >= 0 ||\r\n\t\t\t\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(search_text.toLowerCase()) >= 0\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\titem.$page = config.calcPage(index);\r\n\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.search_equip_result.sort(function (a, b) {\r\n\t\t\t\t\t\t\t\tif (a.name && b.name) {\r\n\t\t\t\t\t\t\t\t\treturn a.name.localeCompare(b.name);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\tthis.search_equip_result = old_search_equip_result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\told_search_equip_result = null;\r\n\r\n\t\t\t\t\tif (this.search_equip_result.length) {\r\n\t\t\t\t\t\tthis.searchNextText();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log(\"no search: \" + search_text);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.onlyShowSearchResult) {\r\n\t\t\t\t\tthis.page = 0;\r\n\t\t\t\t\tthis.equip_list = this.search_equip_result;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsearchNextText: function (text) {\r\n\t\t\t\tif (this.onlyShowSearchResult) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t//if (e.keyCode == 13) {}\r\n\r\n\t\t\t\tlet next = (this.search_next + 1) % this.search_equip_result.length;\r\n\r\n\t\t\t\tlet item = this.search_equip_result[next];\r\n\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\tconst page = item.$page;\r\n\r\n\t\t\t\t\tthis.change_page(page);\r\n\r\n\t\t\t\t\tthis.$nextTick(function () {\r\n\t\t\t\t\t\twindow.location.hash = \"item\" + item.id;\r\n\r\n\t\t\t\t\t\tthis.$refs.input_search.focus();\r\n\r\n\t\t\t\t\t\t//console.log({\r\n\t\t\t\t\t\t//\tid: item.id,\r\n\t\t\t\t\t\t//\tname: item.name,\r\n\t\t\t\t\t\t//\tpage: page,\r\n\t\t\t\t\t\t//});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.search_next = next;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tclearSearch: function () {\r\n\t\t\t\tthis.search_next = -1;\r\n\t\t\t\twindow.location.hash = \"\";\r\n\t\t\t},\r\n\t\t\tchange_page: function (page) {\r\n\t\t\t\tif (this.page != page) {\r\n\t\t\t\t\tthis.$refs.content.scrollTop = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.page = page;\r\n\t\t\t\tthis.clearSearch();\r\n\t\t\t\t//console.log(\"change page: \" + page);\r\n\t\t\t},\r\n\t\t\t__get_category_slot: function () {\r\n\t\t\t\tconst cateinfo = ItemCategoryInfo.get(this.selected_category);\r\n\t\t\t\tif (cateinfo) {\r\n\t\t\t\t\treturn cateinfo.slot;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t_is_category_face: function () {\r\n\t\t\t\tconst slot = this.__get_category_slot();\r\n\t\t\t\treturn slot == \"face\";\r\n\t\t\t},\r\n\t\t\t_is_category_hair: function () {\r\n\t\t\t\tconst slot = this.__get_category_slot();\r\n\t\t\t\treturn slot == \"hair\";\r\n\t\t\t},\r\n\t\t\t__get_color: function () {\r\n\t\t\t\tif (this._is_category_face()) {\r\n\t\t\t\t\treturn this.face_color;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._is_category_hair()) {\r\n\t\t\t\t\treturn this.hair_color;\r\n\t\t\t\t}\r\n\t\t\t\treturn \"\";\r\n\t\t\t},\r\n\t\t\tloadList: async function () {\r\n\t\t\t\tif (this.selected_category == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.clearSearch();\r\n\r\n\t\t\t\tconst prefix = this.selected_category;\r\n\t\t\t\tconst cateinfo = ItemCategoryInfo.get(prefix);\r\n\t\t\t\tconst listPath = cateinfo.listPath || cateinfo.path || cateinfo.slot;\r\n\r\n\t\t\t\tconst coloredPath = listPath + this.__get_color();\r\n\r\n\t\t\t\t/** @type {EquipInfo[]} */\r\n\t\t\t\tlet equip_list = [];\r\n\r\n\t\t\t\tif (coloredPath != this.loaded_category || this.loaded_equip_list.length == 0) {\r\n\t\t\t\t\tequip_list = JSON.parse(await $get.asset(`equips/${coloredPath}.json`));\r\n\t\t\t\t\tif (!equip_list || !equip_list.length) {\r\n\t\t\t\t\t\talert(\"? \" + coloredPath);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tawait concat_external_resource(coloredPath, equip_list);\r\n\r\n\t\t\t\t\tif (cateinfo.slot == \"weapon\" && this.selected_category != \"0170\") {\r\n\t\t\t\t\t\tlet cash_weapon = JSON.parse(await $get.asset(`equips/0170.json`));\r\n\r\n\t\t\t\t\t\tlet wt = prefix.slice(2, 4);\r\n\t\t\t\t\t\tlet va = cash_weapon.filter(a => {\r\n\t\t\t\t\t\t\treturn a.__t.indexOf(wt) >= 0;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tequip_list = equip_list.concat(va);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tequip_list.forEach(ItemAttrNormalize[listPath] || ItemAttrNormalize._equip);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.loaded_equip_list = equip_list;\r\n\t\t\t\t\tthis.loaded_category = coloredPath;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tequip_list = [...this.loaded_equip_list];\r\n\t\t\t\t}\r\n\t\t\t\t//this.equip_list = equip_list;\r\n\r\n\t\t\t\tif (equip_list.length > 0) {\r\n\t\t\t\t\tlet fnFilter = this.__get_filter();\r\n\t\t\t\t\tif (fnFilter) {\r\n\t\t\t\t\t\tequip_list = equip_list.filter(fnFilter);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tthis.equip_list = equip_list;// for using this.__count_of_page\r\n\r\n\t\t\t\tif (equip_list.length > 0) {\r\n\t\t\t\t\tconst count_of_page = this.__count_of_page;\r\n\r\n\t\t\t\t\tif (count_of_page > 0) {\r\n\t\t\t\t\t\tif (this.page >= count_of_page) {\r\n\t\t\t\t\t\t\tthis.page = count_of_page - 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.page = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tequip_list.sort((a, b) => a.id - b.id);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tthis.equip_list = equip_list;\r\n\t\t\t},\r\n\t\t\t__get_filter: function () {\r\n\t\t\t\tif (!this.filters.length) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tconst list = ItemFilter.list;\r\n\t\t\t\tconst fnFilters = this.filters.map(function (i) {\r\n\t\t\t\t\treturn (a) => !list[i](a);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (fnFilters.length) {\r\n\t\t\t\t\treturn function (item) {\r\n\t\t\t\t\t\treturn fnFilters.every(function (fn) {\r\n\t\t\t\t\t\t\treturn fn(item);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//for (let i = 0; i < fnFilters.length; ++i) {\r\n\t\t\t\t\t\t//\tif (fnFilters[i](item)) {\r\n\t\t\t\t\t\t//\t\treturn false;\r\n\t\t\t\t\t\t//\t}\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t//return true;\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\treturn () => true;\r\n\t\t\t\t//}\r\n\t\t\t},\r\n\t\t\t//__get_face_color_filter: function () {\r\n\t\t\t//},\r\n\t\t\t//__get_hair_color_filter: function () {\r\n\t\t\t//},\r\n\t\t\t__get_item: function (index) {\r\n\t\t\t\tconst first = this.page * config.pageSize;\r\n\r\n\t\t\t\treturn this.equip_list[first + index];\r\n\t\t\t},\r\n\t\t\t__get_item_id: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item.id;\r\n\t\t\t},\r\n\t\t\t__get_item_name: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item.name || \"[null]\";\r\n\t\t\t},\r\n\t\t\t__get_item_name_ex: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item._name || \"[null]\";\r\n\t\t\t},\r\n\t\t\t__get_item_icon_url: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item.icon && item.icon[\"\"] ? item.icon[\"\"] : \"images/warning.png\";\r\n\t\t\t},\r\n\t\t\t__face_or_hair_img_onerror: async function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\tif (!item) {\r\n\t\t\t\t\talert(\"error: this.__get_item(index)\\nindex=\" + index);\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (item.icon && item.icon[\"\"]) {\r\n\t\t\t\t\tlet src = item.icon[\"\"];\r\n\r\n\t\t\t\t\tif (src.startsWith(\"images/\")) {\r\n\t\t\t\t\t\tlet sp = src.split(\"/\");\r\n\t\t\t\t\t\tlet place = sp.splice(sp.length - 1, 1);\r\n\r\n\t\t\t\t\t\tsp[1] = \"ls\";\r\n\r\n\t\t\t\t\t\tlet ls = JSON.parse(await $get(sp.join(\"/\")));\r\n\r\n\t\t\t\t\t\tlet next = ls.indexOf(place) + 1;\r\n\t\t\t\t\t\tif (next < ls.length) {\r\n\t\t\t\t\t\t\tplace = ls[next];\r\n\t\t\t\t\t\t\tsp[1] = \"images\";\r\n\t\t\t\t\t\t\titem.icon[\"\"] = sp.join(\"/\") + \"/\" + place;\r\n\t\t\t\t\t\t\tdebugger\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\titem.icon[\"\"] = \"images/warning.png\";\r\n\t\t\t},\r\n\t\t\tclickItem: function (e, num) {\r\n\t\t\t\tif (this.selected_category == \"0170\") {\r\n\t\t\t\t\tlet item = this.__get_item(num);\r\n\t\t\t\t\tconsole.groupCollapsed(\"沒有設定職業，無法使用點裝武器\");\r\n\t\t\t\t\tconsole.log(\"click cash weapon: [%s] %s %o\", item.id, item.name, item);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet item = this.__get_item(num);\r\n\r\n\t\t\t\t\tthis.$emit(\"clickItem\", {\r\n\t\t\t\t\t\tevent: e,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tcategory: this.selected_category,\r\n\t\t\t\t\t\tequip: item,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconsole.log(\"Use equip: [%s] %s %o\", item.id, item.name, item);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thoverItem: function (e, num) {\r\n\t\t\t\tlet item = this.__get_item(num);\r\n\r\n\t\t\t\tthis.$emit(\"hoverItem\", {\r\n\t\t\t\t\tevent: e,\r\n\t\t\t\t\tid: item.id,\r\n\t\t\t\t\tcategory: this.selected_category,\r\n\t\t\t\t\tequip: item,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tmouseleaveItem: function (e, num) {\r\n\t\t\t\tlet item = this.__get_item(num);\r\n\r\n\t\t\t\tthis.$emit(\"mouseleaveItem\", {\r\n\t\t\t\t\tevent: e,\r\n\t\t\t\t\tid: item.id,\r\n\t\t\t\t\tcategory: this.selected_category,\r\n\t\t\t\t\tequip: item,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tselected_category_onchange: function (value) {\r\n\t\t\t\tif (value == \"0002\") {\r\n\t\t\t\t\tthis.face_color = Number(window.chara.renderer.faceColor);\r\n\t\t\t\t}\r\n\t\t\t\telse if (value == \"0003\" || value == \"0004\") {\r\n\t\t\t\t\tthis.hair_color = Number(window.chara.renderer.hairColor);\r\n\t\t\t\t\tif (window.chara.renderer.slots.hairColor2 && window.chara.renderer.slots.hairMix2) {\r\n\t\t\t\t\t\tthis.hair_color2 = Number(window.chara.renderer.slots.hairColor2);\r\n\t\t\t\t\t\tthis.hair_mix2 = Math.trunc(Number(window.chara.renderer.slots.hairMix2) * 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.search_equip(this.search_text);\r\n\t\t\t},\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tsearch_text: function (val, oldVal) {\r\n\t\t\t\tthis.search_equip(val);\r\n\t\t\t},\r\n\t\t\tonlyShowSearchResult: async function (val) {\r\n\t\t\t\tif (val) {\r\n\t\t\t\t\tthis.search_equip(this.search_text);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.search_text) {\r\n\t\t\t\t\tawait this.loadList();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselected_category: function (value) {\r\n\t\t\t\tthis.selected_category_onchange(value);\r\n\t\t\t},\r\n\t\t\tfilters: async function () {\r\n\t\t\t\t//console.log(JSON.stringify(this.filters));\r\n\t\t\t\tawait this.loadList();\r\n\t\t\t},\r\n\t\t\tface_color: async function () {\r\n\t\t\t\t//console.log(\"face: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"faceColor\", {\r\n\t\t\t\t\tcolor: this.face_color\r\n\t\t\t\t});\r\n\t\t\t\tawait this.loadList();\r\n\t\t\t},\r\n\t\t\thair_color: async function () {\r\n\t\t\t\t//console.log(\"hair: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"hairColor\", {\r\n\t\t\t\t\tcolor: this.hair_color\r\n\t\t\t\t});\r\n\t\t\t\tawait this.loadList();\r\n\t\t\t},\r\n\t\t\thair_color2: async function () {\r\n\t\t\t\t//console.log(\"hair: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"hairColor2\", {\r\n\t\t\t\t\tcolor: this.hair_color2,\r\n\t\t\t\t\tmix: this.hair_mix2 / 100\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\thair_mix2: async function () {\r\n\t\t\t\t//console.log(\"hair: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"hairMix2\", {\r\n\t\t\t\t\tcolor: this.hair_color2,\r\n\t\t\t\t\tmix: this.hair_mix2 / 100\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis.selected_category = \"0000\";\r\n\t\t\tthis.selected_category_onchange(this.selected_category);\r\n\t\t},\r\n\t\tdirectives: {\r\n\t\t\tfocus: {\r\n\t\t\t\tinserted: function (el) {\r\n\t\t\t\t\tel.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\t\"ui-draggable\": UIDraggable,\r\n\t\t\t\"ui-button-group\": UIButtonGroup,\r\n\t\t},\r\n\t\tmixins: [UIDialog]\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.ui-equip-box .header {\r\n\t\ttext-align: left;\r\n\t}\r\n\t.ui-equip-box .header.btn-group, .ui-equip-box .header .pagination {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.ui-equip-box .pagination {\r\n\t\theight: 2em;\r\n\t\toverflow: auto;\r\n\t\tfont-size: initial;\r\n\t}\r\n\r\n\t.ui-equip-box .item-list {\r\n\t\tlist-style: none;\r\n\t\tmargin: auto;\r\n\t\tpadding: 1px;\r\n\t}\r\n\t.ui-equip-box .item-list-sm {\r\n\t\tmargin: auto;\r\n\t\tpadding: 1px;\r\n\t\tline-height: 0;\r\n\t\ttext-align: center;\r\n\t}\r\n\t.ui-equip-box .item-detail {\r\n\t\twidth: 100%;\r\n\t\tborder-spacing: 1px;\r\n\t}\r\n\t.ui-equip-box .list-item, .ui-equip-box .list-item-sm {\r\n\t\tborder: 1px solid black;\r\n\t\tborder-bottom: none;\r\n\t\tbackground: linear-gradient(to bottom, rgba(240,249,255,0.9) 0%,rgba(203,235,255,0.9) 30%,rgba(201,234,255,0.9) 50%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 75%,rgba(240,249,255,0.9) 100%);\r\n\t}\r\n\t.ui-equip-box .list-item-sm {\r\n\t\tdisplay: inline-block;\r\n\t\tborder: none;\r\n\t\toutline: 1px solid black;\r\n\t\tbox-shadow: inset 1px 1px 0 lightblue;\r\n\t}\r\n\t.ui-equip-box .list-item:target, .ui-equip-box .list-item-sm:target {\r\n\t\tbox-shadow: inset 0 0 0 1px red;\r\n\t\toutline: 1px solid red;\r\n\t\tposition: relative;\r\n\t}\r\n\t.ui-equip-box .list-item:last-child {\r\n\t\tborder-bottom: 1px solid black;\r\n\t}\r\n\t.ui-equip-box .list-item:hover, .ui-equip-box .list-item-sm:hover {\r\n\t\tbackground: aliceblue;\r\n\t}\r\n\t.ui-equip-box .list-item:active, .ui-equip-box .list-item-sm:active {\r\n\t\tbackground: lightgray;\r\n\t}\r\n\r\n\t.ui-equip-box .item-name {\r\n\t\tuser-select: text;\r\n\t\twidth: 12em;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\t.ui-equip-box .list-item:target .item-name {\r\n\t\tcolor: red;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.ui-equip-box .item-id {\r\n\t\tuser-select: text;\r\n\t}\r\n\r\n\t.ui-equip-box .item-icon-outer-frame {\r\n\t\tposition: relative;\r\n\t\twidth: 48px;\r\n\t\theight: 48px;\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t.ui-equip-box .item-icon-frame > img, .ui-equip-box .item-icon-frame-sm > img {\r\n\t\tmax-width: 48px;\r\n\t\tmax-height: 48px;\r\n\t\tdisplay: block;\r\n\t\tmargin: auto;\r\n\t}\r\n\r\n\r\n\t.ui-equip-box .filters button:hover {\r\n\t\tborder: 1px solid blue;\r\n\t\tborder-radius: 3px;\r\n\t\tbackground: rgba(240, 249, 255, 0.9);\r\n\t}\r\n\t.ui-equip-box .filters button:hover, .face_color button:hover, .hair_color button:hover {\r\n\t\tfilter: contrast(150%) brightness(110%);\r\n\t}\r\n\t.ui-equip-box .filters button.active {\r\n\t\tborder-radius: 3px;\r\n\t\tbackground-color: hsl(203, 0%, 70%);\r\n\t}\r\n\t.ui-equip-box .filters button.active img {\r\n\t\tfilter: grayscale(100%) brightness(90%) contrast(150%);\r\n\t}\r\n\t.ui-equip-box .filters button.active:hover {\r\n\t\tborder: 1px solid blue;\r\n\t\tbackground: rgba(240, 249, 255, 0.9);\r\n\t}\r\n\t.ui-equip-box .filters button.active:hover {\r\n\t\tfilter: contrast(150%) grayscale(100%) brightness(110%);\r\n\t}\r\n\r\n\t.ui-equip-box .face_color, hair_color {\r\n\t\tborder: 1px solid transparent;\r\n\t\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\r\n\t}\r\n\t.ui-equip-box .face_color button.active, .hair_color button.active {\r\n\t\tborder: 1px solid white;\r\n\t\tbox-shadow: 0 0 0.5em 0 blue, 0 0 1em 0 yellow;\r\n\t\tcolor: white;\r\n\t\ttext-shadow: 0 0 0.1em black, 0 0 0.5em black;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area > * {\r\n\t\tpadding-top: 1px;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area {\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area button {\r\n\t\ttext-align: center;\r\n\t\tcursor: pointer;\r\n\t\tborder: 1px solid transparent;\r\n\t\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\r\n\t\tfont-family: 微軟正黑體;\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 1em;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area button > img {\r\n\t\tdisplay: block;\r\n\t\tmargin: auto;\r\n\t}\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-equip-box.vue?vue&type=template&id=cfe311ba&\"\nimport script from \"./ui-equip-box.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-equip-box.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-equip-box.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div v-if=\"chara != null\" class=\"frame\">\r\n\t\t<div class=\"center\">\r\n\t\t\t<template v-for=\"ft in frag_list\">\r\n\t\t\t\t<img :src=\"get_ft_src(ft)\"\r\n\t\t\t\t\t :class=\"ft.classList\"\r\n\t\t\t\t\t :style=\"get_ft_style(ft)\" />\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport Vue from 'vue';\r\n\r\n\t//class ItemCharacter {\r\n\t//\tconstructor() {\r\n\t//\t\tthis.type = \"\";\r\n\t//\t}\r\n\t//\r\n\t//\tstatic Type = {\r\n\t//\t\tmap: \"map\",\r\n\t//\t\tcharacter: \"character\"\r\n\t//\t}\r\n\t//}\r\n\r\n\t/*\r\n\t<ui-dialog title=\"Characters\">\r\n\t\t<ui-sortable :items=\"charas\" @input=\"ch\">\r\n\t\t\t<template scope=\"{item}\">\r\n\t\t\t\t<li :id=\"item.id\">\r\n\t\t\t\t\t<ui-character :chara=\"item\"></ui-character>\r\n\t\t\t\t</li>\r\n\t\t\t</template>\r\n\t\t</ui-sortable>\r\n\t</ui-dialog>\r\n\t*/\r\n\r\n\t/*\r\n\tchara = {\r\n\t\tid: <unique>\r\n\t\thtml: <element>\r\n\t}\r\n\t*/\r\n\r\n\r\n\t/*\r\n\t\tmounted: function () {\r\n\t\t},\r\n\r\n\t\tupdated: function () {\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t}\r\n\r\n\t\t//directives: {\r\n\t\t//\t'resource': function(el, binding) {\r\n\t\t//\t}\r\n\t\t//}\r\n\t\t//render: function (createElement) {\r\n\t\t//\treturn createElement(\r\n\t\t//\t\t\"div\", {\r\n\t\t//\t\t},\r\n\t\t//\t\t//this.$slots.default\r\n\t\t//\t)\r\n\t\t//},\r\n\t*/\r\n\r\n\texport default {\r\n\t\tprops: ['chara'],\r\n\t\tcomputed: {\r\n\t\t\tfrag_list: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconst chara = this.chara;\r\n\t\t\t\t\tlet arr = [];\r\n\r\n\t\t\t\t\tchara.__forceUpdate();\r\n\r\n\t\t\t\t\tfor (let i in this.chara.__frag_list) {\r\n\t\t\t\t\t\tlet ft = this.chara.__frag_list[i];\r\n\t\t\t\t\t\tif (ft.texture) {\r\n\t\t\t\t\t\t\tarr.push(ft);\r\n\t\t\t\t\t\t\tif (ft.graph2 && ft.graph2.texture) arr.push(ft.graph2);\r\n\t\t\t\t\t\t\tif (ft.graph3 && ft.graph3.texture) arr.push(ft.graph3);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (newVal) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tget_ft_src: function (ft) {\r\n\t\t\t\treturn ft.texture.src;\r\n\t\t\t},\r\n\t\t\tget_ft_style: function (ft) {\r\n\t\t\t\tlet style = {\r\n\t\t\t\t\tleft: ft.relative.x + 'px',\r\n\t\t\t\t\ttop: ft.relative.y + 'px',\r\n\t\t\t\t\topacity: ft.opacity,\r\n\t\t\t\t\twidth: ft.width + 'px',\r\n\t\t\t\t\theight: ft.height + 'px',\r\n\t\t\t\t\tfilter: ft.filter.toString(),\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn style;\r\n\t\t\t},\r\n\t\t//\tgetInnerHTML: function () {\r\n\t\t//\t\treturn this.getInner().innerHTML;\r\n\t\t//\t},\r\n\t\t//\tgetInner: function () {\r\n\t\t//\t\tlet chara = this.chara;\r\n\t\t//\r\n\t\t//\t\t//force update\r\n\t\t//\t\tchara.update(0);\r\n\t\t//\t\tchara.__update_frag_list();\r\n\t\t//\r\n\t\t//\t\tlet elem = chara._toHTML();\r\n\t\t//\t\tif (!elem) {\r\n\t\t//\t\t\tdebugger\r\n\t\t//\t\t}\r\n\t\t//\t\treturn elem;\r\n\t\t//\t}\r\n\t\t},\r\n\t\t//beforeUpdate: function () {\r\n\t\t//\tlet vm = this;\r\n\t\t//\r\n\t\t//\tthis.$nextTick(function () {\r\n\t\t//\t\tvm.$el.appendChild(vm.getInner());\r\n\t\t//\t});\r\n\t\t//}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\tdiv.frame {\r\n\t\tdisplay: inline-block;\r\n\t\tposition: relative;\r\n\t\twidth: 64px;\r\n\t\theight: 96px;\r\n\r\n\t\tuser-select: none;\r\n\t\tbackground-position: 0px 0px, 10px 10px;\r\n\t\tbackground-size: 20px 20px;\r\n\t\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\r\n\t}\r\n\tdiv.center {\r\n\t\tposition: absolute;\r\n\t\tleft: 32px;\r\n\t\ttop: 96px;\r\n\t}\r\n\timg {\r\n\t\tposition: absolute;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-character.vue?vue&type=template&id=678b2630&scoped=true&\"\nimport script from \"./ui-character.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-character.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-character.vue?vue&type=style&index=0&id=678b2630&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"678b2630\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.chara != null)?_c('div',{staticClass:\"frame\"},[_c('div',{staticClass:\"center\"},[_vm._l((_vm.frag_list),function(ft){return [_c('img',{class:ft.classList,style:(_vm.get_ft_style(ft)),attrs:{\"src\":_vm.get_ft_src(ft)}})]})],2)]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div v-if=\"chara != null\" class=\"ui-character-frame\">\r\n\t\t<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink= \"http://www.w3.org/1999/xlink\"\r\n\t\t\t\tx=\"0\" y=\"0\" width=\"64\" height=\"96\"\r\n\t\t\t\t>\r\n\t\t\t<g transform=\"translate(32, 96)\">\r\n\t\t\t\t<template v-for=\"ft in frag_list\">\r\n\t\t\t\t\t<image :class=\"ft.classList\"\r\n\t\t\t\t\t\t   :x=\"ft.relative.x\"\r\n\t\t\t\t\t\t   :y=\"ft.relative.y\"\r\n\t\t\t\t\t\t   :width=\"ft.width\"\r\n\t\t\t\t\t\t   :height=\"ft.height\"\r\n\t\t\t\t\t\t   :opacity=\"ft.opacity\"\r\n\t\t\t\t\t\t   :xlink:href=\"get_ft_src(ft)\"\r\n\t\t\t\t\t\t   >\r\n\t\t\t\t\t</image>\r\n\t\t\t\t</template>\r\n\t\t\t</g>\r\n\t\t</svg>\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<div v-if=\"is_loading\" class=\"ui-character-center\">\r\n\t\t\t\t<div class=\"ui-character-text\">\r\n\t\t\t\t\tloading...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<div v-if=\"is_processing\" class=\"ui-character-center\">\r\n\t\t\t\t<div class=\"ui-character-text\">\r\n\t\t\t\t\tprocess...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: ['chara'],\r\n\t\tcomputed: {\r\n\t\t\tfrag_list: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconst chara = this.chara;\r\n\t\t\t\t\tlet arr = [];\r\n\r\n\t\t\t\t\tchara.__forceUpdate();\r\n\r\n\t\t\t\t\tfor (let i in this.chara.__frag_list) {\r\n\t\t\t\t\t\tlet ft = this.chara.__frag_list[i];\r\n\t\t\t\t\t\tif (ft.texture) {\r\n\t\t\t\t\t\t\tarr.push(ft);\r\n\t\t\t\t\t\t\tif (ft.graph2 && ft.graph2.texture) arr.push(ft.graph2);\r\n\t\t\t\t\t\t\tif (ft.graph3 && ft.graph3.texture) arr.push(ft.graph3);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (newVal) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tis_loading: false,\r\n\t\t\t\tis_processing: false,\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tget_ft_src: function (ft) {\r\n\t\t\t\treturn ft.texture.src;\r\n\t\t\t},\r\n\t\t\tget_ft_style: function (ft) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tleft: ft.relative.x + 'px',\r\n\t\t\t\t\ttop: ft.relative.y + 'px',\r\n\t\t\t\t\topacity: ft.opacity,\r\n\t\t\t\t\twidth: ft.width + 'px',\r\n\t\t\t\t\theight: ft.height + 'px',\r\n\t\t\t\t\tfilter: ft.filter.toString(),\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tfake: function () {\r\n\t\t\t\tlet vm = this;\r\n\t\t\t\tvm.is_processing = true;\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tvm.is_processing = false;\r\n\t\t\t\t}, 1000);\r\n\t\t\t},\r\n\t\t\tdownload2: function () {\r\n\t\t\t\tlet svg = this.$el.innerHTML;\r\n\t\t\t\t//let url = \"data:image/svg+xml;base64,\" + btoa(svg);\r\n\t\t\t\tlet url = \"data:image/svg+xml;utf8,\" + (svg);\r\n\t\t\t\t//let url = \"data:text/html;charset=utf-8,\" + encodeURIComponent(svg);\r\n\r\n\t\t\t\tdebugger;\r\n\r\n\t\t\t\twindow.open(url);\r\n\r\n\t\t\t\t//let el = $(\"<a>svg</a>\");\r\n\t\t\t\t//el[0].href = url;\r\n\t\t\t\t//el.trigger(\"click\");\r\n\t\t\t},\r\n\t\t},\r\n\t\tupdate: function () {\r\n\t\t\tthis.$el.style.cursor = \"not-allowed\";\r\n\t\t\tthis.is_loading = true;\r\n\t\t},\r\n\t\tupdated: function () {\r\n\t\t\tthis.$el.style.cursor = \"default\";\r\n\t\t\tthis.is_loading = false;\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.ui-character-frame {\r\n\t\tdisplay: inline-block;\r\n\t\tposition: relative;\r\n\t\twidth: 64px;\r\n\t\theight: 96px;\r\n\r\n\t\tuser-select: none;\r\n\t\tbackground-position: 0px 0px, 10px 10px;\r\n\t\tbackground-size: 20px 20px;\r\n\t\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\r\n\t}\r\n\r\n\t.ui-character-center {\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(0,0,0,0.2);\r\n\t\toverflow: hidden;\r\n\t\ttext-align: center;\r\n\t}\r\n\t.ui-character-text {\r\n\t\ttext-align: center;\r\n\t\tposition: absolute;\r\n\t\ttop: calc(50% - 0.5em);\r\n\t\tfont-weight: bold;\r\n\t\tcolor: white;\r\n\t\ttext-shadow: 0 0 1px black, 0 0 2px black, 0 0 5px black;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-character-svg.vue?vue&type=template&id=417caeaa&\"\nimport script from \"./ui-character-svg.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-character-svg.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-character-svg.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.chara != null)?_c('div',{staticClass:\"ui-character-frame\"},[_c('svg',{attrs:{\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\",\"x\":\"0\",\"y\":\"0\",\"width\":\"64\",\"height\":\"96\"}},[_c('g',{attrs:{\"transform\":\"translate(32, 96)\"}},[_vm._l((_vm.frag_list),function(ft){return [_c('image',{class:ft.classList,attrs:{\"x\":ft.relative.x,\"y\":ft.relative.y,\"width\":ft.width,\"height\":ft.height,\"opacity\":ft.opacity,\"xlink:href\":_vm.get_ft_src(ft)}})]})],2)]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.is_loading)?_c('div',{staticClass:\"ui-character-center\"},[_c('div',{staticClass:\"ui-character-text\"},[_vm._v(\"\\n\\t\\t\\t\\tloading...\\n\\t\\t\\t\")])]):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.is_processing)?_c('div',{staticClass:\"ui-character-center\"},[_c('div',{staticClass:\"ui-character-text\"},[_vm._v(\"\\n\\t\\t\\t\\tprocess...\\n\\t\\t\\t\")])]):_vm._e()])],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div class=\"UIEditCharacterAttribute\" style=\"display: inline-block;\">\r\n\t\t<div style=\"display: inline-block; vertical-align: top;\">\r\n\t\t\t<table style=\"border-collapse: collapse; border-spacing: 0px;\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<template v-if=\"chara.speed\">\t\r\n\t\t\t\t\t\t\t<button @click=\"pauseAnimation\" title=\"pause animation\">\r\n\t\t\t\t\t\t\t\t<img src=\"images/player_pause.png\" alt=\"pause\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else=\"\">\r\n\t\t\t\t\t\t\t<button @click=\"pauseAnimation\" title=\"play animation\">\r\n\t\t\t\t\t\t\t\t<img src=\"images/player_play.png\" alt=\"play\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td title=\"animation speed\">\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"chara.speed\" min=\"0\" max=\"5\" step=\"0.01\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button v-if=\"sceneChara.enablePhysics\" @click=\"sceneChara.enablePhysics=false\">禁用物理</button>\r\n\t\t\t\t\t\t<button v-else @click=\"sceneChara.enablePhysics=true\">啟用物理</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button @click=\"isShowDebug=!isShowDebug\">細節</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>動作</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"chara.action\" @clicl=\"update_frame_list('action')\">\r\n\t\t\t\t\t\t\t<option v-if=\"!actions.length\" disabled value=\"\">請選擇</option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"item in actions\">{{item}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model.number=\"chara.action_frame\">\r\n\t\t\t\t\t\t\t<option v-if=\"!actions.length\" disabled> ---- </option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"frame in chara.action_frame_count\" :value=\"frame - 1\">{{frame - 1}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>表情</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"chara.emotion\">\r\n\t\t\t\t\t\t\t<option v-if=\"!emotions.length\" disabled value=\"\">請選擇</option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"item in emotions\">{{item}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model.number=\"chara.emotion_frame\" @clicl=\"update_frame_list('emotion')\">\r\n\t\t\t\t\t\t\t<option v-if=\"!emotions.length\" disabled> ---- </option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"frame in chara.emotion_frame_count\" :value=\"frame - 1\">{{frame - 1}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr title=\"禁用物理後可設定角色的位置\">\r\n\t\t\t\t\t<th>位置</th>\r\n\t\t\t\t\t<td colspan=\"3\" style=\"display: flex; position: absolute;\">\r\n\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"chara.x\" min=\"-9999\" max=\"9999\" />\r\n\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"chara.y\" min=\"-9999\" max=\"9999\" />\r\n\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"sceneChara.$layer\" min=\"0\" max=\"7\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr title=\"禁用物理後可設定角色的旋轉和方向\">\r\n\t\t\t\t\t<td colspan=\"4\">\r\n\t\t\t\t\t\t<label>旋轉：\r\n\t\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"chara_angle\" min=\"-180\" max=\"180\" step=\"10\" />°\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label>方向：\r\n\t\t\t\t\t\t\t<select :disabled=\"sceneChara.enablePhysics\" v-model.number=\"chara.front\">\r\n\t\t\t\t\t\t\t\t<option value=\"1\">右</option>\r\n\t\t\t\t\t\t\t\t<option value=\"-1\">左</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th rowspan=\"2\">耳朵</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\">人類<input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"human\" checked /></label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\">妖精<input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"elf\" /></label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\">木雷普<input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"lef\" /></label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\">亥雷普<input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"highlef\" /></label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<!--<tr>\r\n\t\t\t\t\t<td></td>\r\n\t\t\t\t\t<td></td>\r\n\t\t\t\t\t<td></td>\r\n\t\t\t\t</tr>-->\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t\t<div v-if=\"isShowDebug\" style=\"width: 100%; display: inline-block; user-select: text;\">\r\n\t\t\t<hr />\r\n\t\t\t<table style=\"border-spacing: 0px; border-collapse: collapse; width: 100%;\">\r\n\t\t\t\t<template v-for=\"(equip,index) in chara.slots._ordered_slot\">\r\n\t\t\t\t\t<template v-if=\"equip\">\r\n\t\t\t\t\t\t<tr @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{{getEquipCategoryName(equip)}}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td style=\"width: 32px; height: 32px;\">\r\n\t\t\t\t\t\t\t\t<img :src=\"equip.getIconUrl()\" class=\"equip-icon\" />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<div>{{equip.name}}</div>\r\n\t\t\t\t\t\t\t\t<div>{{equip.id}}</div>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>opacity</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.opacity\" min=\"0.01\" max=\"1\" step=\"0.01\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.opacity\" min=\"0.01\" max=\"1\" step=\"0.01\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><button @click=\"equip.opacity=1;\" class=\"btn\">×</button></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>hue</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.hue\" min=\"0\" max=\"359\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.hue\" min=\"0\" max=\"359\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><button @click=\"equip.filter.hue=0;\" class=\"btn\">×</button></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>sat</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.sat\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.sat\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><button @click=\"equip.filter.sat=100;\" class=\"btn\">×</button></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>bri</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.bri\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.bri\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><button @click=\"equip.filter.bri=100;\" class=\"btn\">×</button></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>contrast</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.contrast\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.contrast\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><button @click=\"equip.filter.contrast=100;\" class=\"btn\">×</button></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</template>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { ItemCategoryInfo } from \"../../public/javascripts/resource.js\";\r\n\r\n\texport default {\r\n\t\tprops: [\"sceneChara\"],\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tisShowDebug: false,\r\n\t\t\t\tisShowEquipImageFilter: [],\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tactions: () => character_action_list,\r\n\t\t\temotions: () => character_emotion_list,\r\n\t\t\tchara: function () {\r\n\t\t\t\treturn this.sceneChara.renderer;\r\n\t\t\t},\r\n\t\t\tchara_angle: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn Math.round(Math.degrees(this.sceneChara.renderer.angle));\r\n\t\t\t\t},\r\n\t\t\t\tset: function (deg) {\r\n\t\t\t\t\tthis.sceneChara.renderer.angle = Math.radians(deg);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tpauseAnimation: function () {\r\n\t\t\t\tthis.chara.speed = this.chara.speed ? 0 : 1;//this.pause ? 0 : 1;\r\n\t\t\t},\r\n\t\t\tisEquip: function (id) {\r\n\t\t\t\treturn ItemCategoryInfo.isEquip(id);\r\n\t\t\t},\r\n\t\t\tgetEquipCategoryName: function (equip) {\r\n\t\t\t\treturn ItemCategoryInfo.get(equip.id).categoryName;\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\t.UIEditCharacterAttribute td > * {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.btn {\r\n\t\tmargin: auto;\r\n\t\tpadding: 0;\r\n\t\tuser-select: none;\r\n\t}\r\n\t.chara_ear {\r\n\t\twidth: 100%;\r\n\t\tdisplay: block;\r\n\t}\r\n\t.equip-icon {\r\n\t\tmargin: auto;\r\n\t\tmax-width: 32px;\r\n\t\tmax-height: 32px;\r\n\t\twidth: auto !important;\r\n\t\theight: auto !important;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-character-attribute.vue?vue&type=template&id=10601658&scoped=true&\"\nimport script from \"./ui-character-attribute.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-character-attribute.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-character-attribute.vue?vue&type=style&index=0&id=10601658&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"10601658\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"UIEditCharacterAttribute\",staticStyle:{\"display\":\"inline-block\"}},[_c('div',{staticStyle:{\"display\":\"inline-block\",\"vertical-align\":\"top\"}},[_c('table',{staticStyle:{\"border-collapse\":\"collapse\",\"border-spacing\":\"0px\"}},[_c('tr',[_c('td',[(_vm.chara.speed)?[_c('button',{attrs:{\"title\":\"pause animation\"},on:{\"click\":_vm.pauseAnimation}},[_c('img',{attrs:{\"src\":\"images/player_pause.png\",\"alt\":\"pause\"}})])]:[_c('button',{attrs:{\"title\":\"play animation\"},on:{\"click\":_vm.pauseAnimation}},[_c('img',{attrs:{\"src\":\"images/player_play.png\",\"alt\":\"play\"}})])]],2),_vm._v(\" \"),_c('td',{attrs:{\"title\":\"animation speed\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.speed),expression:\"chara.speed\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"5\",\"step\":\"0.01\"},domProps:{\"value\":(_vm.chara.speed)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.chara, \"speed\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[(_vm.sceneChara.enablePhysics)?_c('button',{on:{\"click\":function($event){_vm.sceneChara.enablePhysics=false}}},[_vm._v(\"禁用物理\")]):_c('button',{on:{\"click\":function($event){_vm.sceneChara.enablePhysics=true}}},[_vm._v(\"啟用物理\")])]),_vm._v(\" \"),_c('td',[_c('button',{on:{\"click\":function($event){_vm.isShowDebug=!_vm.isShowDebug}}},[_vm._v(\"細節\")])])]),_vm._v(\" \"),_c('tr',[_c('th',[_vm._v(\"動作\")]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.action),expression:\"chara.action\"}],on:{\"clicl\":function($event){_vm.update_frame_list('action')},\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.chara, \"action\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.actions.length)?_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"請選擇\")]):_vm._l((_vm.actions),function(item){return _c('option',[_vm._v(_vm._s(item))])})],2)]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.action_frame),expression:\"chara.action_frame\",modifiers:{\"number\":true}}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.chara, \"action_frame\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.actions.length)?_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\" ---- \")]):_vm._l((_vm.chara.action_frame_count),function(frame){return _c('option',{domProps:{\"value\":frame - 1}},[_vm._v(_vm._s(frame - 1))])})],2)])]),_vm._v(\" \"),_c('tr',[_c('th',[_vm._v(\"表情\")]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.emotion),expression:\"chara.emotion\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.chara, \"emotion\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.emotions.length)?_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"請選擇\")]):_vm._l((_vm.emotions),function(item){return _c('option',[_vm._v(_vm._s(item))])})],2)]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.emotion_frame),expression:\"chara.emotion_frame\",modifiers:{\"number\":true}}],on:{\"clicl\":function($event){_vm.update_frame_list('emotion')},\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.chara, \"emotion_frame\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.emotions.length)?_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\" ---- \")]):_vm._l((_vm.chara.emotion_frame_count),function(frame){return _c('option',{domProps:{\"value\":frame - 1}},[_vm._v(_vm._s(frame - 1))])})],2)])]),_vm._v(\" \"),_c('tr',{attrs:{\"title\":\"禁用物理後可設定角色的位置\"}},[_c('th',[_vm._v(\"位置\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"display\":\"flex\",\"position\":\"absolute\"},attrs:{\"colspan\":\"3\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.x),expression:\"chara.x\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"-9999\",\"max\":\"9999\"},domProps:{\"value\":(_vm.chara.x)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.chara, \"x\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.y),expression:\"chara.y\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"-9999\",\"max\":\"9999\"},domProps:{\"value\":(_vm.chara.y)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.chara, \"y\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.sceneChara.$layer),expression:\"sceneChara.$layer\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"0\",\"max\":\"7\"},domProps:{\"value\":(_vm.sceneChara.$layer)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sceneChara, \"$layer\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])]),_vm._v(\" \"),_c('tr',{attrs:{\"title\":\"禁用物理後可設定角色的旋轉和方向\"}},[_c('td',{attrs:{\"colspan\":\"4\"}},[_c('label',[_vm._v(\"旋轉：\\n\\t\\t\\t\\t\\t\\t\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara_angle),expression:\"chara_angle\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"-180\",\"max\":\"180\",\"step\":\"10\"},domProps:{\"value\":(_vm.chara_angle)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.chara_angle=_vm._n($event.target.value)},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\"°\\n\\t\\t\\t\\t\\t\")]),_vm._v(\" \"),_c('label',[_vm._v(\"方向：\\n\\t\\t\\t\\t\\t\\t\"),_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.front),expression:\"chara.front\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.chara, \"front\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"右\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"-1\"}},[_vm._v(\"左\")])])])])]),_vm._v(\" \"),_c('tr',[_c('th',{attrs:{\"rowspan\":\"2\"}},[_vm._v(\"耳朵\")]),_vm._v(\" \"),_c('td',[_c('label',{staticClass:\"chara_ear\"},[_vm._v(\"人類\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"human\",\"checked\":\"\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"human\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"human\")}}})])]),_vm._v(\" \"),_c('td',[_c('label',{staticClass:\"chara_ear\"},[_vm._v(\"妖精\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"elf\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"elf\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"elf\")}}})])]),_vm._v(\" \"),_c('td',[_c('label',{staticClass:\"chara_ear\"},[_vm._v(\"木雷普\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"lef\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"lef\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"lef\")}}})])])]),_vm._v(\" \"),_c('tr',[_c('td',[_c('label',{staticClass:\"chara_ear\"},[_vm._v(\"亥雷普\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"highlef\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"highlef\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"highlef\")}}})])])])])]),_vm._v(\" \"),(_vm.isShowDebug)?_c('div',{staticStyle:{\"width\":\"100%\",\"display\":\"inline-block\",\"user-select\":\"text\"}},[_c('hr'),_vm._v(\" \"),_c('table',{staticStyle:{\"border-spacing\":\"0px\",\"border-collapse\":\"collapse\",\"width\":\"100%\"}},[_vm._l((_vm.chara.slots._ordered_slot),function(equip,index){return [(equip)?[_c('tr',{on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td',[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t\\t\"+_vm._s(_vm.getEquipCategoryName(equip))+\"\\n\\t\\t\\t\\t\\t\\t\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"32px\",\"height\":\"32px\"}},[_c('img',{staticClass:\"equip-icon\",attrs:{\"src\":equip.getIconUrl()}})]),_vm._v(\" \"),_c('td',[_c('div',[_vm._v(_vm._s(equip.name))]),_vm._v(\" \"),_c('div',[_vm._v(_vm._s(equip.id))])]),_vm._v(\" \"),_c('td')]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td'),_vm._v(\" \"),_c('td',[_vm._v(\"opacity\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.opacity),expression:\"equip.opacity\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0.01\",\"max\":\"1\",\"step\":\"0.01\"},domProps:{\"value\":(equip.opacity)},on:{\"__r\":function($event){_vm.$set(equip, \"opacity\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.opacity),expression:\"equip.opacity\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0.01\",\"max\":\"1\",\"step\":\"0.01\"},domProps:{\"value\":(equip.opacity)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(equip, \"opacity\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('button',{staticClass:\"btn\",on:{\"click\":function($event){equip.opacity=1;}}},[_vm._v(\"×\")])])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td'),_vm._v(\" \"),_c('td',[_vm._v(\"hue\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.hue),expression:\"equip.filter.hue\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"359\"},domProps:{\"value\":(equip.filter.hue)},on:{\"__r\":function($event){_vm.$set(equip.filter, \"hue\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.hue),expression:\"equip.filter.hue\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"359\"},domProps:{\"value\":(equip.filter.hue)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"hue\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('button',{staticClass:\"btn\",on:{\"click\":function($event){equip.filter.hue=0;}}},[_vm._v(\"×\")])])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td'),_vm._v(\" \"),_c('td',[_vm._v(\"sat\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.sat),expression:\"equip.filter.sat\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.sat)},on:{\"__r\":function($event){_vm.$set(equip.filter, \"sat\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.sat),expression:\"equip.filter.sat\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.sat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"sat\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('button',{staticClass:\"btn\",on:{\"click\":function($event){equip.filter.sat=100;}}},[_vm._v(\"×\")])])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td'),_vm._v(\" \"),_c('td',[_vm._v(\"bri\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.bri),expression:\"equip.filter.bri\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.bri)},on:{\"__r\":function($event){_vm.$set(equip.filter, \"bri\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.bri),expression:\"equip.filter.bri\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.bri)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"bri\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('button',{staticClass:\"btn\",on:{\"click\":function($event){equip.filter.bri=100;}}},[_vm._v(\"×\")])])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td'),_vm._v(\" \"),_c('td',[_vm._v(\"contrast\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.contrast),expression:\"equip.filter.contrast\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.contrast)},on:{\"__r\":function($event){_vm.$set(equip.filter, \"contrast\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.contrast),expression:\"equip.filter.contrast\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.contrast)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"contrast\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('button',{staticClass:\"btn\",on:{\"click\":function($event){equip.filter.contrast=100;}}},[_vm._v(\"×\")])])])])]:_vm._e()]})],2)]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<div class=\"ui-life-list\">\r\n\t\t<table>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td colspan=\"9\">\r\n\t\t\t\t\t\t<button @click=\"removeAll\" style=\"float: right;\" title=\"Issues: not work\">Remove all</button>\r\n\t\t\t\t\t\t<button @click=\"reload\" style=\"float: right;\" title=\"Issues: not work ??\">reload</button>\r\n\t\t\t\t\t\t<button @click=\"killAll\" style=\"float: right;\">Kill all</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-preview\">\r\n\t\t\t\t\t\t\t#\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-id\">ID</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-type\">type</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-x\">x</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-y\">y</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-flip\">flip</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-fh\">fh</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-rx0\">rx0</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-rx1\">rx1</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t\t<tr @mouseover=\"showPreview($event,m)\" @mouseleave=\"hidePreview\" class=\"item new-item\">\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button @click=\"addSpawn\" class=\"input\">add</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model=\"m.id\" id=\"mob-id\" min=\"1\" max=\"9999999\" class=\"input-mobid\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"m.type\" id=\"mob-type\">\r\n\t\t\t\t\t\t\t<option value=\"m\">Mob</option>\r\n\t\t\t\t\t\t\t<option value=\"n\">Npc</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.x\" id=\"mob-x\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.cy\" id=\"mob-y\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"m.f\" id=\"mob-flip\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.fh\" id=\"mob-fh\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<!-- <td> -->\r\n\t\t\t\t\t<!-- \t<input type=\"number\" v-model.number=\"m.cy\" id=\"mob-cy\" class=\"input\" /> -->\r\n\t\t\t\t\t<!-- </td> -->\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.rx0\" id=\"mob-rx0\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.rx1\" id=\"mob-rx1\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr v-for=\"(spawn, index) in spawns\" @mouseover=\"showPreview($event,spawn)\" @mouseleave=\"hidePreview\" class=\"item\">\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button title=\"preview\" style=\"text-align: center;\" class=\"input\">{{index}}</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model=\"spawn.id\" min=\"1\" max=\"9999999\" class=\"input-mobid\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"spawn.type\">\r\n\t\t\t\t\t\t\t<option value=\"m\">Mob</option>\r\n\t\t\t\t\t\t\t<option value=\"n\">Npc</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.x\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.cy\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"spawn.f\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.fh\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<!--<td>-->\r\n\t\t\t\t\t<!--\t<input type=\"number\" v-model.number=\"spawn.cy\" class=\"input\" />-->\r\n\t\t\t\t\t<!--</td>-->\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.rx0\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.rx1\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t<!--\t\t\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t-->\r\n\t\t</table>\r\n\t</div>\r\n\r\n</template>\r\n\r\n<script>\r\n\timport Vuex from \"vuex\";\r\n\timport { LifeSpawnPoint, MapLifeEntity } from \"../game/Map.js\"\r\n\t\r\n\tconst store = new Vuex.Store({\r\n\t\tstate: {\r\n\t\t},\r\n\t\t//mutations: {\r\n\t\t//},\r\n\t\tactions: {\r\n\t\t}\r\n\t});\r\n\r\n\texport default {\r\n\t\tstore,\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tspawns: [],\t//no hook source\r\n\t\t\t\tm: {\t\t// form table\r\n\t\t\t\t\ttype: \"m\",\r\n\t\t\t\t\tid: 8880141,\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\tmobTime: 0,\r\n\t\t\t\t\tf: 0,\r\n\t\t\t\t\thide: 0,\r\n\t\t\t\t\tfh: 1,\r\n\t\t\t\t\tcy: 0,\r\n\t\t\t\t\trx0: 0,\r\n\t\t\t\t\trx1: 0,\r\n\t\t\t\t},\r\n\t\t\t\tis_clear: true,\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tonCollapsed: function () {\r\n\t\t\t\tthis.hidePreview();\r\n\t\t\t},\r\n\t\t\tshowPreview: async function (event, m) {\r\n\t\t\t\tlet target = event.currentTarget;\r\n\t\t\t\tlet type = m.type == \"m\" ? \"Mob\":\"Npc\";\r\n\t\t\t\tlet smallTip = this.$root.$refs.smallTip;\r\n\t\t\t\t\r\n\t\t\t\tlet desc = await MapLifeEntity.loadLifeDesc(m);\r\n\r\n\t\t\t\tlet _url = $get.imageUrl(`/${type}/${m.id}/stand/0`);\r\n\t\t\t\t\r\n\t\t\t\tsmallTip.html = [\"<div>\" + desc.name + \"</div>\" + `<img src=\"${_url}\" />`];\r\n\t\t\t\t\r\n\t\t\t\tsmallTip.show(function () {\r\n\t\t\t\t\tsmallTip.setPosition({\r\n\t\t\t\t\t\tmy: \"right center\",\r\n\t\t\t\t\t\tat: \"left center\",\r\n\t\t\t\t\t\tof: target,\r\n\t\t\t\t\t\tcollision: \"fit\"\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\thidePreview: function (event) {\r\n\t\t\t\tlet smallTip = this.$root.$refs.smallTip;\r\n\t\t\t\tsmallTip.hide();\r\n\t\t\t},\r\n\t\t\taddSpawn: function () {\r\n\t\t\t\tif (scene_map && scene_map.lifeMgr) {\r\n\t\t\t\t\tif (!this.m.type.match(/m|n/)) {\r\n\t\t\t\t\t\twindow.alert(\"life type: 'm' or 'n'\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet d = new LifeSpawnPoint(this.m);\r\n\t\t\t\t\t\r\n\t\t\t\t\td.y = d.cy;//cy = position.y; y = ?\r\n\r\n\t\t\t\t\tscene_map.lifeMgr.spawnPoints.push(d);\r\n\t\t\t\t}\r\n\t\t\t\tthis.reload();\r\n\t\t\t},\r\n\t\t\treload: function () {\r\n\t\t\t\tconst src = scene_map.lifeMgr.spawnPoints;\r\n\t\t\t\tthis.spawns = new Array(src.length);\r\n\t\t\t\tfor (let i = 0; i < src.length; ++i) {\r\n\t\t\t\t\tthis.$set(this.spawns, i, src[i]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.is_clear = false;\r\n\t\t\t\tthis.$emit(\"resize\");\r\n\t\t\t},\r\n\t\t\tremoveAll: function () {\r\n\t\t\t\tthis.is_clear = true;\r\n\t\t\t\tthis.spawns = [];\r\n\t\t\t\tthis.$emit(\"resize\");\r\n\t\t\t},\r\n\t\t\tkillAll: function () {\r\n\t\t\t\tscene_map.lifeMgr.entities.forEach(life => life.die());\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis.$on(\"onCollapsed\", this.onCollapsed);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//8880141\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.ui-life-list {\r\n\tpadding: 0 1px;\r\n}\r\n\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n}\r\n\r\ntr.new-item {\r\n\tbackground: lightgray;\r\n}\r\ntr.item:hover {\r\n\tbackground: lightblue;\r\n\toutline: 1px auto rgb(77, 144, 254);\r\n}\r\n\r\n.button {\r\n\twidth: 100%;\r\n}\r\n\r\n.input {\r\n  width: 2.7em;\r\n}\r\n\r\n.input[type=text] {\r\n  width: 4em;\r\n}\r\n\r\n.input[type=number] {\r\n  width: 4em;\r\n}\r\n\r\n.input[type=checkbox] {\r\n  width: 1em;\r\n}\r\n\r\n.input-mobid[type=number] {\r\n  width: 5em;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-mob-list.vue?vue&type=template&id=ea11de16&scoped=true&\"\nimport script from \"./ui-mob-list.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-mob-list.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-mob-list.vue?vue&type=style&index=0&id=ea11de16&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ea11de16\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ui-life-list\"},[_c('table',[_c('thead',[_c('tr',[_c('td',{attrs:{\"colspan\":\"9\"}},[_c('button',{staticStyle:{\"float\":\"right\"},attrs:{\"title\":\"Issues: not work\"},on:{\"click\":_vm.removeAll}},[_vm._v(\"Remove all\")]),_vm._v(\" \"),_c('button',{staticStyle:{\"float\":\"right\"},attrs:{\"title\":\"Issues: not work ??\"},on:{\"click\":_vm.reload}},[_vm._v(\"reload\")]),_vm._v(\" \"),_c('button',{staticStyle:{\"float\":\"right\"},on:{\"click\":_vm.killAll}},[_vm._v(\"Kill all\")])])]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('tr',{staticClass:\"item new-item\",on:{\"mouseover\":function($event){_vm.showPreview($event,_vm.m)},\"mouseleave\":_vm.hidePreview}},[_c('td',[_c('button',{staticClass:\"input\",on:{\"click\":_vm.addSpawn}},[_vm._v(\"add\")])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.m.id),expression:\"m.id\"}],staticClass:\"input-mobid\",attrs:{\"type\":\"number\",\"id\":\"mob-id\",\"min\":\"1\",\"max\":\"9999999\"},domProps:{\"value\":(_vm.m.id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"id\", $event.target.value)}}})]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.m.type),expression:\"m.type\"}],attrs:{\"id\":\"mob-type\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.m, \"type\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"m\"}},[_vm._v(\"Mob\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"n\"}},[_vm._v(\"Npc\")])])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.x),expression:\"m.x\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-x\"},domProps:{\"value\":(_vm.m.x)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"x\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.cy),expression:\"m.cy\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-y\"},domProps:{\"value\":(_vm.m.cy)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"cy\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.m.f),expression:\"m.f\"}],staticClass:\"input\",attrs:{\"type\":\"checkbox\",\"id\":\"mob-flip\"},domProps:{\"checked\":Array.isArray(_vm.m.f)?_vm._i(_vm.m.f,null)>-1:(_vm.m.f)},on:{\"change\":function($event){var $$a=_vm.m.f,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.m, \"f\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.m, \"f\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.m, \"f\", $$c)}}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.fh),expression:\"m.fh\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-fh\"},domProps:{\"value\":(_vm.m.fh)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"fh\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.rx0),expression:\"m.rx0\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-rx0\"},domProps:{\"value\":(_vm.m.rx0)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"rx0\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.rx1),expression:\"m.rx1\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-rx1\"},domProps:{\"value\":(_vm.m.rx1)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"rx1\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.spawns),function(spawn,index){return _c('tr',{staticClass:\"item\",on:{\"mouseover\":function($event){_vm.showPreview($event,spawn)},\"mouseleave\":_vm.hidePreview}},[_c('td',[_c('button',{staticClass:\"input\",staticStyle:{\"text-align\":\"center\"},attrs:{\"title\":\"preview\"}},[_vm._v(_vm._s(index))])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(spawn.id),expression:\"spawn.id\"}],staticClass:\"input-mobid\",attrs:{\"type\":\"number\",\"min\":\"1\",\"max\":\"9999999\"},domProps:{\"value\":(spawn.id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"id\", $event.target.value)}}})]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(spawn.type),expression:\"spawn.type\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(spawn, \"type\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"m\"}},[_vm._v(\"Mob\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"n\"}},[_vm._v(\"Npc\")])])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.x),expression:\"spawn.x\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.x)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"x\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.cy),expression:\"spawn.cy\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.cy)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"cy\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(spawn.f),expression:\"spawn.f\"}],staticClass:\"input\",attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(spawn.f)?_vm._i(spawn.f,null)>-1:(spawn.f)},on:{\"change\":function($event){var $$a=spawn.f,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(spawn, \"f\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(spawn, \"f\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(spawn, \"f\", $$c)}}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.fh),expression:\"spawn.fh\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.fh)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"fh\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.rx0),expression:\"spawn.rx0\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.rx0)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"rx0\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.rx1),expression:\"spawn.rx1\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.rx1)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"rx1\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])])}))])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',[_c('label',{attrs:{\"for\":\"mob-preview\"}},[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t#\\n\\t\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-id\"}},[_vm._v(\"ID\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-type\"}},[_vm._v(\"type\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-x\"}},[_vm._v(\"x\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-y\"}},[_vm._v(\"y\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-flip\"}},[_vm._v(\"flip\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-fh\"}},[_vm._v(\"fh\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-rx0\"}},[_vm._v(\"rx0\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-rx1\"}},[_vm._v(\"rx1\")])])])}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div>\r\n\t\t<div style=\"display: none;\">{{aaaa}}</div>\r\n\t\t<template v-for=\"(obj, index) in objs\">\r\n\t\t\t<div>\r\n\t\t\t\t<div @click=\"scrollIntoView($event,obj)\" :style=\"get_ObjPath_style(obj)\" class=\"info sticky\" title=\"select it and scroll into view\">\r\n\t\t\t\t\t<span>[{{index}}]</span>\r\n\t\t\t\t\t<span @contextmenu.prevent=\"copyToClipboard($event,obj._url)\" class=\"text\" >{{obj._url}}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"view\">\r\n\t\t\t\t\t<div v-if=\"displayMode!=2\" class=\"info\">\r\n\t\t\t\t\t\t<table class=\"table\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>type(sign)</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.type\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>x</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.x\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>y</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.y\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>z</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.z\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>zM</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.zM\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>flip</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.f\" type=\"number\" min=\"0\" max=\"1\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<template v-if=\"obj.typeb!=null\">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>typeb</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<!--<input-number v-model.number=\"obj.typeb\" min=\"0\" max=\"7\" type=\"number\" class=\"input\" />-->\r\n\t\t\t\t\t\t\t\t\t\t<input-select v-model.number=\"obj.typeb\" class=\"input\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"0\" title=\"\">default</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\" title=\"horizontal fill\">repeat-x</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\" title=\"vertical fill\">repeat-y</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\" title=\"fill\">fill</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\" title=\"horizontal roll\">roll-x</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\" title=\"vertical roll\">roll-y</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\" title=\"horizontal fill roll\">fill roll-x</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\" title=\"vertical fill roll\">fill roll-y</option>\r\n\t\t\t\t\t\t\t\t\t\t</input-select>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>a</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.a\" min=\"0\" max=\"255\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowRX(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>rx</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.rx\" type=\"number\" class=\"input\" title=\"橫向滾動速度\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowRY(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>ry</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.ry\" type=\"number\" class=\"input\" title=\"縱向滾動速度\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowCX(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>cx</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.cx\" type=\"number\" min=\"0\" class=\"input\" title=\"橫向間隔\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowCY(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>cy</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.cy\" type=\"number\" min=\"0\" class=\"input\" title=\"縱向間隔\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-else class=\"info\">\r\n\t\t\t\t\t\t<div>{{obj.constructor.name}}</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<table class=\"tb\">\r\n\t\t\t\t\t\t\t\t<tr v-for=\"(val, key) in obj._raw\">\r\n\t\t\t\t\t\t\t\t\t<td>{{key}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{val}}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"obj.textures.length && obj.textures[obj.frame].texture\" class=\"imgbox\">\r\n\t\t\t\t\t\t<div class=\"info\">\r\n\t\t\t\t\t\t\t<template v-if=\"obj.textures[obj.frame]._url.length > 300\">\r\n\t\t\t\t\t\t\t\t<a>...</a>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t\t<a :href=\"obj.textures[obj.frame]._url\">\r\n\t\t\t\t\t\t\t\t\t{{obj._texture_base_path}}<span v-if=\"obj.constructor.name!='MapBackBase'\" class=\"red-text\">/{{obj.frame}}</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div><img :src=\"obj.textures[obj.frame].texture.src\" class=\"img\"></img></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"displayMode==1\" class=\"info\">\r\n\t\t\t\t\t\t<table v-if=\"obj.textures.length && obj.textures[obj.frame].texture\" class=\"table\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>frame</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.frame\" :min=\"0\" :max=\"obj.textures.length-1\" @input=\"fupdate\" type=\"number\" class=\"input-sm\" /> / {{obj.textures.length-1}}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>center:</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-xy\">\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].x\" type=\"number\" />\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].y\" type=\"number\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>size:</td>\r\n\t\t\t\t\t\t\t\t<td>{{obj.textures[obj.frame]._raw.__h}} * {{obj.textures[obj.frame]._raw.__h}}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>opacity</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-xy\">\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].a0\" type=\"number\" class=\"input\" />\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].a1\" type=\"number\" class=\"input\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>delay</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].delay\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>move</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<!--<input-number v-model.number=\"obj.textures[obj.frame].movetype\" min=\"0\" max=\"3\" type=\"number\" class=\"input\" />-->\r\n\t\t\t\t\t\t\t\t\t<input-select v-model.number=\"obj.textures[obj.frame].movetype\" class=\"input\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"0\" title=\"\">static</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\" title=\"\">橫向移動</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\" title=\"\">縱向移動</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\" title=\"\">旋轉</option>\r\n\t\t\t\t\t\t\t\t\t</input-select>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-if=\"obj.textures[obj.frame].movetype==1\">\r\n\t\t\t\t\t\t\t\t<td>moveW</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].movew\" type=\"number\" class=\"input\" title=\"移動寬\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-else-if=\"obj.textures[obj.frame].movetype==2\">\r\n\t\t\t\t\t\t\t\t<td>moveH</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].moveh\" type=\"number\" class=\"input\" title=\"移動高\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-if=\"obj.textures[obj.frame].movetype==3\">\r\n\t\t\t\t\t\t\t\t<td>moveR</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].mover\" type=\"number\" class=\"input\" title=\"旋轉週期(ms/π)\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-else-if=\"obj.textures[obj.frame].movetype!=0\">\r\n\t\t\t\t\t\t\t\t<td>moveP</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].movep\" type=\"number\" class=\"input\" title=\"移動週期\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"displayMode==2 || obj.constructor.name.endsWith('SkeletalAnim')\" class=\"info\">\r\n\t\t\t\t\t\t<table class=\"tb\">\r\n\t\t\t\t\t\t\t<tr v-for=\"(val, key) in obj._raw\">\r\n\t\t\t\t\t\t\t\t<td>{{key}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{val}}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n\tprops: [\"objs\", \"displayMode\"],\r\n\t//props: {\r\n\t//\tobjs: {\r\n\t//\t\ttype: MapObjectBase,\r\n\t//\t\trequired: true\r\n\t//\t},\r\n\t//},\r\n\tdata: function () {\r\n\t\treturn {\r\n\t\t\taaaa: 0,\r\n\t\t};\r\n\t},\r\n\tmethods: {\r\n\t\tisShowRX: function (typeb) {\r\n\t\t\treturn typeb == 4 || typeb == 5;\r\n\t\t},\r\n\t\tisShowRY: function (typeb) {\r\n\t\t\treturn typeb == 5 || typeb == 7;\r\n\t\t},\r\n\t\tisShowCX: function (typeb) {\r\n\t\t\treturn typeb == 1 || typeb == 3 || typeb == 4 || typeb == 6 || typeb == 7;\r\n\t\t},\r\n\t\tisShowCY: function (typeb) {\r\n\t\t\treturn typeb == 2 || typeb == 3 || typeb == 5 || typeb == 6 || typeb == 7;\r\n\t\t},\r\n\t\tget_ObjPath_style: function (obj) {\r\n\t\t\tlet style = obj.display_aabb ? { background:obj.aabb_color } : { };\r\n\t\t\tstyle[\"border-bottom\"] = \"1px solid black\";\r\n\t\t\treturn style;\r\n\t\t},\r\n\t\tscrollIntoView: function(event, obj) {\r\n\t\t\tconst center = obj.aabb.center;\r\n\t\t\t$gv.m_viewRect.setCenter(center.x, center.y);\r\n\t\t\tobj.$select();\r\n\t\t\t\r\n\t\t\tevent.currentTarget.scrollIntoView();\r\n\r\n\t\t\tthis.aaaa++;\r\n\t\t},\r\n\t\tfupdate: function () {\r\n\t\t\tthis.$forceUpdate();\r\n\t\t},\r\n\t\tcopyToClipboard: function (event, text) {\r\n\t\t\t//window.copyToClipboard(text);\r\n\t\t\twindow.SelectText(event.currentTarget);\r\n\t\t},\r\n\t},\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.sticky {\r\n\tposition: sticky;\r\n\tleft: 0;\r\n\ttop: 0;\r\n}\r\n\r\n.info {\r\n\tbackground: #f5f5f5;\r\n}\r\n\r\n.view {\r\n\tdisplay: flex;\r\n}\r\n.view > div {\r\n\tflex: 100;\r\n}\r\n\r\n.imgbox {\r\n\tflex: 80;\r\n}\r\n\r\n.table {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n.input {\r\n\twidth: 5em;\r\n}\r\n\r\n.input-xy {\r\n\twidth: 8em;\r\n}\r\n.input-xy > * {\r\n\twidth: 4em;\r\n}\r\n\r\n.img {\r\n\tmax-width: 25vh;\r\n\tmax-height: 25vh;\r\n\tborder-bottom: 1px solid red;\r\n\tborder-left: 1px solid green;\r\n}\r\n\r\n.text {\r\n\tuser-select: text;\r\n}\r\n\r\n.red-text {\r\n\tcolor: red;\r\n}\r\n\r\n.tb, .tb td {\r\n\tborder: 1px solid black;\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n\tuser-select: text;\r\n}\r\n\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-map-editor.vue?vue&type=template&id=6e4fb2d8&scoped=true&\"\nimport script from \"./ui-map-editor.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-map-editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e4fb2d8\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"display\":\"none\"}},[_vm._v(_vm._s(_vm.aaaa))]),_vm._v(\" \"),_vm._l((_vm.objs),function(obj,index){return [_c('div',[_c('div',{staticClass:\"info sticky\",style:(_vm.get_ObjPath_style(obj)),attrs:{\"title\":\"select it and scroll into view\"},on:{\"click\":function($event){_vm.scrollIntoView($event,obj)}}},[_c('span',[_vm._v(\"[\"+_vm._s(index)+\"]\")]),_vm._v(\" \"),_c('span',{staticClass:\"text\",on:{\"contextmenu\":function($event){$event.preventDefault();_vm.copyToClipboard($event,obj._url)}}},[_vm._v(_vm._s(obj._url))])]),_vm._v(\" \"),_c('div',{staticClass:\"view\"},[(_vm.displayMode!=2)?_c('div',{staticClass:\"info\"},[_c('table',{staticClass:\"table\"},[_c('tr',[_c('td',[_vm._v(\"type(sign)\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.type),callback:function ($$v) {_vm.$set(obj, \"type\", _vm._n($$v))},expression:\"obj.type\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"x\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.x),callback:function ($$v) {_vm.$set(obj, \"x\", _vm._n($$v))},expression:\"obj.x\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"y\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.y),callback:function ($$v) {_vm.$set(obj, \"y\", _vm._n($$v))},expression:\"obj.y\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"z\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.z),callback:function ($$v) {_vm.$set(obj, \"z\", _vm._n($$v))},expression:\"obj.z\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"zM\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.zM),callback:function ($$v) {_vm.$set(obj, \"zM\", _vm._n($$v))},expression:\"obj.zM\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"flip\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"1\"},model:{value:(obj.f),callback:function ($$v) {_vm.$set(obj, \"f\", _vm._n($$v))},expression:\"obj.f\"}})],1)]),_vm._v(\" \"),(obj.typeb!=null)?[_c('tr',[_c('td',[_vm._v(\"typeb\")]),_vm._v(\" \"),_c('td',[_c('input-select',{staticClass:\"input\",model:{value:(obj.typeb),callback:function ($$v) {_vm.$set(obj, \"typeb\", _vm._n($$v))},expression:\"obj.typeb\"}},[_c('option',{attrs:{\"value\":\"0\",\"title\":\"\"}},[_vm._v(\"default\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"1\",\"title\":\"horizontal fill\"}},[_vm._v(\"repeat-x\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\",\"title\":\"vertical fill\"}},[_vm._v(\"repeat-y\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"3\",\"title\":\"fill\"}},[_vm._v(\"fill\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"4\",\"title\":\"horizontal roll\"}},[_vm._v(\"roll-x\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"5\",\"title\":\"vertical roll\"}},[_vm._v(\"roll-y\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"6\",\"title\":\"horizontal fill roll\"}},[_vm._v(\"fill roll-x\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"7\",\"title\":\"vertical fill roll\"}},[_vm._v(\"fill roll-y\")])])],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"a\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"min\":\"0\",\"max\":\"255\",\"type\":\"number\"},model:{value:(obj.a),callback:function ($$v) {_vm.$set(obj, \"a\", _vm._n($$v))},expression:\"obj.a\"}})],1)]),_vm._v(\" \"),(_vm.isShowRX(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"rx\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"橫向滾動速度\"},model:{value:(obj.rx),callback:function ($$v) {_vm.$set(obj, \"rx\", _vm._n($$v))},expression:\"obj.rx\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.isShowRY(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"ry\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"縱向滾動速度\"},model:{value:(obj.ry),callback:function ($$v) {_vm.$set(obj, \"ry\", _vm._n($$v))},expression:\"obj.ry\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.isShowCX(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"cx\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"min\":\"0\",\"title\":\"橫向間隔\"},model:{value:(obj.cx),callback:function ($$v) {_vm.$set(obj, \"cx\", _vm._n($$v))},expression:\"obj.cx\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.isShowCY(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"cy\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"min\":\"0\",\"title\":\"縱向間隔\"},model:{value:(obj.cy),callback:function ($$v) {_vm.$set(obj, \"cy\", _vm._n($$v))},expression:\"obj.cy\"}})],1)]):_vm._e()]:_vm._e()],2)]):_c('div',{staticClass:\"info\"},[_c('div',[_vm._v(_vm._s(obj.constructor.name))]),_vm._v(\" \"),_c('div',[_c('table',{staticClass:\"tb\"},_vm._l((obj._raw),function(val,key){return _c('tr',[_c('td',[_vm._v(_vm._s(key))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(val))])])}))])]),_vm._v(\" \"),(obj.textures.length && obj.textures[obj.frame].texture)?_c('div',{staticClass:\"imgbox\"},[_c('div',{staticClass:\"info\"},[(obj.textures[obj.frame]._url.length > 300)?[_c('a',[_vm._v(\"...\")])]:[_c('a',{attrs:{\"href\":obj.textures[obj.frame]._url}},[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\"+_vm._s(obj._texture_base_path)),(obj.constructor.name!='MapBackBase')?_c('span',{staticClass:\"red-text\"},[_vm._v(\"/\"+_vm._s(obj.frame))]):_vm._e()])]],2),_vm._v(\" \"),_c('div',[_c('img',{staticClass:\"img\",attrs:{\"src\":obj.textures[obj.frame].texture.src}})])]):_vm._e(),_vm._v(\" \"),(_vm.displayMode==1)?_c('div',{staticClass:\"info\"},[(obj.textures.length && obj.textures[obj.frame].texture)?_c('table',{staticClass:\"table\"},[_c('tr',[_c('td',[_vm._v(\"frame\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input-sm\",attrs:{\"min\":0,\"max\":obj.textures.length-1,\"type\":\"number\"},on:{\"input\":_vm.fupdate},model:{value:(obj.frame),callback:function ($$v) {_vm.$set(obj, \"frame\", _vm._n($$v))},expression:\"obj.frame\"}}),_vm._v(\" / \"+_vm._s(obj.textures.length-1))],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"center:\")]),_vm._v(\" \"),_c('td',[_c('div',{staticClass:\"input-xy\"},[_c('input-number',{attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].x),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"x\", _vm._n($$v))},expression:\"obj.textures[obj.frame].x\"}}),_vm._v(\" \"),_c('input-number',{attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].y),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"y\", _vm._n($$v))},expression:\"obj.textures[obj.frame].y\"}})],1)])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"size:\")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(obj.textures[obj.frame]._raw.__h)+\" * \"+_vm._s(obj.textures[obj.frame]._raw.__h))])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"opacity\")]),_vm._v(\" \"),_c('td',[_c('div',{staticClass:\"input-xy\"},[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].a0),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"a0\", _vm._n($$v))},expression:\"obj.textures[obj.frame].a0\"}}),_vm._v(\" \"),_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].a1),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"a1\", _vm._n($$v))},expression:\"obj.textures[obj.frame].a1\"}})],1)])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"delay\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].delay),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"delay\", _vm._n($$v))},expression:\"obj.textures[obj.frame].delay\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"move\")]),_vm._v(\" \"),_c('td',[_c('input-select',{staticClass:\"input\",model:{value:(obj.textures[obj.frame].movetype),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"movetype\", _vm._n($$v))},expression:\"obj.textures[obj.frame].movetype\"}},[_c('option',{attrs:{\"value\":\"0\",\"title\":\"\"}},[_vm._v(\"static\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"1\",\"title\":\"\"}},[_vm._v(\"橫向移動\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\",\"title\":\"\"}},[_vm._v(\"縱向移動\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"3\",\"title\":\"\"}},[_vm._v(\"旋轉\")])])],1)]),_vm._v(\" \"),(obj.textures[obj.frame].movetype==1)?_c('tr',[_c('td',[_vm._v(\"moveW\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"移動寬\"},model:{value:(obj.textures[obj.frame].movew),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"movew\", _vm._n($$v))},expression:\"obj.textures[obj.frame].movew\"}})],1)]):(obj.textures[obj.frame].movetype==2)?_c('tr',[_c('td',[_vm._v(\"moveH\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"移動高\"},model:{value:(obj.textures[obj.frame].moveh),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"moveh\", _vm._n($$v))},expression:\"obj.textures[obj.frame].moveh\"}})],1)]):_vm._e(),_vm._v(\" \"),(obj.textures[obj.frame].movetype==3)?_c('tr',[_c('td',[_vm._v(\"moveR\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"旋轉週期(ms/π)\"},model:{value:(obj.textures[obj.frame].mover),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"mover\", _vm._n($$v))},expression:\"obj.textures[obj.frame].mover\"}})],1)]):(obj.textures[obj.frame].movetype!=0)?_c('tr',[_c('td',[_vm._v(\"moveP\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"移動週期\"},model:{value:(obj.textures[obj.frame].movep),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"movep\", _vm._n($$v))},expression:\"obj.textures[obj.frame].movep\"}})],1)]):_vm._e(),_vm._v(\" \"),_vm._m(0,true)]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.displayMode==2 || obj.constructor.name.endsWith('SkeletalAnim'))?_c('div',{staticClass:\"info\"},[_c('table',{staticClass:\"tb\"},_vm._l((obj._raw),function(val,key){return _c('tr',[_c('td',[_vm._v(_vm._s(key))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(val))])])}))]):_vm._e()])]),_vm._v(\" \"),_c('hr')]})],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td'),_vm._v(\" \"),_c('td')])}]\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<div @contextmenu.self.prevent=\"\" class=\"dialog-group Editor\">\r\n\t\t\r\n\t\t<ui-dialog :position=\"wnds.menu.pos\" width=\"302px\">\r\n\t\t\t<template slot=\"header\">\r\n\t\t\t\tMenu\r\n\t\t\t</template>\r\n\t\t\t<template>\r\n\t\t\t\t<details open>\r\n\t\t\t\t\t<summary>bgm</summary>\r\n\t\t\t\t\t<div ref=\"bgm_outer\"></div>\r\n\t\t\t\t</details>\r\n\t\t\t\t<details open>\r\n\t\t\t\t\t<summary>window</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<div v-for=\"(wnd, key) in wnds\" v-if=\"!wnd.name.startsWith('$')\">\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"wnd.visable\" @click=\"$refs[key]?$refs[key].requireOrder($event):undefined\" checked /> {{wnd.name}}\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t</template>\r\n\t\t\t<template>\r\n\t\t\t\t<details>\r\n\t\t\t\t\t<summary>scene</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\tMap <input @keydown.enter=\"gv.scene_map.load($event.target.value.padStart(9, '0'))\" />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>map</legend>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_is_rendering_map\" />Map</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_back\" />back</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_front\" />front</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_mapobj\" />object</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_maptile\" />tile</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_portal\" />portal</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>map</legend>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_particle_system\" />particle system</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_skeletal_anim\" />skeletal animation</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>life</legend>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_life\" />life</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_player\" />player</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_other_player\" />other player</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t\t<details>\r\n\t\t\t\t\t<summary>editor</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_foothold\" /> foothold</label>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_selected_object\" /> selected object</label>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t\t<details>\r\n\t\t\t\t\t<summary>debug</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"gv.m_display_debug_info\" /> debug info</label></div>\r\n\r\n\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"gv.m_display_physics_debug\" /> physics debug</label></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div v-for=\"flagName in gv.m_debugDraw.flagNames\">\r\n\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model.number=\"gv.m_debugDraw[flagName]\" /> {{flagName.slice(5)}}</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>axis length <input type=\"number\" v-model=\"gv.m_debugDraw.axis_length\" step=\"0.1\" /></label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t</template>\r\n\t\t</ui-dialog>\r\n\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-dialog ref=\"character_list\" v-show=\"wnds.character_list.visable\" :position=\"wnds.character_list.pos\" width=\"16.1em\" height=\"50vh\">\r\n\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\tCharacters\r\n\t\t\t\t\t<template v-if=\"progressMaximum\">\r\n\t\t\t\t\t\t[loading: {{progressValue}} / {{progressMaximum}}]\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t<div :style=\"{filter: 'blur(' + (progressMaximum?3:0) + 'px)'}\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>{{charaList.length}} characters</span>\r\n\t\t\t\t\t\t\t<div class=\"chara-ls-btn-group\">\r\n\t\t\t\t\t\t\t\t<button @click=\"addNewChara\" class=\"chara-ls-btn\" title=\"Add new\"><img src=\"images/toolstrip_character.png\" alt=\"Add new\" /></button>\r\n\t\t\t\t\t\t\t\t<button @click=\"addCloneChara\" class=\"chara-ls-btn\" title=\"Add clone\"><img src=\"images/toolstrip_duplicate.png\" alt=\"Add clone\" /></button>\r\n\t\t\t\t\t\t\t\t<button @click=\"loadCharacters\" class=\"chara-ls-btn\" title=\"Load\"><span class=\"ui-icon ui-icon-folder-open\" alt=\"📂\"></span></button>\r\n\t\t\t\t\t\t\t\t<button @click=\"saveCharacters\" class=\"chara-ls-btn\" title=\"Save all\"><img src=\"images/toolstrip_save_all.png\" alt=\"Save all\" /></button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ui-sortable :items=\"charaList\" @input=\"oninput_sort\" class=\"ui-character-list\">\r\n\t\t\t\t\t\t\t<template slot-scope=\"{item, index}\">\r\n\t\t\t\t\t\t\t\t<li :id=\"item.id\" @mousedown.left=\"selectChara(item.id)\" :class=\"[(selected == item.id ? 'active':''), item.id].join(' ')\" :title=\"item.id\" :key=\"item.id\">\r\n\t\t\t\t\t\t\t\t\t<table style=\"width:100%;\">\r\n\t\t\t\t\t\t\t\t\t\t<tr @contextmenu.prevent=\"openCharacterDLMenu($event, item.id);\">\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{{index}}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{{item.id}}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"position: relative;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ui-character :chara=\"item.renderer\"></ui-character>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</ui-sortable>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"progressMaximum\" class=\"loading\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<progress :value=\"progressValue\" :max=\"progressMaximum\"></progress>\r\n\t\t\t\t\t\t\t<div>loading [{{progressValue}} / {{progressMaximum}}]</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-dialog>\r\n\t\t</transition>\r\n\t\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-dialog ref=\"character_list\" v-show=\"wnds.character_attribute.visable\" :position=\"wnds.character_attribute.pos\" width=\"20em\" height=\"50vh\">\r\n\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\tCharacter attribute\r\n\t\t\t\t</template>\r\n\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t<div v-if=\"chara!=null\">\r\n\t\t\t\t\t\t<ui-character-attribute :sceneChara=\"chara\"></ui-character-attribute>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-dialog>\r\n\t\t</transition>\r\n\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-dialog ref=\"spawnpoint\" v-show=\"wnds.spawnpoint.visable\" :position.sync=\"wnds.spawnpoint.pos\" height=\"50vh\">\r\n\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\tSpawn point\r\n\t\t\t\t</template>\r\n\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t<ui-mob-list @resize=\"$refs.spawnpoint.reset_content_style()\"></ui-mob-list>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-dialog>\r\n\t\t</transition>\r\n\t\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-equip-box ref=\"equip_box\"\r\n\t\t\t\t\t\t  v-show=\"wnds.equip_box.visable\"\r\n\t\t\t\t\t\t  :position=\"wnds.equip_box.pos\"\r\n\t\t\t\t\t\t  width=\"20em\"\r\n\t\t\t\t\t\t  :height=\"400\"\r\n\t\t\t\t\t\t  @clickItem=\"clickItem\"\r\n\t\t\t\t\t\t  @hoverItem=\"hoverItem\"\r\n\t\t\t\t\t\t  @mouseleaveItem=\"mouseleaveItem\"\r\n\t\t\t\t\t\t  @faceColor=\"faceColor\"\r\n\t\t\t\t\t\t  @hairColor=\"hairColor\"\r\n\t\t\t\t\t\t  @hairColor2=\"hairColor2\"\r\n\t\t\t\t\t\t  @hairMix2=\"hairMix2\"\r\n\t\t\t\t\t\t  >\r\n\t\t\t</ui-equip-box>\r\n\t\t</transition>\r\n\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<template v-if=\"mapEditorMode.startsWith('layered')\">\r\n\t\t\t\t<ui-dialog v-show=\"wnds.debug_window.visable\" :position=\"wnds.debug_window.pos\" width=\"40vw\" height=\"70vh\">\r\n\t\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\t\t<select v-model=\"mapEditorMode\">\r\n\t\t\t\t\t\t\t<option value=\"background\">background</option>\r\n\t\t\t\t\t\t\t<option value=\"frontground\">frontground</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredObject\">layered object</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredTile\">layered tile</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\tmode <input v-model=\"displayMode\" type=\"number\" min=\"0\" max=\"2\" style=\"width: 1.8em;\">\r\n\t\t\t\t\t\t<button @click=\"dirty++\">{{dirty}}</button>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t\t<div v-if=\"scene_map() && scene_map()[mapEditorMode].length\" :style=\"wnd_debug_style\">\r\n\t\t\t\t\t\t\t<div style=\"background: white;\">\r\n\t\t\t\t\t\t\t\t<input v-model=\"wnd_debug_style.background\" type=\"color\" title=\"window background color\" />\r\n\t\t\t\t\t\t\t\t<label>layer <select v-model=\"selectedLayer\">\r\n\t\t\t\t\t\t\t\t\t\t<option v-for=\"layer in scene_map()[mapEditorMode].length\">{{layer - 1}}</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<span>{{scene_map()[mapEditorMode][selectedLayer].length}} objs</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<ui-map-editor :objs=\"scene_map()[mapEditorMode][selectedLayer]\" :displayMode=\"displayMode\"></ui-map-editor>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</ui-dialog>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<ui-dialog v-show=\"wnds.debug_window.visable\" :position=\"wnds.debug_window.pos\" width=\"40vw\" height=\"70vh\">\r\n\t\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\t\t<select v-model=\"mapEditorMode\">\r\n\t\t\t\t\t\t\t<option value=\"background\">background</option>\r\n\t\t\t\t\t\t\t<option value=\"frontground\">frontground</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredObject\">layered object</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredTile\">layered tile</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\ttex info <input v-model=\"displayMode\" type=\"number\" min=\"0\" max=\"2\" style=\"width: 1.8em;\">\r\n\t\t\t\t\t\t<button @click=\"dirty--\">{{dirty}}</button>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t\t<div v-if=\"scene_map() && scene_map()[mapEditorMode].length\" :style=\"wnd_debug_style\">\r\n\t\t\t\t\t\t\t<div style=\"background: white;\">\r\n\t\t\t\t\t\t\t\t<input v-model=\"wnd_debug_style.background\" type=\"color\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<ui-map-editor :objs=\"scene_map()[mapEditorMode]\" :displayMode=\"displayMode\"></ui-map-editor>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</ui-dialog>\r\n\t\t\t</template>\r\n\t\t</transition>\r\n\t\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-menu :show=\"is_show_chara_dl_menu\" ref=\"chara_dl_menu\" @close=\"closeCharacterDLMenu\" style=\"position: absolute; width: 8em; z-index: 99999;\">\r\n\t\t\t\t<template v-if=\"chara\">\r\n\t\t\t\t\t<a @click=\"_save_as_png\">Save as PNG</a>\r\n\t\t\t\t\t<a @click=\"chara.renderer._save_as_svg()\">Save as SVG</a>\r\n\t\t\t\t\t<template v-if=\"progressMaximum == 0 || progressValue >= progressMaximum\">\r\n\t\t\t\t\t\t<a :href=\"chara.renderer._outlink()\">Outlink</a>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t<div title=\"loading...\">Outlink</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<a @click=\"copyCharaCode\">Copy code</a>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t<a class=\"disable\">Save as SVG</a>\r\n\t\t\t\t\t<a class=\"disable\" href=\"javascript:void(0)\">Outlink</a>\r\n\t\t\t\t\t<a class=\"disable\">Copy code</a>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-menu>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport Vuex from 'vuex';\r\n\r\n\timport UIDraggable from '../components/ui-draggable.vue';\r\n\timport UIDialog from '../components/ui-dialog.vue';\r\n\timport UISortable from '../components/ui-sortable.vue';\r\n\timport UITrigger from '../components/ui-trigger.vue';\r\n\timport UIMenu from '../components/ui-menu.vue';\r\n\r\n\timport UIEquipBox from './ui-equip-box.vue';\r\n\timport UICharacter from './ui-character.vue';\r\n\timport UICharacterSVG from './ui-character-svg.vue';\r\n\timport UICharacterAttribute from './ui-character-attribute.vue';\r\n\r\n\timport UIMobList from \"./ui-mob-list.vue\";\r\n\timport UIMapEditor from \"./ui-map-editor.vue\";\r\n\r\n\t//import { GameStateManager } from '../game/GameState.js';\r\n\r\n\timport { ItemCategoryInfo } from '../../public/javascripts/resource.js';\r\n\timport { BaseSceneCharacter, SceneCharacter, SceneRemoteCharacter } from '../game/SceneCharacter.js';\r\n\r\n\timport { engine } from '../game/Engine.js';\r\n\r\n\tconst store = new Vuex.Store({\r\n\t\t//strict: process.env.NODE_ENV !== 'production',\r\n\t\tstate: {\r\n\t\t\tcharaList: [],\r\n\t\t\tchara: null,/** @type {BaseSceneCharacter} chara */\r\n\t\t\tselected: null,/** @type {string} id */\r\n\t\t\t_last_id: 0,\r\n\r\n\t\t\tprogressValue: 0,\r\n\t\t\tprogressMaximum: 0,\r\n\t\t},\r\n\t\tgetters: {\r\n\t\t\tlastId: function (state, getters) {\r\n\t\t\t\treturn \"chara_\" + state._last_id;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmutations: {\r\n\t\t\tclear: function (state) {\r\n\t\t\t\tstate.charaList = [];\r\n\t\t\t},\r\n\t\t\tincreaseId(state) {\r\n\t\t\t\tstate._last_id += 1;\r\n\t\t\t},\r\n\t\t\tincreaseProgress: function (state, payload) {\r\n\t\t\t\tstate.progressValue += payload.amount;\r\n\t\t\t\tif (state.progressValue >= state.progressMaximum) {\r\n\t\t\t\t\tstate.progressValue = 0;\r\n\t\t\t\t\tstate.progressMaximum = 0;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tincreaseProgressMax: function (state, payload) {\r\n\t\t\t\tstate.progressMaximum += payload.amount;\r\n\t\t\t},\r\n\t\t\t//decreaseProgress: function (state, payload) {\r\n\t\t\t//},\r\n\t\t},\r\n\t\tactions: {\r\n\t\t\tisIdExist: function (context, payload) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tif (payload && payload.id) {\r\n\t\t\t\t\tconst id = payload.id;\r\n\t\t\t\t\tfor (let i = 0; i < state.charaList.length; ++i) {\r\n\t\t\t\t\t\tlet chara = state.charaList[i];\r\n\t\t\t\t\t\tif (chara.id == id) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tsortCharaById: function (context, payload) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tstate.charaList = state.charaList.sort((a, b) => {\r\n\t\t\t\t\tconst na = get_n(a.id);\r\n\t\t\t\t\tconst nb = get_n(b.id);\r\n\r\n\t\t\t\t\treturn na - nb;\r\n\r\n\t\t\t\t\tfunction get_n(id) {\r\n\t\t\t\t\t\tif (!a) return 0;\r\n\t\t\t\t\t\tlet n = Number(id).split(\"_\")[1];\r\n\t\t\t\t\t\treturn n | 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tselectChara: function (context, payload) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tconst id = payload.id;\r\n\r\n\t\t\t\tlet index = -1;\r\n\t\t\t\tfor (let i = 0; i < state.charaList.length; ++i) {\r\n\t\t\t\t\tconst chara = state.charaList[i];\r\n\t\t\t\t\tif (chara.id == id) {\r\n\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t/** @type {SceneCharacter} */\r\n\t\t\t\t\tconst selected_chara = state.charaList[index];\r\n\t\t\t\t\tif (selected_chara.$remote) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (state.chara) {\r\n\t\t\t\t\t\t\tstate.chara.enablePhysics = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\tselected_chara.enablePhysics = true;\r\n\t\t\t\t\t\tif (selected_chara.$physics) {\r\n\t\t\t\t\t\t\tconst x = selected_chara.renderer.x / $gv.CANVAS_SCALE;\r\n\t\t\t\t\t\t\tconst y = selected_chara.renderer.y / $gv.CANVAS_SCALE;\r\n\t\t\t\t\t\t\tselected_chara.$physics.setPosition(x, y, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twindow.chara = state.chara = selected_chara;\r\n\t\t\t\t\t//\r\n\t\t\t\t\tstate.selected = id;\r\n\r\n\t\t\t\t\treturn id;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_addChara: async function (context, payload) {//add exist\r\n\t\t\t\tconst state = context.state;\r\n\r\n\t\t\t\tif (payload && payload.chara instanceof BaseSceneCharacter) {\r\n\t\t\t\t\tconst chara = payload.chara;\r\n\r\n\t\t\t\t\tawait chara.renderer.__synchronize();\r\n\r\n\t\t\t\t\tstate.charaList.push(chara);\r\n\r\n\t\t\t\t\tcontext.dispatch('selectChara', {\r\n\t\t\t\t\t\tid: chara.id,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tcontext.commit(\"increaseProgress\", { amount: 1 });\r\n\r\n\t\t\t\t\treturn chara;\r\n\t\t\t\t}\r\n\t\t\t\tdebugger;\r\n\t\t\t},\r\n\t\t\t_createChara: async function (context, payload) {\r\n\t\t\t\tif (window.$io && payload && payload.remote_chara) {\r\n\t\t\t\t\t//alert(\"dont use _createChara in online mode\");\r\n\t\t\t\t\t//return;\r\n\t\t\t\t\tpayload.emplace = payload.remote_chara;\r\n\t\t\t\t}\r\n\t\t\t\tconst state = context.state;\r\n\r\n\t\t\t\tcontext.commit(\"increaseId\");\r\n\t\t\t\tconst id = context.getters.lastId;\r\n\r\n\t\t\t\t/** @type {SceneCharacter} */\r\n\t\t\t\tlet chara;\r\n\r\n\t\t\t\t//const handler = {\r\n\t\t\t\t//\tdefineProperty(target, key, descriptor) {\r\n\t\t\t\t//\t\tif (key == \"$physics\") {\r\n\t\t\t\t//\t\t\tdebugger;\r\n\t\t\t\t//\t\t}\r\n\t\t\t\t//\t\treturn Reflect.defineProperty(...arguments);\r\n\t\t\t\t//\t},\r\n\t\t\t\t//\tset(target, key, descriptor) {\r\n\t\t\t\t//\t\tif (key == \"$physics\") {\r\n\t\t\t\t//\t\t\tdebugger;\r\n\t\t\t\t//\t\t}\r\n\t\t\t\t//\t\treturn Reflect.set(...arguments);\r\n\t\t\t\t//\t},\r\n\t\t\t\t//\townKeys(target, key, descriptor) {\r\n\t\t\t\t//\t\tif (key == \"$physics\") {\r\n\t\t\t\t//\t\t\tdebugger;\r\n\t\t\t\t//\t\t}\r\n\t\t\t\t//\t\treturn Reflect.ownKeys(...arguments);\r\n\t\t\t\t//\t},\r\n\t\t\t\t//};\r\n\t\t\t\tif (payload && payload.remote_chara) {\r\n\t\t\t\t\tchara = new SceneRemoteCharacter(window.scene_map);\r\n\t\t\t\t\t//chara = new Proxy(new SceneRemoteCharacter(window.scene_map), handler);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tchara = new SceneCharacter(window.scene_map);\r\n\t\t\t\t\t//chara = new Proxy(new SceneCharacter(window.scene_map), handler);\r\n\t\t\t\t}\r\n\t\t\t\tchara.id = id;\r\n\r\n\t\t\t\t//step 1: load base data\r\n\t\t\t\tawait chara.renderer.load();\r\n\t\t\t\tcontext.commit(\"increaseProgress\", { amount: 1 });\r\n\r\n\t\t\t\t//step 2: load equip...\r\n\t\t\t\tif (payload) {\r\n\t\t\t\t\tif (payload.chara instanceof BaseSceneCharacter) {//clone\r\n\t\t\t\t\t\tchara.renderer._parse(payload.chara.renderer._stringify(false));\r\n\r\n\t\t\t\t\t\tchara.renderer.x = payload.chara.renderer.x;\r\n\t\t\t\t\t\tchara.renderer.y = payload.chara.renderer.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (payload.emplace) {\r\n\t\t\t\t\t\tchara.id = payload.emplace.id;\r\n\t\t\t\t\t\tchara.renderer._parse(payload.emplace.code);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tchara.renderer._setup_test();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet result = await context.dispatch('_addChara', {\r\n\t\t\t\t\tchara: chara,\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (window.scene_map) {\r\n\t\t\t\t\t\twindow.scene_map.addChara(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ex) {\r\n\t\t\t\t\tconsole.error(ex);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\t\t\tcreateChara: async function (context, payload) {\r\n\t\t\t\tcontext.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\treturn await context.dispatch('_createChara', payload);\r\n\t\t\t},\r\n\t\t\t//replaceCharacter: async function (context) {\r\n\t\t\t//},\r\n\t\t\tloadCharacters: async function (context) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tlet list =  JSON.parse(window.localStorage.getItem(\"chara_list\"));\r\n\t\t\t\tif (!list) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//clear\r\n\t\t\t\tcontext.commit(\"clear\");\r\n\r\n\t\t\t\tcontext.commit(\"increaseProgressMax\", { amount: list.length * 2 });\r\n\r\n\t\t\t\tfor (let index = 0; index < list.length; ++index) {\r\n\t\t\t\t\tconst savedChara = list[index];\r\n\r\n\t\t\t\t\tlet isIdExist = await context.dispatch('isIdExist', {\r\n\t\t\t\t\t\tid: savedChara.id,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (isIdExist) {\r\n\t\t\t\t\t\t//console.log(\"replace character[\" + index + \"]: \" + savedChara.id);\r\n\t\t\t\t\t\tconsole.log(\"character: \" + savedChara.id + \"is exist\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log(\"load character[\" + index + \"]: \" + savedChara.id);\r\n\t\t\t\t\t\tawait context.dispatch('_createChara', {\r\n\t\t\t\t\t\t\templace: {\r\n\t\t\t\t\t\t\t\tid: savedChara.id,\r\n\t\t\t\t\t\t\t\tcode: savedChara.code,\r\n\t\t\t\t\t\t\t\t//index: index,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsaveCharacters: function (context) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tlet ls_charaList = [];\r\n\r\n\t\t\t\tstate.charaList.forEach(function (chara, index) {\r\n\t\t\t\t\tconst id = chara.id;\r\n\t\t\t\t\tconst code = chara.renderer._stringify(false);\r\n\r\n\t\t\t\t\tls_charaList[index] = {\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tcode: code,\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\r\n\t\t\t\twindow.localStorage.setItem(\"chara_list\", JSON.stringify(ls_charaList));\r\n\t\t\t},\r\n\t\t}\r\n\t});\r\n\r\n\texport default {\r\n\t\tstore,\r\n\t\tdata: function () {\r\n\t\t\tlet scr_rat_x = window.innerWidth / 1366;\r\n\t\t\tlet scr_rat_y = window.innerHeight / 768;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdirty: 0,\r\n\r\n\t\t\t\t//chara: {},\r\n\t\t\t\t//windowOrder: [1, 2, 3],\r\n\t\t\t\tis_show_chara_dl_menu: false,\r\n\r\n\t\t\t\tmapEditorMode: \"layeredObject\",\r\n\t\t\t\tdisplayMode: 0,\r\n\t\t\t\tselectedLayer: 0,\r\n\t\t\t\twnd_debug_style: { background: \"#ffffff\", padding: \"0 0.5em\" },\r\n\r\n\t\t\t\twnds: {\r\n\t\t\t\t\tmenu: { name: \"$menu\", visable: true, pos: { x: 0, y: 0 } },\r\n\t\t\t\t\tcharacter_list: { name: \"Characters\", visable: true, pos: { x: 900 * scr_rat_x, y: 220 * scr_rat_y } },\r\n\t\t\t\t\tcharacter_attribute: { name: \"Character attribute\", visable: true, pos: { x: 900 * scr_rat_x, y: 0 * scr_rat_y } },\r\n\t\t\t\t\tequip_box: { name: \"Equip box\", visable: true, pos: { x: 0 * scr_rat_x, y: 50 * scr_rat_y } },\r\n\t\t\t\t\tspawnpoint: { name: \"Spawn point\", visable: false, pos: { x: 350 * scr_rat_x, y: 0 * scr_rat_y } },\r\n\t\t\t\t\tdebug_window: {\r\n\t\t\t\t\t\tname: \"Map editor (Debug)\",\r\n\t\t\t\t\t\tvisable: false,\r\n\t\t\t\t\t\tpos: { x: 0 * scr_rat_x, y: 100 * scr_rat_y },\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\r\n\t\t\t\tgv: $gv,\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: Object.assign(\r\n\t\t\tVuex.mapState({\r\n\t\t\t\tcharaList: \"charaList\",\t// chara[]\r\n\t\t\t\tselected: \"selected\",\t// charaId\r\n\t\t\t\tchara: \"chara\",\t\t\t// current chara\r\n\t\t\t\tprogressValue: \"progressValue\",\r\n\t\t\t\tprogressMaximum: \"progressMaximum\",\r\n\t\t\t}),\r\n\t\t\t{\r\n\t\t\t}\r\n\t\t),\r\n\t\tmethods: {\r\n\t\t\tscene_map: function () {\r\n\t\t\t\treturn window.scene_map;\r\n\t\t\t},\r\n\t\t\tloadCharacters: function () {\r\n\t\t\t\tconsole.log(\"load character\");\r\n\t\t\t\tthis.$store.dispatch('loadCharacters');\r\n\t\t\t},\r\n\t\t\tsaveCharacters: function () {\r\n\t\t\t\tconsole.log(\"save characters\");\r\n\t\t\t\talert(\"save characters\");\r\n\t\t\t\tthis.$store.dispatch('saveCharacters');\r\n\t\t\t},\r\n\t\t\tselectChara: function (id) {\r\n\t\t\t\tconsole.log(\"select character: \" + id);\r\n\t\t\t\tthis.$store.dispatch(\"selectChara\", {\r\n\t\t\t\t\tid: id\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\taddNewChara: function () {\r\n\t\t\t\tconsole.log(\"create new character\");\r\n\t\t\t\tthis.$store.dispatch('createChara');\r\n\t\t\t},\r\n\t\t\taddCloneChara: function () {\r\n\t\t\t\tif (!this.chara) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"clone character: \" + this.chara.id);\r\n\t\t\t\tthis.$store.dispatch('createChara', {\r\n\t\t\t\t\tchara: this.chara\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\toninput_sort: function (value) {\r\n\t\t\t\tthis.$store.state.charaList = value;\r\n\t\t\t},\r\n\r\n\t\t\tfaceColor: async function ({ color }) {\r\n\t\t\t\tif (this.chara) {\r\n\t\t\t\t\tif (this.chara && color != null) {\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\t\t\tthis.chara.renderer.faceColor = color;\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tawait this.chara.renderer.__synchronize(0);\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thairColor: async function ({ color }) {\r\n\t\t\t\tif (this.chara) {\r\n\t\t\t\t\tif (this.chara && color != null) {\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\t\t\tthis.chara.renderer.hairColor = color;\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tawait this.chara.renderer.__synchronize(0);\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t$hairMixColor2: function ({ color, mix }) {\r\n\t\t\t\tconst vm = this;\r\n\r\n\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 1 });\r\n\r\n\t\t\t\tthis.chara.renderer.slots.hairColor2 = color;\r\n\t\t\t\tPromise.all([this.chara.renderer.slots.hair.$promise_hair2, this.chara.renderer.slots.hair.$promise_hair3]).then(async function (hair2, hair3) {\r\n\t\t\t\t\tawait vm.chara.renderer.__synchronize(0);\r\n\t\t\t\t\tvm.chara.renderer.slots.hairMix2 = mix;\r\n\t\t\t\t\tapp.updateScreen();\r\n\r\n\t\t\t\t\tvm.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t}).catch(function (reason) {\r\n\t\t\t\t\tvm.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\thairColor2: function (params) {\r\n\t\t\t\tthis.$hairMixColor2(params);\r\n\t\t\t},\r\n\t\t\thairMix2: function (params) {\r\n\t\t\t\tthis.$hairMixColor2(params);\r\n\t\t\t},\r\n\r\n\t\t\tclickItem: function (payload) {\r\n\t\t\t\tlet { id, category, equip } = payload;\r\n\r\n\t\t\t\tif (this.chara) {\r\n\t\t\t\t\tif (window.$io) {\r\n\t\t\t\t\t\treturn this.chara.useItem(id, category).then(function (result) {\r\n\t\t\t\t\t\t\tconsole.log(\"can't use item: \" + id);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (!this.chara.renderer.unuse(id)) {\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tthis.chara.useItem(id, category, equip);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: -2 });\r\n\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t\tthrow ex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tthis.chara.renderer.__synchronize(0).then(() => {\r\n\t\t\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });//force exit\r\n\t\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t\tthrow ex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.$emit(\"hoverItem\", payload);\r\n\t\t\t},\r\n\t\t\thoverItem: function (payload) {\r\n\t\t\t\tthis.$emit(\"hoverItem\", payload);\r\n\t\t\t},\r\n\t\t\tmouseleaveItem: function (payload) {\r\n\t\t\t\tthis.$emit(\"mouseleaveItem\", payload);\r\n\t\t\t},\r\n\r\n\t\t\topenCharacterDLMenu: function (e, id) {\r\n\t\t\t\tlet vm = this;\r\n\t\t\t\tvm.$store.dispatch(\"selectChara\", {\r\n\t\t\t\t\tid: id\r\n\t\t\t\t}).then(function () {\r\n\t\t\t\t\tvm.is_show_chara_dl_menu = true;\r\n\r\n\t\t\t\t\tvm.$nextTick(function () {\r\n\t\t\t\t\t\tvm.$refs.chara_dl_menu.setPosition({\r\n\t\t\t\t\t\t\tmy: \"left top\",\r\n\t\t\t\t\t\t\tof: e,\r\n\t\t\t\t\t\t\t//collision: \"fit\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//console.log(\"openCharacterDLMenu\");\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tcloseCharacterDLMenu: function () {\r\n\t\t\t\tlet vm = this;\r\n\t\t\t\tvm.is_show_chara_dl_menu = false;\r\n\t\t\t\t//console.log(\"closeCharacterDLMenu\");\r\n\t\t\t},\r\n\t\t\tcopyCharaCode: function () {\r\n\t\t\t\tlet code = this.chara.renderer._stringify(false);\r\n\t\t\t\tcopyToClipboard(code);\r\n\t\t\t},\r\n\t\t\t_save_as_png: function () {\r\n\t\t\t\tthis.chara.renderer._save_as_png(engine, this.chara.id);\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tlet elem = document.getElementById(\"bgm\");\r\n\t\t\t\r\n\t\t\tthis.$refs.bgm_outer.appendChild(elem);\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\t\"ui-draggable\": UIDraggable,\r\n\t\t\t\"ui-dialog\": UIDialog,\r\n\t\t\t\"ui-sortable\": UISortable,\r\n\t\t\t\"ui-trigger\": UITrigger,\r\n\t\t\t\"ui-menu\": UIMenu,\r\n\r\n\t\t\t\"ui-character\": UICharacter,\r\n\t\t\t\"ui-character-svg\": UICharacterSVG,\r\n\t\t\t\"ui-character-attribute\": UICharacterAttribute,\r\n\t\t\t\"ui-equip-box\": UIEquipBox,\r\n\r\n\t\t\t\"ui-mob-list\": UIMobList,\r\n\t\t\t\"ui-map-editor\": UIMapEditor,\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.dialog-group {\r\n\t\tposition: fixed;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.ui-dialog .ui-equip-box-dialog.ui-dialog-content {\r\n\t\tpadding: 0;\r\n\t\twidth: 100% !important;\r\n\t}\r\n\r\n\t/*li.active {\r\n\t\tbackground-color: lightcyan;\r\n\t}\r\n\t*/\r\n\t.ui-character-list .active {\r\n\t\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\r\n\t\tbackground-color: #ffec64;\r\n\t}\r\n\r\n\t.ui-character-list {\r\n\t\tlist-style: none;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t.ui-character-list > li {\r\n\t\twidth: 16em;\r\n\t}\r\n\r\n\t.ui-character-list table {\r\n\t\twidth: 100%;\r\n\t\t/*border-collapse: collapse;*/\r\n\t}\r\n\t\r\n\t.ui-character-list td:nth-child(1) {\r\n\t\t/*border: 1px solid black;*/\r\n\t\twidth: 20%;\r\n\t}\r\n\r\n\t.ui-character-list td:nth-child(2) {\r\n\t\t/*border: 1px solid black;*/\r\n\t\twidth: 50%;\r\n\t}\r\n\r\n\t/*\r\n\t.ui-character-list td:first-child {\r\n\t}\r\n\t*/\r\n\r\n\t/*.ui-character-list td:last-child {\r\n\t\tfloat: right;\r\n\t}*/\r\n\t\r\n\t.chara-ls-btn-group {\r\n\t\tdisplay: inline;\r\n\t\tfloat: right;\r\n\t}\r\n\t.chara-ls-btn {\r\n\t    display: inline-flex;\r\n\t\twidth: 20px;\r\n\t\theight: 20px;\r\n\t\tpadding: 0;\r\n\t}\r\n\t.chara-ls-btn > * {\r\n\t\tmargin: auto;\r\n\t\tpadding: 0;\r\n\t}\r\n\t\r\n\t.loading {\r\n\t\tposition: absolute;\r\n\t\ttop:0;\r\n\t\tleft:0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(100, 100, 100, 0.5);\r\n\t\ttext-shadow: 1px 1px 0 white, 0 0 1px white;\r\n\t\t\r\n\t\tdisplay:flex;\r\n\t\talign-items:center;\r\n\t\tjustify-content:center;\r\n\t}\r\n\r\n\t/*\r\n\t\thttp://www.oxxostudio.tw/articles/201408/sticky-ball.html\r\n\t*/\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./editor.vue?vue&type=template&id=89d3864e&scoped=true&\"\nimport script from \"./editor.vue?vue&type=script&lang=js&\"\nexport * from \"./editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./editor.vue?vue&type=style&index=0&id=89d3864e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"89d3864e\",\n  null\n  \n)\n\nexport default component.exports","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport function b2Assert(condition, ...args) {\r\n    if (!condition) {\r\n        debugger;\r\n    }\r\n}\r\nexport const b2_maxFloat = 1E+37; // FLT_MAX instead of Number.MAX_VALUE;\r\nexport const b2_epsilon = 1E-5; // FLT_EPSILON instead of Number.MIN_VALUE;\r\nexport const b2_epsilon_sq = (b2_epsilon * b2_epsilon);\r\nexport const b2_pi = 3.14159265359; // Math.PI;\r\n/// @file\r\n/// Global tuning constants based on meters-kilograms-seconds (MKS) units.\r\n///\r\n// Collision\r\n/// The maximum number of contact points between two convex shapes. Do\r\n/// not change this value.\r\nexport const b2_maxManifoldPoints = 2;\r\n/// The maximum number of vertices on a convex polygon. You cannot increase\r\n/// this too much because b2BlockAllocator has a maximum object size.\r\nexport const b2_maxPolygonVertices = 8;\r\n/// This is used to fatten AABBs in the dynamic tree. This allows proxies\r\n/// to move by a small amount without triggering a tree adjustment.\r\n/// This is in meters.\r\nexport const b2_aabbExtension = 0.1;\r\n/// This is used to fatten AABBs in the dynamic tree. This is used to predict\r\n/// the future position based on the current displacement.\r\n/// This is a dimensionless multiplier.\r\nexport const b2_aabbMultiplier = 2;\r\n/// A small length used as a collision and constraint tolerance. Usually it is\r\n/// chosen to be numerically significant, but visually insignificant.\r\nexport const b2_linearSlop = 0.008; // 0.005;\r\n/// A small angle used as a collision and constraint tolerance. Usually it is\r\n/// chosen to be numerically significant, but visually insignificant.\r\nexport const b2_angularSlop = 2 / 180 * b2_pi;\r\n/// The radius of the polygon/edge shape skin. This should not be modified. Making\r\n/// this smaller means polygons will have an insufficient buffer for continuous collision.\r\n/// Making it larger may create artifacts for vertex collision.\r\nexport const b2_polygonRadius = 2 * b2_linearSlop;\r\n/// Maximum number of sub-steps per contact in continuous physics simulation.\r\nexport const b2_maxSubSteps = 8;\r\n// Dynamics\r\n/// Maximum number of contacts to be handled to solve a TOI impact.\r\nexport const b2_maxTOIContacts = 32;\r\n/// A velocity threshold for elastic collisions. Any collision with a relative linear\r\n/// velocity below this threshold will be treated as inelastic.\r\nexport const b2_velocityThreshold = 1;\r\n/// The maximum linear position correction used when solving constraints. This helps to\r\n/// prevent overshoot.\r\nexport const b2_maxLinearCorrection = 0.2;\r\n/// The maximum angular position correction used when solving constraints. This helps to\r\n/// prevent overshoot.\r\nexport const b2_maxAngularCorrection = 8 / 180 * b2_pi;\r\n/// The maximum linear velocity of a body. This limit is very large and is used\r\n/// to prevent numerical problems. You shouldn't need to adjust this.\r\nexport const b2_maxTranslation = 2;\r\nexport const b2_maxTranslationSquared = b2_maxTranslation * b2_maxTranslation;\r\n/// The maximum angular velocity of a body. This limit is very large and is used\r\n/// to prevent numerical problems. You shouldn't need to adjust this.\r\nexport const b2_maxRotation = 0.5 * b2_pi;\r\nexport const b2_maxRotationSquared = b2_maxRotation * b2_maxRotation;\r\n/// This scale factor controls how fast overlap is resolved. Ideally this would be 1 so\r\n/// that overlap is removed in one time step. However using values close to 1 often lead\r\n/// to overshoot.\r\nexport const b2_baumgarte = 0.2;\r\nexport const b2_toiBaumgarte = 0.75;\r\n// #if B2_ENABLE_PARTICLE\r\n// Particle\r\n/// A symbolic constant that stands for particle allocation error.\r\nexport const b2_invalidParticleIndex = -1;\r\nexport const b2_maxParticleIndex = 0x7FFFFFFF;\r\n/// The default distance between particles, multiplied by the particle diameter.\r\nexport const b2_particleStride = 0.75;\r\n/// The minimum particle weight that produces pressure.\r\nexport const b2_minParticleWeight = 1.0;\r\n/// The upper limit for particle pressure.\r\nexport const b2_maxParticlePressure = 0.25;\r\n/// The upper limit for force between particles.\r\nexport const b2_maxParticleForce = 0.5;\r\n/// The maximum distance between particles in a triad, multiplied by the particle diameter.\r\nexport const b2_maxTriadDistance = 2.0;\r\nexport const b2_maxTriadDistanceSquared = (b2_maxTriadDistance * b2_maxTriadDistance);\r\n/// The initial size of particle data buffers.\r\nexport const b2_minParticleSystemBufferCapacity = 256;\r\n/// The time into the future that collisions against barrier particles will be detected.\r\nexport const b2_barrierCollisionTime = 2.5;\r\n// #endif\r\n// Sleep\r\n/// The time that a body must be still before it will go to sleep.\r\nexport const b2_timeToSleep = 0.5;\r\n/// A body cannot sleep if its linear velocity is above this tolerance.\r\nexport const b2_linearSleepTolerance = 0.01;\r\n/// A body cannot sleep if its angular velocity is above this tolerance.\r\nexport const b2_angularSleepTolerance = 2 / 180 * b2_pi;\r\n// Memory Allocation\r\n/// Implement this function to use your own memory allocator.\r\nexport function b2Alloc(size) {\r\n    return null;\r\n}\r\n/// If you implement b2Alloc, you should also implement this function.\r\nexport function b2Free(mem) {\r\n}\r\n/// Logging function.\r\nexport function b2Log(message, ...args) {\r\n    // console.log(message, ...args);\r\n}\r\n/// Version numbering scheme.\r\n/// See http://en.wikipedia.org/wiki/Software_versioning\r\nexport class b2Version {\r\n    constructor(major = 0, minor = 0, revision = 0) {\r\n        this.major = 0; ///< significant changes\r\n        this.minor = 0; ///< incremental changes\r\n        this.revision = 0; ///< bug fixes\r\n        this.major = major;\r\n        this.minor = minor;\r\n        this.revision = revision;\r\n    }\r\n    toString() {\r\n        return this.major + \".\" + this.minor + \".\" + this.revision;\r\n    }\r\n}\r\n/// Current version.\r\nexport const b2_version = new b2Version(2, 3, 2);\r\nexport const b2_changelist = 313;\r\nexport function b2ParseInt(v) {\r\n    return parseInt(v, 10);\r\n}\r\nexport function b2ParseUInt(v) {\r\n    return Math.abs(parseInt(v, 10));\r\n}\r\nexport function b2MakeArray(length, init) {\r\n    let a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(init(i));\r\n    }\r\n    return a;\r\n}\r\nexport function b2MakeNullArray(length) {\r\n    const a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(null);\r\n    }\r\n    return a;\r\n}\r\nexport function b2MakeNumberArray(length, init = 0) {\r\n    const a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(init);\r\n    }\r\n    return a;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbW1vbi9iMlNldHRpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTSxtQkFBbUIsU0FBa0IsRUFBRSxHQUFHLElBQVc7SUFDekQsSUFBSSxDQUFDLFNBQVMsRUFBRTtRQUNkLFFBQVEsQ0FBQztLQUNWO0FBQ0gsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBVyxLQUFLLENBQUMsQ0FBQyx1Q0FBdUM7QUFDakYsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFXLElBQUksQ0FBQyxDQUFDLDJDQUEyQztBQUNuRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQVcsQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDLENBQUM7QUFDL0QsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFXLGFBQWEsQ0FBQyxDQUFDLFdBQVc7QUFFdkQsU0FBUztBQUNULDBFQUEwRTtBQUMxRSxHQUFHO0FBRUgsWUFBWTtBQUVaLHNFQUFzRTtBQUN0RSwwQkFBMEI7QUFDMUIsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQVcsQ0FBQyxDQUFDO0FBRTlDLDJFQUEyRTtBQUMzRSxxRUFBcUU7QUFDckUsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQVcsQ0FBQyxDQUFDO0FBRS9DLHlFQUF5RTtBQUN6RSxtRUFBbUU7QUFDbkUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFXLEdBQUcsQ0FBQztBQUU1Qyw2RUFBNkU7QUFDN0UsMERBQTBEO0FBQzFELHVDQUF1QztBQUN2QyxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBVyxDQUFDLENBQUM7QUFFM0MsOEVBQThFO0FBQzlFLHFFQUFxRTtBQUNyRSxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQVcsS0FBSyxDQUFDLENBQUMsU0FBUztBQUVyRCw2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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_epsilon, b2MakeArray } from \"./b2Settings\";\r\nexport const b2_pi_over_180 = b2_pi / 180;\r\nexport const b2_180_over_pi = 180 / b2_pi;\r\nexport const b2_two_pi = 2 * b2_pi;\r\nexport const b2Abs = Math.abs;\r\n// export function b2Abs(n: number): number {\r\n//   return (n < 0) ? (-n) : (n);\r\n// }\r\nexport const b2Min = Math.min;\r\n// export function b2Min(a: number, b: number): number {\r\n//   return (a < b) ? (a) : (b);\r\n// }\r\nexport const b2Max = Math.max;\r\n// export function b2Max(a: number, b: number): number {\r\n//   return (a > b) ? (a) : (b);\r\n// }\r\nexport function b2Clamp(a, lo, hi) {\r\n    return (a < lo) ? (lo) : ((a > hi) ? (hi) : (a));\r\n}\r\nexport function b2Swap(a, b) {\r\n    ///b2Assert(false);\r\n    const tmp = a[0];\r\n    a[0] = b[0];\r\n    b[0] = tmp;\r\n}\r\n/// This function is used to ensure that a floating point number is\r\n/// not a NaN or infinity.\r\nexport function b2IsValid(n) {\r\n    return isFinite(n);\r\n}\r\nexport function b2Sq(n) {\r\n    return n * n;\r\n}\r\n/// This is a approximate yet fast inverse square-root.\r\nexport function b2InvSqrt(n) {\r\n    return 1 / Math.sqrt(n);\r\n}\r\nexport const b2Sqrt = Math.sqrt;\r\n// export function b2Sqrt(n: number): number {\r\n//   return Math.sqrt(n);\r\n// }\r\nexport const b2Pow = Math.pow;\r\n// export function b2Pow(x: number, y: number): number {\r\n//   return Math.pow(x, y);\r\n// }\r\nexport function b2DegToRad(degrees) {\r\n    return degrees * b2_pi_over_180;\r\n}\r\nexport function b2RadToDeg(radians) {\r\n    return radians * b2_180_over_pi;\r\n}\r\nexport const b2Cos = Math.cos;\r\n// export function b2Cos(radians: number): number {\r\n//   return Math.cos(radians);\r\n// }\r\nexport const b2Sin = Math.sin;\r\n// export function b2Sin(radians: number): number {\r\n//   return Math.sin(radians);\r\n// }\r\nexport const b2Acos = Math.acos;\r\n// export function b2Acos(n: number): number {\r\n//   return Math.acos(n);\r\n// }\r\nexport const b2Asin = Math.asin;\r\n// export function b2Asin(n: number): number {\r\n//   return Math.asin(n);\r\n// }\r\nexport const b2Atan2 = Math.atan2;\r\n// export function b2Atan2(y: number, x: number): number {\r\n//   return Math.atan2(y, x);\r\n// }\r\nexport function b2NextPowerOfTwo(x) {\r\n    x |= (x >> 1) & 0x7FFFFFFF;\r\n    x |= (x >> 2) & 0x3FFFFFFF;\r\n    x |= (x >> 4) & 0x0FFFFFFF;\r\n    x |= (x >> 8) & 0x00FFFFFF;\r\n    x |= (x >> 16) & 0x0000FFFF;\r\n    return x + 1;\r\n}\r\nexport function b2IsPowerOfTwo(x) {\r\n    return x > 0 && (x & (x - 1)) === 0;\r\n}\r\nexport function b2Random() {\r\n    return Math.random() * 2 - 1;\r\n}\r\nexport function b2RandomRange(lo, hi) {\r\n    return (hi - lo) * Math.random() + lo;\r\n}\r\n/// A 2D column vector.\r\nexport class b2Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Clone() {\r\n        return new b2Vec2(this.x, this.y);\r\n    }\r\n    SetZero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n    Set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        return this;\r\n    }\r\n    SelfAdd(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        return this;\r\n    }\r\n    SelfAddXY(x, y) {\r\n        this.x += x;\r\n        this.y += y;\r\n        return this;\r\n    }\r\n    SelfSub(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        return this;\r\n    }\r\n    SelfSubXY(x, y) {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        return this;\r\n    }\r\n    SelfMul(s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        return this;\r\n    }\r\n    SelfMulAdd(s, v) {\r\n        this.x += s * v.x;\r\n        this.y += s * v.y;\r\n        return this;\r\n    }\r\n    SelfMulSub(s, v) {\r\n        this.x -= s * v.x;\r\n        this.y -= s * v.y;\r\n        return this;\r\n    }\r\n    Dot(v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n    Cross(v) {\r\n        return this.x * v.y - this.y * v.x;\r\n    }\r\n    Length() {\r\n        const x = this.x, y = this.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n    LengthSquared() {\r\n        const x = this.x, y = this.y;\r\n        return (x * x + y * y);\r\n    }\r\n    Normalize() {\r\n        const length = this.Length();\r\n        if (length >= b2_epsilon) {\r\n            const inv_length = 1 / length;\r\n            this.x *= inv_length;\r\n            this.y *= inv_length;\r\n        }\r\n        return length;\r\n    }\r\n    SelfNormalize() {\r\n        const length = this.Length();\r\n        if (length >= b2_epsilon) {\r\n            const inv_length = 1 / length;\r\n            this.x *= inv_length;\r\n            this.y *= inv_length;\r\n        }\r\n        return this;\r\n    }\r\n    SelfRotate(radians) {\r\n        const c = Math.cos(radians);\r\n        const s = Math.sin(radians);\r\n        const x = this.x;\r\n        this.x = c * x - s * this.y;\r\n        this.y = s * x + c * this.y;\r\n        return this;\r\n    }\r\n    IsValid() {\r\n        return isFinite(this.x) && isFinite(this.y);\r\n    }\r\n    SelfCrossVS(s) {\r\n        const x = this.x;\r\n        this.x = s * this.y;\r\n        this.y = -s * x;\r\n        return this;\r\n    }\r\n    SelfCrossSV(s) {\r\n        const x = this.x;\r\n        this.x = -s * this.y;\r\n        this.y = s * x;\r\n        return this;\r\n    }\r\n    SelfMinV(v) {\r\n        this.x = b2Min(this.x, v.x);\r\n        this.y = b2Min(this.y, v.y);\r\n        return this;\r\n    }\r\n    SelfMaxV(v) {\r\n        this.x = b2Max(this.x, v.x);\r\n        this.y = b2Max(this.y, v.y);\r\n        return this;\r\n    }\r\n    SelfAbs() {\r\n        this.x = b2Abs(this.x);\r\n        this.y = b2Abs(this.y);\r\n        return this;\r\n    }\r\n    SelfNeg() {\r\n        this.x = (-this.x);\r\n        this.y = (-this.y);\r\n        return this;\r\n    }\r\n    SelfSkew() {\r\n        const x = this.x;\r\n        this.x = -this.y;\r\n        this.y = x;\r\n        return this;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Vec2());\r\n    }\r\n    static AbsV(v, out) { return b2AbsV(v, out); }\r\n    static MinV(a, b, out) { return b2MinV(a, b, out); }\r\n    static MaxV(a, b, out) { return b2MaxV(a, b, out); }\r\n    static ClampV(v, lo, hi, out) { return b2ClampV(v, lo, hi, out); }\r\n    static RotateV(v, radians, out) { return b2RotateV(v, radians, out); }\r\n    static DotVV(a, b) { return b2DotVV(a, b); }\r\n    static CrossVV(a, b) { return b2CrossVV(a, b); }\r\n    static CrossVS(v, s, out) { return b2CrossVS(v, s, out); }\r\n    static CrossVOne(v, out) { return b2CrossVOne(v, out); }\r\n    static CrossSV(s, v, out) { return b2CrossSV(s, v, out); }\r\n    static CrossOneV(v, out) { return b2CrossOneV(v, out); }\r\n    static AddVV(a, b, out) { return b2AddVV(a, b, out); }\r\n    static SubVV(a, b, out) { return b2SubVV(a, b, out); }\r\n    static MulSV(s, v, out) { return b2MulSV(s, v, out); }\r\n    static MulVS(v, s, out) { return b2MulVS(v, s, out); }\r\n    static AddVMulSV(a, s, b, out) { return b2AddVMulSV(a, s, b, out); }\r\n    static SubVMulSV(a, s, b, out) { return b2SubVMulSV(a, s, b, out); }\r\n    static AddVCrossSV(a, s, v, out) { return b2AddVCrossSV(a, s, v, out); }\r\n    static MidVV(a, b, out) { return b2MidVV(a, b, out); }\r\n    static ExtVV(a, b, out) { return b2ExtVV(a, b, out); }\r\n    static IsEqualToV(a, b) { return b2IsEqualToV(a, b); }\r\n    static DistanceVV(a, b) { return b2DistanceVV(a, b); }\r\n    static DistanceSquaredVV(a, b) { return b2DistanceSquaredVV(a, b); }\r\n    static NegV(v, out) { return b2NegV(v, out); }\r\n}\r\nb2Vec2.ZERO = new b2Vec2(0, 0);\r\nb2Vec2.UNITX = new b2Vec2(1, 0);\r\nb2Vec2.UNITY = new b2Vec2(0, 1);\r\nb2Vec2.s_t0 = new b2Vec2();\r\nb2Vec2.s_t1 = new b2Vec2();\r\nb2Vec2.s_t2 = new b2Vec2();\r\nb2Vec2.s_t3 = new b2Vec2();\r\nexport const b2Vec2_zero = new b2Vec2(0, 0);\r\nfunction b2AbsV(v, out) {\r\n    out.x = b2Abs(v.x);\r\n    out.y = b2Abs(v.y);\r\n    return out;\r\n}\r\nfunction b2MinV(a, b, out) {\r\n    out.x = b2Min(a.x, b.x);\r\n    out.y = b2Min(a.y, b.y);\r\n    return out;\r\n}\r\nfunction b2MaxV(a, b, out) {\r\n    out.x = b2Max(a.x, b.x);\r\n    out.y = b2Max(a.y, b.y);\r\n    return out;\r\n}\r\nfunction b2ClampV(v, lo, hi, out) {\r\n    out.x = b2Clamp(v.x, lo.x, hi.x);\r\n    out.y = b2Clamp(v.y, lo.y, hi.y);\r\n    return out;\r\n}\r\nfunction b2RotateV(v, radians, out) {\r\n    const v_x = v.x, v_y = v.y;\r\n    const c = Math.cos(radians);\r\n    const s = Math.sin(radians);\r\n    out.x = c * v_x - s * v_y;\r\n    out.y = s * v_x + c * v_y;\r\n    return out;\r\n}\r\nfunction b2DotVV(a, b) {\r\n    return a.x * b.x + a.y * b.y;\r\n}\r\nfunction b2CrossVV(a, b) {\r\n    return a.x * b.y - a.y * b.x;\r\n}\r\nfunction b2CrossVS(v, s, out) {\r\n    const v_x = v.x;\r\n    out.x = s * v.y;\r\n    out.y = -s * v_x;\r\n    return out;\r\n}\r\nfunction b2CrossVOne(v, out) {\r\n    const v_x = v.x;\r\n    out.x = v.y;\r\n    out.y = -v_x;\r\n    return out;\r\n}\r\nfunction b2CrossSV(s, v, out) {\r\n    const v_x = v.x;\r\n    out.x = -s * v.y;\r\n    out.y = s * v_x;\r\n    return out;\r\n}\r\nfunction b2CrossOneV(v, out) {\r\n    const v_x = v.x;\r\n    out.x = -v.y;\r\n    out.y = v_x;\r\n    return out;\r\n}\r\nfunction b2AddVV(a, b, out) { out.x = a.x + b.x; out.y = a.y + b.y; return out; }\r\nfunction b2SubVV(a, b, out) { out.x = a.x - b.x; out.y = a.y - b.y; return out; }\r\nfunction b2MulSV(s, v, out) { out.x = v.x * s; out.y = v.y * s; return out; }\r\nfunction b2MulVS(v, s, out) { out.x = v.x * s; out.y = v.y * s; return out; }\r\nfunction b2AddVMulSV(a, s, b, out) { out.x = a.x + (s * b.x); out.y = a.y + (s * b.y); return out; }\r\nfunction b2SubVMulSV(a, s, b, out) { out.x = a.x - (s * b.x); out.y = a.y - (s * b.y); return out; }\r\nfunction b2AddVCrossSV(a, s, v, out) {\r\n    const v_x = v.x;\r\n    out.x = a.x - (s * v.y);\r\n    out.y = a.y + (s * v_x);\r\n    return out;\r\n}\r\nfunction b2MidVV(a, b, out) { out.x = (a.x + b.x) * 0.5; out.y = (a.y + b.y) * 0.5; return out; }\r\nfunction b2ExtVV(a, b, out) { out.x = (b.x - a.x) * 0.5; out.y = (b.y - a.y) * 0.5; return out; }\r\nfunction b2IsEqualToV(a, b) {\r\n    return a.x === b.x && a.y === b.y;\r\n}\r\nfunction b2DistanceVV(a, b) {\r\n    const c_x = a.x - b.x;\r\n    const c_y = a.y - b.y;\r\n    return Math.sqrt(c_x * c_x + c_y * c_y);\r\n}\r\nfunction b2DistanceSquaredVV(a, b) {\r\n    const c_x = a.x - b.x;\r\n    const c_y = a.y - b.y;\r\n    return (c_x * c_x + c_y * c_y);\r\n}\r\nfunction b2NegV(v, out) { out.x = -v.x; out.y = -v.y; return out; }\r\n/// A 2D column vector with 3 elements.\r\nexport class b2Vec3 {\r\n    constructor(x = 0, y = 0, z = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    Clone() {\r\n        return new b2Vec3(this.x, this.y, this.z);\r\n    }\r\n    SetZero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        return this;\r\n    }\r\n    SetXYZ(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        this.z = other.z;\r\n        return this;\r\n    }\r\n    SelfNeg() {\r\n        this.x = (-this.x);\r\n        this.y = (-this.y);\r\n        this.z = (-this.z);\r\n        return this;\r\n    }\r\n    SelfAdd(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n        return this;\r\n    }\r\n    SelfAddXYZ(x, y, z) {\r\n        this.x += x;\r\n        this.y += y;\r\n        this.z += z;\r\n        return this;\r\n    }\r\n    SelfSub(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n        return this;\r\n    }\r\n    SelfSubXYZ(x, y, z) {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        this.z -= z;\r\n        return this;\r\n    }\r\n    SelfMul(s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        this.z *= s;\r\n        return this;\r\n    }\r\n    static DotV3V3(a, b) { return b2DotV3V3(a, b); }\r\n    static CrossV3V3(a, b, out) { return b2CrossV3V3(a, b, out); }\r\n}\r\nb2Vec3.ZERO = new b2Vec3(0, 0, 0);\r\nb2Vec3.s_t0 = new b2Vec3();\r\nfunction b2DotV3V3(a, b) {\r\n    return a.x * b.x + a.y * b.y + a.z * b.z;\r\n}\r\nfunction b2CrossV3V3(a, b, out) {\r\n    const a_x = a.x, a_y = a.y, a_z = a.z;\r\n    const b_x = b.x, b_y = b.y, b_z = b.z;\r\n    out.x = a_y * b_z - a_z * b_y;\r\n    out.y = a_z * b_x - a_x * b_z;\r\n    out.z = a_x * b_y - a_y * b_x;\r\n    return out;\r\n}\r\n/// A 2-by-2 matrix. Stored in column-major order.\r\nexport class b2Mat22 {\r\n    constructor() {\r\n        this.ex = new b2Vec2(1, 0);\r\n        this.ey = new b2Vec2(0, 1);\r\n    }\r\n    Clone() {\r\n        return new b2Mat22().Copy(this);\r\n    }\r\n    static FromVV(c1, c2) {\r\n        return new b2Mat22().SetVV(c1, c2);\r\n    }\r\n    static FromSSSS(r1c1, r1c2, r2c1, r2c2) {\r\n        return new b2Mat22().SetSSSS(r1c1, r1c2, r2c1, r2c2);\r\n    }\r\n    static FromAngle(radians) {\r\n        return new b2Mat22().SetAngle(radians);\r\n    }\r\n    SetSSSS(r1c1, r1c2, r2c1, r2c2) {\r\n        this.ex.Set(r1c1, r2c1);\r\n        this.ey.Set(r1c2, r2c2);\r\n        return this;\r\n    }\r\n    SetVV(c1, c2) {\r\n        this.ex.Copy(c1);\r\n        this.ey.Copy(c2);\r\n        return this;\r\n    }\r\n    SetAngle(radians) {\r\n        const c = Math.cos(radians);\r\n        const s = Math.sin(radians);\r\n        this.ex.Set(c, s);\r\n        this.ey.Set(-s, c);\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.ex.Copy(other.ex);\r\n        this.ey.Copy(other.ey);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.ex.Set(1, 0);\r\n        this.ey.Set(0, 1);\r\n        return this;\r\n    }\r\n    SetZero() {\r\n        this.ex.SetZero();\r\n        this.ey.SetZero();\r\n        return this;\r\n    }\r\n    GetAngle() {\r\n        return Math.atan2(this.ex.y, this.ex.x);\r\n    }\r\n    GetInverse(out) {\r\n        const a = this.ex.x;\r\n        const b = this.ey.x;\r\n        const c = this.ex.y;\r\n        const d = this.ey.y;\r\n        let det = a * d - b * c;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.ex.x = det * d;\r\n        out.ey.x = (-det * b);\r\n        out.ex.y = (-det * c);\r\n        out.ey.y = det * a;\r\n        return out;\r\n    }\r\n    Solve(b_x, b_y, out) {\r\n        const a11 = this.ex.x, a12 = this.ey.x;\r\n        const a21 = this.ex.y, a22 = this.ey.y;\r\n        let det = a11 * a22 - a12 * a21;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (a22 * b_x - a12 * b_y);\r\n        out.y = det * (a11 * b_y - a21 * b_x);\r\n        return out;\r\n    }\r\n    SelfAbs() {\r\n        this.ex.SelfAbs();\r\n        this.ey.SelfAbs();\r\n        return this;\r\n    }\r\n    SelfInv() {\r\n        return this.GetInverse(this);\r\n    }\r\n    SelfAddM(M) {\r\n        this.ex.SelfAdd(M.ex);\r\n        this.ey.SelfAdd(M.ey);\r\n        return this;\r\n    }\r\n    SelfSubM(M) {\r\n        this.ex.SelfSub(M.ex);\r\n        this.ey.SelfSub(M.ey);\r\n        return this;\r\n    }\r\n    static AbsM(M, out) { return b2AbsM(M, out); }\r\n    static MulMV(M, v, out) { return b2MulMV(M, v, out); }\r\n    static MulTMV(M, v, out) { return b2MulTMV(M, v, out); }\r\n    static AddMM(A, B, out) { return b2AddMM(A, B, out); }\r\n    static MulMM(A, B, out) { return b2MulMM(A, B, out); }\r\n    static MulTMM(A, B, out) { return b2MulTMM(A, B, out); }\r\n}\r\nb2Mat22.IDENTITY = new b2Mat22();\r\nfunction b2AbsM(M, out) {\r\n    const M_ex = M.ex, M_ey = M.ey;\r\n    out.ex.x = b2Abs(M_ex.x);\r\n    out.ex.y = b2Abs(M_ex.y);\r\n    out.ey.x = b2Abs(M_ey.x);\r\n    out.ey.y = b2Abs(M_ey.y);\r\n    return out;\r\n}\r\nfunction b2MulMV(M, v, out) {\r\n    const M_ex = M.ex, M_ey = M.ey;\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = M_ex.x * v_x + M_ey.x * v_y;\r\n    out.y = M_ex.y * v_x + M_ey.y * v_y;\r\n    return out;\r\n}\r\nfunction b2MulTMV(M, v, out) {\r\n    const M_ex = M.ex, M_ey = M.ey;\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = M_ex.x * v_x + M_ex.y * v_y;\r\n    out.y = M_ey.x * v_x + M_ey.y * v_y;\r\n    return out;\r\n}\r\nfunction b2AddMM(A, B, out) {\r\n    const A_ex = A.ex, A_ey = A.ey;\r\n    const B_ex = B.ex, B_ey = B.ey;\r\n    out.ex.x = A_ex.x + B_ex.x;\r\n    out.ex.y = A_ex.y + B_ex.y;\r\n    out.ey.x = A_ey.x + B_ey.x;\r\n    out.ey.y = A_ey.y + B_ey.y;\r\n    return out;\r\n}\r\nfunction b2MulMM(A, B, out) {\r\n    const A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n    const A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n    const B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n    const B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n    out.ex.x = A_ex_x * B_ex_x + A_ey_x * B_ex_y;\r\n    out.ex.y = A_ex_y * B_ex_x + A_ey_y * B_ex_y;\r\n    out.ey.x = A_ex_x * B_ey_x + A_ey_x * B_ey_y;\r\n    out.ey.y = A_ex_y * B_ey_x + A_ey_y * B_ey_y;\r\n    return out;\r\n}\r\nfunction b2MulTMM(A, B, out) {\r\n    const A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n    const A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n    const B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n    const B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n    out.ex.x = A_ex_x * B_ex_x + A_ex_y * B_ex_y;\r\n    out.ex.y = A_ey_x * B_ex_x + A_ey_y * B_ex_y;\r\n    out.ey.x = A_ex_x * B_ey_x + A_ex_y * B_ey_y;\r\n    out.ey.y = A_ey_x * B_ey_x + A_ey_y * B_ey_y;\r\n    return out;\r\n}\r\n/// A 3-by-3 matrix. Stored in column-major order.\r\nexport class b2Mat33 {\r\n    constructor() {\r\n        this.ex = new b2Vec3(1, 0, 0);\r\n        this.ey = new b2Vec3(0, 1, 0);\r\n        this.ez = new b2Vec3(0, 0, 1);\r\n    }\r\n    Clone() {\r\n        return new b2Mat33().Copy(this);\r\n    }\r\n    SetVVV(c1, c2, c3) {\r\n        this.ex.Copy(c1);\r\n        this.ey.Copy(c2);\r\n        this.ez.Copy(c3);\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.ex.Copy(other.ex);\r\n        this.ey.Copy(other.ey);\r\n        this.ez.Copy(other.ez);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.ex.SetXYZ(1, 0, 0);\r\n        this.ey.SetXYZ(0, 1, 0);\r\n        this.ez.SetXYZ(0, 0, 1);\r\n        return this;\r\n    }\r\n    SetZero() {\r\n        this.ex.SetZero();\r\n        this.ey.SetZero();\r\n        this.ez.SetZero();\r\n        return this;\r\n    }\r\n    SelfAddM(M) {\r\n        this.ex.SelfAdd(M.ex);\r\n        this.ey.SelfAdd(M.ey);\r\n        this.ez.SelfAdd(M.ez);\r\n        return this;\r\n    }\r\n    Solve33(b_x, b_y, b_z, out) {\r\n        const a11 = this.ex.x, a21 = this.ex.y, a31 = this.ex.z;\r\n        const a12 = this.ey.x, a22 = this.ey.y, a32 = this.ey.z;\r\n        const a13 = this.ez.x, a23 = this.ez.y, a33 = this.ez.z;\r\n        let det = a11 * (a22 * a33 - a32 * a23) + a21 * (a32 * a13 - a12 * a33) + a31 * (a12 * a23 - a22 * a13);\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (b_x * (a22 * a33 - a32 * a23) + b_y * (a32 * a13 - a12 * a33) + b_z * (a12 * a23 - a22 * a13));\r\n        out.y = det * (a11 * (b_y * a33 - b_z * a23) + a21 * (b_z * a13 - b_x * a33) + a31 * (b_x * a23 - b_y * a13));\r\n        out.z = det * (a11 * (a22 * b_z - a32 * b_y) + a21 * (a32 * b_x - a12 * b_z) + a31 * (a12 * b_y - a22 * b_x));\r\n        return out;\r\n    }\r\n    Solve22(b_x, b_y, out) {\r\n        const a11 = this.ex.x, a12 = this.ey.x;\r\n        const a21 = this.ex.y, a22 = this.ey.y;\r\n        let det = a11 * a22 - a12 * a21;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (a22 * b_x - a12 * b_y);\r\n        out.y = det * (a11 * b_y - a21 * b_x);\r\n        return out;\r\n    }\r\n    GetInverse22(M) {\r\n        const a = this.ex.x, b = this.ey.x, c = this.ex.y, d = this.ey.y;\r\n        let det = a * d - b * c;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        M.ex.x = det * d;\r\n        M.ey.x = -det * b;\r\n        M.ex.z = 0;\r\n        M.ex.y = -det * c;\r\n        M.ey.y = det * a;\r\n        M.ey.z = 0;\r\n        M.ez.x = 0;\r\n        M.ez.y = 0;\r\n        M.ez.z = 0;\r\n    }\r\n    GetSymInverse33(M) {\r\n        let det = b2DotV3V3(this.ex, b2CrossV3V3(this.ey, this.ez, b2Vec3.s_t0));\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        const a11 = this.ex.x, a12 = this.ey.x, a13 = this.ez.x;\r\n        const a22 = this.ey.y, a23 = this.ez.y;\r\n        const a33 = this.ez.z;\r\n        M.ex.x = det * (a22 * a33 - a23 * a23);\r\n        M.ex.y = det * (a13 * a23 - a12 * a33);\r\n        M.ex.z = det * (a12 * a23 - a13 * a22);\r\n        M.ey.x = M.ex.y;\r\n        M.ey.y = det * (a11 * a33 - a13 * a13);\r\n        M.ey.z = det * (a13 * a12 - a11 * a23);\r\n        M.ez.x = M.ex.z;\r\n        M.ez.y = M.ey.z;\r\n        M.ez.z = det * (a11 * a22 - a12 * a12);\r\n    }\r\n    static MulM33V3(A, v, out) { return b2MulM33V3(A, v, out); }\r\n    static MulM33XYZ(A, x, y, z, out) { return b2MulM33XYZ(A, x, y, z, out); }\r\n    static MulM33V2(A, v, out) { return b2MulM33V2(A, v, out); }\r\n    static MulM33XY(A, x, y, out) { return b2MulM33XY(A, x, y, out); }\r\n}\r\nb2Mat33.IDENTITY = new b2Mat33();\r\nfunction b2MulM33V3(A, v, out) {\r\n    const v_x = v.x, v_y = v.y, v_z = v.z;\r\n    out.x = A.ex.x * v_x + A.ey.x * v_y + A.ez.x * v_z;\r\n    out.y = A.ex.y * v_x + A.ey.y * v_y + A.ez.y * v_z;\r\n    out.z = A.ex.z * v_x + A.ey.z * v_y + A.ez.z * v_z;\r\n    return out;\r\n}\r\nfunction b2MulM33XYZ(A, x, y, z, out) {\r\n    out.x = A.ex.x * x + A.ey.x * y + A.ez.x * z;\r\n    out.y = A.ex.y * x + A.ey.y * y + A.ez.y * z;\r\n    out.z = A.ex.z * x + A.ey.z * y + A.ez.z * z;\r\n    return out;\r\n}\r\nfunction b2MulM33V2(A, v, out) {\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = A.ex.x * v_x + A.ey.x * v_y;\r\n    out.y = A.ex.y * v_x + A.ey.y * v_y;\r\n    return out;\r\n}\r\nfunction b2MulM33XY(A, x, y, out) {\r\n    out.x = A.ex.x * x + A.ey.x * y;\r\n    out.y = A.ex.y * x + A.ey.y * y;\r\n    return out;\r\n}\r\n/// Rotation\r\nexport class b2Rot {\r\n    constructor(angle = 0) {\r\n        this.s = 0;\r\n        this.c = 1;\r\n        if (angle) {\r\n            this.s = Math.sin(angle);\r\n            this.c = Math.cos(angle);\r\n        }\r\n    }\r\n    Clone() {\r\n        return new b2Rot().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.s = other.s;\r\n        this.c = other.c;\r\n        return this;\r\n    }\r\n    SetAngle(angle) {\r\n        this.s = Math.sin(angle);\r\n        this.c = Math.cos(angle);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.s = 0;\r\n        this.c = 1;\r\n        return this;\r\n    }\r\n    GetAngle() {\r\n        return Math.atan2(this.s, this.c);\r\n    }\r\n    GetXAxis(out) {\r\n        out.x = this.c;\r\n        out.y = this.s;\r\n        return out;\r\n    }\r\n    GetYAxis(out) {\r\n        out.x = -this.s;\r\n        out.y = this.c;\r\n        return out;\r\n    }\r\n    static MulRR(q, r, out) { return b2MulRR(q, r, out); }\r\n    static MulTRR(q, r, out) { return b2MulTRR(q, r, out); }\r\n    static MulRV(q, v, out) { return b2MulRV(q, v, out); }\r\n    static MulTRV(q, v, out) { return b2MulTRV(q, v, out); }\r\n}\r\nb2Rot.IDENTITY = new b2Rot();\r\nfunction b2MulRR(q, r, out) {\r\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\r\n    // [qs  qc]   [rs  rc]   [qs*rc+qc*rs -qs*rs+qc*rc]\r\n    // s = qs * rc + qc * rs\r\n    // c = qc * rc - qs * rs\r\n    const q_c = q.c, q_s = q.s;\r\n    const r_c = r.c, r_s = r.s;\r\n    out.s = q_s * r_c + q_c * r_s;\r\n    out.c = q_c * r_c - q_s * r_s;\r\n    return out;\r\n}\r\nfunction b2MulTRR(q, r, out) {\r\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\r\n    // [-qs qc]   [rs  rc]   [-qs*rc+qc*rs qs*rs+qc*rc]\r\n    // s = qc * rs - qs * rc\r\n    // c = qc * rc + qs * rs\r\n    const q_c = q.c, q_s = q.s;\r\n    const r_c = r.c, r_s = r.s;\r\n    out.s = q_c * r_s - q_s * r_c;\r\n    out.c = q_c * r_c + q_s * r_s;\r\n    return out;\r\n}\r\nfunction b2MulRV(q, v, out) {\r\n    const q_c = q.c, q_s = q.s;\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = q_c * v_x - q_s * v_y;\r\n    out.y = q_s * v_x + q_c * v_y;\r\n    return out;\r\n}\r\nfunction b2MulTRV(q, v, out) {\r\n    const q_c = q.c, q_s = q.s;\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = q_c * v_x + q_s * v_y;\r\n    out.y = -q_s * v_x + q_c * v_y;\r\n    return out;\r\n}\r\n/// A transform contains translation and rotation. It is used to represent\r\n/// the position and orientation of rigid frames.\r\nexport class b2Transform {\r\n    constructor() {\r\n        this.p = new b2Vec2();\r\n        this.q = new b2Rot();\r\n    }\r\n    Clone() {\r\n        return new b2Transform().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.p.Copy(other.p);\r\n        this.q.Copy(other.q);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.p.SetZero();\r\n        this.q.SetIdentity();\r\n        return this;\r\n    }\r\n    SetPositionRotation(position, q) {\r\n        this.p.Copy(position);\r\n        this.q.Copy(q);\r\n        return this;\r\n    }\r\n    SetPositionAngle(pos, a) {\r\n        this.p.Copy(pos);\r\n        this.q.SetAngle(a);\r\n        return this;\r\n    }\r\n    SetPosition(position) {\r\n        this.p.Copy(position);\r\n        return this;\r\n    }\r\n    SetPositionXY(x, y) {\r\n        this.p.Set(x, y);\r\n        return this;\r\n    }\r\n    SetRotation(rotation) {\r\n        this.q.Copy(rotation);\r\n        return this;\r\n    }\r\n    SetRotationAngle(radians) {\r\n        this.q.SetAngle(radians);\r\n        return this;\r\n    }\r\n    GetPosition() {\r\n        return this.p;\r\n    }\r\n    GetRotation() {\r\n        return this.q;\r\n    }\r\n    GetRotationAngle() {\r\n        return this.q.GetAngle();\r\n    }\r\n    GetAngle() {\r\n        return this.q.GetAngle();\r\n    }\r\n    static MulXV(T, v, out) { return b2MulXV(T, v, out); }\r\n    static MulTXV(T, v, out) { return b2MulTXV(T, v, out); }\r\n    static MulXX(A, B, out) { return b2MulXX(A, B, out); }\r\n    static MulTXX(A, B, out) { return b2MulTXX(A, B, out); }\r\n}\r\nb2Transform.IDENTITY = new b2Transform();\r\nfunction b2MulXV(T, v, out) {\r\n    //  float32 x = (T.q.c * v.x - T.q.s * v.y) + T.p.x;\r\n    //  float32 y = (T.q.s * v.x + T.q.c * v.y) + T.p.y;\r\n    //\r\n    //  return b2Vec2(x, y);\r\n    const T_q_c = T.q.c, T_q_s = T.q.s;\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = (T_q_c * v_x - T_q_s * v_y) + T.p.x;\r\n    out.y = (T_q_s * v_x + T_q_c * v_y) + T.p.y;\r\n    return out;\r\n}\r\nfunction b2MulTXV(T, v, out) {\r\n    //  float32 px = v.x - T.p.x;\r\n    //  float32 py = v.y - T.p.y;\r\n    //  float32 x = (T.q.c * px + T.q.s * py);\r\n    //  float32 y = (-T.q.s * px + T.q.c * py);\r\n    //\r\n    //  return b2Vec2(x, y);\r\n    const T_q_c = T.q.c, T_q_s = T.q.s;\r\n    const p_x = v.x - T.p.x;\r\n    const p_y = v.y - T.p.y;\r\n    out.x = (T_q_c * p_x + T_q_s * p_y);\r\n    out.y = (-T_q_s * p_x + T_q_c * p_y);\r\n    return out;\r\n}\r\nfunction b2MulXX(A, B, out) {\r\n    b2MulRR(A.q, B.q, out.q);\r\n    b2AddVV(b2MulRV(A.q, B.p, out.p), A.p, out.p);\r\n    return out;\r\n}\r\nfunction b2MulTXX(A, B, out) {\r\n    b2MulTRR(A.q, B.q, out.q);\r\n    b2MulTRV(A.q, b2SubVV(B.p, A.p, out.p), out.p);\r\n    return out;\r\n}\r\n/// This describes the motion of a body/shape for TOI computation.\r\n/// Shapes are defined with respect to the body origin, which may\r\n/// no coincide with the center of mass. However, to support dynamics\r\n/// we must interpolate the center of mass position.\r\nexport class b2Sweep {\r\n    constructor() {\r\n        this.localCenter = new b2Vec2();\r\n        this.c0 = new b2Vec2();\r\n        this.c = new b2Vec2();\r\n        this.a0 = 0;\r\n        this.a = 0;\r\n        this.alpha0 = 0;\r\n    }\r\n    Clone() {\r\n        return new b2Sweep().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.localCenter.Copy(other.localCenter);\r\n        this.c0.Copy(other.c0);\r\n        this.c.Copy(other.c);\r\n        this.a0 = other.a0;\r\n        this.a = other.a;\r\n        this.alpha0 = other.alpha0;\r\n        return this;\r\n    }\r\n    GetTransform(xf, beta) {\r\n        const one_minus_beta = (1 - beta);\r\n        xf.p.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n        xf.p.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n        const angle = one_minus_beta * this.a0 + beta * this.a;\r\n        xf.q.SetAngle(angle);\r\n        xf.p.SelfSub(b2MulRV(xf.q, this.localCenter, b2Vec2.s_t0));\r\n        return xf;\r\n    }\r\n    Advance(alpha) {\r\n        ///b2Assert(this.alpha0 < 1);\r\n        const beta = (alpha - this.alpha0) / (1 - this.alpha0);\r\n        const one_minus_beta = (1 - beta);\r\n        this.c0.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n        this.c0.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n        this.a0 = one_minus_beta * this.a0 + beta * this.a;\r\n        this.alpha0 = alpha;\r\n    }\r\n    Normalize() {\r\n        const d = b2_two_pi * Math.floor(this.a0 / b2_two_pi);\r\n        this.a0 -= d;\r\n        this.a -= d;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_maxFloat, b2_epsilon, b2_epsilon_sq, b2_maxManifoldPoints, b2MakeArray, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Distance, b2DistanceInput, b2DistanceOutput, b2SimplexCache } from \"./b2Distance\";\r\n/// @file\r\n/// Structures and functions used for computing contact points, distance\r\n/// queries, and TOI queries.\r\nexport var b2ContactFeatureType;\r\n(function (b2ContactFeatureType) {\r\n    b2ContactFeatureType[b2ContactFeatureType[\"e_vertex\"] = 0] = \"e_vertex\";\r\n    b2ContactFeatureType[b2ContactFeatureType[\"e_face\"] = 1] = \"e_face\";\r\n})(b2ContactFeatureType || (b2ContactFeatureType = {}));\r\n/// The features that intersect to form the contact point\r\n/// This must be 4 bytes or less.\r\nexport class b2ContactFeature {\r\n    constructor() {\r\n        this._key = 0;\r\n        this._key_invalid = false;\r\n        this._indexA = 0;\r\n        this._indexB = 0;\r\n        this._typeA = 0;\r\n        this._typeB = 0;\r\n    }\r\n    get key() {\r\n        if (this._key_invalid) {\r\n            this._key_invalid = false;\r\n            this._key = this._indexA | (this._indexB << 8) | (this._typeA << 16) | (this._typeB << 24);\r\n        }\r\n        return this._key;\r\n    }\r\n    set key(value) {\r\n        this._key = value;\r\n        this._key_invalid = false;\r\n        this._indexA = this._key & 0xff;\r\n        this._indexB = (this._key >> 8) & 0xff;\r\n        this._typeA = (this._key >> 16) & 0xff;\r\n        this._typeB = (this._key >> 24) & 0xff;\r\n    }\r\n    get indexA() {\r\n        return this._indexA;\r\n    }\r\n    set indexA(value) {\r\n        this._indexA = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get indexB() {\r\n        return this._indexB;\r\n    }\r\n    set indexB(value) {\r\n        this._indexB = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get typeA() {\r\n        return this._typeA;\r\n    }\r\n    set typeA(value) {\r\n        this._typeA = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get typeB() {\r\n        return this._typeB;\r\n    }\r\n    set typeB(value) {\r\n        this._typeB = value;\r\n        this._key_invalid = true;\r\n    }\r\n}\r\n/// Contact ids to facilitate warm starting.\r\nexport class b2ContactID {\r\n    constructor() {\r\n        this.cf = new b2ContactFeature();\r\n    }\r\n    Copy(o) {\r\n        this.key = o.key;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2ContactID().Copy(this);\r\n    }\r\n    get key() {\r\n        return this.cf.key;\r\n    }\r\n    set key(value) {\r\n        this.cf.key = value;\r\n    }\r\n}\r\n/// A manifold point is a contact point belonging to a contact\r\n/// manifold. It holds details related to the geometry and dynamics\r\n/// of the contact points.\r\n/// The local point usage depends on the manifold type:\r\n/// -e_circles: the local center of circleB\r\n/// -e_faceA: the local center of cirlceB or the clip point of polygonB\r\n/// -e_faceB: the clip point of polygonA\r\n/// This structure is stored across time steps, so we keep it small.\r\n/// Note: the impulses are used for internal caching and may not\r\n/// provide reliable contact forces, especially for high speed collisions.\r\nexport class b2ManifoldPoint {\r\n    constructor() {\r\n        this.localPoint = new b2Vec2(); ///< usage depends on manifold type\r\n        this.normalImpulse = 0; ///< the non-penetration impulse\r\n        this.tangentImpulse = 0; ///< the friction impulse\r\n        this.id = new b2ContactID(); ///< uniquely identifies a contact point between two shapes\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ManifoldPoint());\r\n    }\r\n    Reset() {\r\n        this.localPoint.SetZero();\r\n        this.normalImpulse = 0;\r\n        this.tangentImpulse = 0;\r\n        this.id.key = 0;\r\n    }\r\n    Copy(o) {\r\n        this.localPoint.Copy(o.localPoint);\r\n        this.normalImpulse = o.normalImpulse;\r\n        this.tangentImpulse = o.tangentImpulse;\r\n        this.id.Copy(o.id);\r\n        return this;\r\n    }\r\n}\r\nexport var b2ManifoldType;\r\n(function (b2ManifoldType) {\r\n    b2ManifoldType[b2ManifoldType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2ManifoldType[b2ManifoldType[\"e_circles\"] = 0] = \"e_circles\";\r\n    b2ManifoldType[b2ManifoldType[\"e_faceA\"] = 1] = \"e_faceA\";\r\n    b2ManifoldType[b2ManifoldType[\"e_faceB\"] = 2] = \"e_faceB\";\r\n})(b2ManifoldType || (b2ManifoldType = {}));\r\n/// A manifold for two touching convex shapes.\r\n/// Box2D supports multiple types of contact:\r\n/// - clip point versus plane with radius\r\n/// - point versus point with radius (circles)\r\n/// The local point usage depends on the manifold type:\r\n/// -e_circles: the local center of circleA\r\n/// -e_faceA: the center of faceA\r\n/// -e_faceB: the center of faceB\r\n/// Similarly the local normal usage:\r\n/// -e_circles: not used\r\n/// -e_faceA: the normal on polygonA\r\n/// -e_faceB: the normal on polygonB\r\n/// We store contacts in this way so that position correction can\r\n/// account for movement, which is critical for continuous physics.\r\n/// All contact scenarios must be expressed in one of these types.\r\n/// This structure is stored across time steps, so we keep it small.\r\nexport class b2Manifold {\r\n    constructor() {\r\n        this.points = b2ManifoldPoint.MakeArray(b2_maxManifoldPoints);\r\n        this.localNormal = new b2Vec2();\r\n        this.localPoint = new b2Vec2();\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.pointCount = 0;\r\n    }\r\n    Reset() {\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            ///b2Assert(this.points[i] instanceof b2ManifoldPoint);\r\n            this.points[i].Reset();\r\n        }\r\n        this.localNormal.SetZero();\r\n        this.localPoint.SetZero();\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.pointCount = 0;\r\n    }\r\n    Copy(o) {\r\n        this.pointCount = o.pointCount;\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            ///b2Assert(this.points[i] instanceof b2ManifoldPoint);\r\n            this.points[i].Copy(o.points[i]);\r\n        }\r\n        this.localNormal.Copy(o.localNormal);\r\n        this.localPoint.Copy(o.localPoint);\r\n        this.type = o.type;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2Manifold().Copy(this);\r\n    }\r\n}\r\nexport class b2WorldManifold {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.points = b2Vec2.MakeArray(b2_maxManifoldPoints);\r\n        this.separations = b2MakeNumberArray(b2_maxManifoldPoints);\r\n    }\r\n    Initialize(manifold, xfA, radiusA, xfB, radiusB) {\r\n        if (manifold.pointCount === 0) {\r\n            return;\r\n        }\r\n        switch (manifold.type) {\r\n            case b2ManifoldType.e_circles:\r\n                {\r\n                    this.normal.Set(1, 0);\r\n                    const pointA = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_pointA);\r\n                    const pointB = b2Transform.MulXV(xfB, manifold.points[0].localPoint, b2WorldManifold.Initialize_s_pointB);\r\n                    if (b2Vec2.DistanceSquaredVV(pointA, pointB) > b2_epsilon_sq) {\r\n                        b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\r\n                    }\r\n                    const cA = b2Vec2.AddVMulSV(pointA, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                    const cB = b2Vec2.SubVMulSV(pointB, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                    b2Vec2.MidVV(cA, cB, this.points[0]);\r\n                    this.separations[0] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\r\n                }\r\n                break;\r\n            case b2ManifoldType.e_faceA:\r\n                {\r\n                    b2Rot.MulRV(xfA.q, manifold.localNormal, this.normal);\r\n                    const planePoint = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\r\n                    for (let i = 0; i < manifold.pointCount; ++i) {\r\n                        const clipPoint = b2Transform.MulXV(xfB, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\r\n                        const s = radiusA - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\r\n                        const cA = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                        const cB = b2Vec2.SubVMulSV(clipPoint, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                        b2Vec2.MidVV(cA, cB, this.points[i]);\r\n                        this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\r\n                    }\r\n                }\r\n                break;\r\n            case b2ManifoldType.e_faceB:\r\n                {\r\n                    b2Rot.MulRV(xfB.q, manifold.localNormal, this.normal);\r\n                    const planePoint = b2Transform.MulXV(xfB, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\r\n                    for (let i = 0; i < manifold.pointCount; ++i) {\r\n                        const clipPoint = b2Transform.MulXV(xfA, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\r\n                        const s = radiusB - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\r\n                        const cB = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                        const cA = b2Vec2.SubVMulSV(clipPoint, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                        b2Vec2.MidVV(cA, cB, this.points[i]);\r\n                        this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cA, cB, b2Vec2.s_t0), this.normal); // b2Dot(cA - cB, normal);\r\n                    }\r\n                    // Ensure normal points from A to B.\r\n                    this.normal.SelfNeg();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\nb2WorldManifold.Initialize_s_pointA = new b2Vec2();\r\nb2WorldManifold.Initialize_s_pointB = new b2Vec2();\r\nb2WorldManifold.Initialize_s_cA = new b2Vec2();\r\nb2WorldManifold.Initialize_s_cB = new b2Vec2();\r\nb2WorldManifold.Initialize_s_planePoint = new b2Vec2();\r\nb2WorldManifold.Initialize_s_clipPoint = new b2Vec2();\r\n/// This is used for determining the state of contact points.\r\nexport var b2PointState;\r\n(function (b2PointState) {\r\n    b2PointState[b2PointState[\"b2_nullState\"] = 0] = \"b2_nullState\";\r\n    b2PointState[b2PointState[\"b2_addState\"] = 1] = \"b2_addState\";\r\n    b2PointState[b2PointState[\"b2_persistState\"] = 2] = \"b2_persistState\";\r\n    b2PointState[b2PointState[\"b2_removeState\"] = 3] = \"b2_removeState\"; ///< point was removed in the update\r\n})(b2PointState || (b2PointState = {}));\r\n/// Compute the point states given two manifolds. The states pertain to the transition from manifold1\r\n/// to manifold2. So state1 is either persist or remove while state2 is either add or persist.\r\nexport function b2GetPointStates(state1, state2, manifold1, manifold2) {\r\n    // Detect persists and removes.\r\n    let i;\r\n    for (i = 0; i < manifold1.pointCount; ++i) {\r\n        const id = manifold1.points[i].id;\r\n        const key = id.key;\r\n        state1[i] = b2PointState.b2_removeState;\r\n        for (let j = 0, jct = manifold2.pointCount; j < jct; ++j) {\r\n            if (manifold2.points[j].id.key === key) {\r\n                state1[i] = b2PointState.b2_persistState;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for (; i < b2_maxManifoldPoints; ++i) {\r\n        state1[i] = b2PointState.b2_nullState;\r\n    }\r\n    // Detect persists and adds.\r\n    for (i = 0; i < manifold2.pointCount; ++i) {\r\n        const id = manifold2.points[i].id;\r\n        const key = id.key;\r\n        state2[i] = b2PointState.b2_addState;\r\n        for (let j = 0, jct = manifold1.pointCount; j < jct; ++j) {\r\n            if (manifold1.points[j].id.key === key) {\r\n                state2[i] = b2PointState.b2_persistState;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for (; i < b2_maxManifoldPoints; ++i) {\r\n        state2[i] = b2PointState.b2_nullState;\r\n    }\r\n}\r\n/// Used for computing contact manifolds.\r\nexport class b2ClipVertex {\r\n    constructor() {\r\n        this.v = new b2Vec2();\r\n        this.id = new b2ContactID();\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ClipVertex());\r\n    }\r\n    Copy(other) {\r\n        this.v.Copy(other.v);\r\n        this.id.Copy(other.id);\r\n        return this;\r\n    }\r\n}\r\n/// Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\r\nexport class b2RayCastInput {\r\n    constructor() {\r\n        this.p1 = new b2Vec2();\r\n        this.p2 = new b2Vec2();\r\n        this.maxFraction = 1;\r\n    }\r\n    Copy(o) {\r\n        this.p1.Copy(o.p1);\r\n        this.p2.Copy(o.p2);\r\n        this.maxFraction = o.maxFraction;\r\n        return this;\r\n    }\r\n}\r\n/// Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and p2\r\n/// come from b2RayCastInput.\r\nexport class b2RayCastOutput {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.fraction = 0;\r\n    }\r\n    Copy(o) {\r\n        this.normal.Copy(o.normal);\r\n        this.fraction = o.fraction;\r\n        return this;\r\n    }\r\n}\r\n/// An axis aligned bounding box.\r\nexport class b2AABB {\r\n    constructor() {\r\n        this.lowerBound = new b2Vec2(); ///< the lower vertex\r\n        this.upperBound = new b2Vec2(); ///< the upper vertex\r\n        this.m_cache_center = new b2Vec2(); // access using GetCenter()\r\n        this.m_cache_extent = new b2Vec2(); // access using GetExtents()\r\n    }\r\n    Copy(o) {\r\n        this.lowerBound.Copy(o.lowerBound);\r\n        this.upperBound.Copy(o.upperBound);\r\n        return this;\r\n    }\r\n    /// Verify that the bounds are sorted.\r\n    IsValid() {\r\n        const d_x = this.upperBound.x - this.lowerBound.x;\r\n        const d_y = this.upperBound.y - this.lowerBound.y;\r\n        let valid = d_x >= 0 && d_y >= 0;\r\n        valid = valid && this.lowerBound.IsValid() && this.upperBound.IsValid();\r\n        return valid;\r\n    }\r\n    /// Get the center of the AABB.\r\n    GetCenter() {\r\n        return b2Vec2.MidVV(this.lowerBound, this.upperBound, this.m_cache_center);\r\n    }\r\n    /// Get the extents of the AABB (half-widths).\r\n    GetExtents() {\r\n        return b2Vec2.ExtVV(this.lowerBound, this.upperBound, this.m_cache_extent);\r\n    }\r\n    /// Get the perimeter length\r\n    GetPerimeter() {\r\n        const wx = this.upperBound.x - this.lowerBound.x;\r\n        const wy = this.upperBound.y - this.lowerBound.y;\r\n        return 2 * (wx + wy);\r\n    }\r\n    /// Combine an AABB into this one.\r\n    Combine1(aabb) {\r\n        this.lowerBound.x = b2Min(this.lowerBound.x, aabb.lowerBound.x);\r\n        this.lowerBound.y = b2Min(this.lowerBound.y, aabb.lowerBound.y);\r\n        this.upperBound.x = b2Max(this.upperBound.x, aabb.upperBound.x);\r\n        this.upperBound.y = b2Max(this.upperBound.y, aabb.upperBound.y);\r\n        return this;\r\n    }\r\n    /// Combine two AABBs into this one.\r\n    Combine2(aabb1, aabb2) {\r\n        this.lowerBound.x = b2Min(aabb1.lowerBound.x, aabb2.lowerBound.x);\r\n        this.lowerBound.y = b2Min(aabb1.lowerBound.y, aabb2.lowerBound.y);\r\n        this.upperBound.x = b2Max(aabb1.upperBound.x, aabb2.upperBound.x);\r\n        this.upperBound.y = b2Max(aabb1.upperBound.y, aabb2.upperBound.y);\r\n        return this;\r\n    }\r\n    static Combine(aabb1, aabb2, out) {\r\n        out.Combine2(aabb1, aabb2);\r\n        return out;\r\n    }\r\n    /// Does this aabb contain the provided AABB.\r\n    Contains(aabb) {\r\n        let result = true;\r\n        result = result && this.lowerBound.x <= aabb.lowerBound.x;\r\n        result = result && this.lowerBound.y <= aabb.lowerBound.y;\r\n        result = result && aabb.upperBound.x <= this.upperBound.x;\r\n        result = result && aabb.upperBound.y <= this.upperBound.y;\r\n        return result;\r\n    }\r\n    // From Real-time Collision Detection, p179.\r\n    RayCast(output, input) {\r\n        let tmin = (-b2_maxFloat);\r\n        let tmax = b2_maxFloat;\r\n        const p_x = input.p1.x;\r\n        const p_y = input.p1.y;\r\n        const d_x = input.p2.x - input.p1.x;\r\n        const d_y = input.p2.y - input.p1.y;\r\n        const absD_x = b2Abs(d_x);\r\n        const absD_y = b2Abs(d_y);\r\n        const normal = output.normal;\r\n        if (absD_x < b2_epsilon) {\r\n            // Parallel.\r\n            if (p_x < this.lowerBound.x || this.upperBound.x < p_x) {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            const inv_d = 1 / d_x;\r\n            let t1 = (this.lowerBound.x - p_x) * inv_d;\r\n            let t2 = (this.upperBound.x - p_x) * inv_d;\r\n            // Sign of the normal vector.\r\n            let s = (-1);\r\n            if (t1 > t2) {\r\n                const t3 = t1;\r\n                t1 = t2;\r\n                t2 = t3;\r\n                s = 1;\r\n            }\r\n            // Push the min up\r\n            if (t1 > tmin) {\r\n                normal.x = s;\r\n                normal.y = 0;\r\n                tmin = t1;\r\n            }\r\n            // Pull the max down\r\n            tmax = b2Min(tmax, t2);\r\n            if (tmin > tmax) {\r\n                return false;\r\n            }\r\n        }\r\n        if (absD_y < b2_epsilon) {\r\n            // Parallel.\r\n            if (p_y < this.lowerBound.y || this.upperBound.y < p_y) {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            const inv_d = 1 / d_y;\r\n            let t1 = (this.lowerBound.y - p_y) * inv_d;\r\n            let t2 = (this.upperBound.y - p_y) * inv_d;\r\n            // Sign of the normal vector.\r\n            let s = (-1);\r\n            if (t1 > t2) {\r\n                const t3 = t1;\r\n                t1 = t2;\r\n                t2 = t3;\r\n                s = 1;\r\n            }\r\n            // Push the min up\r\n            if (t1 > tmin) {\r\n                normal.x = 0;\r\n                normal.y = s;\r\n                tmin = t1;\r\n            }\r\n            // Pull the max down\r\n            tmax = b2Min(tmax, t2);\r\n            if (tmin > tmax) {\r\n                return false;\r\n            }\r\n        }\r\n        // Does the ray start inside the box?\r\n        // Does the ray intersect beyond the max fraction?\r\n        if (tmin < 0 || input.maxFraction < tmin) {\r\n            return false;\r\n        }\r\n        // Intersection.\r\n        output.fraction = tmin;\r\n        return true;\r\n    }\r\n    TestOverlap(other) {\r\n        const d1_x = other.lowerBound.x - this.upperBound.x;\r\n        const d1_y = other.lowerBound.y - this.upperBound.y;\r\n        const d2_x = this.lowerBound.x - other.upperBound.x;\r\n        const d2_y = this.lowerBound.y - other.upperBound.y;\r\n        if (d1_x > 0 || d1_y > 0)\r\n            return false;\r\n        if (d2_x > 0 || d2_y > 0)\r\n            return false;\r\n        return true;\r\n    }\r\n}\r\nexport function b2TestOverlapAABB(a, b) {\r\n    const d1_x = b.lowerBound.x - a.upperBound.x;\r\n    const d1_y = b.lowerBound.y - a.upperBound.y;\r\n    const d2_x = a.lowerBound.x - b.upperBound.x;\r\n    const d2_y = a.lowerBound.y - b.upperBound.y;\r\n    if (d1_x > 0 || d1_y > 0)\r\n        return false;\r\n    if (d2_x > 0 || d2_y > 0)\r\n        return false;\r\n    return true;\r\n}\r\n/// Clipping for contact manifolds.\r\nexport function b2ClipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\r\n    // Start with no output points\r\n    let numOut = 0;\r\n    const vIn0 = vIn[0];\r\n    const vIn1 = vIn[1];\r\n    // Calculate the distance of end points to the line\r\n    const distance0 = b2Vec2.DotVV(normal, vIn0.v) - offset;\r\n    const distance1 = b2Vec2.DotVV(normal, vIn1.v) - offset;\r\n    // If the points are behind the plane\r\n    if (distance0 <= 0)\r\n        vOut[numOut++].Copy(vIn0);\r\n    if (distance1 <= 0)\r\n        vOut[numOut++].Copy(vIn1);\r\n    // If the points are on different sides of the plane\r\n    if (distance0 * distance1 < 0) {\r\n        // Find intersection point of edge and plane\r\n        const interp = distance0 / (distance0 - distance1);\r\n        const v = vOut[numOut].v;\r\n        v.x = vIn0.v.x + interp * (vIn1.v.x - vIn0.v.x);\r\n        v.y = vIn0.v.y + interp * (vIn1.v.y - vIn0.v.y);\r\n        // VertexA is hitting edgeB.\r\n        const id = vOut[numOut].id;\r\n        id.cf.indexA = vertexIndexA;\r\n        id.cf.indexB = vIn0.id.cf.indexB;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        id.cf.typeB = b2ContactFeatureType.e_face;\r\n        ++numOut;\r\n    }\r\n    return numOut;\r\n}\r\n/// Determine if two generic shapes overlap.\r\nconst b2TestOverlapShape_s_input = new b2DistanceInput();\r\nconst b2TestOverlapShape_s_simplexCache = new b2SimplexCache();\r\nconst b2TestOverlapShape_s_output = new b2DistanceOutput();\r\nexport function b2TestOverlapShape(shapeA, indexA, shapeB, indexB, xfA, xfB) {\r\n    const input = b2TestOverlapShape_s_input.Reset();\r\n    input.proxyA.SetShape(shapeA, indexA);\r\n    input.proxyB.SetShape(shapeB, indexB);\r\n    input.transformA.Copy(xfA);\r\n    input.transformB.Copy(xfB);\r\n    input.useRadii = true;\r\n    const simplexCache = b2TestOverlapShape_s_simplexCache.Reset();\r\n    simplexCache.count = 0;\r\n    const output = b2TestOverlapShape_s_output.Reset();\r\n    b2Distance(output, simplexCache, input);\r\n    return output.distance < 10 * b2_epsilon;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Vec2 } from \"../../Common/b2Math\";\r\n/// This holds the mass data computed for a shape.\r\nexport class b2MassData {\r\n    constructor() {\r\n        /// The mass of the shape, usually in kilograms.\r\n        this.mass = 0;\r\n        /// The position of the shape's centroid relative to the shape's origin.\r\n        this.center = new b2Vec2(0, 0);\r\n        /// The rotational inertia of the shape about the local origin.\r\n        this.I = 0;\r\n    }\r\n}\r\nexport var b2ShapeType;\r\n(function (b2ShapeType) {\r\n    b2ShapeType[b2ShapeType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2ShapeType[b2ShapeType[\"e_circleShape\"] = 0] = \"e_circleShape\";\r\n    b2ShapeType[b2ShapeType[\"e_edgeShape\"] = 1] = \"e_edgeShape\";\r\n    b2ShapeType[b2ShapeType[\"e_polygonShape\"] = 2] = \"e_polygonShape\";\r\n    b2ShapeType[b2ShapeType[\"e_chainShape\"] = 3] = \"e_chainShape\";\r\n    b2ShapeType[b2ShapeType[\"e_shapeTypeCount\"] = 4] = \"e_shapeTypeCount\";\r\n})(b2ShapeType || (b2ShapeType = {}));\r\n/// A shape is used for collision detection. You can create a shape however you like.\r\n/// Shapes used for simulation in b2World are created automatically when a b2Fixture\r\n/// is created. Shapes may encapsulate a one or more child shapes.\r\nexport class b2Shape {\r\n    constructor(type, radius) {\r\n        this.m_type = b2ShapeType.e_unknown;\r\n        this.m_radius = 0;\r\n        this.m_type = type;\r\n        this.m_radius = radius;\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this.m_type === other.m_type);\r\n        this.m_radius = other.m_radius;\r\n        return this;\r\n    }\r\n    /// Get the type of this shape. You can use this to down cast to the concrete shape.\r\n    /// @return the shape type.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTaGFwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbGxpc2lvbi9TaGFwZXMvYjJTaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLE9BQU8sRUFBRSxNQUFNLEVBQWUsTUFBTSxxQkFBcUIsQ0FBQztBQUkxRCxrREFBa0Q7QUFDbEQsTUFBTTtJQUFOO1FBQ0UsZ0RBQWdEO1FBQ3pDLFNBQUksR0FBVyxDQUFDLENBQUM7UUFFeEIsd0VBQXdFO1FBQ2pFLFdBQU0sR0FBVyxJQUFJLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFekMsK0RBQStEO1FBQ3hELE1BQUMsR0FBVyxDQUFDLENBQUM7SUFDdkIsQ0FBQztDQUFBO0FBRUQsTUFBTSxDQUFOLElBQVksV0FPWDtBQVBELFdBQVksV0FBVztJQUNyQix3REFBYyxDQUFBO0lBQ2QsK0RBQWlCLENBQUE7SUFDakIsMkRBQWUsQ0FBQTtJQUNmLGlFQUFrQixDQUFBO0lBQ2xCLDZEQUFnQixDQUFBO0lBQ2hCLHFFQUFvQixDQUFBO0FBQ3RCLENBQUMsRUFQVyxXQUFXLEtBQVgsV0FBVyxRQU90QjtBQUVELHFGQUFxRjtBQUNyRixvRkFBb0Y7QUFDcEYsa0VBQWtFO0FBQ2xFLE1BQU07SUFJSixZQUFZLElBQWlCLEVBQUUsTUFBYztRQUh0QyxXQUFNLEdBQWdCLFdBQVcsQ0FBQyxTQUFTLENBQUM7UUFDNUMsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUcxQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQztJQUN6QixDQUFDO0lBS00sSUFBSSxDQUFDLEtBQWM7UUFDeEIsMENBQTBDO1FBQzFDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQztRQUMvQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxvRkFBb0Y7SUFDcEYsMkJBQTJCO0lBQ3BCLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztDQTJDRiJ9","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","﻿\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGrpah, IRenderer, IGraph } from \"./IRenderer.js\";\r\n\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\n\r\n/**\r\n * @extends {IGraph}\r\n */\r\nexport class SpriteBase extends Graph {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tif (raw) {\r\n\t\t\tsuper(url, {\r\n\t\t\t\twidth: raw.__w,\r\n\t\t\t\theight: raw.__h,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\t//this.src is broken;\r\n\r\n\t\tif (url) {\r\n\t\t\tdebugger\r\n\t\t\tthis._url = url;\r\n\t\t\t//this._loadTexture(url);//_loadTexture: undefined\r\n\t\t}\r\n\t\telse if (SpriteBase.isTexture(raw) !== false) {\r\n\t\t\tthis._url = raw[\"\"];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isTexture(raw) {\r\n\t\tif (raw) {\r\n\t\t\tif (raw.hasOwnProperty(\"\")) {\r\n\t\t\t\tif (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!raw.__isEmpty) {\r\n\t\t\t\t\tconsole.group(\"no texture\");\r\n\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\tthrow new Error(\"no texture\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic isTextureHasData(raw) {\r\n\t\treturn raw && typeof raw[\"\"] == 'string' && raw[\"\"].startsWith(\"data:image/\");\r\n\t}\r\n\r\n\tset z(value) {\r\n\t\tthis._order = value;\r\n\t}\r\n\tget z() {\r\n\t\treturn this._order;\r\n\t}\r\n\t\r\n\t/**\r\n\t * try construct value from raw data\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (!this._raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\telse if (propertyName in this._raw) {\r\n\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis._engine.drawGraph(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthis._engine.drawGraph2(this, x - this.x, y - this.y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t */\r\n\tdraw2i(x, y) {\r\n\t\tthis._engine.drawGraph2(this, Math.trunc(x - this.x + 0.5), Math.trunc(y - this.y + 0.5));\r\n\t}\r\n}\r\n\r\n\r\nexport class Sprite extends SpriteBase {\r\n\t/**\r\n\t * sprite = new Sprite(rawData);//不會載入image\r\n\t * sprite._url = img_url;//不會載入image\r\n\t *\r\n\t * 會觸發載入image的method\r\n\t * draw(), isLoaded(), get width(), get height()\r\n\t * \r\n\t * 手動載入image: __loadTexture()\r\n\t * \r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tvar origin = this._get(new Vec2(0, 0), \"origin\", Vec2.get);\r\n\t\tthis.x = origin.x;\r\n\t\tthis.y = origin.y;\r\n\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\tthis.delay = this._get(100, \"delay\", Number);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tctx.rect(x, y, w, h);\r\n\t\t\tctx.clip();\r\n\r\n\t\t\tlet left = x;\r\n\t\t\tlet top = y;\r\n\t\t\tlet right = x + w;\r\n\t\t\tlet bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\tdrawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst left = x;\r\n\t\t\tconst right = x + w;\r\n\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\tdrawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst top = y;\r\n\t\t\tconst bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tthis.draw2(x, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\t_drawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst top = y;\r\n\t\tconst right = x + w;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\t_drawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst right = x + w;\r\n\r\n\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\tthis.draw2(j, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\t_drawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst top = y;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tthis.draw2(x, i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawPattern4i(x, y, w, h) {\r\n\t\tthis.drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\tdrawHorizontalPattern3i(x, y, w) {\r\n\t\tthis.drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawVerticalPattern3i(x, y, h) {\r\n\t\tthis.drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawPattern4i(x, y, w, h) {\r\n\t\tthis._drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\t_drawHorizontalPattern3i(x, y, w) {\r\n\t\tthis._drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawVerticalPattern3i(x, y, h) {\r\n\t\tthis._drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n}\r\n\r\nexport class _$PatternSprite_Loaded extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._direction = null;\r\n\r\n\t\t/** @type {CanvasPattern} */\r\n\t\tthis._pattern = null;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget direction() {\r\n\t\treturn this._direction;\r\n\t}\r\n\tset direction(value) {\r\n\t\tif (value && this._direction != value) {\r\n\t\t\tthis._direction = value;\r\n\t\r\n\t\t\t//reload;\r\n\t\t\tthis._pattern = null;\r\n\t\t\tthis.__proto__ = $PatternSprite.prototype;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(-this.x, -this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(x - this.x, y - this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"repeat\"} */\r\n\tget e_repeat() {\r\n\t\treturn \"repeat\";\r\n\t}\r\n\t/** @returns {\"repeat-x\"} */\r\n\tget e_repeat_x() {\r\n\t\treturn \"repeat-x\";\r\n\t}\r\n\t/** @returns {\"repeat-y\"} */\r\n\tget e_repeat_y() {\r\n\t\treturn \"repeat-y\";\r\n\t}\r\n\t/** @returns {\"no-repeat\"} */\r\n\tget e_noRepeat() {\r\n\t\treturn \"no-repeat\";\r\n\t}\r\n}\r\n\r\nexport class $PatternSprite extends _$PatternSprite_Loaded {\r\n\tdrawPattern(w, h) {\r\n\t\tthis.drawPattern2(0, 0, w, h);\r\n\t}\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.isLoaded()) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t{\r\n\t\t\t\tctx.rect(x, y, w, h);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tlet left = x;\r\n\t\t\t\tlet top = y;\r\n\t\t\t\tlet right = x + w;\r\n\t\t\t\tlet bottom = y + h;\r\n\r\n\t\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern(w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern2(x, y, w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\nimport {\r\n\tb2_linearSlop,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2Body, b2Fixture,\r\n\tb2PolygonShape, b2CircleShape,\r\n\tb2WheelJointDef, b2RevoluteJointDef, b2PrismaticJointDef, b2MouseJointDef,\r\n\tb2Joint, b2RevoluteJoint, b2PrismaticJoint, b2MouseJoint,\r\n\tb2Contact,\r\n} from \"./Physics.js\";\r\n\r\nimport { Foothold } from \"./Ground.js\";\r\n\r\nimport { World } from \"./World.js\";\r\n\r\nimport { CharacterMoveElem } from \"../../Client/PMovePath.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { SceneMap } from \"../Map.js\";\r\nimport { LadderRope } from \"./LadderRope.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nconst DEGTORAD = Math.PI / 180;\r\n\r\nlet b2Vec2_temp = new b2Vec2();\r\n\r\n/**\r\n * physics profile\r\n */\r\nconst chara_profile = {\r\n\twidth: 25 / $gv.CANVAS_SCALE,\r\n\theight: 48 / $gv.CANVAS_SCALE,\r\n\tdensity: 1,\r\n\t/** radius */\r\n\tget foot_width() {\r\n\t\treturn (chara_profile.width * 0.5);\r\n\t},\r\n\t/** radius */\r\n\tget foot_j_width() {\r\n\t\treturn (chara_profile.width * 0.4);\r\n\t},\r\n};\r\n\r\n(function () {\r\n\tconst jumpSpeed = 555;//??\r\n\tconst fallSpeed = 670;//px/s\r\n\tconst walkSpeed = 125;//px/s\r\n\t\r\n\twindow.JUMP_FORCE = jumpSpeed;\r\n\r\n\twindow.MOVEMENT_VELOCITY = walkSpeed / $gv.CANVAS_SCALE;\r\n\twindow.$LADDER_SPEED = walkSpeed / $gv.CANVAS_SCALE;\r\n\r\n\twindow.PLAYER_USE_WHEEL_WALKER = false;\r\n\r\n\twindow.FOOT_FRICTION = 1;\r\n\r\n\twindow.MOVEMENT_POWER = 140000;\r\n\twindow.MOVEMENT_STOP_POWER = 140000;\r\n\r\n\twindow.PORTAL_COOLDOWN = 1000;\r\n})();\r\n\r\n\r\nexport class PPlayerState {\r\n\tconstructor() {\r\n\t\t/** @type {boolean} - ApplyForce(jump_force) until leave foothold */\r\n\t\tthis._begin_jump = false;\r\n\r\n\t\t/** jump_count = jump ? jump_count : 0 */\r\n\t\tthis.jump = true;\r\n\r\n\t\t/** jump_count = jump ? jump_count : 0 */\r\n\t\tthis.jump_count = 0;\r\n\r\n\t\t/** ?? */\r\n\t\tthis._drop = true;\r\n\r\n\t\tthis.walk = false;\r\n\r\n\t\tthis.prone = false;\r\n\r\n\t\t/** TODO: fallDown */\r\n\t\tthis.dropDown = false;\r\n\r\n\t\tthis._fly = false;//not jump \r\n\t\t\r\n\t\tthis.brake = true;//??\r\n\t\t\r\n\t\t/** @type {-1|1} */\r\n\t\tthis.front = -1;\r\n\r\n\t\t/** @type {boolean} - is use ladder */\r\n\t\tthis.ladder = false;\r\n\r\n\t\t/**\r\n\t\t * action animation\r\n\t\t * @type {-1|0|1} - up: -1, down: 1, stop: 0\r\n\t\t */\r\n\t\tthis.ladder_move_dir = 0;\r\n\r\n\t\t/** @type {number} - 無敵時間，unit is millisecond */\r\n\t\tthis.invincible = 0;\r\n\t\t\r\n\t\t/** @type {boolean} - can not move or jump */\r\n\t\tthis.freeze = false;\r\n\r\n\t\t/** @type {boolean} - can not move or jump */\r\n\t\tthis.invokeSkill = false;\r\n\r\n\t\t/** @type {number} - use portal cooldown time，unit is millisecond */\r\n\t\tthis.portal_cooldown = 0;\r\n\t\t\r\n\t\t//\r\n\r\n\t\t/** @type {number} - knockback time，unit is millisecond */\r\n\t\tthis.knockback = 0;\r\n\r\n\t\t/** @type {boolean} - off walker power */\r\n\t\tthis.outOfControl = false;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {number} jump_height\r\n * @param {b2Vec2} gravity\r\n */\r\nfunction _CalcJumpImpulse(jump_height, gravity) {\r\n\tlet impulse = Math.sqrt(jump_height * 2.0 * Math.abs(gravity.y));\r\n\t//(impulse = m * v) => (F = ∫ Mass * dVel)\r\n\treturn impulse;\r\n}\r\n\r\n\r\nclass ControlKeys {\r\n\tconstructor() {\r\n\t\tthis.up = 0;\r\n\t\tthis.left = 0;\r\n\t\tthis.down = 0;\r\n\t\tthis.right = 0;\r\n\t\tthis.jump = 0;\r\n\t\tthis.enterPortal = 0;//TODO: key: enterPortal\r\n\t}\r\n}\r\n\r\nexport class FootContact {\r\n\t/**\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} position\r\n\t * @param {number} priority\r\n\t */\r\n\tconstructor(foothold, position, priority) {\r\n\t\t/** @type {Foothold} */\r\n\t\tthis.foothold = foothold;\r\n\r\n\t\t/** @type {b2Vec2} */\r\n\t\tthis.position = position;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.priority = priority;\r\n\t}\r\n}\r\n\r\nclass PCharacterBase {\r\n\tconstructor() {\r\n\t\t/** @type {boolean} */\r\n\t\tthis.disable = false;\r\n\r\n\t\tthis.chara_profile = Object.assign({}, chara_profile);\r\n\t\t\r\n\t\tthis.setMovementSpeed(100);\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.foot_walk = null;\r\n\r\n\t\t/** @type {b2Joint|b2RevoluteJoint} */\r\n\t\tthis.walker = null;\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tthis.$foothold = null;\r\n\r\n\t\t/**\r\n\t\t * this.$foothold old value\r\n\t\t * @type {Foothold}\r\n\t\t */\r\n\t\tthis.prev_$fh = null;\r\n\r\n\t\t/**\r\n\t\t * no contact leave_$fh\r\n\t\t * where foothold chara dropDown\r\n\t\t * @type {Foothold}\r\n\t\t */\r\n\t\tthis.leave_$fh = null;\r\n\r\n\r\n\t\t/** @type {Foothold} - in World::Setp */\r\n\t\tthis._foothold = null;\r\n\r\n\t\t/** @type {b2Vec2} - contact foothold point */\r\n\t\tthis._foot_at = new b2Vec2();\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._foothold_priority = 0;\r\n\t\t\r\n\t\t/** @type {FootContact[]} */\r\n\t\tthis._foot_contact_list = [];\r\n\r\n\r\n\t\t/** @type {MapPortal} */\r\n\t\tthis.portal = null;\r\n\r\n\r\n\t\t/** @type {LadderRope} */\r\n\t\tthis.ladder = null;\r\n\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._walker_omega = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.jump_force = JUMP_FORCE;\r\n\r\n\t\tthis.state = new PPlayerState();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {boolean} clearForce\r\n\t */\r\n\tsetPosition(x, y, clearForce) {\r\n\t\tconst by = y - this.chara_profile.foot_width - this.chara_profile.height * 0.75 * 0.5;\r\n\t\tconst fy = y - this.chara_profile.foot_width;\r\n\r\n\t\tthis.body.SetPositionXY(x, by);\r\n\r\n\t\ttry {\r\n\t\t\tif (this.foot_walk)\r\n\t\t\t\tthis.foot_walk.SetPositionXY(x, fy);\r\n\r\n\t\t\tif (clearForce) {\r\n\t\t\t\tconst speed = new b2Vec2(0, 0);\r\n\t\t\t\tthis.body.ConstantVelocity(speed);\r\n\t\t\t\tif (this.foot_walk)\r\n\t\t\t\t\tthis.foot_walk.ConstantVelocity(speed);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * get bottom position\r\n\t * @returns {{x: number, y: number}}\r\n\t */\r\n\tgetPosition() {\r\n\t\tconst pos = this.foot_walk.GetPosition();\r\n\t\treturn new b2Vec2(pos.x, pos.y + this.chara_profile.foot_width);\r\n\t}\r\n\r\n\t/**\r\n\t * from.tn(hp00_1) == to.pn(hp00_1) && from.pn(hp00) == to.tn(hp00)\r\n\t * @param {MapPortal} portal\r\n\t * @returns {boolean} true if enter portal\r\n\t */\r\n\t_usePortal(portal) {\r\n\t\tif (!portal.enable || this.state.portal_cooldown > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t/** @type {SceneMap} */\r\n\t\tconst mapRenderer = portal.mapRenderer;\r\n\r\n\t\tconst mapController = mapRenderer.controller;\r\n\t\t\r\n\t\tconst map_id = portal.getMap();\r\n\t\t\r\n\t\tif (portal.exeScript) {//TODO: portal script\r\n\t\t\tportal.exeScript(this);\r\n\t\t}\r\n\t\telse if (map_id) {\r\n\t\t\tif (map_id == mapRenderer.map_id) {\r\n\t\t\t\tconst reg = portal.tn.match(/(^[a-z_]+)(\\d+$)/) || portal.tn.match(/(^[a-z]+)\\d+_\\d+$/);//pn?tn?\r\n\t\t\t\tconst cmd = reg[1];\r\n\r\n\t\t\t\tif (cmd == \"hp\") {\r\n\t\t\t\t\tlet fromTn = portal.tn;\r\n\t\t\t\t\tlet toPortal = mapRenderer.portalMgr.portals.find(function (toPortal) {\r\n\t\t\t\t\t\treturn fromTn == toPortal.pn;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._gotoPortal(toPortal);\r\n\t\t\t\t}\r\n\t\t\t\telse if (cmd == \"pt_go\") {\r\n\t\t\t\t\tdebugger;//??\r\n\r\n\t\t\t\t\tconst tpid = parseInt(reg[2], 10);\r\n\t\t\t\t\tconst tp = mapRenderer.portalMgr.portals[tpid];\r\n\r\n\t\t\t\t\tthis._gotoPortal(tp);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(`portal.pn: ${portal.pn}, portal.tn: ${portal.tn}, %o`, portal);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmapController.doAfterStep(function () {\r\n\t\t\t\t\tmapRenderer.unload();\r\n\t\t\t\t\tmapRenderer.load(map_id);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"portal: $o\", portal);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.state.portal_cooldown = PORTAL_COOLDOWN;//防止重複\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * @param {MapPortal} portal\r\n\t */\r\n\t_gotoPortal(portal) {\r\n\t\t/** @type {SceneMap} */\r\n\t\tconst mapRenderer = portal.mapRenderer;\r\n\t\tconst mapController = mapRenderer.controller;\r\n\r\n\t\t//not in world.Step\r\n\t\tmapController.doAfterStep(() => {\r\n\t\t\tconst x = portal.x / $gv.CANVAS_SCALE;\r\n\t\t\tconst y = (portal.y - 3) / $gv.CANVAS_SCALE;//adj portal pos\r\n\t\t\tthis.setPosition(x, y, true);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * set ladder, not use\r\n\t * @param {LadderRope} ladder\r\n\t */\r\n\tcontactLadder(ladder) {\r\n\t\tif (ladder) {\r\n\t\t\tthis.ladder = ladder;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.ladder = null;\r\n\t\t}\r\n\t}\r\n\tleaveLadder() {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tthis._useLadder(false);\r\n\t\t\tthis.contactLadder(null, null);//set no contact\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {boolean} flag - true: use, false: no use\r\n\t */\r\n\tuseLadder(flag) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tthis._useLadder(flag);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {boolean} flag - true: use, false: no use\r\n\t */\r\n\t_useLadder(flag) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tif (flag) {\r\n\t\t\tif (this.ladder && !this.$ladder_pj) {\r\n\t\t\t\tconst ladderBody = this.ladder.body;\r\n\r\n\t\t\t\tif (ladderBody.GetAngle() || ladderBody.GetAngularVelocity()) {\r\n\t\t\t\t\tthis.body.SetAngle(ladderBody.GetAngle());\r\n\t\t\t\t\tthis.body.SetFixedRotation(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state.ladder = true;\r\n\t\t\t\tthis.state.jump = false;\r\n\t\t\t\tthis.state.jump_count = 0;\r\n\r\n\t\t\t\tthis.body.SetAwake(true);\r\n\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\tthis.body.m_type = b2BodyType.b2_kinematicBody;\r\n\t\t\t\t//\r\n\t\t\t\tthis.foot_walk.SetAwake(true);\r\n\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t\tthis.foot_walk.m_type = b2BodyType.b2_kinematicBody;\r\n\r\n\t\t\t\tthis.walker.SetMotorSpeed(0);\r\n\r\n\t\t\t\t// create joint\r\n\r\n\t\t\t\tlet height = this.ladder.calcHeight() / $gv.CANVAS_SCALE;\r\n\r\n\t\t\t\t//let ground = world.ground.bodies[0];\r\n\r\n\t\t\t\tthis.setPosition(ladderBody.GetPosition().x, this.getPosition().y);\r\n\r\n\t\t\t\tlet pjd = new b2PrismaticJointDef();\r\n\t\t\t\t//pjd.Initialize(ladderBody, this.body, anchor, new b2Vec2(0, 1));\r\n\t\t\t\t{\r\n\t\t\t\t\tpjd.bodyA = ladderBody;\r\n\t\t\t\t\tpjd.bodyB = this.foot_walk;//this.body;\r\n\t\t\t\t\t//pjd.localAnchorA.Set(0, 0);\r\n\t\t\t\t\t//pjd.localAnchorB.Set(0, 0);\r\n\t\t\t\t\tpjd.localAxisA.Set(0, 1);\r\n\t\t\t\t\t//pjd.referenceAngle = 0;\r\n\t\t\t\t}\r\n\t\t\t\tpjd.lowerTranslation = -this.chara_profile.foot_width;\r\n\t\t\t\tpjd.upperTranslation = height + this.chara_profile.foot_width;\r\n\t\t\t\tpjd.enableLimit = true;\r\n\t\t\t\tpjd.maxMotorForce = this._getMass() * 1000;\r\n\r\n\t\t\t\t/** @type {b2PrismaticJoint} */\r\n\t\t\t\tlet pj = world.CreateJoint(pjd);\r\n\r\n\t\t\t\tthis.$ladder_pj = pj;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.ladder) {\r\n\t\t\t\t//this.ladder = null;\r\n\r\n\t\t\t\tif (this.state.ladder) {\r\n\t\t\t\t\tthis.state.ladder = false;\r\n\r\n\t\t\t\t\tthis.body.SetAwake(true);\r\n\t\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\t\tthis.body.m_type = b2BodyType.b2_dynamicBody;\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.foot_walk.SetAwake(true);\r\n\t\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t\t\tthis.foot_walk.m_type = b2BodyType.b2_dynamicBody;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.$ladder_pj) {\r\n\t\t\t\tworld.DestroyJoint(this.$ladder_pj);\r\n\t\t\t\tdelete this.$ladder_pj;\r\n\r\n\t\t\t\tthis.body.SetAngle(0);\r\n\t\t\t\tthis.body.SetFixedRotation(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremove_sticky() {\r\n\t\tif (this.$sticky_pj) {\r\n\t\t\tthis.body.m_world.DestroyJoint(this.$sticky_pj);\r\n\t\t\tthis.$sticky_pj = null;\r\n\t\t}\r\n\t}\r\n\r\n\tactionJump() {\r\n\t\tthis.state._begin_jump = true;\r\n\t\t++this.state.jump_count;\r\n\t}\r\n\t//actionWalk(front) {\r\n\t//}\r\n\tactionDropdown() {\r\n\t\tthis.leave_$fh = this.$foothold;\r\n\t\tthis.$foothold = null;\r\n\t\tthis.state.dropDown = true;\r\n\t\tthis.body.SetAwake(true);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Partial<ControlKeys>} keys\r\n\t */\r\n\tcontrol(keys) {\r\n\t\tif (!this._isCanMove()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.state.ladder && this.$ladder_pj) {\r\n\t\t\tconst ladderBody = this.ladder.body;\r\n\t\t\tconst speed = (window.$LADDER_SPEED || 1);\r\n\r\n\t\t\tif (ladderBody) {\r\n\t\t\t\tif (ladderBody.GetAngle() || ladderBody.GetAngularVelocity()) {\r\n\t\t\t\t\tthis.body.SetAngle(ladderBody.GetAngle());\r\n\t\t\t\t\tthis.body.SetFixedRotation(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//else {\r\n\t\t\t//\tdebugger;\r\n\t\t\t//}\r\n\r\n\t\t\tif (keys.up && !keys.down) {\r\n\t\t\t\tthis.state.ladder_move_dir = -1;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(true);\r\n\t\t\t\tthis.$ladder_pj.SetMotorSpeed(-speed);\r\n\t\t\t}\r\n\t\t\telse if (keys.down && !keys.up) {\r\n\t\t\t\tthis.state.ladder_move_dir = 1;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(true);\r\n\t\t\t\tthis.$ladder_pj.SetMotorSpeed(speed);\r\n\t\t\t}\r\n\t\t\telse {//stop\r\n\t\t\t\tthis.state.ladder_move_dir = 0;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(false);\r\n\r\n\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\t//\r\n\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t}\r\n\t\t\tif (keys.jump) {\r\n\t\t\t\tconst world = this.body.m_world;\r\n\t\t\t\tconst mass = this._getMass();\r\n\r\n\t\t\t\tif (keys.left && keys.right) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t\telse if (keys.left) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t\tworld.doAfterStep(() => {\r\n\t\t\t\t\t\t//const f = new b2Vec2(0, -world.m_gravity.y * mass);\r\n\t\t\t\t\t\t//this.body.ApplyForceToCenter(f, true);\r\n\t\t\t\t\t\tthis.body.ApplyLinearImpulseToCenter2(-speed * mass, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if (keys.right) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t\tworld.doAfterStep(() => {\r\n\t\t\t\t\t\t//const f = new b2Vec2(0, -world.m_gravity.y * mass);\r\n\t\t\t\t\t\t//this.body.ApplyForceToCenter(f, true);\r\n\t\t\t\t\t\tthis.body.ApplyLinearImpulseToCenter2(speed * mass, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.$ladder_pj) {\r\n\t\t\tdebugger\r\n\t\t\tthis.useLadder(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state.outOfControl) {\r\n\t\t\t\tthis.walker.EnableMotor(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.walker.EnableMotor(true);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.portal && keys.up) {\r\n\t\t\t\t//TODO: enter portal key: keys.enterPortal\r\n\t\t\t\tlet portal = this.portal;\r\n\t\t\t\tif (this._usePortal(portal)) {\r\n\t\t\t\t\tthis.portal = null;//使用完畢\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.ladder && (\r\n\t\t\t\t(keys.down && this.$foothold && this.ladder.body.GetLocalPoint(this.getPosition(), b2Vec2_temp).y <= 0) ||\r\n\t\t\t\t(keys.up && !this.$foothold && this.ladder.body.GetLocalPoint(this.getPosition(), b2Vec2_temp).y > 0))\r\n\t\t\t) {\r\n\t\t\t\tthis.state.ladder_move_dir = 0;//reset\r\n\t\t\t\tthis.useLadder(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst wheel_sp = this._walker_omega;\r\n\t\t\tconst velocity = this.body.GetLinearVelocity();//foot_walk\r\n\r\n\t\t\tif (!this.state.jump && !this.state.dropDown) {\r\n\t\t\t\t//dropDown\r\n\t\t\t\tif (keys.down && keys.jump) {\r\n\t\t\t\t\tthis.actionDropdown();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//趴下\r\n\t\t\t\tif (keys.down) {\r\n\t\t\t\t\tthis.state.prone = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.prone = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.state.prone = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (keys.left && !keys.right) {\r\n\t\t\t\tthis.state.walk = true;\r\n\t\t\t\tthis.state.front = -1;\r\n\t\t\t\tthis.walker.SetMotorSpeed(-wheel_sp);\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(true);//power on\r\n\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t}\r\n\t\t\telse if (keys.right && !keys.left) {\r\n\t\t\t\tthis.state.walk = true;\r\n\t\t\t\tthis.state.front = 1;\r\n\t\t\t\tthis.walker.SetMotorSpeed(wheel_sp);\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(true);//power on\r\n\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.state.walk = false;\r\n\r\n\t\t\t\tif (!this.state.jump) {\r\n\t\t\t\t\tlet vx = velocity.x;\r\n\t\t\t\t\tif (vx > 50 * b2_linearSlop) {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(-vx * Math.PI / 2 / Math.PI / this.chara_profile.width / 2);//煞車但無法止滑\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (vx < -50 * b2_linearSlop) {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(-vx * Math.PI / 2 / Math.PI / this.chara_profile.width / 2);//煞車但無法止滑\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(0);//stop motor\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.walker.SetMotorSpeed(0);//stop motor\r\n\t\t\t\t}\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_STOP_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(false);//power off\r\n\r\n\t\t\t\tif (this.state.止滑) {\r\n\t\t\t\t\tthis.sticky(this.getPosition());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (keys.jump && this._isCanJump()) {\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t\tthis.actionJump();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_isCanJump() {\r\n\t\treturn !this.state.jump && !this.isDrop();\r\n\t}\r\n\r\n\t_isCanMove() {\r\n\t\treturn !this.state.freeze && !this.state.knockback;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} increment_percent - increment_percent >= -100\r\n\t */\r\n\tsetMovementSpeed(increment_percent) {\r\n\t\tif (!(Number.isSafeInteger(increment_percent) || (!Number.isNaN(increment_percent) && Number.isFinite(increment_percent)))) {\r\n\t\t\tdebugger\r\n\t\t\tif (process.env.NODE_ENV !== '') {\r\n\t\t\t\tthrow new TypeError(\"increment_percent must is number\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet scale = (100 + increment_percent) / 100;\r\n\t\tif (scale > 0) {\r\n\t\t\tthis._setWalkerOmegaFromVelocity(MOVEMENT_VELOCITY * scale);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._setWalkerOmegaFromVelocity(0);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} speed - speed = pixel / second\r\n\t */\r\n\tsetMovementSpeedPixel(speed) {\r\n\t\tlet v = speed / $gv.CANVAS_SCALE;\r\n\t\tif (v > 0) {\r\n\t\t\tthis._walker_omega = v;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._walker_omega = 0;\r\n\t\t}\r\n\t}\r\n\t_setWalkerOmegaFromVelocity(movement_velocity) {\r\n\t\tthis._walker_omega = movement_velocity / (Math.PI * this.chara_profile.width) * Math.PI;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} increment_percent - increment_percent >= -100\r\n\t */\r\n\tsetjumpForce(increment_percent) {\r\n\t\tif (!(Number.isSafeInteger(increment_percent) || (!Number.isNaN(increment_percent) && Number.isFinite(increment_percent)))) {\r\n\t\t\tdebugger\r\n\t\t\tthrow new TypeError(\"increment_percent must is number\");\r\n\t\t}\r\n\r\n\t\tlet scale = (100 + increment_percent) / 100;\r\n\t\tif (scale <= 0) {\r\n\t\t\tthis.jump_force = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst gravity = this.body.GetWorld().GetGravity();\r\n\t\t\tthis.jump_force = JUMP_FORCE * scale;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\t_getMass() {\r\n\t\treturn this.body.GetMass() + this.foot_walk.GetMass();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} s\r\n\t */\r\n\tsetGravityScale(s) {\r\n\t\tthis.body.SetGravityScale(s);\r\n\t\tthis.foot_walk.SetGravityScale(s);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @returns {string}\r\n\t */\r\n\tget _body_category() {\r\n\t\treturn \"body\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tlet first_pos = new b2Vec2(1 / $gv.CANVAS_SCALE, -2 / $gv.CANVAS_SCALE);\r\n\t\tlet jmp_body_pos_y = first_pos.y + this.chara_profile.height * 0.75 * 0.5;\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tbdef.type = b2BodyType.b2_dynamicBody;\r\n\t\tbdef.bullet = true;//get real contact point\r\n\t\tbdef.position.Set(first_pos.x, first_pos.y);\r\n\t\tbdef.userData = this;\r\n\r\n\t\tfdef.userData = this;\r\n\r\n\t\t//create body\r\n\t\t{\r\n\t\t\tthis.body = world.CreateBody(bdef);\r\n\t\t\tthis.body.SetFixedRotation(true);\r\n\t\t}\r\n\t\tthis.body.$type = \"player\";\r\n\r\n\t\tfdef.filter.Copy(FilterHelper.get(this._body_category));\r\n\r\n\t\t//head\r\n\t\t{\r\n\t\t\tshape.SetAsBox(\r\n\t\t\t\tthis.chara_profile.width * 0.5,\r\n\t\t\t\tthis.chara_profile.height * 0.75 * 0.5,\r\n\t\t\t\tb2Vec2.ZERO,//new b2Vec2(0, 0),//\r\n\t\t\t\t0);\r\n\r\n\t\t\tfdef.density = this.chara_profile.density;\r\n\t\t\tfdef.friction = 0;\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tfdef.shape = shape;\r\n\t\t\t//\r\n\t\t\tthis.fixture = this.body.CreateFixture(fdef);\r\n\t\t\tthis.fixture.$type = \"player\";\r\n\t\t}\r\n\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"foot\"));\r\n\t\t//\r\n\t\t//create walker\r\n\t\t{\r\n\t\t\tbdef.type = b2BodyType.b2_dynamicBody;\r\n\t\t\tbdef.position.Set(first_pos.x, jmp_body_pos_y);\r\n\t\t\tthis.foot_walk = world.CreateBody(bdef);\r\n\r\n\t\t\tlet circle = new b2CircleShape();\r\n\t\t\tcircle.m_p.Set(0, 0);\r\n\t\t\tcircle.m_radius = this.chara_profile.foot_width;\r\n\t\t\tfdef.shape = circle;\r\n\t\t\tfdef.density = this.chara_profile.density;\r\n\t\t\t//fdef.filter = world.getFilterDefine(\"pl_ft_walk\");\r\n\t\t\tfdef.friction = FOOT_FRICTION;//walk\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tlet fixture = this.foot_walk.CreateFixture(fdef);\r\n\t\t\tfixture.$type = \"pl_ft_walk\";\r\n\r\n\t\t\tthis._set_foot_listener(fixture);\r\n\t\t}\r\n\t\tthis.foot_walk.$type = \"pl_ft_walk\";\r\n\r\n\t\t//j2\r\n\t\t{\r\n\t\t\tlet jd;\r\n\r\n\t\t\tif (PLAYER_USE_WHEEL_WALKER) {\r\n\t\t\t\tjd = new b2WheelJointDef();//b2WheelJointDef//b2RevoluteJointDef\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tjd = new b2RevoluteJointDef();//b2WheelJointDef//b2RevoluteJointDef\r\n\t\t\t}\r\n\r\n\t\t\tif (jd instanceof b2RevoluteJointDef) {\r\n\t\t\t\tjd.Initialize(this.body, this.foot_walk, new b2Vec2(first_pos.x, jmp_body_pos_y));\r\n\t\t\t}\r\n\t\t\tif (jd instanceof b2WheelJointDef) {\r\n\t\t\t\tjd.Initialize(this.body, this.foot_walk, new b2Vec2(first_pos.x, jmp_body_pos_y), new b2Vec2(0, -1));\r\n\t\t\t}\r\n\t\t\tjd.enableMotor = true;\r\n\t\t\tjd.maxMotorTorque = MOVEMENT_POWER;\r\n\t\t\t//jd.motorSpeed = 40;\r\n\t\t\tif (jd instanceof b2RevoluteJointDef) {\r\n\t\t\t\tjd.enableLimit = false;\r\n\t\t\t\tjd.lowerAngle = 0 * DEGTORAD;\r\n\t\t\t\tjd.upperAngle = -0 * DEGTORAD;\r\n\t\t\t\tjd.referenceAngle = 0;\r\n\t\t\t}\r\n\t\t\tif (jd instanceof b2WheelJointDef) {\r\n\t\t\t\tjd.frequencyHz = 10;//springs\r\n\t\t\t\tjd.dampingRatio = 1;//springs\r\n\t\t\t}\r\n\t\t\tthis.walker = world.CreateJoint(jd);\r\n\t\t}\r\n\t\t\r\n\t\tthis.body.addStep(this.Step.bind(this));\r\n\t\tthis.body.addAfterStep(this.AfterStep.bind(this));\r\n\t\t\r\n\t\tthis.setMovementSpeed(0);\r\n\t\tthis.setjumpForce(0);\r\n\t}\r\n\t\r\n\t/**\r\n\t * destroy this\r\n\t * @returns {void}\r\n\t */\r\n\t_destroy() {\r\n\t\t/** @type {World} world */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tif (this.body) {\r\n\t\t\tworld.DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"this already dead\");\r\n\t\t}\r\n\t\tif (this.foot_walk) {\r\n\t\t\tworld.DestroyBody(this.foot_walk);\r\n\t\t\tthis.foot_walk = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Fixture} fa - self\r\n\t * @param {b2Fixture} fb - other\r\n\t * @returns {boolean}\r\n\t */\r\n\t_isFromSelfContact(fa, fb) {\r\n\t\tlet a = fa.GetBody().GetUserData();\t// A data\r\n\t\tlet b = fb.GetBody().GetUserData();\t// B data\r\n\r\n\t\tif (a && b && a.body && b.body && a.body == b.body) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa - self\r\n\t * @param {b2Fixture} fb - other\r\n\t * @returns {boolean} - return true if from self and disable this contact\r\n\t */\r\n\t_ignoreSelfContact(contact, fa, fb) {\r\n\t\tif (this._isFromSelfContact(fa, fb)) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t_set_foot_listener(foot_fixture) {\r\n\t\tfoot_fixture.beginContact = this.__beginContact_walker;\r\n\t\tfoot_fixture.endContact = this.__endContact_walker;\r\n\t\tfoot_fixture.preSolve = this.__preSolve_walker;\r\n\t}\r\n\t\r\n\t__beginContact_walker(contact, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet targetBody = fb.m_body;\r\n\t\tif (targetBody) {\r\n\t\t\tswitch (targetBody.$type) {\r\n\t\t\t\tcase \"portal\":\r\n\t\t\t\t\tthis._beginContactPortal(fb.m_userData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__endContact_walker(contact, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet targetBody = fb.m_body;\r\n\t\tif (targetBody) {\r\n\t\t\tswitch (targetBody.$type) {\r\n\t\t\t\tcase \"portal\":\r\n\t\t\t\t\tthis._endContactPortal(fb.m_userData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__preSolve_walker(contact, oldManifold, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (fa.$type == \"pl_ft_walk\" && fb.$type == \"pl_ft_walk\") {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {MapPortal} portal */\r\n\t_beginContactPortal(portal) {\r\n\t\tthis.portal = portal;\r\n\r\n\t\tif (portal.enable) {\r\n\t\t\tif (portal.script) {\r\n\t\t\t\tconsole.log(\"goto map: \" + portal.getMap() + \"; \" + portal.script);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"goto map: \" + portal.getMap());\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"contact portal: %o\", portal);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {MapPortal} portal */\r\n\t_endContactPortal(portal) {\r\n\t\tif (this.portal == portal) {\r\n\t\t\tthis.portal = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 決定接觸哪一個foothold，忽略牆壁\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} foot_at\r\n\t * @returns {number}\r\n\t */\r\n\t__priority_foothold_contact(foothold, foot_at) {\r\n\t\tif (foothold.is_wall) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif (this.$foothold && this.$foothold.chain != foothold.chain) {\r\n\t\t\tif (this.$foothold != foothold && !this.state.dropDown) {\r\n\t\t\t\t// 接觸多個 foothold 以 \"下面\" 的為主，上坡時以 \"下(上)一個\" 為主\r\n\t\t\t\t// 忽略連續 foothold 重疊的點\r\n\t\t\t\tif (this._foot_at && foot_at.y < this._foot_at.y) {\r\n\t\t\t\t\tif ((this.$foothold.prev == foothold.id && foothold.y1 < this.$foothold.y1) ||\r\n\t\t\t\t\t\t(this.$foothold.next == foothold.id && foothold.y2 < this.$foothold.y2)) {\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//新的接觸\r\n\t\treturn 2;\r\n\t}\r\n\r\n\t/**\r\n\t * 決定接觸哪一個foothold，忽略牆壁\r\n\t * if foothold is wall then return true\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} foot_at\r\n\t */\r\n\t_which_foothold_contact(foothold, foot_at) {\r\n\t\tif (foothold.is_wall) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet priority = this.__priority_foothold_contact(foothold, foot_at);\r\n\t\tif (priority > 0) {\r\n\t\t\tif (!this._foothold_priority || priority >= this._foothold_priority) {\r\n\t\t\t\tthis._foothold = foothold;\r\n\t\t\t\tthis._foot_at = foot_at.Clone();\r\n\t\t\t\tthis._foothold_priority = priority;\r\n\t\t\t\t//this.sticky(foot_at);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet foot_contact = new FootContact(foothold, foot_at, priority);\r\n\t\t\t\tthis._foot_contact_list.push(foot_contact);\r\n\t\t\t\tthis._foot_contact_list.sort((a, b) => a.priority - b.priority);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Vec2} anchor\r\n\t */\r\n\tsticky(anchor) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tif (this.$sticky_pj) {\r\n\t\t\t\treturn;\r\n\r\n\t\t\t\tworld.DestroyJoint(this.$sticky_pj);\r\n\t\t\t}\r\n\r\n\t\t\t//this.setPosition(anchor.x, anchor.y);\r\n\r\n\t\t\tlet pjd = new b2PrismaticJointDef();\r\n\t\t\tpjd.Initialize(world.mapBound_body, this.body, anchor, new b2Vec2(0, 1));\r\n\t\t\tif (0) {\r\n\t\t\t\tpjd.bodyA = world.mapBound_body;\r\n\t\t\t\tpjd.bodyB = this.foot_walk;//this.body;\r\n\t\t\t\t//pjd.localAnchorA.Set(0, 0);\r\n\t\t\t\t//pjd.localAnchorB.Set(0, 0);\r\n\t\t\t\tpjd.localAxisA.Set(0, 1);\r\n\t\t\t\t//pjd.referenceAngle = 0;\r\n\t\t\t}\r\n\t\t\tpjd.lowerTranslation = 0;\r\n\t\t\tpjd.upperTranslation = 0;\r\n\t\t\tpjd.enableLimit = true;\r\n\t\t\tpjd.maxMotorForce = this._getMass() * 1000;\r\n\r\n\t\t\t/** @type {b2PrismaticJoint} */\r\n\t\t\tlet pj = world.CreateJoint(pjd);\r\n\r\n\t\t\tthis.$sticky_pj = pj;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {boolean}\r\n\t */\r\n\tisDrop() {\r\n\t\treturn this.state.dropDown || this.state._drop;\r\n\t}\r\n\r\n\t_endContactFoothold() {\r\n\t\tfor (let i = 0; i < this._endContactFootholdList.length; ++i) {\r\n\t\t\tlet fh = this._endContactFootholdList[i];\r\n\r\n\t\t\tif (fh == this._$fallEdge) {\r\n\t\t\t\tthis._$fallEdge = null;\r\n\t\t\t}\r\n\t\t\telse if (fh == this._foothold) {\r\n\t\t\t\tthis._foothold = null;\r\n\t\t\t\tthis._foot_at = null;\r\n\t\t\t}\r\n\t\t\t//else if (fh.id == this._foothold.id) {\r\n\t\t\t//\tthis._foothold = null;\r\n\t\t\t//\tthis._foot_at = null;\r\n\t\t\t//}\r\n\r\n\t\t\tif (this.$foothold && fh == this.$foothold) {\r\n\t\t\t\tthis.prev_$fh = this.$foothold;\r\n\t\t\t\tthis.$foothold = null;\r\n\t\t\t}\r\n\t\t\tif (this.leave_$fh && this.leave_$fh == fh) {\r\n\t\t\t\tthis.leave_$fh = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._endContactFootholdList.length = 0;//clear\r\n\t}\r\n\r\n\t/**\r\n\t * before world::step\r\n\t * @param {number} stamp\r\n\t */\r\n\tStep(stamp) {\r\n\t\t// prepare contact\r\n\t\tthis.state._drop = false;\r\n\t\tthis._foothold = null;\r\n\t\tthis._foot_at = null;\r\n\r\n\t\t// apply state\r\n\t\tif (this.state.ladder) {\r\n\t\t\tthis.state.jump = false;\r\n\t\t\tthis.state.jump_count = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state._begin_jump) {\r\n\t\t\t\tconst mass = this._getMass();\r\n\t\t\t\tconst force = new b2Vec2(0, -mass * this.jump_force);\r\n\t\t\t\tthis.body.ApplyForceToCenter(force);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.knockback > 0) {\r\n\t\t\t\tthis.state.knockback -= stamp;\r\n\r\n\t\t\t\tif (this.state.knockback > 0) {\r\n\t\t\t\t\tthis.state.outOfControl = true;\r\n\t\t\t\t\tthis.walker.EnableMotor(false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.knockback = 0;\r\n\t\t\t\t\tthis.state.outOfControl = false;\r\n\t\t\t\t\tthis.walker.EnableMotor(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.state.invincible > 0) {\r\n\t\t\t\tthis.state.invincible -= stamp;\r\n\t\t\t\tif (this.state.invincible > 0) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.invincible = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.state.portal_cooldown) {\r\n\t\t\t\tthis.state.portal_cooldown -= stamp;\r\n\t\t\t\tif (this.state.portal_cooldown > 0) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.portal_cooldown = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * after world::step\r\n\t */\r\n\tAfterStep() {\r\n\t\t//this._endContactFoothold();\r\n\r\n\t\tif (this.state.ladder) {\r\n\t\t\tif (this.$ladder_pj) {\r\n\t\t\t\tconst upper = this.$ladder_pj.GetUpperLimit();\r\n\t\t\t\tconst lower =this.$ladder_pj.GetLowerLimit();\r\n\t\t\t\tconst translation = this.$ladder_pj.GetJointTranslation();\r\n\r\n\t\t\t\tif (this.state.ladder_move_dir > 0 && translation > upper) {//down\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.state.ladder_move_dir < 0 && translation < lower) {//up\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this.state.dropDown) {\r\n\t\t\t\tif (this.body.m_awakeFlag && this.foot_walk.m_awakeFlag) {\r\n\t\t\t\t\tthis.$foothold = this._foothold;//set or clear\r\n\t\t\t\t}\r\n\t\t\t\tif (!this._foothold && this._foot_contact_list.length) {//目前沒用，永遠不會被執行 ??\r\n\t\t\t\t\tlet max = this._foot_contact_list.pop();\r\n\t\t\t\t\tthis.$foothold = max.foothold;\r\n\t\t\t\t\tthis._foothold = max.foothold;\r\n\t\t\t\t\tthis._foot_at = max.position;\r\n\t\t\t\t\tthis._foothold_priority = max.priority;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.$foothold) {\r\n\t\t\t\t//this.body.SetAwake(false);\r\n\t\t\t\t//this.foot_walk.SetAwake(false);\r\n\r\n\t\t\t\tthis.state.jump = false;\r\n\t\t\t\tthis.state.jump_count = 0;\r\n\t\t\t\tif (this.$foothold == this._foothold) {\r\n\t\t\t\t\t//console.log(\"stable contact\");\r\n\t\t\t\t\t//debugger;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._foot_contact_list.length = 0;\r\n\r\n\t\t\t\tthis.state.jump = true;\r\n\t\t\t\tthis.state._begin_jump = false;\r\n\t\t\t\t\r\n\t\t\t\tif (!this._foothold) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//console.log(\"no stable contact\");\r\n\t\t\t\t\t//debugger;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tgetLayer() {\r\n\t\tlet layer = this.$foothold ? this.$foothold.layer : (this.prev_$fh ? this.prev_$fh.layer : (this.leave_$fh ? this.leave_$fh.layer : 5));\r\n\t\treturn this.state.ladder ? (layer + 1) : layer;\r\n\t}\r\n}\r\n\r\nclass PCharacter extends PCharacterBase {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tthis.chara = null;\r\n\t}\r\n\r\n\t/**\r\n\t * need set this.state.outOfControl = true\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tforceMove(moveX, moveY) {\r\n\t\t//TODO: calc move\r\n\t\tconst mass = this._getMass();\r\n\t\tconst move = new b2Vec2(moveX * mass, moveY * mass);\r\n\t\tthis.body.ApplyLinearImpulseToCenter(move);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t * @param {number} [kbTime=1000] - knockback time, unit is millisecond\r\n\t */\r\n\tknockback(moveX, moveY, kbTime = 1000) {\r\n\t\tconst front = this.state.front;\r\n\t\tlet fx, fy;\r\n\t\t\r\n\t\tfx = -moveX * front;\r\n\t\t//fy = this.state.jump ? moveY : -moveY;\r\n\t\tfy = -moveY;\r\n\r\n\t\tthis.forceMove(fx, fy);\r\n\t\tthis.state.knockback = kbTime;\r\n\t\tthis.state.outOfControl = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\t_create_anchor(world) {\r\n\t\tlet md = new b2MouseJointDef();\r\n\t\tmd.bodyA = world.ground.bodies[0];\r\n\t\tmd.bodyB = this.body;\r\n\t\tmd.target.Copy(this.getPosition());\r\n\t\tmd.maxForce = 1000 * this._getMass();\r\n\t\treturn world.CreateJoint(md);\r\n\t}\r\n\r\n\t/**\r\n\t * no anchor\r\n\t * experimental\r\n\t * @param {CharacterMoveElem} moveElem\r\n\t */\r\n\tmoveTo(moveElem) {\r\n\t\tconst body = this.body;\r\n\r\n\t\tif (moveElem.elapsed == 0) {\r\n\t\t\tbody.ConstantVelocityWorldCenter2(vx, vy);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst ALPHA = 0.7;\r\n\t\t\tconst ONE_MINUS_ALPHA = 1 - ALPHA;\r\n\t\t\tlet dx = moveElem.x - pos.x;\r\n\t\t\tlet dy = moveElem.y - pos.y;\r\n\t\t\tlet sx = dx / (moveElem.elapsed / $gv.FRAME_ELAPSED);//speed = pixel / second\r\n\t\t\tlet sy = dy / (moveElem.elapsed / $gv.FRAME_ELAPSED);\r\n\t\t\tlet oldVel = body.GetLinearVelocity();\r\n\r\n\t\t\tlet vx, vy;\r\n\r\n\t\t\tif (moveElem.pState.jump) {\r\n\t\t\t\tthis.setGravityScale(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setGravityScale(1);\r\n\t\t\t\t\r\n\t\t\t\tif (moveElem.pState.walk || sx) {\r\n\t\t\t\t\tthis.walker.EnableMotor(false);//this.$physics.walker.IsMotorEnabled() == true\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.walker.EnableMotor(true);//keep stop\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (sx) {\r\n\t\t\t\tif (moveElem.vx) {\r\n\t\t\t\t\tif (Math.sign(moveElem.vx) == Math.sign(sx)) {\r\n\t\t\t\t\t\tvx = oldVel.x * ONE_MINUS_ALPHA + moveElem.vx * ALPHA;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvx = oldVel.x * ONE_MINUS_ALPHA + sx * ALPHA;//修正座標\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvx = sx;//修正座標\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvx = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (sy) {\r\n\t\t\t\tif (moveElem.vy) {\r\n\t\t\t\t\tif (Math.sign(moveElem.vy) == Math.sign(sy)) {\r\n\t\t\t\t\t\tvy = oldVel.y * ONE_MINUS_ALPHA + moveElem.vy * ALPHA;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvy = oldVel.y * ONE_MINUS_ALPHA + sy * ALPHA;//修正座標\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvy = sy;//修正座標\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvy = 0;\r\n\t\t\t}\r\n\r\n\t\t\tbody.ConstantVelocityWorldCenter2(vx, vy);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\t/** @type {PPlayer[]} */\r\n\tvar PPlayer_instance_list = window.PPlayer_instance_list || [];\r\n\r\n\tif (PPlayer_instance_list) {\r\n\t\tfor (let pl of PPlayer_instance_list) {\r\n\t\t\tpl.__proto__ = PPlayer.prototype;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PPlayer extends PCharacter {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\tif (module.hot) {\r\n\t\t\tPPlayer_instance_list.push(this);\r\n\r\n\t\t\tconst super_destroy = super._destroy;\r\n\r\n\t\t\tthis._destroy = function () {\r\n\t\t\t\tsuper_destroy();\r\n\t\t\t\tPPlayer_instance_list.splice(PPlayer_instance_list.indexOf(this), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"x\", () => this.getPosition().x.toFixed(3) + \" * \" + $gv.CANVAS_SCALE + \" = \" + (this.getPosition().x * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"y\", () => this.getPosition().y.toFixed(3) + \" * \" + $gv.CANVAS_SCALE + \" = \" + (this.getPosition().y * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"jump\", () => this.state.jump);\r\n\t\twindow.SCREEN_PRINTLN(() => \"_drop\", () => this.state._drop);\r\n\t\twindow.SCREEN_PRINTLN(() => \"ddrop\", () => this.state.dropDown);\r\n\t\twindow.SCREEN_PRINTLN(() => \"$fh\", () => this.$foothold ? this.$foothold.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"$fh->c\", () => this.$foothold ? this.$foothold.chain.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"_fh\", () => this._foothold ? this._foothold.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"p$fh\", () => this.prev_$fh ? this.prev_$fh.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"leave_$fh\", () => this.leave_$fh ? this.leave_$fh.id : null);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"(jump && !$fh)\", () => this.state.jump && !this.$foothold);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"vel.x\", () => (this.body.m_linearVelocity.x * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"vel.y\", () => (this.body.m_linearVelocity.y * $gv.CANVAS_SCALE).toFixed(0));\r\n\t}\r\n\r\n\t/**\r\n\t * before world::step\r\n\t * @param {number} stamp\r\n\t */\r\n\tStep(stamp) {\r\n\t\tsuper.Step(stamp);\r\n\t\t\r\n\t\tif ($gv.input_keyDown['B'] == 1 && !$gv.mouse_dl) {\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y;\r\n\r\n\t\t\tthis.setPosition(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE, true);\r\n\t\t}\r\n\t\telse if ($gv.input_keyDown['B'] > 0 && $gv.mouse_dl) {\r\n\t\t\tconst center = $gv.m_viewRect.center;\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x - center.x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y - center.y;\r\n\r\n\t\t\tthis.body.SetLinearVelocity(new b2Vec2(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE));\r\n\t\t\tthis.foot_walk.SetLinearVelocity(new b2Vec2(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE));\r\n\t\t}\r\n\t\telse if ($gv.mouse_dm && $gv.mouse_dm % 12 == 1) {\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y;\r\n\t\t\tthis.setPosition(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE, true);\r\n\t\t}\r\n\t}\r\n\r\n\tget renderer() {\r\n\t\tdebugger\r\n\t\treturn this._$renderer;\r\n\t}\r\n\tset renderer(value) {\r\n\t\tthis._$renderer = value;\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\t/** @type {PRemoteCharacter[]} */\r\n\tvar PRemoteCharacter_instance_list = window.PRemoteCharacter_instance_list || [];\r\n\r\n\tif (PRemoteCharacter_instance_list) {\r\n\t\tfor (let pl of PRemoteCharacter_instance_list) {\r\n\t\t\tpl.__proto__ = PRemoteCharacter.prototype;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PRemoteCharacter extends PCharacter {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/** @type {b2MouseJoint} */\r\n\t\tthis._anchor = null;\r\n\r\n\t\tif (module.hot) {\r\n\t\t\tPRemoteCharacter_instance_list.push(this);\r\n\r\n\t\t\tconst super_destroy = super._destroy;\r\n\r\n\t\t\tthis._destroy = function () {\r\n\t\t\t\tsuper_destroy();\r\n\t\t\t\tPRemoteCharacter_instance_list.splice(PRemoteCharacter_instance_list.indexOf(this), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\r\n\t\tif (window.$io) {\r\n\t\t\tthis._anchor = this._create_anchor(world);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.moveTo = super.moveTo;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterMoveElem} moveElem\r\n\t */\r\n\tmoveTo(moveElem) {\r\n\t\t//if (this._anchor) {\r\n\t\t\tthis._anchor.m_targetA.x = moveElem.x;\r\n\t\t\tthis._anchor.m_targetA.y = moveElem.y;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\tsuper.moveTo(moveElem);\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\tmodule.hot.accept();\r\n}\r\n","﻿\r\n\r\nconst $failed_urls = [];\r\n\r\nconst $archive = {};\r\n\r\n\r\nwindow.character_emotion_list = [\"blink\", \"hit\", \"smile\", \"troubled\", \"cry\", \"angry\", \"bewildered\", \"stunned\",\r\n\t\"vomit\", \"oops\", \"cheers\", \"chu\", \"wink\", \"pain\", \"glitter\", \"despair\", \"love\", \"shine\", \"blaze\", \"hum\",\r\n\t\"bowing\", \"hot\", \"dam\", \"qBlue\"];\r\n\r\nwindow.character_action_list = [\"walk1\", \"walk2\", \"stand1\", \"stand2\", \"alert\", \"swingO1\", \"swingO2\", \"swingO3\", \"swingOF\", \"swingT1\",\r\n\t\"swingT2\", \"swingT3\", \"swingTF\", \"swingP1\", \"swingP2\", \"swingPF\", \"stabO1\", \"stabO2\", \"stabOF\", \"stabT1\",\r\n\t\"stabT2\", \"stabTF\", \"shoot1\", \"shoot2\", \"shootF\", \"proneStab\", \"prone\", \"heal\", \"fly\", \"jump\", \"sit\", \"ladder\",\r\n\t\"rope\"/*, \"dead\", \"ghostwalk\", \"ghoststand\", \"ghostjump\", \"ghostproneStab\", \"ghostladder\", \"ghostrope\", \"ghostfly\",\r\n\t\t\"ghostsit\"*/];\r\n\r\nexport class ItemCategoryInfo {\r\n\t/**\r\n\t * @param {string} id_prefix\r\n\t * @param {string} path\r\n\t * @param {boolean} isOnFace\r\n\t * @param {string} slot - property name\r\n\t * @param {string} categoryName\r\n\t */\r\n\tconstructor(id_prefix, imgDir, listPath, slot, categoryName, type = \"Equip\") {\r\n\t\tif (arguments.length !=5) {\r\n\t\t\talert(\"ItemCategoryInfo: \" + [...arguments].join(\",\"));\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tthis.id_prefix = id_prefix;\r\n\r\n\t\t/** data path */\r\n\t\tthis.path = imgDir;\r\n\r\n\t\t/** equip window */\r\n\t\tthis.slot = slot;\r\n\r\n\t\t/** item list file name */\r\n\t\tthis.listPath = listPath;\r\n\r\n\t\t/** display category name */\r\n\t\tthis.categoryName = categoryName;\r\n\r\n\t\t/** renderer */\r\n\t\tthis.fragmentType = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.dataDir = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconPath = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconRawPath = null;\r\n\t\t{\r\n\t\t\tlet dataDir, iconPath, iconRawPath;\r\n\r\n\t\t\tswitch (slot) {\r\n\t\t\t\tcase \"head\":\r\n\t\t\t\t\ticonPath = \"stand1/0/head\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/head\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"body\":\r\n\t\t\t\t\ticonPath = \"stand1/0/body\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/body\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"hair\":\r\n\t\t\t\t\ticonPath = \"stand1/0/hair\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/hair\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"face\":\r\n\t\t\t\t\ticonPath = \"blink/0/face\";\r\n\t\t\t\t\ticonRawPath = \"blink/0/face\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault://typeId: 0|1|2|3|4\r\n\t\t\t\t\ticonPath = \"info/icon\";\r\n\t\t\t\t\ticonRawPath = \"info/iconRaw\";\r\n\t\t\t}\r\n\r\n\t\t\tif (type == \"Equip\") {\r\n\t\t\t\tdataDir = `/Character/${imgDir + (imgDir ? \"/\" : \"\")}`;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: get item data dir\r\n\t\t\t\tconsole.error(\"未完成\");\r\n\t\t\t}\r\n\r\n\t\t\tObject.defineProperties(this, {\r\n\t\t\t\t'dataDir': {\r\n\t\t\t\t\tvalue: dataDir,\r\n\t\t\t\t},\r\n\t\t\t\t'iconPath': {\r\n\t\t\t\t\tvalue: iconPath,\r\n\t\t\t\t},\r\n\t\t\t\t'iconRawPath': {\r\n\t\t\t\t\tvalue: iconRawPath,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getDataPath(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tconst info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (id[0] == '0') {\r\n\t\t\treturn info.dataDir + id;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//TODO: get item data path\r\n\t\t\tthrow new Error(\"未完成\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconRawUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == '0') {\r\n\t\t\treturn $get.imageUrl(info.dataDir + id + \"/\" + info.iconRawPath);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == '0') {\r\n\t\t\treturn $get.imageUrl(info.dataDir + id + \"/\" + info.iconPath);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * load name and desc\r\n\t * @param {string} id\r\n\t * @returns {{name:string,desc:string}}\r\n\t */\r\n\tstatic async loadString(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet url = `/String/Eqp/Eqp/${info.path + (info.path ? \"/\" : \"\")}${Number(id)}`;\r\n\t\tlet data = await $get.data(url);\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - 4+ digit string\r\n\t * @returns {ItemCategoryInfo}\r\n\t */\r\n\tstatic get(id) {\r\n\t\tlet info;\r\n\r\n\t\tif (id == null || id == \"\") {\r\n\t\t\tdebugger;\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\r\n\t\tif (id.length == 4) {\r\n\t\t\tinfo = ItemCategoryInfo._info[id];\r\n\t\t\tif (info) {\r\n\t\t\t\treturn info;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 4)];\r\n\t\t\tif (info) {\r\n\t\t\t\treturn info;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (id.length == 6) {\r\n\t\t\t\t\tinfo = ItemCategoryInfo._info[id];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 6)];\r\n\t\t\t\t}\r\n\t\t\t\tif (info) {\r\n\t\t\t\t\treturn info;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.warn(\"unknow item type, itemId: \" + id);\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getTypeId() {\r\n\t\treturn Math.trunc(_id / 1000000);\r\n\t}\r\n\r\n\tstatic getCategory() {\r\n\t\treturn Math.trunc(_id / 10000);// % 100;// 0105 // 01 + 05 // type + category\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isItem(id) {\r\n\t\tlet type = Math.trunc(id / 1000000);//id.startsWith(\"00\");\r\n\t\treturn type != 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isEquip(id) {\r\n\t\tif (id == null || id == \"\") {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet _id = Number(id);\r\n\r\n\t\t//let cate = Number(id.length == 4 ? id : id.slice(0, 4));\r\n\t\t//return (cate >= \"0100\" && cate < \"0180\");\r\n\r\n\t\tlet cate = Math.trunc(_id / 10000);\r\n\t\tif (cate > 180 && cate < 2000) {\r\n\t\t\tconsole.warn(\"?? equip: \" + id);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\r\n\t\tlet type = Math.trunc(_id / 1000000);\r\n\r\n\t\treturn type == 1;\r\n\t}\r\n\r\n\t/**\r\n\t * 1~4 digit number\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic getSubCategory(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic isCashWeapon(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000) == 170;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} job\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getJobWeaponCategory(job) {\r\n\t\t//TODO: getJobWeaponCategory\r\n\t\tconsole.warn(\"getJobWeaponCategory: 未完成\");\r\n\t}\r\n}\r\nItemCategoryInfo.type = {\r\n\tEquip: \"Equip\",\r\n\tConsume: \"Consume\",\r\n\tEtc: \"Etc\",\r\n\tInstall: \"Install\",\r\n\tCash: \"Cash\"\r\n};\r\nItemCategoryInfo.typeName = {\r\n\t0: \"Equip\",\r\n\t1: \"Consume\",\r\n\t2: \"Etc\",\r\n\t3: \"Install\",\r\n\t4: \"Cash\"\r\n};\r\nItemCategoryInfo.typeId = {\r\n\tEquip: 0,\r\n\tConsume: 1,\r\n\tEtc: 2,\r\n\tInstall: 3,\r\n\tCash: 4,\r\n};\r\nItemCategoryInfo._info = {\r\n\t'0000': new ItemCategoryInfo(\"0000\", \"\",\t\t\t\"body\",\t\t\t\t\"body\",\t\t\t\"<body>\"),\r\n\t'0001': new ItemCategoryInfo(\"0001\", \"\",\t\t\t\"head\",\t\t\t\t\"head\",\t\t\t\"<head>\"),\r\n\r\n\t'0002': new ItemCategoryInfo(\"0002\", \"Face\",\t\t\"Face\",\t\t\t\t\"face\",\t\t\t\"臉型\"),\r\n\t'0003': new ItemCategoryInfo(\"0003\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\"),\r\n\t'0004': new ItemCategoryInfo(\"0004\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\"),\r\n\r\n\t'0100': new ItemCategoryInfo(\"0100\", \"Cap\",\t\t\t\"Cap\",\t\t\t\t\"cap\",\t\t\t\"帽子\"),\r\n\t'0101': new ItemCategoryInfo(\"0101\", \"Accessory\",\t\"accessoryFace\",\t\"accessoryFace\", \"臉飾\"),\r\n\t'0102': new ItemCategoryInfo(\"0102\", \"Accessory\",\t\"accessoryEyes\",\t\"accessoryEyes\", \"眼飾\"),\r\n\t'0103': new ItemCategoryInfo(\"0103\", \"Accessory\",\t\"accessoryEars\",\t\"accessoryEars\", \"耳環\"),\r\n\t'0104': new ItemCategoryInfo(\"0104\", \"Coat\",\t\t\"Coat\",\t\t\t\t\"coat\",\t\t\t\"上衣\"),\r\n\t'0105': new ItemCategoryInfo(\"0105\", \"Longcoat\",\t\"Longcoat\",\t\t\t\"longcoat\",\t\t\"套服\"),\r\n\t'0106': new ItemCategoryInfo(\"0106\", \"Pants\",\t\t\"Pants\",\t\t\t\"pants\",\t\t\"褲子\"),\r\n\t'0107': new ItemCategoryInfo(\"0107\", \"Shoes\",\t\t\"Shoes\",\t\t\t\"shoes\",\t\t\"鞋子\"),\r\n\t'0108': new ItemCategoryInfo(\"0108\", \"Glove\",\t\t\"Glove\",\t\t\t\"glove\",\t\t\"手套\"),\r\n\t'0109': new ItemCategoryInfo(\"0109\", \"Shield\",\t\t\"Shield\",\t\t\t\"shield\",\t\t\"盾牌\"),\r\n\t'0110': new ItemCategoryInfo(\"0110\", \"Cape\",\t\t\"Cape\",\t\t\t\t\"cape\",\t\t\t\"披風\"),\r\n\r\n\t\"0121\": new ItemCategoryInfo(\"0121\", \"Weapon\", \"閃亮克魯\", \"weapon\", \"閃亮克魯\"),\r\n\t\"0122\": new ItemCategoryInfo(\"0122\", \"Weapon\", \"靈魂射手\", \"weapon\", \"靈魂射手\"),\r\n\t\"0123\": new ItemCategoryInfo(\"0123\", \"Weapon\", \"魔劍\", \"weapon\", \"魔劍\"),\r\n\t\"0124\": new ItemCategoryInfo(\"0124\", \"Weapon\", \"能量劍\", \"weapon\", \"能量劍\"),\r\n\t\"0125\": new ItemCategoryInfo(\"0125\", \"Weapon\", \"幻獸棒\", \"weapon\", \"幻獸棒\"),\r\n\t\"0126\": new ItemCategoryInfo(\"0126\", \"Weapon\", \"ESP限制器\", \"weapon\", \"ESP限制器\"),\r\n\t\"0127\": new ItemCategoryInfo(\"0127\", \"Weapon\", \"鎖鏈\", \"weapon\", \"鎖鏈\"),\r\n\t\"0128\": new ItemCategoryInfo(\"0128\", \"Weapon\", \"魔力護腕\", \"weapon\", \"魔力護腕\"),\r\n\r\n\t\"0130\": new ItemCategoryInfo(\"0130\", \"Weapon\", \"單手劍\", \"weapon\", \"單手劍\"),\r\n\t\"0131\": new ItemCategoryInfo(\"0131\", \"Weapon\", \"單手斧\", \"weapon\", \"單手斧\"),\r\n\t\"0132\": new ItemCategoryInfo(\"0132\", \"Weapon\", \"單手錘\", \"weapon\", \"單手錘\"),\r\n\t\"0133\": new ItemCategoryInfo(\"0133\", \"Weapon\", \"短劍\", \"weapon\", \"短劍\"),\r\n\t\"0134\": new ItemCategoryInfo(\"0134\", \"Weapon\", \"雙刀\", \"weapon\", \"雙刀\"),\r\n\t\"013526\": new ItemCategoryInfo(\"013526\", \"Weapon\", \"靈魂之環\", \"weapon\", \"靈魂之環\"),\r\n\t\"013530\": new ItemCategoryInfo(\"013530\", \"Weapon\", \"控制器\", \"weapon\", \"控制器\"),\r\n\t\"0136\": new ItemCategoryInfo(\"0136\", \"Weapon\", \"手杖\", \"weapon\", \"手杖\"),\r\n\t\"0137\": new ItemCategoryInfo(\"0137\", \"Weapon\", \"短杖\", \"weapon\", \"短杖\"),\r\n\t\"0138\": new ItemCategoryInfo(\"0138\", \"Weapon\", \"長杖\", \"weapon\", \"長杖\"),\r\n\t\r\n\t\"0140\": new ItemCategoryInfo(\"0140\", \"Weapon\", \"雙手劍\", \"weapon\", \"雙手劍\"),\r\n\t\"0141\": new ItemCategoryInfo(\"0141\", \"Weapon\", \"雙手斧\", \"weapon\", \"雙手斧\"),\r\n\t\"0142\": new ItemCategoryInfo(\"0142\", \"Weapon\", \"雙手棍\", \"weapon\", \"雙手棍\"),\r\n\t\"0143\": new ItemCategoryInfo(\"0143\", \"Weapon\", \"槍\", \"weapon\", \"槍\"),\r\n\t\"0144\": new ItemCategoryInfo(\"0144\", \"Weapon\", \"矛\", \"weapon\", \"矛\"),\r\n\t\"0145\": new ItemCategoryInfo(\"0145\", \"Weapon\", \"弓\", \"weapon\", \"弓\"),\r\n\t\"0146\": new ItemCategoryInfo(\"0146\", \"Weapon\", \"弩\", \"weapon\", \"弩\"),\r\n\t\"0147\": new ItemCategoryInfo(\"0147\", \"Weapon\", \"拳套\", \"weapon\", \"拳套\"),\r\n\t\"0148\": new ItemCategoryInfo(\"0148\", \"Weapon\", \"指虎\", \"weapon\", \"指虎\"),\r\n\t\"0149\": new ItemCategoryInfo(\"0149\", \"Weapon\", \"火槍\", \"weapon\", \"火槍\"),\r\n\t\"0150\": new ItemCategoryInfo(\"0150\", \"Weapon\", \"鏟\", \"weapon\", \"鏟\"),\r\n\t\"0151\": new ItemCategoryInfo(\"0151\", \"Weapon\", \"鎬\", \"weapon\", \"鎬\"),\r\n\t\"0152\": new ItemCategoryInfo(\"0152\", \"Weapon\", \"雙弩槍\", \"weapon\", \"雙弩槍\"),\r\n\t\"0153\": new ItemCategoryInfo(\"0153\", \"Weapon\", \"加農砲\", \"weapon\", \"加農砲\"),\r\n\t\"0154\": new ItemCategoryInfo(\"0154\", \"Weapon\", \"太刀\", \"weapon\", \"太刀\"),\r\n\t\"0155\": new ItemCategoryInfo(\"0155\", \"Weapon\", \"扇子\", \"weapon\", \"扇子\"),\r\n\t\"0156\": new ItemCategoryInfo(\"0156\", \"Weapon\", \"琉\", \"weapon\", \"琉\"),\r\n\t\"0157\": new ItemCategoryInfo(\"0157\", \"Weapon\", \"璃\", \"weapon\", \"璃\"),\r\n\t\"0158\": new ItemCategoryInfo(\"0158\", \"Weapon\", \"重拳槍\", \"weapon\", \"重拳槍\"),\r\n\t\"0170\": new ItemCategoryInfo(\"0170\", \"Weapon\", \"0170\", \"weapon\", \"點裝武器\"),\r\n};\r\nItemCategoryInfo._categoryList = (function (info_map) {\r\n\tlet list = [];\r\n\tlet set = new Set();\r\n\tfor (let i in info_map) {\r\n\t\tlet cat = info_map[i];\r\n\t\tlet key = cat.categoryName || cat.listPath;\r\n\r\n\t\tif (!set.has(key)) {\r\n\t\t\tset.add(key);\r\n\r\n\t\t\tlist.push({\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalue: i,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn list;\r\n})(ItemCategoryInfo._info);\r\n\r\nexport class ResourceManager {\r\n\tstatic isEquipExist(id, cateInfo) {\r\n\t\tconst dp = cateInfo.listPath;\r\n\t\tconst es = ResourceManager.equip_map[dp];\r\n\t\treturn !es || es.has(id);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic async loadArchive(url) {\r\n\t\t$setValue($archive, \"/\", JSON.parse(await ResourceManager.get(url)));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic get(url) {\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\txhr.open(\"GET\", url, true);\r\n\r\n\t\t\txhr.timeout = 10 * 60 * 1000;//20000;\r\n\r\n\t\t\txhr.onload = function () {\r\n\t\t\t\tif (this.status == 404 || this.status == 500) {\r\n\t\t\t\t\t$failed_urls.push(url);\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\t//resolve(null);\r\n\t\t\t\t\treject(this.status + \": \" + url);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 200) {\r\n\t\t\t\t\tresolve(this.responseText);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 304) {\r\n\t\t\t\t\tdebugger\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\txhr.ontimeout = function (e) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\t// XMLHttpRequest 超时。在此做某事。\r\n\t\t\t\t//resolve(null);\r\n\t\t\t\treject(\"timeout: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.onabort = function (e) {\r\n\t\t\t\treject(\"abort: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.send();\r\n\t\t});\r\n\t}\r\n\r\n\tstatic get root_path() {\r\n\t\treturn window.$ROOT_PATH;\r\n\t}\r\n\r\n\tstatic get archive() {\r\n\t\treturn $archive;\r\n\t}\r\n\r\n\tstatic get failed_urls() {\r\n\t\treturn $failed_urls;\r\n\t}\r\n}\r\nwindow.$ResourceManager = ResourceManager;\r\n\r\n/**\r\n * @param {{}} obj\r\n * @param {string} path\r\n * @param {any} value\r\n */\r\nfunction $setValue(obj, path, value) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key] == null) {\r\n\t\t\ttarget[key] = {};\r\n\t\t}\r\n\t\ttarget = target[key];\r\n\t}\r\n\tlet origin_value = target[ps[lastIndex]];\r\n\tif (origin_value instanceof Promise) {\r\n\t\tdelete target[ps[lastIndex]];\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n\telse if (origin_value && typeof origin_value == \"object\") {\r\n\t\t//if (value instanceof Promise) {\r\n\t\t//\tdebugger;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t\tfor (let key in value) {\r\n\t\t\t\torigin_value[key] = value[key] || origin_value[key];\r\n\t\t\t}\r\n\t\t//}\r\n\t}\r\n\telse if (typeof value != \"undefined\") {\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n}\r\nfunction $getValue(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key]) {\r\n\t\t\t\ttarget = target[key];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\treturn target[ps[lastIndex]];\r\n}\r\n\r\nconst symbol_isPack = Symbol(\"$pack\");\r\n\r\nconst url_startsWith_protocol = RegExp.prototype.test.bind(/^(([a-zA-Z^\\:]+)(\\:.*)$|\\/\\/)/);\r\nfunction _setValueByPath(path, value, is_pack) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn;\r\n\t}\r\n\telse if (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\tif (is_pack) {\r\n\t\t\tvalue[symbol_isPack] = true;\r\n\t\t}\r\n\t\tpath = path.slice(window.$ROOT_PATH.length);\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n\telse {\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n}\r\nfunction _getValueFromArchiveByPath(path, value) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tif (_path) {\r\n\t\treturn $getValue($archive, _path);\r\n\t}\r\n\treturn undefined;\r\n}\r\nfunction _getDataPathByUrl(path) {\r\n\tif (!url_startsWith_protocol(path)) {\r\n\t\tif (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\t\treturn path.slice(window.$ROOT_PATH.length);\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @returns {Promise<any>|any}\r\n */\r\nfunction $getValueAsync(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\t\r\n\t// try get value sync\r\n\tlet value = $getValue(obj, path);\r\n\t\r\n\t// if value exist\r\n\tif (value) {\r\n\t\tif (value instanceof Promise) {\r\n\t\t\t// ??\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait value;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\telse {// if value not exist, try await parent node\r\n\t\tlet ps = path.split(\"/\");\r\n\t\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\t\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\t\tlet key = ps[i];\r\n\t\t\tif (target[key] instanceof Promise) {\r\n\t\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\t\tawait target[key];\r\n\t\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (target[key]) {\r\n\t\t\t\t\ttarget = target[key];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet result = target[ps[lastIndex]];\r\n\t\tif (result instanceof Promise) {\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait result;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} url\r\n * @returns {Promise<any>}\r\n */\r\nexport let $get = function $get(url) {\r\n\treturn ResourceManager.get(url);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.pack = async function $get_pack(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj && obj[symbol_isPack]) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (obj && !obj[symbol_isPack]) {\r\n\t\t\t\tthrow new TypeError(\"data: \" + path);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst url = $get.packUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, true);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, true);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.packSync = function get_packSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.data = async function $get_data(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.dataUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {any}\r\n */\r\n$get.dataSync = function get_dataSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.list = async function $get_list(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.listUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.listSync = function $get_listSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn Object.keys(obj);\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.dataUrl = function $get_dataUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"data\")) {\r\n\t\treturn `${window.$ROOT_PATH}data${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game data: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.packUrl = function $get_packUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"pack\")) {\r\n\t\treturn `${window.$ROOT_PATH}pack${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game pack: \" + path);\r\n}\r\n$get.listUrl = function $get_listUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"ls\")) {\r\n\t\treturn `${window.$ROOT_PATH}ls${path}.json`;\r\n\t}\r\n\tthrow new Error(path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.imageUrl = function $get_imagesUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"images\")) {\r\n\t\treturn `${window.$ROOT_PATH}images${path}.png`;\r\n\t}\r\n\tthrow new Error(\"Not game images: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundMp3Url = function $get_soundMp3Url(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.mp3`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundWavUrl = function $get_soundWavUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.wav`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.assetUrl = function $get_assetUrl(path) {\r\n\treturn `${window.$ROOT_PATH}${path}`;\r\n}\r\n$get.asset = function $get_asset(path) {\r\n\treturn $get($get.assetUrl(path));\r\n}\r\n\r\nwindow.$get = $get;\r\n\r\n\r\nexport class ItemAttrNormalize {\r\n\tstatic head(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic body(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic Face(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 4 ? 1 : 0;\r\n\t}\r\n\tstatic Hair(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 2 || g == 4 || g == 7 ? 1 : 0;\r\n\t}\r\n\tstatic Cap(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryFace(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEyes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEars(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Coat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Longcoat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Pants(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shoes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Glove(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shield(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Cape(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic _equip(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 0 ? 0 : (g == 1 ? 1 : 2);\r\n\t}\r\n}\r\n\r\nconst regexp_getHairStyleID = /(\\d{4,7})\\d$/;\r\nconst regexp_getFaceStyleID = /(\\d{2,5})\\d(\\d{2})$/;\r\n\r\nconst regexp_getHairColor = /\\d{4,7}(\\d)$/;\r\nconst regexp_getFaceColor = /\\d{2,5}(\\d)\\d{2}$/;\r\n\r\nexport class CharacterRenderConfig {\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumHairColor(style) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i;\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumFaceColor(style) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i + m[2];\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorHairID(style, color) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tlet id = m[1] + (color % 10);\r\n\t\treturn id;\r\n\t}\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorFaceID(style, color) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tlet id = m[1] + (color % 10) + m[2];\r\n\t\treturn id;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHairStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorHairID(id_1, 0) == CharacterRenderConfig.getColorHairID(id_2, 0);\r\n\t}\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFaceStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorFaceID(id_1, 0) == CharacterRenderConfig.getColorFaceID(id_2, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getHairColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getHairColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getFaceColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getFaceColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar _external_data = {\r\n\t\"requiredJobs\": [\r\n\t\t\"Beginner\"\r\n\t],\r\n\t\"requiredLevel\": 0,\r\n\t\"isCash\": true,\r\n\t\"name\": \"Blue Beanie\",\r\n\t\"desc\": null,\r\n\t\"id\": 1000000,\r\n\t\"requiredGender\": 0,\r\n\t\"typeInfo\": {\r\n\t\t\"overallCategory\": \"Equip\",\r\n\t\t\"category\": \"Armor\",\r\n\t\t\"subCategory\": \"Hat\"\r\n\t}\r\n};\r\n\r\nvar ItemTypeInfo = {\r\n\t\"Equip\": {\r\n\t\t\"Hat\": \"Cap\",\r\n\t\t\"Cape\": \"Cape\",\r\n\t\t\"Top\": \"Coat\",\r\n\t\t\"Overall\": \"Longcoat\",\r\n\t\t\"Glove\": \"Glove\",\r\n\t\t\"Bottom\": \"Pants\",\r\n\r\n\t\t\"Shield\": \"Shield\",\r\n\t\t\"Shoes\": \"Shoes\",\r\n\t\t\"Eye Decoration\": \"accessoryEyes\",\r\n\t\t\"Earrings\": \"accessoryEars\",\r\n\t\t//\"Ring\": \"\",\r\n\r\n\t\t//\"Pendant\": \"\",\r\n\t\t\"Face Accessory\": \"accessoryFace\",\r\n\t\t//\"Belt\": \"\",\r\n\t\t//\"Medal\": \"\",\r\n\t\t//\"Shoulder Accessory\": \"\",\r\n\t\t//\"Badge\": \"\",\r\n\r\n\t\t//\"Dragon Equipment\": \"\",\r\n\t\t//\"Mechanic Equipment\": \"\",\r\n\t\t//\"Pet Equipment\": \"\",\r\n\t\t//\"Android\": \"\",\r\n\t\t//\"Mechanical Heart\": \"\",\r\n\t\t//\"Bits\": \"\",\r\n\r\n\t\t\"Face\": \"Face\",\r\n\t\t\"Hair\": \"Hair\",\r\n\t},\r\n};\r\n\r\nResourceManager.external = {\r\n\tequip: {\r\n\t},\r\n};\r\n\r\nResourceManager.equip_map = {\r\n};\r\n\r\nfor (let i in ItemTypeInfo.Equip) {\r\n\tlet cate = ItemTypeInfo.Equip[i];\r\n\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 9; ++i) {\r\n\tlet cate = \"Face\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 8; ++i) {\r\n\tlet cate = \"Hair\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\n\r\nasync function load_external_resource(url) {\r\n\turl = url || \"/items.json\";\r\n\tlet raw;\r\n\r\n\ttry {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get.asset(\"equip.json\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\tthrow Error(\"'/equip' is empty\");\r\n\t\t}\r\n\t}\r\n\tcatch (ex) {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get(\"//labs.maplestory.io/api/gms/latest/item/category/equip\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < raw.length; ++i) {\r\n\t\tconst item = raw[i];\r\n\t\tconst id = String(item.id).padStart(8, \"0\");\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!(item.typeInfo && ItemTypeInfo[item.typeInfo.overallCategory])) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet clz = item.typeInfo.overallCategory.toLowerCase();\r\n\t\t\tlet cate = ItemTypeInfo[item.typeInfo.overallCategory][item.typeInfo.subCategory];\r\n\t\t\tif (!cate) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Face\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getFaceColor(id);\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Hair\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getHairColor(id);\r\n\t\t\t}\r\n\r\n\t\t\tlet it = {\r\n\t\t\t\tid: id,\r\n\t\t\t\tname: item.name,\r\n\t\t\t\tdesc: item.desc,\r\n\t\t\t\tcash: item.isCash ? 1 : 0,\r\n\t\t\t\ticon: {\r\n\t\t\t\t\t\"\": `//labs.maplestory.io/api/gms/latest/item/${item.id}/icon`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tResourceManager.external[clz][cate].push(it);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(\"external resource: id(\" + id + \")\");\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction update_external_equip_list() {\r\n\tconst url = \"https://labs.maplestory.io/api/gms/latest/item/category/equip\";\r\n\tload_external_resource(url).then(() => {\r\n\t\t_concat_external_resource(category, origin_data);\r\n\t\tconcat_external_resource = _concat_external_resource;\r\n\t\tconsole.log(\"done: update_external_equip_list\");\r\n\t});\r\n}\r\n\r\nlet external_resource_promise = load_external_resource();\r\n\r\nwindow.concat_external_resource = _concat_external_resource_p;\r\n\r\nwindow.trigger_update_external_equip_list = function () {\r\n\texternal_resource_promise = load_external_resource();\r\n\twindow.concat_external_resource = _concat_external_resource_p;\r\n}\r\n\r\nasync function _concat_external_resource_p(category, origin_data) {\r\n\tawait external_resource_promise;\r\n\t_concat_external_resource(category, origin_data);\r\n\tconcat_external_resource = _concat_external_resource;\r\n}\r\n\r\nfunction _concat_external_resource(category, origin_data) {\r\n\ttry {\r\n\t\tconst list = ResourceManager.external.equip[category];\r\n\t\tif (!list) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet id_map = ResourceManager.equip_map[category];\r\n\r\n\t\tif (!id_map) {\r\n\t\t\tid_map = new Map();\r\n\t\t\t\r\n\t\t\torigin_data.forEach(item => {\r\n\t\t\t\tid_map.set(item.id, item);\r\n\t\t\t});\r\n\r\n\t\t\tResourceManager.equip_map[category] = id_map;\r\n\t\t}\r\n\r\n\t\tlist.forEach((item) => {\r\n\t\t\tlet id = item.id;\r\n\t\t\tif (!id_map.has(id)) {\r\n\t\t\t\titem.$foreign = true;\r\n\t\t\t\torigin_data.push(item);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet ori_item = id_map.get(id);\r\n\t\t\t\tori_item._name = item.name || \"\";\r\n\t\t\t\tori_item._desc = item.desc || \"\";\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcatch (ex) {\r\n\t\tconsole.error(ex);\r\n\t\tdebugger;\r\n\t}\r\n}\r\n\r\nwindow.load_extern_item_data = async function (id) {\r\n\tlet _raw = JSON.parse(await $get(`//labs.maplestory.io/api/gms/latest/item/${id}`));\r\n\tlet raw = {};\r\n\r\n\tlet default_ = _raw.frameBooks.default ? _raw.frameBooks.default.frames[0]:null;\r\n\r\n\tfor (let i in _raw.frameBooks) {\r\n\t\tlet _act = _raw.frameBooks[i];\r\n\t\tlet act = [];\r\n\r\n\t\tfor (let j = 0; j < _act.frames.length; ++j) {\r\n\t\t\tlet frame = _act.frames[j] || default_;\r\n\t\t\tif (!frame || !frame.effects) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet _frags = frame.effects;\r\n\t\t\tlet frags = {};\r\n\t\t\tfor (let k in _frags) {\r\n\t\t\t\tlet _frag = _frags[k];\r\n\t\t\t\tif (_frag.image) {\r\n\t\t\t\t\tfrags[k] = {\r\n\t\t\t\t\t\t\"\": \"data:image/png;base64,\" + _frag.image,\r\n\t\t\t\t\t\t\"origin\": _frag.originOrZero || _frag.origin || _frag.center,\r\n\t\t\t\t\t\t\"map\": _frag.mapOffset,\r\n\t\t\t\t\t\t\"z\": _frag.position\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tact[j] = frags;\r\n\t\t}\r\n\r\n\t\traw[i] = act;\r\n\t}\r\n\r\n\traw.info = {\r\n\t\tislot: _raw.metaInfo.equip.islot,\r\n\t\tvslot: _raw.metaInfo.equip.vslot,\r\n\t\ticon: _raw.metaInfo.icon ? (\"data:image/png;base64,\" + _raw.metaInfo.icon.iconRaw) : \"\",\r\n\t\tcash: (_raw.metaInfo.cash && _raw.metaInfo.cash.cash) ? 1 : 0,\r\n\t};\r\n\r\n\treturn raw;\r\n}\r\n","﻿\r\nimport { IRenderer } from './IRenderer.js';\r\nimport { PPlayer } from './Physics/PPlayer';\r\n\r\n/**\r\n * Game object\r\n */\r\nexport class SceneObject {\r\n\tconstructor() {\r\n\t\t/** @type {string|number} */\r\n\t\tthis.$objectid = null;\t// playerName or objectID; ?? null if not in scene\r\n\r\n\t\t/** @type {number} - layer id */\r\n\t\tthis.$layer = null;\t//maybe override\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = null;\r\n\t\tObject.defineProperty(this, \"$physics\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: false,\r\n\t\t\twritable: true,\r\n\t\t\tvalue: null,\r\n\t\t});\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\t\r\n\t/** create physics, load resource, ... */\r\n\tcreate() {\r\n\t}\r\n\t/** destroy physics, ... */\r\n\tdestroy() {\r\n\t}\r\n\t\r\n\tset enablePhysics(value) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.$physics.enable = value;\r\n\t\t\tthis.$physics.state.freeze = !value;\r\n\t\t}\r\n\t}\r\n\tget enablePhysics() {\r\n\t\tif (this.$physics) {\r\n\t\t\treturn this.$physics.enable;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t_applyState() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tthis.renderer.render(renderer);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tconsole.log(this.$objectid + \" 被 \" + chara.$objectid + \" 攻擊，減少 \" + damage + \" HP\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * if (chara == null) ??\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} name\r\n\t */\r\n\t__drawName(renderer, name) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst crr = this.renderer;\r\n\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\tctx.textAlign = \"start\";\r\n\r\n\t\tconst r = 2, h = 12;\r\n\t\tconst w = ctx.measureText(name).width + 3;\r\n\t\tconst x = Math.trunc(crr.x/* + crr.tx*/) - w * 0.5;//TODO: crr.tx and crr.ty ??\r\n\t\tconst y = Math.trunc(crr.y/* + crr.ty*/);\r\n\r\n\t\tconst left = x + r;\r\n\t\tconst _left = x;\r\n\t\tconst top = y;\r\n\t\tconst _top = y + r;\r\n\t\tconst _right = x + w;\r\n\t\tconst right = _right + r;\r\n\t\tconst bottom = y + r + h + r;\r\n\t\tconst _bottom = y + r + h;\r\n\r\n\t\tctx.fillStyle = \"rgba(0,0,0,0.7)\";\r\n\t\tctx.strokeStyle = \"rgba(0,0,0,0.7)\";\r\n\t\tctx.beginPath();\r\n\t\t{\r\n\t\t\tctx.moveTo(left, top);\r\n\r\n\t\t\tctx.lineTo(_right, top);\r\n\t\t\tctx.arcTo(right, top, right, _top, r);\r\n\r\n\t\t\tctx.lineTo(right, _bottom);\r\n\t\t\tctx.arcTo(right, bottom, _right, bottom, r);\r\n\r\n\t\t\tctx.lineTo(left, bottom);\r\n\t\t\tctx.arcTo(_left, bottom, _left, _bottom, r);\r\n\r\n\t\t\tctx.lineTo(_left, _top);\r\n\t\t\tctx.arcTo(_left, top, left, top, r);\r\n\t\t}\r\n\t\tctx.fill();\r\n\r\n\t\tif (0) {//inner\r\n\t\t\tctx.fillStyle = \"yellow\";\r\n\t\t\tctx.strokeStyle = \"yellow\";\r\n\t\t\tctx.beginPath();\r\n\t\t\t{\r\n\t\t\t\tctx.moveTo(left, _top);\r\n\r\n\t\t\t\tctx.lineTo(_right, _top);\r\n\r\n\t\t\t\tctx.lineTo(_right, _bottom);\r\n\r\n\t\t\t\tctx.lineTo(left, _bottom);\r\n\r\n\t\t\t\tctx.closePath();\r\n\t\t\t}\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t\tctx.fillStyle = \"white\";\r\n\t\tctx.strokeStyle = \"white\";\r\n\t\tctx.fillText(name, left, (top + bottom) * 0.5);\r\n\t}\r\n}\r\n\r\n\r\n","﻿\r\nconst box2d = require(\"../../Box2D/build/Box2D/Box2D/Box2D.js\");\r\n\r\nconst { FilterHelper } = require(\"./Filter.js\");\r\n\r\nconst {\r\n\tb2Vec2,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact, b2Manifold, b2ContactImpulse,\r\n\tb2ContactListener\r\n} = box2d;\r\n\r\n\r\nwindow.$box2d = box2d;\r\n\r\nlet b2Vec2_temp = new b2Vec2();\r\n\r\n/** @type {string} */\r\nb2Body.prototype.$type = null;\r\n\r\nb2Body.prototype.Step = function (stamp) {\r\n\tif (this._on_step) {\r\n\t\tfor (let fn of this._on_step) {\r\n\t\t\tfn(stamp);\r\n\t\t}\r\n\t}\r\n}\r\nb2Body.prototype.AfterStep = function (stamp) {\r\n\tif (this._on_after_step) {\r\n\t\tfor (let fn of this._on_after_step) {\r\n\t\t\tfn(stamp);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {function():void} func\r\n */\r\nb2Body.prototype.addStep = function (func) {\r\n\tthis._on_step = this._on_step || [];\r\n\tthis._on_step.push(func);\r\n}\r\n\r\n/**\r\n * @param {function():void} func\r\n */\r\nb2Body.prototype.addAfterStep = function (func) {\r\n\tthis._on_after_step = this._on_after_step || [];\r\n\tthis._on_after_step.push(func);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.SetLinearVelocity2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.SetLinearVelocity(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.ApplyForceToCenter2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.ApplyForceToCenter(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.ApplyLinearImpulseToCenter2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.ApplyLinearImpulseToCenter(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVel)快速加速到'指定速度'(desiredVel)\r\n * @param {b2Vec2} desiredVel\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.Acceleration = function (desiredVel, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, b2Vec2_temp);\r\n\tlet m = this.GetMass();\r\n\tlet ix = m * velChange.x;\r\n\tlet iy = m * velChange.y;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(ix, iy);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVelX)快速加速到'指定速度'(desiredVel)\r\n * @param {number} desiredVelX\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.AccelerationX = function (desiredVelX, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChangeX = desiredVelX - sourceVel.x;\r\n\tlet m = this.GetMass();\r\n\tlet ix = m * velChangeX;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(ix, 0);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVelY)快速加速到'指定速度'(desiredVel)\r\n * @param {number} desiredVelY\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.AccelerationY = function (desiredVelY, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChangeY = desiredVelY - sourceVel.y;\r\n\tlet m = this.GetMass();\r\n\tlet iy = m * velChangeY;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(0, iy);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * 等速度運動\r\n * @param {b2Vec2} desiredVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocity = function (desiredVel, point) {\r\n\tthis.Acceleration(desiredVel, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * @param {number} desiredVelX\r\n * @param {number} desiredVelY\r\n * @param {number} pointX\r\n * @param {number} pointY\r\n */\r\nb2Body.prototype.ConstantVelocity2 = function (desiredVelX, desiredVelY, pointX, pointY) {\r\n\tconst desiredVel = new b2Vec2(desiredVelX, desiredVelY);\r\n\tconst point = new b2Vec2(pointX, pointY);\r\n\r\n\tconst sourceVel = this.GetLinearVelocity();\r\n\tconst m = this.GetMass();\r\n\r\n\tlet impulse = new b2Vec2();\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, impulse);\r\n\timpulse.x = m * velChange.x;\r\n\timpulse.y = m * velChange.y;\r\n\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * @param {number} desiredVelX\r\n * @param {number} desiredVelY\r\n */\r\nb2Body.prototype.ConstantVelocityWorldCenter2 = function (desiredVelX, desiredVelY) {\r\n\tconst desiredVel = new b2Vec2(desiredVelX, desiredVelY);\r\n\r\n\tconst sourceVel = this.GetLinearVelocity();\r\n\tconst m = this.GetMass();\r\n\r\n\tlet impulse = new b2Vec2();\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, impulse);\r\n\timpulse.x = m * velChange.x;\r\n\timpulse.y = m * velChange.y;\r\n\r\n\tthis.ApplyLinearImpulseToCenter(impulse, true);\r\n}\r\n\r\n/**\r\n * 等速度運動 X\r\n * @param{number} desiredVelX\r\n * @param{b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocityX = function (desiredVelX, point) {\r\n\tthis.AccelerationX(desiredVelX, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * 等速度運動 Y\r\n * @param {number} desiredVelY\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocityY = function (desiredVelY, point) {\r\n\tthis.AccelerationY(desiredVelY, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.beginContact = function (contact, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.endContact = function (contact, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Manifold} oldManifold\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.preSolve = function (contact, oldManifold, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2ContactImpulse} impulse\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.postSolve = function (contact, impulse, fa, fb) {\r\n}\r\n\r\n/** @returns {string} */\r\nb2Fixture.prototype.getOwnerID = function () {\r\n\tlet host = this.GetUserData();\r\n\tif (host && host.owner) {\r\n\t\treturn host.owner.id;\r\n\t}\r\n}\r\n\r\nclass FixtureContactListener {\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tbeginContact (contact, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tendContact (contact, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tpreSolve (contact, oldManifold, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2ContactImpulse} impulse\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tpostSolve (contact, impulse, fa, fb) {\r\n\t}\r\n}\r\n\r\n\r\n\r\nmodule.exports = Object.assign(box2d, {\r\n\tFixtureContactListener, FilterHelper\r\n});\r\n","﻿\r\nimport { b2Filter } from \"../../Box2D/build/Box2D/Box2D/Dynamics/b2Fixture\";\r\nimport { b2ContactFilter } from \"../../Box2D/build/Box2D/Box2D/Box2D\";\r\n\r\n\r\n/** @type {{[string]:FilterHelper}} */\r\nlet filter_preset = {\r\n};\r\n\r\nlet next_category = 1;\r\n\r\nexport class FilterHelper extends b2Filter {\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\tignore(categoryName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.maskBits = (this.maskBits & ~preset.categoryBits) >>> 0;\r\n\r\n\t\tpreset.maskBits = (preset.maskBits & ~this.categoryBits) >>> 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\taddCategory(categoryName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.categoryBits = this.categoryBits | preset.categoryBits;\r\n\t}\r\n\r\n\t/**\r\n\t * @template T\r\n\t * @param {T extends keyof filter_preset} categoryName\r\n\t * @param {string} debugName\r\n\t */\r\n\tstatic get(categoryName, debugName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\treturn filter_preset.s_default;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (debugName) {\r\n\t\t\tlet debugCategory = filter_preset[\"s_\" + debugName];\r\n\t\t\tconsole.warn(\"filter: \" + debugName + \"%o\", debugCategory);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn preset;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\tstatic registerCategory(categoryName) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (filter_preset[\"s_\" + categoryName]) {\r\n\t\t\t\tlet msg = \"exist filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (next_category > 0x80000000) {\r\n\t\t\t\tlet msg = \"no empty filter preset\";\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName] = new FilterHelper();\r\n\r\n\t\tpreset.groupIndex = 0;\r\n\t\tpreset.categoryBits = next_category;\r\n\t\tpreset.maskBits = 0xFFFFFFFF;//all\r\n\r\n\t\tpreset.name = categoryName;\r\n\r\n\t\tnext_category = next_category << 1;\r\n\r\n\t\treturn preset;\r\n\t}\r\n\r\n\tstatic get next_category() {\r\n\t\treturn filter_preset;\r\n\t}\r\n\tstatic get filter_preset() {\r\n\t\treturn filter_preset;\r\n\t}\r\n}\r\n\r\nconst filter_table = [\r\n/*                 default  body  foothold  foot  bullet  pvp_bullet  mob  mob_bullet  portal  ladder  map_obj  map_border */\r\n/* default */    [ 1,       1,    1,        1,    1,      1,          1,   1,          1,      1,      1,       1,     ],\r\n/* body */       [ 1,       0,    0,        0,    0,      1,          1,   1,          0,      1,      1,       1,     ],\r\n/* foothold */   [ 1,       0,    0,        1,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* foot */       [ 1,       0,    1,        0,    0,      0,          0,   0,          1,      0,      0,       1,     ],\r\n/* bullet */     [ 1,       0,    0,        0,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/* pvp_bullet */ [ 1,       1,    0,        0,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/* mob */        [ 1,       1,    0,        0,    1,      1,          0,   0,          0,      0,      0,       0,     ],\r\n/* mob_bullet */ [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* portal */     [ 1,       0,    0,        1,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* ladder */     [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* map_obj */    [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* map_border */ [ 1,       1,    0,        1,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/*  */\r\n];\r\n\r\n(function init() {\r\n\tlet filter_list = [\r\n\t\tFilterHelper.registerCategory(\"default\"),\r\n\t\tFilterHelper.registerCategory(\"body\"),\r\n\t\tFilterHelper.registerCategory(\"foothold\"),\r\n\t\tFilterHelper.registerCategory(\"foot\"),\r\n\t\tFilterHelper.registerCategory(\"bullet\"),\r\n\t\tFilterHelper.registerCategory(\"pvp_bullet\"),\r\n\t\tFilterHelper.registerCategory(\"mob\"),\r\n\t\tFilterHelper.registerCategory(\"mob_bullet\"),\r\n\t\tFilterHelper.registerCategory(\"portal\"),\r\n\t\tFilterHelper.registerCategory(\"ladder\"),\r\n\t\tFilterHelper.registerCategory(\"map_obj\"),\r\n\t\tFilterHelper.registerCategory(\"map_border\"),\r\n\t];\r\n\r\n\tfor (let i = 0; i < filter_table.length; ++i) {\r\n\t\tfor (let j = 0; j < filter_table[i].length; ++j) {\r\n\t\t\tif (!filter_table[i][j]) {\r\n\t\t\t\tfilter_list[i].maskBits = (filter_list[i].maskBits & ~(1 << j)) >>> 0;//uint32\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n\r\n(function test() {\r\n\tlet contactFilter = new b2ContactFilter();\r\n\t\r\n\tfunction Fixture(filterName) {\r\n\t\treturn {\r\n\t\t\tGetFilterData: () => FilterHelper.get(filterName),\r\n\t\t\tGetBody: () => { return {\r\n\t\t\t\tGetType: () => 2,\r\n\t\t\t\tShouldCollideConnected: () => true,\r\n\t\t\t} },\r\n\t\t};\r\n\t}\r\n\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"body\"), Fixture(\"ladder\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"ladder\"), Fixture(\"body\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"foot\"), Fixture(\"portal\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"portal\"), Fixture(\"foot\"))) {\r\n\t\tdebugger;\r\n\t}\r\n})();\r\n\r\n","﻿\r\nimport {\r\n\tb2Vec2, b2AABB,\r\n\tb2World,\r\n\tb2Body,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2EdgeShape, b2PolygonShape, b2CircleShape,\r\n\tb2MouseJointDef,\r\n\tb2ContactListener, b2Contact,\r\n\tb2ParticleSystemDef, b2ParticleSystem, b2ParticleFlag, b2ParticleGroupDef\r\n} from \"./Physics.js\";\r\n\r\nimport DebugDraw from \"./DebugDraw.js\";\r\nimport { Ground } from \"./Ground.js\";\r\nimport { LadderRope, MapLadderRopeLoader } from \"./LadderRope.js\";\r\nimport { PPlayer, PRemoteCharacter } from \"./PPlayer.js\";\r\nimport { PMob } from \"./PMob.js\";\r\n\r\nimport { CharacterAnimationBase } from \"../Renderer/CharacterRenderer\";\r\n\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nwindow.$gravityAcc = 2000;\r\n\r\nwindow.$positionIterations = 3;\r\nwindow.$velocityIterations = 8;\r\nwindow.$particleIterations = 1;\r\n\r\nwindow.$particleRadius = 10;//unit is pixel\r\n\r\nexport const GRAVITY = new b2Vec2(0, window.$gravityAcc / $gv.CANVAS_SCALE);\r\n\r\n\r\nclass ContactListener extends b2ContactListener {\r\n\t/** @param {b2Contact} contact */\r\n\tBeginContact(contact) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.beginContact.call(fa.m_userData, contact, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.beginContact.call(fb.m_userData, contact, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/** @param {b2Contact} contact */\r\n\tEndContact(contact) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.endContact.call(fa.m_userData, contact, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.endContact.call(fb.m_userData, contact, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t */\r\n\tPreSolve(contact, oldManifold) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.preSolve.call(fa.m_userData, contact, oldManifold, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.preSolve.call(fb.m_userData, contact, oldManifold, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2ContactImpulse} impulse\r\n\t */\r\n\tPostSolve(contact, impulse) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.postSolve.call(fa.m_userData, contact, impulse, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.postSolve.call(fb.m_userData, contact, impulse, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n}\r\n\r\nexport class World extends b2World {\r\n\tconstructor() {\r\n\t\tsuper(GRAVITY);\r\n\r\n\t\t/** @type {DebugDraw} */\r\n\t\tthis.m_debugDraw = $gv.m_debugDraw;\r\n\t\tthis.SetDebugDraw(this.m_debugDraw);\r\n\r\n\t\tthis.SetContactListener(new ContactListener());\r\n\r\n\t\t//if (!window.io) {\r\n\t\t//\tthis.player = null;\r\n\t\t//\tthis._player_rebirth();\r\n\t\t//\tthis.player.setPosition(0, 0, true);\r\n\t\t//}\r\n\r\n\t\tthis.ground = new Ground();\r\n\r\n\t\t/** @type {LadderRope[]} */\r\n\t\tthis.ladderRope = [];\r\n\t\t\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.mapBound_body = null;\r\n\t\t\r\n\t\tthis.stop = false;\r\n\t\t\r\n\t\tthis.$_mouseJoint = null;\r\n\r\n\t\t/** @type {(function():void)[]} */\r\n\t\tthis._onceAfterStep = [];\r\n\r\n\t\t/** @type {b2Body[]} */\r\n\t\tthis._destryBodyList = [];\r\n\r\n\t\tthis._DestroyBody = this.DestroyBody;\r\n\r\n\t\t/**\r\n\t\t * @param {b2Body} b\r\n\t\t */\r\n\t\tthis.DestroyBody = b => {\r\n\t\t\tif (this.m_locked) {\r\n\t\t\t\tthis._destryBodyList.push(b);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._DestroyBody(b);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.draw_foothold_path_count = 1;\r\n\t}\r\n\r\n\t$test_b2ParticleSystem() {\r\n\t\tconst particleType = b2ParticleFlag.b2_elasticParticle;//b2_waterParticle;\r\n\t\tconst particleSystemDef = new b2ParticleSystemDef();\r\n\t\t\r\n\t\t/** @type {b2ParticleSystem} */\r\n\t\tthis.m_particleSystem = this.CreateParticleSystem(particleSystemDef);\r\n\t\t\r\n\t\tthis.m_particleSystem.SetGravityScale(0);\r\n\t\tthis.m_particleSystem.SetRadius(10 / $gv.CANVAS_SCALE);\r\n\t\tthis.m_particleSystem.SetDamping(0.2);\r\n\t\t{\r\n\t\t\tconst shape = new b2CircleShape();\r\n\t\t\tshape.m_p.Set(0, 2);\r\n\t\t\tshape.m_radius = 3;\r\n\t\t\tconst pd = new b2ParticleGroupDef();\r\n\t\t\tpd.flags = particleType;\r\n\t\t\tpd.shape = shape;\r\n\t\t\tconst group = this.m_particleSystem.CreateParticleGroup(pd);\r\n\t\t\tif (pd.flags & b2ParticleFlag.b2_colorMixingParticle) {\r\n\t\t\t\tthis.ColorParticleGroup(group, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow.m_particleSystem = this.m_particleSystem;\r\n\t\t\r\n\t\tthis.$vbo_ps = null;\r\n\t}\r\n\r\n\t/**\r\n\t * after load map\r\n\t */\r\n\tasync load(map_raw_data) {\r\n\t\tthis.ground.load(map_raw_data, this);\r\n\t\tthis.ladderRope = MapLadderRopeLoader.load(map_raw_data, this);\r\n\t}\r\n\tunload() {\r\n\t\tif (this.IsLocked()) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.error(\"world is locked, world can not unload\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.ground.unload(this);\r\n\t\t\tthis.ladderRope.length = 0;\r\n\t\t\tthis.DestroyBody(this.mapBound_body);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {MapMob} mapMob\r\n\t */\r\n\tcreateMob(mapMob) {\r\n\t\tlet mob = new PMob(mapMob);\r\n\t\tmob._create(this);\r\n\t\treturn mob;\r\n\t}\r\n\tdestroyMob(mapMob) {\r\n\t\t//if (this != mapMob.$physics) {\r\n\t\t//\tdebugger;\r\n\t\t//\treturn false;\r\n\t\t//}\r\n\t\t\r\n\t\tmapMob.$physics._destroy(this);\r\n\t\tmapMob.$physics = null;\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tcreateNpc(mapNpc) {\r\n\t\treturn null;\r\n\t}\r\n\tdestroyNpc(mapNpc) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tcreatePortal(portal) {\r\n\t\tconst rect = portal.compute_rectangle(0);\r\n\t\tif (rect) {\r\n\t\t\tconst width = rect.width / 2 / $gv.CANVAS_SCALE * 0.4;\r\n\t\t\tconst height = rect.height / 2 / $gv.CANVAS_SCALE * 0.2;\r\n\r\n\t\t\tlet bdef = new b2BodyDef();\r\n\t\t\tlet fdef = new b2FixtureDef();\r\n\t\t\tlet shape;\r\n\r\n\t\t\tfdef.filter.Copy(FilterHelper.get(\"portal\"));\r\n\r\n\t\t\tbdef.userData = portal;\r\n\t\t\tbdef.type = b2BodyType.b2_staticBody;//b2_staticBody//b2_kinematicBody//b2_dynamicBody\r\n\t\t\tbdef.position.Set(\r\n\t\t\t\tportal.x / $gv.CANVAS_SCALE,\r\n\t\t\t\tportal.y / $gv.CANVAS_SCALE);\r\n\r\n\t\t\tlet body = this.CreateBody(bdef);\r\n\t\t\tbody.$type = \"portal\";\r\n\r\n\t\t\tshape = new b2PolygonShape();\r\n\r\n\t\t\tif (window.MAP_PORTAL_FULL_SIZE) {\r\n\t\t\t\tshape.SetAsBox(\r\n\t\t\t\t\trect.width / 2 / $gv.CANVAS_SCALE,\r\n\t\t\t\t\trect.height / 2 / $gv.CANVAS_SCALE,\r\n\t\t\t\t\tnew b2Vec2(-portal.textures[0].x / $gv.CANVAS_SCALE, -portal.textures[0].y / $gv.CANVAS_SCALE),\r\n\t\t\t\t\t0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.SetAsBox(\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\theight,\r\n\t\t\t\t\tnew b2Vec2(0, -height),\r\n\t\t\t\t\t0);\r\n\t\t\t}\r\n\r\n\t\t\tfdef.isSensor = true;\r\n\t\t\tfdef.shape = shape;\r\n\t\t\tfdef.filter = FilterHelper.get(\"portal\");\r\n\t\t\tfdef.userData = portal;\r\n\t\t\tfdef.$type = \"portal\";\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\tportal.body = body;\r\n\r\n\t\t\treturn body;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Rectangle} rect\r\n\t */\r\n\t_createMapBound(rect) {\r\n\t\tlet { left, top, right, bottom } = rect;\r\n\t\t\r\n\t\tleft /= $gv.CANVAS_SCALE;\r\n\t\tright /= $gv.CANVAS_SCALE;\r\n\t\ttop /= $gv.CANVAS_SCALE;\r\n\t\tbottom /= $gv.CANVAS_SCALE;\r\n\t\t\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\t//bdef.type = b2BodyType.b2_dynamicBody;\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2EdgeShape();\r\n\r\n\t\tfdef.$type = \"MapBorder\";\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"map_border\"));\r\n\r\n\t\tlet bb = this.CreateBody(bdef);\r\n\t\tbb.$type = \"MapBorder\";\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, top);\r\n\t\tshape.m_vertex2.Set(right, top);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, bottom);\r\n\t\tshape.m_vertex2.Set(right, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, top);\r\n\t\tshape.m_vertex2.Set(left, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\r\n\t\tshape.m_vertex1.Set(right, top);\r\n\t\tshape.m_vertex2.Set(right, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tif (this.player) {\r\n\t\t\tthis.player.setPosition((right + left) * 0.5, (bottom + top) * 0.5, true);\r\n\t\t}\r\n\r\n\t\tthis.mapBound_body = bb;\r\n\t}\r\n\r\n\t//_player_rebirth() {\r\n\t//\twindow.$player = this.player = new PPlayer(window.chara ? window.chara.renderer:null);\r\n\t//\tthis.player._create(this);\r\n\t//\r\n\t//\tdelete this.player.renderer;\r\n\t//\tObject.defineProperty(this.player, \"renderer\", {\r\n\t//\t\tget: function () {\r\n\t//\t\t\treturn window.chara ? window.chara.renderer : null;\r\n\t//\t\t}\r\n\t//\t});\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {SceneObject} sceneObject\r\n\t * @param {CharacterAnimationBase} renderer\r\n\t */\r\n\t$createPlayer(sceneObject, renderer) {\r\n\t\tif (!sceneObject || !renderer) {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"$createPlayer(sceneObject, renderer)\");\r\n\t\t}\r\n\t\tlet player = new PPlayer();\r\n\r\n\t\tplayer._create(this);\r\n\r\n\t\t//init ?\r\n\t\tplayer.chara = sceneObject;\r\n\t\tplayer.renderer = renderer;//??\r\n\r\n\t\tthis.player = player;\r\n\r\n\t\treturn player;\r\n\t}\r\n\t/**\r\n\t * @param {SceneObject} sceneObject\r\n\t * @param {CharacterAnimationBase} renderer\r\n\t */\r\n\t$createRemotePlayer(sceneObject, renderer) {\r\n\t\tif (!sceneObject || !renderer) {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"$createRemotePlayer(sceneObject, renderer)\");\r\n\t\t}\r\n\t\tlet player = new PRemoteCharacter();\r\n\r\n\t\tplayer._create(this);\r\n\r\n\t\t//init ?\r\n\t\tplayer.renderer = renderer;\r\n\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {function():void} func\r\n\t */\r\n\tonceUnlock(func) {\r\n\t\tif (this.m_locked) {\r\n\t\t\tthis._onceAfterStep.push(func);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfunc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * do once AfterStep\r\n\t * @param {function():void} func\r\n\t */\r\n\tdoAfterStep(func) {\r\n\t\tthis._onceAfterStep.push(func);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseDown(p) {\r\n\t\tif (this.$_mouseJoint != null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make a small box.\r\n\t\tlet aabb = new b2AABB();\r\n\t\tlet d = new b2Vec2();\r\n\t\td.Set(0.001, 0.001);\r\n\t\tb2Vec2.SubVV(p, d, aabb.lowerBound);\r\n\t\tb2Vec2.AddVV(p, d, aabb.upperBound);\r\n\r\n\t\tlet that = this;\r\n\t\tlet hit_fixture = null;\r\n\r\n\t\t// Query the world for overlapping shapes.\r\n\t\tthis.QueryAABB(function (fixture) {\r\n\t\t\tlet body = fixture.GetBody();\r\n\t\t\tif (body.GetType() != b2BodyType.b2_staticBody) {\r\n\t\t\t\tlet inside = fixture.TestPoint(p);\r\n\t\t\t\tif (inside) {\r\n\t\t\t\t\thit_fixture = fixture;\r\n\r\n\t\t\t\t\t// We are done, terminate the query.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Continue the query.\r\n\t\t\treturn true;\r\n\t\t}, aabb);\r\n\r\n\t\tif (hit_fixture) {\r\n\t\t\tlet body = hit_fixture.GetBody();\r\n\t\t\tlet md = new b2MouseJointDef();\r\n\t\t\tmd.bodyA = this.ground.bodies[0];\r\n\t\t\tmd.bodyB = body;\r\n\t\t\tmd.target.Copy(p);\r\n\t\t\tmd.maxForce = 1000 * body.GetMass();\r\n\t\t\tthis.$_mouseJoint = this.CreateJoint(md);\r\n\t\t\tbody.SetAwake(true);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseUp(p) {\r\n\t\tif (this.$_mouseJoint) {\r\n\t\t\tthis.DestroyJoint(this.$_mouseJoint);\r\n\t\t\tthis.$_mouseJoint = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseMove(p) {\r\n\t\tif (this.$_mouseJoint) {\r\n\t\t\tthis.$_mouseJoint.SetTarget(p);\r\n\t\t}\r\n\t}\r\n\t\r\n\t$_onMouseEvent() {\r\n\t\tconst x = ($gv.m_viewRect.left + $gv.mouse_x) / $gv.CANVAS_SCALE;\r\n\t\tconst y = ($gv.m_viewRect.top + $gv.mouse_y) / $gv.CANVAS_SCALE;\r\n\t\tconst p = new b2Vec2(x, y);\r\n\t\t\r\n\t\tif ($gv.mouse_dl) {\r\n\t\t\tthis.$_mouseDown(p);\r\n\t\t}\r\n\t\tif ($gv.mouse_ul) {\r\n\t\t\t$gv.mouse_ul = 0;\r\n\t\t\tthis.$_mouseUp(p);\r\n\t\t}\r\n\t\tif ($gv.mouse_move) {\r\n\t\t\t$gv.mouse_move = 0;\r\n\t\t\tthis.$_mouseMove(p);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.stop) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.$_onMouseEvent();\r\n\t\t\r\n\t\tfor (let body = this.GetBodyList(); body; body = body.m_next) {\r\n\t\t\tbody.Step(stamp);\r\n\t\t}\r\n\r\n\t\tsuper.Step(1 / $gv.MAX_FPS, window.$velocityIterations, window.$positionIterations, window.$particleIterations);\r\n\t\tfor (let body = this.GetBodyList(); body; body = body.m_next) {\r\n\t\t\tbody.AfterStep(stamp);\r\n\t\t}\r\n\t\tif (this._onceAfterStep) {\r\n\t\t\tthis._onceAfterStep.forEach(f => f());\r\n\t\t\tthis._onceAfterStep.length = 0;\r\n\t\t}\r\n\t\tif (this._destryBodyList) {\r\n\t\t\tthis._destryBodyList.forEach(b => this._DestroyBody(b));\r\n\t\t\tthis._destryBodyList.length = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = window.chara ? window.chara.$physics : this.player;\r\n\r\n\t\tif ($gv.m_display_physics_debug) {\r\n\t\t\tconst debugDraw = this.m_debugDraw;\r\n\t\t\tthis.m_debugDraw.m_ctx = ctx;\r\n\r\n\t\t\tconst w = ctx.canvas.width;\r\n\t\t\tconst h = ctx.canvas.height;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t\r\n\t\t\tctx.scale(debugDraw.canvasScale, debugDraw.canvasScale);\r\n\t\t\tctx.lineWidth /= debugDraw.canvasScale;\r\n\r\n\t\t\t// apply camera\r\n\t\t\tctx.scale(debugDraw.viewZoom, debugDraw.viewZoom);\r\n\t\t\tctx.lineWidth /= debugDraw.viewZoom;\r\n\r\n\t\t\tthis.DrawDebugData();\r\n\r\n\t\t\t//display player's front\r\n\t\t\tif (player && player.body) {\r\n\t\t\t\tconst pos = player.getPosition();\r\n\t\t\t\tctx.fillStyle = \"#F00A\";\r\n\t\t\t\t\r\n\t\t\t\t//test debugDraw.canvasScale\r\n\t\t\t\tif (player.state.front > 0) {\r\n\t\t\t\t\tctx.fillRect(pos.x, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse if (player.state.front < 0) {\r\n\t\t\t\t\tctx.fillRect(pos.x - 1, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tctx.fillRect(pos.x - 0.5, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\r\n\t\tif ($gv.m_display_particleSystem) {\r\n\t\t\tif (renderer.gl) {\r\n\t\t\t\t/** @type {WebGLRenderingContext} */\r\n\t\t\t\tconst gl = this.gl;\r\n\r\n\t\t\t\tif (!this.$vbo_ps) {\r\n\t\t\t\t\tlet vbo = gl.createBuffer();\r\n\r\n\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbo);\r\n\r\n\t\t\t\t\tconst count = this.m_particleSystem.GetParticleCount();\r\n\t\t\t\t\tconst buf = this.m_particleSystem.GetPositionBuffer();\r\n\r\n\t\t\t\t\tlet vertices = new Float32Array(count * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < count; i += 2) {\r\n\t\t\t\t\t\tvertices[i + 0] = buf[i].x;\r\n\t\t\t\t\t\tvertices[i + 1] = buf[i].y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n\r\n\t\t\t\t\tthis.$vbo_ps = vbo;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst count = this.m_particleSystem.GetParticleCount();\r\n\t\t\t\t\tconst buf = this.m_particleSystem.GetPositionBuffer();\r\n\r\n\t\t\t\t\tlet vertices = new Float32Array(count * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < count; i += 2) {\r\n\t\t\t\t\t\tvertices[i + 0] = buf[i].x;\r\n\t\t\t\t\t\tvertices[i + 1] = buf[i].y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let group = this.m_particleSystem.m_groupList; group; group = group.m_next) {\r\n\t\t\t\t\tlet particleCount = group.GetParticleCount();\r\n\t\t\t\t\tlet instanceOffset = group.GetBufferIndex();\r\n\t\t\t\t\tgl.drawArrays(gl.POINTS, instanceOffset, particleCount);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (ctx) {\r\n\t\t\t\tif ($gv.func) {\r\n\t\t\t\t\t$gv.func.call(this, ctx, renderer);\r\n\t\t\t\t\t//$gv.func = function (ctx) {\r\n\t\t\t\t\t//\tctx = ctx || $engine.ctx;\r\n\t\t\t\t\t//\tconst vertices = this.m_particleSystem.m_positionBuffer.data;\r\n\t\t\t\t\t//\tconst colorBuffer = this.m_particleSystem.m_colorBuffer.data;\r\n\t\t\t\t\t//\tconst weightBuffer = this.m_particleSystem.m_weightBuffer;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\tlet minWeight = Math.min.apply(this, weightBuffer.slice(0, 128));\r\n\t\t\t\t\t//\tlet maxWeight = Math.max.apply(this, weightBuffer.slice(0, 128)) - minWeight;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\tif (vertices.length > 2) {\r\n\t\t\t\t\t//\t\tlet length = vertices.length / 2;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\t\tctx.fillStyle = \"#0747\";\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\t\tfor (let i = 0; i < length - 2; i += 1) {\r\n\t\t\t\t\t//\t\t\tctx.beginPath();\r\n\t\t\t\t\t//\t\t\tctx.moveTo(vertices[i + 0].x * $gv.CANVAS_SCALE, vertices[i + 0].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.lineTo(vertices[i + 1].x * $gv.CANVAS_SCALE, vertices[i + 1].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.lineTo(vertices[i + 2].x * $gv.CANVAS_SCALE, vertices[i + 2].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.fillStyle = `hsla(87deg,${(weightBuffer[i] / maxWeight * 100).toFixed(0)}%,${(weightBuffer[i] / maxWeight * 50).toFixed(0)}%,${(weightBuffer[i] / maxWeight / 2).toFixed(2)})`\r\n\t\t\t\t\t//\t\t\t//ctx.fillStyle = colorBuffer[i].MakeStyleString();\r\n\t\t\t\t\t//\t\t\tctx.fill();\r\n\t\t\t\t\t//\t\t}\r\n\t\t\t\t\t//\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst vertices = this.m_particleSystem.m_positionBuffer.data;\r\n\t\t\t\t\tconst colorBuffer = this.m_particleSystem.m_colorBuffer.data;\r\n\t\t\t\t\tconst weightBuffer = this.m_particleSystem.m_weightBuffer.data;\r\n\r\n\t\t\t\t\trenderer.pushMatrix();\r\n\r\n\t\t\t\t\tconst r = window.$particleRadius;\r\n\t\t\t\t\tconst r2 = r * 2;\r\n\r\n\t\t\t\t\tif (!this.$particle_grd) {\r\n\t\t\t\t\t\tlet grd = ctx.createRadialGradient(r, r, 0, r, r, r2);\r\n\t\t\t\t\t\tgrd.addColorStop(0, \"#0744\");\r\n\t\t\t\t\t\tgrd.addColorStop(1, \"#07440\");\r\n\t\t\t\t\t\tthis.$particle_grd = grd;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let group = this.m_particleSystem.m_groupList; group; group = group.m_next) {\r\n\t\t\t\t\t\tfor (let i = group.m_firstIndex; i < group.m_lastIndex; ++i) {\r\n\t\t\t\t\t\t\tlet x1 = vertices[i].x * $gv.CANVAS_SCALE - r;\r\n\t\t\t\t\t\t\tlet y1 = vertices[i].y * $gv.CANVAS_SCALE - r;\r\n\r\n\t\t\t\t\t\t\trenderer.setTransform(1, 0, 0, 1, $gv.m_viewRect.left + x1, $gv.m_viewRect.top + y1);\r\n\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t\t\t\t//texture\r\n\r\n\t\t\t\t\t\t\t//ctx.arc(0, 0, r2, 0, 2 * Math.PI);\r\n\t\t\t\t\t\t\t//ctx.fillStyle = this.$particle_grd;\r\n\t\t\t\t\t\t\t//ctx.fill();\r\n\r\n\t\t\t\t\t\t\tctx.fillStyle = this.$particle_grd;\r\n\t\t\t\t\t\t\tctx.fillRect(r, r, r2 * 2, r2 * 2);\r\n\r\n\t\t\t\t\t\t\t//center\r\n\t\t\t\t\t\t\t//ctx.fillStyle = \"red\";\r\n\t\t\t\t\t\t\t//ctx.fillRect(0, 0, 1, 1);\r\n\r\n\t\t\t\t\t\t\t//border\r\n\t\t\t\t\t\t\t//ctx.strokeRect(-r, -r, r2, r2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.popMatrix();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($gv.m_display_foothold) {\r\n\t\t\tctx.save();\r\n\t\t\tthis.ground.$drawDebugInfo(renderer);\r\n\t\t\tif (player && player._foothold) {\r\n\t\t\t\tplayer._foothold.$drawDebugInfo2(renderer, \"#FF0\");\r\n\t\t\t}\r\n\r\n\t\t\tlet $foothold, $ladderRope;\r\n\t\t\tif (player) {\r\n\t\t\t\t$foothold = player.$foothold;\r\n\t\t\t\t$ladderRope = player.ladder;\r\n\t\t\t}\r\n\t\t\tif ($foothold && this.draw_foothold_path_count) {\r\n\t\t\t\t$foothold.$drawDebugInfo2(renderer, \"#F00\");\r\n\r\n\t\t\t\t//draw path\r\n\t\t\t\tlet count = this.draw_foothold_path_count;\r\n\t\t\t\tctx.lineWidth = 2.5;\r\n\t\t\t\tctx.strokeStyle = \"#00FE\";\r\n\t\t\t\tif (player.state.front > 0) {\r\n\t\t\t\t\t$foothold = this.ground.footholds[$foothold.next];\r\n\t\t\t\t\tfor (; $foothold; $foothold = this.ground.footholds[$foothold.next]) {\r\n\t\t\t\t\t\t$foothold._drawLine(ctx);\r\n\t\t\t\t\t\tif ((--count) <= 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (player.state.front < 0) {\r\n\t\t\t\t\t$foothold = this.ground.footholds[$foothold.prev];\r\n\t\t\t\t\tfor (; $foothold; $foothold = this.ground.footholds[$foothold.prev]) {\r\n\t\t\t\t\t\t$foothold._drawLine(ctx);\r\n\t\t\t\t\t\tif ((--count) <= 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ladderRope.forEach(lr => {\r\n\t\t\t\tconst width = lr.calcWidth();\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(lr.x - width * 0.5, lr.y1, width, lr.y2 - lr.y1);\r\n\t\t\t\tctx.fillStyle = lr == $ladderRope ? \"#E117\":\"#EB17\";\r\n\t\t\t\tctx.fill();\r\n\t\t\t});\r\n\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * https://github.com/google/LiquidFunPaint/blob/develop/src/com/google/fpl/liquidfunpaint/ParticleRenderer.java#L43\r\n * Renderer to draw particle water, objects, and wall. It draws particles as\r\n * fluid (or objects) by following three steps:\r\n * 1) Draws particles to a texture\r\n * 2) Blurs it out\r\n * 3) Applies threshold.\r\n */\r\n\r\n","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_maxFloat, b2_epsilon, b2_epsilon_sq } from \"../Common/b2Settings\";\r\nimport { b2Max, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\n/// A distance proxy is used by the GJK algorithm.\r\n/// It encapsulates any shape.\r\nexport class b2DistanceProxy {\r\n    constructor() {\r\n        this.m_buffer = b2Vec2.MakeArray(2);\r\n        this.m_vertices = this.m_buffer;\r\n        this.m_count = 0;\r\n        this.m_radius = 0;\r\n    }\r\n    Reset() {\r\n        this.m_vertices = this.m_buffer;\r\n        this.m_count = 0;\r\n        this.m_radius = 0;\r\n        return this;\r\n    }\r\n    SetShape(shape, index) {\r\n        shape.SetupDistanceProxy(this, index);\r\n    }\r\n    GetSupport(d) {\r\n        let bestIndex = 0;\r\n        let bestValue = b2Vec2.DotVV(this.m_vertices[0], d);\r\n        for (let i = 1; i < this.m_count; ++i) {\r\n            const value = b2Vec2.DotVV(this.m_vertices[i], d);\r\n            if (value > bestValue) {\r\n                bestIndex = i;\r\n                bestValue = value;\r\n            }\r\n        }\r\n        return bestIndex;\r\n    }\r\n    GetSupportVertex(d) {\r\n        let bestIndex = 0;\r\n        let bestValue = b2Vec2.DotVV(this.m_vertices[0], d);\r\n        for (let i = 1; i < this.m_count; ++i) {\r\n            const value = b2Vec2.DotVV(this.m_vertices[i], d);\r\n            if (value > bestValue) {\r\n                bestIndex = i;\r\n                bestValue = value;\r\n            }\r\n        }\r\n        return this.m_vertices[bestIndex];\r\n    }\r\n    GetVertexCount() {\r\n        return this.m_count;\r\n    }\r\n    GetVertex(index) {\r\n        ///b2Assert(0 <= index && index < this.m_count);\r\n        return this.m_vertices[index];\r\n    }\r\n}\r\nexport class b2SimplexCache {\r\n    constructor() {\r\n        this.metric = 0;\r\n        this.count = 0;\r\n        this.indexA = [0, 0, 0];\r\n        this.indexB = [0, 0, 0];\r\n    }\r\n    Reset() {\r\n        this.metric = 0;\r\n        this.count = 0;\r\n        return this;\r\n    }\r\n}\r\nexport class b2DistanceInput {\r\n    constructor() {\r\n        this.proxyA = new b2DistanceProxy();\r\n        this.proxyB = new b2DistanceProxy();\r\n        this.transformA = new b2Transform();\r\n        this.transformB = new b2Transform();\r\n        this.useRadii = false;\r\n    }\r\n    Reset() {\r\n        this.proxyA.Reset();\r\n        this.proxyB.Reset();\r\n        this.transformA.SetIdentity();\r\n        this.transformB.SetIdentity();\r\n        this.useRadii = false;\r\n        return this;\r\n    }\r\n}\r\nexport class b2DistanceOutput {\r\n    constructor() {\r\n        this.pointA = new b2Vec2();\r\n        this.pointB = new b2Vec2();\r\n        this.distance = 0;\r\n        this.iterations = 0; ///< number of GJK iterations used\r\n    }\r\n    Reset() {\r\n        this.pointA.SetZero();\r\n        this.pointB.SetZero();\r\n        this.distance = 0;\r\n        this.iterations = 0;\r\n        return this;\r\n    }\r\n}\r\nexport let b2_gjkCalls = 0;\r\nexport let b2_gjkIters = 0;\r\nexport let b2_gjkMaxIters = 0;\r\nexport function b2_gjk_reset() {\r\n    b2_gjkCalls = 0;\r\n    b2_gjkIters = 0;\r\n    b2_gjkMaxIters = 0;\r\n}\r\nexport class b2SimplexVertex {\r\n    constructor() {\r\n        this.wA = new b2Vec2(); // support point in proxyA\r\n        this.wB = new b2Vec2(); // support point in proxyB\r\n        this.w = new b2Vec2(); // wB - wA\r\n        this.a = 0; // barycentric coordinate for closest point\r\n        this.indexA = 0; // wA index\r\n        this.indexB = 0; // wB index\r\n    }\r\n    Copy(other) {\r\n        this.wA.Copy(other.wA); // support point in proxyA\r\n        this.wB.Copy(other.wB); // support point in proxyB\r\n        this.w.Copy(other.w); // wB - wA\r\n        this.a = other.a; // barycentric coordinate for closest point\r\n        this.indexA = other.indexA; // wA index\r\n        this.indexB = other.indexB; // wB index\r\n        return this;\r\n    }\r\n}\r\nexport class b2Simplex {\r\n    constructor() {\r\n        this.m_v1 = new b2SimplexVertex();\r\n        this.m_v2 = new b2SimplexVertex();\r\n        this.m_v3 = new b2SimplexVertex();\r\n        this.m_vertices = [ /*3*/];\r\n        this.m_count = 0;\r\n        this.m_vertices[0] = this.m_v1;\r\n        this.m_vertices[1] = this.m_v2;\r\n        this.m_vertices[2] = this.m_v3;\r\n    }\r\n    ReadCache(cache, proxyA, transformA, proxyB, transformB) {\r\n        ///b2Assert(0 <= cache.count && cache.count <= 3);\r\n        // Copy data from cache.\r\n        this.m_count = cache.count;\r\n        const vertices = this.m_vertices;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const v = vertices[i];\r\n            v.indexA = cache.indexA[i];\r\n            v.indexB = cache.indexB[i];\r\n            const wALocal = proxyA.GetVertex(v.indexA);\r\n            const wBLocal = proxyB.GetVertex(v.indexB);\r\n            b2Transform.MulXV(transformA, wALocal, v.wA);\r\n            b2Transform.MulXV(transformB, wBLocal, v.wB);\r\n            b2Vec2.SubVV(v.wB, v.wA, v.w);\r\n            v.a = 0;\r\n        }\r\n        // Compute the new simplex metric, if it is substantially different than\r\n        // old metric then flush the simplex.\r\n        if (this.m_count > 1) {\r\n            const metric1 = cache.metric;\r\n            const metric2 = this.GetMetric();\r\n            if (metric2 < 0.5 * metric1 || 2 * metric1 < metric2 || metric2 < b2_epsilon) {\r\n                // Reset the simplex.\r\n                this.m_count = 0;\r\n            }\r\n        }\r\n        // If the cache is empty or invalid ...\r\n        if (this.m_count === 0) {\r\n            const v = vertices[0];\r\n            v.indexA = 0;\r\n            v.indexB = 0;\r\n            const wALocal = proxyA.GetVertex(0);\r\n            const wBLocal = proxyB.GetVertex(0);\r\n            b2Transform.MulXV(transformA, wALocal, v.wA);\r\n            b2Transform.MulXV(transformB, wBLocal, v.wB);\r\n            b2Vec2.SubVV(v.wB, v.wA, v.w);\r\n            v.a = 1;\r\n            this.m_count = 1;\r\n        }\r\n    }\r\n    WriteCache(cache) {\r\n        cache.metric = this.GetMetric();\r\n        cache.count = this.m_count;\r\n        const vertices = this.m_vertices;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            cache.indexA[i] = vertices[i].indexA;\r\n            cache.indexB[i] = vertices[i].indexB;\r\n        }\r\n    }\r\n    GetSearchDirection(out) {\r\n        switch (this.m_count) {\r\n            case 1:\r\n                return b2Vec2.NegV(this.m_v1.w, out);\r\n            case 2: {\r\n                const e12 = b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, out);\r\n                const sgn = b2Vec2.CrossVV(e12, b2Vec2.NegV(this.m_v1.w, b2Vec2.s_t0));\r\n                if (sgn > 0) {\r\n                    // Origin is left of e12.\r\n                    return b2Vec2.CrossOneV(e12, out);\r\n                }\r\n                else {\r\n                    // Origin is right of e12.\r\n                    return b2Vec2.CrossVOne(e12, out);\r\n                }\r\n            }\r\n            default:\r\n                ///b2Assert(false);\r\n                return out.SetZero();\r\n        }\r\n    }\r\n    GetClosestPoint(out) {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                ///b2Assert(false);\r\n                return out.SetZero();\r\n            case 1:\r\n                return out.Copy(this.m_v1.w);\r\n            case 2:\r\n                return out.Set(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);\r\n            case 3:\r\n                return out.SetZero();\r\n            default:\r\n                ///b2Assert(false);\r\n                return out.SetZero();\r\n        }\r\n    }\r\n    GetWitnessPoints(pA, pB) {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                ///b2Assert(false);\r\n                break;\r\n            case 1:\r\n                pA.Copy(this.m_v1.wA);\r\n                pB.Copy(this.m_v1.wB);\r\n                break;\r\n            case 2:\r\n                pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;\r\n                pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;\r\n                pB.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;\r\n                pB.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;\r\n                break;\r\n            case 3:\r\n                pB.x = pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;\r\n                pB.y = pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;\r\n                break;\r\n            default:\r\n                ///b2Assert(false);\r\n                break;\r\n        }\r\n    }\r\n    GetMetric() {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                ///b2Assert(false);\r\n                return 0;\r\n            case 1:\r\n                return 0;\r\n            case 2:\r\n                return b2Vec2.DistanceVV(this.m_v1.w, this.m_v2.w);\r\n            case 3:\r\n                return b2Vec2.CrossVV(b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, b2Vec2.s_t0), b2Vec2.SubVV(this.m_v3.w, this.m_v1.w, b2Vec2.s_t1));\r\n            default:\r\n                ///b2Assert(false);\r\n                return 0;\r\n        }\r\n    }\r\n    Solve2() {\r\n        const w1 = this.m_v1.w;\r\n        const w2 = this.m_v2.w;\r\n        const e12 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\r\n        // w1 region\r\n        const d12_2 = (-b2Vec2.DotVV(w1, e12));\r\n        if (d12_2 <= 0) {\r\n            // a2 <= 0, so we clamp it to 0\r\n            this.m_v1.a = 1;\r\n            this.m_count = 1;\r\n            return;\r\n        }\r\n        // w2 region\r\n        const d12_1 = b2Vec2.DotVV(w2, e12);\r\n        if (d12_1 <= 0) {\r\n            // a1 <= 0, so we clamp it to 0\r\n            this.m_v2.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v2);\r\n            return;\r\n        }\r\n        // Must be in e12 region.\r\n        const inv_d12 = 1 / (d12_1 + d12_2);\r\n        this.m_v1.a = d12_1 * inv_d12;\r\n        this.m_v2.a = d12_2 * inv_d12;\r\n        this.m_count = 2;\r\n    }\r\n    Solve3() {\r\n        const w1 = this.m_v1.w;\r\n        const w2 = this.m_v2.w;\r\n        const w3 = this.m_v3.w;\r\n        // Edge12\r\n        // [1      1     ][a1] = [1]\r\n        // [w1.e12 w2.e12][a2] = [0]\r\n        // a3 = 0\r\n        const e12 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\r\n        const w1e12 = b2Vec2.DotVV(w1, e12);\r\n        const w2e12 = b2Vec2.DotVV(w2, e12);\r\n        const d12_1 = w2e12;\r\n        const d12_2 = (-w1e12);\r\n        // Edge13\r\n        // [1      1     ][a1] = [1]\r\n        // [w1.e13 w3.e13][a3] = [0]\r\n        // a2 = 0\r\n        const e13 = b2Vec2.SubVV(w3, w1, b2Simplex.s_e13);\r\n        const w1e13 = b2Vec2.DotVV(w1, e13);\r\n        const w3e13 = b2Vec2.DotVV(w3, e13);\r\n        const d13_1 = w3e13;\r\n        const d13_2 = (-w1e13);\r\n        // Edge23\r\n        // [1      1     ][a2] = [1]\r\n        // [w2.e23 w3.e23][a3] = [0]\r\n        // a1 = 0\r\n        const e23 = b2Vec2.SubVV(w3, w2, b2Simplex.s_e23);\r\n        const w2e23 = b2Vec2.DotVV(w2, e23);\r\n        const w3e23 = b2Vec2.DotVV(w3, e23);\r\n        const d23_1 = w3e23;\r\n        const d23_2 = (-w2e23);\r\n        // Triangle123\r\n        const n123 = b2Vec2.CrossVV(e12, e13);\r\n        const d123_1 = n123 * b2Vec2.CrossVV(w2, w3);\r\n        const d123_2 = n123 * b2Vec2.CrossVV(w3, w1);\r\n        const d123_3 = n123 * b2Vec2.CrossVV(w1, w2);\r\n        // w1 region\r\n        if (d12_2 <= 0 && d13_2 <= 0) {\r\n            this.m_v1.a = 1;\r\n            this.m_count = 1;\r\n            return;\r\n        }\r\n        // e12\r\n        if (d12_1 > 0 && d12_2 > 0 && d123_3 <= 0) {\r\n            const inv_d12 = 1 / (d12_1 + d12_2);\r\n            this.m_v1.a = d12_1 * inv_d12;\r\n            this.m_v2.a = d12_2 * inv_d12;\r\n            this.m_count = 2;\r\n            return;\r\n        }\r\n        // e13\r\n        if (d13_1 > 0 && d13_2 > 0 && d123_2 <= 0) {\r\n            const inv_d13 = 1 / (d13_1 + d13_2);\r\n            this.m_v1.a = d13_1 * inv_d13;\r\n            this.m_v3.a = d13_2 * inv_d13;\r\n            this.m_count = 2;\r\n            this.m_v2.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // w2 region\r\n        if (d12_1 <= 0 && d23_2 <= 0) {\r\n            this.m_v2.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v2);\r\n            return;\r\n        }\r\n        // w3 region\r\n        if (d13_1 <= 0 && d23_1 <= 0) {\r\n            this.m_v3.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // e23\r\n        if (d23_1 > 0 && d23_2 > 0 && d123_1 <= 0) {\r\n            const inv_d23 = 1 / (d23_1 + d23_2);\r\n            this.m_v2.a = d23_1 * inv_d23;\r\n            this.m_v3.a = d23_2 * inv_d23;\r\n            this.m_count = 2;\r\n            this.m_v1.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // Must be in triangle123\r\n        const inv_d123 = 1 / (d123_1 + d123_2 + d123_3);\r\n        this.m_v1.a = d123_1 * inv_d123;\r\n        this.m_v2.a = d123_2 * inv_d123;\r\n        this.m_v3.a = d123_3 * inv_d123;\r\n        this.m_count = 3;\r\n    }\r\n}\r\nb2Simplex.s_e12 = new b2Vec2();\r\nb2Simplex.s_e13 = new b2Vec2();\r\nb2Simplex.s_e23 = new b2Vec2();\r\nconst b2Distance_s_simplex = new b2Simplex();\r\nconst b2Distance_s_saveA = [0, 0, 0];\r\nconst b2Distance_s_saveB = [0, 0, 0];\r\nconst b2Distance_s_p = new b2Vec2();\r\nconst b2Distance_s_d = new b2Vec2();\r\nconst b2Distance_s_normal = new b2Vec2();\r\nconst b2Distance_s_supportA = new b2Vec2();\r\nconst b2Distance_s_supportB = new b2Vec2();\r\nexport function b2Distance(output, cache, input) {\r\n    ++b2_gjkCalls;\r\n    const proxyA = input.proxyA;\r\n    const proxyB = input.proxyB;\r\n    const transformA = input.transformA;\r\n    const transformB = input.transformB;\r\n    // Initialize the simplex.\r\n    const simplex = b2Distance_s_simplex;\r\n    simplex.ReadCache(cache, proxyA, transformA, proxyB, transformB);\r\n    // Get simplex vertices as an array.\r\n    const vertices = simplex.m_vertices;\r\n    const k_maxIters = 20;\r\n    // These store the vertices of the last simplex so that we\r\n    // can check for duplicates and prevent cycling.\r\n    const saveA = b2Distance_s_saveA;\r\n    const saveB = b2Distance_s_saveB;\r\n    let saveCount = 0;\r\n    let distanceSqr1 = b2_maxFloat;\r\n    let distanceSqr2 = distanceSqr1;\r\n    // Main iteration loop.\r\n    let iter = 0;\r\n    while (iter < k_maxIters) {\r\n        // Copy simplex so we can identify duplicates.\r\n        saveCount = simplex.m_count;\r\n        for (let i = 0; i < saveCount; ++i) {\r\n            saveA[i] = vertices[i].indexA;\r\n            saveB[i] = vertices[i].indexB;\r\n        }\r\n        switch (simplex.m_count) {\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                simplex.Solve2();\r\n                break;\r\n            case 3:\r\n                simplex.Solve3();\r\n                break;\r\n            default:\r\n                ///b2Assert(false);\r\n                break;\r\n        }\r\n        // If we have 3 points, then the origin is in the corresponding triangle.\r\n        if (simplex.m_count === 3) {\r\n            break;\r\n        }\r\n        // Compute closest point.\r\n        const p = simplex.GetClosestPoint(b2Distance_s_p);\r\n        distanceSqr2 = p.LengthSquared();\r\n        // Ensure progress\r\n        /*\r\n        TODO: to fix compile warning\r\n        if (distanceSqr2 > distanceSqr1) {\r\n          //break;\r\n        }\r\n        */\r\n        distanceSqr1 = distanceSqr2;\r\n        // Get search direction.\r\n        const d = simplex.GetSearchDirection(b2Distance_s_d);\r\n        // Ensure the search direction is numerically fit.\r\n        if (d.LengthSquared() < b2_epsilon_sq) {\r\n            // The origin is probably contained by a line segment\r\n            // or triangle. Thus the shapes are overlapped.\r\n            // We can't return zero here even though there may be overlap.\r\n            // In case the simplex is a point, segment, or triangle it is difficult\r\n            // to determine if the origin is contained in the CSO or very close to it.\r\n            break;\r\n        }\r\n        // Compute a tentative new simplex vertex using support points.\r\n        const vertex = vertices[simplex.m_count];\r\n        vertex.indexA = proxyA.GetSupport(b2Rot.MulTRV(transformA.q, b2Vec2.NegV(d, b2Vec2.s_t0), b2Distance_s_supportA));\r\n        b2Transform.MulXV(transformA, proxyA.GetVertex(vertex.indexA), vertex.wA);\r\n        vertex.indexB = proxyB.GetSupport(b2Rot.MulTRV(transformB.q, d, b2Distance_s_supportB));\r\n        b2Transform.MulXV(transformB, proxyB.GetVertex(vertex.indexB), vertex.wB);\r\n        b2Vec2.SubVV(vertex.wB, vertex.wA, vertex.w);\r\n        // Iteration count is equated to the number of support point calls.\r\n        ++iter;\r\n        ++b2_gjkIters;\r\n        // Check for duplicate support points. This is the main termination criteria.\r\n        let duplicate = false;\r\n        for (let i = 0; i < saveCount; ++i) {\r\n            if (vertex.indexA === saveA[i] && vertex.indexB === saveB[i]) {\r\n                duplicate = true;\r\n                break;\r\n            }\r\n        }\r\n        // If we found a duplicate support point we must exit to avoid cycling.\r\n        if (duplicate) {\r\n            break;\r\n        }\r\n        // New vertex is ok and needed.\r\n        ++simplex.m_count;\r\n    }\r\n    b2_gjkMaxIters = b2Max(b2_gjkMaxIters, iter);\r\n    // Prepare output.\r\n    simplex.GetWitnessPoints(output.pointA, output.pointB);\r\n    output.distance = b2Vec2.DistanceVV(output.pointA, output.pointB);\r\n    output.iterations = iter;\r\n    // Cache the simplex.\r\n    simplex.WriteCache(cache);\r\n    // Apply radii if requested.\r\n    if (input.useRadii) {\r\n        const rA = proxyA.m_radius;\r\n        const rB = proxyB.m_radius;\r\n        if (output.distance > (rA + rB) && output.distance > b2_epsilon) {\r\n            // Shapes are still no overlapped.\r\n            // Move the witness points to the outer surface.\r\n            output.distance -= rA + rB;\r\n            const normal = b2Vec2.SubVV(output.pointB, output.pointA, b2Distance_s_normal);\r\n            normal.Normalize();\r\n            output.pointA.SelfMulAdd(rA, normal);\r\n            output.pointB.SelfMulSub(rB, normal);\r\n        }\r\n        else {\r\n            // Shapes are overlapped when radii are considered.\r\n            // Move the witness points to the middle.\r\n            const p = b2Vec2.MidVV(output.pointA, output.pointB, b2Distance_s_p);\r\n            output.pointA.Copy(p);\r\n            output.pointB.Copy(p);\r\n            output.distance = 0;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2AABB } from \"../Collision/b2Collision\";\r\nimport { b2MassData } from \"../Collision/Shapes/b2Shape\";\r\n/// This holds contact filtering data.\r\nexport class b2Filter {\r\n    constructor() {\r\n        /// The collision category bits. Normally you would just set one bit.\r\n        this.categoryBits = 0x0001;\r\n        /// The collision mask bits. This states the categories that this\r\n        /// shape would accept for collision.\r\n        this.maskBits = 0xFFFF;\r\n        /// Collision groups allow a certain group of objects to never collide (negative)\r\n        /// or always collide (positive). Zero means no collision group. Non-zero group\r\n        /// filtering always wins against the mask bits.\r\n        this.groupIndex = 0;\r\n    }\r\n    Clone() {\r\n        return new b2Filter().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.categoryBits = other.categoryBits;\r\n        this.maskBits = other.maskBits;\r\n        this.groupIndex = other.groupIndex;\r\n        return this;\r\n    }\r\n}\r\n/// A fixture definition is used to create a fixture. This class defines an\r\n/// abstract fixture definition. You can reuse fixture definitions safely.\r\nexport class b2FixtureDef {\r\n    constructor() {\r\n        /// The shape, this must be set. The shape will be cloned, so you\r\n        /// can create the shape on the stack.\r\n        this.shape = null;\r\n        /// Use this to store application specific fixture data.\r\n        this.userData = null;\r\n        /// The friction coefficient, usually in the range [0,1].\r\n        this.friction = 0.2;\r\n        /// The restitution (elasticity) usually in the range [0,1].\r\n        this.restitution = 0;\r\n        /// The density, usually in kg/m^2.\r\n        this.density = 0;\r\n        /// A sensor shape collects contact information but never generates a collision\r\n        /// response.\r\n        this.isSensor = false;\r\n        /// Contact filtering data.\r\n        this.filter = new b2Filter();\r\n    }\r\n}\r\n/// This proxy is used internally to connect fixtures to the broad-phase.\r\nexport class b2FixtureProxy {\r\n    // public static MakeArray(length: number): b2FixtureProxy[] {\r\n    //   return b2MakeArray(length, (i) => new b2FixtureProxy());\r\n    // }\r\n    constructor(fixture) {\r\n        this.aabb = new b2AABB();\r\n        this.childIndex = 0;\r\n        this.treeNode = null;\r\n        this.fixture = fixture;\r\n    }\r\n}\r\n/// A fixture is used to attach a shape to a body for collision detection. A fixture\r\n/// inherits its transform from its parent. Fixtures hold additional non-geometric data\r\n/// such as friction, collision filters, etc.\r\n/// Fixtures are created via b2Body::CreateFixture.\r\n/// @warning you cannot reuse fixtures.\r\nexport class b2Fixture {\r\n    constructor(def, body) {\r\n        this.m_density = 0;\r\n        this.m_next = null;\r\n        this.m_friction = 0;\r\n        this.m_restitution = 0;\r\n        this.m_proxies = null;\r\n        this.m_proxyCount = 0;\r\n        this.m_filter = new b2Filter();\r\n        this.m_isSensor = false;\r\n        this.m_userData = null;\r\n        this.m_body = body;\r\n        this.m_shape = def.shape.Clone();\r\n    }\r\n    /// Get the type of the child shape. You can use this to down cast to the concrete shape.\r\n    /// @return the shape type.\r\n    GetType() {\r\n        return this.m_shape.GetType();\r\n    }\r\n    /// Get the child shape. You can modify the child shape, however you should not change the\r\n    /// number of vertices because this will crash some collision caching mechanisms.\r\n    /// Manipulating the shape may lead to non-physical behavior.\r\n    GetShape() {\r\n        return this.m_shape;\r\n    }\r\n    /// Set if this fixture is a sensor.\r\n    SetSensor(sensor) {\r\n        if (sensor !== this.m_isSensor) {\r\n            this.m_body.SetAwake(true);\r\n            this.m_isSensor = sensor;\r\n        }\r\n    }\r\n    /// Is this fixture a sensor (non-solid)?\r\n    /// @return the true if the shape is a sensor.\r\n    IsSensor() {\r\n        return this.m_isSensor;\r\n    }\r\n    /// Set the contact filtering data. This will not update contacts until the next time\r\n    /// step when either parent body is active and awake.\r\n    /// This automatically calls Refilter.\r\n    SetFilterData(filter) {\r\n        this.m_filter.Copy(filter);\r\n        this.Refilter();\r\n    }\r\n    /// Get the contact filtering data.\r\n    GetFilterData() {\r\n        return this.m_filter;\r\n    }\r\n    /// Call this if you want to establish collision that was previously disabled by b2ContactFilter::ShouldCollide.\r\n    Refilter() {\r\n        if (this.m_body) {\r\n            return;\r\n        }\r\n        // Flag associated contacts for filtering.\r\n        let edge = this.m_body.GetContactList();\r\n        while (edge) {\r\n            const contact = edge.contact;\r\n            const fixtureA = contact.GetFixtureA();\r\n            const fixtureB = contact.GetFixtureB();\r\n            if (fixtureA === this || fixtureB === this) {\r\n                contact.FlagForFiltering();\r\n            }\r\n            edge = edge.next;\r\n        }\r\n        const world = this.m_body.GetWorld();\r\n        if (world === null) {\r\n            return;\r\n        }\r\n        // Touch each proxy so that new pairs may be created\r\n        const broadPhase = world.m_contactManager.m_broadPhase;\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            broadPhase.TouchProxy(this.m_proxies[i].treeNode);\r\n        }\r\n    }\r\n    /// Get the parent body of this fixture. This is NULL if the fixture is not attached.\r\n    /// @return the parent body.\r\n    GetBody() {\r\n        return this.m_body;\r\n    }\r\n    /// Get the next fixture in the parent body's fixture list.\r\n    /// @return the next shape.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data that was assigned in the fixture definition. Use this to\r\n    /// store your application specific data.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data. Use this to store your application specific data.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Test a point for containment in this fixture.\r\n    /// @param p a point in world coordinates.\r\n    TestPoint(p) {\r\n        return this.m_shape.TestPoint(this.m_body.GetTransform(), p);\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ComputeDistance(p, normal, childIndex) {\r\n        return this.m_shape.ComputeDistance(this.m_body.GetTransform(), p, normal, childIndex);\r\n    }\r\n    // #endif\r\n    /// Cast a ray against this shape.\r\n    /// @param output the ray-cast results.\r\n    /// @param input the ray-cast input parameters.\r\n    RayCast(output, input, childIndex) {\r\n        return this.m_shape.RayCast(output, input, this.m_body.GetTransform(), childIndex);\r\n    }\r\n    /// Get the mass data for this fixture. The mass data is based on the density and\r\n    /// the shape. The rotational inertia is about the shape's origin. This operation\r\n    /// may be expensive.\r\n    GetMassData(massData = new b2MassData()) {\r\n        this.m_shape.ComputeMass(massData, this.m_density);\r\n        return massData;\r\n    }\r\n    /// Set the density of this fixture. This will _not_ automatically adjust the mass\r\n    /// of the body. You must call b2Body::ResetMassData to update the body's mass.\r\n    SetDensity(density) {\r\n        this.m_density = density;\r\n    }\r\n    /// Get the density of this fixture.\r\n    GetDensity() {\r\n        return this.m_density;\r\n    }\r\n    /// Get the coefficient of friction.\r\n    GetFriction() {\r\n        return this.m_friction;\r\n    }\r\n    /// Set the coefficient of friction. This will _not_ change the friction of\r\n    /// existing contacts.\r\n    SetFriction(friction) {\r\n        this.m_friction = friction;\r\n    }\r\n    /// Get the coefficient of restitution.\r\n    GetRestitution() {\r\n        return this.m_restitution;\r\n    }\r\n    /// Set the coefficient of restitution. This will _not_ change the restitution of\r\n    /// existing contacts.\r\n    SetRestitution(restitution) {\r\n        this.m_restitution = restitution;\r\n    }\r\n    /// Get the fixture's AABB. This AABB may be enlarge and/or stale.\r\n    /// If you need a more accurate AABB, compute it using the shape and\r\n    /// the body transform.\r\n    GetAABB(childIndex) {\r\n        ///b2Assert(0 <= childIndex && childIndex < this.m_proxyCount);\r\n        return this.m_proxies[childIndex].aabb;\r\n    }\r\n    /// Dump this fixture to the log file.\r\n    Dump(log, bodyIndex) {\r\n        log(\"    const fd: b2FixtureDef = new b2FixtureDef();\\n\");\r\n        log(\"    fd.friction = %.15f;\\n\", this.m_friction);\r\n        log(\"    fd.restitution = %.15f;\\n\", this.m_restitution);\r\n        log(\"    fd.density = %.15f;\\n\", this.m_density);\r\n        log(\"    fd.isSensor = %s;\\n\", (this.m_isSensor) ? (\"true\") : (\"false\"));\r\n        log(\"    fd.filter.categoryBits = %d;\\n\", this.m_filter.categoryBits);\r\n        log(\"    fd.filter.maskBits = %d;\\n\", this.m_filter.maskBits);\r\n        log(\"    fd.filter.groupIndex = %d;\\n\", this.m_filter.groupIndex);\r\n        this.m_shape.Dump(log);\r\n        log(\"\\n\");\r\n        log(\"    fd.shape = shape;\\n\");\r\n        log(\"\\n\");\r\n        log(\"    bodies[%d].CreateFixture(fd);\\n\", bodyIndex);\r\n    }\r\n    // We need separation create/destroy functions from the constructor/destructor because\r\n    // the destructor cannot access the allocator (no destructor arguments allowed by C++).\r\n    Create(/*body: b2Body,*/ def) {\r\n        this.m_userData = def.userData;\r\n        this.m_friction = def.friction;\r\n        this.m_restitution = def.restitution;\r\n        // this.m_body = body;\r\n        this.m_next = null;\r\n        this.m_filter.Copy(def.filter);\r\n        this.m_isSensor = def.isSensor;\r\n        // this.m_shape = def.shape.Clone();\r\n        // Reserve proxy space\r\n        // const childCount = m_shape->GetChildCount();\r\n        // m_proxies = (b2FixtureProxy*)allocator->Allocate(childCount * sizeof(b2FixtureProxy));\r\n        // for (int32 i = 0; i < childCount; ++i)\r\n        // {\r\n        //   m_proxies[i].fixture = NULL;\r\n        //   m_proxies[i].proxyId = b2BroadPhase::e_nullProxy;\r\n        // }\r\n        // this.m_proxies = b2FixtureProxy.MakeArray(this.m_shape.GetChildCount());\r\n        this.m_proxies = b2MakeArray(this.m_shape.GetChildCount(), (i) => new b2FixtureProxy(this));\r\n        this.m_proxyCount = 0;\r\n        this.m_density = def.density;\r\n    }\r\n    Destroy() {\r\n        // The proxies must be destroyed before calling this.\r\n        ///b2Assert(this.m_proxyCount === 0);\r\n        // Free the proxy array.\r\n        // int32 childCount = m_shape->GetChildCount();\r\n        // allocator->Free(m_proxies, childCount * sizeof(b2FixtureProxy));\r\n        // m_proxies = NULL;\r\n        // this.m_shape = null;\r\n    }\r\n    // These support body activation/deactivation.\r\n    CreateProxies(broadPhase, xf) {\r\n        ///b2Assert(this.m_proxyCount === 0);\r\n        // Create proxies in the broad-phase.\r\n        this.m_proxyCount = this.m_shape.GetChildCount();\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i] = new b2FixtureProxy(this);\r\n            this.m_shape.ComputeAABB(proxy.aabb, xf, i);\r\n            proxy.treeNode = broadPhase.CreateProxy(proxy.aabb, proxy);\r\n            // proxy.fixture = this;\r\n            proxy.childIndex = i;\r\n        }\r\n    }\r\n    DestroyProxies(broadPhase) {\r\n        // Destroy proxies in the broad-phase.\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i];\r\n            proxy.treeNode.userData = null;\r\n            broadPhase.DestroyProxy(proxy.treeNode);\r\n            proxy.treeNode = null;\r\n        }\r\n        this.m_proxyCount = 0;\r\n    }\r\n    Synchronize(broadPhase, transform1, transform2) {\r\n        if (this.m_proxyCount === 0) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i];\r\n            // Compute an AABB that covers the swept shape (may miss some rotation effect).\r\n            const aabb1 = b2Fixture.Synchronize_s_aabb1;\r\n            const aabb2 = b2Fixture.Synchronize_s_aabb2;\r\n            this.m_shape.ComputeAABB(aabb1, transform1, i);\r\n            this.m_shape.ComputeAABB(aabb2, transform2, i);\r\n            proxy.aabb.Combine2(aabb1, aabb2);\r\n            const displacement = b2Vec2.SubVV(transform2.p, transform1.p, b2Fixture.Synchronize_s_displacement);\r\n            broadPhase.MoveProxy(proxy.treeNode, proxy.aabb, displacement);\r\n        }\r\n    }\r\n}\r\nb2Fixture.Synchronize_s_aabb1 = new b2AABB();\r\nb2Fixture.Synchronize_s_aabb2 = new b2AABB();\r\nb2Fixture.Synchronize_s_displacement = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","﻿\r\n//import BigInt from \"big-integer\";//bitwise operation\r\n\r\nimport { SkillAnimation } from \"../game/Skill.js\";\r\nimport { SceneObject } from \"../game/SceneObject.js\";\r\n\r\n\r\nexport class AttackInfo {\r\n\tconstructor() {\r\n\t\t/** @type {AttackPair[]} - { objectid, attack }[each monster] */\r\n\t\tthis.allAttack = [];\r\n\r\n\t\t/** @type {SkillAnimation} */\r\n\t\tthis.skill = null;\r\n\t}\r\n\t///**\r\n\t// * @param {number} objectid\r\n\t// * @returns {AttackPair}\r\n\t// */\r\n\t//addAttack(objectid) {\r\n\t//\tlet attack = new AttackPair();\r\n\t//\tattack.objectid = objectid;\r\n\t//\tthis.allAttack.push(attack);\r\n\t//}\r\n}\r\n\r\nconst symbol_targetObject = Symbol(\"targetObject\");\r\n\r\nexport class AttackPair {\r\n\tconstructor() {\r\n\t\t/** @type {SceneObject} */\r\n\t\tthis[symbol_targetObject] = null;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.objectid = null;\r\n\r\n\t\t/** @type {DamagePair[]} - { realDamage, critical }[attackCount] */\r\n\t\tthis.allDamage = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {SceneObject}\r\n\t */\r\n\tgetTargetObject() {\r\n\t\treturn this[symbol_targetObject];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneObject} targetObject\r\n\t */\r\n\tsetTargetObject(targetObject) {\r\n\t\tthis[symbol_targetObject] = targetObject;\r\n\t}\r\n\r\n\t/**\r\n\t * targetObject # $objectid\r\n\t * @returns {number}\r\n\t */\r\n\tget objectid() {\r\n\t\t/** @type {SceneObject} */\r\n\t\tlet obj = this[symbol_targetObject];\r\n\t\treturn obj.$objectid;\r\n\t}\r\n\t/**\r\n\t * set targetObject by objectid\r\n\t * @param {number} objectid\r\n\t */\r\n\tset objectid(objectid) {\r\n\t\tif (Number.isSafeInteger(objectid)) {\r\n\t\t\t/** @type {SceneObject} */\r\n\t\t\tlet obj = scene_map.lifeMgr.entities[objectid];\r\n\r\n\t\t\tthis.setTargetObject(obj);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//TODO: targetObject is player's character\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {boolean} critical\r\n\t * @returns {DamagePair}\r\n\t */\r\n\taddDamage(realDamage, critical) {\r\n\t\tthis.allDamage.push(new DamagePair(realDamage, critical));\r\n\t}\r\n}\r\n\r\nexport class DamagePair {\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {boolean} critical\r\n\t */\r\n\tconstructor(realDamage, critical) {\r\n\t\t/** @type {number} */\r\n\t\tthis.realDamage = realDamage;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.critical = critical;\r\n\t}\r\n\r\n\t_validating() {\r\n\t\treturn Number.isSafeInteger(this.realDamage);\r\n\t}\r\n\r\n\t/** @param {IRenderer} */\r\n\t_draw(renderer) {\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tif (Number.isSafeInteger(this.realDamage)) {\r\n\t\t\t//draw\r\n\t\t}\r\n\t\telse {// debug, invalid damage\r\n\t\t\tctx.filter = \"gray-scale(1)\";\r\n\t\t\t//draw\r\n\t\t\tctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { LifeRenderer } from \"./LifeRenderer.js\";\r\n\r\n\r\nwindow.MobAnimationSpeed = 1;\r\n\r\nwindow.$mob_name = {};\r\n\r\n/**\r\n * Mob basic infomation\r\n * Mob antion(animation) collection\r\n */\r\nexport class MobRenderer extends LifeRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t//[\"info\",\"stand\",\"hit1\",\"die1\",\"skill1\",\"skill2\",\"skill3\",\"skill4\",\"skill5\",\"attack1\",\"attack2\",\"attack3\",\"attack4\",\"attack5\"]\r\n\t}\r\n\r\n\tstatic get __info() {\r\n\t\treturn {\r\n\t\t\t\"noFlip\": 1,\r\n\t\t\t\"level\": 230,\r\n\t\t\t\"maxHP\": \"??????\",\r\n\t\t\t\"maxMP\": 100000,\r\n\t\t\t\"speed\": 0,\r\n\t\t\t\"PADamage\": 22000,\r\n\t\t\t\"PDRate\": 300,\r\n\t\t\t\"MADamage\": 24000,\r\n\t\t\t\"MDRate\": 30,\r\n\t\t\t\"acc\": 9999,\r\n\t\t\t\"eva\": 750,\r\n\t\t\t\"pushed\": 1000000000,\r\n\t\t\t\"fs\": 10,\r\n\t\t\t\"summonType\": 1,\r\n\t\t\t\"category\": 1,\r\n\t\t\t\"elemAttr\": \"P2H2F2I2S2L2D2\",\r\n\t\t\t\"mobType\": \"3N\",\r\n\t\t\t\"firstAttack\": 1,\r\n\t\t\t\"hideHP\": 1,\r\n\t\t\t\"boss\": 1,\r\n\t\t\t\"hpTagColor\": 1,\r\n\t\t\t\"hpTagBgcolor\": 5,\r\n\t\t\t\"showNotRemoteDam\": 1,\r\n\t\t\t\"defaultHP\": \"측정불가\",\r\n\t\t\t\"defaultMP\": \"측정불가\",\r\n\t\t\t\"ignoreMoveImpact\": 1\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\tif (!MobRenderer._desc[id]) {\r\n\t\t\tlet base = MobRenderer._get_desc_base_path();\r\n\t\t\tlet url = [base, Number(id)].join(\"/\");\r\n\t\t\tlet desc = await $get.data(url);\r\n\t\t\tMobRenderer._desc[id] = desc;\r\n\t\t\treturn desc;\r\n\t\t}\r\n\t\treturn MobRenderer._desc[id];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t * @param {!string} id\r\n\t */\r\n\tasync load(id) {\r\n\t\tdebugger\r\n\t\tlet result = await super.load.apply(this, arguments);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tisFlyMob() {\r\n\t\treturn !!this._raw.flySpeed;\r\n\t}\r\n\t//get info() {\r\n\t//\treturn this._raw.info;\r\n\t//}\r\n\t\r\n\t_getFirstAttackName() {\r\n\t\tconst firstAttack = this._raw.info.firstAttack;\r\n\t\treturn \"skill\" + firstAttack;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tstamp *= window.MobAnimationSpeed;\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\t\r\n\tstatic get _animations() {\r\n\t\treturn ['\"stand\"', '\"fly\"', '\"move\"', '\"jump\"', \"`hit${$index}`\", \"`die${$index}`\", \"`skill${$index}`\"/*, \"`attack${$index}`\"*/];\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\treturn \"/String/Mob\";\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Mob\";\r\n\t}\r\n}\r\nMobRenderer._desc = {};\r\n\r\n","﻿\r\nimport { LifeRenderer } from './LifeRenderer.js';\r\n\r\nwindow.NpcAnimationSpeed = 1;\r\n\r\n//Npc: 9090004 => ad-tv\r\n\r\nexport class NpcRenderer extends LifeRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\tif (!NpcRenderer._desc[id]) {\r\n\t\t\tlet base = NpcRenderer._get_desc_base_path();\r\n\t\t\tlet url = [base, Number(id)].join(\"/\");\r\n\t\t\tlet desc = await $get.data(url);\r\n\t\t\tNpcRenderer._desc[id] = desc;\r\n\t\t\treturn desc;\r\n\t\t}\r\n\t\treturn NpcRenderer._desc[id];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tstamp *= window.NpcAnimationSpeed;\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\tstatic get _animations() {\r\n\t\treturn ['\"stand\"'/*, \"`condition${$index}`\"*/];\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\treturn \"/String/Npc\";\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Npc\";\r\n\t}\r\n};\r\nNpcRenderer._desc = {};\r\n","\r\nimport { ColorRGB, ImageDataHelper } from \"../IRenderer.js\";\r\nimport { Vec2, Rectangle } from \"../math.js\";\r\nimport { Sprite } from \"../Sprite.js\";\r\n\r\n\r\n/**\r\n * @param {HTMLImageElement} image\r\n */\r\nfunction whiteToRed(image) {\r\n\tlet helper = new ImageDataHelper();\r\n\tlet imagedata = helper.imageToImagedata(image);\r\n\r\n\tfor (let y = 0; y < imagedata.height; ++y) {\r\n\t\tfor (let x = 0; x < imagedata.width * 4; ++x) {\r\n\t\t\t//imagedata.data[y * imagedata.width * 4 + x * 4 + 0] = 0;\r\n\t\t\timagedata.data[y * imagedata.width * 4 + x * 4 + 1] = 0;\r\n\t\t\timagedata.data[y * imagedata.width * 4 + x * 4 + 2] = 0;\r\n\t\t\t//imagedata.data[y * imagedata.width * 4 + x * 4 + 3] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\treturn helper.imagedataToDataURL(imagedata);\r\n}\r\n\r\n/**\r\n * @param {number} min\r\n * @param {number} range\r\n * @returns {number} min + Random(-1, 1) * range\r\n */\r\nfunction rand_r(min, range) {\r\n\treturn min - range + Math.random() * range * 2;\r\n}\r\n\r\n/**\r\n * @param {ColorRGB} color\r\n * @param {ColorRGB} colorVar\r\n * @returns {ColorRGB}\r\n */\r\nfunction rand_color2i(color, colorVar) {\r\n\tconst col = ColorRGB.fromInt24(color);\r\n\tconst cv = ColorRGB.fromInt24(colorVar);\r\n\tconst r = Math.max(0, Math.min(rand_r(col.r, cv.r), 255));\r\n\tconst g = Math.max(0, Math.min(rand_r(col.g, cv.g), 255));\r\n\tconst b = Math.max(0, Math.min(rand_r(col.b, cv.b), 255));\r\n\t\r\n\treturn new ColorRGB(r, g, b);\r\n}\r\nfunction _rand_color2i(color, colorVar) {\r\n\treturn ColorRGB.fromInt24(Math.max(0, Math.min(rand_r(color, colorVar), 255)));\r\n}\r\n\r\nexport class Particle {\r\n\t/** @param {ParticleSystem} ps */\r\n\tconstructor(ps) {\r\n\t\tthis._initParam(ps);\r\n\r\n\t\tthis.life = 0;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.pos = new Vec2(0, 0);\r\n\t\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.scale = this.startScale;\r\n\t\tthis.color = new ColorRGB(255, 255, 255);\r\n\t}\r\n\r\n\t/** @param {ParticleSystem} ps */\r\n\t_initParam(ps) {\r\n\t\tthis.lifeMax = rand_r(ps.life, ps.lifeVar);\r\n\r\n\t\tconst angle = rand_r(ps.angle, ps.angleVar) * Math.PI / 180;//?rand_r\r\n\r\n\t\tif (1) {\r\n\t\t\tthis.startColor = rand_color2i(ps.startColor, ps.startColorVar);\r\n\t\t\tthis.color_d = rand_color2i(ps.endColor, ps.endColorVar).selfSub(this.startColor);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.startColor = _rand_color2i(ps.startColor, ps.startColorVar);\r\n\t\t\tthis.color_d = _rand_color2i(ps.endColor, ps.endColorVar).selfSub(this.startColor);\r\n\t\t}\r\n\r\n\t\t//unit: px\r\n\t\tconst sizeX = Math.max(1, ps.texture.width);\r\n\t\tconst sizeY = Math.max(1, ps.texture.height);\r\n\t\t//const size = Math.sqrt(sizeX ** 2 + sizeY ** 2);\r\n\t\tconst size = sizeX == 1 ? sizeY:(sizeY == 1 ? 1 : Math.min(sizeX, sizeY));\r\n\r\n\t\tthis.startScale = rand_r(ps.startSize, ps.startSizeVar) / size;\r\n\t\tconst endScale = rand_r(ps.endSize, ps.endSizeVar) / size;\r\n\t\tthis.scale_d = endScale - this.startScale;\r\n\r\n\t\tthis.startX = rand_r(ps.posX, ps.posVarX);\r\n\t\tthis.startY = rand_r(ps.posY, ps.posVarY);\r\n\r\n\t\tthis.emitterMode = ps.emitterType ? 1 : 0;\r\n\r\n\t\t// Mode A: Gravity + tangential accel + radial accel\r\n\t\tif (!this.emitterMode) {//Particle.EMITTER_MODE.GRAVITY\r\n\t\t\t// gravity\r\n\t\t\tthis.gravity = new Vec2(ps.GRAVITY.x, ps.GRAVITY.y);\r\n\r\n\t\t\t// speed\r\n\t\t\tconst speed = rand_r(ps.GRAVITY.speed, ps.GRAVITY.speedVar);\r\n\t\t\t\r\n\t\t\t/** @type {Vec2} - velocity */\r\n\t\t\tthis.dir = new Vec2(Math.cos(angle) * speed, -Math.sin(angle) * speed);\r\n\r\n\t\t\t// radial acceleration\r\n\t\t\tthis.radialAccel = rand_r(ps.GRAVITY.radialAccel || 0, ps.GRAVITY.radialAccelVar || 0);\r\n\r\n\t\t\t// tangential acceleration\r\n\t\t\tthis.tangentialAccel = rand_r(ps.GRAVITY.tangentialAccel || 0, ps.GRAVITY.tangentialAccelVar || 0);\r\n\r\n\t\t\t// rotation is dir\r\n\t\t\tthis.rotationIsDir = ps.GRAVITY.rotationIsDir ? true : false;\r\n\t\t}\r\n\t\telse if (this.emitterMode == 1) {\r\n\t\t\talert(\"Particle.EMITTER_MODE.RADIUS\");\r\n\t\t}\r\n\t}\r\n\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tconst dt = stamp / 1000;\r\n\t\tconst tp = Math.max(0, Math.min(this.life / this.lifeMax, 1));\r\n\r\n\t\t// update position\r\n\t\t{\r\n\t\t\tlet radial;\r\n\r\n\t\t\t// radial acceleration\r\n\t\t\tif (this.pos.x || this.pos.y) {\r\n\t\t\t\tradial = (new Vec2(this.pos.x, this.pos.y)).normalize();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tradial = new Vec2(0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tlet tangential = radial.clone();\r\n\t\t\tradial = radial.mul(this.radialAccel);\r\n\r\n\t\t\t// tangential acceleration\r\n\t\t\tlet newy = tangential.x;\r\n\t\t\ttangential.x = -tangential.y;\r\n\t\t\ttangential.y = newy;\r\n\r\n\t\t\ttangential = tangential.mul(this.tangentialAccel);\r\n\r\n\t\t\tlet _radial = radial.add(tangential);\r\n\t\t\t_radial = _radial.add(this.gravity);\r\n\t\t\t_radial = _radial.mul(dt);\r\n\t\t\t\r\n\t\t\tthis.dir = this.dir.add(_radial);\r\n\r\n\t\t\tlet _dir = this.dir.mul(dt);\r\n\t\t\tthis.pos = this.pos.add(_dir);\r\n\t\t}\r\n\r\n\t\tthis.scale = Math.max(0, this.startScale + this.scale_d * tp);\r\n\t\tthis.color = ColorRGB.add(this.startColor, ColorRGB.scale(this.color_d, tp));\r\n\t\tthis.opacity = 1 - tp;\r\n\t\t\r\n\t\tthis.life += stamp;\r\n\t}\r\n\tisEnd() {\r\n\t\treturn this.life >= this.lifeMax;\r\n\t}\r\n\tdraw(renderer, texture, mx, my) {\r\n\t\tconst scale = this.scale;\r\n\t\tconst x = (this.startX + this.pos.x + mx);\r\n\t\tconst y = (this.startY + this.pos.y + my);\r\n\t\t\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\r\n\t\tlet color = this.color.toHSV();\r\n\t\trenderer.drawColoredGraph2(texture, x, y, scale, scale, color);\r\n\t}\r\n}\r\n\r\nclass _ParticleGroupData {\r\n\tconstructor() {\r\n\t\tthis.GRAVITY = new Vec2();\r\n\t\tthis.life = 0;\r\n\t\tthis.lifeVar = 0;\r\n\t\tthis.duration = 0;\r\n\t\tthis.totalParticle = 0;\r\n\t}\r\n}\r\n\r\nexport class ParticleGroup extends _ParticleGroupData {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {Particle[]} */\r\n\t\tthis.particles = [];\r\n\r\n\t\t/** @type {number} time_in_ms:float */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} timeElapsed_in_ms:float */\r\n\t\tthis.delta = 0;\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = Infinity;\r\n\t\t\r\n\t\tthis.duration = -1;//Infinity\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet pg = new ParticleGroup();\r\n\t\tObject.assign(pg, this);\r\n\t\tpg.particles = [];\r\n\t\tpg.time = 0;\r\n\t\tpg.delta = 0;\r\n\t\treturn pg;\r\n\t}\r\n\r\n\tevaluate() {\r\n\t\tlet totalTime = this.totalParticle * this.delay;\r\n\r\n\t\tfor (let i = 0; i < this.totalParticle; ++i) {\r\n\t\t\tconst particle = new Particle(this);\r\n\t\t\tconst t = totalTime - i * this.delay;\r\n\t\t\tparticle.life += t;\r\n\t\t\tparticle.update(t);\r\n\t\t\tparticle.life = t;\r\n\t\t\tthis.particles.push(particle);\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync load(particle_name) {\r\n\t\tthis.particleName = particle_name;\r\n\r\n\t\t/** @type ParticleGroupData */\r\n\t\tlet data = await $get.data(this._particle_path);\r\n\t\t\r\n\t\tObject.assign(this, data);\r\n\r\n\t\tthis.GRAVITY.x = data.GRAVITY.x;\r\n\t\tthis.GRAVITY.y = data.GRAVITY.y;\r\n\r\n\t\tthis.life = data.life * 1000;\r\n\t\tthis.lifeVar = data.lifeVar * 1000;\r\n\t\tthis.duration = data.duration * 1000;\r\n\r\n\t\t//this.totalParticle = 2;//debug\r\n\t\tthis.delay = this.life / this.totalParticle;\r\n\r\n\t\tif (_experimental_particle) {\r\n\t\t\tconst that = this;\r\n\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\tlet image = new Image();\r\n\t\t\t\timage.onload = function () {\r\n\t\t\t\t\tlet texture = new Sprite(data.texture);\r\n\t\t\t\t\tif (_experimental_particle === true) {\r\n\t\t\t\t\t\ttexture._url = whiteToRed(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttexture._url = \"data:image/svg+xml;utf-8,\" + encodeURIComponent(`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${this.naturalWidth}\" height=\"${this.naturalHeight}\">\r\n\t<defs>\r\n\t\t<mask id=\"Mask\">\r\n\t\t\t<image xlink:href=\"${new URL(\"images\" + that._texture_base_path, window.location).href}\"/>\r\n\t\t</mask>\r\n\t</defs>\r\n\t<g>\r\n\t\t<rect width=\"${this.naturalWidth}\" height=\"${this.naturalHeight}\" fill=\"red\" mask=\"url(#Mask)\"/>\r\n\t</g>\r\n</svg>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.texture = texture;\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t\timage.src = \"images\" + that._texture_base_path;\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.texture = new Sprite(data.texture);\r\n\t\t\tthis.texture._url = \"images\" + this._texture_base_path;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tif (this.particles.length < this.totalParticle && (!this.time || this.time > this.delay)) {\r\n\t\t\tthis.particles.push(new Particle(this));\r\n\t\t\tthis.time = 0;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.particles.length; ++i) {\r\n\t\t\tconst particle = this.particles[i];\r\n\t\t\tif (particle.isEnd()) {\r\n\t\t\t\tthis.particles.splice(i, 1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparticle.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.time += stamp;\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn (this.delta > this.duration && this.duration != -1);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Rectangle} viewRect\r\n\t * @param {number} mx - translate x\r\n\t * @param {number} my - translate y\r\n\t */\r\n\trender(renderer, viewRect, mx, my) {\r\n\t\tconst ctx = renderer.ctx;\r\n\r\n\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x), Math.trunc(-$gv.m_viewRect.y));\r\n\t\tif (this.blendFuncDst != 6 || this.blendFuncSrc != 5) {\r\n\t\t\tctx.globalCompositeOperation = \"lighter\";\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < this.particles.length; ++i) {\r\n\t\t\tconst particle = this.particles[i];\r\n\t\t\tconst x = this.x + mx;\r\n\t\t\tconst y = this.y + my;\r\n\t\t\tconst hw = this.texture.width * particle.scale;\r\n\t\t\tconst hh = this.texture.height * particle.scale;\r\n\t\t\t\r\n\t\t\tif (!viewRect || viewRect.collide4f2(x + particle.startX + particle.pos.x, y + particle.startY + particle.pos.y, hw, hh)) {\r\n\t\t\t\tparticle.draw(renderer, this.texture, x, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//reset\r\n\t\tctx.globalCompositeOperation = \"source-over\";\r\n\t\trenderer.globalAlpha = 1;\r\n\t}\r\n\t\r\n\tget _particle_path() {\r\n\t\treturn [\"/Effect/particle\", this.particleName].join(\"/\");\r\n\t}\r\n\tget _texture_base_path() {\r\n\t\treturn [this._particle_path, \"texture\"].join(\"/\");\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n","﻿\r\nimport { AddInitTask } from \"../init.js\";\r\n\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\nimport { LifeRenderer } from \"./Renderer/LifeRenderer.js\";\r\nimport { MobRenderer } from \"./Renderer/MobRenderer.js\";\r\nimport { NpcRenderer } from \"./Renderer/NpcRenderer.js\";\r\n\r\nimport { ParticleGroup } from \"./Renderer/ParticleSystem.js\";\r\n\r\nimport { World } from \"./Physics/World.js\";\r\nimport { Ground } from \"./Physics/Ground.js\";\r\nimport { PMob } from \"./Physics/PMob.js\";\r\nimport { SceneObject } from \"./SceneObject.js\";\r\n\r\n\r\nwindow.enable_skeletal_anim = true;\r\n\r\n/**\r\n * map sprite data\r\n */\r\nconst map_sprite = {\r\n\tBack: {},\r\n\tObj: {},\r\n\tTile: {},\r\n};\r\n\r\nwindow.$map_sprite = map_sprite;\r\n\r\n$gv.allQuest = {};\r\n\r\nasync function map_load_package(cat, pack) {\r\n\tif (!cat || !pack) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!map_sprite[cat][pack]) {\r\n\t\tlet url = `/Map/${cat}/${pack}`;\r\n\t\t\r\n\t\tmap_sprite[cat][pack] = await $get.data(url);\r\n\r\n\t\tif (map_sprite[cat][pack] == null) {\r\n\t\t\tconsole.warn(\"Empty package: \" + url);\r\n\t\t}\r\n\t}\r\n\tif (map_sprite[cat][pack]) {\r\n\t\treturn map_sprite[cat][pack];\r\n\t}\r\n\t//throw new Error();\r\n}\r\n\r\n\r\n/**\r\n * Map texture\r\n */\r\nclass MapTexture extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t * @param {!MapTexture} texture0\r\n\t */\r\n\tconstructor(_raw, url, texture0) {\r\n\t\tsuper(_raw, url);\r\n\t\t//this.className = _path;\r\n\r\n\t\ttexture0 = texture0 || MapTexture.raw_default;\r\n\t\t\r\n\t\tthis.a0 = this._get(-1, \"a0\", Number);\r\n\t\tthis.a1 = this._get(-1, \"a1\", Number);\r\n\r\n\t\tthis.movetype = this._get(texture0.movetype, \"moveType\", Number);\r\n\t\tthis.movew = this._get(texture0.movew, \"moveW\", Number);\r\n\t\tthis.moveh = this._get(texture0.moveh, \"moveH\", Number);\r\n\t\tthis.movep = this._get(texture0.movep, \"moveP\", Number);\r\n\t\tthis.mover = this._get(texture0.mover, \"moveR\", Number);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} f - flip\r\n\t * @param {number} px - position.x:int\r\n\t * @param {number} py - position.y:int\r\n\t * @param {number} time - movement_animation:float\r\n\t * @param {number} delta - graph_animation:float\r\n\t * @param {maple_scene_label} border\r\n\t */\r\n\tdraw(renderer, f, px, py, time, delta) {\r\n\t\tlet ratio = time / this.delay;\r\n\t\tlet alpha = (0 <= this.a0 || 0 <= this.a1 ? ((0 > this.a0 ? 0 : this.a0) * (1.0 - ratio) + (0 > this.a1 ? 0 : this.a1) * ratio) : 255.0);\r\n\t\tlet angle = 0;\r\n\r\n\t\tswitch (this.movetype) {\r\n\t\t\tcase 1: px = px + this.movew * Math.sin(0 == this.movep ? (delta / 1000.0) : (delta * 2.0 * Math.PI / this.movep)); break;\r\n\t\t\tcase 2: py = py + this.moveh * Math.sin(0 == this.movep ? (delta / 1000.0) : (delta * 2.0 * Math.PI / this.movep)); break;\r\n\t\t\tcase 3: if (0 != this.mover) angle = delta / this.mover; break;\r\n\t\t}\r\n\t\t\r\n\t\tlet ctx = renderer.ctx;\r\n\t\tfunction axis(x, y, w, h, c1, c2) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t\tctx.lineTo(x + w, y);\r\n\t\t\tstroke(c1, c2);\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t\tctx.lineTo(x, y + h);\r\n\t\t\tstroke(c2, c1);\r\n\t\t}\r\n\t\tfunction stroke(c1, c2) {\r\n\t\t\tctx.lineWidth = 3;\r\n\t\t\tctx.strokeStyle = c1;\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t\trenderer.loadIdentity();\r\n\t\trenderer.translate(Math.trunc(-$gv.m_viewRect.x + 0.5), Math.trunc(-$gv.m_viewRect.y + 0.5));\r\n\t\t{\r\n\t\t\trenderer.globalAlpha = Math.max(0, Math.min(alpha / 255, 1));\r\n\r\n\t\t\trenderer._drawRotaGraph(this, px, py, angle, f);\r\n\t\t}\r\n\t}\r\n}\r\nMapTexture.raw_default = {\r\n\ta0: -1,\r\n\ta1: -1,\r\n\tmovetype: 0,\r\n\tmovew: 0,\r\n\tmoveh: 0,\r\n\tmovep: 0,\r\n\tmover: 0,\r\n};\r\n\r\n/**\r\n * Map clip-texture\r\n */\r\nclass MapTextureClip extends MapTexture {\r\n\tconstructor(_raw, url) {\r\n\t\tsuper(_raw, url);\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.clip = new Rectangle();//zero Rectangle\r\n\t}\r\n}\r\n\r\nclass MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tif (_raw == null) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.error(_raw);\r\n\t\t}\r\n\t\tthis._raw = _raw;\r\n\r\n\r\n\t\t/** @type {MapTexture[]} */\r\n\t\tthis.textures = [];\r\n\r\n\t\t/** @type {number} int */\r\n\t\tthis.frame = 0;\r\n\r\n\t\t/** @type {number} time_in_ms:float */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} timeElapsed_in_ms:float */\r\n\t\tthis.delta = 0;\r\n\r\n\r\n\t\t/** @type {{[questId:string]: number}} */\r\n\t\tthis.quest = _raw.quest;\r\n\r\n\t\tfor (let qid in _raw.quest) {\r\n\t\t\tif (!$gv.allQuest[qid]) {\r\n\t\t\t\t$gv.allQuest[qid] = new Set();\r\n\t\t\t}\r\n\t\t\t$gv.allQuest[qid].add(_raw.quest[qid]);\r\n\t\t}\r\n\t\t\r\n\t\tthis._load_object_info();\r\n\t\tthis._load_back_info();\r\n\t\tthis._load_tile_info();\r\n\r\n\t\tthis.aabb = null;\r\n\t\tthis.display_aabb = false;\r\n\t\tthis.aabb_color = null;\r\n\t\t\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tthis.__max_repeat_count = 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_load_object_info() {\r\n\t\t/** @type{number} obj-type */\r\n\t\tthis.type = this._get(0, \"sign\", Number);\r\n\r\n\t\t/** @type{number} x */\r\n\t\tthis.x = this._get(0, \"x\", Number);\r\n\r\n\t\t/** @type{number} y */\r\n\t\tthis.y = this._get(0, \"y\", Number);\r\n\r\n\t\t/** @type{number} z */\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\t/** @type{number} zM */\r\n\t\tthis.zM = this._get(0, \"zM\", Number);\r\n\r\n\t\t/** @type{number} flip */\r\n\t\tthis.f = this._get(0, \"f\", Number);\r\n\t\t\r\n\t\t/** @type{name} named object */\r\n\t\tthis.name = this._raw.name;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;//data url //debug\r\n\t}\r\n\t_load_back_info() {\r\n\t\t/** @type {number} move type */\r\n\t\tthis.typeb = this._get(0, \"type\", Number);\r\n\t\tif (this.typeb < 0 || this.typeb > 7) {\r\n\t\t\talert(\"MapBackBase.typeb: \" + this.typeb);\r\n\t\t\tconsole.warn(\"MapBackBase.typeb: \" + this.typeb);\r\n\t\t}\r\n\r\n\t\t/** @type {number} a */\r\n\t\tthis.a = this._get(0, \"a\", Number);\r\n\r\n\t\t/** @type {number} rx */\r\n\t\tthis.rx = this._get(0, \"rx\", Number);\r\n\r\n\t\t/** @type {number} ry */\r\n\t\tthis.ry = this._get(0, \"ry\", Number);\r\n\r\n\t\t/** @type {number} center y */\r\n\t\tthis.cx = this._get(0, \"cx\", Number);\r\n\r\n\t\t/** @type {number} center y */\r\n\t\tthis.cy = this._get(0, \"cy\", Number);\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.backTags = this._raw.backTags;\r\n\t}\r\n\t_load_tile_info() {\r\n\t\t/** @type{number} flow */\r\n\t\tthis.flow = this._get(0, \"flow\", Number);\r\n\t\t\r\n\t\tif (this.flow & 1 && !this.cx) {\r\n\t\t\tthis.cx = 1000;\r\n\t\t}\r\n\t\tif (this.flow & 2 && !this.cy) {\r\n\t\t\tthis.cy = 1000;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {Promise}\r\n\t */\r\n\tload() {\r\n\t\tlet texture0 = this._load_texture(0, null);\r\n\t\tthis.textures[0] = texture0;\r\n\r\n\t\tfor (let i = 1; i in this._texture_raw; ++i) {//not array\r\n\t\t\tthis.textures[i] = this._load_texture(i, texture0);\r\n\t\t}\r\n\t\tthis.__calc_aabb();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t */\r\n\t_load_texture() {\r\n\t\t//nothing\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tunload() {\r\n\t\tthis.textures = [];\r\n\t}\r\n\t\r\n\t__calc_aabb() {\r\n\t\tif (this.textures.length >= 1) {\r\n\t\t\tlet mover = 0;\r\n\t\t\tfor (let i = 0; i < this.textures.length; ++i) {\r\n\t\t\t\tlet texture = this.textures[i];\r\n\t\t\t\tmover = mover | texture.mover;\r\n\t\t\t}\r\n\t\t\tconst aabb = this.compute_max_rectangle();\r\n\t\t\tif (mover) {\r\n\t\t\t\tconst r = Math.round(Math.sqrt(aabb.width ** 2 + aabb.height ** 2));\r\n\t\t\t\tconst hr = Math.round(r * 0.5);\r\n\t\t\t\tthis.aabb = new Rectangle(this.x - hr, this.y - hr, r, r);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.aabb = aabb;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (propertyName in this._raw) {\r\n\t\t\tif (converter) {\r\n\t\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this._raw[propertyName];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 1) {\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.textures[this.frame].delay) {\r\n\t\t\t\tthis.frame = ++this.frame;\r\n\r\n\t\t\t\tthis.time = 0;\r\n\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tthis.frame = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\r\n\t\tif ($gv.m_editor_mode && this.aabb) {\r\n\t\t\tthis.$editor_mouse();\r\n\t\t}\r\n\t}\r\n\t_update_and_preload(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\t\t\r\n\t\tif (fc > 1) {\r\n\t\t\tconst texture = this.textures[this.frame];\r\n\r\n\t\t\tthis.time = this.time + stamp;\r\n\t\t\t\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.time > texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame;\r\n\r\n\t\t\t\tthis.time = 0;\r\n\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tthis.frame = 0;\r\n\r\n\t\t\t\t\tdelete this.update;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst next_texture = this.textures[this.frame + 1];\r\n\t\t\tif (next_texture && !next_texture.isLoaded()) {\r\n\t\t\t\tnext_texture.__loadTexture();\r\n\t\t\t}\r\n\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t\t\r\n\t\tif ($gv.m_editor_mode && this.aabb) {\r\n\t\t\tthis.$editor_mouse();\r\n\t\t}\r\n\t}\r\n\t$editor_mouse() {\r\n\t\tconst vrect = $gv.m_viewRect;\r\n\t\tconst mcx = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\tconst mcy = $gv.m_viewRect.top + $gv.mouse_y;\r\n\t\tif (this.typeb == 0 && this.aabb.collide4f2(mcx, mcy, 1, 1))\r\n\t\t{\r\n\t\t\tthis.display_aabb = true;\r\n\t\t\tif ($gv.mouse_dl == 1 && (window.m_selected_object != this || window.m_selected_object == null)) {\r\n\t\t\t\tthis.$select();\r\n\t\t\t}\r\n\t\t\telse if (window.m_hover_object == null) {\r\n\t\t\t\twindow.m_hover_object = this;\r\n\t\t\t\tthis.aabb_color = \"rgba(0,255,0,0.25)\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.aabb_color = \"rgba(0,0,255,0.25)\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.$unselect();\r\n\t\t}\r\n\t\tif (window.m_selected_object == this) {\r\n\t\t\tthis.display_aabb = true;\r\n\t\t\tthis.aabb_color = \"rgba(255,0,0,0.5)\";\r\n\t\t}\r\n\t}\r\n\t$select() {\r\n\t\tif (window.m_selected_object) {\r\n\t\t\twindow.m_selected_object.$unselect();//prev\r\n\t\t}\r\n\t\twindow.m_selected_object = this;\r\n\t\twindow.m_hover_object = null;\r\n\t\t$gv.mouse_dl = 0;\r\n\t}\r\n\t$unselect() {\r\n\t\tthis.display_aabb = false;\r\n\t}\r\n\t$isRepeatX() {\r\n\t\treturn this.typeb == 1 || this.typeb == 4;\r\n\t}\r\n\t$isRepeatY() {\r\n\t\treturn this.typeb == 2 || this.typeb == 5;\r\n\t}\r\n\t\r\n\tcompute_rectangle(index) {\r\n\t\tconst texture = this.textures[index];\r\n\t\tif (texture) {\r\n\t\t\tconst width = texture.width;\r\n\t\t\tconst height = texture.height;\r\n\r\n\t\t\treturn new Rectangle(this.x - (this.f ? -texture.x + width : texture.x), this.y - texture.y, width, height);\r\n\t\t}\r\n\t}\r\n\tcompute_max_rectangle() {\r\n\t\tif (this.textures.length > 0) {\r\n\t\t\tlet { left, top, right, bottom } = this.compute_rectangle(0);\r\n\t\t\t\t\r\n\t\t\tfor (let j = 1; j < this.textures.length; ++j) {\r\n\t\t\t\tlet rect = this.compute_rectangle(j);\r\n\t\t\t\t\r\n\t\t\t\tleft = Math.min(left, rect.left);\r\n\t\t\t\ttop = Math.min(top, rect.top);\r\n\t\t\t\tright = Math.max(right, rect.right);\r\n\t\t\t\tbottom = Math.max(bottom, rect.bottom);\r\n\t\t\t}\r\n\t\t\treturn Rectangle.parse(left, top, right, bottom);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} index_of_texture\r\n\t * @param {number} mx - move x\r\n\t * @param {number} my - move x\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t__draw_texture(renderer, index_of_texture, mx, my, viewRect) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((--this.__max_repeat_count) <= 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this.typeb != 0 || (!this.aabb || this.aabb.collide(viewRect))) {\r\n\t\t\tlet texture = this.textures[index_of_texture];\r\n\r\n\t\t\tif (index_of_texture && !texture.isLoaded()) {\r\n\t\t\t\t// find loaded texture\r\n\t\t\t\tfor (let i = index_of_texture - 1; i >= 0; --i) {\r\n\t\t\t\t\ttexture = this.textures[index_of_texture];\r\n\t\t\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttexture.draw(renderer, this.f, this.x + mx, this.y + my, this.time, this.delta);//MapleSceneTexture#draw\r\n\t\t}\r\n\t\t\r\n\t\tif ($gv.m_display_selected_object && $gv.m_editor_mode && this.aabb && this.display_aabb) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\t\t\tconst x = Math.trunc((-viewRect.left + 0.5) + this.aabb.left);\r\n\t\t\tconst y = Math.trunc((-viewRect.top + 0.5) + this.aabb.top);\r\n\t\t\t\r\n\t\t\trenderer.loadIdentity();\r\n\r\n\t\t\trenderer.globalAlpha = 1;\r\n\t\t\t\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x, y, this.aabb.width, this.aabb.height);\r\n\t\t\tctx.fillStyle = this.aabb_color || \"rgba(20,255,20,0.5)\";//\r\n\t\t\tctx.fill();\r\n\t\t\t\r\n\t\t\tctx.lineWidth = 3;\r\n\t\t\t//ctx.lineCap = \"round\";\r\n\r\n\t\t\tctx.setLineDash([3, 3]);\r\n\t\t\tctx.lineDashOffset = 0;\r\n\t\t\tctx.strokeStyle = \"rgba(0,0,0,0.5)\";\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.setLineDash([3, 3]);\r\n\t\t\tctx.lineDashOffset = 3;\r\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.5)\";\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.setLineDash([]);\r\n\t\t\tctx.lineWidth = 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @protected\r\n\t * @param {IRenderer} renderer\r\n\t * @param {int} mx\r\n\t * @param {int} my\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t__draw(renderer, mx, my, viewRect) {\r\n\t\tthis.__draw_texture(renderer, this.frame, mx, my, viewRect);//MapleSceneTexture#draw\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} horizontal\r\n\t * @param {boolean} vertical\r\n\t * @param {number} mx - int\r\n\t * @param {number} my - int\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t_draw(renderer, horizontal, vertical, mx, my, viewRect) {\r\n\t\tlet texture = this.textures[this.frame];\r\n\t\tif (texture == null) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// viewRect - canvas rectangle\r\n\t\tlet { left, top, right, bottom } = viewRect;\r\n\t\t// image position\r\n\t\tlet ix = this.x - (this.f ? -texture.x + texture.width : texture.x);\r\n\t\tlet iy = this.y - texture.y;\r\n\t\t// tile size\r\n\t\tlet tw = 0 == this.cx ? texture.width : this.cx;\r\n\t\tlet th = 0 == this.cy ? texture.height : this.cy;\r\n\t\t// tile area\r\n\t\tlet x1 = left - (tw + (left - mx - ix) % tw);\r\n\t\tlet y1 = top - (th + (top - my - iy) % th);\r\n\t\tlet x2 = right + (tw - (right - mx - ix) % tw);\r\n\t\tlet y2 = bottom + (th - (bottom - my - iy) % th);\r\n\t\t\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tthis.__max_repeat_count = 1024;\r\n\t\t}\r\n\r\n\t\tif (horizontal)\r\n\t\t\tif (vertical)\r\n\t\t\t\tfor (let yy = y1; yy < y2; yy = yy + th)\r\n\t\t\t\t\tfor (let xx = x1; xx < x2; xx = xx + tw)\r\n\t\t\t\t\t\tthis.__draw(renderer, xx - ix, yy - iy, viewRect);\r\n\t\t\telse\r\n\t\t\t\tfor (let xx = x1; xx < x2; xx = xx + tw)\r\n\t\t\t\t\tthis.__draw(renderer, xx - ix, my, viewRect);\r\n\t\telse if (vertical)\r\n\t\t\tfor (let yy = y1; yy < y2; yy = yy + th)\r\n\t\t\t\tthis.__draw(renderer, mx, yy - iy, viewRect);\r\n\t\telse\r\n\t\t\tthis.__draw(renderer, mx, my, viewRect);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif (!this.textures.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet mrx = (this.rx + 100) * center.x / 100;\r\n\t\tlet mry = (this.ry + 100) * center.y / 100;\r\n\r\n\t\tswitch (this.typeb) {\r\n\t\t\tcase 0: this._draw(renderer, false, false, mrx, mry, viewRect); break;\r\n\t\t\tcase 1: this._draw(renderer, true, false, mrx, mry, viewRect); break;\r\n\t\t\tcase 2: this._draw(renderer, false, true, mrx, mry, viewRect); break;\r\n\t\t\tcase 3: this._draw(renderer, true, true, mrx, mry, viewRect); break;\r\n\t\t\tcase 4: this._draw(renderer, true, false, Math.trunc(this.delta / 200 * this.rx), mry, viewRect); break;\r\n\t\t\tcase 5: this._draw(renderer, false, true, mrx, Math.trunc(this.delta / 200 * this.ry), viewRect); break;\r\n\t\t\tcase 6: this._draw(renderer, true, true, Math.trunc(this.delta / 200 * this.rx), mry, viewRect); break;\r\n\t\t\tcase 7: this._draw(renderer, true, true, mrx, Math.trunc(this.delta / 200 * this.ry), viewRect); break;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _texture_base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nclass MapObject extends MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t\r\n\t\tif (this._raw.cx != null && (!this._raw.ry || this._raw.ry == -100)) {\r\n\t\t\tif (this._raw.rx) {//!= null && != 0\r\n\t\t\t\tif (this._raw.cy != null) {\r\n\t\t\t\t\tthis.typeb = 6;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.typeb = 4;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.typeb = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._raw.cy != null && (!this._raw.rx || this._raw.rx == -100)) {\r\n\t\t\tif (this._raw.ry) {//!= null && != 0\r\n\t\t\t\tif (this._raw.cx != null) {\r\n\t\t\t\t\tthis.typeb = 7;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.typeb = 5;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.typeb = 2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t * @returns {MapTexture}\r\n\t */\r\n\t_load_texture(i, texture0) {\r\n\t\tconst null_url = undefined;\r\n\t\tlet path = [\"/Map\", \"Obj\", this._texture_base_path, i].join(\"/\");\r\n\r\n\t\tlet texture = new MapTexture(this._texture_raw[i], null_url, texture0);\r\n\t\ttexture._url = path;\r\n\r\n\t\treturn texture;\r\n\t}\r\n\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.oS, this._raw.l0, this._raw.l1, this._raw.l2].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * textures; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry {\r\n\t\t\treturn map_sprite.Obj[this._raw.oS][this._raw.l0][this._raw.l1][this._raw.l2];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass MapParticle extends MapObject {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {ParticleGroup[]} */\r\n\t\tthis.groups = [];\r\n\t}\r\n\t\r\n\tasync load(particle_name) {\r\n\t\tlet pg = new ParticleGroup();\r\n\t\t\r\n\t\tawait pg.load(particle_name);\r\n\r\n\t\tlet keys = Object.keys(this._raw)\r\n\t\t\t.map(i => {\r\n\t\t\t\tlet n = parseInt(i, 10);\r\n\t\t\t\tif (Number.isSafeInteger(n)) {\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.warn(\"MapParticle.\" + particle_name + \".id: \" + i);\r\n\t\t\t\treturn null;\r\n\t\t\t})\r\n\t\t\t.filter(i => i != null);\r\n\t\t\t\r\n\t\tfor (let i of keys) {\r\n\t\t\tthis.groups[i] = pg.clone();\r\n\t\t\tthis.groups[i].x = this._raw[i].x;\r\n\t\t\tthis.groups[i].y = this._raw[i].y;\r\n\t\t\tthis.groups[i].evaluate();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tfor (let i = 0; i < this.groups.length; ++i) {\r\n\t\t\tconst pg = this.groups[i];\r\n\t\t\tpg.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tfor (let i = 0; i < this.groups.length; ++i) {\r\n\t\t\tconst pg = this.groups[i];\r\n\t\t\tlet mx = (this.rx + 100) * center.x / 100;\r\n\t\t\tlet my = (this.ry + 100) * center.y / 100;\r\n\t\t\tpg.render(renderer, viewRect, mx, my);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{particle:{[name:string]:{}}}} mapRawData\r\n\t * @param {SceneMap} sceneMap\r\n\t */\r\n\tstatic construct(mapRawData, sceneMap) {\r\n\t\tlet tasks = [];\r\n\t\tlet particleList = [];\r\n\t\tfor (let particleName in mapRawData.particle) {\r\n\t\t\tlet particleRaw = mapRawData.particle[particleName];\r\n\t\t\tlet mpp = new MapParticle(particleRaw);\r\n\t\t\ttasks.push(mpp.load(particleName));\r\n\t\t\tparticleList.push(mpp);\r\n\t\t}\r\n\t\tsceneMap.particleList = particleList;\r\n\t\treturn tasks;\r\n\t}\r\n}\r\n\r\nclass MapObjectSkeletalAnim extends MapObject {\r\n\tconstructor(_raw, url) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {SSAnim} */\r\n\t\tthis.ssanim = null;\r\n\t\t/** @type {string} */\r\n\t\tthis._fname = null;\r\n\t\t\r\n\t\t///** @type{number} tags */\r\n\t\t//this._tags = this._get(0, \"tags\", String);\r\n\t}\r\n\t/** @type {string} */\r\n\tget _folder() {\r\n\t\tconst raw = this._raw;\r\n\t\t//[\"Obj\"\t ][obj.oS][obj.l0][obj.l1][obj.l2][0    ][\"\"]\r\n\t\treturn `/Map/Obj/${raw.oS}/${raw.l0}/${raw.l1}/${raw.l2}`;\r\n\t}\r\n\tasync load() {\r\n\t\tif (SSAnim) {\r\n\t\t\tconst raw = this._raw;\r\n\t\t\tlet ssanim;\r\n\t\t\t\r\n\t\t\tssanim = new SSAnim();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tawait ssanim.load(this._folder);\r\n\t\t\t\tssanim.update(0);//init pos data\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (raw.spineRandomStart) {\r\n\t\t\t\tlet t = ssanim.anim_length * Math.random();\r\n\t\t\t\tssanim.setAnimTime(t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst r = Math.round(Math.sqrt(ssanim.width ** 2 + ssanim.height ** 2));\r\n\t\t\tconst hr = Math.round(r * 0.5);\r\n\t\t\tthis.aabb = new Rectangle(this.x - hr, this.y - hr, r, r);\r\n\t\t\t\r\n\t\t\tthis.ssanim = ssanim;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tunload() {\r\n\t\tif (this.ssanim) {\r\n\t\t\tthis.ssanim.unload();\r\n\t\t\tthis.ssanim = null;\r\n\t\t}\r\n\t}\r\n\tupdate(stamp) {\r\n\t\tthis.delta += stamp;\r\n\t\t\r\n\t\tif (this.ssanim && window.enable_skeletal_anim) {\r\n\t\t\tthis.ssanim.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect - ?? no use\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif ($gv.m_display_skeletal_anim) {\r\n\t\t\tconst x = Math.trunc((-$gv.m_viewRect.x + 0.5) + this.x);\r\n\t\t\tconst y = Math.trunc((-$gv.m_viewRect.y + 0.5) + this.y);\r\n\r\n\t\t\trenderer.ctx.setTransform(1, 0, 0, -1, x, y);\r\n\r\n\t\t\tif (this.ssanim) {\r\n\t\t\t\tthis.ssanim.render();\r\n\t\t\t}\r\n\t\t\tif (this.display_aabb) {\r\n\t\t\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x + 0.5), Math.trunc(-$gv.m_viewRect.y + 0.5));\r\n\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(this.x - this.ssanim.width * 0.5, this.y - this.ssanim.height, this.ssanim.width, this.ssanim.height);\r\n\t\t\t\tctx.fillStyle = \"rgba(20,255,20,0.5)\";\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass MapTile extends MapObject {\r\n\tconstructor(_raw, info) {\r\n\t\tsuper(_raw);\r\n\t\tthis._info = info;\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\tload() {\r\n\t\tlet texture = new MapTexture(this._texture_raw);\r\n\r\n\t\tthis.textures[0] = texture;\r\n\t\tthis.textures[0]._url = [\"/Map\", \"Tile\", this._info.tS, this._raw.u, this._raw.no].join(\"/\");\r\n\r\n\t\tthis.__calc_aabb();\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * textures; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry{\r\n\t\t\treturn map_sprite.Tile[this._info.tS][this._raw.u][this._raw.no];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._info.tS, this._raw.u, this._raw.no].join(\"/\");\r\n\t}\r\n}\r\n\r\n/**\r\n * MapEditor: Map Portal\r\n * Map graph (struct): \"Map/Map/Graph/\"\r\n */\r\nclass MapPortal extends MapObject {\r\n\tconstructor(_raw, mapRenderer) {\r\n\t\tsuper(_raw);//load x, y\r\n\t\t\r\n\t\tthis.mapRenderer = mapRenderer;\r\n\t\t\r\n\t\t/** @type {number} - to mapId */\r\n\t\tthis.tm = null;\r\n\t\t\r\n\t\t/** @type {string} - tn to pn */\r\n\t\tthis.tn = null;\r\n\r\n\t\t/** @type {string} - pn to tn */\r\n\t\tthis.pn = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.script = null;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.enable = null;\r\n\t\t\r\n\t\t/** @type {\"portalStart\"|\"portalContinue\"|\"portalExit\"} */\r\n\t\tthis.state = null;\r\n\r\n\t\t/** @type {[\"portalStart\",\"portalContinue\",\"portalExit\"]} */\r\n\t\tthis.states = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.skin = null;\r\n\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\t\r\n\t//sync\r\n\tload() {\r\n\t\tthis.tm = this._get(\"\", \"tm\", String).padStart(9, \"0\");//??\r\n\t\tthis.tn = this._get(\"\", \"tn\", String);//??\r\n\t\tthis.pn = this._get(\"\", \"pn\", String);//pt_go01 => goto portal_01\r\n\t\tthis.script = this._get(null, \"script\", String);\r\n\t\t\r\n\t\tthis.enable = this.tm != \"\" && this.tm != \"999999999\";\r\n\r\n\t\tthis._loadTexture();\r\n\t}\r\n\tunload() {\r\n\t\tif (this.body) {\r\n\t\t\tthis.body.GetWorld().DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetMap() {\r\n\t\tif (this.enable) {\r\n\t\t\treturn this.tm;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif (this.enable) {\r\n\t\t\tsuper.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t\telse if (this.__display_mode) {\r\n\t\t\tsuper.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t}\r\n\r\n\t_loadTexture() {\r\n\t\t///** @type {number} */\r\n\t\t//let type = this._raw.pt;\r\n\t\t//\r\n\t\t//let skins = this._loaded_portals[this.__display_mode][type];\r\n\t\t//\r\n\t\t//this.textures = skins.default || skins[0];\r\n\r\n\t\t//MapObject::type\r\n\t\tif (this.__display_mode == \"game\") {\r\n\t\t\tthis.type = \"p\";//??\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.type = \"q\";//??\r\n\t\t}\r\n\r\n\t\tconst _raw = MapPortal._portals_raw;\r\n\r\n\t\tthis.textures.length = 0;//clear\r\n\r\n\t\tconst type = MapPortal._type_map[this._raw.pt];\r\n\t\t\r\n\t\tif (this.__display_mode == \"editor\") {\r\n\t\t\tlet texture = new MapTexture(_raw.editor[type]);\r\n\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type].join(\"/\");\r\n\t\t\tthis.textures[0] = texture;\r\n\t\t}\r\n\t\telse if (_raw.game[type]) {\r\n\t\t\tlet skin = this.skin != null ? this.skin : \"default\";\r\n\t\t\tif (\"0\" in _raw.game[type][skin]) {//is animation frames\r\n\t\t\t\tlet textures = _raw.game[type][skin];\r\n\t\t\t\tfor (let i in textures) {\r\n\t\t\t\t\tlet texture = new MapTexture(textures[i]);\r\n\t\t\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type, skin, i].join(\"/\");\r\n\t\t\t\t\tthis.textures.push(texture);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: need default state\r\n\t\t\t\tthis.states = Object.keys(_raw.game[type][skin]);\r\n\t\t\t\tthis.state = this.states[1 % this.states.length];\r\n\r\n\t\t\t\tlet textures = _raw.game[type][skin][this.state];\r\n\t\t\t\tfor (let i in textures) {\r\n\t\t\t\t\tlet texture = new MapTexture(textures[i]);\r\n\t\t\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type, skin, this.state, i].join(\"/\");\r\n\t\t\t\t\tthis.textures.push(texture);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//reset\r\n\t\tthis.delta = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\t}\r\n\r\n\tget _texture_base_path() {\r\n\t\treturn \"/Map/MapHelper/portal\";\r\n\t}\r\n\tget _getTexturePath() {\r\n\t\tif (this.__display_mode == \"editor\") {\r\n\t\t\treturn [\"/Map/MapHelper/portal\", this.__display_mode].join(\"/\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn [\"/Map/MapHelper/portal\", this.__display_mode].join(\"/\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {\"editor\"|\"game\"}\r\n\t */\r\n\tget __display_mode() {\r\n\t\treturn $gv.m_editor_mode ? \"editor\" : \"game\";\r\n\t}\r\n\r\n\t///**\r\n\t// * @type {{editor:{[pt:number]:{[skin:number]:MapTexture}},game:{[pt:number]:{[skin:number]:MapTexture[],default:MapTexture[]}}}}\r\n\t// */\r\n\t//get _loaded_portals() {\r\n\t//\treturn MapPortal._portals;\r\n\t//}\r\n\t\r\n\tstatic async Init() {\r\n\t\tMapPortal._portals_raw = await $get.data(\"/Map/MapHelper/portal\");\r\n\r\n\t\tMapPortal._type_map = Object.keys(MapPortal._portals_raw.editor);\r\n\t}\r\n}\r\nMapPortal._portals_raw = {};\r\nMapPortal._type_map = {};\r\n//MapPortal._portals = {};\r\nMapPortal._script = {};\r\n\r\nclass MapPortalManager {\r\n\tconstructor() {\r\n\t\t/** @type {MapPortal[]} */\r\n\t\tthis.portals = null;\r\n\r\n\t\tthis.__display_mode = this.__display_mode;\r\n\t}\r\n\t\r\n\tasync load(map_raw_data, mapRenderer) {\r\n\t\tlet portals = [];\r\n\t\tfor (let i = 0; i in map_raw_data.portal; ++i) {\r\n\t\t\tlet raw = map_raw_data.portal[i];\r\n\t\t\tlet pt = new MapPortal(raw, mapRenderer);\r\n\t\t\t\r\n\t\t\tpt.load();//sync\r\n\t\t\t\r\n\t\t\t//if (pt.enable) {\r\n\t\t\t\tmapRenderer.controller.createPortal(pt);//inject body\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tportals.push(pt);\r\n\t\t}\r\n\t\tthis.portals = portals;\r\n\t}\r\n\tunload() {\r\n\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\tlet ptl = this.portals[i];\r\n\t\t\tptl.unload();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.__display_mode != $gv.m_editor_mode) {\r\n\t\t\tthis.__display_mode = $gv.m_editor_mode;\r\n\r\n\t\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\t\tlet portal = this.portals[i];\r\n\t\t\t\tportal._loadTexture();\r\n\t\t\t\tportal.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\t\tlet portal = this.portals[i];\r\n\t\t\t\tportal.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\tlet portal = this.portals[i];\r\n\t\t\tportal.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//          [category][source]\r\n//\r\n//static back\r\n//imgBack = [category][source][class ][number][\"\"]\r\n//imgBack = [\"Back\"  ][obj.bS][\"bacK\"][obj.no][\"\"]\r\n//\r\n//animation back\r\n//imgBack = [category][source][class ][number][frame][\"\"]\r\n//imgBack = [\"Back\"  ][obj.bS][\"ani\" ][obj.no][0    ][\"\"]\r\n//\r\n//object\r\n//imgObj  = [category][source][path_0][path_1][path_2][frame][\"\"]\r\n//imgObj  = [\"Obj\"\t ][obj.oS][obj.l0][obj.l1][obj.l2][0    ][\"\"]\r\n\r\nclass MapBackBase extends MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IAsyncLoading}\r\n */\r\nclass MapBack extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\tload() {\r\n\t\tlet path = [\"/Map\", \"Back\", this._texture_base_path].join(\"/\");\r\n\r\n\t\tif (this._raw.bS) {\r\n\t\t\tconst raw = this._texture_raw;\r\n\t\t\tif (raw) {\r\n\t\t\t\tthis.textures[0] = new MapTexture(this._texture_raw);\r\n\t\t\t\tthis.textures[0]._url = path;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn(\"MapBack path ?: \" + path);\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.bS, \"back\", this._raw.no].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * texture; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\tif (this._raw.bS && this._raw.no) {\r\n\t\t\treturn map_sprite.Back[this._raw.bS][\"back\"][this._raw.no];\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IAsyncLoading}\r\n */\r\nclass MapBackAnimation extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t * @returns {MapTexture}\r\n\t */\r\n\t_load_texture(i, texture0) {\r\n\t\tlet path = [\"/Map\", \"Back\", this._texture_base_path, i].join(\"/\");\r\n\r\n\t\tlet texture = new MapTexture(this._texture_raw[i]);\r\n\t\ttexture._url = path;\r\n\r\n\t\treturn texture;\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.bS, \"ani\", this._raw.no].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * texture set; info & data\r\n\t * not array\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry {\r\n\t\t\treturn map_sprite.Back[this._raw.bS][\"ani\"][this._raw.no];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass MapBackSkeletalAnim extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {SSAnim} */\r\n\t\tthis.ssanim = null;\r\n\t}\r\n\t/** @type {string} */\r\n\tget _folder() {\r\n\t\tconst ob = this._raw;\r\n\t\t//[\"Back\"  ][obj.bS][\"ani\" ][obj.no][0    ][\"\"]\r\n\t\treturn `/Map/Back/${ob.bS}/spine/${ob.no}`;\r\n\t}\r\n\tasync load() {\r\n\t\tif (SSAnim) {\r\n\t\t\tlet ssanim = new SSAnim();\r\n\t\t\ttry {\r\n\t\t\t\tawait ssanim.load(this._folder);\r\n\t\t\t\tssanim.update(0);//init pos data\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.ssanim = ssanim;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tunload() {\r\n\t\tif (this.ssanim) {\r\n\t\t\tthis.ssanim.unload();\r\n\t\t\tthis.ssanim = null;\r\n\t\t}\r\n\t}\r\n\tupdate(stamp) {\r\n\t\tif (this.ssanim && window.enable_skeletal_anim) {\r\n\t\t\tthis.ssanim.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect - ?? no use\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif ($gv.m_display_skeletal_anim) {\r\n\t\t\tif (this.ssanim) {\r\n\t\t\t\tconst x = Math.trunc((-$gv.m_viewRect.x + 0.5) + this.x);\r\n\t\t\t\tconst y = Math.trunc((-$gv.m_viewRect.y + 0.5) + this.y);\r\n\r\n\t\t\t\trenderer.ctx.setTransform(1, 0, 0, -1, x, y);\r\n\r\n\t\t\t\tthis.ssanim.render();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class LifeSpawnPoint {\r\n\t/**\r\n\t * @param {object} raw\r\n\t * @param {string} spawnId - spawn index\r\n\t */\r\n\tconstructor(raw, spawnId) {\r\n\t\tObject.assign(this, raw);\r\n\t\t\r\n\t\tthis.spawnId = spawnId;\r\n\t\t\r\n\t\t/**\r\n\t\t * millisecond elapsed after life spawn\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/**\r\n\t\t * now count of life was spawn\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.count = 0;\r\n\r\n\t\tif (!(raw instanceof LifeSpawnPoint)) {\r\n\t\t\tthis.fh = raw.fh - 1;\r\n\t\t}\r\n\t}\r\n\tincreaseLife() {\r\n\t\t++this.count;\r\n\t\tthis.time = 0;\r\n\t}\r\n\tdecreaseLife() {\r\n\t\t--this.count;\r\n\t\tthis.time = 0;\r\n\t}\r\n\tgetTimeElapsedAfterLifeSpawn() {\r\n\t\treturn this.time;\r\n\t}\r\n\tgetNowCountOfLifeWasSpawn() {\r\n\t\treturn this.count;\r\n\t}\r\n\t/**\r\n\t * @returns {LifeSpawnPoint}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor(this);\r\n\t}\r\n}\r\n\r\n/**\r\n * Mob / NPC controller\r\n */\r\nexport class MapLifeEntity extends SceneObject {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper();\r\n\t\tlet a = {\r\n\t\t\ttype: \"m\",\r\n\t\t\tid: 8643000,\r\n\t\t\tx: 720,\r\n\t\t\ty: -771,\r\n\t\t\tmobTime: 0,\r\n\t\t\tf: 0,\r\n\t\t\thide: 0,\r\n\t\t\tfh: 41 - 1,\r\n\t\t\tcy: -761,\r\n\t\t\trx0: 647,\r\n\t\t\trx1: 720,\r\n\t\t};\r\n\r\n\t\t/** @type {LifeRenderer} LifeRenderer|MobRenderer|NpcRenderer */\r\n\t\tthis.renderer = null;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_dead = false;\r\n\r\n\t\t/** @type {LifeSpawnPoint} */\r\n\t\tthis.spawn = lifeSpawnPoint;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.x = lifeSpawnPoint.x;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y = lifeSpawnPoint.cy;//lifeSpawnPoint.y\r\n\t\t\r\n\t\tthis.z = 5;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.angle = 0;\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.front = Number(lifeSpawnPoint.f) ? 1 : -1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.opacity = Number(lifeSpawnPoint.hide) ? 0.5 : 1;\r\n\t\t\r\n\t\tthis.lifeId = lifeId;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.type = lifeSpawnPoint.type;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.id = lifeSpawnPoint.id;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.mobTime = lifeSpawnPoint.mobTime;\r\n\r\n\t\t/////** @type {number} */\r\n\t\t////this.cy = lifeSpawnPoint.cy;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.rx0 = lifeSpawnPoint.rx0;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.rx1 = lifeSpawnPoint.rx1;\r\n\t}\r\n\r\n\t//AfterStep\r\n\t//get x() {\r\n\t//\treturn this._x;\r\n\t//}\r\n\t//set x(x) {\r\n\t//\tthis._x = x;\r\n\t//}\r\n\t//get y() {\r\n\t//\treturn this._y;\r\n\t//}\r\n\t//set y(y) {\r\n\t//\tthis._y = y;\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {World} mapController\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tstatic Create(lifeSpawnPoint, mapController, lifeId) {\r\n\t\tlet life;\r\n\r\n\t\tif (lifeSpawnPoint.type == \"m\") {\r\n\t\t\tlife = new MapMob(lifeSpawnPoint, lifeId);\r\n\t\t}\r\n\t\telse if (lifeSpawnPoint.type == \"n\") {\r\n\t\t\tlife = new MapNpc(lifeSpawnPoint, lifeId);\r\n\t\t\t//return;\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert(\"map life type: \" + lifeSpawnPoint.type);\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (life) {\r\n\t\t\tlife.load(lifeSpawnPoint.id, mapController);\r\n\t\t}\r\n\r\n\t\treturn life;\r\n\t}\r\n\t\r\n\t/**\r\n\t * load life description\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint - {id: string, type:\"m\"||\"n\"}\r\n\t */\r\n\tstatic async loadLifeDesc(lifeSpawnPoint) {\r\n\t\tlet desc, id = lifeSpawnPoint.id;\r\n\t\t\r\n\t\tswitch (lifeSpawnPoint.type) {\r\n\t\t\tcase \"m\":\r\n\t\t\t\tdesc = MobRenderer.loadDescription(id);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"n\":\r\n\t\t\t\tdesc = NpcRenderer.loadDescription(id);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\talert(\"map life type: \" + lifeSpawnPoint.type);\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\treturn desc;\r\n\t}\r\n\r\n\t/**\r\n\t * create entity, load data\r\n\t * @param {string} id -  npc or mob id\r\n\t * @param {World} mapController - no use\r\n\t */\r\n\tasync load(id, mapController) {//??: rename to create\r\n\t\tif (this.renderer) {\r\n\t\t\tawait this.renderer.load(id);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"Unknow type of life in map\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t_destroy(mapController) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number} type\r\n\t */\r\n\tdie(type) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\tthis.is_dead = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\trenderer.globalAlpha = Math.max(0, Math.min(this.opacity, 1));\r\n\t\tthis.renderer.draw(renderer, this.x, this.y, this.angle, this.front < 0);\r\n\t}\r\n}\r\nclass MapMob extends MapLifeEntity {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper(lifeSpawnPoint, lifeId);\r\n\t\tthis.renderer = new MobRenderer();\r\n\r\n\t\t/** @type {PMob} */\r\n\t\tthis.$physics = null;\r\n\t\t\r\n\t\t/** @type {{[x:string]: object}} - {[level]: skill} */\r\n\t\tthis.skills = {};\r\n\r\n\t\t//TODO: load mob info\r\n\t\tthis.hp = 100000;\r\n\t}\r\n\t/**\r\n\t * @param {string} id mobId\r\n\t * @param {World} mapController\r\n\t */\r\n\tasync load(id, mapController) {//??: rename to create\r\n\t\tawait super.load(id);\r\n\r\n\t\tthis.$physics = mapController.createMob(this);\r\n\t\tthis.$physics._loadAction(this.renderer.actions);\r\n\t\t\r\n\t\tawait this._load_skill_by_mob_id(id);\r\n\r\n\t\t// experiment\r\n\t\ttry {\r\n\t\t\tthis._load_skill_info();\r\n\r\n\t\t\tconst firstAttack = this.renderer._raw.info.attack[this.renderer._raw.info.firstAttack].info;\r\n\t\t\tif (this.skill_map[firstAttack]) {\r\n\t\t\t\tconst firstSkillInfo = this.skill_map[firstAttack].skill_list[0];\r\n\r\n\t\t\t\tthis.invokeSkill(firstSkillInfo.skill, firstSkillInfo.level);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\t//not thing\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {SceneObject} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tif (!this.is_dead) {\r\n\t\t\tthis.hp -= damage;\r\n\r\n\t\t\tconsole.log(`Mob(${this.$objectid}) 被 ${chara.$objectid} 攻擊，減少 ${damage} HP，剩下 ${this.hp}`);\r\n\t\t\t\r\n\t\t\tif (this.hp <= 0) {\r\n\t\t\t\tthis.die();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * if (chara == null) ??\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PPlayerState} pState\r\n\t */\r\n\t_applyState(pState) {\r\n\t\t//move stand jump hit1 die1\r\n\r\n\t\tif (pState.jump) {\r\n\t\t\tthis.renderer.action = \"jump\";\r\n\t\t}\r\n\t\telse if (pState.walk) {\r\n\t\t\tthis.renderer.action = \"move\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderer.action = \"stand\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$physics) {\r\n\t\t\tif (!this.is_dead) {\r\n\t\t\t\tthis._applyState(this.$physics.state);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.$physics.stop();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\tif ($gv.m_display_mob) {\r\n\t\t\tsuper.draw(renderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* skill need map to action */\r\n\t_load_skill_info() {\r\n\t\tconst _raw = this.renderer._raw;\r\n\t\tlet attack = _raw.info.attack;\r\n\t\tlet skill = _raw.info.skill;\r\n\t\t\r\n\t\tattack[1].info == _raw.info.skill[0].info\r\n\t\tattack[1].info == _raw.skill1.info\r\n\t\t\r\n\t\tvar skill_map = {};\r\n\t\tfor (let i = 1, sname; (sname = \"skill\" + i) in _raw; ++i) {\r\n\t\t\tlet s = _raw[sname];\r\n\t\t\tif (s.info) {\r\n\t\t\t\tskill_map[s.info] = {\r\n\t\t\t\t\tanim: sname,\r\n\t\t\t\t\tskill_list: [],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar skill_info = {};\r\n\t\tfor (let i in _raw.info.skill) {\r\n\t\t\tlet si = _raw.info.skill[i];\r\n\t\t\tskill_info[si.skill + \".\" + si.level] = si;\r\n\t\t\tif (skill_map[si.info]) {\r\n\t\t\t\tskill_info[si.skill + \".\" + si.level].$anim = skill_map[si.info].anim;\r\n\t\t\t\tskill_map[si.info].skill_list.push(si);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.skill_map = skill_map;\r\n\t\tthis.skill_info = skill_info;\r\n\t}\r\n\t\r\n\t_load_skill_by_mob_id(mob_id) {\r\n\t\tlet tasks = [];\r\n\t\tswitch(mob_id) {\r\n\t\t\tcase \"8880140\":\r\n\t\t\tcase \"8880141\": {\r\n\t\t\t\t\tconst FlowerTrap = require(\"./MobSkill/238.FlowerTrap.js\").FlowerTrap;\r\n\t\t\t\t\tconst FairyDust = require(\"./MobSkill/238.FairyDust.js\").FairyDust;\r\n\t\t\t\t\tthis.skills = {\r\n\t\t\t\t\t\t[1]: new FlowerTrap(),\r\n\t\t\t\t\t\t[2]: new FlowerTrap(),\r\n\t\t\t\t\t\t[3]: new FlowerTrap(),\r\n\t\t\t\t\t\t[4]: new FairyDust(null, null),\r\n\t\t\t\t\t\t[5]: { load() {}, invoke: function (level) { console.info(\"invoke LaserRain\"); } },\r\n\t\t\t\t\t\t[6]: { load() {}, invoke: function (level) { console.info(\"invoke ForcedTelepor\"); } },\r\n\t\t\t\t\t\t[7]: { load() {}, invoke: function (level) { console.info(\"invoke Dragon\"); } },\r\n\t\t\t\t\t\t[8]: { load() {}, invoke: function (level) { console.info(\"invoke Rush\"); } },\r\n\t\t\t\t\t\t[9]: { load() {}, invoke: function (level) { console.info(\"invoke WelcomeBarrage\"); } },\r\n\t\t\t\t\t\t[10]: new FairyDust(null, null),\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.skill_map_action = [];\r\n\t\t\t\t\tfor (let i = 1; i <= 10; ++i) {\r\n\t\t\t\t\t\tswitch (i) {\r\n\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\tcase 10:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill1\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill4\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill2\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 8:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 9:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor (let lev in this.skills) {\r\n\t\t\tconst skill = this.skills[lev];\r\n\t\t\ttasks.push(skill.load(lev));\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\t\r\n\tinvokeSkill(skill_id, level) {\r\n\t\tconst skill = this.skills[level];\r\n\t\tif (skill) {\r\n\t\t\tconst anim = this.skill_map_action[level];\r\n\t\t\tif (anim) {\r\n\t\t\t\tthis.renderer.action = anim;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tskill.invoke(level);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn({ \"unknow skill\": skill_id, \"level\": level });\r\n\t\t}\r\n\t}\r\n\t\r\n\t_destroy(mapController) {\r\n\t\tlet lifeSpawnPoint = this.spawn;\r\n\t\tif (lifeSpawnPoint instanceof LifeSpawnPoint) {\r\n\t\t\tlifeSpawnPoint.decreaseLife();\r\n\t\t}\r\n\t\tmapController.destroyMob(this);\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number=1} type\r\n\t */\r\n\tdie(type = 1) {\r\n\t\tthis.renderer.action = \"die\" + type;\r\n\t\tthis.is_dead = true;\r\n\t}\r\n}\r\n\r\nclass MapNpc extends MapLifeEntity {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper(lifeSpawnPoint, lifeId);\r\n\t\tthis.renderer = new NpcRenderer();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\tif ($gv.m_display_npc) {\r\n\t\t\tsuper.draw(renderer);\r\n\t\t}\r\n\t}\r\n\r\n\t_destroy(mapController) {\r\n\t\tlet lifeSpawnPoint = this.spawn;\r\n\t\tlifeSpawnPoint.decreaseLife();\r\n\t\tmapController.destroyNpc(this);\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number} type\r\n\t */\r\n\tdie(type) {\r\n\t\t//TODO: npc die ??\r\n\t\tthis.is_dead = true;\r\n\t}\r\n}\r\n\r\nlet MapLifeEntityCapacityRate = 1;\r\n\r\nclass MapLifeManager {\r\n\t/**\r\n\t * @param {World} mapController\r\n\t */\r\n\tconstructor(mapController) {\r\n\t\t/** @type {object} */\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {LifeSpawnPoint[]} */\r\n\t\tthis.spawnPoints = [];\r\n\r\n\t\t/** @type {MapMob[]} */\r\n\t\tthis.entities = [];\r\n\r\n\t\t/** @type {World} */\r\n\t\tthis.mapController = mapController;\r\n\t}\r\n\r\n\t/**\r\n\t * @async\r\n\t * @param {{life:{[spawnId:number]:{}}}} mapRawData\r\n\t * @returns {Promise<undefined[]>}\r\n\t */\r\n\tload(mapRawData) {\r\n\t\tlet tasks = [];\r\n\t\tthis._raw = mapRawData.life;\r\n\r\n\t\tlet keys = Object.keys(this._raw)\r\n\t\t\t.map(i => {\r\n\t\t\t\tlet n = parseInt(i, 10);\r\n\t\t\t\tif (Number.isSafeInteger(n)) {\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.warn(\"MapLife.spawnId: \" + i);\r\n\t\t\t\treturn null;\r\n\t\t\t})\r\n\t\t\t.filter(i => i != null);\r\n\r\n\t\tfor (let spawnId of keys) {\r\n\t\t\tlet d = new LifeSpawnPoint(this._raw[spawnId], spawnId);\r\n\t\t\ttasks.push(MapLifeEntity.loadLifeDesc(d));\r\n\t\t\tthis.spawnPoints.push(d);\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\tunload() {\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tconst entity = this.entities[i];\r\n\t\t\tif (entity.spawn.type == \"m\") {\r\n\t\t\t\tentity.$physics._destroy(this.mapController);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.spawnPoints = [];\r\n\t\tthis.entities = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tfor (let i = 0; i < this.spawnPoints.length; ++i) {\r\n\t\t\tlet lifeSpawnPoint = this.spawnPoints[i];\r\n\r\n\t\t\tlifeSpawnPoint.time += stamp;\r\n\r\n\t\t\tif (lifeSpawnPoint.time >= 1000 && lifeSpawnPoint.count < MapLifeEntityCapacityRate) {\r\n\t\t\t\tlifeSpawnPoint.increaseLife();\r\n\t\t\t\tthis.spawn(lifeSpawnPoint);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tlet entity = this.entities[i];\r\n\t\t\tif (entity) {\r\n\t\t\t\tif (entity.renderer.action && entity.renderer.action.startsWith(\"die\")) {\r\n\t\t\t\t\tconst act = entity.renderer.actions[entity.renderer.action];\r\n\t\t\t\t\tif (act && act.isEnd()) {\r\n\t\t\t\t\t\tthis.destroyLife(entity);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tentity.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * spawn life(npc / mob) by spawner\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t */\r\n\tspawn(lifeSpawnPoint) {\r\n\t\tlet lifeId = 0;\r\n\r\n\t\tfor (; lifeId < this.entities.length; ++lifeId) {\r\n\t\t\tif (!this.entities[lifeId]) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet entity = MapLifeEntity.Create(lifeSpawnPoint, this.mapController, lifeId);\r\n\t\t\r\n\t\tif (lifeId < this.entities.length) {\r\n\t\t\tthis.entities[lifeId] = entity;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.entities.push(entity);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * directly spawn npc\r\n\t * @param {string} npcID\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tspawnNpc(npcID, x, y, flip=false, fh=0) {\r\n\t\tlet lifeSpawnPoint = new LifeSpawnPoint({\r\n\t\t\ttype: \"n\",\r\n\t\t\tx: x | 0, y: y | 0, cy: y | 0,\r\n\t\t\tid: npcID,\r\n\t\t\tfh: fh,\r\n\t\t\tis_dummy: true,\r\n\t\t});\r\n\t\tthis.spawn(lifeSpawnPoint);\r\n\t}\r\n\t/**\r\n\t * directly spawn mob\r\n\t * @param {string} mobID\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tspawnMob(mobID, x, y, flip=false, fh=0) {\r\n\t\tlet lifeSpawnPoint = new LifeSpawnPoint({\r\n\t\t\ttype: \"m\",\r\n\t\t\tx: x | 0, y: y | 0, cy: y | 0,\r\n\t\t\tid: mobID,\r\n\t\t\tfh: fh,\r\n\t\t\tis_dummy: true,\r\n\t\t});\r\n\t\tthis.spawn(lifeSpawnPoint);\r\n\t}\r\n\t\r\n\tdestroyLife(entity) {\r\n\t\tif (!(entity instanceof MapLifeEntity)) {\r\n\t\t\talert(\"MapLifeManager.killLife: can't kill non life\");\r\n\t\t\tconsole.error(\"MapLifeManager.killLife: can't kill non life\");\r\n\t\t}\r\n\t\tentity._destroy(this.mapController);\r\n\t\tdelete this.entities[entity.lifeId];\r\n\t}\r\n\tdestroyAll() {\r\n\t\tthis.entities.forEach(a => this.destroyLife(a))\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t * @param {number} whereLayer - where layer index\r\n\t */\r\n\tdraw(renderer, center, viewRect, whereLayer) {\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tlet entity = this.entities[i];\r\n\t\t\tif (entity && ((entity.z != null && entity.z == whereLayer) || whereLayer == null)) {\r\n\t\t\t\tentity.draw(renderer);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * require Renderer\r\n * @implements {IAsyncLoading}\r\n */\r\nexport class SceneMap {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.stamp = 0;\r\n\r\n\t\t/** @type {MapBack[]} */\r\n\t\tthis.background = [];\r\n\r\n\t\t/** @type {MapBack[]} */\r\n\t\tthis.frontground = [];\r\n\r\n\t\t/** @type {MapObject[]} */\r\n\t\tthis.layeredObject = [];\r\n\r\n\t\t/** @type {MapTile[]} */\r\n\t\tthis.layeredTile = [];\r\n\t\t\r\n\t\t/** @type {{[tag:string]:MapBackBase}} */\r\n\t\tthis.backTags = {};\r\n\t\t\r\n\t\t/** @type {{[name:string]:MapObject}} */\r\n\t\tthis.namedObject = {};\r\n\r\n\t\t/** @type {World} */\r\n\t\tthis.controller = new World();\r\n\r\n\t\t/** @type {MapLifeManager} */\r\n\t\tthis.lifeMgr = new MapLifeManager(this.controller);\r\n\t\t\r\n\t\t/** @type {MapPortalManager} */\r\n\t\tthis.portalMgr = new MapPortalManager();\r\n\t\t\r\n\t\t/** @type {MapParticle[]} */\r\n\t\tthis.particleList = null;\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.mapBound = null;\r\n\r\n\t\t/** @type {{[questId:string]: number}} */\r\n\t\tthis.quest = {};\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;//data url //debug\r\n\r\n\t\t/** @type {Promise<any>[]} */\r\n\t\tthis.$load_tasks = [];\r\n\r\n\t\t/** @type {Promise<any>} */\r\n\t\tthis.$promise = null;\r\n\r\n\t\tthis.$loading_status = \"loading\";\r\n\t\t\r\n\t\tthis.onload = null;\r\n\t}\r\n\r\n\tstatic async _Init() {\r\n\t\tlet $_mapString = null;\r\n\t\tlet $mapString = {};\r\n\r\n\t\t$_mapString = await $get.data(\"/String/Map\");\r\n\r\n\t\tfor (let i in $_mapString) {\r\n\t\t\tfor (let j in $_mapString[i]) {\r\n\t\t\t\t$mapString[j] = $_mapString[i][j];\r\n\t\t\t\t$mapString[j].$region = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tSceneMap._map_names = $mapString;\r\n\r\n\t\twindow.$MapNames = SceneMap._map_names;\r\n\t}\r\n\tstatic Init() {\r\n\t\treturn Promise.all([\r\n\t\t\tthis._Init(),\r\n\t\t\tMapPortal.Init(),\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{[questId:string]: number}} quest\r\n\t */\r\n\tisActivated(quest) {\r\n\t\tif (quest) {\r\n\t\t\tfor (let id in quest) {\r\n\t\t\t\tif (this.quest[id] != quest[id]) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tget $map_sprite() {\r\n\t\treturn window.$map_sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{back:{[backId:string]:any}}} raw\r\n\t */\r\n\tasync _constructBack(raw) {\r\n\t\tif (!(\"back\" in raw)) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet loading_task_map = new Map();\r\n\t\tfor (let i = 0; i in raw.back; ++i) {\r\n\t\t\tlet ob = raw.back[i];\r\n\t\t\tconst url = this._url + `back/${i}`;\r\n\r\n\t\t\t/** @type {MapBack|MapBackAnimation} */\r\n\t\t\tlet back;\r\n\r\n\t\t\tif (ob.ani == 0) {\r\n\t\t\t\tback = new MapBack(ob);\r\n\t\t\t}\r\n\t\t\telse if (ob.ani == 1) {\r\n\t\t\t\tback = new MapBackAnimation(ob);\r\n\t\t\t}\r\n\t\t\telse if (ob.ani == 2) {//Spine skeletal animation\r\n\t\t\t\tback = new MapBackSkeletalAnim(ob);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"ob.ani: \" + ob.ani);\r\n\t\t\t}\r\n\t\t\tback._url = url;\r\n\t\t\tif (back.backTags != null) {\r\n\t\t\t\tthis.backTags[back.backTags] = back;\r\n\t\t\t}\r\n\r\n\t\t\tif (ob.ani != 2) {\r\n\t\t\t\t// add loading task\r\n\t\t\t\tif (back._raw.bS) {\r\n\t\t\t\t\tlet ps = \"Back/\" + back._raw.bS;\r\n\t\t\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\t\t\tloading_task_map.set(ps, map_load_package(\"Back\", back._raw.bS));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.warn(\"MapBack: map.back[\" + i + \"].bS = \" + back._raw.bS);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (ob.front != 0) {\r\n\t\t\t\tthis.frontground.push(back);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.background.push(back);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait Promise.all([...loading_task_map.values()]);\r\n\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tlet back = this.frontground[i];\r\n\t\t\tback.load();\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tlet back = this.background[i];\r\n\t\t\tback.load();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{[layer:number]:{objs:{},tiles:{},info:{}}}} mapRawData\r\n\t */\r\n\tasync _constructLayeredObject(mapRawData) {\r\n\t\tlet loading_task_map = new Map();\r\n\r\n\t\tfor (let i = 0, layer = mapRawData[i]; !objIsEmpty(layer); i++ , layer = mapRawData[i]) {//layer[1...8]\r\n\t\t\tlet objs = this.__constructLayeredObject_obj(i, layer, loading_task_map);\r\n\t\t\tlet tiles = this.__constructLayeredObject_tile(i, layer, loading_task_map);\r\n\r\n\t\t\t// ?? map:867116550 雷射在 tiles 前面\r\n\t\t\ttiles.sort((a, b) => { return a.z - b.z; });\r\n\t\t\tobjs.sort((a, b) => { return a.z - b.z; });\r\n\r\n\t\t\t//this.layeredObject[i] = objs.concat(tiles);//(objs.concat(tiles)).sort(function (a, b) { return a.z - b.z; });\r\n\t\t\t\r\n\t\t\tthis.layeredObject[i] = objs;\r\n\t\t\tthis.layeredTile[i] = tiles;\r\n\t\t}\r\n\r\n\t\t//wait all texture package loaded\r\n\t\tawait Promise.all([...loading_task_map.values()]);\r\n\r\n\t\tfor (let i = 0; i < this.layeredObject.length; ++i) {\r\n\t\t\tconst objs = this.layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {MapObject}\r\n\t\t\t\t */\r\n\t\t\t\tlet obj = objs[j];\r\n\t\t\t\tif (process.env.NODE_ENV !== 'production') {//is debug\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tobj.load();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\tconsole.error(\"load textures failed: \" + new URL(\"xml2\" + obj._url, window.location).href);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tobj.load();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.layeredTile.length; ++i) {\r\n\t\t\tconst tiles = this.layeredTile[i];\r\n\t\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\t\tlet tile = tiles[j];\r\n\t\t\t\ttile.load();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__constructLayeredObject_tile(i, layer, loading_task_map) {\r\n\t\tconst info = layer.info;\r\n\t\tlet tiles = [];\r\n\r\n\t\tif (info.tS) {\r\n\t\t\tlet ps = \"Tile/\" + info.tS;\r\n\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\tloading_task_map.set(ps, map_load_package(\"Tile\", info.tS));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (Object.keys(layer.tile).length) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.warn(\"[\" + i + \"].tile = \" + JSON.stringify(layer.tile));\r\n\t\t}\r\n\t\tfor (let j = 0, ti = layer.tile[j]; !objIsEmpty(ti); j++ , ti = layer.tile[j]) {\r\n\t\t\tlet tile = new MapTile(ti, info);\r\n\r\n\t\t\ttile._url = this._url + `${i}/tile/${j}`;\r\n\r\n\t\t\ttiles.push(tile);\r\n\t\t}\r\n\r\n\t\treturn tiles;\r\n\t}\r\n\t__constructLayeredObject_obj(i, layer, loading_task_map) {\r\n\t\tlet objs = [];\r\n\r\n\t\tfor (let j = 0, raw = layer.obj[j]; !objIsEmpty(raw); j++ , raw = layer.obj[j]) {\r\n\t\t\tlet obj;\r\n\r\n\t\t\tif (raw.spineAni) {\r\n\t\t\t\tswitch (raw.spineAni) {\r\n\t\t\t\t\tcase \"animation\":\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"idle\":\r\n\t\t\t\t\t\tconsole.warn(\"spine animation: idle ??\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.groupCollapsed(\"unknow spine:\" + raw.spineAni);\r\n\t\t\t\t\t\tconsole.warn(`LayeredObject[${i}][${j}]`);\r\n\t\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tobj = new MapObjectSkeletalAnim(raw);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tobj = new MapObject(raw);\r\n\r\n\t\t\t\tlet ps = \"Obj/\" + obj._raw.oS;\r\n\t\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\t\tloading_task_map.set(ps, map_load_package(\"Obj\", obj._raw.oS));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tobj._url = this._url + `${i}/obj/${j}`;\r\n\t\t\t\r\n\t\t\tif (obj.name != null) {\r\n\t\t\t\tthis.namedObject[obj.name] = obj;\r\n\t\t\t}\r\n\r\n\t\t\tobjs.push(obj);\r\n\t\t}\r\n\r\n\t\treturn objs;\r\n\t}\r\n\r\n\t/**\r\n\t * top-bottom-border compute by visible mapObject\r\n\t */\r\n\t__compute_top_bottom_border(layeredObject) {\r\n\t\tlet top = null, bottom = null;//left, right,\r\n\t\t//let i = 0;\r\n\t\t\r\n\t\tfor (let i = 0; i < layeredObject.length; ++i) {\r\n\t\t\tconst objs = layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\tconst obj = objs[j];\r\n\t\t\t\tlet rect = obj.compute_max_rectangle();\r\n\t\t\t\tif (rect && top != null && bottom != null) {\r\n\t\t\t\t\t//left = Math.min(left, rect.left);\r\n\t\t\t\t\ttop = Math.min(top, rect.top);\r\n\t\t\t\t\t//right = Math.max(right, rect.right);\r\n\t\t\t\t\tbottom = Math.max(bottom, rect.bottom);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//left = rect.left;\r\n\t\t\t\t\ttop = rect.top;\r\n\t\t\t\t\t//right = rect.right;\r\n\t\t\t\t\tbottom = rect.bottom;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn { top, bottom };\r\n\t}\r\n\t\r\n\t/**\r\n\t * top-bottom-border compute by visible mapObject\r\n\t */\r\n\t_compute_top_bottom_border() {\r\n\t\tlet objtb = this.__compute_top_bottom_border(this.layeredObject);\r\n\t\tlet tiletb = this.__compute_top_bottom_border(this.layeredTile);\r\n\t\tlet top = Math.min(objtb.top, tiletb.top);\r\n\t\tlet bottom = Math.max(objtb.bottom, tiletb.bottom);\r\n\t\treturn { top, bottom };\r\n\t}\r\n\r\n\t//_compute_view_rectangle\r\n\t\r\n\t_compute_map_bound(reCalc) {\r\n\t\tif (this.mapBound && !reCalc) {\r\n\t\t\treturn this.mapBound;\r\n\t\t}\r\n\r\n\t\tconst info = this._raw.info;\r\n\t\tlet top, bottom;\r\n\r\n\t\tif (info.VRLeft != null && info.VRTop != null && info.VRRight != null && info.VRBottom != null) {\r\n\t\t\ttop = info.VRTop;\r\n\t\t\tbottom = info.VRBottom;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tb = this._compute_top_bottom_border();\r\n\t\t\ttop = tb.top;\r\n\t\t\tbottom = tb.bottom;\r\n\t\t}\r\n\r\n\t\tconst lr = this.controller.ground._compute_left_right_border();\r\n\r\n\t\tlet rect = Rectangle.parse(lr.left, top, lr.right, bottom);\r\n\t\tthis.mapBound = rect;//store\r\n\r\n\t\treturn rect;\r\n\t}\r\n\t\r\n\tget _window_title() {\r\n\t\tif (this.mapName) {\r\n\t\t\treturn `${[this.mapName, this.streetName].join(\"·\")} (${this.map_id})`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `${this.map_id}`;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_get_map_data_url(map_id) {\r\n\t\treturn `/Map/Map/Map${map_id.slice(0, 1)}/${map_id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * loading: map data\r\n\t * @param {string} map_id\r\n\t * @param {boolean} reload - download\r\n\t */\r\n\tasync load(map_id, reload) {\r\n\t\tif (!reload && map_id != null && this.map_id == map_id && this._raw != null) {\r\n\t\t\tif (this.isLoaded()) {\r\n\t\t\t\tthis.unload();\r\n\t\t\t}\r\n\t\t\tthis._load(this._raw);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst url = this._get_map_data_url(map_id);\r\n\r\n\t\tlet raw = await $get.data(url);\r\n\t\tif (!raw) {\r\n\t\t\talert(\"map not exit\");\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (raw.info && raw.info.link) {\r\n\t\t\tconst url2 = this._get_map_data_url(raw.info.link);\r\n\t\t\t\t\r\n\t\t\traw = await $get.data(url2);\r\n\t\t\tif (!raw) {\r\n\t\t\t\talert(\"map-link not exit\");\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.isLoaded()) {\r\n\t\t\tthis.unload();\r\n\t\t}\r\n\t\tthis._url = url;\r\n\t\tthis.map_id = map_id;\r\n\t\t\r\n\t\tthis._load(raw);\r\n\t}\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{[prop:string]:{}}} raw\r\n\t */\r\n\t_load(raw) {\r\n\t\tconst map_id = this.map_id;\r\n\r\n\t\tthis.$loading_status = \"loading\";\r\n\r\n\t\t$gv.allQuest = {};\r\n\t\t\r\n\t\tthis.controller.stop = true;//begin load\r\n\t\t\r\n\t\tif (SceneMap._map_names[map_id]) {\r\n\t\t\tthis.mapName = SceneMap._map_names[map_id].mapName;\r\n\t\t\tthis.streetName = SceneMap._map_names[map_id].streetName;\r\n\t\t}\r\n\r\n\t\tthis.$load_tasks = [];\r\n\r\n\t\tthis._loadBgm(raw);\r\n\r\n\t\tthis.$load_tasks.push(this._constructBack(raw, this));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this._constructLayeredObject(raw, this).then((mapobj) => {\r\n\t\t\t//this.layeredObject\r\n\t\t\t//this.layeredTile\r\n\t\t}));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this.portalMgr.load(raw, this).then((portals) => {\r\n\t\t}));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this.__constructMiniMap(raw, this));\r\n\r\n\t\tthis.$load_tasks.push(this.controller.load(raw, this));//load foothold...\r\n\t\tthis.$load_tasks.push(this.lifeMgr.load(raw, this));\r\n\t\t\r\n\t\tthis.$load_tasks.push(MapParticle.construct(raw, this));\r\n\r\n\t\tthis.$promise = Promise.all(this.$load_tasks);\r\n\t\tthis.$promise.then((results) => {\r\n\t\t\tconst viewRect = this._compute_map_bound();\r\n\t\t\tconst viewCenter = viewRect.center;\r\n\t\t\t\r\n\t\t\t$gv.m_viewRect.setCenter(viewCenter.x, viewCenter.y);\r\n\t\t\t\r\n\t\t\tthis.controller._createMapBound(viewRect);\r\n\t\t\t\r\n\t\t\tthis.controller.stop = false;//end load\r\n\t\t\t\r\n\t\t\tthis.$load_tasks = [];\r\n\t\t\tthis.$promise = null;\r\n\t\t\tdelete this.$loading_status;\r\n\t\t\tconsole.log(\"completed scene_map.waitLoaded: [...]\");\r\n\t\t});\r\n\t\t\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\tthis._script();\r\n\t\t\r\n\t\tif (this.onload) {\r\n\t\t\tthis.onload.call(this);//history.pushState\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(\"End scene_map.load\");\r\n\t}\r\n\t_script() {\r\n\t\tswitch (this.map_id) {\r\n\t\t\tcase \"450004150\":\r\n\t\t\tcase \"450004450\":\r\n\t\t\tcase \"450004750\":\r\n\t\t\t\tthis.lifeMgr.spawnMob(\"8880166\", 1000, 47, false, 0);//from /Etc/BossLucid\r\n\t\t\t\tthis.lifeMgr.spawnMob(\"8880140\", 1000, 47, false, 0);//from /Etc/BossLucid\r\n\t\t\t\t//this.lifeMgr.spawnMob(\"8880176\", 1000, 47, false, 0);\r\n\t\t\t\t//this.lifeMgr.spawnMob(\"8880141\", 1000, 47, false, 0);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treload() {\r\n\t\tthis.unload();\r\n\t\tthis._load(this._raw);\r\n\t}\r\n\t\r\n\tunload() {\r\n\t\tthis.$loading_status = \"loading\";\r\n\t\t\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tthis.background[i].unload();\r\n\t\t}\r\n\t\tthis.background = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tthis.frontground[i].unload();\r\n\t\t}\r\n\t\tthis.frontground = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.layeredObject.length; ++i) {\r\n\t\t\tlet objs = this.layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\tobjs[j].unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.layeredObject = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.layeredTile.length; ++i) {\r\n\t\t\tlet tiles = this.layeredTile[i];\r\n\t\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\t\ttiles[j].unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.layeredTile = [];\r\n\t\t\r\n\t\tthis.backTags = {};\r\n\t\t\r\n\t\tthis.particleList = null;\r\n\t\t\r\n\t\tthis.controller.unload();\r\n\t\tthis.lifeMgr.unload();\r\n\t\tthis.portalMgr.unload();\r\n\t\t\r\n\t\tmap_sprite.Back = {};\r\n\t\tmap_sprite.Obj = {};\r\n\t\tmap_sprite.Tile = {};\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{info:{bgm:string}}} mapRawData\r\n\t */\r\n\t_getBgmPath(mapRawData) {\r\n\t\tlet bgmPath = mapRawData.info.bgm;\r\n\t\tlet i = bgmPath.indexOf(\"/\"), path = bgmPath.slice(0, i) + bgmPath.slice(i);\r\n\t\t//let m = bgmPath.match(/([^\\/]+)(\\/.*)/), path = [m[1], m[2]].join(\"/\");\r\n\t\treturn [\"\", \"Sound\", path].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{info:{bgm:string}}} mapRawData\r\n\t */\r\n\t_loadBgm(mapRawData) {\r\n\t\tconst elem_bgm = document.getElementById(\"bgm\");\r\n\t\tif (elem_bgm) {\r\n\t\t\tconst path = this._getBgmPath(mapRawData);\r\n\t\t\tthis._bgm_path = path;\r\n\r\n\t\t\tconst url = $get.soundMp3Url(path);\r\n\t\t\t\r\n\t\t\telem_bgm.innerHTML = `<source src=\"${url}\" type=\"audio/mpeg\">`;\r\n\t\t\t\r\n\t\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\t\telem_bgm.autoplay = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telem_bgm.autoplay = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new TypeError(\"#bgm\"));\r\n\t\t}\r\n\t}\r\n\r\n\tplayBgm() {\r\n\t\tdocument.getElementById(\"bgm\").play();\r\n\t}\r\n\r\n\tpauseBgm() {\r\n\t\tdocument.getElementById(\"bgm\").pause();\r\n\t}\r\n\t\r\n\t__constructMiniMap(raw) {\r\n\t\tif (raw.miniMap) {\r\n\t\t\t//const hw = raw.miniMap.width * 0.5;\r\n\t\t\t//const hh = raw.miniMap.height * 0.5;\r\n\t\t\t//const cx = raw.miniMap.centerX;\r\n\t\t\t//const cy = raw.miniMap.centerY;\r\n\t\t\tthis.width = raw.miniMap.width;\r\n\t\t\tthis.height = raw.miniMap.height;\r\n\t\t\tthis.centerX = raw.miniMap.centerX;\r\n\t\t\tthis.centerY = raw.miniMap.centerY;\r\n\t\t\t//this.boundRect = new Rectangle(cx - hw, cy - hh, raw.miniMap.width, raw.miniMap.height);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.width = 0;\r\n\t\t\tthis.height = 0;\r\n\t\t\tthis.centerX = 0;\r\n\t\t\tthis.centerY = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_miniMap_src() {\r\n\t\treturn this._url + \"miniMap/canvas\";\r\n\t\tconst a = {\r\n\t\t\t\"canvas\": {\r\n\t\t\t\t\"\": \"\"\r\n\t\t\t},\r\n\t\t\t\"width\": 4483,\r\n\t\t\t\"height\": 1244,\r\n\t\t\t\"centerX\": 1030,\r\n\t\t\t\"centerY\": 781,\r\n\t\t\t\"mag\": 4\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * wait all task: return true if nothing to loading else list of loaded object\r\n\t * loading: texture...\r\n\t * @returns {Promise<true>|Promise<any[]>}\r\n\t */\r\n\tasync waitLoaded() {\r\n\t\tawait this.$promise;\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn ((!this.$load_tasks || !this.$load_tasks.length) && this._raw && !this.$loading_status);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\twindow.m_hover_object = null;\r\n\t\tif ($gv.mouse_dm || $gv.mouse_dr) {\r\n\t\t\twindow.m_selected_object = null;\r\n\t\t}\r\n\t\t\r\n\t\tif (stamp != null) {\r\n\t\t\tthis.stamp = stamp;\r\n\r\n\t\t\tthis.lifeMgr.update(stamp);\r\n\r\n\t\t\tif (this.isLoaded()) {\r\n\t\t\t\tthis.controller.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t */\r\n\t_addChara(chara) {\r\n\t\ttry {\r\n\t\t\tlet player_spawns = this.portalMgr.portals.filter(a => a.pn == \"sp\");\r\n\t\t\tlet spawn = player_spawns[Math.trunc(Math.random() * 100) % player_spawns.length];\r\n\t\t\tconst $physics = chara.$physics;\r\n\t\t\tconst x = spawn.x / $gv.CANVAS_SCALE;\r\n\t\t\tconst y = spawn.y / $gv.CANVAS_SCALE;\r\n\t\t\t$physics.setPosition(x, y);\r\n\t\t\t$physics.body.SetAwake(true);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t */\r\n\taddChara(chara) {\r\n\t\tif (this.$promise) {\r\n\t\t\tthis.$promise.then(() => {\r\n\t\t\t\tthis._addChara(chara);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._addChara(chara);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tapplyCamera(renderer) {\r\n\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x), Math.trunc(-$gv.m_viewRect.y));\r\n\t}\r\n\r\n\t/**\r\n\t * pushGlobalAlpha\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tbeginRender(renderer) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tendRender(renderer) {\r\n\t\trenderer.popGlobalAlpha();\r\n\t\t//renderer.popMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} whereLayer - where layer index\r\n\t */\r\n\trenderLife(renderer, whereLayer) {\r\n\t\tif (!$gv.m_display_life) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tthis.lifeMgr.draw(renderer, center, viewRect, whereLayer);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderPortal(renderer) {\r\n\t\tif (!$gv.m_display_portal) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\r\n\t\tthis.portalMgr.update(this.stamp);\r\n\t\tthis.portalMgr.draw(renderer, center, viewRect);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderFrontground(renderer) {\r\n\t\tif (!$gv.m_display_front) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tlet back = this.frontground[i];\r\n\t\t\tif (this.isActivated(back.quest)) {\r\n\t\t\t\tback.update(this.stamp);\r\n\t\t\t\tback.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderLayeredObject(renderer, layerIndex) {\r\n\t\tif (!$gv.m_display_mapobj) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tconst objs = this.layeredObject[layerIndex];\r\n\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\tlet obj = objs[j];\r\n\t\t\tif (this.isActivated(obj.quest)) {\r\n\t\t\t\tobj.update(this.stamp);\r\n\t\t\t\tobj.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderLayeredTile(renderer, layerIndex) {\r\n\t\tif (!$gv.m_display_maptile) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tconst tiles = this.layeredTile[layerIndex];\r\n\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\tlet tile = tiles[j];\r\n\t\t\tif (this.isActivated(tile.quest)) {\r\n\t\t\t\ttile.update(this.stamp);\r\n\t\t\t\ttile.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderBackground(renderer) {\r\n\t\tif (!$gv.m_display_back) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tlet back = this.background[i];\r\n\t\t\tif (this.isActivated(back.quest)) {\r\n\t\t\t\tback.update(this.stamp);\r\n\t\t\t\tback.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderParticle(renderer) {\r\n\t\tif (!$gv.m_display_particle_system) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//const center = Vec2.empty;\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.particleList.length; ++i) {\r\n\t\t\tlet particle = this.particleList[i];\r\n\t\t\tif (this.isActivated(particle.quest)) {\r\n\t\t\t\tparticle.update(this.stamp);\r\n\t\t\t\tparticle.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nAddInitTask(SceneMap.Init());\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction objIsEmpty(x) {\r\n\tif (typeof x == 'object' && x == null)\r\n\t\tthrow new Error();\r\n\treturn typeof x == 'undefined' || x == null;\r\n}\r\n","﻿\r\nimport { KeySlotData } from \"./KeySlotData\";\r\nimport { ItemSlot } from \"../../game/Item\";\r\n\r\n\r\nexport class KeySlot {\r\n\t/**\r\n\t * @param {\"Command\"|\"Action\"|\"Item\"|\"Skill\"} type\r\n\t * @param {KeySlotData} data\r\n\t */\r\n\tconstructor(type, data) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((type + \"Slot\") != data.constructor.name) {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.type = type;\r\n\t\tthis.data = data;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * open/close ui, command...\r\n */\r\nexport class CommandSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} command\r\n\t */\r\n\tconstructor(command) {\r\n\t\tsuper();\r\n\t\tthis.command = command;\r\n\t}\r\n}\r\n\r\n/**\r\n * charaction action key\r\n */\r\nexport class ActionSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} action\r\n\t */\r\n\tconstructor(action) {\r\n\t\tsuper();\r\n\t\tthis.action = action;\r\n\t}\r\n}\r\n\r\n\r\n//TODO: SkillSlot.js 未完成\r\nexport class SkillSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} skill_id\r\n\t */\r\n\tconstructor(skill_id) {\r\n\t\tsuper();\r\n\t\tthis.skill_id = skill_id;\r\n\t}\r\n}\r\n\r\n\r\n\r\n","﻿\r\nimport { ItemCategoryInfo } from '../../public/javascripts/resource.js';\r\n\r\nimport { IRenderer } from './IRenderer.js';\r\n\r\nimport { SceneObject } from \"./SceneObject.js\";\r\nimport { CharacterRenderer } from \"./Renderer/CharacterRenderer.js\";\r\nimport { ChatBalloon } from \"./Renderer/ChatBalloon.js\";\r\nimport { PPlayer, PPlayerState } from \"./Physics/PPlayer.js\";\r\n\r\nimport { $createItem, ItemEquip, ItemSlot, ItemBase } from \"./Item.js\";\r\nimport { SceneSkill } from \"./Skill.js\";\r\n\r\nimport { CharacterStat } from \"../Common/PlayerData.js\";\r\nimport { CharacterMoveElem } from \"../Client/PMovePath.js\";\r\nimport { $Packet_CharacterMove } from \"../Common/Packet\";\r\nimport { AttackInfo, DamagePair } from \"../Common/AttackInfo.js\";\r\n\r\nimport { KeySlot, CommandSlot, ActionSlot, SkillSlot } from '../ui/Basic/KeySlot.js';\r\n\r\nimport { SceneMap } from './Map.js';\r\nimport { damageNumberLayer } from './Renderer/DamageNumber.js';\r\n\r\n\r\n// SceneCharacter的更新流程\r\n//\r\n// chatCtrl.update (順序無關)\r\n//\r\n// <...controller>\r\n// activeSkills.forEach(skill => skill.update)\r\n// chara._handleAttack\r\n// chara._player_control => { inputKey.forEach(key => key ? activeSkills.forEach(skill => skill.control)); ... }\r\n// chara._applyState\r\n//\r\n// <renderer>\r\n// set chara.renderer.position\r\n// chara.renderer.update\r\n\r\n\r\nclass TimeElapsed {\r\n\tconstructor() {\r\n\t\t/** @type {Date} */\r\n\t\tthis._date = new Date();\r\n\t}\r\n\treset() {\r\n\t\tthis._date = new Date();\r\n\t}\r\n\tget elapsed() {\r\n\t\tconst elapsed = (new Date()).getMilliseconds() - this._date.getMilliseconds();\r\n\t\treturn elapsed;\r\n\t}\r\n}\r\n\r\nwindow.$addItem_repeatEquip = false;\r\n\r\nclass ChatController {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.style = 0;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.text = \"\";\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.$outputText = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.elapsed = 0;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis._isDisplay = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t */\r\n\tenter(text) {\r\n\t\tthis.text = String(text);\r\n\t\tthis.$outputText = null;\r\n\t\tthis.isDisplay = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst $displayDuration = this.displayDuration;\r\n\r\n\t\tif (this.elapsed > $displayDuration) {\r\n\t\t\tthis.isDisplay = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.elapsed += stamp;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {BaseSceneCharacter} chara\r\n\t */\r\n\tasync draw(renderer, chara) {\r\n\t\tif (this._isDisplay) {\r\n\t\t\tconst style = this.style || $gv.ChatBalloon_default_style;\r\n\r\n\t\t\t/** @type {ChatBalloon} */\r\n\t\t\tlet cb = ChatBalloon.cache[style];\r\n\t\t\tif (!cb) {\r\n\t\t\t\tcb = new ChatBalloon();\r\n\t\t\t\tawait cb.load(style);\r\n\t\t\t}\r\n\r\n\t\t\tconst $colon = this.colon;\r\n\t\t\tconst crr = chara.renderer;\r\n\t\t\tconst boundBox = crr._boundBox;\r\n\r\n\t\t\tif (!this.$outputText) {\r\n\t\t\t\tthis.$outputText = chara.id + $colon + this.text;\r\n\t\t\t}\r\n\t\t\tcb.draw(renderer, this.$outputText, crr.x, crr.y - boundBox.height);\r\n\t\t}\r\n\t}\r\n\r\n\tget isDisplay() {\r\n\t\treturn this._isDisplay;\r\n\t}\r\n\tset isDisplay(value) {\r\n\t\tthis._isDisplay = !!value;\r\n\t\tthis.elapsed = 0;\r\n\t}\r\n\r\n\t/** @type {\" : \"} */\r\n\tget colon() {\r\n\t\treturn \" : \";\r\n\t}\r\n\tget $maxLength() {\r\n\t\treturn 70;\r\n\t}\r\n\tget displayDuration() {\r\n\t\treturn $gv.ChatBalloon_display_duration;\r\n\t}\r\n}\r\n\r\n\r\nconst keyboard_map = [\r\n\t{\r\n\t\tArrowUp: new KeySlot(\"Action\", new ActionSlot(\"up\")),\r\n\t\tArrowLeft: new KeySlot(\"Action\", new ActionSlot(\"left\")),\r\n\t\tArrowDown: new KeySlot(\"Action\", new ActionSlot(\"down\")),\r\n\t\tArrowRight: new KeySlot(\"Action\", new ActionSlot(\"right\")),\r\n\t\t//z: new KeySlot(\"Action\", new ActionSlot(\"jump\")),\r\n\t\tz: new KeySlot(\"Skill\", new SkillSlot(\"23001002\")),//二段跳取代跳躍鍵\r\n\t\tx: new KeySlot(\"Skill\", new SkillSlot(\"1001005\")),\r\n\t\tc: new KeySlot(\"Skill\", new SkillSlot(\"64120000\")),\r\n\t\tv: new KeySlot(\"Skill\", new SkillSlot(\"23121000\")),//152001001\r\n\t},\r\n\t{//editor mode\r\n\t\tw: new KeySlot(\"Action\", new ActionSlot(\"up\")),\r\n\t\ta: new KeySlot(\"Action\", new ActionSlot(\"left\")),\r\n\t\ts: new KeySlot(\"Action\", new ActionSlot(\"down\")),\r\n\t\td: new KeySlot(\"Action\", new ActionSlot(\"right\")),\r\n\t\tq: new KeySlot(\"Action\", new ActionSlot(\"jump\")),\r\n\t\tf: new KeySlot(\"Skill\", new SkillSlot(\"23001002\")),//debug\r\n\t\tx: new KeySlot(\"Skill\", new SkillSlot(\"1001005\")),\r\n\t\tc: new KeySlot(\"Skill\", new SkillSlot(\"64120000\")),\r\n\t\tv: new KeySlot(\"Skill\", new SkillSlot(\"23121000\")),//152001001\r\n\t}\r\n];\r\n\r\n\r\nexport class BaseSceneCharacter extends SceneObject {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t///** @type {PPlayer} */\r\n\t\t//this.$physics = null;//new PPlayer();\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = null;\r\n\r\n\t\tthis.$layer = 5;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.name = null;\r\n\r\n\t\tthis.stat = new CharacterStat();\r\n\r\n\t\t/** @type {Map<string,SceneSkill>} */\r\n\t\tthis.activeSkills = new Map();\r\n\r\n\t\t/** @type {ChatController} */\r\n\t\tthis.chatCtrl = new ChatController();\r\n\r\n\t\t/** @type {{move:$Packet_CharacterMove}} */\r\n\t\tthis.$inPacket = {};\r\n\t\tthis.$inPacket.move = null;\r\n\r\n\t\t/** @type {{move:$Packet_CharacterMove}} */\r\n\t\tthis.$outPacket = {};\r\n\t\tthis.$outPacket.move = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @alias name\r\n\t * @type {string}\r\n\t */\r\n\tget id() {\r\n\t\treturn this.name;\r\n\t}\r\n\tset id(value) {\r\n\t\tthis.name = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @alias name\r\n\t * @type {string}\r\n\t */\r\n\tget $objectid() {\r\n\t\treturn this.name;\r\n\t}\r\n\tset $objectid(value) {\r\n\t\tthis.name = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {BaseSceneCharacter|null} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tconsole.log(\"Player(\" + this.$objectid + \") 被 \" + chara.$objectid + \" 攻擊，減少 \" + damage + \" HP\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {BaseSceneCharacter|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t\tthis.$physics.knockback(moveX, moveY, 1000);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {$Packet_CharacterMove} move\r\n\t */\r\n\t$move(_move) {\r\n\t\tlet move = _move || this.$inPacket.move;\r\n\t\tthis.$inPacket.move = move;\r\n\t}\r\n\r\n\t_remote_control() {\r\n\t\tlet move = this.$inPacket.move;\r\n\r\n\t\tif (move && move.path && move.path.length) {\r\n\t\t\tconst crr = this.renderer;\r\n\t\t\tlet elem = move.path.shift();\r\n\r\n\t\t\tif (elem.isAwake) {\r\n\t\t\t\tthis.$physics.moveTo(elem);\r\n\t\t\t\tthis.$physics.state = elem.pState;//??\r\n\r\n\t\t\t\tcrr.front = elem.pState.front;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (elem.action) {\r\n\t\t\t\tcrr.action = elem.action;\r\n\t\t\t\t//crr.action_frame = elem.action_frame;\r\n\t\t\t}\r\n\t\t\tif (elem.emotion) {\r\n\t\t\t\tcrr.emotion = elem.emotion;\r\n\t\t\t\t//crr.emotion_frame = elem.emotion_frame;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} itemSN\r\n\t * @param {number} from\r\n\t * @param {number} to\r\n\t */\r\n\t$moveItem(equipId, from, to) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @returns {SceneSkill]\r\n\t */\r\n\tinvokeSkill(skillId) {\r\n\t\tlet skill = new SceneSkill();\r\n\t\tskill.load(skillId, this);\r\n\t\tthis.activeSkills.set(skillId, skill);\r\n\t\treturn skill;\r\n\t}\r\n\r\n\t/**\r\n\t * after step, before rendering\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst renderer = this.renderer;\r\n\r\n\t\tthis.chatCtrl.update(stamp);\r\n\r\n\t\tthis.activeSkills.forEach(skill => {\r\n\t\t\tif (skill) {\r\n\t\t\t\tif (skill.isEnd()) {\r\n\t\t\t\t\tthis.activeSkills.delete(skill.skillId);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tskill.update(stamp, this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//TODO: 結算攻擊傷害，skill.attackInfo\r\n\t\t\t\tthis._handleAttack();\r\n\r\n\t\t\t\t//clear all attack\r\n\t\t\t\tskill.attackInfo.allAttack.length = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._player_control();\r\n\r\n\t\tif ($gv.m_editor_mode) {\r\n\t\t\tif (renderer.speed > 0 && this.$physics && this.enablePhysics) {\r\n\t\t\t\tthis._applyState({\r\n\t\t\t\t\tfront: this.$physics.state.front,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.$physics) {\r\n\t\t\tthis._applyState(this.$physics.state);\r\n\t\t}\r\n\r\n\t\tif (this.$physics) {\r\n\t\t\tif (renderer && this.enablePhysics) {\r\n\t\t\t\tconst pos = this.$physics.getPosition();\r\n\t\t\t\tconst px = Math.trunc(pos.x * $gv.CANVAS_SCALE + 0.5);\r\n\t\t\t\tconst py = Math.trunc(pos.y * $gv.CANVAS_SCALE + 0.5);\r\n\r\n\t\t\t\t//position\r\n\t\t\t\trenderer.x = px;\r\n\t\t\t\trenderer.y = py;\r\n\t\t\t\t\r\n\t\t\t\t//rotate\r\n\t\t\t\tif (this.$physics.body.GetAngle() || this.$physics.body.GetAngularVelocity()) {\r\n\t\t\t\t\trenderer.angle = this.$physics.body.GetAngle();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trenderer.angle = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//layer\r\n\t\t\t\tthis.$layer = this.$physics.getLayer();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trenderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_$drawName(renderer) {\r\n\t\tconst name = this.id;\r\n\t\tthis.__drawName(renderer, name);\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_$drawChatBalloon(renderer) {\r\n\t\tthis.chatCtrl.draw(renderer, this);//this.chatText || \"123451234512345123451234512345123451234512345123451234512345123451234512345123451234\", 84\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_player_control() {\r\n\t}\r\n\r\n\t/**\r\n\t * 'character physics state' to 'character renderer state'\r\n\t * @param {PPlayerState} player_state\r\n\t */\r\n\t_applyState(player_state) {\r\n\t\tconst renderer = this.renderer;\r\n\t\tconst pState = this.$physics.state;\r\n\r\n\t\t// renderer: apply default action\r\n\t\tif (!pState.invokeSkill) {\r\n\t\t\tconst { front, jump, walk, prone, fly, ladder } = player_state;\r\n\t\t\tconst enablePhysics = chara.enablePhysics;\r\n\r\n\t\t\tif (front != null) {\r\n\t\t\t\trenderer.front = front;\r\n\t\t\t}\r\n\r\n\t\t\tif (ladder) {\r\n\t\t\t\tif (enablePhysics && this.$physics.ladder) {\r\n\t\t\t\t\tif (this.$physics.ladder.isLadder()) {\r\n\t\t\t\t\t\trenderer.action = \"ladder\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trenderer.action = \"rope\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (pState.ladder_move_dir) {\r\n\t\t\t\t\t\tif (chara.renderer.actani.isEnd()) {\r\n\t\t\t\t\t\t\tchara.renderer.actani.reset();\r\n\t\t\t\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trenderer.actani._is_end = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (jump) {\r\n\t\t\t\trenderer.action = \"jump\";\r\n\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t}\r\n\t\t\telse if (walk) {\r\n\t\t\t\trenderer.action = \"walk1\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\t\t\telse if (prone) {\r\n\t\t\t\trenderer.action = \"prone\";\r\n\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t}\r\n\t\t\telse if (fly) {\r\n\t\t\t\trenderer.action = \"fly\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderer.action = \"stand1\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\r\n\t\t\t//TODO: keyboard: emotion key\r\n\t\t\tfor (let i = 0; i <= 9; ++i) {\r\n\t\t\t\tif ($gv.input_keyDown[i]) {\r\n\t\t\t\t\tlet a = [\r\n\t\t\t\t\t\t\"blink\", \"hit\", \"smile\",\r\n\t\t\t\t\t\t\"troubled\", \"cry\", \"angry\",\r\n\t\t\t\t\t\t\"bewildered\", \"stunned\", \"vomit\",\r\n\t\t\t\t\t\t\"oops\"\r\n\t\t\t\t\t];\r\n\t\t\t\t\tlet e = a[i % a.length];\r\n\t\t\t\t\trenderer.emotion = e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 結算攻擊傷害\r\n\t */\r\n\t_handleAttack() {\r\n\t\tif (window.$io) {\r\n\t\t\tthrow new Error(\"未完成\");\r\n\r\n\t\t\tlet attackInfoList = [];\r\n\r\n\t\t\tthis.activeSkills.forEach(skill => {\r\n\t\t\t\tattackInfoList.push(skill.attackInfo);\r\n\t\t\t});\r\n\r\n\t\t\twindow.$io\r\n\t\t\t\t.emit(\"attack\", {\r\n\t\t\t\t\t//TODO: online mode: packet_attack\r\n\t\t\t\t\tattack: attackInfoList\r\n\t\t\t\t})\r\n\t\t\t\t.then(result => {\r\n\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\t//TODO: online mode: attack ??\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.activeSkills.forEach(skill => {\r\n\t\t\t\tconst attackInfo = skill.attackInfo;\r\n\r\n\t\t\t\tfor (let i = 0; i < attackInfo.allAttack.length; ++i) {\r\n\t\t\t\t\tconst attack = attackInfo.allAttack[i];\r\n\r\n\t\t\t\t\tconst targetObject = attack.getTargetObject();\r\n\r\n\t\t\t\t\tfor (let j = 0; j < attack.allDamage.length; ++j) {\r\n\t\t\t\t\t\tlet damVar = this.stat.getCurrentMaxBaseDamage() - this.stat.getCurrentMinBaseDamage();\r\n\t\t\t\t\t\tlet realDamage = this.stat.getCurrentMinBaseDamage() + Math.random() * damVar;\r\n\t\t\t\t\t\tlet damage = attack.allDamage[j] = new DamagePair();\r\n\t\t\t\t\t\tlet style;\r\n\r\n\t\t\t\t\t\tif (Math.trunc(Math.random() * 100) < this.stat.critRate) {\r\n\t\t\t\t\t\t\trealDamage = realDamage * (1 + this.stat.critDamage / 100);\r\n\t\t\t\t\t\t\tdamage.critical = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trealDamage = Math.trunc(realDamage);\r\n\t\t\t\t\t\tdamage.realDamage = realDamage;\r\n\r\n\t\t\t\t\t\ttargetObject.damage(this, realDamage);\r\n\r\n\t\t\t\t\t\tif (damage.critical) {\r\n\t\t\t\t\t\t\tstyle = \"NoCri\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tstyle = \"NoRed\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//TODO: ?? target position\r\n\t\t\t\t\t\tdamageNumberLayer.addDamagePair(this.m_damageSkin || \"default\", style, damage, targetObject.x + (attack.allDamage.length > 1 ? (25 - (1 - j & 1) * 25) : 0), targetObject.y, j * 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\r\n\t\t\t\t\ttargetObject.knockback(this, 16, 16);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * client player\r\n */\r\nexport class SceneCharacter extends BaseSceneCharacter {\r\n\t/**\r\n\t * @param {SceneMap} scene\r\n\t */\r\n\tconstructor(scene) {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = new CharacterRenderer();\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = scene.controller.$createPlayer(this, this.renderer);//new PPlayer();\r\n\r\n\t\tthis.$layer = 5;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {ItemSlot[][]} - item inventory */\r\n\t\tthis.items = new Array(5);\r\n\t\tfor (let i = 0; i < 5; ++i) {\r\n\t\t\tthis.items[i] = new Array(128);\r\n\t\t\tfor (let j = 0; j < 128; ++j) {\r\n\t\t\t\tthis.items[i][j] = new ItemSlot(j, null, null, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//this.addItem(\"01005177\", 1);\r\n\t\t//this.addItem(\"01053322\", 1);\r\n\t\t//this.addItem(\"01073284\", 1);\r\n\r\n\t\tthis.stat.onJobChange(this._onJobChange.bind(this));\r\n\t}\r\n\r\n\t_onJobChange() {\r\n\t\t//TODO: register buf, debuf, autofire skill\r\n\t\t//TODO: 二段跳取代跳躍鍵\r\n\t\tconst newJob = this.stat.job;\r\n\r\n\t\tconsole.log(\"Player(\" + this.$objectid + \") change job: \" + newJob);\r\n\t}\r\n\r\n\t/**\r\n\t * 'character physics state' to 'character renderer state'\r\n\t * @param {PPlayerState} player_state\r\n\t */\r\n\t_applyState(player_state) {\r\n\t\tsuper._applyState(player_state);\r\n\r\n\t\tthis.$recMove();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_player_control() {\r\n\t\tif (!this.$physics) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//if (!this.$physics.state.jump && this.$$jump_state) {\r\n\t\t//\tdelete this.$$jump_state;\r\n\t\t//}\r\n\t\tconst key_map = keyboard_map[$gv.m_editor_mode ? 1 : 0];\r\n\t\t/** @type {{[key:string]:number}} */\r\n\t\tlet ikey = {};\r\n\r\n\t\tlet can_use_skill = this.activeSkills.size == 0;//TODO: 以查表法檢查不同技能是否可以同時使用\r\n\r\n\t\tfor (let keyName in key_map) {\r\n\t\t\t/** @type {KeySlot} */\r\n\t\t\tconst keySlot = key_map[keyName];\r\n\t\t\tif (!keySlot) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst keyDown = $gv.input_keyDown[keyName];\r\n\t\t\tconst keyUp = $gv.input_keyUp[keyName];\r\n\r\n\t\t\tswitch (keySlot.type) {\r\n\t\t\t\tcase \"Command\"://open or close UI, ...\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Action\":\r\n\t\t\t\t\tif (keyDown) {\r\n\t\t\t\t\t\t/** @type {ActionSlot} */\r\n\t\t\t\t\t\tconst ck = keySlot.data;\r\n\t\t\t\t\t\tikey[ck.action] = keyDown;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Item\":\r\n\t\t\t\t\tif (keyDown) {\r\n\t\t\t\t\t\t/** @type {ItemSlot} */\r\n\t\t\t\t\t\tconst itemSlot = keySlot.data;\r\n\t\t\t\t\t\tthis.useItem(itemSlot.data.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t};\r\n\t\tfor (let keyName in key_map) {\r\n\t\t\t/** @type {KeySlot} */\r\n\t\t\tconst keySlot = key_map[keyName];\r\n\t\t\tif (!keySlot) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst keyDown = $gv.input_keyDown[keyName];\r\n\t\t\tconst keyUp = $gv.input_keyUp[keyName];\r\n\r\n\t\t\tif (keySlot.type == \"Skill\") {\r\n\t\t\t\t/** @type {SkillSlot} */\r\n\t\t\t\tconst sk = keySlot.data;\r\n\t\t\t\tconst skill_id = sk.skill_id;\r\n\t\t\t\tlet skill = this.activeSkills.get(skill_id);\r\n\t\t\t\tif (keyDown && can_use_skill) {\r\n\t\t\t\t\tskill = this.invokeSkill(sk.skill_id);\r\n\t\t\t\t}\r\n\t\t\t\tif (skill) {\r\n\t\t\t\t\tskill.control(ikey, keyDown, keyUp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.$physics.control(ikey);//apply action control\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} itemId\r\n\t * @param {number} amount\r\n\t */\r\n\taddItem(itemId, amount) {\r\n\t\tif (window.$io) {//TODO: online mode: addItem\r\n\t\t\tthrow new Error(\"未完成\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/** @type {Partial<ItemEquip>} */\r\n\t\t\tlet props = {//test attr\r\n\t\t\t\tincDEXr: Math.trunc(Math.random() * 3),\r\n\t\t\t\ttimeLimited: Date(),\r\n\t\t\t};\r\n\r\n\t\t\t$createItem(itemId, props).then(item => {\r\n\t\t\t\tthis._addItem(item, amount);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\t_addItem(itemData, amount) {\r\n\t\tlet SN = 123;\r\n\t\tlet itemId = itemData.id;\r\n\t\tlet slotType;\r\n\t\tswitch (itemId[0]) {\r\n\t\t\tcase '0':\r\n\t\t\t\tslotType = 0;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.info(`~give ${this.id}: ${itemId} * ${amount}`);\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.items[slotType].length; ++i) {\r\n\t\t\tif (this.items[slotType][i].isEmpty()) {\r\n\t\t\t\tif (window.$addItem_repeatEquip) {\r\n\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, slotType ? amount : 1);\r\n\t\t\t\t\tconsole.info(`give ${this.id}: ${itemId} * ${amount}`);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (slotType == 0) {\r\n\t\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, 1);\r\n\t\t\t\t\t\tamount--;\r\n\t\t\t\t\t\tif (amount == 0) {\r\n\t\t\t\t\t\t\tconsole.info(`repeat give ${this.id}: ${itemId}`);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, amount);\r\n\t\t\t\t\t\tconsole.info(`give ${this.id}: ${itemId} * ${amount}`);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;//item inventory was full\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} type - item type\r\n\t * @param {number} slot\r\n\t */\r\n\tasync removeItem(type, slot) {\r\n\t\tif (window.$io) {//TODO: online mode: removeItem\r\n\t\t\tthrow new Error(\"未完成\");\r\n\r\n\t\t\tlet result = await window.$io.emit(\"removeItem\", {\r\n\t\t\t\ttype: type,\r\n\t\t\t\tslot: slot,\r\n\t\t\t});\r\n\t\t\tif (result) {\r\n\t\t\t\tthis._removeItem(type, slot);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._removeItem(type, slot);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} type - item type\r\n\t * @param {number} slot\r\n\t */\r\n\t_removeItem(type, slot) {\r\n\t\tthis.items[type][slot]._clear();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} from\r\n\t * @param {number} to\r\n\t */\r\n\tmoveItemToSlot(from, to) {\r\n\t\t//TODO: (\"./ui/Basic/UISlotItem.vue\").methods.drop\r\n\t\tdebugger;\r\n\t}\r\n\r\n\t///**\r\n\t// * @param {any} id\r\n\t// */\r\n\t//$getItem(id) {\r\n\t//\tthis.itemSlot\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {number} itemId\r\n\t */\r\n\tfindItem(itemId) {\r\n\t\tfor (let i = 0; i < this.items.length; ++i) {\r\n\t\t\tfor (let j = 0; j < this.items[i].length; ++j) {\r\n\t\t\t\tlet itemSlot = this.items[i][j];\r\n\r\n\t\t\t\tif (itemSlot && itemSlot.data && (itemSlot.data.id == itemId)) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttypeName: ItemCategoryInfo.typeName[i],\r\n\t\t\t\t\t\titemSlot: itemSlot,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\ttypeName: null,\r\n\t\t\titemSlot: null,\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} itemId\r\n\t */\r\n\tuseItem(itemId) {\r\n\t\tif (window.$io) {\r\n\t\t\twindow.$io.emit(\"useItem\", {\r\n\t\t\t\titemId: itemId\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst args = arguments;\r\n\t\t\tlet existItem = this.findItem(itemId).itemSlot;\r\n\r\n\t\t\tif (existItem) {\r\n\t\t\t\tif (!$gv.m_editor_mode) {\r\n\t\t\t\t\tconsole.log(`消耗道具：${itemId}。未完成`);\r\n\t\t\t\t\tthis._consume(itemId, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(`使用道具：${itemId}。`);\r\n\t\t\t\t}\r\n\t\t\t\tupdate_renderer.call(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ($gv.m_editor_mode) {\r\n\t\t\t\t\tthis.addItem(itemId, 1);\r\n\t\t\t\t\tupdate_renderer.call(this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"無法使用不存在的道具。\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction update_renderer() {\r\n\t\t\t\t//TODO: implement job\r\n\t\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\t\tconst category = args[1], equipInfo = args[2];\r\n\t\t\t\t\tthis.renderer.use(itemId, category, equipInfo);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.renderer.use(itemId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tasync say(text) {\r\n\t\tif (window.$io) {\r\n\t\t\tlet result = await window.$io.emit(\"chat\", {\r\n\t\t\t\t$style: this.chatCtrl.style,\r\n\t\t\t\ttext: text,\r\n\t\t\t});\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.chatCtrl.enter(text);\r\n\t\t\t}\r\n\t\t\treturn result;//boolean\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.chatCtrl.enter(text);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\t$emit(socket) {\r\n\t\tif (this.$outPacket.move) {\r\n\t\t\tsocket.emit(\"charaMove\", this.$outPacket.move);\r\n\t\t\tthis.$outPacket.move = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet charaMove = new $Packet_CharacterMove();\r\n\r\n\t\t\tcharaMove.capture(this);\r\n\r\n\t\t\tsocket.emit(\"charaMove\", charaMove);\r\n\t\t}\r\n\r\n\t\tthis.$outPacket.move = null;\r\n\t}\r\n\t\r\n\t$recMove() {\r\n\t\tlet move = this.$outPacket.move || new $Packet_CharacterMove();\r\n\t\tmove.capture(this);\r\n\t\tthis.$outPacket.move = move;\r\n\t}\r\n}\r\n\r\n/**\r\n * remote player\r\n */\r\nexport class SceneRemoteCharacter extends BaseSceneCharacter {\r\n\t/**\r\n\t * @param {SceneMap} scene\r\n\t */\r\n\tconstructor(scene) {\r\n\t\tsuper();\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tdelete this.$physics;\r\n\t\t\tObject.defineProperty(this, \"$physics\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this.$$physics;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tif (value == null) {\r\n\t\t\t\t\t\tconsole.error(\"can not set SceneRemoteCharacter.$physics = null;\");\r\n\t\t\t\t\t\talert(\"can not set SceneRemoteCharacter.$physics = null;\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$$physics = value;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tdelete this.renderer;\r\n\t\t\tObject.defineProperty(this, \"renderer\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this.$$renderer;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tif (value == null) {\r\n\t\t\t\t\t\tconsole.error(\"can not set SceneRemoteCharacter.renderer = null;\");\r\n\t\t\t\t\t\talert(\"can not set SceneRemoteCharacter.renderer = null;\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$$renderer = value;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = new CharacterRenderer();\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = scene.controller.$createPlayer(this, this.renderer);\r\n\t}\r\n\r\n\tget $remote() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_player_control() {\r\n\t\tthis._remote_control();\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { PPlayerState } from \"../game/Physics/PPlayer.js\";//debug\r\n\r\n\r\nexport class BaseMoveElem {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.x = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y = null;\r\n\r\n\t\t/** @type {number} - linear velocity x */\r\n\t\tthis.vx = undefined;\r\n\r\n\t\t/** @type {number} - linear velocity y */\r\n\t\tthis.vy = undefined;\r\n\r\n\t\t/** @type {number} - force x */\r\n\t\tthis.fx = undefined;\r\n\r\n\t\t/** @type {number} - force y */\r\n\t\tthis.fy = undefined;\r\n\r\n\t\t/** @type {PPlayerState} - player physics state */\r\n\t\tthis.pState = null;\r\n\r\n\t\t/** @type {number} - time elapsed */\r\n\t\tthis.elapsed = 0;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.isAwake = undefined;// value = ?\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = undefined;\r\n\t\t/** @type {number} */\r\n\t\tthis.action_frame = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.emotion = undefined;\r\n\t\t/** @type {number} */\r\n\t\tthis.emotion_frame = undefined;\r\n\t}\r\n}\r\n\r\nexport class CharacterMoveElem extends BaseMoveElem {\r\n}\r\n\r\nexport class MobMoveElem extends BaseMoveElem {\r\n}\r\n\r\n","﻿\r\nimport { Sprite } from \"../Sprite.js\";\r\nimport { Animation } from \"../Animation.js\";\r\n\r\n\r\nexport class LifeRenderer /*extends SceneObject*/ {\r\n\tconstructor() {\r\n\t\t//super();\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = \"\";\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {{[action:string]:Animation}} */\r\n\t\tthis.actions = {};\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._action = \"stand\";//static default\r\n\t\t\r\n\t\tthis._raw = null;\r\n\t}\r\n\t\r\n\tget name() {\r\n\t\treturn this.constructor._desc[this.id].name;\r\n\t}\r\n\t\r\n\tgetDefaultAction() {\r\n\t\tif (this.actions.stand) {\r\n\t\t\treturn \"stand\";\r\n\t\t}\r\n\t\telse if(this.actions.fly) {\r\n\t\t\treturn \"fly\";\r\n\t\t}\r\n\t\talert(this.constructor.name + \" (\" + this.id + \") default must is 'stand' or 'fly'\");\r\n\t\treturn new Error(this.constructor.name + \" (\" + this.id + \") default must is 'stand' or 'fly'\");\r\n\t}\r\n\t\r\n\t/** @type {string} */\r\n\tget action() {\r\n\t\treturn this._action;\r\n\t}\r\n\tset action(act) {\r\n\t\tif (this._action != act) {\r\n\t\t\tthis._action = act;\r\n\t\t\tif (this.actions[act]) {\r\n\t\t\t\tthis.actions[act].reset();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t///**\r\n\t// * @param {string} act\r\n\t// */\r\n\t//setAction(act) {\r\n\t//\tthrow new Error(\"Not implement\");\r\n\t//}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tasync load(id) {\r\n\t\tlet tasks = [];\r\n\t\tlet that = this;\r\n\t\tthis.id = id;//\"8880140\";//\"8880141\";//\"8880150\";//\"8880151\";\r\n\t\tthis._url = [this.constructor._base_path, this.id].join(\"/\");\r\n\t\t\r\n\t\tif (!this.constructor._desc[id]) {\r\n\t\t\tlet task = this.constructor.loadDescription(id);\r\n\t\t\ttasks.push(task);\r\n\t\t}\r\n\r\n\t\tlet task = $get.data(this._url).then(async function (raw) {\r\n\t\t\tthat._raw = raw;\r\n\t\t\tif (that._raw) {\r\n\t\t\t\tawait that._construct_actions();\r\n\t\t\t\t\r\n\t\t\t\tthat._action = that.getDefaultAction();//set default action; is fly mob ?\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t});\r\n\t\ttasks.push(task);\r\n\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\tasync _construct_actions() {\r\n\t\tvar tasks = [];\r\n\r\n\t\tfor (var i = 0; i < this.constructor._animations.length; ++i) {\r\n\t\t\tvar t = this.constructor._animations[i];\r\n\r\n\t\t\tfor (var $index = 1; ; ++$index) {\r\n\t\t\t\tlet action;\r\n\t\t\t\tvar name = eval(t);\r\n\r\n\t\t\t\tif (!(name in this._raw)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taction = new Animation(this._raw[name], [this._url, name].join(\"/\"));\r\n\t\t\t\taction.is_loop = false;\r\n\t\t\t\t\r\n\t\t\t\ttasks.push(action.load());\r\n\t\t\t\t\r\n\t\t\t\tthis.actions[name] = action;\r\n\r\n\t\t\t\tif (!name.endsWith($index)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.actions[this.action]) {\r\n\t\t\tconst ani = this.actions[this.action];\r\n\t\t\t\r\n\t\t\tani.update(stamp);\r\n\t\t\t\t\r\n\t\t\t//TODO: move this code to: MapLifeEntity.prototype._applyState\r\n\t\t\t//if (ani.isEnd()) {\r\n\t\t\t//\tthis.action = this.getDefaultAction();//default loop action: stand\r\n\t\t\t//\tthis.actions[this.action].update(stamp);\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * paint\r\n\t * @param {Engine} engine\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\tdraw(engine, x, y, angle, flip) {\r\n\t\tif (this.actions[this.action]) {\r\n\t\t\t/** @type {Animation} */\r\n\t\t\tconst act = this.actions[this.action];\r\n\t\t\tact.draw(engine, x, y, angle, flip);\r\n\t\t}\r\n\t}\r\n\tpaint(engine) {\r\n\t\tdebugger;\r\n\t\talert(\"Not Implement\");\r\n\t\trender(engine);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\talert(\"Not Implement\");\r\n\t}\r\n\r\n\tstatic get _animations() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n","/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// Color for debug drawing. Each value has the range [0,1].\r\nexport class b2Color {\r\n    constructor(rr = 0.5, gg = 0.5, bb = 0.5, aa = 1.0) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n    }\r\n    Clone() {\r\n        return new b2Color().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.r = other.r;\r\n        this.g = other.g;\r\n        this.b = other.b;\r\n        this.a = other.a;\r\n        return this;\r\n    }\r\n    IsEqual(color) {\r\n        return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\r\n    }\r\n    IsZero() {\r\n        return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\r\n    }\r\n    GetColor(out) {\r\n        out.Copy(this);\r\n        return out;\r\n    }\r\n    SetColor(color) {\r\n        this.Copy(color);\r\n    }\r\n    Set(a0, a1, a2, a3 = 1.0) {\r\n        if (a0 instanceof b2Color) {\r\n            this.Copy(a0);\r\n        }\r\n        else {\r\n            this.SetRGBA(a0, a1, a2, a3);\r\n        }\r\n    }\r\n    SetByteRGB(r, g, b) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        return this;\r\n    }\r\n    SetByteRGBA(r, g, b, a) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        this.a = a / 0xff;\r\n        return this;\r\n    }\r\n    SetRGB(rr, gg, bb) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        return this;\r\n    }\r\n    SetRGBA(rr, gg, bb, aa) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n        return this;\r\n    }\r\n    SelfAdd(color) {\r\n        this.r += color.r;\r\n        this.g += color.g;\r\n        this.b += color.b;\r\n        this.a += color.a;\r\n        return this;\r\n    }\r\n    Add(color, out) {\r\n        out.r = this.r + color.r;\r\n        out.g = this.g + color.g;\r\n        out.b = this.b + color.b;\r\n        out.a = this.a + color.a;\r\n        return out;\r\n    }\r\n    SelfSub(color) {\r\n        this.r -= color.r;\r\n        this.g -= color.g;\r\n        this.b -= color.b;\r\n        this.a -= color.a;\r\n        return this;\r\n    }\r\n    Sub(color, out) {\r\n        out.r = this.r - color.r;\r\n        out.g = this.g - color.g;\r\n        out.b = this.b - color.b;\r\n        out.a = this.a - color.a;\r\n        return out;\r\n    }\r\n    SelfMul_0_1(s) {\r\n        this.r *= s;\r\n        this.g *= s;\r\n        this.b *= s;\r\n        this.a *= s;\r\n        return this;\r\n    }\r\n    Mul_0_1(s, out) {\r\n        out.r = this.r * s;\r\n        out.g = this.g * s;\r\n        out.b = this.b * s;\r\n        out.a = this.a * s;\r\n        return this;\r\n    }\r\n    Mix(mixColor, strength) {\r\n        b2Color.MixColors(this, mixColor, strength);\r\n    }\r\n    static MixColors(colorA, colorB, strength) {\r\n        const dr = (strength * (colorB.r - colorA.r));\r\n        const dg = (strength * (colorB.g - colorA.g));\r\n        const db = (strength * (colorB.b - colorA.b));\r\n        const da = (strength * (colorB.a - colorA.a));\r\n        colorA.r += dr;\r\n        colorA.g += dg;\r\n        colorA.b += db;\r\n        colorA.a += da;\r\n        colorB.r -= dr;\r\n        colorB.g -= dg;\r\n        colorB.b -= db;\r\n        colorB.a -= da;\r\n    }\r\n    MakeStyleString(alpha = this.a) {\r\n        return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\r\n    }\r\n    static MakeStyleString(r, g, b, a = 1.0) {\r\n        // function clamp(x: number, lo: number, hi: number) { return x < lo ? lo : hi < x ? hi : x; }\r\n        r *= 255; // r = clamp(r, 0, 255);\r\n        g *= 255; // g = clamp(g, 0, 255);\r\n        b *= 255; // b = clamp(b, 0, 255);\r\n        // a = clamp(a, 0, 1);\r\n        if (a < 1) {\r\n            return `rgba(${r},${g},${b},${a})`;\r\n        }\r\n        else {\r\n            return `rgb(${r},${g},${b})`;\r\n        }\r\n    }\r\n}\r\nb2Color.RED = new b2Color(1, 0, 0);\r\nb2Color.GREEN = new b2Color(0, 1, 0);\r\nb2Color.BLUE = new b2Color(0, 0, 1);\r\nexport var b2DrawFlags;\r\n(function (b2DrawFlags) {\r\n    b2DrawFlags[b2DrawFlags[\"e_none\"] = 0] = \"e_none\";\r\n    b2DrawFlags[b2DrawFlags[\"e_shapeBit\"] = 1] = \"e_shapeBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_jointBit\"] = 2] = \"e_jointBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_aabbBit\"] = 4] = \"e_aabbBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_pairBit\"] = 8] = \"e_pairBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_centerOfMassBit\"] = 16] = \"e_centerOfMassBit\";\r\n    // #if B2_ENABLE_PARTICLE\r\n    b2DrawFlags[b2DrawFlags[\"e_particleBit\"] = 32] = \"e_particleBit\";\r\n    // #endif\r\n    b2DrawFlags[b2DrawFlags[\"e_controllerBit\"] = 64] = \"e_controllerBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_all\"] = 63] = \"e_all\";\r\n})(b2DrawFlags || (b2DrawFlags = {}));\r\n/// Implement and register this class with a b2World to provide debug drawing of physics\r\n/// entities in your game.\r\nexport class b2Draw {\r\n    constructor() {\r\n        this.m_drawFlags = 0;\r\n    }\r\n    SetFlags(flags) {\r\n        this.m_drawFlags = flags;\r\n    }\r\n    GetFlags() {\r\n        return this.m_drawFlags;\r\n    }\r\n    AppendFlags(flags) {\r\n        this.m_drawFlags |= flags;\r\n    }\r\n    ClearFlags(flags) {\r\n        this.m_drawFlags &= ~flags;\r\n    }\r\n    PushTransform(xf) { }\r\n    PopTransform(xf) { }\r\n    DrawPolygon(vertices, vertexCount, color) { }\r\n    DrawSolidPolygon(vertices, vertexCount, color) { }\r\n    DrawCircle(center, radius, color) { }\r\n    DrawSolidCircle(center, radius, axis, color) { }\r\n    // #if B2_ENABLE_PARTICLE\r\n    DrawParticles(centers, radius, colors, count) { }\r\n    // #endif\r\n    DrawSegment(p1, p2, color) { }\r\n    DrawTransform(xf) { }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// Timer for profiling. This has platform specific code and may\r\n/// not work on every platform.\r\nexport class b2Timer {\r\n    constructor() {\r\n        this.m_start = Date.now();\r\n    }\r\n    /// Reset the timer.\r\n    Reset() {\r\n        this.m_start = Date.now();\r\n        return this;\r\n    }\r\n    /// Get the time since construction or the last reset.\r\n    GetMilliseconds() {\r\n        return Date.now() - this.m_start;\r\n    }\r\n}\r\nexport class b2Counter {\r\n    constructor() {\r\n        this.m_count = 0;\r\n        this.m_min_count = 0;\r\n        this.m_max_count = 0;\r\n    }\r\n    GetCount() {\r\n        return this.m_count;\r\n    }\r\n    GetMinCount() {\r\n        return this.m_min_count;\r\n    }\r\n    GetMaxCount() {\r\n        return this.m_max_count;\r\n    }\r\n    ResetCount() {\r\n        const count = this.m_count;\r\n        this.m_count = 0;\r\n        return count;\r\n    }\r\n    ResetMinCount() {\r\n        this.m_min_count = 0;\r\n    }\r\n    ResetMaxCount() {\r\n        this.m_max_count = 0;\r\n    }\r\n    Increment() {\r\n        this.m_count++;\r\n        if (this.m_max_count < this.m_count) {\r\n            this.m_max_count = this.m_count;\r\n        }\r\n    }\r\n    Decrement() {\r\n        this.m_count--;\r\n        if (this.m_min_count > this.m_count) {\r\n            this.m_min_count = this.m_count;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJUaW1lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbW1vbi9iMlRpbWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsZ0VBQWdFO0FBQ2hFLCtCQUErQjtBQUMvQixNQUFNO0lBQU47UUFDUyxZQUFPLEdBQVcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBWXRDLENBQUM7SUFWQyxvQkFBb0I7SUFDYixLQUFLO1FBQ1YsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDMUIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsc0RBQXNEO0lBQy9DLGVBQWU7UUFDcEIsT0FBTyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUNuQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNO0lBQU47UUFDUyxZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBQ3BCLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ3hCLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO0lBMkNqQyxDQUFDO0lBekNRLFFBQVE7UUFDYixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVNLFdBQVc7UUFDaEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7SUFFTSxXQUFXO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBRU0sVUFBVTtRQUNmLE1BQU0sS0FBSyxHQUFXLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDbkMsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7UUFDakIsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRU0sYUFBYTtRQUNsQixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBRU0sYUFBYTtRQUNsQixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBRU0sU0FBUztRQUNkLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUVmLElBQUksSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztTQUNqQztJQUNILENBQUM7SUFFTSxTQUFTO1FBQ2QsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBRWYsSUFBSSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDbkMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQztDQUNGIn0=","/*\r\n* Copyright (c) 2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// This is a growable LIFO stack with an initial capacity of N.\r\n/// If the stack size exceeds the initial capacity, the heap is used\r\n/// to increase the size of the stack.\r\nexport class b2GrowableStack {\r\n    constructor(N) {\r\n        this.m_stack = [];\r\n        this.m_count = 0;\r\n        this.m_stack = [ /*N*/];\r\n        this.m_count = 0;\r\n    }\r\n    Reset() {\r\n        this.m_count = 0;\r\n        return this;\r\n    }\r\n    Push(element) {\r\n        this.m_stack[this.m_count] = element;\r\n        this.m_count++;\r\n    }\r\n    Pop() {\r\n        ///b2Assert(this.m_count > 0);\r\n        this.m_count--;\r\n        const element = this.m_stack[this.m_count];\r\n        this.m_stack[this.m_count] = null;\r\n        return element;\r\n    }\r\n    GetCount() {\r\n        return this.m_count;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJHcm93YWJsZVN0YWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvQ29tbW9uL2IyR3Jvd2FibGVTdGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLGdFQUFnRTtBQUNoRSxvRUFBb0U7QUFDcEUsc0NBQXNDO0FBRXRDLE1BQU07SUFJSixZQUFZLENBQVM7UUFIZCxZQUFPLEdBQVEsRUFBRSxDQUFDO1FBQ2xCLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFHekIsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLENBQUM7SUFFTSxLQUFLO1FBQ1YsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7UUFDakIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sSUFBSSxDQUFDLE9BQVU7UUFDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBRU0sR0FBRztRQUNSLDhCQUE4QjtRQUM5QixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDZixNQUFNLE9BQU8sR0FBTSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDbEMsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztJQUVNLFFBQVE7UUFDYixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztDQUNGIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport class b2BlockAllocator {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJCbG9ja0FsbG9jYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbW1vbi9iMkJsb2NrQWxsb2NhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTTtDQUEwQiJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport class b2StackAllocator {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTdGFja0FsbG9jYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbW1vbi9iMlN0YWNrQWxsb2NhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTTtDQUEwQiJ9","/*\r\n* Copyright (c) 2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_aabbExtension, b2_aabbMultiplier } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2GrowableStack } from \"../Common/b2GrowableStack\";\r\nimport { b2AABB, b2RayCastInput, b2TestOverlapAABB } from \"./b2Collision\";\r\nfunction verify(value) {\r\n    if (value === null) {\r\n        throw new Error();\r\n    }\r\n    return value;\r\n}\r\n/// A node in the dynamic tree. The client does not interact with this directly.\r\nexport class b2TreeNode {\r\n    constructor(id = 0) {\r\n        this.m_id = 0;\r\n        this.aabb = new b2AABB();\r\n        this.userData = null;\r\n        this.parent = null; // or next\r\n        this.child1 = null;\r\n        this.child2 = null;\r\n        this.height = 0; // leaf = 0, free node = -1\r\n        this.m_id = id;\r\n    }\r\n    IsLeaf() {\r\n        return this.child1 === null;\r\n    }\r\n}\r\nexport class b2DynamicTree {\r\n    constructor() {\r\n        this.m_root = null;\r\n        // b2TreeNode* public m_nodes;\r\n        // int32 public m_nodeCount;\r\n        // int32 public m_nodeCapacity;\r\n        this.m_freeList = null;\r\n        this.m_path = 0;\r\n        this.m_insertionCount = 0;\r\n    }\r\n    GetUserData(proxy) {\r\n        ///b2Assert(proxy !== null);\r\n        return proxy.userData;\r\n    }\r\n    GetFatAABB(proxy) {\r\n        ///b2Assert(proxy !== null);\r\n        return proxy.aabb;\r\n    }\r\n    Query(callback, aabb) {\r\n        if (this.m_root === null)\r\n            return;\r\n        const stack = b2DynamicTree.s_stack.Reset();\r\n        stack.Push(this.m_root);\r\n        while (stack.GetCount() > 0) {\r\n            const node = stack.Pop();\r\n            if (node === null) {\r\n                continue;\r\n            }\r\n            if (node.aabb.TestOverlap(aabb)) {\r\n                if (node.IsLeaf()) {\r\n                    const proceed = callback(node);\r\n                    if (!proceed) {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    stack.Push(node.child1);\r\n                    stack.Push(node.child2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    RayCast(callback, input) {\r\n        if (this.m_root === null)\r\n            return;\r\n        const p1 = input.p1;\r\n        const p2 = input.p2;\r\n        const r = b2Vec2.SubVV(p2, p1, b2DynamicTree.s_r);\r\n        ///b2Assert(r.LengthSquared() > 0);\r\n        r.Normalize();\r\n        // v is perpendicular to the segment.\r\n        const v = b2Vec2.CrossOneV(r, b2DynamicTree.s_v);\r\n        const abs_v = b2Vec2.AbsV(v, b2DynamicTree.s_abs_v);\r\n        // Separating axis for segment (Gino, p80).\r\n        // |dot(v, p1 - c)| > dot(|v|, h)\r\n        let maxFraction = input.maxFraction;\r\n        // Build a bounding box for the segment.\r\n        const segmentAABB = b2DynamicTree.s_segmentAABB;\r\n        let t_x = p1.x + maxFraction * (p2.x - p1.x);\r\n        let t_y = p1.y + maxFraction * (p2.y - p1.y);\r\n        segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\r\n        segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\r\n        segmentAABB.upperBound.x = b2Max(p1.x, t_x);\r\n        segmentAABB.upperBound.y = b2Max(p1.y, t_y);\r\n        const stack = b2DynamicTree.s_stack.Reset();\r\n        stack.Push(this.m_root);\r\n        while (stack.GetCount() > 0) {\r\n            const node = stack.Pop();\r\n            if (node === null) {\r\n                continue;\r\n            }\r\n            if (!b2TestOverlapAABB(node.aabb, segmentAABB)) {\r\n                continue;\r\n            }\r\n            // Separating axis for segment (Gino, p80).\r\n            // |dot(v, p1 - c)| > dot(|v|, h)\r\n            const c = node.aabb.GetCenter();\r\n            const h = node.aabb.GetExtents();\r\n            const separation = b2Abs(b2Vec2.DotVV(v, b2Vec2.SubVV(p1, c, b2Vec2.s_t0))) - b2Vec2.DotVV(abs_v, h);\r\n            if (separation > 0) {\r\n                continue;\r\n            }\r\n            if (node.IsLeaf()) {\r\n                const subInput = b2DynamicTree.s_subInput;\r\n                subInput.p1.Copy(input.p1);\r\n                subInput.p2.Copy(input.p2);\r\n                subInput.maxFraction = maxFraction;\r\n                const value = callback(subInput, node);\r\n                if (value === 0) {\r\n                    // The client has terminated the ray cast.\r\n                    return;\r\n                }\r\n                if (value > 0) {\r\n                    // Update segment bounding box.\r\n                    maxFraction = value;\r\n                    t_x = p1.x + maxFraction * (p2.x - p1.x);\r\n                    t_y = p1.y + maxFraction * (p2.y - p1.y);\r\n                    segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\r\n                    segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\r\n                    segmentAABB.upperBound.x = b2Max(p1.x, t_x);\r\n                    segmentAABB.upperBound.y = b2Max(p1.y, t_y);\r\n                }\r\n            }\r\n            else {\r\n                stack.Push(node.child1);\r\n                stack.Push(node.child2);\r\n            }\r\n        }\r\n    }\r\n    AllocateNode() {\r\n        // Expand the node pool as needed.\r\n        if (this.m_freeList) {\r\n            const node = this.m_freeList;\r\n            this.m_freeList = node.parent; // this.m_freeList = node.next;\r\n            node.parent = null;\r\n            node.child1 = null;\r\n            node.child2 = null;\r\n            node.height = 0;\r\n            node.userData = null;\r\n            return node;\r\n        }\r\n        return new b2TreeNode(b2DynamicTree.s_node_id++);\r\n    }\r\n    FreeNode(node) {\r\n        node.parent = this.m_freeList; // node.next = this.m_freeList;\r\n        node.child1 = null;\r\n        node.child2 = null;\r\n        node.height = -1;\r\n        node.userData = null;\r\n        this.m_freeList = node;\r\n    }\r\n    CreateProxy(aabb, userData) {\r\n        const node = this.AllocateNode();\r\n        // Fatten the aabb.\r\n        const r_x = b2_aabbExtension;\r\n        const r_y = b2_aabbExtension;\r\n        node.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\r\n        node.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\r\n        node.aabb.upperBound.x = aabb.upperBound.x + r_x;\r\n        node.aabb.upperBound.y = aabb.upperBound.y + r_y;\r\n        node.userData = userData;\r\n        node.height = 0;\r\n        this.InsertLeaf(node);\r\n        return node;\r\n    }\r\n    DestroyProxy(proxy) {\r\n        ///b2Assert(proxy.IsLeaf());\r\n        this.RemoveLeaf(proxy);\r\n        this.FreeNode(proxy);\r\n    }\r\n    MoveProxy(proxy, aabb, displacement) {\r\n        ///b2Assert(proxy.IsLeaf());\r\n        if (proxy.aabb.Contains(aabb)) {\r\n            return false;\r\n        }\r\n        this.RemoveLeaf(proxy);\r\n        // Extend AABB.\r\n        // Predict AABB displacement.\r\n        const r_x = b2_aabbExtension + b2_aabbMultiplier * (displacement.x > 0 ? displacement.x : (-displacement.x));\r\n        const r_y = b2_aabbExtension + b2_aabbMultiplier * (displacement.y > 0 ? displacement.y : (-displacement.y));\r\n        proxy.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\r\n        proxy.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\r\n        proxy.aabb.upperBound.x = aabb.upperBound.x + r_x;\r\n        proxy.aabb.upperBound.y = aabb.upperBound.y + r_y;\r\n        this.InsertLeaf(proxy);\r\n        return true;\r\n    }\r\n    InsertLeaf(leaf) {\r\n        ++this.m_insertionCount;\r\n        if (this.m_root === null) {\r\n            this.m_root = leaf;\r\n            this.m_root.parent = null;\r\n            return;\r\n        }\r\n        // Find the best sibling for this node\r\n        const leafAABB = leaf.aabb;\r\n        ///const center: b2Vec2 = leafAABB.GetCenter();\r\n        let index = this.m_root;\r\n        let child1;\r\n        let child2;\r\n        while (!index.IsLeaf()) {\r\n            child1 = index.child1;\r\n            child2 = index.child2;\r\n            const area = index.aabb.GetPerimeter();\r\n            const combinedAABB = b2DynamicTree.s_combinedAABB;\r\n            combinedAABB.Combine2(index.aabb, leafAABB);\r\n            const combinedArea = combinedAABB.GetPerimeter();\r\n            // Cost of creating a new parent for this node and the new leaf\r\n            const cost = 2 * combinedArea;\r\n            // Minimum cost of pushing the leaf further down the tree\r\n            const inheritanceCost = 2 * (combinedArea - area);\r\n            // Cost of descending into child1\r\n            let cost1;\r\n            const aabb = b2DynamicTree.s_aabb;\r\n            let oldArea;\r\n            let newArea;\r\n            if (child1.IsLeaf()) {\r\n                aabb.Combine2(leafAABB, child1.aabb);\r\n                cost1 = aabb.GetPerimeter() + inheritanceCost;\r\n            }\r\n            else {\r\n                aabb.Combine2(leafAABB, child1.aabb);\r\n                oldArea = child1.aabb.GetPerimeter();\r\n                newArea = aabb.GetPerimeter();\r\n                cost1 = (newArea - oldArea) + inheritanceCost;\r\n            }\r\n            // Cost of descending into child2\r\n            let cost2;\r\n            if (child2.IsLeaf()) {\r\n                aabb.Combine2(leafAABB, child2.aabb);\r\n                cost2 = aabb.GetPerimeter() + inheritanceCost;\r\n            }\r\n            else {\r\n                aabb.Combine2(leafAABB, child2.aabb);\r\n                oldArea = child2.aabb.GetPerimeter();\r\n                newArea = aabb.GetPerimeter();\r\n                cost2 = newArea - oldArea + inheritanceCost;\r\n            }\r\n            // Descend according to the minimum cost.\r\n            if (cost < cost1 && cost < cost2) {\r\n                break;\r\n            }\r\n            // Descend\r\n            if (cost1 < cost2) {\r\n                index = child1;\r\n            }\r\n            else {\r\n                index = child2;\r\n            }\r\n        }\r\n        const sibling = index;\r\n        // Create a parent for the siblings.\r\n        const oldParent = sibling.parent;\r\n        const newParent = this.AllocateNode();\r\n        newParent.parent = oldParent;\r\n        newParent.userData = null;\r\n        newParent.aabb.Combine2(leafAABB, sibling.aabb);\r\n        newParent.height = sibling.height + 1;\r\n        if (oldParent) {\r\n            // The sibling was not the root.\r\n            if (oldParent.child1 === sibling) {\r\n                oldParent.child1 = newParent;\r\n            }\r\n            else {\r\n                oldParent.child2 = newParent;\r\n            }\r\n            newParent.child1 = sibling;\r\n            newParent.child2 = leaf;\r\n            sibling.parent = newParent;\r\n            leaf.parent = newParent;\r\n        }\r\n        else {\r\n            // The sibling was the root.\r\n            newParent.child1 = sibling;\r\n            newParent.child2 = leaf;\r\n            sibling.parent = newParent;\r\n            leaf.parent = newParent;\r\n            this.m_root = newParent;\r\n        }\r\n        // Walk back up the tree fixing heights and AABBs\r\n        index = leaf.parent;\r\n        while (index !== null) {\r\n            index = this.Balance(index);\r\n            child1 = index.child1;\r\n            child2 = index.child2;\r\n            ///b2Assert(child1 !== null);\r\n            ///b2Assert(child2 !== null);\r\n            index.height = 1 + b2Max(child1.height, child2.height);\r\n            index.aabb.Combine2(child1.aabb, child2.aabb);\r\n            index = index.parent;\r\n        }\r\n        // this.Validate();\r\n    }\r\n    RemoveLeaf(leaf) {\r\n        if (leaf === this.m_root) {\r\n            this.m_root = null;\r\n            return;\r\n        }\r\n        const parent = leaf.parent;\r\n        const grandParent = parent && parent.parent;\r\n        let sibling;\r\n        if (parent.child1 === leaf) {\r\n            sibling = parent.child2;\r\n        }\r\n        else {\r\n            sibling = parent.child1;\r\n        }\r\n        if (grandParent) {\r\n            // Destroy parent and connect sibling to grandParent.\r\n            if (grandParent.child1 === parent) {\r\n                grandParent.child1 = sibling;\r\n            }\r\n            else {\r\n                grandParent.child2 = sibling;\r\n            }\r\n            sibling.parent = grandParent;\r\n            this.FreeNode(parent);\r\n            // Adjust ancestor bounds.\r\n            let index = grandParent;\r\n            while (index) {\r\n                index = this.Balance(index);\r\n                const child1 = index.child1;\r\n                const child2 = index.child2;\r\n                index.aabb.Combine2(child1.aabb, child2.aabb);\r\n                index.height = 1 + b2Max(child1.height, child2.height);\r\n                index = index.parent;\r\n            }\r\n        }\r\n        else {\r\n            this.m_root = sibling;\r\n            sibling.parent = null;\r\n            this.FreeNode(parent);\r\n        }\r\n        // this.Validate();\r\n    }\r\n    Balance(A) {\r\n        ///b2Assert(A !== null);\r\n        if (A.IsLeaf() || A.height < 2) {\r\n            return A;\r\n        }\r\n        const B = verify(A.child1);\r\n        const C = verify(A.child2);\r\n        const balance = C.height - B.height;\r\n        // Rotate C up\r\n        if (balance > 1) {\r\n            const F = verify(C.child1);\r\n            const G = verify(C.child2);\r\n            // Swap A and C\r\n            C.child1 = A;\r\n            C.parent = A.parent;\r\n            A.parent = C;\r\n            // A's old parent should point to C\r\n            if (C.parent !== null) {\r\n                if (C.parent.child1 === A) {\r\n                    C.parent.child1 = C;\r\n                }\r\n                else {\r\n                    ///b2Assert(C.parent.child2 === A);\r\n                    C.parent.child2 = C;\r\n                }\r\n            }\r\n            else {\r\n                this.m_root = C;\r\n            }\r\n            // Rotate\r\n            if (F.height > G.height) {\r\n                C.child2 = F;\r\n                A.child2 = G;\r\n                G.parent = A;\r\n                A.aabb.Combine2(B.aabb, G.aabb);\r\n                C.aabb.Combine2(A.aabb, F.aabb);\r\n                A.height = 1 + b2Max(B.height, G.height);\r\n                C.height = 1 + b2Max(A.height, F.height);\r\n            }\r\n            else {\r\n                C.child2 = G;\r\n                A.child2 = F;\r\n                F.parent = A;\r\n                A.aabb.Combine2(B.aabb, F.aabb);\r\n                C.aabb.Combine2(A.aabb, G.aabb);\r\n                A.height = 1 + b2Max(B.height, F.height);\r\n                C.height = 1 + b2Max(A.height, G.height);\r\n            }\r\n            return C;\r\n        }\r\n        // Rotate B up\r\n        if (balance < -1) {\r\n            const D = verify(B.child1);\r\n            const E = verify(B.child2);\r\n            // Swap A and B\r\n            B.child1 = A;\r\n            B.parent = A.parent;\r\n            A.parent = B;\r\n            // A's old parent should point to B\r\n            if (B.parent !== null) {\r\n                if (B.parent.child1 === A) {\r\n                    B.parent.child1 = B;\r\n                }\r\n                else {\r\n                    ///b2Assert(B.parent.child2 === A);\r\n                    B.parent.child2 = B;\r\n                }\r\n            }\r\n            else {\r\n                this.m_root = B;\r\n            }\r\n            // Rotate\r\n            if (D.height > E.height) {\r\n                B.child2 = D;\r\n                A.child1 = E;\r\n                E.parent = A;\r\n                A.aabb.Combine2(C.aabb, E.aabb);\r\n                B.aabb.Combine2(A.aabb, D.aabb);\r\n                A.height = 1 + b2Max(C.height, E.height);\r\n                B.height = 1 + b2Max(A.height, D.height);\r\n            }\r\n            else {\r\n                B.child2 = E;\r\n                A.child1 = D;\r\n                D.parent = A;\r\n                A.aabb.Combine2(C.aabb, D.aabb);\r\n                B.aabb.Combine2(A.aabb, E.aabb);\r\n                A.height = 1 + b2Max(C.height, D.height);\r\n                B.height = 1 + b2Max(A.height, E.height);\r\n            }\r\n            return B;\r\n        }\r\n        return A;\r\n    }\r\n    GetHeight() {\r\n        if (this.m_root === null) {\r\n            return 0;\r\n        }\r\n        return this.m_root.height;\r\n    }\r\n    static GetAreaNode(node) {\r\n        if (node === null) {\r\n            return 0;\r\n        }\r\n        if (node.IsLeaf()) {\r\n            return 0;\r\n        }\r\n        let area = node.aabb.GetPerimeter();\r\n        area += b2DynamicTree.GetAreaNode(node.child1);\r\n        area += b2DynamicTree.GetAreaNode(node.child2);\r\n        return area;\r\n    }\r\n    GetAreaRatio() {\r\n        if (this.m_root === null) {\r\n            return 0;\r\n        }\r\n        const root = this.m_root;\r\n        const rootArea = root.aabb.GetPerimeter();\r\n        const totalArea = b2DynamicTree.GetAreaNode(this.m_root);\r\n        /*\r\n        float32 totalArea = 0.0;\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          const b2TreeNode* node = m_nodes + i;\r\n          if (node.height < 0) {\r\n            // Free node in pool\r\n            continue;\r\n          }\r\n    \r\n          totalArea += node.aabb.GetPerimeter();\r\n        }\r\n        */\r\n        return totalArea / rootArea;\r\n    }\r\n    ComputeHeightNode(node) {\r\n        if (node.IsLeaf()) {\r\n            return 0;\r\n        }\r\n        const height1 = this.ComputeHeightNode(node.child1);\r\n        const height2 = this.ComputeHeightNode(node.child2);\r\n        return 1 + b2Max(height1, height2);\r\n    }\r\n    ComputeHeight() {\r\n        const height = this.ComputeHeightNode(this.m_root);\r\n        return height;\r\n    }\r\n    ValidateStructure(index) {\r\n        if (index === null) {\r\n            return;\r\n        }\r\n        if (index === this.m_root) {\r\n            ///b2Assert(index.parent === null);\r\n        }\r\n        const node = index;\r\n        const child1 = node.child1;\r\n        const child2 = node.child2;\r\n        if (node.IsLeaf()) {\r\n            ///b2Assert(child1 === null);\r\n            ///b2Assert(child2 === null);\r\n            ///b2Assert(node.height === 0);\r\n            return;\r\n        }\r\n        ///b2Assert(child1.parent === index);\r\n        ///b2Assert(child2.parent === index);\r\n        this.ValidateStructure(child1);\r\n        this.ValidateStructure(child2);\r\n    }\r\n    ValidateMetrics(index) {\r\n        if (index === null) {\r\n            return;\r\n        }\r\n        const node = index;\r\n        const child1 = node.child1;\r\n        const child2 = node.child2;\r\n        if (node.IsLeaf()) {\r\n            ///b2Assert(child1 === null);\r\n            ///b2Assert(child2 === null);\r\n            ///b2Assert(node.height === 0);\r\n            return;\r\n        }\r\n        ///const height1: number = child1.height;\r\n        ///const height2: number = child2.height;\r\n        ///const height: number = 1 + b2Max(height1, height2);\r\n        ///b2Assert(node.height === height);\r\n        const aabb = b2DynamicTree.s_aabb;\r\n        aabb.Combine2(child1.aabb, child2.aabb);\r\n        ///b2Assert(aabb.lowerBound === node.aabb.lowerBound);\r\n        ///b2Assert(aabb.upperBound === node.aabb.upperBound);\r\n        this.ValidateMetrics(child1);\r\n        this.ValidateMetrics(child2);\r\n    }\r\n    Validate() {\r\n        this.ValidateStructure(this.m_root);\r\n        this.ValidateMetrics(this.m_root);\r\n        // let freeCount: number = 0;\r\n        let freeIndex = this.m_freeList;\r\n        while (freeIndex !== null) {\r\n            freeIndex = freeIndex.parent; // freeIndex = freeIndex.next;\r\n            // ++freeCount;\r\n        }\r\n        ///b2Assert(this.GetHeight() === this.ComputeHeight());\r\n    }\r\n    static GetMaxBalanceNode(node, maxBalance) {\r\n        if (node === null) {\r\n            return maxBalance;\r\n        }\r\n        if (node.height <= 1) {\r\n            return maxBalance;\r\n        }\r\n        ///b2Assert(!node.IsLeaf());\r\n        const child1 = node.child1;\r\n        const child2 = node.child2;\r\n        const balance = b2Abs(child2.height - child1.height);\r\n        return b2Max(maxBalance, balance);\r\n    }\r\n    GetMaxBalance() {\r\n        const maxBalance = b2DynamicTree.GetMaxBalanceNode(this.m_root, 0);\r\n        /*\r\n        int32 maxBalance = 0;\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          const b2TreeNode* node = m_nodes + i;\r\n          if (node.height <= 1) {\r\n            continue;\r\n          }\r\n    \r\n          b2Assert(!node.IsLeaf());\r\n    \r\n          int32 child1 = node.child1;\r\n          int32 child2 = node.child2;\r\n          int32 balance = b2Abs(m_nodes[child2].height - m_nodes[child1].height);\r\n          maxBalance = b2Max(maxBalance, balance);\r\n        }\r\n        */\r\n        return maxBalance;\r\n    }\r\n    RebuildBottomUp() {\r\n        /*\r\n        int32* nodes = (int32*)b2Alloc(m_nodeCount * sizeof(int32));\r\n        int32 count = 0;\r\n    \r\n        // Build array of leaves. Free the rest.\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          if (m_nodes[i].height < 0) {\r\n            // free node in pool\r\n            continue;\r\n          }\r\n    \r\n          if (m_nodes[i].IsLeaf()) {\r\n            m_nodes[i].parent = b2_nullNode;\r\n            nodes[count] = i;\r\n            ++count;\r\n          } else {\r\n            FreeNode(i);\r\n          }\r\n        }\r\n    \r\n        while (count > 1) {\r\n          float32 minCost = b2_maxFloat;\r\n          int32 iMin = -1, jMin = -1;\r\n          for (int32 i = 0; i < count; ++i) {\r\n            b2AABB aabbi = m_nodes[nodes[i]].aabb;\r\n    \r\n            for (int32 j = i + 1; j < count; ++j) {\r\n              b2AABB aabbj = m_nodes[nodes[j]].aabb;\r\n              b2AABB b;\r\n              b.Combine(aabbi, aabbj);\r\n              float32 cost = b.GetPerimeter();\r\n              if (cost < minCost) {\r\n                iMin = i;\r\n                jMin = j;\r\n                minCost = cost;\r\n              }\r\n            }\r\n          }\r\n    \r\n          int32 index1 = nodes[iMin];\r\n          int32 index2 = nodes[jMin];\r\n          b2TreeNode* child1 = m_nodes + index1;\r\n          b2TreeNode* child2 = m_nodes + index2;\r\n    \r\n          int32 parentIndex = AllocateNode();\r\n          b2TreeNode* parent = m_nodes + parentIndex;\r\n          parent.child1 = index1;\r\n          parent.child2 = index2;\r\n          parent.height = 1 + b2Max(child1.height, child2.height);\r\n          parent.aabb.Combine(child1.aabb, child2.aabb);\r\n          parent.parent = b2_nullNode;\r\n    \r\n          child1.parent = parentIndex;\r\n          child2.parent = parentIndex;\r\n    \r\n          nodes[jMin] = nodes[count-1];\r\n          nodes[iMin] = parentIndex;\r\n          --count;\r\n        }\r\n    \r\n        m_root = nodes[0];\r\n        b2Free(nodes);\r\n        */\r\n        this.Validate();\r\n    }\r\n    static ShiftOriginNode(node, newOrigin) {\r\n        if (node === null) {\r\n            return;\r\n        }\r\n        if (node.height <= 1) {\r\n            return;\r\n        }\r\n        ///b2Assert(!node.IsLeaf());\r\n        const child1 = node.child1;\r\n        const child2 = node.child2;\r\n        b2DynamicTree.ShiftOriginNode(child1, newOrigin);\r\n        b2DynamicTree.ShiftOriginNode(child2, newOrigin);\r\n        node.aabb.lowerBound.SelfSub(newOrigin);\r\n        node.aabb.upperBound.SelfSub(newOrigin);\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        b2DynamicTree.ShiftOriginNode(this.m_root, newOrigin);\r\n        /*\r\n        // Build array of leaves. Free the rest.\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          m_nodes[i].aabb.lowerBound -= newOrigin;\r\n          m_nodes[i].aabb.upperBound -= newOrigin;\r\n        }\r\n        */\r\n    }\r\n}\r\nb2DynamicTree.s_stack = new b2GrowableStack(256);\r\nb2DynamicTree.s_r = new b2Vec2();\r\nb2DynamicTree.s_v = new b2Vec2();\r\nb2DynamicTree.s_abs_v = new b2Vec2();\r\nb2DynamicTree.s_segmentAABB = new b2AABB();\r\nb2DynamicTree.s_subInput = new b2RayCastInput();\r\nb2DynamicTree.s_combinedAABB = new b2AABB();\r\nb2DynamicTree.s_aabb = new b2AABB();\r\nb2DynamicTree.s_node_id = 0;\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2TestOverlapAABB } from \"./b2Collision\";\r\nimport { b2DynamicTree } from \"./b2DynamicTree\";\r\nexport class b2Pair {\r\n    constructor() {\r\n        this.proxyA = null;\r\n        this.proxyB = null;\r\n    }\r\n}\r\n/// The broad-phase is used for computing pairs and performing volume queries and ray casts.\r\n/// This broad-phase does not persist pairs. Instead, this reports potentially new pairs.\r\n/// It is up to the client to consume the new pairs and to track subsequent overlap.\r\nexport class b2BroadPhase {\r\n    constructor() {\r\n        this.m_tree = new b2DynamicTree();\r\n        this.m_proxyCount = 0;\r\n        // public m_moveCapacity: number = 16;\r\n        this.m_moveCount = 0;\r\n        this.m_moveBuffer = [];\r\n        // public m_pairCapacity: number = 16;\r\n        this.m_pairCount = 0;\r\n        this.m_pairBuffer = [];\r\n    }\r\n    // public m_queryProxyId: number = 0;\r\n    /// Create a proxy with an initial AABB. Pairs are not reported until\r\n    /// UpdatePairs is called.\r\n    CreateProxy(aabb, userData) {\r\n        const proxy = this.m_tree.CreateProxy(aabb, userData);\r\n        ++this.m_proxyCount;\r\n        this.BufferMove(proxy);\r\n        return proxy;\r\n    }\r\n    /// Destroy a proxy. It is up to the client to remove any pairs.\r\n    DestroyProxy(proxy) {\r\n        this.UnBufferMove(proxy);\r\n        --this.m_proxyCount;\r\n        this.m_tree.DestroyProxy(proxy);\r\n    }\r\n    /// Call MoveProxy as many times as you like, then when you are done\r\n    /// call UpdatePairs to finalized the proxy pairs (for your time step).\r\n    MoveProxy(proxy, aabb, displacement) {\r\n        const buffer = this.m_tree.MoveProxy(proxy, aabb, displacement);\r\n        if (buffer) {\r\n            this.BufferMove(proxy);\r\n        }\r\n    }\r\n    /// Call to trigger a re-processing of it's pairs on the next call to UpdatePairs.\r\n    TouchProxy(proxy) {\r\n        this.BufferMove(proxy);\r\n    }\r\n    /// Get the fat AABB for a proxy.\r\n    GetFatAABB(proxy) {\r\n        return this.m_tree.GetFatAABB(proxy);\r\n    }\r\n    /// Get user data from a proxy. Returns NULL if the id is invalid.\r\n    GetUserData(proxy) {\r\n        return this.m_tree.GetUserData(proxy);\r\n    }\r\n    /// Test overlap of fat AABBs.\r\n    TestOverlap(proxyA, proxyB) {\r\n        const aabbA = this.m_tree.GetFatAABB(proxyA);\r\n        const aabbB = this.m_tree.GetFatAABB(proxyB);\r\n        return b2TestOverlapAABB(aabbA, aabbB);\r\n    }\r\n    /// Get the number of proxies.\r\n    GetProxyCount() {\r\n        return this.m_proxyCount;\r\n    }\r\n    /// Update the pairs. This results in pair callbacks. This can only add pairs.\r\n    UpdatePairs(contactManager) {\r\n        // Reset pair buffer\r\n        this.m_pairCount = 0;\r\n        // Perform tree queries for all moving proxies.\r\n        for (let i = 0; i < this.m_moveCount; ++i) {\r\n            const queryProxy = this.m_moveBuffer[i];\r\n            if (queryProxy === null) {\r\n                continue;\r\n            }\r\n            // This is called from box2d.b2DynamicTree::Query when we are gathering pairs.\r\n            // boolean b2BroadPhase::QueryCallback(int32 proxyId);\r\n            const QueryCallback = (proxy) => {\r\n                // A proxy cannot form a pair with itself.\r\n                if (proxy.m_id === queryProxy.m_id) {\r\n                    return true;\r\n                }\r\n                // Grow the pair buffer as needed.\r\n                if (this.m_pairCount === this.m_pairBuffer.length) {\r\n                    this.m_pairBuffer[this.m_pairCount] = new b2Pair();\r\n                }\r\n                const pair = this.m_pairBuffer[this.m_pairCount];\r\n                // pair.proxyA = proxy < queryProxy ? proxy : queryProxy;\r\n                // pair.proxyB = proxy >= queryProxy ? proxy : queryProxy;\r\n                if (proxy.m_id < queryProxy.m_id) {\r\n                    pair.proxyA = proxy;\r\n                    pair.proxyB = queryProxy;\r\n                }\r\n                else {\r\n                    pair.proxyA = queryProxy;\r\n                    pair.proxyB = proxy;\r\n                }\r\n                ++this.m_pairCount;\r\n                return true;\r\n            };\r\n            // We have to query the tree with the fat AABB so that\r\n            // we don't fail to create a pair that may touch later.\r\n            const fatAABB = this.m_tree.GetFatAABB(queryProxy);\r\n            // Query tree, create pairs and add them pair buffer.\r\n            this.m_tree.Query(QueryCallback, fatAABB);\r\n        }\r\n        // Reset move buffer\r\n        this.m_moveCount = 0;\r\n        // Sort the pair buffer to expose duplicates.\r\n        this.m_pairBuffer.length = this.m_pairCount;\r\n        this.m_pairBuffer.sort(b2PairLessThan);\r\n        // Send the pairs back to the client.\r\n        let i = 0;\r\n        while (i < this.m_pairCount) {\r\n            const primaryPair = this.m_pairBuffer[i];\r\n            const userDataA = this.m_tree.GetUserData(primaryPair.proxyA);\r\n            const userDataB = this.m_tree.GetUserData(primaryPair.proxyB);\r\n            contactManager.AddPair(userDataA, userDataB);\r\n            ++i;\r\n            // Skip any duplicate pairs.\r\n            while (i < this.m_pairCount) {\r\n                const pair = this.m_pairBuffer[i];\r\n                if (pair.proxyA.m_id !== primaryPair.proxyA.m_id || pair.proxyB.m_id !== primaryPair.proxyB.m_id) {\r\n                    break;\r\n                }\r\n                ++i;\r\n            }\r\n        }\r\n        // Try to keep the tree balanced.\r\n        // this.m_tree.Rebalance(4);\r\n    }\r\n    /// Query an AABB for overlapping proxies. The callback class\r\n    /// is called for each proxy that overlaps the supplied AABB.\r\n    Query(callback, aabb) {\r\n        this.m_tree.Query(callback, aabb);\r\n    }\r\n    /// Ray-cast against the proxies in the tree. This relies on the callback\r\n    /// to perform a exact ray-cast in the case were the proxy contains a shape.\r\n    /// The callback also performs the any collision filtering. This has performance\r\n    /// roughly equal to k * log(n), where k is the number of collisions and n is the\r\n    /// number of proxies in the tree.\r\n    /// @param input the ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\r\n    /// @param callback a callback class that is called for each proxy that is hit by the ray.\r\n    RayCast(callback, input) {\r\n        this.m_tree.RayCast(callback, input);\r\n    }\r\n    /// Get the height of the embedded tree.\r\n    GetTreeHeight() {\r\n        return this.m_tree.GetHeight();\r\n    }\r\n    /// Get the balance of the embedded tree.\r\n    GetTreeBalance() {\r\n        return this.m_tree.GetMaxBalance();\r\n    }\r\n    /// Get the quality metric of the embedded tree.\r\n    GetTreeQuality() {\r\n        return this.m_tree.GetAreaRatio();\r\n    }\r\n    /// Shift the world origin. Useful for large worlds.\r\n    /// The shift formula is: position -= newOrigin\r\n    /// @param newOrigin the new origin with respect to the old origin\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_tree.ShiftOrigin(newOrigin);\r\n    }\r\n    BufferMove(proxy) {\r\n        this.m_moveBuffer[this.m_moveCount] = proxy;\r\n        ++this.m_moveCount;\r\n    }\r\n    UnBufferMove(proxy) {\r\n        const i = this.m_moveBuffer.indexOf(proxy);\r\n        this.m_moveBuffer[i] = null;\r\n    }\r\n}\r\n/// This is used to sort pairs.\r\nexport function b2PairLessThan(pair1, pair2) {\r\n    if (pair1.proxyA.m_id === pair2.proxyA.m_id) {\r\n        return pair1.proxyB.m_id - pair2.proxyB.m_id;\r\n    }\r\n    return pair1.proxyA.m_id - pair2.proxyA.m_id;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJCcm9hZFBoYXNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvQ29sbGlzaW9uL2IyQnJvYWRQaGFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUdGLE9BQU8sRUFBMEIsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUUsT0FBTyxFQUFjLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBSTVELE1BQU07SUFBTjtRQUNTLFdBQU0sR0FBb0IsSUFBSSxDQUFDO1FBQy9CLFdBQU0sR0FBb0IsSUFBSSxDQUFDO0lBQ3hDLENBQUM7Q0FBQTtBQUVELDRGQUE0RjtBQUM1Rix5RkFBeUY7QUFDekYsb0ZBQW9GO0FBQ3BGLE1BQU07SUFBTjtRQUNTLFdBQU0sR0FBa0IsSUFBSSxhQUFhLEVBQUUsQ0FBQztRQUM1QyxpQkFBWSxHQUFXLENBQUMsQ0FBQztRQUNoQyxzQ0FBc0M7UUFDL0IsZ0JBQVcsR0FBVyxDQUFDLENBQUM7UUFDeEIsaUJBQVksR0FBaUIsRUFBRSxDQUFDO1FBQ3ZDLHNDQUFzQztRQUMvQixnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUN4QixpQkFBWSxHQUFhLEVBQUUsQ0FBQztJQXNMckMsQ0FBQztJQXJMQyxxQ0FBcUM7SUFFckMscUVBQXFFO0lBQ3JFLDBCQUEwQjtJQUNuQixXQUFXLENBQUMsSUFBWSxFQUFFLFFBQWE7UUFDNUMsTUFBTSxLQUFLLEdBQWUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ2xFLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUNwQixJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZCLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELGdFQUFnRTtJQUN6RCxZQUFZLENBQUMsS0FBaUI7UUFDbkMsSUFBSSxDQUFD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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxPolygonVertices } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Max, b2Vec2, b2Rot, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2Distance, b2DistanceInput, b2DistanceOutput, b2DistanceProxy, b2SimplexCache } from \"./b2Distance\";\r\nexport let b2_toiTime = 0;\r\nexport let b2_toiMaxTime = 0;\r\nexport let b2_toiCalls = 0;\r\nexport let b2_toiIters = 0;\r\nexport let b2_toiMaxIters = 0;\r\nexport let b2_toiRootIters = 0;\r\nexport let b2_toiMaxRootIters = 0;\r\nexport function b2_toi_reset() {\r\n    b2_toiTime = 0;\r\n    b2_toiMaxTime = 0;\r\n    b2_toiCalls = 0;\r\n    b2_toiIters = 0;\r\n    b2_toiMaxIters = 0;\r\n    b2_toiRootIters = 0;\r\n    b2_toiMaxRootIters = 0;\r\n}\r\nconst b2TimeOfImpact_s_xfA = new b2Transform();\r\nconst b2TimeOfImpact_s_xfB = new b2Transform();\r\nconst b2TimeOfImpact_s_pointA = new b2Vec2();\r\nconst b2TimeOfImpact_s_pointB = new b2Vec2();\r\nconst b2TimeOfImpact_s_normal = new b2Vec2();\r\nconst b2TimeOfImpact_s_axisA = new b2Vec2();\r\nconst b2TimeOfImpact_s_axisB = new b2Vec2();\r\n/// Input parameters for b2TimeOfImpact\r\nexport class b2TOIInput {\r\n    constructor() {\r\n        this.proxyA = new b2DistanceProxy();\r\n        this.proxyB = new b2DistanceProxy();\r\n        this.sweepA = new b2Sweep();\r\n        this.sweepB = new b2Sweep();\r\n        this.tMax = 0; // defines sweep interval [0, tMax]\r\n    }\r\n}\r\nexport var b2TOIOutputState;\r\n(function (b2TOIOutputState) {\r\n    b2TOIOutputState[b2TOIOutputState[\"e_unknown\"] = 0] = \"e_unknown\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_failed\"] = 1] = \"e_failed\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_overlapped\"] = 2] = \"e_overlapped\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_touching\"] = 3] = \"e_touching\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_separated\"] = 4] = \"e_separated\";\r\n})(b2TOIOutputState || (b2TOIOutputState = {}));\r\nexport class b2TOIOutput {\r\n    constructor() {\r\n        this.state = b2TOIOutputState.e_unknown;\r\n        this.t = 0;\r\n    }\r\n}\r\nexport var b2SeparationFunctionType;\r\n(function (b2SeparationFunctionType) {\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_points\"] = 0] = \"e_points\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_faceA\"] = 1] = \"e_faceA\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_faceB\"] = 2] = \"e_faceB\";\r\n})(b2SeparationFunctionType || (b2SeparationFunctionType = {}));\r\nexport class b2SeparationFunction {\r\n    constructor() {\r\n        this.m_sweepA = new b2Sweep();\r\n        this.m_sweepB = new b2Sweep();\r\n        this.m_type = b2SeparationFunctionType.e_unknown;\r\n        this.m_localPoint = new b2Vec2();\r\n        this.m_axis = new b2Vec2();\r\n    }\r\n    Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1) {\r\n        this.m_proxyA = proxyA;\r\n        this.m_proxyB = proxyB;\r\n        const count = cache.count;\r\n        ///b2Assert(0 < count && count < 3);\r\n        this.m_sweepA.Copy(sweepA);\r\n        this.m_sweepB.Copy(sweepB);\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t1);\r\n        this.m_sweepB.GetTransform(xfB, t1);\r\n        if (count === 1) {\r\n            this.m_type = b2SeparationFunctionType.e_points;\r\n            const localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n            const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n            b2Vec2.SubVV(pointB, pointA, this.m_axis);\r\n            const s = this.m_axis.Normalize();\r\n            // #if B2_ENABLE_PARTICLE\r\n            this.m_localPoint.SetZero();\r\n            // #endif\r\n            return s;\r\n        }\r\n        else if (cache.indexA[0] === cache.indexA[1]) {\r\n            // Two points on B and one on A.\r\n            this.m_type = b2SeparationFunctionType.e_faceB;\r\n            const localPointB1 = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const localPointB2 = this.m_proxyB.GetVertex(cache.indexB[1]);\r\n            b2Vec2.CrossVOne(b2Vec2.SubVV(localPointB2, localPointB1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\r\n            const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n            b2Vec2.MidVV(localPointB1, localPointB2, this.m_localPoint);\r\n            const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n            const localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n            let s = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n            if (s < 0) {\r\n                this.m_axis.SelfNeg();\r\n                s = -s;\r\n            }\r\n            return s;\r\n        }\r\n        else {\r\n            // Two points on A and one or two points on B.\r\n            this.m_type = b2SeparationFunctionType.e_faceA;\r\n            const localPointA1 = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const localPointA2 = this.m_proxyA.GetVertex(cache.indexA[1]);\r\n            b2Vec2.CrossVOne(b2Vec2.SubVV(localPointA2, localPointA1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\r\n            const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n            b2Vec2.MidVV(localPointA1, localPointA2, this.m_localPoint);\r\n            const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n            const localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n            let s = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n            if (s < 0) {\r\n                this.m_axis.SelfNeg();\r\n                s = -s;\r\n            }\r\n            return s;\r\n        }\r\n    }\r\n    FindMinSeparation(indexA, indexB, t) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t);\r\n        this.m_sweepB.GetTransform(xfB, t);\r\n        switch (this.m_type) {\r\n            case b2SeparationFunctionType.e_points: {\r\n                const axisA = b2Rot.MulTRV(xfA.q, this.m_axis, b2TimeOfImpact_s_axisA);\r\n                const axisB = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(this.m_axis, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\r\n                indexA[0] = this.m_proxyA.GetSupport(axisA);\r\n                indexB[0] = this.m_proxyB.GetSupport(axisB);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA[0]);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB[0]);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceA: {\r\n                const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n                const axisB = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\r\n                indexA[0] = -1;\r\n                indexB[0] = this.m_proxyB.GetSupport(axisB);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB[0]);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceB: {\r\n                const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n                const axisA = b2Rot.MulTRV(xfA.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisA);\r\n                indexB[0] = -1;\r\n                indexA[0] = this.m_proxyA.GetSupport(axisA);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA[0]);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            default:\r\n                ///b2Assert(false);\r\n                indexA[0] = -1;\r\n                indexB[0] = -1;\r\n                return 0;\r\n        }\r\n    }\r\n    Evaluate(indexA, indexB, t) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t);\r\n        this.m_sweepB.GetTransform(xfB, t);\r\n        switch (this.m_type) {\r\n            case b2SeparationFunctionType.e_points: {\r\n                const localPointA = this.m_proxyA.GetVertex(indexA);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceA: {\r\n                const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceB: {\r\n                const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            default:\r\n                ///b2Assert(false);\r\n                return 0;\r\n        }\r\n    }\r\n}\r\nconst b2TimeOfImpact_s_timer = new b2Timer();\r\nconst b2TimeOfImpact_s_cache = new b2SimplexCache();\r\nconst b2TimeOfImpact_s_distanceInput = new b2DistanceInput();\r\nconst b2TimeOfImpact_s_distanceOutput = new b2DistanceOutput();\r\nconst b2TimeOfImpact_s_fcn = new b2SeparationFunction();\r\nconst b2TimeOfImpact_s_indexA = [0];\r\nconst b2TimeOfImpact_s_indexB = [0];\r\nconst b2TimeOfImpact_s_sweepA = new b2Sweep();\r\nconst b2TimeOfImpact_s_sweepB = new b2Sweep();\r\nexport function b2TimeOfImpact(output, input) {\r\n    const timer = b2TimeOfImpact_s_timer.Reset();\r\n    ++b2_toiCalls;\r\n    output.state = b2TOIOutputState.e_unknown;\r\n    output.t = input.tMax;\r\n    const proxyA = input.proxyA;\r\n    const proxyB = input.proxyB;\r\n    const sweepA = b2TimeOfImpact_s_sweepA.Copy(input.sweepA);\r\n    const sweepB = b2TimeOfImpact_s_sweepB.Copy(input.sweepB);\r\n    // Large rotations can make the root finder fail, so we normalize the\r\n    // sweep angles.\r\n    sweepA.Normalize();\r\n    sweepB.Normalize();\r\n    const tMax = input.tMax;\r\n    const totalRadius = proxyA.m_radius + proxyB.m_radius;\r\n    const target = b2Max(b2_linearSlop, totalRadius - 3 * b2_linearSlop);\r\n    const tolerance = 0.25 * b2_linearSlop;\r\n    ///b2Assert(target > tolerance);\r\n    let t1 = 0;\r\n    const k_maxIterations = 20; // TODO_ERIN b2Settings\r\n    let iter = 0;\r\n    // Prepare input for distance query.\r\n    const cache = b2TimeOfImpact_s_cache;\r\n    cache.count = 0;\r\n    const distanceInput = b2TimeOfImpact_s_distanceInput;\r\n    distanceInput.proxyA = input.proxyA;\r\n    distanceInput.proxyB = input.proxyB;\r\n    distanceInput.useRadii = false;\r\n    // The outer loop progressively attempts to compute new separating axes.\r\n    // This loop terminates when an axis is repeated (no progress is made).\r\n    for (;;) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        sweepA.GetTransform(xfA, t1);\r\n        sweepB.GetTransform(xfB, t1);\r\n        // Get the distance between shapes. We can also use the results\r\n        // to get a separating axis.\r\n        distanceInput.transformA.Copy(xfA);\r\n        distanceInput.transformB.Copy(xfB);\r\n        const distanceOutput = b2TimeOfImpact_s_distanceOutput;\r\n        b2Distance(distanceOutput, cache, distanceInput);\r\n        // If the shapes are overlapped, we give up on continuous collision.\r\n        if (distanceOutput.distance <= 0) {\r\n            // Failure!\r\n            output.state = b2TOIOutputState.e_overlapped;\r\n            output.t = 0;\r\n            break;\r\n        }\r\n        if (distanceOutput.distance < target + tolerance) {\r\n            // Victory!\r\n            output.state = b2TOIOutputState.e_touching;\r\n            output.t = t1;\r\n            break;\r\n        }\r\n        // Initialize the separating axis.\r\n        const fcn = b2TimeOfImpact_s_fcn;\r\n        fcn.Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\r\n        /*\r\n        #if 0\r\n            // Dump the curve seen by the root finder {\r\n              const int32 N = 100;\r\n              float32 dx = 1.0f / N;\r\n              float32 xs[N+1];\r\n              float32 fs[N+1];\r\n        \r\n              float32 x = 0.0f;\r\n        \r\n              for (int32 i = 0; i <= N; ++i) {\r\n                sweepA.GetTransform(&xfA, x);\r\n                sweepB.GetTransform(&xfB, x);\r\n                float32 f = fcn.Evaluate(xfA, xfB) - target;\r\n        \r\n                printf(\"%g %g\\n\", x, f);\r\n        \r\n                xs[i] = x;\r\n                fs[i] = f;\r\n        \r\n                x += dx;\r\n              }\r\n            }\r\n        #endif\r\n        */\r\n        // Compute the TOI on the separating axis. We do this by successively\r\n        // resolving the deepest point. This loop is bounded by the number of vertices.\r\n        let done = false;\r\n        let t2 = tMax;\r\n        let pushBackIter = 0;\r\n        for (;;) {\r\n            // Find the deepest point at t2. Store the witness point indices.\r\n            const indexA = b2TimeOfImpact_s_indexA;\r\n            const indexB = b2TimeOfImpact_s_indexB;\r\n            let s2 = fcn.FindMinSeparation(indexA, indexB, t2);\r\n            // Is the final configuration separated?\r\n            if (s2 > (target + tolerance)) {\r\n                // Victory!\r\n                output.state = b2TOIOutputState.e_separated;\r\n                output.t = tMax;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Has the separation reached tolerance?\r\n            if (s2 > (target - tolerance)) {\r\n                // Advance the sweeps\r\n                t1 = t2;\r\n                break;\r\n            }\r\n            // Compute the initial separation of the witness points.\r\n            let s1 = fcn.Evaluate(indexA[0], indexB[0], t1);\r\n            // Check for initial overlap. This might happen if the root finder\r\n            // runs out of iterations.\r\n            if (s1 < (target - tolerance)) {\r\n                output.state = b2TOIOutputState.e_failed;\r\n                output.t = t1;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Check for touching\r\n            if (s1 <= (target + tolerance)) {\r\n                // Victory! t1 should hold the TOI (could be 0.0).\r\n                output.state = b2TOIOutputState.e_touching;\r\n                output.t = t1;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Compute 1D root of: f(x) - target = 0\r\n            let rootIterCount = 0;\r\n            let a1 = t1;\r\n            let a2 = t2;\r\n            for (;;) {\r\n                // Use a mix of the secant rule and bisection.\r\n                let t = 0;\r\n                if (rootIterCount & 1) {\r\n                    // Secant rule to improve convergence.\r\n                    t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\r\n                }\r\n                else {\r\n                    // Bisection to guarantee progress.\r\n                    t = 0.5 * (a1 + a2);\r\n                }\r\n                ++rootIterCount;\r\n                ++b2_toiRootIters;\r\n                const s = fcn.Evaluate(indexA[0], indexB[0], t);\r\n                if (b2Abs(s - target) < tolerance) {\r\n                    // t2 holds a tentative value for t1\r\n                    t2 = t;\r\n                    break;\r\n                }\r\n                // Ensure we continue to bracket the root.\r\n                if (s > target) {\r\n                    a1 = t;\r\n                    s1 = s;\r\n                }\r\n                else {\r\n                    a2 = t;\r\n                    s2 = s;\r\n                }\r\n                if (rootIterCount === 50) {\r\n                    break;\r\n                }\r\n            }\r\n            b2_toiMaxRootIters = b2Max(b2_toiMaxRootIters, rootIterCount);\r\n            ++pushBackIter;\r\n            if (pushBackIter === b2_maxPolygonVertices) {\r\n                break;\r\n            }\r\n        }\r\n        ++iter;\r\n        ++b2_toiIters;\r\n        if (done) {\r\n            break;\r\n        }\r\n        if (iter === k_maxIterations) {\r\n            // Root finder got stuck. Semi-victory.\r\n            output.state = b2TOIOutputState.e_failed;\r\n            output.t = t1;\r\n            break;\r\n        }\r\n    }\r\n    b2_toiMaxIters = b2Max(b2_toiMaxIters, iter);\r\n    const time = timer.GetMilliseconds();\r\n    b2_toiMaxTime = b2Max(b2_toiMaxTime, time);\r\n    b2_toiTime += time;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","import { b2_maxFloat, b2_epsilon } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ManifoldType } from \"./b2Collision\";\r\nconst b2CollideCircles_s_pA = new b2Vec2();\r\nconst b2CollideCircles_s_pB = new b2Vec2();\r\nexport function b2CollideCircles(manifold, circleA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    const pA = b2Transform.MulXV(xfA, circleA.m_p, b2CollideCircles_s_pA);\r\n    const pB = b2Transform.MulXV(xfB, circleB.m_p, b2CollideCircles_s_pB);\r\n    const distSqr = b2Vec2.DistanceSquaredVV(pA, pB);\r\n    const radius = circleA.m_radius + circleB.m_radius;\r\n    if (distSqr > radius * radius) {\r\n        return;\r\n    }\r\n    manifold.type = b2ManifoldType.e_circles;\r\n    manifold.localPoint.Copy(circleA.m_p);\r\n    manifold.localNormal.SetZero();\r\n    manifold.pointCount = 1;\r\n    manifold.points[0].localPoint.Copy(circleB.m_p);\r\n    manifold.points[0].id.key = 0;\r\n}\r\nconst b2CollidePolygonAndCircle_s_c = new b2Vec2();\r\nconst b2CollidePolygonAndCircle_s_cLocal = new b2Vec2();\r\nconst b2CollidePolygonAndCircle_s_faceCenter = new b2Vec2();\r\nexport function b2CollidePolygonAndCircle(manifold, polygonA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    // Compute circle position in the frame of the polygon.\r\n    const c = b2Transform.MulXV(xfB, circleB.m_p, b2CollidePolygonAndCircle_s_c);\r\n    const cLocal = b2Transform.MulTXV(xfA, c, b2CollidePolygonAndCircle_s_cLocal);\r\n    // Find the min separating edge.\r\n    let normalIndex = 0;\r\n    let separation = (-b2_maxFloat);\r\n    const radius = polygonA.m_radius + circleB.m_radius;\r\n    const vertexCount = polygonA.m_count;\r\n    const vertices = polygonA.m_vertices;\r\n    const normals = polygonA.m_normals;\r\n    for (let i = 0; i < vertexCount; ++i) {\r\n        const s = b2Vec2.DotVV(normals[i], b2Vec2.SubVV(cLocal, vertices[i], b2Vec2.s_t0));\r\n        if (s > radius) {\r\n            // Early out.\r\n            return;\r\n        }\r\n        if (s > separation) {\r\n            separation = s;\r\n            normalIndex = i;\r\n        }\r\n    }\r\n    // Vertices that subtend the incident face.\r\n    const vertIndex1 = normalIndex;\r\n    const vertIndex2 = (vertIndex1 + 1) % vertexCount;\r\n    const v1 = vertices[vertIndex1];\r\n    const v2 = vertices[vertIndex2];\r\n    // If the center is inside the polygon ...\r\n    if (separation < b2_epsilon) {\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        manifold.localNormal.Copy(normals[normalIndex]);\r\n        b2Vec2.MidVV(v1, v2, manifold.localPoint);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n        return;\r\n    }\r\n    // Compute barycentric coordinates\r\n    const u1 = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v1, b2Vec2.s_t0), b2Vec2.SubVV(v2, v1, b2Vec2.s_t1));\r\n    const u2 = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v2, b2Vec2.s_t0), b2Vec2.SubVV(v1, v2, b2Vec2.s_t1));\r\n    if (u1 <= 0) {\r\n        if (b2Vec2.DistanceSquaredVV(cLocal, v1) > radius * radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        b2Vec2.SubVV(cLocal, v1, manifold.localNormal).SelfNormalize();\r\n        manifold.localPoint.Copy(v1);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n    else if (u2 <= 0) {\r\n        if (b2Vec2.DistanceSquaredVV(cLocal, v2) > radius * radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        b2Vec2.SubVV(cLocal, v2, manifold.localNormal).SelfNormalize();\r\n        manifold.localPoint.Copy(v2);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n    else {\r\n        const faceCenter = b2Vec2.MidVV(v1, v2, b2CollidePolygonAndCircle_s_faceCenter);\r\n        separation = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, faceCenter, b2Vec2.s_t1), normals[vertIndex1]);\r\n        if (separation > radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        manifold.localNormal.Copy(normals[vertIndex1]).SelfNormalize();\r\n        manifold.localPoint.Copy(faceCenter);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb2xsaWRlQ2lyY2xlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvQ29sbGlzaW9uL2IyQ29sbGlkZUNpcmNsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdkQsT0FBTyxFQUFjLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzRCxNQUFNLHFCQUFxQixHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7QUFDbkQsTUFBTSxxQkFBcUIsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO0FBQ25ELE1BQU0sMkJBQTJCLFFBQW9CLEVBQUUsT0FBc0IsRUFBRSxHQUFnQixFQUFFLE9BQXNCLEVBQUUsR0FBZ0I7SUFDdkksUUFBUSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7SUFFeEIsTUFBTSxFQUFFLEdBQVcsV0FBVyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO0lBQzlFLE1BQU0sRUFBRSxHQUFXLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHLEVBQUUscUJBQXFCLENBQUMsQ0FBQztJQUU5RSxNQUFNLE9BQU8sR0FBVyxNQUFNLENBQUMsaUJBQWlCLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3pELE1BQU0sTUFBTSxHQUFXLE9BQU8sQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUMzRCxJQUFJLE9BQU8sR0FBRyxNQUFNLEdBQUcsTUFBTSxFQUFFO1FBQzdCLE9BQU87S0FDUjtJQUVELFFBQVEsQ0FBQyxJQUFJLEdBQUcsY0FBYyxDQUFDLFNBQVMsQ0FBQztJQUN6QyxRQUFR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","import { b2_maxFloat, b2_maxManifoldPoints } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ContactFeatureType } from \"./b2Collision\";\r\nimport { b2ManifoldType, b2ClipVertex, b2ClipSegmentToLine } from \"./b2Collision\";\r\nconst b2EdgeSeparation_s_normal1World = new b2Vec2();\r\nconst b2EdgeSeparation_s_normal1 = new b2Vec2();\r\nconst b2EdgeSeparation_s_v1 = new b2Vec2();\r\nconst b2EdgeSeparation_s_v2 = new b2Vec2();\r\nfunction b2EdgeSeparation(poly1, xf1, edge1, poly2, xf2) {\r\n    ///const count1: number = poly1.m_count;\r\n    const vertices1 = poly1.m_vertices;\r\n    const normals1 = poly1.m_normals;\r\n    const count2 = poly2.m_count;\r\n    const vertices2 = poly2.m_vertices;\r\n    ///b2Assert(0 <= edge1 && edge1 < count1);\r\n    // Convert normal from poly1's frame into poly2's frame.\r\n    const normal1World = b2Rot.MulRV(xf1.q, normals1[edge1], b2EdgeSeparation_s_normal1World);\r\n    const normal1 = b2Rot.MulTRV(xf2.q, normal1World, b2EdgeSeparation_s_normal1);\r\n    // Find support vertex on poly2 for -normal.\r\n    let index = 0;\r\n    let minDot = b2_maxFloat;\r\n    for (let i = 0; i < count2; ++i) {\r\n        const dot = b2Vec2.DotVV(vertices2[i], normal1);\r\n        if (dot < minDot) {\r\n            minDot = dot;\r\n            index = i;\r\n        }\r\n    }\r\n    const v1 = b2Transform.MulXV(xf1, vertices1[edge1], b2EdgeSeparation_s_v1);\r\n    const v2 = b2Transform.MulXV(xf2, vertices2[index], b2EdgeSeparation_s_v2);\r\n    const separation = b2Vec2.DotVV(b2Vec2.SubVV(v2, v1, b2Vec2.s_t0), normal1World);\r\n    return separation;\r\n}\r\nconst b2FindMaxSeparation_s_d = new b2Vec2();\r\nconst b2FindMaxSeparation_s_dLocal1 = new b2Vec2();\r\nfunction b2FindMaxSeparation(edgeIndex, poly1, xf1, poly2, xf2) {\r\n    const count1 = poly1.m_count;\r\n    const normals1 = poly1.m_normals;\r\n    // Vector pointing from the centroid of poly1 to the centroid of poly2.\r\n    const d = b2Vec2.SubVV(b2Transform.MulXV(xf2, poly2.m_centroid, b2Vec2.s_t0), b2Transform.MulXV(xf1, poly1.m_centroid, b2Vec2.s_t1), b2FindMaxSeparation_s_d);\r\n    const dLocal1 = b2Rot.MulTRV(xf1.q, d, b2FindMaxSeparation_s_dLocal1);\r\n    // Find edge normal on poly1 that has the largest projection onto d.\r\n    let edge = 0;\r\n    let maxDot = (-b2_maxFloat);\r\n    for (let i = 0; i < count1; ++i) {\r\n        const dot = b2Vec2.DotVV(normals1[i], dLocal1);\r\n        if (dot > maxDot) {\r\n            maxDot = dot;\r\n            edge = i;\r\n        }\r\n    }\r\n    // Get the separation for the edge normal.\r\n    let s = b2EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n    // Check the separation for the previous edge normal.\r\n    const prevEdge = (edge + count1 - 1) % count1;\r\n    const sPrev = b2EdgeSeparation(poly1, xf1, prevEdge, poly2, xf2);\r\n    // Check the separation for the next edge normal.\r\n    const nextEdge = (edge + 1) % count1;\r\n    const sNext = b2EdgeSeparation(poly1, xf1, nextEdge, poly2, xf2);\r\n    // Find the best edge and the search direction.\r\n    let bestEdge = 0;\r\n    let bestSeparation = 0;\r\n    let increment = 0;\r\n    if (sPrev > s && sPrev > sNext) {\r\n        increment = -1;\r\n        bestEdge = prevEdge;\r\n        bestSeparation = sPrev;\r\n    }\r\n    else if (sNext > s) {\r\n        increment = 1;\r\n        bestEdge = nextEdge;\r\n        bestSeparation = sNext;\r\n    }\r\n    else {\r\n        edgeIndex[0] = edge;\r\n        return s;\r\n    }\r\n    // Perform a local search for the best edge normal.\r\n    while (true) {\r\n        if (increment === -1)\r\n            edge = (bestEdge + count1 - 1) % count1;\r\n        else\r\n            edge = (bestEdge + 1) % count1;\r\n        s = b2EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n        if (s > bestSeparation) {\r\n            bestEdge = edge;\r\n            bestSeparation = s;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    edgeIndex[0] = bestEdge;\r\n    return bestSeparation;\r\n}\r\nconst b2FindIncidentEdge_s_normal1 = new b2Vec2();\r\nfunction b2FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\r\n    ///const count1: number = poly1.m_count;\r\n    const normals1 = poly1.m_normals;\r\n    const count2 = poly2.m_count;\r\n    const vertices2 = poly2.m_vertices;\r\n    const normals2 = poly2.m_normals;\r\n    ///b2Assert(0 <= edge1 && edge1 < count1);\r\n    // Get the normal of the reference edge in poly2's frame.\r\n    const normal1 = b2Rot.MulTRV(xf2.q, b2Rot.MulRV(xf1.q, normals1[edge1], b2Vec2.s_t0), b2FindIncidentEdge_s_normal1);\r\n    // Find the incident edge on poly2.\r\n    let index = 0;\r\n    let minDot = b2_maxFloat;\r\n    for (let i = 0; i < count2; ++i) {\r\n        const dot = b2Vec2.DotVV(normal1, normals2[i]);\r\n        if (dot < minDot) {\r\n            minDot = dot;\r\n            index = i;\r\n        }\r\n    }\r\n    // Build the clip vertices for the incident edge.\r\n    const i1 = index;\r\n    const i2 = (i1 + 1) % count2;\r\n    const c0 = c[0];\r\n    b2Transform.MulXV(xf2, vertices2[i1], c0.v);\r\n    const cf0 = c0.id.cf;\r\n    cf0.indexA = edge1;\r\n    cf0.indexB = i1;\r\n    cf0.typeA = b2ContactFeatureType.e_face;\r\n    cf0.typeB = b2ContactFeatureType.e_vertex;\r\n    const c1 = c[1];\r\n    b2Transform.MulXV(xf2, vertices2[i2], c1.v);\r\n    const cf1 = c1.id.cf;\r\n    cf1.indexA = edge1;\r\n    cf1.indexB = i2;\r\n    cf1.typeA = b2ContactFeatureType.e_face;\r\n    cf1.typeB = b2ContactFeatureType.e_vertex;\r\n}\r\nconst b2CollidePolygons_s_incidentEdge = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_clipPoints1 = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_clipPoints2 = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_edgeA = [0];\r\nconst b2CollidePolygons_s_edgeB = [0];\r\nconst b2CollidePolygons_s_localTangent = new b2Vec2();\r\nconst b2CollidePolygons_s_localNormal = new b2Vec2();\r\nconst b2CollidePolygons_s_planePoint = new b2Vec2();\r\nconst b2CollidePolygons_s_normal = new b2Vec2();\r\nconst b2CollidePolygons_s_tangent = new b2Vec2();\r\nconst b2CollidePolygons_s_ntangent = new b2Vec2();\r\nconst b2CollidePolygons_s_v11 = new b2Vec2();\r\nconst b2CollidePolygons_s_v12 = new b2Vec2();\r\nexport function b2CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\r\n    manifold.pointCount = 0;\r\n    const totalRadius = polyA.m_radius + polyB.m_radius;\r\n    const edgeA = b2CollidePolygons_s_edgeA;\r\n    edgeA[0] = 0;\r\n    const separationA = b2FindMaxSeparation(edgeA, polyA, xfA, polyB, xfB);\r\n    if (separationA > totalRadius)\r\n        return;\r\n    const edgeB = b2CollidePolygons_s_edgeB;\r\n    edgeB[0] = 0;\r\n    const separationB = b2FindMaxSeparation(edgeB, polyB, xfB, polyA, xfA);\r\n    if (separationB > totalRadius)\r\n        return;\r\n    let poly1; // reference polygon\r\n    let poly2; // incident polygon\r\n    let xf1, xf2;\r\n    let edge1 = 0; // reference edge\r\n    let flip = 0;\r\n    const k_relativeTol = 0.98;\r\n    const k_absoluteTol = 0.001;\r\n    if (separationB > k_relativeTol * separationA + k_absoluteTol) {\r\n        poly1 = polyB;\r\n        poly2 = polyA;\r\n        xf1 = xfB;\r\n        xf2 = xfA;\r\n        edge1 = edgeB[0];\r\n        manifold.type = b2ManifoldType.e_faceB;\r\n        flip = 1;\r\n    }\r\n    else {\r\n        poly1 = polyA;\r\n        poly2 = polyB;\r\n        xf1 = xfA;\r\n        xf2 = xfB;\r\n        edge1 = edgeA[0];\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        flip = 0;\r\n    }\r\n    const incidentEdge = b2CollidePolygons_s_incidentEdge;\r\n    b2FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\r\n    const count1 = poly1.m_count;\r\n    const vertices1 = poly1.m_vertices;\r\n    const iv1 = edge1;\r\n    const iv2 = (edge1 + 1) % count1;\r\n    const local_v11 = vertices1[iv1];\r\n    const local_v12 = vertices1[iv2];\r\n    const localTangent = b2Vec2.SubVV(local_v12, local_v11, b2CollidePolygons_s_localTangent);\r\n    localTangent.Normalize();\r\n    const localNormal = b2Vec2.CrossVOne(localTangent, b2CollidePolygons_s_localNormal);\r\n    const planePoint = b2Vec2.MidVV(local_v11, local_v12, b2CollidePolygons_s_planePoint);\r\n    const tangent = b2Rot.MulRV(xf1.q, localTangent, b2CollidePolygons_s_tangent);\r\n    const normal = b2Vec2.CrossVOne(tangent, b2CollidePolygons_s_normal);\r\n    const v11 = b2Transform.MulXV(xf1, local_v11, b2CollidePolygons_s_v11);\r\n    const v12 = b2Transform.MulXV(xf1, local_v12, b2CollidePolygons_s_v12);\r\n    // Face offset.\r\n    const frontOffset = b2Vec2.DotVV(normal, v11);\r\n    // Side offsets, extended by polytope skin thickness.\r\n    const sideOffset1 = -b2Vec2.DotVV(tangent, v11) + totalRadius;\r\n    const sideOffset2 = b2Vec2.DotVV(tangent, v12) + totalRadius;\r\n    // Clip incident edge against extruded edge1 side edges.\r\n    const clipPoints1 = b2CollidePolygons_s_clipPoints1;\r\n    const clipPoints2 = b2CollidePolygons_s_clipPoints2;\r\n    let np;\r\n    // Clip to box side 1\r\n    const ntangent = b2Vec2.NegV(tangent, b2CollidePolygons_s_ntangent);\r\n    np = b2ClipSegmentToLine(clipPoints1, incidentEdge, ntangent, sideOffset1, iv1);\r\n    if (np < 2)\r\n        return;\r\n    // Clip to negative box side 1\r\n    np = b2ClipSegmentToLine(clipPoints2, clipPoints1, tangent, sideOffset2, iv2);\r\n    if (np < 2) {\r\n        return;\r\n    }\r\n    // Now clipPoints2 contains the clipped points.\r\n    manifold.localNormal.Copy(localNormal);\r\n    manifold.localPoint.Copy(planePoint);\r\n    let pointCount = 0;\r\n    for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n        const cv = clipPoints2[i];\r\n        const separation = b2Vec2.DotVV(normal, cv.v) - frontOffset;\r\n        if (separation <= totalRadius) {\r\n            const cp = manifold.points[pointCount];\r\n            b2Transform.MulTXV(xf2, cv.v, cp.localPoint);\r\n            cp.id.Copy(cv.id);\r\n            if (flip) {\r\n                // Swap features\r\n                const cf = cp.id.cf;\r\n                cp.id.cf.indexA = cf.indexB;\r\n                cp.id.cf.indexB = cf.indexA;\r\n                cp.id.cf.typeA = cf.typeB;\r\n                cp.id.cf.typeB = cf.typeA;\r\n            }\r\n            ++pointCount;\r\n        }\r\n    }\r\n    manifold.pointCount = pointCount;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","import { b2_maxFloat, b2_angularSlop, b2_maxPolygonVertices, b2_polygonRadius, b2_maxManifoldPoints } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ContactFeatureType, b2ContactID } from \"./b2Collision\";\r\nimport { b2ManifoldType, b2ClipVertex, b2ClipSegmentToLine } from \"./b2Collision\";\r\nconst b2CollideEdgeAndCircle_s_Q = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_d = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e1 = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e2 = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_P = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_n = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_id = new b2ContactID();\r\nexport function b2CollideEdgeAndCircle(manifold, edgeA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    // Compute circle in frame of edge\r\n    const Q = b2Transform.MulTXV(xfA, b2Transform.MulXV(xfB, circleB.m_p, b2Vec2.s_t0), b2CollideEdgeAndCircle_s_Q);\r\n    const A = edgeA.m_vertex1;\r\n    const B = edgeA.m_vertex2;\r\n    const e = b2Vec2.SubVV(B, A, b2CollideEdgeAndCircle_s_e);\r\n    // Barycentric coordinates\r\n    const u = b2Vec2.DotVV(e, b2Vec2.SubVV(B, Q, b2Vec2.s_t0));\r\n    const v = b2Vec2.DotVV(e, b2Vec2.SubVV(Q, A, b2Vec2.s_t0));\r\n    const radius = edgeA.m_radius + circleB.m_radius;\r\n    // const cf: b2ContactFeature = new b2ContactFeature();\r\n    const id = b2CollideEdgeAndCircle_s_id;\r\n    id.cf.indexB = 0;\r\n    id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n    // Region A\r\n    if (v <= 0) {\r\n        const P = A;\r\n        const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n        const dd = b2Vec2.DotVV(d, d);\r\n        if (dd > radius * radius) {\r\n            return;\r\n        }\r\n        // Is there an edge connected to A?\r\n        if (edgeA.m_hasVertex0) {\r\n            const A1 = edgeA.m_vertex0;\r\n            const B1 = A;\r\n            const e1 = b2Vec2.SubVV(B1, A1, b2CollideEdgeAndCircle_s_e1);\r\n            const u1 = b2Vec2.DotVV(e1, b2Vec2.SubVV(B1, Q, b2Vec2.s_t0));\r\n            // Is the circle in Region AB of the previous edge?\r\n            if (u1 > 0) {\r\n                return;\r\n            }\r\n        }\r\n        id.cf.indexA = 0;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_circles;\r\n        manifold.localNormal.SetZero();\r\n        manifold.localPoint.Copy(P);\r\n        manifold.points[0].id.Copy(id);\r\n        // manifold.points[0].id.key = 0;\r\n        // manifold.points[0].id.cf = cf;\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        return;\r\n    }\r\n    // Region B\r\n    if (u <= 0) {\r\n        const P = B;\r\n        const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n        const dd = b2Vec2.DotVV(d, d);\r\n        if (dd > radius * radius) {\r\n            return;\r\n        }\r\n        // Is there an edge connected to B?\r\n        if (edgeA.m_hasVertex3) {\r\n            const B2 = edgeA.m_vertex3;\r\n            const A2 = B;\r\n            const e2 = b2Vec2.SubVV(B2, A2, b2CollideEdgeAndCircle_s_e2);\r\n            const v2 = b2Vec2.DotVV(e2, b2Vec2.SubVV(Q, A2, b2Vec2.s_t0));\r\n            // Is the circle in Region AB of the next edge?\r\n            if (v2 > 0) {\r\n                return;\r\n            }\r\n        }\r\n        id.cf.indexA = 1;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_circles;\r\n        manifold.localNormal.SetZero();\r\n        manifold.localPoint.Copy(P);\r\n        manifold.points[0].id.Copy(id);\r\n        // manifold.points[0].id.key = 0;\r\n        // manifold.points[0].id.cf = cf;\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        return;\r\n    }\r\n    // Region AB\r\n    const den = b2Vec2.DotVV(e, e);\r\n    ///b2Assert(den > 0);\r\n    const P = b2CollideEdgeAndCircle_s_P;\r\n    P.x = (1 / den) * (u * A.x + v * B.x);\r\n    P.y = (1 / den) * (u * A.y + v * B.y);\r\n    const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n    const dd = b2Vec2.DotVV(d, d);\r\n    if (dd > radius * radius) {\r\n        return;\r\n    }\r\n    const n = b2CollideEdgeAndCircle_s_n.Set(-e.y, e.x);\r\n    if (b2Vec2.DotVV(n, b2Vec2.SubVV(Q, A, b2Vec2.s_t0)) < 0) {\r\n        n.Set(-n.x, -n.y);\r\n    }\r\n    n.Normalize();\r\n    id.cf.indexA = 0;\r\n    id.cf.typeA = b2ContactFeatureType.e_face;\r\n    manifold.pointCount = 1;\r\n    manifold.type = b2ManifoldType.e_faceA;\r\n    manifold.localNormal.Copy(n);\r\n    manifold.localPoint.Copy(A);\r\n    manifold.points[0].id.Copy(id);\r\n    // manifold.points[0].id.key = 0;\r\n    // manifold.points[0].id.cf = cf;\r\n    manifold.points[0].localPoint.Copy(circleB.m_p);\r\n}\r\nclass b2EPAxis {\r\n    constructor() {\r\n        this.type = 0 /* e_unknown */;\r\n        this.index = 0;\r\n        this.separation = 0;\r\n    }\r\n}\r\nclass b2TempPolygon {\r\n    constructor() {\r\n        this.vertices = b2Vec2.MakeArray(b2_maxPolygonVertices);\r\n        this.normals = b2Vec2.MakeArray(b2_maxPolygonVertices);\r\n        this.count = 0;\r\n    }\r\n}\r\nclass b2ReferenceFace {\r\n    constructor() {\r\n        this.i1 = 0;\r\n        this.i2 = 0;\r\n        this.v1 = new b2Vec2();\r\n        this.v2 = new b2Vec2();\r\n        this.normal = new b2Vec2();\r\n        this.sideNormal1 = new b2Vec2();\r\n        this.sideOffset1 = 0;\r\n        this.sideNormal2 = new b2Vec2();\r\n        this.sideOffset2 = 0;\r\n    }\r\n}\r\nclass b2EPCollider {\r\n    constructor() {\r\n        this.m_polygonB = new b2TempPolygon();\r\n        this.m_xf = new b2Transform();\r\n        this.m_centroidB = new b2Vec2();\r\n        this.m_v0 = new b2Vec2();\r\n        this.m_v1 = new b2Vec2();\r\n        this.m_v2 = new b2Vec2();\r\n        this.m_v3 = new b2Vec2();\r\n        this.m_normal0 = new b2Vec2();\r\n        this.m_normal1 = new b2Vec2();\r\n        this.m_normal2 = new b2Vec2();\r\n        this.m_normal = new b2Vec2();\r\n        this.m_type1 = 0 /* e_isolated */;\r\n        this.m_type2 = 0 /* e_isolated */;\r\n        this.m_lowerLimit = new b2Vec2();\r\n        this.m_upperLimit = new b2Vec2();\r\n        this.m_radius = 0;\r\n        this.m_front = false;\r\n    }\r\n    Collide(manifold, edgeA, xfA, polygonB, xfB) {\r\n        b2Transform.MulTXX(xfA, xfB, this.m_xf);\r\n        b2Transform.MulXV(this.m_xf, polygonB.m_centroid, this.m_centroidB);\r\n        this.m_v0.Copy(edgeA.m_vertex0);\r\n        this.m_v1.Copy(edgeA.m_vertex1);\r\n        this.m_v2.Copy(edgeA.m_vertex2);\r\n        this.m_v3.Copy(edgeA.m_vertex3);\r\n        const hasVertex0 = edgeA.m_hasVertex0;\r\n        const hasVertex3 = edgeA.m_hasVertex3;\r\n        const edge1 = b2Vec2.SubVV(this.m_v2, this.m_v1, b2EPCollider.s_edge1);\r\n        edge1.Normalize();\r\n        this.m_normal1.Set(edge1.y, -edge1.x);\r\n        const offset1 = b2Vec2.DotVV(this.m_normal1, b2Vec2.SubVV(this.m_centroidB, this.m_v1, b2Vec2.s_t0));\r\n        let offset0 = 0;\r\n        let offset2 = 0;\r\n        let convex1 = false;\r\n        let convex2 = false;\r\n        // Is there a preceding edge?\r\n        if (hasVertex0) {\r\n            const edge0 = b2Vec2.SubVV(this.m_v1, this.m_v0, b2EPCollider.s_edge0);\r\n            edge0.Normalize();\r\n            this.m_normal0.Set(edge0.y, -edge0.x);\r\n            convex1 = b2Vec2.CrossVV(edge0, edge1) >= 0;\r\n            offset0 = b2Vec2.DotVV(this.m_normal0, b2Vec2.SubVV(this.m_centroidB, this.m_v0, b2Vec2.s_t0));\r\n        }\r\n        // Is there a following edge?\r\n        if (hasVertex3) {\r\n            const edge2 = b2Vec2.SubVV(this.m_v3, this.m_v2, b2EPCollider.s_edge2);\r\n            edge2.Normalize();\r\n            this.m_normal2.Set(edge2.y, -edge2.x);\r\n            convex2 = b2Vec2.CrossVV(edge1, edge2) > 0;\r\n            offset2 = b2Vec2.DotVV(this.m_normal2, b2Vec2.SubVV(this.m_centroidB, this.m_v2, b2Vec2.s_t0));\r\n        }\r\n        // Determine front or back collision. Determine collision normal limits.\r\n        if (hasVertex0 && hasVertex3) {\r\n            if (convex1 && convex2) {\r\n                this.m_front = offset0 >= 0 || offset1 >= 0 || offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else if (convex1) {\r\n                this.m_front = offset0 >= 0 || (offset1 >= 0 && offset2 >= 0);\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else if (convex2) {\r\n                this.m_front = offset2 >= 0 || (offset0 >= 0 && offset1 >= 0);\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset0 >= 0 && offset1 >= 0 && offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n        }\r\n        else if (hasVertex0) {\r\n            if (convex1) {\r\n                this.m_front = offset0 >= 0 || offset1 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset0 >= 0 && offset1 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n        }\r\n        else if (hasVertex3) {\r\n            if (convex2) {\r\n                this.m_front = offset1 >= 0 || offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset1 >= 0 && offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.m_front = offset1 >= 0;\r\n            if (this.m_front) {\r\n                this.m_normal.Copy(this.m_normal1);\r\n                this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n            }\r\n            else {\r\n                this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                this.m_lowerLimit.Copy(this.m_normal1);\r\n                this.m_upperLimit.Copy(this.m_normal1);\r\n            }\r\n        }\r\n        // Get polygonB in frameA\r\n        this.m_polygonB.count = polygonB.m_count;\r\n        for (let i = 0; i < polygonB.m_count; ++i) {\r\n            b2Transform.MulXV(this.m_xf, polygonB.m_vertices[i], this.m_polygonB.vertices[i]);\r\n            b2Rot.MulRV(this.m_xf.q, polygonB.m_normals[i], this.m_polygonB.normals[i]);\r\n        }\r\n        this.m_radius = 2 * b2_polygonRadius;\r\n        manifold.pointCount = 0;\r\n        const edgeAxis = this.ComputeEdgeSeparation(b2EPCollider.s_edgeAxis);\r\n        // If no valid normal can be found than this edge should not collide.\r\n        if (edgeAxis.type === 0 /* e_unknown */) {\r\n            return;\r\n        }\r\n        if (edgeAxis.separation > this.m_radius) {\r\n            return;\r\n        }\r\n        const polygonAxis = this.ComputePolygonSeparation(b2EPCollider.s_polygonAxis);\r\n        if (polygonAxis.type !== 0 /* e_unknown */ && polygonAxis.separation > this.m_radius) {\r\n            return;\r\n        }\r\n        // Use hysteresis for jitter reduction.\r\n        const k_relativeTol = 0.98;\r\n        const k_absoluteTol = 0.001;\r\n        let primaryAxis;\r\n        if (polygonAxis.type === 0 /* e_unknown */) {\r\n            primaryAxis = edgeAxis;\r\n        }\r\n        else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\r\n            primaryAxis = polygonAxis;\r\n        }\r\n        else {\r\n            primaryAxis = edgeAxis;\r\n        }\r\n        const ie = b2EPCollider.s_ie;\r\n        const rf = b2EPCollider.s_rf;\r\n        if (primaryAxis.type === 1 /* e_edgeA */) {\r\n            manifold.type = b2ManifoldType.e_faceA;\r\n            // Search for the polygon normal that is most anti-parallel to the edge normal.\r\n            let bestIndex = 0;\r\n            let bestValue = b2Vec2.DotVV(this.m_normal, this.m_polygonB.normals[0]);\r\n            for (let i = 1; i < this.m_polygonB.count; ++i) {\r\n                const value = b2Vec2.DotVV(this.m_normal, this.m_polygonB.normals[i]);\r\n                if (value < bestValue) {\r\n                    bestValue = value;\r\n                    bestIndex = i;\r\n                }\r\n            }\r\n            const i1 = bestIndex;\r\n            const i2 = (i1 + 1) % this.m_polygonB.count;\r\n            const ie0 = ie[0];\r\n            ie0.v.Copy(this.m_polygonB.vertices[i1]);\r\n            ie0.id.cf.indexA = 0;\r\n            ie0.id.cf.indexB = i1;\r\n            ie0.id.cf.typeA = b2ContactFeatureType.e_face;\r\n            ie0.id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n            const ie1 = ie[1];\r\n            ie1.v.Copy(this.m_polygonB.vertices[i2]);\r\n            ie1.id.cf.indexA = 0;\r\n            ie1.id.cf.indexB = i2;\r\n            ie1.id.cf.typeA = b2ContactFeatureType.e_face;\r\n            ie1.id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n            if (this.m_front) {\r\n                rf.i1 = 0;\r\n                rf.i2 = 1;\r\n                rf.v1.Copy(this.m_v1);\r\n                rf.v2.Copy(this.m_v2);\r\n                rf.normal.Copy(this.m_normal1);\r\n            }\r\n            else {\r\n                rf.i1 = 1;\r\n                rf.i2 = 0;\r\n                rf.v1.Copy(this.m_v2);\r\n                rf.v2.Copy(this.m_v1);\r\n                rf.normal.Copy(this.m_normal1).SelfNeg();\r\n            }\r\n        }\r\n        else {\r\n            manifold.type = b2ManifoldType.e_faceB;\r\n            const ie0 = ie[0];\r\n            ie0.v.Copy(this.m_v1);\r\n            ie0.id.cf.indexA = 0;\r\n            ie0.id.cf.indexB = primaryAxis.index;\r\n            ie0.id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n            ie0.id.cf.typeB = b2ContactFeatureType.e_face;\r\n            const ie1 = ie[1];\r\n            ie1.v.Copy(this.m_v2);\r\n            ie1.id.cf.indexA = 0;\r\n            ie1.id.cf.indexB = primaryAxis.index;\r\n            ie1.id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n            ie1.id.cf.typeB = b2ContactFeatureType.e_face;\r\n            rf.i1 = primaryAxis.index;\r\n            rf.i2 = (rf.i1 + 1) % this.m_polygonB.count;\r\n            rf.v1.Copy(this.m_polygonB.vertices[rf.i1]);\r\n            rf.v2.Copy(this.m_polygonB.vertices[rf.i2]);\r\n            rf.normal.Copy(this.m_polygonB.normals[rf.i1]);\r\n        }\r\n        rf.sideNormal1.Set(rf.normal.y, -rf.normal.x);\r\n        rf.sideNormal2.Copy(rf.sideNormal1).SelfNeg();\r\n        rf.sideOffset1 = b2Vec2.DotVV(rf.sideNormal1, rf.v1);\r\n        rf.sideOffset2 = b2Vec2.DotVV(rf.sideNormal2, rf.v2);\r\n        // Clip incident edge against extruded edge1 side edges.\r\n        const clipPoints1 = b2EPCollider.s_clipPoints1;\r\n        const clipPoints2 = b2EPCollider.s_clipPoints2;\r\n        let np = 0;\r\n        // Clip to box side 1\r\n        np = b2ClipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\r\n        if (np < b2_maxManifoldPoints) {\r\n            return;\r\n        }\r\n        // Clip to negative box side 1\r\n        np = b2ClipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\r\n        if (np < b2_maxManifoldPoints) {\r\n            return;\r\n        }\r\n        // Now clipPoints2 contains the clipped points.\r\n        if (primaryAxis.type === 1 /* e_edgeA */) {\r\n            manifold.localNormal.Copy(rf.normal);\r\n            manifold.localPoint.Copy(rf.v1);\r\n        }\r\n        else {\r\n            manifold.localNormal.Copy(polygonB.m_normals[rf.i1]);\r\n            manifold.localPoint.Copy(polygonB.m_vertices[rf.i1]);\r\n        }\r\n        let pointCount = 0;\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            let separation;\r\n            separation = b2Vec2.DotVV(rf.normal, b2Vec2.SubVV(clipPoints2[i].v, rf.v1, b2Vec2.s_t0));\r\n            if (separation <= this.m_radius) {\r\n                const cp = manifold.points[pointCount];\r\n                if (primaryAxis.type === 1 /* e_edgeA */) {\r\n                    b2Transform.MulTXV(this.m_xf, clipPoints2[i].v, cp.localPoint);\r\n                    cp.id = clipPoints2[i].id;\r\n                }\r\n                else {\r\n                    cp.localPoint.Copy(clipPoints2[i].v);\r\n                    cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\r\n                    cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\r\n                    cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\r\n                    cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\r\n                }\r\n                ++pointCount;\r\n            }\r\n        }\r\n        manifold.pointCount = pointCount;\r\n    }\r\n    ComputeEdgeSeparation(out) {\r\n        const axis = out;\r\n        axis.type = 1 /* e_edgeA */;\r\n        axis.index = this.m_front ? 0 : 1;\r\n        axis.separation = b2_maxFloat;\r\n        for (let i = 0; i < this.m_polygonB.count; ++i) {\r\n            const s = b2Vec2.DotVV(this.m_normal, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v1, b2Vec2.s_t0));\r\n            if (s < axis.separation) {\r\n                axis.separation = s;\r\n            }\r\n        }\r\n        return axis;\r\n    }\r\n    ComputePolygonSeparation(out) {\r\n        const axis = out;\r\n        axis.type = 0 /* e_unknown */;\r\n        axis.index = -1;\r\n        axis.separation = -b2_maxFloat;\r\n        const perp = b2EPCollider.s_perp.Set(-this.m_normal.y, this.m_normal.x);\r\n        for (let i = 0; i < this.m_polygonB.count; ++i) {\r\n            const n = b2Vec2.NegV(this.m_polygonB.normals[i], b2EPCollider.s_n);\r\n            const s1 = b2Vec2.DotVV(n, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v1, b2Vec2.s_t0));\r\n            const s2 = b2Vec2.DotVV(n, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v2, b2Vec2.s_t0));\r\n            const s = b2Min(s1, s2);\r\n            if (s > this.m_radius) {\r\n                // No collision\r\n                axis.type = 2 /* e_edgeB */;\r\n                axis.index = i;\r\n                axis.separation = s;\r\n                return axis;\r\n            }\r\n            // Adjacency\r\n            if (b2Vec2.DotVV(n, perp) >= 0) {\r\n                if (b2Vec2.DotVV(b2Vec2.SubVV(n, this.m_upperLimit, b2Vec2.s_t0), this.m_normal) < -b2_angularSlop) {\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                if (b2Vec2.DotVV(b2Vec2.SubVV(n, this.m_lowerLimit, b2Vec2.s_t0), this.m_normal) < -b2_angularSlop) {\r\n                    continue;\r\n                }\r\n            }\r\n            if (s > axis.separation) {\r\n                axis.type = 2 /* e_edgeB */;\r\n                axis.index = i;\r\n                axis.separation = s;\r\n            }\r\n        }\r\n        return axis;\r\n    }\r\n}\r\nb2EPCollider.s_edge1 = new b2Vec2();\r\nb2EPCollider.s_edge0 = new b2Vec2();\r\nb2EPCollider.s_edge2 = new b2Vec2();\r\nb2EPCollider.s_ie = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_rf = new b2ReferenceFace();\r\nb2EPCollider.s_clipPoints1 = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_clipPoints2 = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_edgeAxis = new b2EPAxis();\r\nb2EPCollider.s_polygonAxis = new b2EPAxis();\r\nb2EPCollider.s_n = new b2Vec2();\r\nb2EPCollider.s_perp = new b2Vec2();\r\nconst b2CollideEdgeAndPolygon_s_collider = new b2EPCollider();\r\nexport function b2CollideEdgeAndPolygon(manifold, edgeA, xfA, polygonB, xfB) {\r\n    const collider = b2CollideEdgeAndPolygon_s_collider;\r\n    collider.Collide(manifold, edgeA, xfA, polygonB, xfB);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_epsilon } from \"../../Common/b2Settings\";\r\nimport { b2Sq, b2Sqrt, b2Asin, b2Pow, b2Vec2, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A circle shape.\r\nexport class b2CircleShape extends b2Shape {\r\n    constructor(radius = 0) {\r\n        super(b2ShapeType.e_circleShape, radius);\r\n        this.m_p = new b2Vec2();\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2CircleShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        ///b2Assert(other instanceof b2CircleShape);\r\n        this.m_p.Copy(other.m_p);\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    TestPoint(transform, p) {\r\n        const center = b2Transform.MulXV(transform, this.m_p, b2CircleShape.TestPoint_s_center);\r\n        const d = b2Vec2.SubVV(p, center, b2CircleShape.TestPoint_s_d);\r\n        return b2Vec2.DotVV(d, d) <= b2Sq(this.m_radius);\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const center = b2Transform.MulXV(xf, this.m_p, b2CircleShape.ComputeDistance_s_center);\r\n        b2Vec2.SubVV(p, center, normal);\r\n        return normal.Normalize() - this.m_radius;\r\n    }\r\n    RayCast(output, input, transform, childIndex) {\r\n        const position = b2Transform.MulXV(transform, this.m_p, b2CircleShape.RayCast_s_position);\r\n        const s = b2Vec2.SubVV(input.p1, position, b2CircleShape.RayCast_s_s);\r\n        const b = b2Vec2.DotVV(s, s) - b2Sq(this.m_radius);\r\n        // Solve quadratic equation.\r\n        const r = b2Vec2.SubVV(input.p2, input.p1, b2CircleShape.RayCast_s_r);\r\n        const c = b2Vec2.DotVV(s, r);\r\n        const rr = b2Vec2.DotVV(r, r);\r\n        const sigma = c * c - rr * b;\r\n        // Check for negative discriminant and short segment.\r\n        if (sigma < 0 || rr < b2_epsilon) {\r\n            return false;\r\n        }\r\n        // Find the point of intersection of the line with the circle.\r\n        let a = (-(c + b2Sqrt(sigma)));\r\n        // Is the intersection point on the segment?\r\n        if (0 <= a && a <= input.maxFraction * rr) {\r\n            a /= rr;\r\n            output.fraction = a;\r\n            b2Vec2.AddVMulSV(s, a, r, output.normal).SelfNormalize();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ComputeAABB(aabb, transform, childIndex) {\r\n        const p = b2Transform.MulXV(transform, this.m_p, b2CircleShape.ComputeAABB_s_p);\r\n        aabb.lowerBound.Set(p.x - this.m_radius, p.y - this.m_radius);\r\n        aabb.upperBound.Set(p.x + this.m_radius, p.y + this.m_radius);\r\n    }\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        const radius_sq = b2Sq(this.m_radius);\r\n        massData.mass = density * b2_pi * radius_sq;\r\n        massData.center.Copy(this.m_p);\r\n        // inertia about the local origin\r\n        massData.I = massData.mass * (0.5 * radius_sq + b2Vec2.DotVV(this.m_p, this.m_p));\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_p);\r\n        proxy.m_count = 1;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        const p = b2Transform.MulXV(xf, this.m_p, new b2Vec2());\r\n        const l = (-(b2Vec2.DotVV(normal, p) - offset));\r\n        if (l < (-this.m_radius) + b2_epsilon) {\r\n            // Completely dry\r\n            return 0;\r\n        }\r\n        if (l > this.m_radius) {\r\n            // Completely wet\r\n            c.Copy(p);\r\n            return b2_pi * this.m_radius * this.m_radius;\r\n        }\r\n        // Magic\r\n        const r2 = this.m_radius * this.m_radius;\r\n        const l2 = l * l;\r\n        const area = r2 * (b2Asin(l / this.m_radius) + b2_pi / 2) + l * b2Sqrt(r2 - l2);\r\n        const com = (-2 / 3 * b2Pow(r2 - l2, 1.5) / area);\r\n        c.x = p.x + normal.x * com;\r\n        c.y = p.y + normal.y * com;\r\n        return area;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2CircleShape = new b2CircleShape();\\n\");\r\n        log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\r\n        log(\"    shape.m_p.Set(%.15f, %.15f);\\n\", this.m_p.x, this.m_p.y);\r\n    }\r\n}\r\n/// Implement b2Shape.\r\nb2CircleShape.TestPoint_s_center = new b2Vec2();\r\nb2CircleShape.TestPoint_s_d = new b2Vec2();\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2CircleShape.ComputeDistance_s_center = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\r\n// From Section 3.1.2\r\n// x = s + a * r\r\n// norm(x) = radius\r\nb2CircleShape.RayCast_s_position = new b2Vec2();\r\nb2CircleShape.RayCast_s_s = new b2Vec2();\r\nb2CircleShape.RayCast_s_r = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2CircleShape.ComputeAABB_s_p = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaXJjbGVTaGFwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbGxpc2lvbi9TaGFwZXMvYjJDaXJjbGVTaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLE9BQU8sRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDNUQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFJdkYsT0FBTyxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFakQsbUJBQW1CO0FBQ25CLE1BQU0sb0JBQXFCLFNBQVEsT0FBTztJQUd4QyxZQUFZLFNBQWlCLENBQUM7UUFDNUIsS0FBSyxDQUFDLFdBQVcsQ0FBQyxhQUFhLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFIcEMsUUFBRyxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7SUFJbEMsQ0FBQztJQUVELHNCQUFzQjtJQUNmLEtBQUs7UUFDVixPQUFPLElBQUksYUFBYSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFTSxJQUFJLENBQUMsS0FBb0I7UUFDOUIsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVsQiw0Q0FBNEM7UUFFNUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELCtCQUErQjtJQUN4QixhQUFhO1FBQ2xCLE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUtNLFNBQVMsQ0FBQyxTQUFzQixFQUFFLENBQVM7UUFDaEQsTUFBTSxNQUFNLEdBQVcsV0FB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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_epsilon, b2_maxFloat, b2_linearSlop, b2_polygonRadius, b2_maxPolygonVertices, b2MakeNumberArray } from \"../../Common/b2Settings\";\r\nimport { b2Min, b2Vec2, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2MassData } from \"./b2Shape\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A convex polygon. It is assumed that the interior of the polygon is to\r\n/// the left of each edge.\r\n/// Polygons have a maximum number of vertices equal to b2_maxPolygonVertices.\r\n/// In most cases you should not need many vertices for a convex polygon.\r\nexport class b2PolygonShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_polygonShape, b2_polygonRadius);\r\n        this.m_centroid = new b2Vec2(0, 0);\r\n        this.m_vertices = b2Vec2.MakeArray(b2_maxPolygonVertices);\r\n        this.m_normals = b2Vec2.MakeArray(b2_maxPolygonVertices);\r\n        this.m_count = 0;\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2PolygonShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        ///b2Assert(other instanceof b2PolygonShape);\r\n        this.m_centroid.Copy(other.m_centroid);\r\n        this.m_count = other.m_count;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_vertices[i].Copy(other.m_vertices[i]);\r\n            this.m_normals[i].Copy(other.m_normals[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    Set(vertices, count = vertices.length, start = 0) {\r\n        ///b2Assert(3 <= count && count <= b2_maxPolygonVertices);\r\n        if (count < 3) {\r\n            return this.SetAsBox(1, 1);\r\n        }\r\n        let n = b2Min(count, b2_maxPolygonVertices);\r\n        // Perform welding and copy vertices into local buffer.\r\n        const ps = b2PolygonShape.Set_s_ps;\r\n        let tempCount = 0;\r\n        for (let i = 0; i < n; ++i) {\r\n            const /*b2Vec2*/ v = vertices[start + i];\r\n            let /*bool*/ unique = true;\r\n            for (let /*int32*/ j = 0; j < tempCount; ++j) {\r\n                if (b2Vec2.DistanceSquaredVV(v, ps[j]) < ((0.5 * b2_linearSlop) * (0.5 * b2_linearSlop))) {\r\n                    unique = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (unique) {\r\n                ps[tempCount++].Copy(v); // ps[tempCount++] = v;\r\n            }\r\n        }\r\n        n = tempCount;\r\n        if (n < 3) {\r\n            // Polygon is degenerate.\r\n            ///b2Assert(false);\r\n            return this.SetAsBox(1.0, 1.0);\r\n        }\r\n        // Create the convex hull using the Gift wrapping algorithm\r\n        // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\r\n        // Find the right most point on the hull\r\n        let i0 = 0;\r\n        let x0 = ps[0].x;\r\n        for (let i = 1; i < n; ++i) {\r\n            const x = ps[i].x;\r\n            if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\r\n                i0 = i;\r\n                x0 = x;\r\n            }\r\n        }\r\n        const hull = b2PolygonShape.Set_s_hull;\r\n        let m = 0;\r\n        let ih = i0;\r\n        for (;;) {\r\n            hull[m] = ih;\r\n            let ie = 0;\r\n            for (let j = 1; j < n; ++j) {\r\n                if (ie === ih) {\r\n                    ie = j;\r\n                    continue;\r\n                }\r\n                const r = b2Vec2.SubVV(ps[ie], ps[hull[m]], b2PolygonShape.Set_s_r);\r\n                const v = b2Vec2.SubVV(ps[j], ps[hull[m]], b2PolygonShape.Set_s_v);\r\n                const c = b2Vec2.CrossVV(r, v);\r\n                if (c < 0) {\r\n                    ie = j;\r\n                }\r\n                // Collinearity check\r\n                if (c === 0 && v.LengthSquared() > r.LengthSquared()) {\r\n                    ie = j;\r\n                }\r\n            }\r\n            ++m;\r\n            ih = ie;\r\n            if (ie === i0) {\r\n                break;\r\n            }\r\n        }\r\n        this.m_count = m;\r\n        // Copy vertices.\r\n        for (let i = 0; i < m; ++i) {\r\n            this.m_vertices[i].Copy(ps[hull[i]]);\r\n        }\r\n        // Compute normals. Ensure the edges have non-zero length.\r\n        for (let i = 0; i < m; ++i) {\r\n            const vertexi1 = this.m_vertices[i];\r\n            const vertexi2 = this.m_vertices[(i + 1) % m];\r\n            const edge = b2Vec2.SubVV(vertexi2, vertexi1, b2Vec2.s_t0); // edge uses s_t0\r\n            ///b2Assert(edge.LengthSquared() > b2_epsilon_sq);\r\n            b2Vec2.CrossVOne(edge, this.m_normals[i]).SelfNormalize();\r\n        }\r\n        // Compute the polygon centroid.\r\n        b2PolygonShape.ComputeCentroid(this.m_vertices, m, this.m_centroid);\r\n        return this;\r\n    }\r\n    SetAsArray(vertices, count = vertices.length) {\r\n        return this.Set(vertices, count);\r\n    }\r\n    /// Build vertices to represent an axis-aligned box or an oriented box.\r\n    /// @param hx the half-width.\r\n    /// @param hy the half-height.\r\n    /// @param center the center of the box in local coordinates.\r\n    /// @param angle the rotation of the box in local coordinates.\r\n    SetAsBox(hx, hy, center, angle = 0) {\r\n        this.m_count = 4;\r\n        this.m_vertices[0].Set((-hx), (-hy));\r\n        this.m_vertices[1].Set(hx, (-hy));\r\n        this.m_vertices[2].Set(hx, hy);\r\n        this.m_vertices[3].Set((-hx), hy);\r\n        this.m_normals[0].Set(0, (-1));\r\n        this.m_normals[1].Set(1, 0);\r\n        this.m_normals[2].Set(0, 1);\r\n        this.m_normals[3].Set((-1), 0);\r\n        this.m_centroid.SetZero();\r\n        if (center instanceof b2Vec2) {\r\n            this.m_centroid.Copy(center);\r\n            const xf = new b2Transform();\r\n            xf.SetPosition(center);\r\n            xf.SetRotationAngle(angle);\r\n            // Transform vertices and normals.\r\n            for (let i = 0; i < this.m_count; ++i) {\r\n                b2Transform.MulXV(xf, this.m_vertices[i], this.m_vertices[i]);\r\n                b2Rot.MulRV(xf.q, this.m_normals[i], this.m_normals[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    TestPoint(xf, p) {\r\n        const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.TestPoint_s_pLocal);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\r\n            if (dot > 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.ComputeDistance_s_pLocal);\r\n        let maxDistance = -b2_maxFloat;\r\n        const normalForMaxDistance = b2PolygonShape.ComputeDistance_s_normalForMaxDistance.Copy(pLocal);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\r\n            if (dot > maxDistance) {\r\n                maxDistance = dot;\r\n                normalForMaxDistance.Copy(this.m_normals[i]);\r\n            }\r\n        }\r\n        if (maxDistance > 0) {\r\n            const minDistance = b2PolygonShape.ComputeDistance_s_minDistance.Copy(normalForMaxDistance);\r\n            let minDistance2 = maxDistance * maxDistance;\r\n            for (let i = 0; i < this.m_count; ++i) {\r\n                const distance = b2Vec2.SubVV(pLocal, this.m_vertices[i], b2PolygonShape.ComputeDistance_s_distance);\r\n                const distance2 = distance.LengthSquared();\r\n                if (minDistance2 > distance2) {\r\n                    minDistance.Copy(distance);\r\n                    minDistance2 = distance2;\r\n                }\r\n            }\r\n            b2Rot.MulRV(xf.q, minDistance, normal);\r\n            normal.Normalize();\r\n            return Math.sqrt(minDistance2);\r\n        }\r\n        else {\r\n            b2Rot.MulRV(xf.q, normalForMaxDistance, normal);\r\n            return maxDistance;\r\n        }\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        // Put the ray into the polygon's frame of reference.\r\n        const p1 = b2Transform.MulTXV(xf, input.p1, b2PolygonShape.RayCast_s_p1);\r\n        const p2 = b2Transform.MulTXV(xf, input.p2, b2PolygonShape.RayCast_s_p2);\r\n        const d = b2Vec2.SubVV(p2, p1, b2PolygonShape.RayCast_s_d);\r\n        let lower = 0, upper = input.maxFraction;\r\n        let index = -1;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            // p = p1 + a * d\r\n            // dot(normal, p - v) = 0\r\n            // dot(normal, p1 - v) + a * dot(normal, d) = 0\r\n            const numerator = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(this.m_vertices[i], p1, b2Vec2.s_t0));\r\n            const denominator = b2Vec2.DotVV(this.m_normals[i], d);\r\n            if (denominator === 0) {\r\n                if (numerator < 0) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                // Note: we want this predicate without division:\r\n                // lower < numerator / denominator, where denominator < 0\r\n                // Since denominator < 0, we have to flip the inequality:\r\n                // lower < numerator / denominator <==> denominator * lower > numerator.\r\n                if (denominator < 0 && numerator < lower * denominator) {\r\n                    // Increase lower.\r\n                    // The segment enters this half-space.\r\n                    lower = numerator / denominator;\r\n                    index = i;\r\n                }\r\n                else if (denominator > 0 && numerator < upper * denominator) {\r\n                    // Decrease upper.\r\n                    // The segment exits this half-space.\r\n                    upper = numerator / denominator;\r\n                }\r\n            }\r\n            // The use of epsilon here causes the assert on lower to trip\r\n            // in some cases. Apparently the use of epsilon was to make edge\r\n            // shapes work, but now those are handled separately.\r\n            // if (upper < lower - b2_epsilon)\r\n            if (upper < lower) {\r\n                return false;\r\n            }\r\n        }\r\n        ///b2Assert(0 <= lower && lower <= input.maxFraction);\r\n        if (index >= 0) {\r\n            output.fraction = lower;\r\n            b2Rot.MulRV(xf.q, this.m_normals[index], output.normal);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        const lower = b2Transform.MulXV(xf, this.m_vertices[0], aabb.lowerBound);\r\n        const upper = aabb.upperBound.Copy(lower);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const v = b2Transform.MulXV(xf, this.m_vertices[i], b2PolygonShape.ComputeAABB_s_v);\r\n            b2Vec2.MinV(v, lower, lower);\r\n            b2Vec2.MaxV(v, upper, upper);\r\n        }\r\n        const r = this.m_radius;\r\n        lower.SelfSubXY(r, r);\r\n        upper.SelfAddXY(r, r);\r\n    }\r\n    ComputeMass(massData, density) {\r\n        // Polygon mass, centroid, and inertia.\r\n        // Let rho be the polygon density in mass per unit area.\r\n        // Then:\r\n        // mass = rho * int(dA)\r\n        // centroid.x = (1/mass) * rho * int(x * dA)\r\n        // centroid.y = (1/mass) * rho * int(y * dA)\r\n        // I = rho * int((x*x + y*y) * dA)\r\n        //\r\n        // We can compute these integrals by summing all the integrals\r\n        // for each triangle of the polygon. To evaluate the integral\r\n        // for a single triangle, we make a change of variables to\r\n        // the (u,v) coordinates of the triangle:\r\n        // x = x0 + e1x * u + e2x * v\r\n        // y = y0 + e1y * u + e2y * v\r\n        // where 0 <= u && 0 <= v && u + v <= 1.\r\n        //\r\n        // We integrate u from [0,1-v] and then v from [0,1].\r\n        // We also need to use the Jacobian of the transformation:\r\n        // D = cross(e1, e2)\r\n        //\r\n        // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\r\n        //\r\n        // The rest of the derivation is handled by computer algebra.\r\n        ///b2Assert(this.m_count >= 3);\r\n        const center = b2PolygonShape.ComputeMass_s_center.SetZero();\r\n        let area = 0;\r\n        let I = 0;\r\n        // s is the reference point for forming triangles.\r\n        // It's location doesn't change the result (except for rounding error).\r\n        const s = b2PolygonShape.ComputeMass_s_s.SetZero();\r\n        // This code would put the reference point inside the polygon.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            s.SelfAdd(this.m_vertices[i]);\r\n        }\r\n        s.SelfMul(1 / this.m_count);\r\n        const k_inv3 = 1 / 3;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            // Triangle vertices.\r\n            const e1 = b2Vec2.SubVV(this.m_vertices[i], s, b2PolygonShape.ComputeMass_s_e1);\r\n            const e2 = b2Vec2.SubVV(this.m_vertices[(i + 1) % this.m_count], s, b2PolygonShape.ComputeMass_s_e2);\r\n            const D = b2Vec2.CrossVV(e1, e2);\r\n            const triangleArea = 0.5 * D;\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            center.SelfAdd(b2Vec2.MulSV(triangleArea * k_inv3, b2Vec2.AddVV(e1, e2, b2Vec2.s_t0), b2Vec2.s_t1));\r\n            const ex1 = e1.x;\r\n            const ey1 = e1.y;\r\n            const ex2 = e2.x;\r\n            const ey2 = e2.y;\r\n            const intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\r\n            const inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\r\n            I += (0.25 * k_inv3 * D) * (intx2 + inty2);\r\n        }\r\n        // Total mass\r\n        massData.mass = density * area;\r\n        // Center of mass\r\n        ///b2Assert(area > b2_epsilon);\r\n        center.SelfMul(1 / area);\r\n        b2Vec2.AddVV(center, s, massData.center);\r\n        // Inertia tensor relative to the local origin (point s).\r\n        massData.I = density * I;\r\n        // Shift to center of mass then to original body origin.\r\n        massData.I += massData.mass * (b2Vec2.DotVV(massData.center, massData.center) - b2Vec2.DotVV(center, center));\r\n    }\r\n    Validate() {\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const i1 = i;\r\n            const i2 = (i + 1) % this.m_count;\r\n            const p = this.m_vertices[i1];\r\n            const e = b2Vec2.SubVV(this.m_vertices[i2], p, b2PolygonShape.Validate_s_e);\r\n            for (let j = 0; j < this.m_count; ++j) {\r\n                if (j === i1 || j === i2) {\r\n                    continue;\r\n                }\r\n                const v = b2Vec2.SubVV(this.m_vertices[j], p, b2PolygonShape.Validate_s_v);\r\n                const c = b2Vec2.CrossVV(e, v);\r\n                if (c < 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = this.m_vertices;\r\n        proxy.m_count = this.m_count;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        // Transform plane into shape co-ordinates\r\n        const normalL = b2Rot.MulTRV(xf.q, normal, b2PolygonShape.ComputeSubmergedArea_s_normalL);\r\n        const offsetL = offset - b2Vec2.DotVV(normal, xf.p);\r\n        const depths = b2PolygonShape.ComputeSubmergedArea_s_depths;\r\n        let diveCount = 0;\r\n        let intoIndex = -1;\r\n        let outoIndex = -1;\r\n        let lastSubmerged = false;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            depths[i] = b2Vec2.DotVV(normalL, this.m_vertices[i]) - offsetL;\r\n            const isSubmerged = depths[i] < (-b2_epsilon);\r\n            if (i > 0) {\r\n                if (isSubmerged) {\r\n                    if (!lastSubmerged) {\r\n                        intoIndex = i - 1;\r\n                        diveCount++;\r\n                    }\r\n                }\r\n                else {\r\n                    if (lastSubmerged) {\r\n                        outoIndex = i - 1;\r\n                        diveCount++;\r\n                    }\r\n                }\r\n            }\r\n            lastSubmerged = isSubmerged;\r\n        }\r\n        switch (diveCount) {\r\n            case 0:\r\n                if (lastSubmerged) {\r\n                    // Completely submerged\r\n                    const md = b2PolygonShape.ComputeSubmergedArea_s_md;\r\n                    this.ComputeMass(md, 1);\r\n                    b2Transform.MulXV(xf, md.center, c);\r\n                    return md.mass;\r\n                }\r\n                else {\r\n                    // Completely dry\r\n                    return 0;\r\n                }\r\n            case 1:\r\n                if (intoIndex === (-1)) {\r\n                    intoIndex = this.m_count - 1;\r\n                }\r\n                else {\r\n                    outoIndex = this.m_count - 1;\r\n                }\r\n                break;\r\n        }\r\n        const intoIndex2 = ((intoIndex + 1) % this.m_count);\r\n        const outoIndex2 = ((outoIndex + 1) % this.m_count);\r\n        const intoLamdda = (0 - depths[intoIndex]) / (depths[intoIndex2] - depths[intoIndex]);\r\n        const outoLamdda = (0 - depths[outoIndex]) / (depths[outoIndex2] - depths[outoIndex]);\r\n        const intoVec = b2PolygonShape.ComputeSubmergedArea_s_intoVec.Set(this.m_vertices[intoIndex].x * (1 - intoLamdda) + this.m_vertices[intoIndex2].x * intoLamdda, this.m_vertices[intoIndex].y * (1 - intoLamdda) + this.m_vertices[intoIndex2].y * intoLamdda);\r\n        const outoVec = b2PolygonShape.ComputeSubmergedArea_s_outoVec.Set(this.m_vertices[outoIndex].x * (1 - outoLamdda) + this.m_vertices[outoIndex2].x * outoLamdda, this.m_vertices[outoIndex].y * (1 - outoLamdda) + this.m_vertices[outoIndex2].y * outoLamdda);\r\n        // Initialize accumulator\r\n        let area = 0;\r\n        const center = b2PolygonShape.ComputeSubmergedArea_s_center.SetZero();\r\n        let p2 = this.m_vertices[intoIndex2];\r\n        let p3;\r\n        // An awkward loop from intoIndex2+1 to outIndex2\r\n        let i = intoIndex2;\r\n        while (i !== outoIndex2) {\r\n            i = (i + 1) % this.m_count;\r\n            if (i === outoIndex2)\r\n                p3 = outoVec;\r\n            else\r\n                p3 = this.m_vertices[i];\r\n            const triangleArea = 0.5 * ((p2.x - intoVec.x) * (p3.y - intoVec.y) - (p2.y - intoVec.y) * (p3.x - intoVec.x));\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            center.x += triangleArea * (intoVec.x + p2.x + p3.x) / 3;\r\n            center.y += triangleArea * (intoVec.y + p2.y + p3.y) / 3;\r\n            p2 = p3;\r\n        }\r\n        // Normalize and transform centroid\r\n        center.SelfMul(1 / area);\r\n        b2Transform.MulXV(xf, center, c);\r\n        return area;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2PolygonShape = new b2PolygonShape();\\n\");\r\n        log(\"    const vs: b2Vec2[] = b2Vec2.MakeArray(%d);\\n\", b2_maxPolygonVertices);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            log(\"    vs[%d].Set(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\r\n        }\r\n        log(\"    shape.Set(vs, %d);\\n\", this.m_count);\r\n    }\r\n    static ComputeCentroid(vs, count, out) {\r\n        ///b2Assert(count >= 3);\r\n        const c = out;\r\n        c.SetZero();\r\n        let area = 0;\r\n        // s is the reference point for forming triangles.\r\n        // It's location doesn't change the result (except for rounding error).\r\n        const pRef = b2PolygonShape.ComputeCentroid_s_pRef.SetZero();\r\n        /*\r\n    #if 0\r\n        // This code would put the reference point inside the polygon.\r\n        for (let i: number = 0; i < count; ++i) {\r\n          pRef.SelfAdd(vs[i]);\r\n        }\r\n        pRef.SelfMul(1 / count);\r\n    #endif\r\n        */\r\n        const inv3 = 1 / 3;\r\n        for (let i = 0; i < count; ++i) {\r\n            // Triangle vertices.\r\n            const p1 = pRef;\r\n            const p2 = vs[i];\r\n            const p3 = vs[(i + 1) % count];\r\n            const e1 = b2Vec2.SubVV(p2, p1, b2PolygonShape.ComputeCentroid_s_e1);\r\n            const e2 = b2Vec2.SubVV(p3, p1, b2PolygonShape.ComputeCentroid_s_e2);\r\n            const D = b2Vec2.CrossVV(e1, e2);\r\n            const triangleArea = 0.5 * D;\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            c.x += triangleArea * inv3 * (p1.x + p2.x + p3.x);\r\n            c.y += triangleArea * inv3 * (p1.y + p2.y + p3.y);\r\n        }\r\n        // Centroid\r\n        ///b2Assert(area > b2_epsilon);\r\n        c.SelfMul(1 / area);\r\n        return c;\r\n    }\r\n}\r\n/// Create a convex hull from the given array of points.\r\n/// The count must be in the range [3, b2_maxPolygonVertices].\r\n/// @warning the points may be re-ordered, even if they form a convex polygon\r\n/// @warning collinear points are handled but not removed. Collinear points\r\n/// may lead to poor stacking behavior.\r\nb2PolygonShape.Set_s_ps = b2Vec2.MakeArray(b2_maxPolygonVertices);\r\nb2PolygonShape.Set_s_hull = b2MakeNumberArray(b2_maxPolygonVertices);\r\nb2PolygonShape.Set_s_r = new b2Vec2();\r\nb2PolygonShape.Set_s_v = new b2Vec2();\r\n/// @see b2Shape::TestPoint\r\nb2PolygonShape.TestPoint_s_pLocal = new b2Vec2();\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2PolygonShape.ComputeDistance_s_pLocal = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_normalForMaxDistance = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_minDistance = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_distance = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\nb2PolygonShape.RayCast_s_p1 = new b2Vec2();\r\nb2PolygonShape.RayCast_s_p2 = new b2Vec2();\r\nb2PolygonShape.RayCast_s_d = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2PolygonShape.ComputeAABB_s_v = new b2Vec2();\r\n/// @see b2Shape::ComputeMass\r\nb2PolygonShape.ComputeMass_s_center = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_s = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_e1 = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_e2 = new b2Vec2();\r\nb2PolygonShape.Validate_s_e = new b2Vec2();\r\nb2PolygonShape.Validate_s_v = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_normalL = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_depths = b2MakeNumberArray(b2_maxPolygonVertices);\r\nb2PolygonShape.ComputeSubmergedArea_s_md = new b2MassData();\r\nb2PolygonShape.ComputeSubmergedArea_s_intoVec = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_outoVec = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_center = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_pRef = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_e1 = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_e2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_polygonRadius } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A line segment (edge) shape. These can be connected in chains or loops\r\n/// to other edge shapes. The connectivity information is used to ensure\r\n/// correct contact normals.\r\nexport class b2EdgeShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_edgeShape, b2_polygonRadius);\r\n        this.m_vertex1 = new b2Vec2();\r\n        this.m_vertex2 = new b2Vec2();\r\n        this.m_vertex0 = new b2Vec2();\r\n        this.m_vertex3 = new b2Vec2();\r\n        this.m_hasVertex0 = false;\r\n        this.m_hasVertex3 = false;\r\n    }\r\n    /// Set this as an isolated edge.\r\n    Set(v1, v2) {\r\n        this.m_vertex1.Copy(v1);\r\n        this.m_vertex2.Copy(v2);\r\n        this.m_hasVertex0 = false;\r\n        this.m_hasVertex3 = false;\r\n        return this;\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2EdgeShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        ///b2Assert(other instanceof b2EdgeShape);\r\n        this.m_vertex1.Copy(other.m_vertex1);\r\n        this.m_vertex2.Copy(other.m_vertex2);\r\n        this.m_vertex0.Copy(other.m_vertex0);\r\n        this.m_vertex3.Copy(other.m_vertex3);\r\n        this.m_hasVertex0 = other.m_hasVertex0;\r\n        this.m_hasVertex3 = other.m_hasVertex3;\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    /// @see b2Shape::TestPoint\r\n    TestPoint(xf, p) {\r\n        return false;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeDistance_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeDistance_s_v2);\r\n        const d = b2Vec2.SubVV(p, v1, b2EdgeShape.ComputeDistance_s_d);\r\n        const s = b2Vec2.SubVV(v2, v1, b2EdgeShape.ComputeDistance_s_s);\r\n        const ds = b2Vec2.DotVV(d, s);\r\n        if (ds > 0) {\r\n            const s2 = b2Vec2.DotVV(s, s);\r\n            if (ds > s2) {\r\n                b2Vec2.SubVV(p, v2, d);\r\n            }\r\n            else {\r\n                d.SelfMulSub(ds / s2, s);\r\n            }\r\n        }\r\n        normal.Copy(d);\r\n        return normal.Normalize();\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        // Put the ray into the edge's frame of reference.\r\n        const p1 = b2Transform.MulTXV(xf, input.p1, b2EdgeShape.RayCast_s_p1);\r\n        const p2 = b2Transform.MulTXV(xf, input.p2, b2EdgeShape.RayCast_s_p2);\r\n        const d = b2Vec2.SubVV(p2, p1, b2EdgeShape.RayCast_s_d);\r\n        const v1 = this.m_vertex1;\r\n        const v2 = this.m_vertex2;\r\n        const e = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_e);\r\n        const normal = output.normal.Set(e.y, -e.x).SelfNormalize();\r\n        // q = p1 + t * d\r\n        // dot(normal, q - v1) = 0\r\n        // dot(normal, p1 - v1) + t * dot(normal, d) = 0\r\n        const numerator = b2Vec2.DotVV(normal, b2Vec2.SubVV(v1, p1, b2Vec2.s_t0));\r\n        const denominator = b2Vec2.DotVV(normal, d);\r\n        if (denominator === 0) {\r\n            return false;\r\n        }\r\n        const t = numerator / denominator;\r\n        if (t < 0 || input.maxFraction < t) {\r\n            return false;\r\n        }\r\n        const q = b2Vec2.AddVMulSV(p1, t, d, b2EdgeShape.RayCast_s_q);\r\n        // q = v1 + s * r\r\n        // s = dot(q - v1, r) / dot(r, r)\r\n        const r = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_r);\r\n        const rr = b2Vec2.DotVV(r, r);\r\n        if (rr === 0) {\r\n            return false;\r\n        }\r\n        const s = b2Vec2.DotVV(b2Vec2.SubVV(q, v1, b2Vec2.s_t0), r) / rr;\r\n        if (s < 0 || 1 < s) {\r\n            return false;\r\n        }\r\n        output.fraction = t;\r\n        b2Rot.MulRV(xf.q, output.normal, output.normal);\r\n        if (numerator > 0) {\r\n            output.normal.SelfNeg();\r\n        }\r\n        return true;\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeAABB_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeAABB_s_v2);\r\n        b2Vec2.MinV(v1, v2, aabb.lowerBound);\r\n        b2Vec2.MaxV(v1, v2, aabb.upperBound);\r\n        const r = this.m_radius;\r\n        aabb.lowerBound.SelfSubXY(r, r);\r\n        aabb.upperBound.SelfAddXY(r, r);\r\n    }\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        massData.mass = 0;\r\n        b2Vec2.MidVV(this.m_vertex1, this.m_vertex2, massData.center);\r\n        massData.I = 0;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_vertex1);\r\n        proxy.m_vertices[1].Copy(this.m_vertex2);\r\n        proxy.m_count = 2;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        c.SetZero();\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2EdgeShape = new b2EdgeShape();\\n\");\r\n        log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\r\n        log(\"    shape.m_vertex0.Set(%.15f, %.15f);\\n\", this.m_vertex0.x, this.m_vertex0.y);\r\n        log(\"    shape.m_vertex1.Set(%.15f, %.15f);\\n\", this.m_vertex1.x, this.m_vertex1.y);\r\n        log(\"    shape.m_vertex2.Set(%.15f, %.15f);\\n\", this.m_vertex2.x, this.m_vertex2.y);\r\n        log(\"    shape.m_vertex3.Set(%.15f, %.15f);\\n\", this.m_vertex3.x, this.m_vertex3.y);\r\n        log(\"    shape.m_hasVertex0 = %s;\\n\", this.m_hasVertex0);\r\n        log(\"    shape.m_hasVertex3 = %s;\\n\", this.m_hasVertex3);\r\n    }\r\n}\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2EdgeShape.ComputeDistance_s_v1 = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_v2 = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_d = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_s = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\n// p = p1 + t * d\r\n// v = v1 + s * e\r\n// p1 + t * d = v1 + s * e\r\n// s * e - t * d = p1 - v1\r\nb2EdgeShape.RayCast_s_p1 = new b2Vec2();\r\nb2EdgeShape.RayCast_s_p2 = new b2Vec2();\r\nb2EdgeShape.RayCast_s_d = new b2Vec2();\r\nb2EdgeShape.RayCast_s_e = new b2Vec2();\r\nb2EdgeShape.RayCast_s_q = new b2Vec2();\r\nb2EdgeShape.RayCast_s_r = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2EdgeShape.ComputeAABB_s_v1 = new b2Vec2();\r\nb2EdgeShape.ComputeAABB_s_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_polygonRadius, b2_maxPolygonVertices } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\nimport { b2EdgeShape } from \"./b2EdgeShape\";\r\n/// A chain shape is a free form sequence of line segments.\r\n/// The chain has two-sided collision, so you can use inside and outside collision.\r\n/// Therefore, you may use any winding order.\r\n/// Since there may be many vertices, they are allocated using b2Alloc.\r\n/// Connectivity information is used to create smooth collisions.\r\n/// WARNING: The chain will not collide properly if there are self-intersections.\r\nexport class b2ChainShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_chainShape, b2_polygonRadius);\r\n        this.m_count = 0;\r\n        this.m_prevVertex = new b2Vec2();\r\n        this.m_nextVertex = new b2Vec2();\r\n        this.m_hasPrevVertex = false;\r\n        this.m_hasNextVertex = false;\r\n    }\r\n    /// Create a loop. This automatically adjusts connectivity.\r\n    /// @param vertices an array of vertices, these are copied\r\n    /// @param count the vertex count\r\n    CreateLoop(vertices, count = vertices.length) {\r\n        ///b2Assert(this.m_vertices === null && this.m_count === 0);\r\n        ///b2Assert(count >= 3);\r\n        ///for (let i: number = 1; i < count; ++i) {\r\n        ///  const v1 = vertices[i - 1];\r\n        ///  const v2 = vertices[i];\r\n        ///  // If the code crashes here, it means your vertices are too close together.\r\n        ///  b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\r\n        ///}\r\n        this.m_count = count + 1;\r\n        this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n        for (let i = 0; i < count; ++i) {\r\n            this.m_vertices[i].Copy(vertices[i]);\r\n        }\r\n        this.m_vertices[count].Copy(this.m_vertices[0]);\r\n        this.m_prevVertex.Copy(this.m_vertices[this.m_count - 2]);\r\n        this.m_nextVertex.Copy(this.m_vertices[1]);\r\n        this.m_hasPrevVertex = true;\r\n        this.m_hasNextVertex = true;\r\n        return this;\r\n    }\r\n    /// Create a chain with isolated end vertices.\r\n    /// @param vertices an array of vertices, these are copied\r\n    /// @param count the vertex count\r\n    CreateChain(vertices, count = vertices.length) {\r\n        ///b2Assert(this.m_vertices === null && this.m_count === 0);\r\n        ///b2Assert(count >= 2);\r\n        ///for (let i: number = 1; i < count; ++i) {\r\n        ///  const v1 = vertices[i - 1];\r\n        ///  const v2 = vertices[i];\r\n        ///  // If the code crashes here, it means your vertices are too close together.\r\n        ///  b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\r\n        ///}\r\n        this.m_count = count;\r\n        this.m_vertices = b2Vec2.MakeArray(count);\r\n        for (let i = 0; i < count; ++i) {\r\n            this.m_vertices[i].Copy(vertices[i]);\r\n        }\r\n        this.m_hasPrevVertex = false;\r\n        this.m_hasNextVertex = false;\r\n        this.m_prevVertex.SetZero();\r\n        this.m_nextVertex.SetZero();\r\n        return this;\r\n    }\r\n    /// Establish connectivity to a vertex that precedes the first vertex.\r\n    /// Don't call this for loops.\r\n    SetPrevVertex(prevVertex) {\r\n        this.m_prevVertex.Copy(prevVertex);\r\n        this.m_hasPrevVertex = true;\r\n        return this;\r\n    }\r\n    /// Establish connectivity to a vertex that follows the last vertex.\r\n    /// Don't call this for loops.\r\n    SetNextVertex(nextVertex) {\r\n        this.m_nextVertex.Copy(nextVertex);\r\n        this.m_hasNextVertex = true;\r\n        return this;\r\n    }\r\n    /// Implement b2Shape. Vertices are cloned using b2Alloc.\r\n    Clone() {\r\n        return new b2ChainShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        ///b2Assert(other instanceof b2ChainShape);\r\n        this.CreateChain(other.m_vertices, other.m_count);\r\n        this.m_prevVertex.Copy(other.m_prevVertex);\r\n        this.m_nextVertex.Copy(other.m_nextVertex);\r\n        this.m_hasPrevVertex = other.m_hasPrevVertex;\r\n        this.m_hasNextVertex = other.m_hasNextVertex;\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        // edge count = vertex count - 1\r\n        return this.m_count - 1;\r\n    }\r\n    /// Get a child edge.\r\n    GetChildEdge(edge, index) {\r\n        ///b2Assert(0 <= index && index < this.m_count - 1);\r\n        edge.m_type = b2ShapeType.e_edgeShape;\r\n        edge.m_radius = this.m_radius;\r\n        edge.m_vertex1.Copy(this.m_vertices[index]);\r\n        edge.m_vertex2.Copy(this.m_vertices[index + 1]);\r\n        if (index > 0) {\r\n            edge.m_vertex0.Copy(this.m_vertices[index - 1]);\r\n            edge.m_hasVertex0 = true;\r\n        }\r\n        else {\r\n            edge.m_vertex0.Copy(this.m_prevVertex);\r\n            edge.m_hasVertex0 = this.m_hasPrevVertex;\r\n        }\r\n        if (index < this.m_count - 2) {\r\n            edge.m_vertex3.Copy(this.m_vertices[index + 2]);\r\n            edge.m_hasVertex3 = true;\r\n        }\r\n        else {\r\n            edge.m_vertex3.Copy(this.m_nextVertex);\r\n            edge.m_hasVertex3 = this.m_hasNextVertex;\r\n        }\r\n    }\r\n    /// This always return false.\r\n    /// @see b2Shape::TestPoint\r\n    TestPoint(xf, p) {\r\n        return false;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const edge = b2ChainShape.ComputeDistance_s_edgeShape;\r\n        this.GetChildEdge(edge, childIndex);\r\n        return edge.ComputeDistance(xf, p, normal, 0);\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        ///b2Assert(childIndex < this.m_count);\r\n        const edgeShape = b2ChainShape.RayCast_s_edgeShape;\r\n        edgeShape.m_vertex1.Copy(this.m_vertices[childIndex]);\r\n        edgeShape.m_vertex2.Copy(this.m_vertices[(childIndex + 1) % this.m_count]);\r\n        return edgeShape.RayCast(output, input, xf, 0);\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        ///b2Assert(childIndex < this.m_count);\r\n        const vertexi1 = this.m_vertices[childIndex];\r\n        const vertexi2 = this.m_vertices[(childIndex + 1) % this.m_count];\r\n        const v1 = b2Transform.MulXV(xf, vertexi1, b2ChainShape.ComputeAABB_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, vertexi2, b2ChainShape.ComputeAABB_s_v2);\r\n        b2Vec2.MinV(v1, v2, aabb.lowerBound);\r\n        b2Vec2.MaxV(v1, v2, aabb.upperBound);\r\n    }\r\n    /// Chains have zero mass.\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        massData.mass = 0;\r\n        massData.center.SetZero();\r\n        massData.I = 0;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        ///b2Assert(0 <= index && index < this.m_count);\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_vertices[index]);\r\n        if (index + 1 < this.m_count) {\r\n            proxy.m_vertices[1].Copy(this.m_vertices[index + 1]);\r\n        }\r\n        else {\r\n            proxy.m_vertices[1].Copy(this.m_vertices[0]);\r\n        }\r\n        proxy.m_count = 2;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        c.SetZero();\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2ChainShape = new b2ChainShape();\\n\");\r\n        log(\"    const vs: b2Vec2[] = b2Vec2.MakeArray(%d);\\n\", b2_maxPolygonVertices);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            log(\"    vs[%d].Set(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\r\n        }\r\n        log(\"    shape.CreateChain(vs, %d);\\n\", this.m_count);\r\n        log(\"    shape.m_prevVertex.Set(%.15f, %.15f);\\n\", this.m_prevVertex.x, this.m_prevVertex.y);\r\n        log(\"    shape.m_nextVertex.Set(%.15f, %.15f);\\n\", this.m_nextVertex.x, this.m_nextVertex.y);\r\n        log(\"    shape.m_hasPrevVertex = %s;\\n\", (this.m_hasPrevVertex) ? (\"true\") : (\"false\"));\r\n        log(\"    shape.m_hasNextVertex = %s;\\n\", (this.m_hasNextVertex) ? (\"true\") : (\"false\"));\r\n    }\r\n}\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2ChainShape.ComputeDistance_s_edgeShape = new b2EdgeShape();\r\n// #endif\r\n/// Implement b2Shape.\r\nb2ChainShape.RayCast_s_edgeShape = new b2EdgeShape();\r\n/// @see b2Shape::ComputeAABB\r\nb2ChainShape.ComputeAABB_s_v1 = new b2Vec2();\r\nb2ChainShape.ComputeAABB_s_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaGFpblNoYXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvQ29sbGlzaW9uL1NoYXBlcy9iMkNoYWluU2hhcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNsRixPQUFPLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBSTFELE9BQU8sRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFNUMsMkRBQTJEO0FBQzNELG1GQUFtRjtBQUNuRiw2Q0FBNkM7QUFDN0MsdUVBQXVFO0FBQ3ZFLGlFQUFpRTtBQUNqRSxpRkFBaUY7QUFDakYsTUFBTSxtQkFBb0IsU0FBUSxPQUFPO0lBUXZDO1FBQ0UsS0FBSyxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQVA3QyxZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBQ3BCLGlCQUFZLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNwQyxpQkFBWSxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFDcEMsb0JBQWUsR0FBWSxLQUFLLENBQUM7UUFDakMsb0JBQWUsR0FBWSxLQUFLLENBQUM7SUFJeEMsQ0FBQztJQUVELDJEQUEyRDtJQUMzRCwwREFBMEQ7SUFDMUQsaUNBQWlDO0lBQzFCLFVBQVUsQ0FBQyxRQUFrQixFQUFFLFFBQWdCLFFBQVEsQ0FBQyxNQUFNO1FBQ25FLDREQUE0RDtRQUM1RCx3QkFBd0I7UUFDeEIsNENBQTRDO1FBQzVDLGdDQUFnQztRQUNoQyw0QkFBNEI7UUFDNUIsZ0ZBQWdGO1FBQ2hGLGdGQUFnRjtRQUNoRixJQUFJO1FBRUos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","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Vec2, b2Rot, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Shape, b2MassData } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2Fixture, b2FixtureDef } from \"./b2Fixture\";\r\n// #endif\r\n/// The body type.\r\n/// static: zero mass, zero velocity, may be manually moved\r\n/// kinematic: zero mass, non-zero velocity set by user, moved by solver\r\n/// dynamic: positive mass, non-zero velocity determined by forces, moved by solver\r\nexport var b2BodyType;\r\n(function (b2BodyType) {\r\n    b2BodyType[b2BodyType[\"b2_unknown\"] = -1] = \"b2_unknown\";\r\n    b2BodyType[b2BodyType[\"b2_staticBody\"] = 0] = \"b2_staticBody\";\r\n    b2BodyType[b2BodyType[\"b2_kinematicBody\"] = 1] = \"b2_kinematicBody\";\r\n    b2BodyType[b2BodyType[\"b2_dynamicBody\"] = 2] = \"b2_dynamicBody\";\r\n    // TODO_ERIN\r\n    // b2_bulletBody = 3\r\n})(b2BodyType || (b2BodyType = {}));\r\n/// A body definition holds all the data needed to construct a rigid body.\r\n/// You can safely re-use body definitions. Shapes are added to a body after construction.\r\nexport class b2BodyDef {\r\n    constructor() {\r\n        /// The body type: static, kinematic, or dynamic.\r\n        /// Note: if a dynamic body would have zero mass, the mass is set to one.\r\n        this.type = b2BodyType.b2_staticBody;\r\n        /// The world position of the body. Avoid creating bodies at the origin\r\n        /// since this can lead to many overlapping shapes.\r\n        this.position = new b2Vec2(0, 0);\r\n        /// The world angle of the body in radians.\r\n        this.angle = 0;\r\n        /// The linear velocity of the body's origin in world co-ordinates.\r\n        this.linearVelocity = new b2Vec2(0, 0);\r\n        /// The angular velocity of the body.\r\n        this.angularVelocity = 0;\r\n        /// Linear damping is use to reduce the linear velocity. The damping parameter\r\n        /// can be larger than 1.0f but the damping effect becomes sensitive to the\r\n        /// time step when the damping parameter is large.\r\n        this.linearDamping = 0;\r\n        /// Angular damping is use to reduce the angular velocity. The damping parameter\r\n        /// can be larger than 1.0f but the damping effect becomes sensitive to the\r\n        /// time step when the damping parameter is large.\r\n        this.angularDamping = 0;\r\n        /// Set this flag to false if this body should never fall asleep. Note that\r\n        /// this increases CPU usage.\r\n        this.allowSleep = true;\r\n        /// Is this body initially awake or sleeping?\r\n        this.awake = true;\r\n        /// Should this body be prevented from rotating? Useful for characters.\r\n        this.fixedRotation = false;\r\n        /// Is this a fast moving body that should be prevented from tunneling through\r\n        /// other moving bodies? Note that all bodies are prevented from tunneling through\r\n        /// kinematic and static bodies. This setting is only considered on dynamic bodies.\r\n        /// @warning You should use this flag sparingly since it increases processing time.\r\n        this.bullet = false;\r\n        /// Does this body start out active?\r\n        this.active = true;\r\n        /// Use this to store application specific body data.\r\n        this.userData = null;\r\n        /// Scale the gravity applied to this body.\r\n        this.gravityScale = 1;\r\n    }\r\n}\r\n/// A rigid body. These are created via b2World::CreateBody.\r\nexport class b2Body {\r\n    // #endif\r\n    constructor(bd, world) {\r\n        ///b2Assert(bd.position.IsValid());\r\n        ///b2Assert(bd.linearVelocity.IsValid());\r\n        ///b2Assert(b2IsValid(bd.angle));\r\n        ///b2Assert(b2IsValid(bd.angularVelocity));\r\n        ///b2Assert(b2IsValid(bd.gravityScale) && bd.gravityScale >= 0);\r\n        ///b2Assert(b2IsValid(bd.angularDamping) && bd.angularDamping >= 0);\r\n        ///b2Assert(b2IsValid(bd.linearDamping) && bd.linearDamping >= 0);\r\n        this.m_type = b2BodyType.b2_staticBody;\r\n        this.m_islandFlag = false;\r\n        this.m_awakeFlag = false;\r\n        this.m_autoSleepFlag = false;\r\n        this.m_bulletFlag = false;\r\n        this.m_fixedRotationFlag = false;\r\n        this.m_activeFlag = false;\r\n        this.m_toiFlag = false;\r\n        this.m_islandIndex = 0;\r\n        this.m_xf = new b2Transform(); // the body origin transform\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0 = new b2Transform();\r\n        // #endif\r\n        this.m_sweep = new b2Sweep(); // the swept motion for CCD\r\n        this.m_linearVelocity = new b2Vec2();\r\n        this.m_angularVelocity = 0;\r\n        this.m_force = new b2Vec2;\r\n        this.m_torque = 0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_fixtureList = null;\r\n        this.m_fixtureCount = 0;\r\n        this.m_jointList = null;\r\n        this.m_contactList = null;\r\n        this.m_mass = 1;\r\n        this.m_invMass = 1;\r\n        // Rotational inertia about the center of mass.\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_linearDamping = 0;\r\n        this.m_angularDamping = 0;\r\n        this.m_gravityScale = 1;\r\n        this.m_sleepTime = 0;\r\n        this.m_userData = null;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        if (bd.bullet) {\r\n            this.m_bulletFlag = true;\r\n        }\r\n        if (bd.fixedRotation) {\r\n            this.m_fixedRotationFlag = true;\r\n        }\r\n        if (bd.allowSleep) {\r\n            this.m_autoSleepFlag = true;\r\n        }\r\n        if (bd.awake) {\r\n            this.m_awakeFlag = true;\r\n        }\r\n        if (bd.active) {\r\n            this.m_activeFlag = true;\r\n        }\r\n        this.m_world = world;\r\n        this.m_xf.p.Copy(bd.position);\r\n        this.m_xf.q.SetAngle(bd.angle);\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0.Copy(this.m_xf);\r\n        // #endif\r\n        this.m_sweep.localCenter.SetZero();\r\n        this.m_sweep.c0.Copy(this.m_xf.p);\r\n        this.m_sweep.c.Copy(this.m_xf.p);\r\n        this.m_sweep.a0 = bd.angle;\r\n        this.m_sweep.a = bd.angle;\r\n        this.m_sweep.alpha0 = 0;\r\n        this.m_linearVelocity.Copy(bd.linearVelocity);\r\n        this.m_angularVelocity = bd.angularVelocity;\r\n        this.m_linearDamping = bd.linearDamping;\r\n        this.m_angularDamping = bd.angularDamping;\r\n        this.m_gravityScale = bd.gravityScale;\r\n        this.m_force.SetZero();\r\n        this.m_torque = 0;\r\n        this.m_sleepTime = 0;\r\n        this.m_type = bd.type;\r\n        if (bd.type === b2BodyType.b2_dynamicBody) {\r\n            this.m_mass = 1;\r\n            this.m_invMass = 1;\r\n        }\r\n        else {\r\n            this.m_mass = 0;\r\n            this.m_invMass = 0;\r\n        }\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_userData = bd.userData;\r\n        this.m_fixtureList = null;\r\n        this.m_fixtureCount = 0;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        // #endif\r\n    }\r\n    CreateFixture(a, b) {\r\n        if (a instanceof b2FixtureDef) {\r\n            return this.CreateFixtureDef(a);\r\n        }\r\n        else if ((a instanceof b2Shape) && (typeof (b) === \"number\")) {\r\n            return this.CreateFixtureShapeDensity(a, b);\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n    /// Creates a fixture and attach it to this body. Use this function if you need\r\n    /// to set some fixture parameters, like friction. Otherwise you can create the\r\n    /// fixture directly from a shape.\r\n    /// If the density is non-zero, this function automatically updates the mass of the body.\r\n    /// Contacts are not created until the next time step.\r\n    /// @param def the fixture definition.\r\n    /// @warning This function is locked during callbacks.\r\n    CreateFixtureDef(def) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (this.m_world.IsLocked()) {\r\n            return null;\r\n        }\r\n        const fixture = new b2Fixture(def, this);\r\n        fixture.Create(/*this,*/ def);\r\n        if (this.m_activeFlag) {\r\n            const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n            fixture.CreateProxies(broadPhase, this.m_xf);\r\n        }\r\n        fixture.m_next = this.m_fixtureList;\r\n        this.m_fixtureList = fixture;\r\n        ++this.m_fixtureCount;\r\n        // fixture.m_body = this;\r\n        // Adjust mass properties if needed.\r\n        if (fixture.m_density > 0) {\r\n            this.ResetMassData();\r\n        }\r\n        // Let the world know we have a new fixture. This will cause new contacts\r\n        // to be created at the beginning of the next time step.\r\n        this.m_world.m_newFixture = true;\r\n        return fixture;\r\n    }\r\n    CreateFixtureShapeDensity(shape, density = 0) {\r\n        const def = b2Body.CreateFixtureShapeDensity_s_def;\r\n        def.shape = shape;\r\n        def.density = density;\r\n        return this.CreateFixtureDef(def);\r\n    }\r\n    /// Destroy a fixture. This removes the fixture from the broad-phase and\r\n    /// destroys all contacts associated with this fixture. This will\r\n    /// automatically adjust the mass of the body if the body is dynamic and the\r\n    /// fixture has positive density.\r\n    /// All fixtures attached to a body are implicitly destroyed when the body is destroyed.\r\n    /// @param fixture the fixture to be removed.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyFixture(fixture) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (this.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        ///b2Assert(fixture.m_body === this);\r\n        // Remove the fixture from this body's singly linked list.\r\n        ///b2Assert(this.m_fixtureCount > 0);\r\n        let node = this.m_fixtureList;\r\n        let ppF = null;\r\n        // let found: boolean = false;\r\n        while (node !== null) {\r\n            if (node === fixture) {\r\n                if (ppF)\r\n                    ppF.m_next = fixture.m_next;\r\n                else\r\n                    this.m_fixtureList = fixture.m_next;\r\n                // found = true;\r\n                break;\r\n            }\r\n            ppF = node;\r\n            node = node.m_next;\r\n        }\r\n        // You tried to remove a shape that is not attached to this body.\r\n        ///b2Assert(found);\r\n        // Destroy any contacts associated with the fixture.\r\n        let edge = this.m_contactList;\r\n        while (edge) {\r\n            const c = edge.contact;\r\n            edge = edge.next;\r\n            const fixtureA = c.GetFixtureA();\r\n            const fixtureB = c.GetFixtureB();\r\n            if (fixture === fixtureA || fixture === fixtureB) {\r\n                // This destroys the contact and removes it from\r\n                // this body's contact list.\r\n                this.m_world.m_contactManager.Destroy(c);\r\n            }\r\n        }\r\n        if (this.m_activeFlag) {\r\n            const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n            fixture.DestroyProxies(broadPhase);\r\n        }\r\n        fixture.Destroy();\r\n        // fixture.m_body = null;\r\n        fixture.m_next = null;\r\n        --this.m_fixtureCount;\r\n        // Reset the mass data.\r\n        this.ResetMassData();\r\n    }\r\n    /// Set the position of the body's origin and rotation.\r\n    /// This breaks any contacts and wakes the other bodies.\r\n    /// Manipulating a body's transform may cause non-physical behavior.\r\n    /// @param position the world position of the body's local origin.\r\n    /// @param angle the world rotation in radians.\r\n    SetTransformVec(position, angle) {\r\n        this.SetTransformXY(position.x, position.y, angle);\r\n    }\r\n    SetTransformXY(x, y, angle) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (this.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        this.m_xf.q.SetAngle(angle);\r\n        this.m_xf.p.Set(x, y);\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0.Copy(this.m_xf);\r\n        // #endif\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.a = angle;\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        this.m_sweep.a0 = angle;\r\n        const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            f.Synchronize(broadPhase, this.m_xf, this.m_xf);\r\n        }\r\n        this.m_world.m_contactManager.FindNewContacts();\r\n    }\r\n    SetTransform(xf) {\r\n        this.SetTransformVec(xf.p, xf.GetAngle());\r\n    }\r\n    /// Get the body transform for the body's origin.\r\n    /// @return the world transform of the body's origin.\r\n    GetTransform() {\r\n        return this.m_xf;\r\n    }\r\n    /// Get the world body origin position.\r\n    /// @return the world position of the body's origin.\r\n    GetPosition() {\r\n        return this.m_xf.p;\r\n    }\r\n    SetPosition(position) {\r\n        this.SetTransformVec(position, this.GetAngle());\r\n    }\r\n    SetPositionXY(x, y) {\r\n        this.SetTransformXY(x, y, this.GetAngle());\r\n    }\r\n    /// Get the angle in radians.\r\n    /// @return the current world rotation angle in radians.\r\n    GetAngle() {\r\n        return this.m_sweep.a;\r\n    }\r\n    SetAngle(angle) {\r\n        this.SetTransformVec(this.GetPosition(), angle);\r\n    }\r\n    /// Get the world position of the center of mass.\r\n    GetWorldCenter() {\r\n        return this.m_sweep.c;\r\n    }\r\n    /// Get the local position of the center of mass.\r\n    GetLocalCenter() {\r\n        return this.m_sweep.localCenter;\r\n    }\r\n    /// Set the linear velocity of the center of mass.\r\n    /// @param v the new linear velocity of the center of mass.\r\n    SetLinearVelocity(v) {\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            return;\r\n        }\r\n        if (b2Vec2.DotVV(v, v) > 0) {\r\n            this.SetAwake(true);\r\n        }\r\n        this.m_linearVelocity.Copy(v);\r\n    }\r\n    /// Get the linear velocity of the center of mass.\r\n    /// @return the linear velocity of the center of mass.\r\n    GetLinearVelocity() {\r\n        return this.m_linearVelocity;\r\n    }\r\n    /// Set the angular velocity.\r\n    /// @param omega the new angular velocity in radians/second.\r\n    SetAngularVelocity(w) {\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            return;\r\n        }\r\n        if (w * w > 0) {\r\n            this.SetAwake(true);\r\n        }\r\n        this.m_angularVelocity = w;\r\n    }\r\n    /// Get the angular velocity.\r\n    /// @return the angular velocity in radians/second.\r\n    GetAngularVelocity() {\r\n        return this.m_angularVelocity;\r\n    }\r\n    GetDefinition(bd) {\r\n        bd.type = this.GetType();\r\n        bd.allowSleep = this.m_autoSleepFlag;\r\n        bd.angle = this.GetAngle();\r\n        bd.angularDamping = this.m_angularDamping;\r\n        bd.gravityScale = this.m_gravityScale;\r\n        bd.angularVelocity = this.m_angularVelocity;\r\n        bd.fixedRotation = this.m_fixedRotationFlag;\r\n        bd.bullet = this.m_bulletFlag;\r\n        bd.awake = this.m_awakeFlag;\r\n        bd.linearDamping = this.m_linearDamping;\r\n        bd.linearVelocity.Copy(this.GetLinearVelocity());\r\n        bd.position.Copy(this.GetPosition());\r\n        bd.userData = this.GetUserData();\r\n        return bd;\r\n    }\r\n    /// Apply a force at a world point. If the force is not\r\n    /// applied at the center of mass, it will generate a torque and\r\n    /// affect the angular velocity. This wakes up the body.\r\n    /// @param force the world force vector, usually in Newtons (N).\r\n    /// @param point the world position of the point of application.\r\n    /// @param wake also wake up the body\r\n    ApplyForce(force, point, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_force.x += force.x;\r\n            this.m_force.y += force.y;\r\n            this.m_torque += ((point.x - this.m_sweep.c.x) * force.y - (point.y - this.m_sweep.c.y) * force.x);\r\n        }\r\n    }\r\n    /// Apply a force to the center of mass. This wakes up the body.\r\n    /// @param force the world force vector, usually in Newtons (N).\r\n    /// @param wake also wake up the body\r\n    ApplyForceToCenter(force, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_force.x += force.x;\r\n            this.m_force.y += force.y;\r\n        }\r\n    }\r\n    /// Apply a torque. This affects the angular velocity\r\n    /// without affecting the linear velocity of the center of mass.\r\n    /// This wakes up the body.\r\n    /// @param torque about the z-axis (out of the screen), usually in N-m.\r\n    /// @param wake also wake up the body\r\n    ApplyTorque(torque, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_torque += torque;\r\n        }\r\n    }\r\n    /// Apply an impulse at a point. This immediately modifies the velocity.\r\n    /// It also modifies the angular velocity if the point of application\r\n    /// is not at the center of mass. This wakes up the body.\r\n    /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n    /// @param point the world position of the point of application.\r\n    /// @param wake also wake up the body\r\n    ApplyLinearImpulse(impulse, point, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n            this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n            this.m_angularVelocity += this.m_invI * ((point.x - this.m_sweep.c.x) * impulse.y - (point.y - this.m_sweep.c.y) * impulse.x);\r\n        }\r\n    }\r\n    /// Apply an impulse at the center of gravity. This immediately modifies the velocity.\r\n    /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n    /// @param wake also wake up the body\r\n    ApplyLinearImpulseToCenter(impulse, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n            this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n        }\r\n    }\r\n    /// Apply an angular impulse.\r\n    /// @param impulse the angular impulse in units of kg*m*m/s\r\n    /// @param wake also wake up the body\r\n    ApplyAngularImpulse(impulse, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_angularVelocity += this.m_invI * impulse;\r\n        }\r\n    }\r\n    /// Get the total mass of the body.\r\n    /// @return the mass, usually in kilograms (kg).\r\n    GetMass() {\r\n        return this.m_mass;\r\n    }\r\n    /// Get the rotational inertia of the body about the local origin.\r\n    /// @return the rotational inertia, usually in kg-m^2.\r\n    GetInertia() {\r\n        return this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\r\n    }\r\n    /// Get the mass data of the body.\r\n    /// @return a struct containing the mass, inertia and center of the body.\r\n    GetMassData(data) {\r\n        data.mass = this.m_mass;\r\n        data.I = this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\r\n        data.center.Copy(this.m_sweep.localCenter);\r\n        return data;\r\n    }\r\n    SetMassData(massData) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (this.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        this.m_invMass = 0;\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_mass = massData.mass;\r\n        if (this.m_mass <= 0) {\r\n            this.m_mass = 1;\r\n        }\r\n        this.m_invMass = 1 / this.m_mass;\r\n        if (massData.I > 0 && !this.m_fixedRotationFlag) {\r\n            this.m_I = massData.I - this.m_mass * b2Vec2.DotVV(massData.center, massData.center);\r\n            ///b2Assert(this.m_I > 0);\r\n            this.m_invI = 1 / this.m_I;\r\n        }\r\n        // Move center of mass.\r\n        const oldCenter = b2Body.SetMassData_s_oldCenter.Copy(this.m_sweep.c);\r\n        this.m_sweep.localCenter.Copy(massData.center);\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        // Update center of mass velocity.\r\n        b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\r\n    }\r\n    ResetMassData() {\r\n        // Compute mass data from shapes. Each shape has its own density.\r\n        this.m_mass = 0;\r\n        this.m_invMass = 0;\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_sweep.localCenter.SetZero();\r\n        // Static and kinematic bodies have zero mass.\r\n        if (this.m_type === b2BodyType.b2_staticBody || this.m_type === b2BodyType.b2_kinematicBody) {\r\n            this.m_sweep.c0.Copy(this.m_xf.p);\r\n            this.m_sweep.c.Copy(this.m_xf.p);\r\n            this.m_sweep.a0 = this.m_sweep.a;\r\n            return;\r\n        }\r\n        ///b2Assert(this.m_type === b2BodyType.b2_dynamicBody);\r\n        // Accumulate mass over all fixtures.\r\n        const localCenter = b2Body.ResetMassData_s_localCenter.SetZero();\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            if (f.m_density === 0) {\r\n                continue;\r\n            }\r\n            const massData = f.GetMassData(b2Body.ResetMassData_s_massData);\r\n            this.m_mass += massData.mass;\r\n            localCenter.x += massData.center.x * massData.mass;\r\n            localCenter.y += massData.center.y * massData.mass;\r\n            this.m_I += massData.I;\r\n        }\r\n        // Compute center of mass.\r\n        if (this.m_mass > 0) {\r\n            this.m_invMass = 1 / this.m_mass;\r\n            localCenter.x *= this.m_invMass;\r\n            localCenter.y *= this.m_invMass;\r\n        }\r\n        else {\r\n            // Force all dynamic bodies to have a positive mass.\r\n            this.m_mass = 1;\r\n            this.m_invMass = 1;\r\n        }\r\n        if (this.m_I > 0 && !this.m_fixedRotationFlag) {\r\n            // Center the inertia about the center of mass.\r\n            this.m_I -= this.m_mass * b2Vec2.DotVV(localCenter, localCenter);\r\n            ///b2Assert(this.m_I > 0);\r\n            this.m_invI = 1 / this.m_I;\r\n        }\r\n        else {\r\n            this.m_I = 0;\r\n            this.m_invI = 0;\r\n        }\r\n        // Move center of mass.\r\n        const oldCenter = b2Body.ResetMassData_s_oldCenter.Copy(this.m_sweep.c);\r\n        this.m_sweep.localCenter.Copy(localCenter);\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        // Update center of mass velocity.\r\n        b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\r\n    }\r\n    /// Get the world coordinates of a point given the local coordinates.\r\n    /// @param localPoint a point on the body measured relative the the body's origin.\r\n    /// @return the same point expressed in world coordinates.\r\n    GetWorldPoint(localPoint, out) {\r\n        return b2Transform.MulXV(this.m_xf, localPoint, out);\r\n    }\r\n    /// Get the world coordinates of a vector given the local coordinates.\r\n    /// @param localVector a vector fixed in the body.\r\n    /// @return the same vector expressed in world coordinates.\r\n    GetWorldVector(localVector, out) {\r\n        return b2Rot.MulRV(this.m_xf.q, localVector, out);\r\n    }\r\n    /// Gets a local point relative to the body's origin given a world point.\r\n    /// @param a point in world coordinates.\r\n    /// @return the corresponding local point relative to the body's origin.\r\n    GetLocalPoint(worldPoint, out) {\r\n        return b2Transform.MulTXV(this.m_xf, worldPoint, out);\r\n    }\r\n    /// Gets a local vector given a world vector.\r\n    /// @param a vector in world coordinates.\r\n    /// @return the corresponding local vector.\r\n    GetLocalVector(worldVector, out) {\r\n        return b2Rot.MulTRV(this.m_xf.q, worldVector, out);\r\n    }\r\n    /// Get the world linear velocity of a world point attached to this body.\r\n    /// @param a point in world coordinates.\r\n    /// @return the world velocity of a point.\r\n    GetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n        return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_sweep.c, b2Vec2.s_t0), out);\r\n    }\r\n    /// Get the world velocity of a local point.\r\n    /// @param a point in local coordinates.\r\n    /// @return the world velocity of a point.\r\n    GetLinearVelocityFromLocalPoint(localPoint, out) {\r\n        return this.GetLinearVelocityFromWorldPoint(this.GetWorldPoint(localPoint, out), out);\r\n    }\r\n    /// Get the linear damping of the body.\r\n    GetLinearDamping() {\r\n        return this.m_linearDamping;\r\n    }\r\n    /// Set the linear damping of the body.\r\n    SetLinearDamping(linearDamping) {\r\n        this.m_linearDamping = linearDamping;\r\n    }\r\n    /// Get the angular damping of the body.\r\n    GetAngularDamping() {\r\n        return this.m_angularDamping;\r\n    }\r\n    /// Set the angular damping of the body.\r\n    SetAngularDamping(angularDamping) {\r\n        this.m_angularDamping = angularDamping;\r\n    }\r\n    /// Get the gravity scale of the body.\r\n    GetGravityScale() {\r\n        return this.m_gravityScale;\r\n    }\r\n    /// Set the gravity scale of the body.\r\n    SetGravityScale(scale) {\r\n        this.m_gravityScale = scale;\r\n    }\r\n    /// Set the type of this body. This may alter the mass and velocity.\r\n    SetType(type) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (this.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        if (this.m_type === type) {\r\n            return;\r\n        }\r\n        this.m_type = type;\r\n        this.ResetMassData();\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            this.m_linearVelocity.SetZero();\r\n            this.m_angularVelocity = 0;\r\n            this.m_sweep.a0 = this.m_sweep.a;\r\n            this.m_sweep.c0.Copy(this.m_sweep.c);\r\n            this.SynchronizeFixtures();\r\n        }\r\n        this.SetAwake(true);\r\n        this.m_force.SetZero();\r\n        this.m_torque = 0;\r\n        // Delete the attached contacts.\r\n        let ce = this.m_contactList;\r\n        while (ce) {\r\n            const ce0 = ce;\r\n            ce = ce.next;\r\n            this.m_world.m_contactManager.Destroy(ce0.contact);\r\n        }\r\n        this.m_contactList = null;\r\n        // Touch the proxies so that new contacts will be created (when appropriate)\r\n        const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            const proxyCount = f.m_proxyCount;\r\n            for (let i = 0; i < proxyCount; ++i) {\r\n                broadPhase.TouchProxy(f.m_proxies[i].treeNode);\r\n            }\r\n        }\r\n    }\r\n    /// Get the type of this body.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n    /// Should this body be treated like a bullet for continuous collision detection?\r\n    SetBullet(flag) {\r\n        this.m_bulletFlag = flag;\r\n    }\r\n    /// Is this body treated like a bullet for continuous collision detection?\r\n    IsBullet() {\r\n        return this.m_bulletFlag;\r\n    }\r\n    /// You can disable sleeping on this body. If you disable sleeping, the\r\n    /// body will be woken.\r\n    SetSleepingAllowed(flag) {\r\n        this.m_autoSleepFlag = flag;\r\n        if (!flag) {\r\n            this.SetAwake(true);\r\n        }\r\n    }\r\n    /// Is this body allowed to sleep\r\n    IsSleepingAllowed() {\r\n        return this.m_autoSleepFlag;\r\n    }\r\n    /// Set the sleep state of the body. A sleeping body has very\r\n    /// low CPU cost.\r\n    /// @param flag set to true to wake the body, false to put it to sleep.\r\n    SetAwake(flag) {\r\n        if (flag) {\r\n            if (!this.m_awakeFlag) {\r\n                this.m_awakeFlag = true;\r\n                this.m_sleepTime = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.m_awakeFlag = false;\r\n            this.m_sleepTime = 0;\r\n            this.m_linearVelocity.SetZero();\r\n            this.m_angularVelocity = 0;\r\n            this.m_force.SetZero();\r\n            this.m_torque = 0;\r\n        }\r\n    }\r\n    /// Get the sleeping state of this body.\r\n    /// @return true if the body is sleeping.\r\n    IsAwake() {\r\n        return this.m_awakeFlag;\r\n    }\r\n    /// Set the active state of the body. An inactive body is not\r\n    /// simulated and cannot be collided with or woken up.\r\n    /// If you pass a flag of true, all fixtures will be added to the\r\n    /// broad-phase.\r\n    /// If you pass a flag of false, all fixtures will be removed from\r\n    /// the broad-phase and all contacts will be destroyed.\r\n    /// Fixtures and joints are otherwise unaffected. You may continue\r\n    /// to create/destroy fixtures and joints on inactive bodies.\r\n    /// Fixtures on an inactive body are implicitly inactive and will\r\n    /// not participate in collisions, ray-casts, or queries.\r\n    /// Joints connected to an inactive body are implicitly inactive.\r\n    /// An inactive body is still owned by a b2World object and remains\r\n    /// in the body list.\r\n    SetActive(flag) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (flag === this.IsActive()) {\r\n            return;\r\n        }\r\n        this.m_activeFlag = flag;\r\n        if (flag) {\r\n            // Create all proxies.\r\n            const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n            for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n                f.CreateProxies(broadPhase, this.m_xf);\r\n            }\r\n            // Contacts are created the next time step.\r\n        }\r\n        else {\r\n            // Destroy all proxies.\r\n            const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n            for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n                f.DestroyProxies(broadPhase);\r\n            }\r\n            // Destroy the attached contacts.\r\n            let ce = this.m_contactList;\r\n            while (ce) {\r\n                const ce0 = ce;\r\n                ce = ce.next;\r\n                this.m_world.m_contactManager.Destroy(ce0.contact);\r\n            }\r\n            this.m_contactList = null;\r\n        }\r\n    }\r\n    /// Get the active state of the body.\r\n    IsActive() {\r\n        return this.m_activeFlag;\r\n    }\r\n    /// Set this body to have fixed rotation. This causes the mass\r\n    /// to be reset.\r\n    SetFixedRotation(flag) {\r\n        if (this.m_fixedRotationFlag === flag) {\r\n            return;\r\n        }\r\n        this.m_fixedRotationFlag = flag;\r\n        this.m_angularVelocity = 0;\r\n        this.ResetMassData();\r\n    }\r\n    /// Does this body have fixed rotation?\r\n    IsFixedRotation() {\r\n        return this.m_fixedRotationFlag;\r\n    }\r\n    /// Get the list of all fixtures attached to this body.\r\n    GetFixtureList() {\r\n        return this.m_fixtureList;\r\n    }\r\n    /// Get the list of all joints attached to this body.\r\n    GetJointList() {\r\n        return this.m_jointList;\r\n    }\r\n    /// Get the list of all contacts attached to this body.\r\n    /// @warning this list changes during the time step and you may\r\n    /// miss some collisions if you don't use b2ContactListener.\r\n    GetContactList() {\r\n        return this.m_contactList;\r\n    }\r\n    /// Get the next body in the world's body list.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data pointer that was provided in the body definition.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data. Use this to store your application specific data.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Get the parent world of this body.\r\n    GetWorld() {\r\n        return this.m_world;\r\n    }\r\n    /// Dump this body to a log file\r\n    Dump(log) {\r\n        const bodyIndex = this.m_islandIndex;\r\n        log(\"{\\n\");\r\n        log(\"  const bd: b2BodyDef = new b2BodyDef();\\n\");\r\n        let type_str = \"\";\r\n        switch (this.m_type) {\r\n            case b2BodyType.b2_staticBody:\r\n                type_str = \"b2BodyType.b2_staticBody\";\r\n                break;\r\n            case b2BodyType.b2_kinematicBody:\r\n                type_str = \"b2BodyType.b2_kinematicBody\";\r\n                break;\r\n            case b2BodyType.b2_dynamicBody:\r\n                type_str = \"b2BodyType.b2_dynamicBody\";\r\n                break;\r\n            default:\r\n                ///b2Assert(false);\r\n                break;\r\n        }\r\n        log(\"  bd.type = %s;\\n\", type_str);\r\n        log(\"  bd.position.Set(%.15f, %.15f);\\n\", this.m_xf.p.x, this.m_xf.p.y);\r\n        log(\"  bd.angle = %.15f;\\n\", this.m_sweep.a);\r\n        log(\"  bd.linearVelocity.Set(%.15f, %.15f);\\n\", this.m_linearVelocity.x, this.m_linearVelocity.y);\r\n        log(\"  bd.angularVelocity = %.15f;\\n\", this.m_angularVelocity);\r\n        log(\"  bd.linearDamping = %.15f;\\n\", this.m_linearDamping);\r\n        log(\"  bd.angularDamping = %.15f;\\n\", this.m_angularDamping);\r\n        log(\"  bd.allowSleep = %s;\\n\", (this.m_autoSleepFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.awake = %s;\\n\", (this.m_awakeFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.fixedRotation = %s;\\n\", (this.m_fixedRotationFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.bullet = %s;\\n\", (this.m_bulletFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.active = %s;\\n\", (this.m_activeFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.gravityScale = %.15f;\\n\", this.m_gravityScale);\r\n        log(\"\\n\");\r\n        log(\"  bodies[%d] = this.m_world.CreateBody(bd);\\n\", this.m_islandIndex);\r\n        log(\"\\n\");\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            log(\"  {\\n\");\r\n            f.Dump(log, bodyIndex);\r\n            log(\"  }\\n\");\r\n        }\r\n        log(\"}\\n\");\r\n    }\r\n    SynchronizeFixtures() {\r\n        const xf1 = b2Body.SynchronizeFixtures_s_xf1;\r\n        xf1.q.SetAngle(this.m_sweep.a0);\r\n        b2Rot.MulRV(xf1.q, this.m_sweep.localCenter, xf1.p);\r\n        b2Vec2.SubVV(this.m_sweep.c0, xf1.p, xf1.p);\r\n        const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            f.Synchronize(broadPhase, xf1, this.m_xf);\r\n        }\r\n    }\r\n    SynchronizeTransform() {\r\n        this.m_xf.q.SetAngle(this.m_sweep.a);\r\n        b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\r\n        b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\r\n    }\r\n    // This is used to prevent connected bodies from colliding.\r\n    // It may lie, depending on the collideConnected flag.\r\n    ShouldCollide(other) {\r\n        // At least one body should be dynamic or kinematic.\r\n        if (this.m_type === b2BodyType.b2_staticBody && other.m_type === b2BodyType.b2_staticBody) {\r\n            return false;\r\n        }\r\n        return this.ShouldCollideConnected(other);\r\n    }\r\n    ShouldCollideConnected(other) {\r\n        // Does a joint prevent collision?\r\n        for (let jn = this.m_jointList; jn; jn = jn.next) {\r\n            if (jn.other === other) {\r\n                if (!jn.joint.m_collideConnected) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    Advance(alpha) {\r\n        // Advance to the new safe time. This doesn't sync the broad-phase.\r\n        this.m_sweep.Advance(alpha);\r\n        this.m_sweep.c.Copy(this.m_sweep.c0);\r\n        this.m_sweep.a = this.m_sweep.a0;\r\n        this.m_xf.q.SetAngle(this.m_sweep.a);\r\n        b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\r\n        b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\r\n    }\r\n    // #if B2_ENABLE_CONTROLLER\r\n    GetControllerList() {\r\n        return this.m_controllerList;\r\n    }\r\n    GetControllerCount() {\r\n        return this.m_controllerCount;\r\n    }\r\n}\r\n/// Creates a fixture from a shape and attach it to this body.\r\n/// This is a convenience function. Use b2FixtureDef if you need to set parameters\r\n/// like friction, restitution, user data, or filtering.\r\n/// If the density is non-zero, this function automatically updates the mass of the body.\r\n/// @param shape the shape to be cloned.\r\n/// @param density the shape density (set to zero for static bodies).\r\n/// @warning This function is locked during callbacks.\r\nb2Body.CreateFixtureShapeDensity_s_def = new b2FixtureDef();\r\n/// Set the mass properties to override the mass properties of the fixtures.\r\n/// Note that this changes the center of mass position.\r\n/// Note that creating or destroying fixtures can also alter the mass.\r\n/// This function has no effect if the body isn't dynamic.\r\n/// @param massData the mass properties.\r\nb2Body.SetMassData_s_oldCenter = new b2Vec2();\r\n/// This resets the mass properties to the sum of the mass properties of the fixtures.\r\n/// This normally does not need to be called unless you called SetMassData to override\r\n/// the mass and you later want to reset the mass.\r\nb2Body.ResetMassData_s_localCenter = new b2Vec2();\r\nb2Body.ResetMassData_s_oldCenter = new b2Vec2();\r\nb2Body.ResetMassData_s_massData = new b2MassData();\r\nb2Body.SynchronizeFixtures_s_xf1 = new b2Transform();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Vec2 } from \"../../Common/b2Math\";\r\nexport var b2JointType;\r\n(function (b2JointType) {\r\n    b2JointType[b2JointType[\"e_unknownJoint\"] = 0] = \"e_unknownJoint\";\r\n    b2JointType[b2JointType[\"e_revoluteJoint\"] = 1] = \"e_revoluteJoint\";\r\n    b2JointType[b2JointType[\"e_prismaticJoint\"] = 2] = \"e_prismaticJoint\";\r\n    b2JointType[b2JointType[\"e_distanceJoint\"] = 3] = \"e_distanceJoint\";\r\n    b2JointType[b2JointType[\"e_pulleyJoint\"] = 4] = \"e_pulleyJoint\";\r\n    b2JointType[b2JointType[\"e_mouseJoint\"] = 5] = \"e_mouseJoint\";\r\n    b2JointType[b2JointType[\"e_gearJoint\"] = 6] = \"e_gearJoint\";\r\n    b2JointType[b2JointType[\"e_wheelJoint\"] = 7] = \"e_wheelJoint\";\r\n    b2JointType[b2JointType[\"e_weldJoint\"] = 8] = \"e_weldJoint\";\r\n    b2JointType[b2JointType[\"e_frictionJoint\"] = 9] = \"e_frictionJoint\";\r\n    b2JointType[b2JointType[\"e_ropeJoint\"] = 10] = \"e_ropeJoint\";\r\n    b2JointType[b2JointType[\"e_motorJoint\"] = 11] = \"e_motorJoint\";\r\n    b2JointType[b2JointType[\"e_areaJoint\"] = 12] = \"e_areaJoint\";\r\n})(b2JointType || (b2JointType = {}));\r\nexport var b2LimitState;\r\n(function (b2LimitState) {\r\n    b2LimitState[b2LimitState[\"e_inactiveLimit\"] = 0] = \"e_inactiveLimit\";\r\n    b2LimitState[b2LimitState[\"e_atLowerLimit\"] = 1] = \"e_atLowerLimit\";\r\n    b2LimitState[b2LimitState[\"e_atUpperLimit\"] = 2] = \"e_atUpperLimit\";\r\n    b2LimitState[b2LimitState[\"e_equalLimits\"] = 3] = \"e_equalLimits\";\r\n})(b2LimitState || (b2LimitState = {}));\r\nexport class b2Jacobian {\r\n    constructor() {\r\n        this.linear = new b2Vec2();\r\n        this.angularA = 0;\r\n        this.angularB = 0;\r\n    }\r\n    SetZero() {\r\n        this.linear.SetZero();\r\n        this.angularA = 0;\r\n        this.angularB = 0;\r\n        return this;\r\n    }\r\n    Set(x, a1, a2) {\r\n        this.linear.Copy(x);\r\n        this.angularA = a1;\r\n        this.angularB = a2;\r\n        return this;\r\n    }\r\n}\r\n/// A joint edge is used to connect bodies and joints together\r\n/// in a joint graph where each body is a node and each joint\r\n/// is an edge. A joint edge belongs to a doubly linked list\r\n/// maintained in each attached body. Each joint has two joint\r\n/// nodes, one for each attached body.\r\nexport class b2JointEdge {\r\n    constructor(joint, other) {\r\n        this.prev = null; ///< the previous joint edge in the body's joint list\r\n        this.next = null; ///< the next joint edge in the body's joint list\r\n        this.joint = joint;\r\n        this.other = other;\r\n    }\r\n}\r\n/// Joint definitions are used to construct joints.\r\nexport class b2JointDef {\r\n    constructor(type) {\r\n        /// The joint type is set automatically for concrete joint types.\r\n        this.type = b2JointType.e_unknownJoint;\r\n        /// Use this to attach application specific data to your joints.\r\n        this.userData = null;\r\n        /// The first attached body.\r\n        this.bodyA = null;\r\n        /// The second attached body.\r\n        this.bodyB = null;\r\n        /// Set this flag to true if the attached bodies should collide.\r\n        this.collideConnected = false;\r\n        this.type = type;\r\n    }\r\n}\r\n/// The base joint class. Joints are used to constraint two bodies together in\r\n/// various fashions. Some joints also feature limits and motors.\r\nexport class b2Joint {\r\n    constructor(def) {\r\n        ///b2Assert(def.bodyA !== def.bodyB);\r\n        this.m_type = b2JointType.e_unknownJoint;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_index = 0;\r\n        this.m_islandFlag = false;\r\n        this.m_collideConnected = false;\r\n        this.m_userData = null;\r\n        this.m_type = def.type;\r\n        this.m_edgeA = new b2JointEdge(this, def.bodyB);\r\n        this.m_edgeB = new b2JointEdge(this, def.bodyA);\r\n        this.m_bodyA = def.bodyA;\r\n        this.m_bodyB = def.bodyB;\r\n        this.m_collideConnected = def.collideConnected;\r\n        this.m_userData = def.userData;\r\n    }\r\n    /// Get the type of the concrete joint.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n    /// Get the first body attached to this joint.\r\n    GetBodyA() {\r\n        return this.m_bodyA;\r\n    }\r\n    /// Get the second body attached to this joint.\r\n    GetBodyB() {\r\n        return this.m_bodyB;\r\n    }\r\n    /// Get the anchor point on bodyA in world coordinates.\r\n    GetAnchorA(out) {\r\n        return out.SetZero();\r\n    }\r\n    /// Get the anchor point on bodyB in world coordinates.\r\n    GetAnchorB(out) {\r\n        return out.SetZero();\r\n    }\r\n    /// Get the reaction force on bodyB at the joint anchor in Newtons.\r\n    GetReactionForce(inv_dt, out) {\r\n        return out.SetZero();\r\n    }\r\n    /// Get the reaction torque on bodyB in N*m.\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    /// Get the next joint the world joint list.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data pointer.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data pointer.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Short-cut function to determine if either body is inactive.\r\n    IsActive() {\r\n        return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();\r\n    }\r\n    /// Get collide connected.\r\n    /// Note: modifying the collide connect flag won't work correctly because\r\n    /// the flag is only checked when fixture AABBs begin to overlap.\r\n    GetCollideConnected() {\r\n        return this.m_collideConnected;\r\n    }\r\n    /// Dump this joint to the log file.\r\n    Dump(log) {\r\n        log(\"// Dump is not supported for this joint type.\\n\");\r\n    }\r\n    /// Shift the origin for any points stored in world coordinates.\r\n    ShiftOrigin(newOrigin) {\r\n    }\r\n    InitVelocityConstraints(data) {\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n    }\r\n    // This returns true if the position errors are within tolerance.\r\n    SolvePositionConstraints(data) {\r\n        return false;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJKb2ludC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL0pvaW50cy9iMkpvaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBSTdDLE1BQU0sQ0FBTixJQUFZLFdBY1g7QUFkRCxXQUFZLFdBQVc7SUFDckIsaUVBQWtCLENBQUE7SUFDbEIsbUVBQW1CLENBQUE7SUFDbkIscUVBQW9CLENBQUE7SUFDcEIsbUVBQW1CLENBQUE7SUFDbkIsK0RBQWlCLENBQUE7SUFDakIsNkRBQWdCLENBQUE7SUFDaEIsMkRBQWUsQ0FBQTtJQUNmLDZEQUFnQixDQUFBO0lBQ2hCLDJEQUFlLENBQUE7SUFDZixtRUFBbUIsQ0FBQTtJQUNuQiw0REFBZ0IsQ0FBQTtJQUNoQiw4REFBaUIsQ0FBQTtJQUNqQiw0REFBZ0IsQ0FBQTtBQUNsQixDQUFDLEVBZFcsV0FBVyxLQUFYLFdBQVcsUUFjdEI7QUFFRCxNQUFNLENBQU4sSUFBWSxZQUtYO0FBTEQsV0FBWSxZQUFZO0lBQ3RCLHFFQUFtQixDQUFBO0lBQ25CLG1FQUFrQixDQUFBO0lBQ2xCLG1FQUFrQixDQUFBO0lBQ2xCLGlFQUFpQixDQUFBO0FBQ25CLENBQUMsRUFMVyxZQUFZLEtBQVosWUFBWSxRQUt2QjtBQUVELE1BQU07SUFBTjtRQUNTLFdBQU0sR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQzlCLGFBQVEsR0FBVyxDQUFDLENBQUM7UUFDckIsYUFBUSxHQUFXLENBQUMsQ0FBQztJQWU5QixDQUFDO0lBYlEsT0FBTztRQUNaLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7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","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_linearSlop, b2_maxLinearCorrection } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Distance joint definition. This requires defining an\r\n/// anchor point on both bodies and the non-zero length of the\r\n/// distance joint. The definition uses local anchor points\r\n/// so that the initial configuration can violate the constraint\r\n/// slightly. This helps when saving and loading a game.\r\n/// @warning Do not use a zero or short length.\r\nexport class b2DistanceJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_distanceJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.length = 1;\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    Initialize(b1, b2, anchor1, anchor2) {\r\n        this.bodyA = b1;\r\n        this.bodyB = b2;\r\n        this.bodyA.GetLocalPoint(anchor1, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor2, this.localAnchorB);\r\n        this.length = b2Vec2.DistanceVV(anchor1, anchor2);\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n}\r\nexport class b2DistanceJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_bias = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_gamma = 0;\r\n        this.m_impulse = 0;\r\n        this.m_length = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_u = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_frequencyHz = def.frequencyHz;\r\n        this.m_dampingRatio = def.dampingRatio;\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_length = def.length;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return out.Set(inv_dt * this.m_impulse * this.m_u.x, inv_dt * this.m_impulse * this.m_u.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetLength(length) {\r\n        this.m_length = length;\r\n    }\r\n    Length() {\r\n        return this.m_length;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2DistanceJointDef = new b2DistanceJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.length = %.15f;\\n\", this.m_length);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // m_u = cB + m_rB - cA - m_rA;\r\n        this.m_u.x = cB.x + this.m_rB.x - cA.x - this.m_rA.x;\r\n        this.m_u.y = cB.y + this.m_rB.y - cA.y - this.m_rA.y;\r\n        // Handle singularity.\r\n        const length = this.m_u.Length();\r\n        if (length > b2_linearSlop) {\r\n            this.m_u.SelfMul(1 / length);\r\n        }\r\n        else {\r\n            this.m_u.SetZero();\r\n        }\r\n        // float32 crAu = b2Cross(m_rA, m_u);\r\n        const crAu = b2Vec2.CrossVV(this.m_rA, this.m_u);\r\n        // float32 crBu = b2Cross(m_rB, m_u);\r\n        const crBu = b2Vec2.CrossVV(this.m_rB, this.m_u);\r\n        // float32 invMass = m_invMassA + m_invIA * crAu * crAu + m_invMassB + m_invIB * crBu * crBu;\r\n        let invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB + this.m_invIB * crBu * crBu;\r\n        // Compute the effective mass matrix.\r\n        this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        if (this.m_frequencyHz > 0) {\r\n            const C = length - this.m_length;\r\n            // Frequency\r\n            const omega = 2 * b2_pi * this.m_frequencyHz;\r\n            // Damping coefficient\r\n            const d = 2 * this.m_mass * this.m_dampingRatio * omega;\r\n            // Spring stiffness\r\n            const k = this.m_mass * omega * omega;\r\n            // magic formulas\r\n            const h = data.step.dt;\r\n            this.m_gamma = h * (d + h * k);\r\n            this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\r\n            this.m_bias = C * h * k * this.m_gamma;\r\n            invMass += this.m_gamma;\r\n            this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        }\r\n        else {\r\n            this.m_gamma = 0;\r\n            this.m_bias = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale the impulse to support a variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_u;\r\n            const P = b2Vec2.MulSV(this.m_impulse, this.m_u, b2DistanceJoint.InitVelocityConstraints_s_P);\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            // wA -= m_invIA * b2Cross(m_rA, P);\r\n            wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            // wB += m_invIB * b2Cross(m_rB, P);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2DistanceJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2DistanceJoint.SolveVelocityConstraints_s_vpB);\r\n        // float32 Cdot = b2Dot(m_u, vpB - vpA);\r\n        const Cdot = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\r\n        const impulse = (-this.m_mass * (Cdot + this.m_bias + this.m_gamma * this.m_impulse));\r\n        this.m_impulse += impulse;\r\n        // b2Vec2 P = impulse * m_u;\r\n        const P = b2Vec2.MulSV(impulse, this.m_u, b2DistanceJoint.SolveVelocityConstraints_s_P);\r\n        // vA -= m_invMassA * P;\r\n        vA.SelfMulSub(this.m_invMassA, P);\r\n        // wA -= m_invIA * b2Cross(m_rA, P);\r\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n        // vB += m_invMassB * P;\r\n        vB.SelfMulAdd(this.m_invMassB, P);\r\n        // wB += m_invIB * b2Cross(m_rB, P);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        if (this.m_frequencyHz > 0) {\r\n            // There is no position correction for soft distance constraints.\r\n            return true;\r\n        }\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        const rA = b2Rot.MulRV(this.m_qA, this.m_lalcA, this.m_rA); // use m_rA\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        const rB = b2Rot.MulRV(this.m_qB, this.m_lalcB, this.m_rB); // use m_rB\r\n        // b2Vec2 u = cB + rB - cA - rA;\r\n        const u = this.m_u; // use m_u\r\n        u.x = cB.x + rB.x - cA.x - rA.x;\r\n        u.y = cB.y + rB.y - cA.y - rA.y;\r\n        // float32 length = u.Normalize();\r\n        const length = this.m_u.Normalize();\r\n        // float32 C = length - m_length;\r\n        let C = length - this.m_length;\r\n        C = b2Clamp(C, (-b2_maxLinearCorrection), b2_maxLinearCorrection);\r\n        const impulse = (-this.m_mass * C);\r\n        // b2Vec2 P = impulse * u;\r\n        const P = b2Vec2.MulSV(impulse, u, b2DistanceJoint.SolvePositionConstraints_s_P);\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        // aA -= m_invIA * b2Cross(rA, P);\r\n        aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        // aB += m_invIB * b2Cross(rB, P);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return b2Abs(C) < b2_linearSlop;\r\n    }\r\n}\r\nb2DistanceJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2DistanceJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","import { b2_epsilon, b2_linearSlop, b2_maxLinearCorrection, b2MakeNullArray, b2MakeNumberArray } from \"../../Common/b2Settings\";\r\nimport { b2Sq, b2Sqrt, b2Vec2 } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\nimport { b2DistanceJointDef } from \"./b2DistanceJoint\";\r\nexport class b2AreaJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_areaJoint);\r\n        this.world = null;\r\n        this.bodies = [];\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    AddBody(body) {\r\n        this.bodies.push(body);\r\n        if (this.bodies.length === 1) {\r\n            this.bodyA = body;\r\n        }\r\n        else if (this.bodies.length === 2) {\r\n            this.bodyB = body;\r\n        }\r\n    }\r\n}\r\nexport class b2AreaJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_bodies = null;\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        // Solver shared\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_targetLengths = null;\r\n        this.m_targetArea = 0;\r\n        this.m_normals = null;\r\n        this.m_joints = null;\r\n        this.m_deltas = null;\r\n        this.m_delta = null;\r\n        ///b2Assert(def.bodies.length >= 3, \"You cannot create an area joint with less than three bodies.\");\r\n        this.m_bodies = def.bodies;\r\n        this.m_frequencyHz = def.frequencyHz;\r\n        this.m_dampingRatio = def.dampingRatio;\r\n        this.m_targetLengths = b2MakeNumberArray(def.bodies.length);\r\n        this.m_normals = b2Vec2.MakeArray(def.bodies.length);\r\n        this.m_joints = b2MakeNullArray(def.bodies.length);\r\n        this.m_deltas = b2Vec2.MakeArray(def.bodies.length);\r\n        this.m_delta = new b2Vec2();\r\n        const djd = new b2DistanceJointDef();\r\n        djd.frequencyHz = def.frequencyHz;\r\n        djd.dampingRatio = def.dampingRatio;\r\n        this.m_targetArea = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const body_c = body.GetWorldCenter();\r\n            const next_c = next.GetWorldCenter();\r\n            this.m_targetLengths[i] = b2Vec2.DistanceVV(body_c, next_c);\r\n            this.m_targetArea += b2Vec2.CrossVV(body_c, next_c);\r\n            djd.Initialize(body, next, body_c, next_c);\r\n            this.m_joints[i] = def.world.CreateJoint(djd);\r\n        }\r\n        this.m_targetArea *= 0.5;\r\n    }\r\n    GetAnchorA(out) {\r\n        return out.SetZero();\r\n    }\r\n    GetAnchorB(out) {\r\n        return out.SetZero();\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return out.SetZero();\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n        for (let i = 0; i < this.m_joints.length; ++i) {\r\n            this.m_joints[i].SetFrequency(hz);\r\n        }\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n        for (let i = 0; i < this.m_joints.length; ++i) {\r\n            this.m_joints[i].SetDampingRatio(ratio);\r\n        }\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    Dump(log) {\r\n        log(\"Area joint dumping is not supported.\\n\");\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const prev = this.m_bodies[(i + this.m_bodies.length - 1) % this.m_bodies.length];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const prev_c = data.positions[prev.m_islandIndex].c;\r\n            const next_c = data.positions[next.m_islandIndex].c;\r\n            const delta = this.m_deltas[i];\r\n            b2Vec2.SubVV(next_c, prev_c, delta);\r\n        }\r\n        if (data.step.warmStarting) {\r\n            this.m_impulse *= data.step.dtRatio;\r\n            for (let i = 0; i < this.m_bodies.length; ++i) {\r\n                const body = this.m_bodies[i];\r\n                const body_v = data.velocities[body.m_islandIndex].v;\r\n                const delta = this.m_deltas[i];\r\n                body_v.x += body.m_invMass * delta.y * 0.5 * this.m_impulse;\r\n                body_v.y += body.m_invMass * -delta.x * 0.5 * this.m_impulse;\r\n            }\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        let dotMassSum = 0;\r\n        let crossMassSum = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_v = data.velocities[body.m_islandIndex].v;\r\n            const delta = this.m_deltas[i];\r\n            dotMassSum += delta.LengthSquared() / body.GetMass();\r\n            crossMassSum += b2Vec2.CrossVV(body_v, delta);\r\n        }\r\n        const lambda = -2 * crossMassSum / dotMassSum;\r\n        // lambda = b2Clamp(lambda, -b2_maxLinearCorrection, b2_maxLinearCorrection);\r\n        this.m_impulse += lambda;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_v = data.velocities[body.m_islandIndex].v;\r\n            const delta = this.m_deltas[i];\r\n            body_v.x += body.m_invMass * delta.y * 0.5 * lambda;\r\n            body_v.y += body.m_invMass * -delta.x * 0.5 * lambda;\r\n        }\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        let perimeter = 0;\r\n        let area = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const body_c = data.positions[body.m_islandIndex].c;\r\n            const next_c = data.positions[next.m_islandIndex].c;\r\n            const delta = b2Vec2.SubVV(next_c, body_c, this.m_delta);\r\n            let dist = delta.Length();\r\n            if (dist < b2_epsilon) {\r\n                dist = 1;\r\n            }\r\n            this.m_normals[i].x = delta.y / dist;\r\n            this.m_normals[i].y = -delta.x / dist;\r\n            perimeter += dist;\r\n            area += b2Vec2.CrossVV(body_c, next_c);\r\n        }\r\n        area *= 0.5;\r\n        const deltaArea = this.m_targetArea - area;\r\n        const toExtrude = 0.5 * deltaArea / perimeter;\r\n        let done = true;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_c = data.positions[body.m_islandIndex].c;\r\n            const next_i = (i + 1) % this.m_bodies.length;\r\n            const delta = b2Vec2.AddVV(this.m_normals[i], this.m_normals[next_i], this.m_delta);\r\n            delta.SelfMul(toExtrude);\r\n            const norm_sq = delta.LengthSquared();\r\n            if (norm_sq > b2Sq(b2_maxLinearCorrection)) {\r\n                delta.SelfMul(b2_maxLinearCorrection / b2Sqrt(norm_sq));\r\n            }\r\n            if (norm_sq > b2Sq(b2_linearSlop)) {\r\n                done = false;\r\n            }\r\n            body_c.x += delta.x;\r\n            body_c.y += delta.y;\r\n        }\r\n        return done;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJBcmVhSm9pbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9Cb3gyRC9Cb3gyRC9EeW5hbWljcy9Kb2ludHMvYjJBcmVhSm9pbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsc0JBQXNCLEVBQUUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDaEksT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDM0QsT0FBTyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzdELE9BQU8sRUFBbUIsa0JBQWtCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUt4RSxNQUFNLHFCQUFzQixTQUFRLFVBQVU7SUFTNUM7UUFDRSxLQUFLLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBVDFCLFVBQUssR0FBWSxJQUFJLENBQUM7UUFFdEIsV0FBTSxHQUFhLEVBQUUsQ0FBQztRQUV0QixnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUV4QixpQkFBWSxHQUFXLENBQUMsQ0FBQztJQUloQyxDQUFDO0lBRU0sT0FBTyxDQUFDLElBQVk7UUFDekIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFdkIsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDNUIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDbkI7YUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUNuQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztTQUNuQjtJQUNILENBQUM7Q0FDRjtBQUVELE1BQU0sa0JBQW1CLFNBQVEsT0FBTztJQWdCdEMsWUFBWSxHQUFtQjtRQUM3QixLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFoQk4sYUFBUSxHQUFhLElBQUksQ0FBQztRQUMxQixrQkFBYSxHQUFXLENBQUMsQ0FBQztRQUMxQixtQkFBYyxHQUFXLENBQUMsQ0FBQztRQUVsQyxnQkFBZ0I7UUFDVCxjQUFTLEdBQVcsQ0FBQyxDQUFDO1FBRTdCLGNBQWM7UUFDUCxvQkFBZSxHQUFhLElBQUksQ0FBQztRQUNqQyxpQkFBWSxHQUFXLENBQUMsQ0FBQztRQUN6QixjQUFTLEdBQWEsSUFBSSxDQUFDO1FBQzNCLGFBQVEsR0FBc0IsSUFBSSxDQUFDO1FBQ25DLGFBQVEsR0FBYSxJQUFJLENBQUM7UUFDMUIsWUFBTyxHQUFXLElBQUksQ0FBQztRQUs1QixvR0FBb0c7UUFFcEcsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQzNCLElBQUksQ0FBQyxhQUFhLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQztRQUNyQyxJQUFJLENBQUMsY0FBYyxHQUFHLEdBQUcsQ0FBQyxZQUFZLENBQUM7UUFFdkMsSUFBSSxDQUFDLGVBQWUsR0FBRyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBRTVCLE1BQU0sR0FBRyxHQUF1QixJQUFJLGtCQUFrQixFQUFFLENBQUM7UUFDekQsR0FBRyxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUMsV0FBVyxDQUFDO1FBQ2xDLEdBQUcsQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDLFlBQVksQ0FBQztRQUVwQyxJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQztRQUV0QixLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUU7WUFDckQsTUFBTSxJQUFJLEdBQVcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0QyxNQUFNLElBQUksR0FBVyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7WUFFbkUsTUFBTSxNQUFNLEdBQVcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQzdDLE1BQU0sTUFBTSxHQUFXLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUU3QyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBRTVELElBQUksQ0FBQyxZQUFZLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFFcEQsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztZQUMzQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFxQixHQUFHLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNqRTtRQUVELElBQUksQ0FBQyxZQUFZLElBQUksR0FBRyxDQUFDO0lBQzNCLENBQUM7SUFFTSxVQUFVLENBQUMsR0FBVztRQUMzQixPQUFPLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRU0sVUFBVSxDQUFDLEdBQVc7UUFDM0IsT0FBTyxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVNLGdCQUFnQixDQUFDLE1BQWMsRUFBRSxHQUFXO1FBQ2pELE9BQU8sR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxpQkFBaUIsQ0FBQyxNQUFjO1FBQ3JDLE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVNLFlBQVksQ0FBQyxFQUFVO1FBQzVCLElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDO1FBRXhCLEtBQUssSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsRUFBRTtZQUNyRCxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUNuQztJQUNILENBQUM7SUFFTSxZQUFZO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDO0lBRU0sZUFBZSxDQUFDLEtBQWE7UUFDbEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7UUFFNUIsS0FBSyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxFQUFFO1lBQ3JELElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3pDO0lBQ0gsQ0FBQztJQUVNLGVBQWU7UUFDcEIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQzdCLENBQUM7SUFFTSxJQUFJLENBQUMsR0FBNkM7UUFDdkQsR0FBRyxDQUFDLHdDQUF3QyxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVNLHVCQUF1QixDQUFDLElBQWtCO1FBQy9DLEtBQUssSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsRUFBRTtZQUNyRCxNQUFNLElBQUksR0FBVyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDMUYsTUFBTSxJQUFJLEdBQVcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ25FLE1BQU0sTUFBTSxHQUFXLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM1RCxNQUFNLE1BQU0sR0FBVyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUQsTUFBTSxLQUFLLEdBQVcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUV2QyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDckM7UUFFRCxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQzFCLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7WUFFcEMsS0FBSyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxFQUFFO2dCQUNyRCxNQUFNLElBQUksR0FBVyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0QyxNQUFNLE1BQU0sR0FBVyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzdELE1BQU0sS0FBSyxHQUFXLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBRXZDLE1BQU0sQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsR0FBSSxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO2dCQUM3RCxNQUFNLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO2FBQzlEO1NBQ0Y7YUFBTTtZQUNMLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQztJQUVNLHdCQUF3QixDQUFDLElBQWtCO1FBQ2hELElBQUksVUFBVSxHQUFXLENBQUMsQ0FBQztRQUMzQixJQUFJLFlBQVksR0FBVyxDQUFDLENBQUM7UUFFN0IsS0FBSyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxFQUFFO1lBQ3JELE1BQU0sSUFBSSxHQUFXLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEMsTUFBTSxNQUFNLEdBQVcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdELE1BQU0sS0FBSyxHQUFXLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFFdkMsVUFBVSxJQUFJLEtBQUssQ0FBQyxhQUFhLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDckQsWUFBWSxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQy9DO1FBRUQsTUFBTSxNQUFNLEdBQVcsQ0FBQyxDQUFDLEdBQUcsWUFBWSxHQUFHLFVBQVUsQ0FBQztRQUN0RCw2RUFBNkU7UUFFN0UsSUFBSSxDQUFDLFNBQVMsSUFBSSxNQUFNLENBQUM7UUFFekIsS0FBSyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxFQUFFO1lBQ3JELE1BQU0sSUFBSSxHQUFXLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEMsTUFBTSxNQUFNLEdBQVcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdELE1BQU0sS0FBSyxHQUFXLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFFdkMsTUFBTSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxHQUFJLEtBQUssQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLE1BQU0sQ0FBQztZQUNyRCxNQUFNLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxNQUFNLENBQUM7U0FDdEQ7SUFDSCxDQUFDO0lBRU0sd0JBQXdCLENBQUMsSUFBa0I7UUFDaEQsSUFBSSxTQUFTLEdBQVcsQ0FBQyxDQUFDO1FBQzFCLElBQUksSUFBSSxHQUFXLENBQUMsQ0FBQztRQUVyQixLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUU7WUFDckQsTUFBTSxJQUFJLEdBQVcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0QyxNQUFNLElBQUksR0FBVyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDbkUsTUFBTSxNQUFNLEdBQVcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzVELE1BQU0sTUFBTSxHQUFXLElBQUksQ0FB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","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Clamp, b2Vec2, b2Mat22, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Friction joint definition.\r\nexport class b2FrictionJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_frictionJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.maxForce = 0;\r\n        this.maxTorque = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n    }\r\n}\r\nexport class b2FrictionJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        // Solver shared\r\n        this.m_linearImpulse = new b2Vec2();\r\n        this.m_angularImpulse = 0;\r\n        this.m_maxForce = 0;\r\n        this.m_maxTorque = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_linearMass = new b2Mat22();\r\n        this.m_angularMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_linearImpulse.SetZero();\r\n        this.m_maxForce = def.maxForce;\r\n        this.m_maxTorque = def.maxTorque;\r\n        this.m_linearMass.SetZero();\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        // const cA: b2Vec2 = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        // const cB: b2Vec2 = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective mass matrix.\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const K = this.m_K; // new b2Mat22();\r\n        K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n        K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n        K.GetInverse(this.m_linearMass);\r\n        this.m_angularMass = iA + iB;\r\n        if (this.m_angularMass > 0) {\r\n            this.m_angularMass = 1 / this.m_angularMass;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            // m_linearImpulse *= data.step.dtRatio;\r\n            this.m_linearImpulse.SelfMul(data.step.dtRatio);\r\n            this.m_angularImpulse *= data.step.dtRatio;\r\n            // const P: b2Vec2(m_linearImpulse.x, m_linearImpulse.y);\r\n            const P = this.m_linearImpulse;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            // wA -= iA * (b2Cross(m_rA, P) + m_angularImpulse);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_angularImpulse);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            // wB += iB * (b2Cross(m_rB, P) + m_angularImpulse);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_angularImpulse);\r\n        }\r\n        else {\r\n            this.m_linearImpulse.SetZero();\r\n            this.m_angularImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const h = data.step.dt;\r\n        // Solve angular friction\r\n        {\r\n            const Cdot = wB - wA;\r\n            let impulse = (-this.m_angularMass * Cdot);\r\n            const oldImpulse = this.m_angularImpulse;\r\n            const maxImpulse = h * this.m_maxTorque;\r\n            this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, (-maxImpulse), maxImpulse);\r\n            impulse = this.m_angularImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve linear friction\r\n        {\r\n            // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot_v2 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = -b2Mul(m_linearMass, Cdot);\r\n            const impulseV = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2FrictionJoint.SolveVelocityConstraints_s_impulseV).SelfNeg();\r\n            // b2Vec2 oldImpulse = m_linearImpulse;\r\n            const oldImpulseV = b2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV.Copy(this.m_linearImpulse);\r\n            // m_linearImpulse += impulse;\r\n            this.m_linearImpulse.SelfAdd(impulseV);\r\n            const maxImpulse = h * this.m_maxForce;\r\n            if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n                this.m_linearImpulse.Normalize();\r\n                this.m_linearImpulse.SelfMul(maxImpulse);\r\n            }\r\n            // impulse = m_linearImpulse - oldImpulse;\r\n            b2Vec2.SubVV(this.m_linearImpulse, oldImpulseV, impulseV);\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulseV);\r\n            // wA -= iA * b2Cross(m_rA, impulse);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, impulseV);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulseV);\r\n            // wB += iB * b2Cross(m_rB, impulse);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, impulseV);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return out.Set(inv_dt * this.m_linearImpulse.x, inv_dt * this.m_linearImpulse.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_angularImpulse;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetMaxForce(force) {\r\n        this.m_maxForce = force;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetMaxTorque(torque) {\r\n        this.m_maxTorque = torque;\r\n    }\r\n    GetMaxTorque() {\r\n        return this.m_maxTorque;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2FrictionJointDef = new b2FrictionJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\r\n        log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2FrictionJoint.SolveVelocityConstraints_s_impulseV = new b2Vec2();\r\nb2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Gear joint definition. This definition requires two existing\r\n/// revolute or prismatic joints (any combination will work).\r\nexport class b2GearJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_gearJoint);\r\n        this.joint1 = null;\r\n        this.joint2 = null;\r\n        this.ratio = 1;\r\n    }\r\n}\r\nexport class b2GearJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_joint1 = null;\r\n        this.m_joint2 = null;\r\n        this.m_typeA = b2JointType.e_unknownJoint;\r\n        this.m_typeB = b2JointType.e_unknownJoint;\r\n        // Body A is connected to body C\r\n        // Body B is connected to body D\r\n        this.m_bodyC = null;\r\n        this.m_bodyD = null;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localAnchorC = new b2Vec2();\r\n        this.m_localAnchorD = new b2Vec2();\r\n        this.m_localAxisC = new b2Vec2();\r\n        this.m_localAxisD = new b2Vec2();\r\n        this.m_referenceAngleA = 0;\r\n        this.m_referenceAngleB = 0;\r\n        this.m_constant = 0;\r\n        this.m_ratio = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_indexC = 0;\r\n        this.m_indexD = 0;\r\n        this.m_lcA = new b2Vec2();\r\n        this.m_lcB = new b2Vec2();\r\n        this.m_lcC = new b2Vec2();\r\n        this.m_lcD = new b2Vec2();\r\n        this.m_mA = 0;\r\n        this.m_mB = 0;\r\n        this.m_mC = 0;\r\n        this.m_mD = 0;\r\n        this.m_iA = 0;\r\n        this.m_iB = 0;\r\n        this.m_iC = 0;\r\n        this.m_iD = 0;\r\n        this.m_JvAC = new b2Vec2();\r\n        this.m_JvBD = new b2Vec2();\r\n        this.m_JwA = 0;\r\n        this.m_JwB = 0;\r\n        this.m_JwC = 0;\r\n        this.m_JwD = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_qC = new b2Rot();\r\n        this.m_qD = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_lalcC = new b2Vec2();\r\n        this.m_lalcD = new b2Vec2();\r\n        this.m_joint1 = def.joint1;\r\n        this.m_joint2 = def.joint2;\r\n        this.m_typeA = this.m_joint1.GetType();\r\n        this.m_typeB = this.m_joint2.GetType();\r\n        ///b2Assert(this.m_typeA === b2JointType.e_revoluteJoint || this.m_typeA === b2JointType.e_prismaticJoint);\r\n        ///b2Assert(this.m_typeB === b2JointType.e_revoluteJoint || this.m_typeB === b2JointType.e_prismaticJoint);\r\n        let coordinateA, coordinateB;\r\n        // TODO_ERIN there might be some problem with the joint edges in b2Joint.\r\n        this.m_bodyC = this.m_joint1.GetBodyA();\r\n        this.m_bodyA = this.m_joint1.GetBodyB();\r\n        // Get geometry of joint1\r\n        const xfA = this.m_bodyA.m_xf;\r\n        const aA = this.m_bodyA.m_sweep.a;\r\n        const xfC = this.m_bodyC.m_xf;\r\n        const aC = this.m_bodyC.m_sweep.a;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            const revolute = def.joint1;\r\n            this.m_localAnchorC.Copy(revolute.m_localAnchorA);\r\n            this.m_localAnchorA.Copy(revolute.m_localAnchorB);\r\n            this.m_referenceAngleA = revolute.m_referenceAngle;\r\n            this.m_localAxisC.SetZero();\r\n            coordinateA = aA - aC - this.m_referenceAngleA;\r\n        }\r\n        else {\r\n            const prismatic = def.joint1;\r\n            this.m_localAnchorC.Copy(prismatic.m_localAnchorA);\r\n            this.m_localAnchorA.Copy(prismatic.m_localAnchorB);\r\n            this.m_referenceAngleA = prismatic.m_referenceAngle;\r\n            this.m_localAxisC.Copy(prismatic.m_localXAxisA);\r\n            // b2Vec2 pC = m_localAnchorC;\r\n            const pC = this.m_localAnchorC;\r\n            // b2Vec2 pA = b2MulT(xfC.q, b2Mul(xfA.q, m_localAnchorA) + (xfA.p - xfC.p));\r\n            const pA = b2Rot.MulTRV(xfC.q, b2Vec2.AddVV(b2Rot.MulRV(xfA.q, this.m_localAnchorA, b2Vec2.s_t0), b2Vec2.SubVV(xfA.p, xfC.p, b2Vec2.s_t1), b2Vec2.s_t0), b2Vec2.s_t0); // pA uses s_t0\r\n            // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n            coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n        }\r\n        this.m_bodyD = this.m_joint2.GetBodyA();\r\n        this.m_bodyB = this.m_joint2.GetBodyB();\r\n        // Get geometry of joint2\r\n        const xfB = this.m_bodyB.m_xf;\r\n        const aB = this.m_bodyB.m_sweep.a;\r\n        const xfD = this.m_bodyD.m_xf;\r\n        const aD = this.m_bodyD.m_sweep.a;\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            const revolute = def.joint2;\r\n            this.m_localAnchorD.Copy(revolute.m_localAnchorA);\r\n            this.m_localAnchorB.Copy(revolute.m_localAnchorB);\r\n            this.m_referenceAngleB = revolute.m_referenceAngle;\r\n            this.m_localAxisD.SetZero();\r\n            coordinateB = aB - aD - this.m_referenceAngleB;\r\n        }\r\n        else {\r\n            const prismatic = def.joint2;\r\n            this.m_localAnchorD.Copy(prismatic.m_localAnchorA);\r\n            this.m_localAnchorB.Copy(prismatic.m_localAnchorB);\r\n            this.m_referenceAngleB = prismatic.m_referenceAngle;\r\n            this.m_localAxisD.Copy(prismatic.m_localXAxisA);\r\n            // b2Vec2 pD = m_localAnchorD;\r\n            const pD = this.m_localAnchorD;\r\n            // b2Vec2 pB = b2MulT(xfD.q, b2Mul(xfB.q, m_localAnchorB) + (xfB.p - xfD.p));\r\n            const pB = b2Rot.MulTRV(xfD.q, b2Vec2.AddVV(b2Rot.MulRV(xfB.q, this.m_localAnchorB, b2Vec2.s_t0), b2Vec2.SubVV(xfB.p, xfD.p, b2Vec2.s_t1), b2Vec2.s_t0), b2Vec2.s_t0); // pB uses s_t0\r\n            // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n            coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n        }\r\n        this.m_ratio = def.ratio;\r\n        this.m_constant = coordinateA + this.m_ratio * coordinateB;\r\n        this.m_impulse = 0;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_indexC = this.m_bodyC.m_islandIndex;\r\n        this.m_indexD = this.m_bodyD.m_islandIndex;\r\n        this.m_lcA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_lcB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_lcC.Copy(this.m_bodyC.m_sweep.localCenter);\r\n        this.m_lcD.Copy(this.m_bodyD.m_sweep.localCenter);\r\n        this.m_mA = this.m_bodyA.m_invMass;\r\n        this.m_mB = this.m_bodyB.m_invMass;\r\n        this.m_mC = this.m_bodyC.m_invMass;\r\n        this.m_mD = this.m_bodyD.m_invMass;\r\n        this.m_iA = this.m_bodyA.m_invI;\r\n        this.m_iB = this.m_bodyB.m_invI;\r\n        this.m_iC = this.m_bodyC.m_invI;\r\n        this.m_iD = this.m_bodyD.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const aC = data.positions[this.m_indexC].a;\r\n        const vC = data.velocities[this.m_indexC].v;\r\n        let wC = data.velocities[this.m_indexC].w;\r\n        const aD = data.positions[this.m_indexD].a;\r\n        const vD = data.velocities[this.m_indexD].v;\r\n        let wD = data.velocities[this.m_indexD].w;\r\n        // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n        this.m_mass = 0;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            this.m_JvAC.SetZero();\r\n            this.m_JwA = 1;\r\n            this.m_JwC = 1;\r\n            this.m_mass += this.m_iA + this.m_iC;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n            const u = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.InitVelocityConstraints_s_u);\r\n            // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n            b2Vec2.SubVV(this.m_localAnchorC, this.m_lcC, this.m_lalcC);\r\n            const rC = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.InitVelocityConstraints_s_rC);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n            b2Vec2.SubVV(this.m_localAnchorA, this.m_lcA, this.m_lalcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.InitVelocityConstraints_s_rA);\r\n            // m_JvAC = u;\r\n            this.m_JvAC.Copy(u);\r\n            // m_JwC = b2Cross(rC, u);\r\n            this.m_JwC = b2Vec2.CrossVV(rC, u);\r\n            // m_JwA = b2Cross(rA, u);\r\n            this.m_JwA = b2Vec2.CrossVV(rA, u);\r\n            this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\r\n        }\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            this.m_JvBD.SetZero();\r\n            this.m_JwB = this.m_ratio;\r\n            this.m_JwD = this.m_ratio;\r\n            this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n            const u = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.InitVelocityConstraints_s_u);\r\n            // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n            b2Vec2.SubVV(this.m_localAnchorD, this.m_lcD, this.m_lalcD);\r\n            const rD = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.InitVelocityConstraints_s_rD);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n            b2Vec2.SubVV(this.m_localAnchorB, this.m_lcB, this.m_lalcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.InitVelocityConstraints_s_rB);\r\n            // m_JvBD = m_ratio * u;\r\n            b2Vec2.MulSV(this.m_ratio, u, this.m_JvBD);\r\n            // m_JwD = m_ratio * b2Cross(rD, u);\r\n            this.m_JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n            // m_JwB = m_ratio * b2Cross(rB, u);\r\n            this.m_JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n            this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\r\n        }\r\n        // Compute effective mass.\r\n        this.m_mass = this.m_mass > 0 ? 1 / this.m_mass : 0;\r\n        if (data.step.warmStarting) {\r\n            // vA += (m_mA * m_impulse) * m_JvAC;\r\n            vA.SelfMulAdd(this.m_mA * this.m_impulse, this.m_JvAC);\r\n            wA += this.m_iA * this.m_impulse * this.m_JwA;\r\n            // vB += (m_mB * m_impulse) * m_JvBD;\r\n            vB.SelfMulAdd(this.m_mB * this.m_impulse, this.m_JvBD);\r\n            wB += this.m_iB * this.m_impulse * this.m_JwB;\r\n            // vC -= (m_mC * m_impulse) * m_JvAC;\r\n            vC.SelfMulSub(this.m_mC * this.m_impulse, this.m_JvAC);\r\n            wC -= this.m_iC * this.m_impulse * this.m_JwC;\r\n            // vD -= (m_mD * m_impulse) * m_JvBD;\r\n            vD.SelfMulSub(this.m_mD * this.m_impulse, this.m_JvBD);\r\n            wD -= this.m_iD * this.m_impulse * this.m_JwD;\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n        // data.velocities[this.m_indexC].v = vC;\r\n        data.velocities[this.m_indexC].w = wC;\r\n        // data.velocities[this.m_indexD].v = vD;\r\n        data.velocities[this.m_indexD].w = wD;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const vC = data.velocities[this.m_indexC].v;\r\n        let wC = data.velocities[this.m_indexC].w;\r\n        const vD = data.velocities[this.m_indexD].v;\r\n        let wD = data.velocities[this.m_indexD].w;\r\n        // float32 Cdot = b2Dot(m_JvAC, vA - vC) + b2Dot(m_JvBD, vB - vD);\r\n        let Cdot = b2Vec2.DotVV(this.m_JvAC, b2Vec2.SubVV(vA, vC, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(this.m_JvBD, b2Vec2.SubVV(vB, vD, b2Vec2.s_t0));\r\n        Cdot += (this.m_JwA * wA - this.m_JwC * wC) + (this.m_JwB * wB - this.m_JwD * wD);\r\n        const impulse = -this.m_mass * Cdot;\r\n        this.m_impulse += impulse;\r\n        // vA += (m_mA * impulse) * m_JvAC;\r\n        vA.SelfMulAdd((this.m_mA * impulse), this.m_JvAC);\r\n        wA += this.m_iA * impulse * this.m_JwA;\r\n        // vB += (m_mB * impulse) * m_JvBD;\r\n        vB.SelfMulAdd((this.m_mB * impulse), this.m_JvBD);\r\n        wB += this.m_iB * impulse * this.m_JwB;\r\n        // vC -= (m_mC * impulse) * m_JvAC;\r\n        vC.SelfMulSub((this.m_mC * impulse), this.m_JvAC);\r\n        wC -= this.m_iC * impulse * this.m_JwC;\r\n        // vD -= (m_mD * impulse) * m_JvBD;\r\n        vD.SelfMulSub((this.m_mD * impulse), this.m_JvBD);\r\n        wD -= this.m_iD * impulse * this.m_JwD;\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n        // data.velocities[this.m_indexC].v = vC;\r\n        data.velocities[this.m_indexC].w = wC;\r\n        // data.velocities[this.m_indexD].v = vD;\r\n        data.velocities[this.m_indexD].w = wD;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const cC = data.positions[this.m_indexC].c;\r\n        let aC = data.positions[this.m_indexC].a;\r\n        const cD = data.positions[this.m_indexD].c;\r\n        let aD = data.positions[this.m_indexD].a;\r\n        // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n        const linearError = 0;\r\n        let coordinateA, coordinateB;\r\n        const JvAC = this.m_JvAC, JvBD = this.m_JvBD;\r\n        let JwA, JwB, JwC, JwD;\r\n        let mass = 0;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            JvAC.SetZero();\r\n            JwA = 1;\r\n            JwC = 1;\r\n            mass += this.m_iA + this.m_iC;\r\n            coordinateA = aA - aC - this.m_referenceAngleA;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n            const u = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.SolvePositionConstraints_s_u);\r\n            // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n            const rC = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.SolvePositionConstraints_s_rC);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.SolvePositionConstraints_s_rA);\r\n            // JvAC = u;\r\n            JvAC.Copy(u);\r\n            // JwC = b2Cross(rC, u);\r\n            JwC = b2Vec2.CrossVV(rC, u);\r\n            // JwA = b2Cross(rA, u);\r\n            JwA = b2Vec2.CrossVV(rA, u);\r\n            mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\r\n            // b2Vec2 pC = m_localAnchorC - m_lcC;\r\n            const pC = this.m_lalcC;\r\n            // b2Vec2 pA = b2MulT(qC, rA + (cA - cC));\r\n            const pA = b2Rot.MulTRV(qC, b2Vec2.AddVV(rA, b2Vec2.SubVV(cA, cC, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0); // pA uses s_t0\r\n            // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n            coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n        }\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            JvBD.SetZero();\r\n            JwB = this.m_ratio;\r\n            JwD = this.m_ratio;\r\n            mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n            coordinateB = aB - aD - this.m_referenceAngleB;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n            const u = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.SolvePositionConstraints_s_u);\r\n            // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n            const rD = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.SolvePositionConstraints_s_rD);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.SolvePositionConstraints_s_rB);\r\n            // JvBD = m_ratio * u;\r\n            b2Vec2.MulSV(this.m_ratio, u, JvBD);\r\n            // JwD = m_ratio * b2Cross(rD, u);\r\n            JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n            // JwB = m_ratio * b2Cross(rB, u);\r\n            JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n            mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * JwD * JwD + this.m_iB * JwB * JwB;\r\n            // b2Vec2 pD = m_localAnchorD - m_lcD;\r\n            const pD = this.m_lalcD;\r\n            // b2Vec2 pB = b2MulT(qD, rB + (cB - cD));\r\n            const pB = b2Rot.MulTRV(qD, b2Vec2.AddVV(rB, b2Vec2.SubVV(cB, cD, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0); // pB uses s_t0\r\n            // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n            coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n        }\r\n        const C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant;\r\n        let impulse = 0;\r\n        if (mass > 0) {\r\n            impulse = -C / mass;\r\n        }\r\n        // cA += m_mA * impulse * JvAC;\r\n        cA.SelfMulAdd(this.m_mA * impulse, JvAC);\r\n        aA += this.m_iA * impulse * JwA;\r\n        // cB += m_mB * impulse * JvBD;\r\n        cB.SelfMulAdd(this.m_mB * impulse, JvBD);\r\n        aB += this.m_iB * impulse * JwB;\r\n        // cC -= m_mC * impulse * JvAC;\r\n        cC.SelfMulSub(this.m_mC * impulse, JvAC);\r\n        aC -= this.m_iC * impulse * JwC;\r\n        // cD -= m_mD * impulse * JvBD;\r\n        cD.SelfMulSub(this.m_mD * impulse, JvBD);\r\n        aD -= this.m_iD * impulse * JwD;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        // data.positions[this.m_indexC].c = cC;\r\n        data.positions[this.m_indexC].a = aC;\r\n        // data.positions[this.m_indexD].c = cD;\r\n        data.positions[this.m_indexD].a = aD;\r\n        // TODO_ERIN not implemented\r\n        return linearError < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P = m_impulse * m_JvAC;\r\n        // return inv_dt * P;\r\n        return b2Vec2.MulSV(inv_dt * this.m_impulse, this.m_JvAC, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        // float32 L = m_impulse * m_JwA;\r\n        // return inv_dt * L;\r\n        return inv_dt * this.m_impulse * this.m_JwA;\r\n    }\r\n    GetJoint1() { return this.m_joint1; }\r\n    GetJoint2() { return this.m_joint2; }\r\n    GetRatio() {\r\n        return this.m_ratio;\r\n    }\r\n    SetRatio(ratio) {\r\n        ///b2Assert(b2IsValid(ratio));\r\n        this.m_ratio = ratio;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        const index1 = this.m_joint1.m_index;\r\n        const index2 = this.m_joint2.m_index;\r\n        log(\"  const jd: b2GearJointDef = new b2GearJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.joint1 = joints[%d];\\n\", index1);\r\n        log(\"  jd.joint2 = joints[%d];\\n\", index2);\r\n        log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2GearJoint.InitVelocityConstraints_s_u = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rA = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rB = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rC = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rD = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_u = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rA = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rB = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rC = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rD = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Clamp, b2Vec2, b2Mat22, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n// Point-to-point constraint\r\n// Cdot = v2 - v1\r\n//      = v2 + cross(w2, r2) - v1 - cross(w1, r1)\r\n// J = [-I -r1_skew I r2_skew ]\r\n// Identity used:\r\n// w k % (rx i + ry j) = w * (-ry i + rx j)\r\n//\r\n// r1 = offset - c1\r\n// r2 = -c2\r\n// Angle constraint\r\n// Cdot = w2 - w1\r\n// J = [0 0 -1 0 0 1]\r\n// K = invI1 + invI2\r\nexport class b2MotorJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_motorJoint);\r\n        this.linearOffset = new b2Vec2(0, 0);\r\n        this.angularOffset = 0;\r\n        this.maxForce = 1;\r\n        this.maxTorque = 1;\r\n        this.correctionFactor = 0.3;\r\n    }\r\n    Initialize(bA, bB) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        // b2Vec2 xB = bodyB->GetPosition();\r\n        // linearOffset = bodyA->GetLocalPoint(xB);\r\n        this.bodyA.GetLocalPoint(this.bodyB.GetPosition(), this.linearOffset);\r\n        const angleA = this.bodyA.GetAngle();\r\n        const angleB = this.bodyB.GetAngle();\r\n        this.angularOffset = angleB - angleA;\r\n    }\r\n}\r\nexport class b2MotorJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_linearOffset = new b2Vec2();\r\n        this.m_angularOffset = 0;\r\n        this.m_linearImpulse = new b2Vec2();\r\n        this.m_angularImpulse = 0;\r\n        this.m_maxForce = 0;\r\n        this.m_maxTorque = 0;\r\n        this.m_correctionFactor = 0.3;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_linearError = new b2Vec2();\r\n        this.m_angularError = 0;\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_linearMass = new b2Mat22();\r\n        this.m_angularMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_K = new b2Mat22();\r\n        this.m_linearOffset.Copy(def.linearOffset);\r\n        this.m_linearImpulse.SetZero();\r\n        this.m_maxForce = def.maxForce;\r\n        this.m_maxTorque = def.maxTorque;\r\n        this.m_correctionFactor = def.correctionFactor;\r\n    }\r\n    GetAnchorA() {\r\n        return this.m_bodyA.GetPosition();\r\n    }\r\n    GetAnchorB() {\r\n        return this.m_bodyB.GetPosition();\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * m_linearImpulse;\r\n        return b2Vec2.MulSV(inv_dt, this.m_linearImpulse, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_angularImpulse;\r\n    }\r\n    SetLinearOffset(linearOffset) {\r\n        if (!b2Vec2.IsEqualToV(linearOffset, this.m_linearOffset)) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_linearOffset.Copy(linearOffset);\r\n        }\r\n    }\r\n    GetLinearOffset() {\r\n        return this.m_linearOffset;\r\n    }\r\n    SetAngularOffset(angularOffset) {\r\n        if (angularOffset !== this.m_angularOffset) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_angularOffset = angularOffset;\r\n        }\r\n    }\r\n    GetAngularOffset() {\r\n        return this.m_angularOffset;\r\n    }\r\n    SetMaxForce(force) {\r\n        ///b2Assert(b2IsValid(force) && force >= 0);\r\n        this.m_maxForce = force;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetMaxTorque(torque) {\r\n        ///b2Assert(b2IsValid(torque) && torque >= 0);\r\n        this.m_maxTorque = torque;\r\n    }\r\n    GetMaxTorque() {\r\n        return this.m_maxTorque;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective mass matrix.\r\n        // this.m_rA = b2Mul(qA, m_linearOffset - this.m_localCenterA);\r\n        const rA = b2Rot.MulRV(qA, b2Vec2.SubVV(this.m_linearOffset, this.m_localCenterA, b2Vec2.s_t0), this.m_rA);\r\n        // this.m_rB = b2Mul(qB, -this.m_localCenterB);\r\n        const rB = b2Rot.MulRV(qB, b2Vec2.NegV(this.m_localCenterB, b2Vec2.s_t0), this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Upper 2 by 2 of K for point to point\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n        K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n        // this.m_linearMass = K.GetInverse();\r\n        K.GetInverse(this.m_linearMass);\r\n        this.m_angularMass = iA + iB;\r\n        if (this.m_angularMass > 0) {\r\n            this.m_angularMass = 1 / this.m_angularMass;\r\n        }\r\n        // this.m_linearError = cB + rB - cA - rA;\r\n        b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), this.m_linearError);\r\n        this.m_angularError = aB - aA - this.m_angularOffset;\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            // this.m_linearImpulse *= data.step.dtRatio;\r\n            this.m_linearImpulse.SelfMul(data.step.dtRatio);\r\n            this.m_angularImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P(this.m_linearImpulse.x, this.m_linearImpulse.y);\r\n            const P = this.m_linearImpulse;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(rA, P) + this.m_angularImpulse);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(rB, P) + this.m_angularImpulse);\r\n        }\r\n        else {\r\n            this.m_linearImpulse.SetZero();\r\n            this.m_angularImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA; // vA is a reference\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB; // vB is a reference\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const h = data.step.dt;\r\n        const inv_h = data.step.inv_dt;\r\n        // Solve angular friction\r\n        {\r\n            const Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\r\n            let impulse = -this.m_angularMass * Cdot;\r\n            const oldImpulse = this.m_angularImpulse;\r\n            const maxImpulse = h * this.m_maxTorque;\r\n            this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_angularImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve linear friction\r\n        {\r\n            const rA = this.m_rA;\r\n            const rB = this.m_rB;\r\n            // b2Vec2 Cdot = vB + b2Vec2.CrossSV(wB, rB) - vA - b2Vec2.CrossSV(wA, rA) + inv_h * this.m_correctionFactor * this.m_linearError;\r\n            const Cdot_v2 = b2Vec2.AddVV(b2Vec2.SubVV(b2Vec2.AddVV(vB, b2Vec2.CrossSV(wB, rB, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.AddVV(vA, b2Vec2.CrossSV(wA, rA, b2Vec2.s_t1), b2Vec2.s_t1), b2Vec2.s_t2), b2Vec2.MulSV(inv_h * this.m_correctionFactor, this.m_linearError, b2Vec2.s_t3), b2MotorJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = -b2Mul(this.m_linearMass, Cdot);\r\n            const impulse_v2 = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2MotorJoint.SolveVelocityConstraints_s_impulse_v2).SelfNeg();\r\n            // b2Vec2 oldImpulse = this.m_linearImpulse;\r\n            const oldImpulse_v2 = b2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2.Copy(this.m_linearImpulse);\r\n            // this.m_linearImpulse += impulse;\r\n            this.m_linearImpulse.SelfAdd(impulse_v2);\r\n            const maxImpulse = h * this.m_maxForce;\r\n            if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n                this.m_linearImpulse.Normalize();\r\n                // this.m_linearImpulse *= maxImpulse;\r\n                this.m_linearImpulse.SelfMul(maxImpulse);\r\n            }\r\n            // impulse = this.m_linearImpulse - oldImpulse;\r\n            b2Vec2.SubVV(this.m_linearImpulse, oldImpulse_v2, impulse_v2);\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulse_v2);\r\n            // wA -= iA * b2Vec2.CrossVV(rA, impulse);\r\n            wA -= iA * b2Vec2.CrossVV(rA, impulse_v2);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulse_v2);\r\n            // wB += iB * b2Vec2.CrossVV(rB, impulse);\r\n            wB += iB * b2Vec2.CrossVV(rB, impulse_v2);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA; // vA is a reference\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB; // vB is a reference\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2MotorJointDef = new b2MotorJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.linearOffset.Set(%.15f, %.15f);\\n\", this.m_linearOffset.x, this.m_linearOffset.y);\r\n        log(\"  jd.angularOffset = %.15f;\\n\", this.m_angularOffset);\r\n        log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\r\n        log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\r\n        log(\"  jd.correctionFactor = %.15f;\\n\", this.m_correctionFactor);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2MotorJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2MotorJoint.SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\r\nb2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Mat22, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Mouse joint definition. This requires a world target point,\r\n/// tuning parameters, and the time step.\r\nexport class b2MouseJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_mouseJoint);\r\n        this.target = new b2Vec2();\r\n        this.maxForce = 0;\r\n        this.frequencyHz = 5;\r\n        this.dampingRatio = 0.7;\r\n    }\r\n}\r\nexport class b2MouseJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_localAnchorB = null;\r\n        this.m_targetA = null;\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_beta = 0;\r\n        // Solver shared\r\n        this.m_impulse = null;\r\n        this.m_maxForce = 0;\r\n        this.m_gamma = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rB = null;\r\n        this.m_localCenterB = null;\r\n        this.m_invMassB = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = null;\r\n        this.m_C = null;\r\n        this.m_qB = null;\r\n        this.m_lalcB = null;\r\n        this.m_K = null;\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_targetA = new b2Vec2();\r\n        this.m_impulse = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_mass = new b2Mat22();\r\n        this.m_C = new b2Vec2();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        ///b2Assert(def.target.IsValid());\r\n        ///b2Assert(b2IsValid(def.maxForce) && def.maxForce >= 0);\r\n        ///b2Assert(b2IsValid(def.frequencyHz) && def.frequencyHz >= 0);\r\n        ///b2Assert(b2IsValid(def.dampingRatio) && def.dampingRatio >= 0);\r\n        this.m_targetA.Copy(def.target);\r\n        b2Transform.MulTXV(this.m_bodyB.GetTransform(), this.m_targetA, this.m_localAnchorB);\r\n        this.m_maxForce = def.maxForce;\r\n        this.m_impulse.SetZero();\r\n        this.m_frequencyHz = def.frequencyHz;\r\n        this.m_dampingRatio = def.dampingRatio;\r\n        this.m_beta = 0;\r\n        this.m_gamma = 0;\r\n    }\r\n    SetTarget(target) {\r\n        if (!this.m_bodyB.IsAwake()) {\r\n            this.m_bodyB.SetAwake(true);\r\n        }\r\n        this.m_targetA.Copy(target);\r\n    }\r\n    GetTarget() {\r\n        return this.m_targetA;\r\n    }\r\n    SetMaxForce(maxForce) {\r\n        this.m_maxForce = maxForce;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qB = this.m_qB.SetAngle(aB);\r\n        const mass = this.m_bodyB.GetMass();\r\n        // Frequency\r\n        const omega = 2 * b2_pi * this.m_frequencyHz;\r\n        // Damping coefficient\r\n        const d = 2 * mass * this.m_dampingRatio * omega;\r\n        // Spring stiffness\r\n        const k = mass * (omega * omega);\r\n        // magic formulas\r\n        // gamma has units of inverse mass.\r\n        // beta has units of inverse time.\r\n        const h = data.step.dt;\r\n        ///b2Assert(d + h * k > b2_epsilon);\r\n        this.m_gamma = h * (d + h * k);\r\n        if (this.m_gamma !== 0) {\r\n            this.m_gamma = 1 / this.m_gamma;\r\n        }\r\n        this.m_beta = h * k * this.m_gamma;\r\n        // Compute the effective mass matrix.\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // K    = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) * invI2 * skew(r2)]\r\n        //      = [1/m1+1/m2     0    ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y -r1.x*r1.y]\r\n        //        [    0     1/m1+1/m2]           [-r1.x*r1.y r1.x*r1.x]           [-r1.x*r1.y r1.x*r1.x]\r\n        const K = this.m_K;\r\n        K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y + this.m_gamma;\r\n        K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x + this.m_gamma;\r\n        K.GetInverse(this.m_mass);\r\n        // m_C = cB + m_rB - m_targetA;\r\n        this.m_C.x = cB.x + this.m_rB.x - this.m_targetA.x;\r\n        this.m_C.y = cB.y + this.m_rB.y - this.m_targetA.y;\r\n        // m_C *= m_beta;\r\n        this.m_C.SelfMul(this.m_beta);\r\n        // Cheat with some damping\r\n        wB *= 0.98;\r\n        if (data.step.warmStarting) {\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            // vB += m_invMassB * m_impulse;\r\n            vB.x += this.m_invMassB * this.m_impulse.x;\r\n            vB.y += this.m_invMassB * this.m_impulse.y;\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, this.m_impulse);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n        }\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Cdot = v + cross(w, r)\r\n        // b2Vec2 Cdot = vB + b2Cross(wB, m_rB);\r\n        const Cdot = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2MouseJoint.SolveVelocityConstraints_s_Cdot);\r\n        //  b2Vec2 impulse = b2Mul(m_mass, -(Cdot + m_C + m_gamma * m_impulse));\r\n        const impulse = b2Mat22.MulMV(this.m_mass, b2Vec2.AddVV(Cdot, b2Vec2.AddVV(this.m_C, b2Vec2.MulSV(this.m_gamma, this.m_impulse, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0).SelfNeg(), b2MouseJoint.SolveVelocityConstraints_s_impulse);\r\n        // b2Vec2 oldImpulse = m_impulse;\r\n        const oldImpulse = b2MouseJoint.SolveVelocityConstraints_s_oldImpulse.Copy(this.m_impulse);\r\n        // m_impulse += impulse;\r\n        this.m_impulse.SelfAdd(impulse);\r\n        const maxImpulse = data.step.dt * this.m_maxForce;\r\n        if (this.m_impulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n            this.m_impulse.SelfMul(maxImpulse / this.m_impulse.Length());\r\n        }\r\n        // impulse = m_impulse - oldImpulse;\r\n        b2Vec2.SubVV(this.m_impulse, oldImpulse, impulse);\r\n        // vB += m_invMassB * impulse;\r\n        vB.SelfMulAdd(this.m_invMassB, impulse);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, impulse);\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    GetAnchorA(out) {\r\n        return out.Copy(this.m_targetA);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return b2Vec2.MulSV(inv_dt, this.m_impulse, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"Mouse joint dumping is not supported.\\n\");\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_targetA.SelfSub(newOrigin);\r\n    }\r\n}\r\nb2MouseJoint.SolveVelocityConstraints_s_Cdot = new b2Vec2();\r\nb2MouseJoint.SolveVelocityConstraints_s_impulse = new b2Vec2();\r\nb2MouseJoint.SolveVelocityConstraints_s_oldImpulse = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxLinearCorrection, b2_angularSlop } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Clamp, b2Vec2, b2Mat22, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Prismatic joint definition. This requires defining a line of\r\n/// motion using an axis and an anchor point. The definition uses local\r\n/// anchor points and a local axis so that the initial configuration\r\n/// can violate the constraint slightly. The joint translation is zero\r\n/// when the local anchor points coincide in world space. Using local\r\n/// anchors and a local axis helps when saving and loading a game.\r\nexport class b2PrismaticJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_prismaticJoint);\r\n        this.localAnchorA = null;\r\n        this.localAnchorB = null;\r\n        this.localAxisA = null;\r\n        this.referenceAngle = 0;\r\n        this.enableLimit = false;\r\n        this.lowerTranslation = 0;\r\n        this.upperTranslation = 0;\r\n        this.enableMotor = false;\r\n        this.maxMotorForce = 0;\r\n        this.motorSpeed = 0;\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.localAxisA = new b2Vec2(1, 0);\r\n    }\r\n    Initialize(bA, bB, anchor, axis) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.bodyA.GetLocalVector(axis, this.localAxisA);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2PrismaticJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localXAxisA = new b2Vec2();\r\n        this.m_localYAxisA = new b2Vec2();\r\n        this.m_referenceAngle = 0;\r\n        this.m_impulse = new b2Vec3(0, 0, 0);\r\n        this.m_motorImpulse = 0;\r\n        this.m_lowerTranslation = 0;\r\n        this.m_upperTranslation = 0;\r\n        this.m_maxMotorForce = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableLimit = false;\r\n        this.m_enableMotor = false;\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_axis = new b2Vec2(0, 0);\r\n        this.m_perp = new b2Vec2(0, 0);\r\n        this.m_s1 = 0;\r\n        this.m_s2 = 0;\r\n        this.m_a1 = 0;\r\n        this.m_a2 = 0;\r\n        this.m_K = new b2Mat33();\r\n        this.m_K3 = new b2Mat33();\r\n        this.m_K2 = new b2Mat22();\r\n        this.m_motorMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_localXAxisA.Copy(def.localAxisA).SelfNormalize();\r\n        b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\r\n        this.m_referenceAngle = def.referenceAngle;\r\n        this.m_lowerTranslation = def.lowerTranslation;\r\n        this.m_upperTranslation = def.upperTranslation;\r\n        this.m_maxMotorForce = def.maxMotorForce;\r\n        this.m_motorSpeed = def.motorSpeed;\r\n        this.m_enableLimit = def.enableLimit;\r\n        this.m_enableMotor = def.enableMotor;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective masses.\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = (cB - cA) + rB - rA;\r\n        const d = b2Vec2.AddVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), b2Vec2.SubVV(rB, rA, b2Vec2.s_t1), b2PrismaticJoint.InitVelocityConstraints_s_d);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Compute motor Jacobian and effective mass.\r\n        {\r\n            // m_axis = b2Mul(qA, m_localXAxisA);\r\n            b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\r\n            // m_a1 = b2Cross(d + rA, m_axis);\r\n            this.m_a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_axis);\r\n            // m_a2 = b2Cross(rB, m_axis);\r\n            this.m_a2 = b2Vec2.CrossVV(rB, this.m_axis);\r\n            this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\r\n            if (this.m_motorMass > 0) {\r\n                this.m_motorMass = 1 / this.m_motorMass;\r\n            }\r\n        }\r\n        // Prismatic constraint.\r\n        {\r\n            // m_perp = b2Mul(qA, m_localYAxisA);\r\n            b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\r\n            // m_s1 = b2Cross(d + rA, m_perp);\r\n            this.m_s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_perp);\r\n            // m_s2 = b2Cross(rB, m_perp);\r\n            this.m_s2 = b2Vec2.CrossVV(rB, this.m_perp);\r\n            // float32 k11 = mA + mB + iA * m_s1 * m_s1 + iB * m_s2 * m_s2;\r\n            this.m_K.ex.x = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\r\n            // float32 k12 = iA * m_s1 + iB * m_s2;\r\n            this.m_K.ex.y = iA * this.m_s1 + iB * this.m_s2;\r\n            // float32 k13 = iA * m_s1 * m_a1 + iB * m_s2 * m_a2;\r\n            this.m_K.ex.z = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\r\n            this.m_K.ey.x = this.m_K.ex.y;\r\n            // float32 k22 = iA + iB;\r\n            this.m_K.ey.y = iA + iB;\r\n            if (this.m_K.ey.y === 0) {\r\n                // For bodies with fixed rotation.\r\n                this.m_K.ey.y = 1;\r\n            }\r\n            // float32 k23 = iA * m_a1 + iB * m_a2;\r\n            this.m_K.ey.z = iA * this.m_a1 + iB * this.m_a2;\r\n            this.m_K.ez.x = this.m_K.ex.z;\r\n            this.m_K.ez.y = this.m_K.ey.z;\r\n            // float32 k33 = mA + mB + iA * m_a1 * m_a1 + iB * m_a2 * m_a2;\r\n            this.m_K.ez.z = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\r\n            // m_K.ex.Set(k11, k12, k13);\r\n            // m_K.ey.Set(k12, k22, k23);\r\n            // m_K.ez.Set(k13, k23, k33);\r\n        }\r\n        // Compute motor and limit terms.\r\n        if (this.m_enableLimit) {\r\n            // float32 jointTranslation = b2Dot(m_axis, d);\r\n            const jointTranslation = b2Vec2.DotVV(this.m_axis, d);\r\n            if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\r\n                this.m_limitState = b2LimitState.e_equalLimits;\r\n            }\r\n            else if (jointTranslation <= this.m_lowerTranslation) {\r\n                if (this.m_limitState !== b2LimitState.e_atLowerLimit) {\r\n                    this.m_limitState = b2LimitState.e_atLowerLimit;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n            }\r\n            else if (jointTranslation >= this.m_upperTranslation) {\r\n                if (this.m_limitState !== b2LimitState.e_atUpperLimit) {\r\n                    this.m_limitState = b2LimitState.e_atUpperLimit;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n            }\r\n            else {\r\n                this.m_limitState = b2LimitState.e_inactiveLimit;\r\n                this.m_impulse.z = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.m_limitState = b2LimitState.e_inactiveLimit;\r\n            this.m_impulse.z = 0;\r\n        }\r\n        if (!this.m_enableMotor) {\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Account for variable time step.\r\n            // m_impulse *= data.step.dtRatio;\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse.x * m_perp + (m_motorImpulse + m_impulse.z) * m_axis;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(this.m_impulse.x, this.m_perp, b2Vec2.s_t0), b2Vec2.MulSV((this.m_motorImpulse + this.m_impulse.z), this.m_axis, b2Vec2.s_t1), b2PrismaticJoint.InitVelocityConstraints_s_P);\r\n            // float32 LA = m_impulse.x * m_s1 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a1;\r\n            const LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\r\n            // float32 LB = m_impulse.x * m_s2 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a2;\r\n            const LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Solve linear motor constraint.\r\n        if (this.m_enableMotor && this.m_limitState !== b2LimitState.e_equalLimits) {\r\n            // float32 Cdot = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\r\n            const Cdot = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\r\n            let impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorForce;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            // b2Vec2 P = impulse * m_axis;\r\n            const P = b2Vec2.MulSV(impulse, this.m_axis, b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_a1;\r\n            const LB = impulse * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // b2Vec2 Cdot1;\r\n        // Cdot1.x = b2Dot(m_perp, vB - vA) + m_s2 * wB - m_s1 * wA;\r\n        const Cdot1_x = b2Vec2.DotVV(this.m_perp, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_s2 * wB - this.m_s1 * wA;\r\n        // Cdot1.y = wB - wA;\r\n        const Cdot1_y = wB - wA;\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit) {\r\n            // Solve prismatic and limit constraint in block form.\r\n            // float32 Cdot2;\r\n            // Cdot2 = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\r\n            const Cdot2 = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\r\n            // b2Vec3 Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 f1 = m_impulse;\r\n            const f1 = b2PrismaticJoint.SolveVelocityConstraints_s_f1.Copy(this.m_impulse);\r\n            // b2Vec3 df =  m_K.Solve33(-Cdot);\r\n            const df3 = this.m_K.Solve33((-Cdot1_x), (-Cdot1_y), (-Cdot2), b2PrismaticJoint.SolveVelocityConstraints_s_df3);\r\n            // m_impulse += df;\r\n            this.m_impulse.SelfAdd(df3);\r\n            if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                this.m_impulse.z = b2Max(this.m_impulse.z, 0);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                this.m_impulse.z = b2Min(this.m_impulse.z, 0);\r\n            }\r\n            // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) + f1(1:2)\r\n            // b2Vec2 b = -Cdot1 - (m_impulse.z - f1.z) * b2Vec2(m_K.ez.x, m_K.ez.y);\r\n            const b_x = (-Cdot1_x) - (this.m_impulse.z - f1.z) * this.m_K.ez.x;\r\n            const b_y = (-Cdot1_y) - (this.m_impulse.z - f1.z) * this.m_K.ez.y;\r\n            // b2Vec2 f2r = m_K.Solve22(b) + b2Vec2(f1.x, f1.y);\r\n            const f2r = this.m_K.Solve22(b_x, b_y, b2PrismaticJoint.SolveVelocityConstraints_s_f2r);\r\n            f2r.x += f1.x;\r\n            f2r.y += f1.y;\r\n            // m_impulse.x = f2r.x;\r\n            this.m_impulse.x = f2r.x;\r\n            // m_impulse.y = f2r.y;\r\n            this.m_impulse.y = f2r.y;\r\n            // df = m_impulse - f1;\r\n            df3.x = this.m_impulse.x - f1.x;\r\n            df3.y = this.m_impulse.y - f1.y;\r\n            df3.z = this.m_impulse.z - f1.z;\r\n            // b2Vec2 P = df.x * m_perp + df.z * m_axis;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(df3.x, this.m_perp, b2Vec2.s_t0), b2Vec2.MulSV(df3.z, this.m_axis, b2Vec2.s_t1), b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            // float32 LA = df.x * m_s1 + df.y + df.z * m_a1;\r\n            const LA = df3.x * this.m_s1 + df3.y + df3.z * this.m_a1;\r\n            // float32 LB = df.x * m_s2 + df.y + df.z * m_a2;\r\n            const LB = df3.x * this.m_s2 + df3.y + df3.z * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        else {\r\n            // Limit is inactive, just solve the prismatic constraint in block form.\r\n            // b2Vec2 df = m_K.Solve22(-Cdot1);\r\n            const df2 = this.m_K.Solve22((-Cdot1_x), (-Cdot1_y), b2PrismaticJoint.SolveVelocityConstraints_s_df2);\r\n            this.m_impulse.x += df2.x;\r\n            this.m_impulse.y += df2.y;\r\n            // b2Vec2 P = df.x * m_perp;\r\n            const P = b2Vec2.MulSV(df2.x, this.m_perp, b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            // float32 LA = df.x * m_s1 + df.y;\r\n            const LA = df2.x * this.m_s1 + df2.y;\r\n            // float32 LB = df.x * m_s2 + df.y;\r\n            const LB = df2.x * this.m_s2 + df2.y;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = cB + rB - cA - rA;\r\n        const d = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2PrismaticJoint.SolvePositionConstraints_s_d);\r\n        // b2Vec2 axis = b2Mul(qA, m_localXAxisA);\r\n        const axis = b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\r\n        // float32 a1 = b2Cross(d + rA, axis);\r\n        const a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), axis);\r\n        // float32 a2 = b2Cross(rB, axis);\r\n        const a2 = b2Vec2.CrossVV(rB, axis);\r\n        // b2Vec2 perp = b2Mul(qA, m_localYAxisA);\r\n        const perp = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\r\n        // float32 s1 = b2Cross(d + rA, perp);\r\n        const s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), perp);\r\n        // float32 s2 = b2Cross(rB, perp);\r\n        const s2 = b2Vec2.CrossVV(rB, perp);\r\n        // b2Vec3 impulse;\r\n        let impulse = b2PrismaticJoint.SolvePositionConstraints_s_impulse;\r\n        // b2Vec2 C1;\r\n        // C1.x = b2Dot(perp, d);\r\n        const C1_x = b2Vec2.DotVV(perp, d);\r\n        // C1.y = aB - aA - m_referenceAngle;\r\n        const C1_y = aB - aA - this.m_referenceAngle;\r\n        let linearError = b2Abs(C1_x);\r\n        let angularError = b2Abs(C1_y);\r\n        let active = false;\r\n        let C2 = 0;\r\n        if (this.m_enableLimit) {\r\n            // float32 translation = b2Dot(axis, d);\r\n            const translation = b2Vec2.DotVV(axis, d);\r\n            if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\r\n                // Prevent large angular corrections\r\n                C2 = b2Clamp(translation, (-b2_maxLinearCorrection), b2_maxLinearCorrection);\r\n                linearError = b2Max(linearError, b2Abs(translation));\r\n                active = true;\r\n            }\r\n            else if (translation <= this.m_lowerTranslation) {\r\n                // Prevent large linear corrections and allow some slop.\r\n                C2 = b2Clamp(translation - this.m_lowerTranslation + b2_linearSlop, (-b2_maxLinearCorrection), 0);\r\n                linearError = b2Max(linearError, this.m_lowerTranslation - translation);\r\n                active = true;\r\n            }\r\n            else if (translation >= this.m_upperTranslation) {\r\n                // Prevent large linear corrections and allow some slop.\r\n                C2 = b2Clamp(translation - this.m_upperTranslation - b2_linearSlop, 0, b2_maxLinearCorrection);\r\n                linearError = b2Max(linearError, translation - this.m_upperTranslation);\r\n                active = true;\r\n            }\r\n        }\r\n        if (active) {\r\n            // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            // float32 k12 = iA * s1 + iB * s2;\r\n            const k12 = iA * s1 + iB * s2;\r\n            // float32 k13 = iA * s1 * a1 + iB * s2 * a2;\r\n            const k13 = iA * s1 * a1 + iB * s2 * a2;\r\n            // float32 k22 = iA + iB;\r\n            let k22 = iA + iB;\r\n            if (k22 === 0) {\r\n                // For fixed rotation\r\n                k22 = 1;\r\n            }\r\n            // float32 k23 = iA * a1 + iB * a2;\r\n            const k23 = iA * a1 + iB * a2;\r\n            // float32 k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\r\n            const k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\r\n            // b2Mat33 K;\r\n            const K = this.m_K3;\r\n            // K.ex.Set(k11, k12, k13);\r\n            K.ex.SetXYZ(k11, k12, k13);\r\n            // K.ey.Set(k12, k22, k23);\r\n            K.ey.SetXYZ(k12, k22, k23);\r\n            // K.ez.Set(k13, k23, k33);\r\n            K.ez.SetXYZ(k13, k23, k33);\r\n            // b2Vec3 C;\r\n            // C.x = C1.x;\r\n            // C.y = C1.y;\r\n            // C.z = C2;\r\n            // impulse = K.Solve33(-C);\r\n            impulse = K.Solve33((-C1_x), (-C1_y), (-C2), impulse);\r\n        }\r\n        else {\r\n            // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            // float32 k12 = iA * s1 + iB * s2;\r\n            const k12 = iA * s1 + iB * s2;\r\n            // float32 k22 = iA + iB;\r\n            let k22 = iA + iB;\r\n            if (k22 === 0) {\r\n                k22 = 1;\r\n            }\r\n            // b2Mat22 K;\r\n            const K2 = this.m_K2;\r\n            // K.ex.Set(k11, k12);\r\n            K2.ex.Set(k11, k12);\r\n            // K.ey.Set(k12, k22);\r\n            K2.ey.Set(k12, k22);\r\n            // b2Vec2 impulse1 = K.Solve(-C1);\r\n            const impulse1 = K2.Solve((-C1_x), (-C1_y), b2PrismaticJoint.SolvePositionConstraints_s_impulse1);\r\n            impulse.x = impulse1.x;\r\n            impulse.y = impulse1.y;\r\n            impulse.z = 0;\r\n        }\r\n        // b2Vec2 P = impulse.x * perp + impulse.z * axis;\r\n        const P = b2Vec2.AddVV(b2Vec2.MulSV(impulse.x, perp, b2Vec2.s_t0), b2Vec2.MulSV(impulse.z, axis, b2Vec2.s_t1), b2PrismaticJoint.SolvePositionConstraints_s_P);\r\n        // float32 LA = impulse.x * s1 + impulse.y + impulse.z * a1;\r\n        const LA = impulse.x * s1 + impulse.y + impulse.z * a1;\r\n        // float32 LB = impulse.x * s2 + impulse.y + impulse.z * a2;\r\n        const LB = impulse.x * s2 + impulse.y + impulse.z * a2;\r\n        // cA -= mA * P;\r\n        cA.SelfMulSub(mA, P);\r\n        aA -= iA * LA;\r\n        // cB += mB * P;\r\n        cB.SelfMulAdd(mB, P);\r\n        aB += iB * LB;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return linearError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * (m_impulse.x * m_perp + (m_motorImpulse + m_impulse.z) * m_axis);\r\n        return out.Set(inv_dt * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x), inv_dt * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y));\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.y;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetLocalAxisA() { return this.m_localXAxisA; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    GetJointTranslation() {\r\n        // b2Vec2 pA = m_bodyA.GetWorldPoint(m_localAnchorA);\r\n        const pA = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PrismaticJoint.GetJointTranslation_s_pA);\r\n        // b2Vec2 pB = m_bodyB.GetWorldPoint(m_localAnchorB);\r\n        const pB = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PrismaticJoint.GetJointTranslation_s_pB);\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2PrismaticJoint.GetJointTranslation_s_d);\r\n        // b2Vec2 axis = m_bodyA.GetWorldVector(m_localXAxisA);\r\n        const axis = this.m_bodyA.GetWorldVector(this.m_localXAxisA, b2PrismaticJoint.GetJointTranslation_s_axis);\r\n        // float32 translation = b2Dot(d, axis);\r\n        const translation = b2Vec2.DotVV(d, axis);\r\n        return translation;\r\n    }\r\n    GetJointSpeed() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 pA = bA->m_sweep.c + rA;\r\n        const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\r\n        // b2Vec2 pB = bB->m_sweep.c + rB;\r\n        const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\r\n        // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, this.m_axis);\r\n        const vA = bA.m_linearVelocity;\r\n        const vB = bB.m_linearVelocity;\r\n        const wA = bA.m_angularVelocity;\r\n        const wB = bB.m_angularVelocity;\r\n        // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\r\n        const speed = b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(axis, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n        return speed;\r\n    }\r\n    IsLimitEnabled() {\r\n        return this.m_enableLimit;\r\n    }\r\n    EnableLimit(flag) {\r\n        if (flag !== this.m_enableLimit) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableLimit = flag;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    GetLowerLimit() {\r\n        return this.m_lowerTranslation;\r\n    }\r\n    GetUpperLimit() {\r\n        return this.m_upperTranslation;\r\n    }\r\n    SetLimits(lower, upper) {\r\n        if (lower !== this.m_lowerTranslation || upper !== this.m_upperTranslation) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_lowerTranslation = lower;\r\n            this.m_upperTranslation = upper;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_enableMotor = flag;\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_motorSpeed = speed;\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    SetMaxMotorForce(force) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_maxMotorForce = force;\r\n    }\r\n    GetMaxMotorForce() { return this.m_maxMotorForce; }\r\n    GetMotorForce(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2PrismaticJointDef = new b2PrismaticJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.lowerTranslation = %.15f;\\n\", this.m_lowerTranslation);\r\n        log(\"  jd.upperTranslation = %.15f;\\n\", this.m_upperTranslation);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorForce = %.15f;\\n\", this.m_maxMotorForce);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2PrismaticJoint.InitVelocityConstraints_s_d = new b2Vec2();\r\nb2PrismaticJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_f2r = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_f1 = new b2Vec3();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_df3 = new b2Vec3();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_df2 = new b2Vec2();\r\nb2PrismaticJoint.SolvePositionConstraints_s_d = new b2Vec2();\r\nb2PrismaticJoint.SolvePositionConstraints_s_impulse = new b2Vec3();\r\nb2PrismaticJoint.SolvePositionConstraints_s_impulse1 = new b2Vec2();\r\nb2PrismaticJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_pA = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_pB = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_d = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_axis = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\nexport const b2_minPulleyLength = 2;\r\n/// Pulley joint definition. This requires two ground anchors,\r\n/// two dynamic body anchor points, and a pulley ratio.\r\nexport class b2PulleyJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_pulleyJoint);\r\n        this.groundAnchorA = new b2Vec2(-1, 1);\r\n        this.groundAnchorB = new b2Vec2(1, 1);\r\n        this.localAnchorA = new b2Vec2(-1, 0);\r\n        this.localAnchorB = new b2Vec2(1, 0);\r\n        this.lengthA = 0;\r\n        this.lengthB = 0;\r\n        this.ratio = 1;\r\n        this.collideConnected = true;\r\n    }\r\n    Initialize(bA, bB, groundA, groundB, anchorA, anchorB, r) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.groundAnchorA.Copy(groundA);\r\n        this.groundAnchorB.Copy(groundB);\r\n        this.bodyA.GetLocalPoint(anchorA, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchorB, this.localAnchorB);\r\n        this.lengthA = b2Vec2.DistanceVV(anchorA, groundA);\r\n        this.lengthB = b2Vec2.DistanceVV(anchorB, groundB);\r\n        this.ratio = r;\r\n        ///b2Assert(this.ratio > b2_epsilon);\r\n    }\r\n}\r\nexport class b2PulleyJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_groundAnchorA = new b2Vec2();\r\n        this.m_groundAnchorB = new b2Vec2();\r\n        this.m_lengthA = 0;\r\n        this.m_lengthB = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_constant = 0;\r\n        this.m_ratio = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_uA = new b2Vec2();\r\n        this.m_uB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_groundAnchorA.Copy(def.groundAnchorA);\r\n        this.m_groundAnchorB.Copy(def.groundAnchorB);\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_lengthA = def.lengthA;\r\n        this.m_lengthB = def.lengthB;\r\n        ///b2Assert(def.ratio !== 0);\r\n        this.m_ratio = def.ratio;\r\n        this.m_constant = def.lengthA + this.m_ratio * def.lengthB;\r\n        this.m_impulse = 0;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // Get the pulley axes.\r\n        // m_uA = cA + m_rA - m_groundAnchorA;\r\n        this.m_uA.Copy(cA).SelfAdd(this.m_rA).SelfSub(this.m_groundAnchorA);\r\n        // m_uB = cB + m_rB - m_groundAnchorB;\r\n        this.m_uB.Copy(cB).SelfAdd(this.m_rB).SelfSub(this.m_groundAnchorB);\r\n        const lengthA = this.m_uA.Length();\r\n        const lengthB = this.m_uB.Length();\r\n        if (lengthA > 10 * b2_linearSlop) {\r\n            this.m_uA.SelfMul(1 / lengthA);\r\n        }\r\n        else {\r\n            this.m_uA.SetZero();\r\n        }\r\n        if (lengthB > 10 * b2_linearSlop) {\r\n            this.m_uB.SelfMul(1 / lengthB);\r\n        }\r\n        else {\r\n            this.m_uB.SetZero();\r\n        }\r\n        // Compute effective mass.\r\n        const ruA = b2Vec2.CrossVV(this.m_rA, this.m_uA);\r\n        const ruB = b2Vec2.CrossVV(this.m_rB, this.m_uB);\r\n        const mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n        const mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n        this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\r\n        if (this.m_mass > 0) {\r\n            this.m_mass = 1 / this.m_mass;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support variable time steps.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // Warm starting.\r\n            // b2Vec2 PA = -(m_impulse) * m_uA;\r\n            const PA = b2Vec2.MulSV(-(this.m_impulse), this.m_uA, b2PulleyJoint.InitVelocityConstraints_s_PA);\r\n            // b2Vec2 PB = (-m_ratio * m_impulse) * m_uB;\r\n            const PB = b2Vec2.MulSV((-this.m_ratio * this.m_impulse), this.m_uB, b2PulleyJoint.InitVelocityConstraints_s_PB);\r\n            // vA += m_invMassA * PA;\r\n            vA.SelfMulAdd(this.m_invMassA, PA);\r\n            wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n            // vB += m_invMassB * PB;\r\n            vB.SelfMulAdd(this.m_invMassB, PB);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2PulleyJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2PulleyJoint.SolveVelocityConstraints_s_vpB);\r\n        const Cdot = -b2Vec2.DotVV(this.m_uA, vpA) - this.m_ratio * b2Vec2.DotVV(this.m_uB, vpB);\r\n        const impulse = -this.m_mass * Cdot;\r\n        this.m_impulse += impulse;\r\n        // b2Vec2 PA = -impulse * m_uA;\r\n        const PA = b2Vec2.MulSV(-impulse, this.m_uA, b2PulleyJoint.SolveVelocityConstraints_s_PA);\r\n        // b2Vec2 PB = -m_ratio * impulse * m_uB;\r\n        const PB = b2Vec2.MulSV(-this.m_ratio * impulse, this.m_uB, b2PulleyJoint.SolveVelocityConstraints_s_PB);\r\n        // vA += m_invMassA * PA;\r\n        vA.SelfMulAdd(this.m_invMassA, PA);\r\n        wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n        // vB += m_invMassB * PB;\r\n        vB.SelfMulAdd(this.m_invMassB, PB);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // Get the pulley axes.\r\n        // b2Vec2 uA = cA + rA - m_groundAnchorA;\r\n        const uA = this.m_uA.Copy(cA).SelfAdd(rA).SelfSub(this.m_groundAnchorA);\r\n        // b2Vec2 uB = cB + rB - m_groundAnchorB;\r\n        const uB = this.m_uB.Copy(cB).SelfAdd(rB).SelfSub(this.m_groundAnchorB);\r\n        const lengthA = uA.Length();\r\n        const lengthB = uB.Length();\r\n        if (lengthA > 10 * b2_linearSlop) {\r\n            uA.SelfMul(1 / lengthA);\r\n        }\r\n        else {\r\n            uA.SetZero();\r\n        }\r\n        if (lengthB > 10 * b2_linearSlop) {\r\n            uB.SelfMul(1 / lengthB);\r\n        }\r\n        else {\r\n            uB.SetZero();\r\n        }\r\n        // Compute effective mass.\r\n        const ruA = b2Vec2.CrossVV(rA, uA);\r\n        const ruB = b2Vec2.CrossVV(rB, uB);\r\n        const mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n        const mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n        let mass = mA + this.m_ratio * this.m_ratio * mB;\r\n        if (mass > 0) {\r\n            mass = 1 / mass;\r\n        }\r\n        const C = this.m_constant - lengthA - this.m_ratio * lengthB;\r\n        const linearError = b2Abs(C);\r\n        const impulse = -mass * C;\r\n        // b2Vec2 PA = -impulse * uA;\r\n        const PA = b2Vec2.MulSV(-impulse, uA, b2PulleyJoint.SolvePositionConstraints_s_PA);\r\n        // b2Vec2 PB = -m_ratio * impulse * uB;\r\n        const PB = b2Vec2.MulSV(-this.m_ratio * impulse, uB, b2PulleyJoint.SolvePositionConstraints_s_PB);\r\n        // cA += m_invMassA * PA;\r\n        cA.SelfMulAdd(this.m_invMassA, PA);\r\n        aA += this.m_invIA * b2Vec2.CrossVV(rA, PA);\r\n        // cB += m_invMassB * PB;\r\n        cB.SelfMulAdd(this.m_invMassB, PB);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, PB);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return linearError < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P = m_impulse * m_uB;\r\n        // return inv_dt * P;\r\n        return out.Set(inv_dt * this.m_impulse * this.m_uB.x, inv_dt * this.m_impulse * this.m_uB.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetGroundAnchorA() {\r\n        return this.m_groundAnchorA;\r\n    }\r\n    GetGroundAnchorB() {\r\n        return this.m_groundAnchorB;\r\n    }\r\n    GetLengthA() {\r\n        return this.m_lengthA;\r\n    }\r\n    GetLengthB() {\r\n        return this.m_lengthB;\r\n    }\r\n    GetRatio() {\r\n        return this.m_ratio;\r\n    }\r\n    GetCurrentLengthA() {\r\n        // b2Vec2 p = m_bodyA->GetWorldPoint(m_localAnchorA);\r\n        // b2Vec2 s = m_groundAnchorA;\r\n        // b2Vec2 d = p - s;\r\n        // return d.Length();\r\n        const p = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PulleyJoint.GetCurrentLengthA_s_p);\r\n        const s = this.m_groundAnchorA;\r\n        return b2Vec2.DistanceVV(p, s);\r\n    }\r\n    GetCurrentLengthB() {\r\n        // b2Vec2 p = m_bodyB->GetWorldPoint(m_localAnchorB);\r\n        // b2Vec2 s = m_groundAnchorB;\r\n        // b2Vec2 d = p - s;\r\n        // return d.Length();\r\n        const p = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PulleyJoint.GetCurrentLengthB_s_p);\r\n        const s = this.m_groundAnchorB;\r\n        return b2Vec2.DistanceVV(p, s);\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2PulleyJointDef = new b2PulleyJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.groundAnchorA.Set(%.15f, %.15f);\\n\", this.m_groundAnchorA.x, this.m_groundAnchorA.y);\r\n        log(\"  jd.groundAnchorB.Set(%.15f, %.15f);\\n\", this.m_groundAnchorB.x, this.m_groundAnchorB.y);\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.lengthA = %.15f;\\n\", this.m_lengthA);\r\n        log(\"  jd.lengthB = %.15f;\\n\", this.m_lengthB);\r\n        log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_groundAnchorA.SelfSub(newOrigin);\r\n        this.m_groundAnchorB.SelfSub(newOrigin);\r\n    }\r\n}\r\nb2PulleyJoint.InitVelocityConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.InitVelocityConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.SolvePositionConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.SolvePositionConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.GetCurrentLengthA_s_p = new b2Vec2();\r\nb2PulleyJoint.GetCurrentLengthB_s_p = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_angularSlop, b2_maxAngularCorrection } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Mat22, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Revolute joint definition. This requires defining an\r\n/// anchor point where the bodies are joined. The definition\r\n/// uses local anchor points so that the initial configuration\r\n/// can violate the constraint slightly. You also need to\r\n/// specify the initial relative angle for joint limits. This\r\n/// helps when saving and loading a game.\r\n/// The local anchor points are measured from the body's origin\r\n/// rather than the center of mass because:\r\n/// 1. you might not know where the center of mass will be.\r\n/// 2. if you add/remove shapes from a body and recompute the mass,\r\n///    the joints will be broken.\r\nexport class b2RevoluteJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_revoluteJoint);\r\n        this.localAnchorA = new b2Vec2(0, 0);\r\n        this.localAnchorB = new b2Vec2(0, 0);\r\n        this.referenceAngle = 0;\r\n        this.enableLimit = false;\r\n        this.lowerAngle = 0;\r\n        this.upperAngle = 0;\r\n        this.enableMotor = false;\r\n        this.motorSpeed = 0;\r\n        this.maxMotorTorque = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2RevoluteJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_impulse = new b2Vec3();\r\n        this.m_motorImpulse = 0;\r\n        this.m_enableMotor = false;\r\n        this.m_maxMotorTorque = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableLimit = false;\r\n        this.m_referenceAngle = 0;\r\n        this.m_lowerAngle = 0;\r\n        this.m_upperAngle = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = new b2Mat33(); // effective mass for point-to-point constraint.\r\n        this.m_motorMass = 0; // effective mass for motor/limit angular constraint.\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_referenceAngle = def.referenceAngle;\r\n        this.m_impulse.SetZero();\r\n        this.m_motorImpulse = 0;\r\n        this.m_lowerAngle = def.lowerAngle;\r\n        this.m_upperAngle = def.upperAngle;\r\n        this.m_maxMotorTorque = def.maxMotorTorque;\r\n        this.m_motorSpeed = def.motorSpeed;\r\n        this.m_enableLimit = def.enableLimit;\r\n        this.m_enableMotor = def.enableMotor;\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const fixedRotation = (iA + iB === 0);\r\n        this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\r\n        this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\r\n        this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\r\n        this.m_mass.ex.y = this.m_mass.ey.x;\r\n        this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\r\n        this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\r\n        this.m_mass.ex.z = this.m_mass.ez.x;\r\n        this.m_mass.ey.z = this.m_mass.ez.y;\r\n        this.m_mass.ez.z = iA + iB;\r\n        this.m_motorMass = iA + iB;\r\n        if (this.m_motorMass > 0) {\r\n            this.m_motorMass = 1 / this.m_motorMass;\r\n        }\r\n        if (!this.m_enableMotor || fixedRotation) {\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (this.m_enableLimit && !fixedRotation) {\r\n            const jointAngle = aB - aA - this.m_referenceAngle;\r\n            if (b2Abs(this.m_upperAngle - this.m_lowerAngle) < 2 * b2_angularSlop) {\r\n                this.m_limitState = b2LimitState.e_equalLimits;\r\n            }\r\n            else if (jointAngle <= this.m_lowerAngle) {\r\n                if (this.m_limitState !== b2LimitState.e_atLowerLimit) {\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                this.m_limitState = b2LimitState.e_atLowerLimit;\r\n            }\r\n            else if (jointAngle >= this.m_upperAngle) {\r\n                if (this.m_limitState !== b2LimitState.e_atUpperLimit) {\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                this.m_limitState = b2LimitState.e_atUpperLimit;\r\n            }\r\n            else {\r\n                this.m_limitState = b2LimitState.e_inactiveLimit;\r\n                this.m_impulse.z = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P(m_impulse.x, m_impulse.y);\r\n            const P = b2RevoluteJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const fixedRotation = (iA + iB === 0);\r\n        // Solve motor constraint.\r\n        if (this.m_enableMotor && this.m_limitState !== b2LimitState.e_equalLimits && !fixedRotation) {\r\n            const Cdot = wB - wA - this.m_motorSpeed;\r\n            let impulse = -this.m_motorMass * Cdot;\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorTorque;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve limit constraint.\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit && !fixedRotation) {\r\n            // b2Vec2 Cdot1 = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2RevoluteJoint.SolveVelocityConstraints_s_Cdot1);\r\n            const Cdot2 = wB - wA;\r\n            // b2Vec3 Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 impulse = -this.m_mass.Solve33(Cdot);\r\n            const impulse_v3 = this.m_mass.Solve33(Cdot1.x, Cdot1.y, Cdot2, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v3).SelfNeg();\r\n            if (this.m_limitState === b2LimitState.e_equalLimits) {\r\n                this.m_impulse.SelfAdd(impulse_v3);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                const newImpulse = this.m_impulse.z + impulse_v3.z;\r\n                if (newImpulse < 0) {\r\n                    // b2Vec2 rhs = -Cdot1 + m_impulse.z * b2Vec2(m_mass.ez.x, m_mass.ez.y);\r\n                    const rhs_x = -Cdot1.x + this.m_impulse.z * this.m_mass.ez.x;\r\n                    const rhs_y = -Cdot1.y + this.m_impulse.z * this.m_mass.ez.y;\r\n                    const reduced_v2 = this.m_mass.Solve22(rhs_x, rhs_y, b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2);\r\n                    impulse_v3.x = reduced_v2.x;\r\n                    impulse_v3.y = reduced_v2.y;\r\n                    impulse_v3.z = -this.m_impulse.z;\r\n                    this.m_impulse.x += reduced_v2.x;\r\n                    this.m_impulse.y += reduced_v2.y;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                else {\r\n                    this.m_impulse.SelfAdd(impulse_v3);\r\n                }\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                const newImpulse = this.m_impulse.z + impulse_v3.z;\r\n                if (newImpulse > 0) {\r\n                    // b2Vec2 rhs = -Cdot1 + m_impulse.z * b2Vec2(m_mass.ez.x, m_mass.ez.y);\r\n                    const rhs_x = -Cdot1.x + this.m_impulse.z * this.m_mass.ez.x;\r\n                    const rhs_y = -Cdot1.y + this.m_impulse.z * this.m_mass.ez.y;\r\n                    const reduced_v2 = this.m_mass.Solve22(rhs_x, rhs_y, b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2);\r\n                    impulse_v3.x = reduced_v2.x;\r\n                    impulse_v3.y = reduced_v2.y;\r\n                    impulse_v3.z = -this.m_impulse.z;\r\n                    this.m_impulse.x += reduced_v2.x;\r\n                    this.m_impulse.y += reduced_v2.y;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                else {\r\n                    this.m_impulse.SelfAdd(impulse_v3);\r\n                }\r\n            }\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2RevoluteJoint.SolveVelocityConstraints_s_P.Set(impulse_v3.x, impulse_v3.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse_v3.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse_v3.z);\r\n        }\r\n        else {\r\n            // Solve point-to-point constraint\r\n            // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot_v2 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = m_mass.Solve22(-Cdot);\r\n            const impulse_v2 = this.m_mass.Solve22(-Cdot_v2.x, -Cdot_v2.y, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2);\r\n            this.m_impulse.x += impulse_v2.x;\r\n            this.m_impulse.y += impulse_v2.y;\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulse_v2);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, impulse_v2);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulse_v2);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, impulse_v2);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        let angularError = 0;\r\n        let positionError = 0;\r\n        const fixedRotation = (this.m_invIA + this.m_invIB === 0);\r\n        // Solve angular limit constraint.\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit && !fixedRotation) {\r\n            const angle = aB - aA - this.m_referenceAngle;\r\n            let limitImpulse = 0;\r\n            if (this.m_limitState === b2LimitState.e_equalLimits) {\r\n                // Prevent large angular corrections\r\n                const C = b2Clamp(angle - this.m_lowerAngle, -b2_maxAngularCorrection, b2_maxAngularCorrection);\r\n                limitImpulse = -this.m_motorMass * C;\r\n                angularError = b2Abs(C);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                let C = angle - this.m_lowerAngle;\r\n                angularError = -C;\r\n                // Prevent large angular corrections and allow some slop.\r\n                C = b2Clamp(C + b2_angularSlop, -b2_maxAngularCorrection, 0);\r\n                limitImpulse = -this.m_motorMass * C;\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                let C = angle - this.m_upperAngle;\r\n                angularError = C;\r\n                // Prevent large angular corrections and allow some slop.\r\n                C = b2Clamp(C - b2_angularSlop, 0, b2_maxAngularCorrection);\r\n                limitImpulse = -this.m_motorMass * C;\r\n            }\r\n            aA -= this.m_invIA * limitImpulse;\r\n            aB += this.m_invIB * limitImpulse;\r\n        }\r\n        // Solve point-to-point constraint.\r\n        {\r\n            qA.SetAngle(aA);\r\n            qB.SetAngle(aB);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n            b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n            b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n            // b2Vec2 C = cB + rB - cA - rA;\r\n            const C_v2 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2RevoluteJoint.SolvePositionConstraints_s_C_v2);\r\n            // positionError = C.Length();\r\n            positionError = C_v2.Length();\r\n            const mA = this.m_invMassA, mB = this.m_invMassB;\r\n            const iA = this.m_invIA, iB = this.m_invIB;\r\n            const K = this.m_K;\r\n            K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n            K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n            K.ey.x = K.ex.y;\r\n            K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n            // b2Vec2 impulse = -K.Solve(C);\r\n            const impulse = K.Solve(C_v2.x, C_v2.y, b2RevoluteJoint.SolvePositionConstraints_s_impulse).SelfNeg();\r\n            // cA -= mA * impulse;\r\n            cA.SelfMulSub(mA, impulse);\r\n            aA -= iA * b2Vec2.CrossVV(rA, impulse);\r\n            // cB += mB * impulse;\r\n            cB.SelfMulAdd(mB, impulse);\r\n            aB += iB * b2Vec2.CrossVV(rB, impulse);\r\n        }\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\r\n        // return inv_dt * P;\r\n        return out.Set(inv_dt * this.m_impulse.x, inv_dt * this.m_impulse.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.z;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    GetJointAngle() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_sweep.a - bA->this.m_sweep.a - this.m_referenceAngle;\r\n        return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;\r\n    }\r\n    GetJointSpeed() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_angularVelocity - bA->this.m_angularVelocity;\r\n        return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        if (this.m_enableMotor !== flag) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableMotor = flag;\r\n        }\r\n    }\r\n    GetMotorTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    SetMaxMotorTorque(torque) {\r\n        this.m_maxMotorTorque = torque;\r\n    }\r\n    GetMaxMotorTorque() { return this.m_maxMotorTorque; }\r\n    IsLimitEnabled() {\r\n        return this.m_enableLimit;\r\n    }\r\n    EnableLimit(flag) {\r\n        if (flag !== this.m_enableLimit) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableLimit = flag;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    GetLowerLimit() {\r\n        return this.m_lowerAngle;\r\n    }\r\n    GetUpperLimit() {\r\n        return this.m_upperAngle;\r\n    }\r\n    SetLimits(lower, upper) {\r\n        if (lower !== this.m_lowerAngle || upper !== this.m_upperAngle) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_impulse.z = 0;\r\n            this.m_lowerAngle = lower;\r\n            this.m_upperAngle = upper;\r\n        }\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        if (this.m_motorSpeed !== speed) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_motorSpeed = speed;\r\n        }\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2RevoluteJointDef = new b2RevoluteJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.lowerAngle = %.15f;\\n\", this.m_lowerAngle);\r\n        log(\"  jd.upperAngle = %.15f;\\n\", this.m_upperAngle);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2RevoluteJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_impulse_v3 = new b2Vec3();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolvePositionConstraints_s_C_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolvePositionConstraints_s_impulse = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxLinearCorrection } from \"../../Common/b2Settings\";\r\nimport { b2Min, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Rope joint definition. This requires two body anchor points and\r\n/// a maximum lengths.\r\n/// Note: by default the connected objects will not collide.\r\n/// see collideConnected in b2JointDef.\r\nexport class b2RopeJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_ropeJoint);\r\n        this.localAnchorA = new b2Vec2(-1, 0);\r\n        this.localAnchorB = new b2Vec2(1, 0);\r\n        this.maxLength = 0;\r\n    }\r\n}\r\nexport class b2RopeJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_maxLength = 0;\r\n        this.m_length = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_u = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_state = b2LimitState.e_inactiveLimit;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_maxLength = def.maxLength;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // this.m_rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // this.m_rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // this.m_u = cB + this.m_rB - cA - this.m_rA;\r\n        this.m_u.Copy(cB).SelfAdd(this.m_rB).SelfSub(cA).SelfSub(this.m_rA);\r\n        this.m_length = this.m_u.Length();\r\n        const C = this.m_length - this.m_maxLength;\r\n        if (C > 0) {\r\n            this.m_state = b2LimitState.e_atUpperLimit;\r\n        }\r\n        else {\r\n            this.m_state = b2LimitState.e_inactiveLimit;\r\n        }\r\n        if (this.m_length > b2_linearSlop) {\r\n            this.m_u.SelfMul(1 / this.m_length);\r\n        }\r\n        else {\r\n            this.m_u.SetZero();\r\n            this.m_mass = 0;\r\n            this.m_impulse = 0;\r\n            return;\r\n        }\r\n        // Compute effective mass.\r\n        const crA = b2Vec2.CrossVV(this.m_rA, this.m_u);\r\n        const crB = b2Vec2.CrossVV(this.m_rB, this.m_u);\r\n        const invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB + this.m_invIB * crB * crB;\r\n        this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        if (data.step.warmStarting) {\r\n            // Scale the impulse to support a variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_u;\r\n            const P = b2Vec2.MulSV(this.m_impulse, this.m_u, b2RopeJoint.InitVelocityConstraints_s_P);\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Cdot = dot(u, v + cross(w, r))\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2RopeJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2RopeJoint.SolveVelocityConstraints_s_vpB);\r\n        // float32 C = m_length - m_maxLength;\r\n        const C = this.m_length - this.m_maxLength;\r\n        // float32 Cdot = b2Dot(m_u, vpB - vpA);\r\n        let Cdot = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\r\n        // Predictive constraint.\r\n        if (C < 0) {\r\n            Cdot += data.step.inv_dt * C;\r\n        }\r\n        let impulse = -this.m_mass * Cdot;\r\n        const oldImpulse = this.m_impulse;\r\n        this.m_impulse = b2Min(0, this.m_impulse + impulse);\r\n        impulse = this.m_impulse - oldImpulse;\r\n        // b2Vec2 P = impulse * m_u;\r\n        const P = b2Vec2.MulSV(impulse, this.m_u, b2RopeJoint.SolveVelocityConstraints_s_P);\r\n        // vA -= m_invMassA * P;\r\n        vA.SelfMulSub(this.m_invMassA, P);\r\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n        // vB += m_invMassB * P;\r\n        vB.SelfMulAdd(this.m_invMassB, P);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 u = cB + rB - cA - rA;\r\n        const u = this.m_u.Copy(cB).SelfAdd(rB).SelfSub(cA).SelfSub(rA);\r\n        const length = u.Normalize();\r\n        let C = length - this.m_maxLength;\r\n        C = b2Clamp(C, 0, b2_maxLinearCorrection);\r\n        const impulse = -this.m_mass * C;\r\n        // b2Vec2 P = impulse * u;\r\n        const P = b2Vec2.MulSV(impulse, u, b2RopeJoint.SolvePositionConstraints_s_P);\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return length - this.m_maxLength < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        const F = b2Vec2.MulSV((inv_dt * this.m_impulse), this.m_u, out);\r\n        return F;\r\n        // return out.Set(inv_dt * this.m_linearImpulse.x, inv_dt * this.m_linearImpulse.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetMaxLength(length) { this.m_maxLength = length; }\r\n    GetMaxLength() {\r\n        return this.m_maxLength;\r\n    }\r\n    GetLimitState() {\r\n        return this.m_state;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2RopeJointDef = new b2RopeJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.maxLength = %.15f;\\n\", this.m_maxLength);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2RopeJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2RopeJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_linearSlop, b2_angularSlop } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Vec2, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Weld joint definition. You need to specify local anchor points\r\n/// where they are attached and the relative body angle. The position\r\n/// of the anchor points is important for computing the reaction torque.\r\nexport class b2WeldJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_weldJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.referenceAngle = 0;\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2WeldJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_bias = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_referenceAngle = 0;\r\n        this.m_gamma = 0;\r\n        this.m_impulse = new b2Vec3(0, 0, 0);\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = new b2Mat33();\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat33();\r\n        this.m_frequencyHz = def.frequencyHz;\r\n        this.m_dampingRatio = def.dampingRatio;\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_referenceAngle = def.referenceAngle;\r\n        this.m_impulse.SetZero();\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\r\n        K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\r\n        K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\r\n        K.ex.y = K.ey.x;\r\n        K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\r\n        K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\r\n        K.ex.z = K.ez.x;\r\n        K.ey.z = K.ez.y;\r\n        K.ez.z = iA + iB;\r\n        if (this.m_frequencyHz > 0) {\r\n            K.GetInverse22(this.m_mass);\r\n            let invM = iA + iB;\r\n            const m = invM > 0 ? 1 / invM : 0;\r\n            const C = aB - aA - this.m_referenceAngle;\r\n            // Frequency\r\n            const omega = 2 * b2_pi * this.m_frequencyHz;\r\n            // Damping coefficient\r\n            const d = 2 * m * this.m_dampingRatio * omega;\r\n            // Spring stiffness\r\n            const k = m * omega * omega;\r\n            // magic formulas\r\n            const h = data.step.dt;\r\n            this.m_gamma = h * (d + h * k);\r\n            this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\r\n            this.m_bias = C * h * k * this.m_gamma;\r\n            invM += this.m_gamma;\r\n            this.m_mass.ez.z = invM !== 0 ? 1 / invM : 0;\r\n        }\r\n        else {\r\n            K.GetSymInverse33(this.m_mass);\r\n            this.m_gamma = 0;\r\n            this.m_bias = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            // b2Vec2 P(m_impulse.x, m_impulse.y);\r\n            const P = b2WeldJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_impulse.z);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        if (this.m_frequencyHz > 0) {\r\n            const Cdot2 = wB - wA;\r\n            const impulse2 = -this.m_mass.ez.z * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z);\r\n            this.m_impulse.z += impulse2;\r\n            wA -= iA * impulse2;\r\n            wB += iB * impulse2;\r\n            // b2Vec2 Cdot1 = vB + b2Vec2.CrossSV(wB, this.m_rB) - vA - b2Vec2.CrossSV(wA, this.m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\r\n            // b2Vec2 impulse1 = -b2Mul22(m_mass, Cdot1);\r\n            const impulse1 = b2Mat33.MulM33XY(this.m_mass, Cdot1.x, Cdot1.y, b2WeldJoint.SolveVelocityConstraints_s_impulse1).SelfNeg();\r\n            this.m_impulse.x += impulse1.x;\r\n            this.m_impulse.y += impulse1.y;\r\n            // b2Vec2 P = impulse1;\r\n            const P = impulse1;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            // wA -= iA * b2Cross(m_rA, P);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            // wB += iB * b2Cross(m_rB, P);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            // b2Vec2 Cdot1 = vB + b2Cross(wB, this.m_rB) - vA - b2Cross(wA, this.m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\r\n            const Cdot2 = wB - wA;\r\n            // b2Vec3 const Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 impulse = -b2Mul(m_mass, Cdot);\r\n            const impulse = b2Mat33.MulM33XYZ(this.m_mass, Cdot1.x, Cdot1.y, Cdot2, b2WeldJoint.SolveVelocityConstraints_s_impulse).SelfNeg();\r\n            this.m_impulse.SelfAdd(impulse);\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2WeldJoint.SolveVelocityConstraints_s_P.Set(impulse.x, impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        let positionError, angularError;\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\r\n        K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\r\n        K.ez.x = -rA.y * iA - rB.y * iB;\r\n        K.ex.y = K.ey.x;\r\n        K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\r\n        K.ez.y = rA.x * iA + rB.x * iB;\r\n        K.ex.z = K.ez.x;\r\n        K.ey.z = K.ez.y;\r\n        K.ez.z = iA + iB;\r\n        if (this.m_frequencyHz > 0) {\r\n            // b2Vec2 C1 =  cB + rB - cA - rA;\r\n            const C1 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WeldJoint.SolvePositionConstraints_s_C1);\r\n            positionError = C1.Length();\r\n            angularError = 0;\r\n            // b2Vec2 P = -K.Solve22(C1);\r\n            const P = K.Solve22(C1.x, C1.y, b2WeldJoint.SolvePositionConstraints_s_P).SelfNeg();\r\n            // cA -= mA * P;\r\n            cA.SelfMulSub(mA, P);\r\n            aA -= iA * b2Vec2.CrossVV(rA, P);\r\n            // cB += mB * P;\r\n            cB.SelfMulAdd(mB, P);\r\n            aB += iB * b2Vec2.CrossVV(rB, P);\r\n        }\r\n        else {\r\n            // b2Vec2 C1 =  cB + rB - cA - rA;\r\n            const C1 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WeldJoint.SolvePositionConstraints_s_C1);\r\n            const C2 = aB - aA - this.m_referenceAngle;\r\n            positionError = C1.Length();\r\n            angularError = b2Abs(C2);\r\n            // b2Vec3 C(C1.x, C1.y, C2);\r\n            // b2Vec3 impulse = -K.Solve33(C);\r\n            const impulse = K.Solve33(C1.x, C1.y, C2, b2WeldJoint.SolvePositionConstraints_s_impulse).SelfNeg();\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2WeldJoint.SolvePositionConstraints_s_P.Set(impulse.x, impulse.y);\r\n            // cA -= mA * P;\r\n            cA.SelfMulSub(mA, P);\r\n            aA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\r\n            // cB += mB * P;\r\n            cB.SelfMulAdd(mB, P);\r\n            aB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\r\n        }\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\r\n        // return inv_dt * P;\r\n        return out.Set(inv_dt * this.m_impulse.x, inv_dt * this.m_impulse.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.z;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    SetFrequency(hz) { this.m_frequencyHz = hz; }\r\n    GetFrequency() { return this.m_frequencyHz; }\r\n    SetDampingRatio(ratio) { this.m_dampingRatio = ratio; }\r\n    GetDampingRatio() { return this.m_dampingRatio; }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2WeldJointDef = new b2WeldJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2WeldJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_impulse1 = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_impulse = new b2Vec3();\r\nb2WeldJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_C1 = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_impulse = new b2Vec3();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Wheel joint definition. This requires defining a line of\r\n/// motion using an axis and an anchor point. The definition uses local\r\n/// anchor points and a local axis so that the initial configuration\r\n/// can violate the constraint slightly. The joint translation is zero\r\n/// when the local anchor points coincide in world space. Using local\r\n/// anchors and a local axis helps when saving and loading a game.\r\nexport class b2WheelJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_wheelJoint);\r\n        this.localAnchorA = new b2Vec2(0, 0);\r\n        this.localAnchorB = new b2Vec2(0, 0);\r\n        this.localAxisA = new b2Vec2(1, 0);\r\n        this.enableMotor = false;\r\n        this.maxMotorTorque = 0;\r\n        this.motorSpeed = 0;\r\n        this.frequencyHz = 2;\r\n        this.dampingRatio = 0.7;\r\n    }\r\n    Initialize(bA, bB, anchor, axis) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.bodyA.GetLocalVector(axis, this.localAxisA);\r\n    }\r\n}\r\nexport class b2WheelJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localXAxisA = new b2Vec2();\r\n        this.m_localYAxisA = new b2Vec2();\r\n        this.m_impulse = 0;\r\n        this.m_motorImpulse = 0;\r\n        this.m_springImpulse = 0;\r\n        this.m_maxMotorTorque = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableMotor = false;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_ax = new b2Vec2();\r\n        this.m_ay = new b2Vec2();\r\n        this.m_sAx = 0;\r\n        this.m_sBx = 0;\r\n        this.m_sAy = 0;\r\n        this.m_sBy = 0;\r\n        this.m_mass = 0;\r\n        this.m_motorMass = 0;\r\n        this.m_springMass = 0;\r\n        this.m_bias = 0;\r\n        this.m_gamma = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_frequencyHz = def.frequencyHz;\r\n        this.m_dampingRatio = def.dampingRatio;\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_localXAxisA.Copy(def.localAxisA);\r\n        b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\r\n        this.m_maxMotorTorque = def.maxMotorTorque;\r\n        this.m_motorSpeed = def.motorSpeed;\r\n        this.m_enableMotor = def.enableMotor;\r\n        this.m_ax.SetZero();\r\n        this.m_ay.SetZero();\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    GetMaxMotorTorque() {\r\n        return this.m_maxMotorTorque;\r\n    }\r\n    SetSpringFrequencyHz(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetSpringFrequencyHz() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetSpringDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetSpringDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective masses.\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = cB + rB - cA - rA;\r\n        const d = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WheelJoint.InitVelocityConstraints_s_d);\r\n        // Point to line constraint\r\n        {\r\n            // m_ay = b2Mul(qA, m_localYAxisA);\r\n            b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\r\n            // m_sAy = b2Cross(d + rA, m_ay);\r\n            this.m_sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ay);\r\n            // m_sBy = b2Cross(rB, m_ay);\r\n            this.m_sBy = b2Vec2.CrossVV(rB, this.m_ay);\r\n            this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy * this.m_sBy;\r\n            if (this.m_mass > 0) {\r\n                this.m_mass = 1 / this.m_mass;\r\n            }\r\n        }\r\n        // Spring constraint\r\n        this.m_springMass = 0;\r\n        this.m_bias = 0;\r\n        this.m_gamma = 0;\r\n        if (this.m_frequencyHz > 0) {\r\n            // m_ax = b2Mul(qA, m_localXAxisA);\r\n            b2Rot.MulRV(qA, this.m_localXAxisA, this.m_ax);\r\n            // m_sAx = b2Cross(d + rA, m_ax);\r\n            this.m_sAx = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ax);\r\n            // m_sBx = b2Cross(rB, m_ax);\r\n            this.m_sBx = b2Vec2.CrossVV(rB, this.m_ax);\r\n            const invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx * this.m_sBx;\r\n            if (invMass > 0) {\r\n                this.m_springMass = 1 / invMass;\r\n                const C = b2Vec2.DotVV(d, this.m_ax);\r\n                // Frequency\r\n                const omega = 2 * b2_pi * this.m_frequencyHz;\r\n                // Damping coefficient\r\n                const dc = 2 * this.m_springMass * this.m_dampingRatio * omega;\r\n                // Spring stiffness\r\n                const k = this.m_springMass * omega * omega;\r\n                // magic formulas\r\n                const h = data.step.dt;\r\n                this.m_gamma = h * (dc + h * k);\r\n                if (this.m_gamma > 0) {\r\n                    this.m_gamma = 1 / this.m_gamma;\r\n                }\r\n                this.m_bias = C * h * k * this.m_gamma;\r\n                this.m_springMass = invMass + this.m_gamma;\r\n                if (this.m_springMass > 0) {\r\n                    this.m_springMass = 1 / this.m_springMass;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.m_springImpulse = 0;\r\n        }\r\n        // Rotational motor\r\n        if (this.m_enableMotor) {\r\n            this.m_motorMass = iA + iB;\r\n            if (this.m_motorMass > 0) {\r\n                this.m_motorMass = 1 / this.m_motorMass;\r\n            }\r\n        }\r\n        else {\r\n            this.m_motorMass = 0;\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Account for variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            this.m_springImpulse *= data.step.dtRatio;\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_ay + m_springImpulse * m_ax;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(this.m_impulse, this.m_ay, b2Vec2.s_t0), b2Vec2.MulSV(this.m_springImpulse, this.m_ax, b2Vec2.s_t1), b2WheelJoint.InitVelocityConstraints_s_P);\r\n            // float32 LA = m_impulse * m_sAy + m_springImpulse * m_sAx + m_motorImpulse;\r\n            const LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\r\n            // float32 LB = m_impulse * m_sBy + m_springImpulse * m_sBx + m_motorImpulse;\r\n            const LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            wA -= this.m_invIA * LA;\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            wB += this.m_invIB * LB;\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n            this.m_springImpulse = 0;\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Solve spring constraint\r\n        {\r\n            const Cdot = b2Vec2.DotVV(this.m_ax, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBx * wB - this.m_sAx * wA;\r\n            const impulse = -this.m_springMass * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse);\r\n            this.m_springImpulse += impulse;\r\n            // b2Vec2 P = impulse * m_ax;\r\n            const P = b2Vec2.MulSV(impulse, this.m_ax, b2WheelJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_sAx;\r\n            const LB = impulse * this.m_sBx;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // Solve rotational motor constraint\r\n        {\r\n            const Cdot = wB - wA - this.m_motorSpeed;\r\n            let impulse = -this.m_motorMass * Cdot;\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorTorque;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve point to line constraint\r\n        {\r\n            const Cdot = b2Vec2.DotVV(this.m_ay, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBy * wB - this.m_sAy * wA;\r\n            const impulse = -this.m_mass * Cdot;\r\n            this.m_impulse += impulse;\r\n            // b2Vec2 P = impulse * m_ay;\r\n            const P = b2Vec2.MulSV(impulse, this.m_ay, b2WheelJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_sAy;\r\n            const LB = impulse * this.m_sBy;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = (cB - cA) + rB - rA;\r\n        const d = b2Vec2.AddVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), b2Vec2.SubVV(rB, rA, b2Vec2.s_t1), b2WheelJoint.SolvePositionConstraints_s_d);\r\n        // b2Vec2 ay = b2Mul(qA, m_localYAxisA);\r\n        const ay = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\r\n        // float32 sAy = b2Cross(d + rA, ay);\r\n        const sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), ay);\r\n        // float32 sBy = b2Cross(rB, ay);\r\n        const sBy = b2Vec2.CrossVV(rB, ay);\r\n        // float32 C = b2Dot(d, ay);\r\n        const C = b2Vec2.DotVV(d, this.m_ay);\r\n        const k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy;\r\n        let impulse;\r\n        if (k !== 0) {\r\n            impulse = -C / k;\r\n        }\r\n        else {\r\n            impulse = 0;\r\n        }\r\n        // b2Vec2 P = impulse * ay;\r\n        const P = b2Vec2.MulSV(impulse, ay, b2WheelJoint.SolvePositionConstraints_s_P);\r\n        const LA = impulse * sAy;\r\n        const LB = impulse * sBy;\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        aA -= this.m_invIA * LA;\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        aB += this.m_invIB * LB;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return b2Abs(C) <= b2_linearSlop;\r\n    }\r\n    GetDefinition(def) {\r\n        ///b2Assert(false); // TODO\r\n        return def;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * (m_impulse * m_ay + m_springImpulse * m_ax);\r\n        out.x = inv_dt * (this.m_impulse * this.m_ay.x + this.m_springImpulse * this.m_ax.x);\r\n        out.y = inv_dt * (this.m_impulse * this.m_ay.y + this.m_springImpulse * this.m_ax.y);\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetLocalAxisA() { return this.m_localXAxisA; }\r\n    GetJointTranslation() {\r\n        return this.GetPrismaticJointTranslation();\r\n    }\r\n    GetJointSpeed() {\r\n        return this.GetRevoluteJointSpeed();\r\n    }\r\n    GetPrismaticJointTranslation() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        const pA = bA.GetWorldPoint(this.m_localAnchorA, new b2Vec2());\r\n        const pB = bB.GetWorldPoint(this.m_localAnchorB, new b2Vec2());\r\n        const d = b2Vec2.SubVV(pB, pA, new b2Vec2());\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\r\n        const translation = b2Vec2.DotVV(d, axis);\r\n        return translation;\r\n    }\r\n    GetPrismaticJointSpeed() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 pA = bA->m_sweep.c + rA;\r\n        const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\r\n        // b2Vec2 pB = bB->m_sweep.c + rB;\r\n        const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\r\n        // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\r\n        const vA = bA.m_linearVelocity;\r\n        const vB = bB.m_linearVelocity;\r\n        const wA = bA.m_angularVelocity;\r\n        const wB = bB.m_angularVelocity;\r\n        // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\r\n        const speed = b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(axis, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n        return speed;\r\n    }\r\n    GetRevoluteJointAngle() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_sweep.a - bA->this.m_sweep.a;\r\n        return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a;\r\n    }\r\n    GetRevoluteJointSpeed() {\r\n        const wA = this.m_bodyA.m_angularVelocity;\r\n        const wB = this.m_bodyB.m_angularVelocity;\r\n        return wB - wA;\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_enableMotor = flag;\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_motorSpeed = speed;\r\n    }\r\n    SetMaxMotorTorque(force) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_maxMotorTorque = force;\r\n    }\r\n    GetMotorTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2WheelJointDef = new b2WheelJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2WheelJoint.InitVelocityConstraints_s_d = new b2Vec2();\r\nb2WheelJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2WheelJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2WheelJoint.SolvePositionConstraints_s_d = new b2Vec2();\r\nb2WheelJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","import { b2JointType } from \"./b2Joint\";\r\nimport { b2AreaJoint } from \"./b2AreaJoint\";\r\nimport { b2DistanceJoint } from \"./b2DistanceJoint\";\r\nimport { b2FrictionJoint } from \"./b2FrictionJoint\";\r\nimport { b2GearJoint } from \"./b2GearJoint\";\r\nimport { b2MotorJoint } from \"./b2MotorJoint\";\r\nimport { b2MouseJoint } from \"./b2MouseJoint\";\r\nimport { b2PrismaticJoint } from \"./b2PrismaticJoint\";\r\nimport { b2PulleyJoint } from \"./b2PulleyJoint\";\r\nimport { b2RevoluteJoint } from \"./b2RevoluteJoint\";\r\nimport { b2RopeJoint } from \"./b2RopeJoint\";\r\nimport { b2WeldJoint } from \"./b2WeldJoint\";\r\nimport { b2WheelJoint } from \"./b2WheelJoint\";\r\nexport class b2JointFactory {\r\n    static Create(def, allocator) {\r\n        let joint = null;\r\n        switch (def.type) {\r\n            case b2JointType.e_distanceJoint:\r\n                joint = new b2DistanceJoint(def);\r\n                break;\r\n            case b2JointType.e_mouseJoint:\r\n                joint = new b2MouseJoint(def);\r\n                break;\r\n            case b2JointType.e_prismaticJoint:\r\n                joint = new b2PrismaticJoint(def);\r\n                break;\r\n            case b2JointType.e_revoluteJoint:\r\n                joint = new b2RevoluteJoint(def);\r\n                break;\r\n            case b2JointType.e_pulleyJoint:\r\n                joint = new b2PulleyJoint(def);\r\n                break;\r\n            case b2JointType.e_gearJoint:\r\n                joint = new b2GearJoint(def);\r\n                break;\r\n            case b2JointType.e_wheelJoint:\r\n                joint = new b2WheelJoint(def);\r\n                break;\r\n            case b2JointType.e_weldJoint:\r\n                joint = new b2WeldJoint(def);\r\n                break;\r\n            case b2JointType.e_frictionJoint:\r\n                joint = new b2FrictionJoint(def);\r\n                break;\r\n            case b2JointType.e_ropeJoint:\r\n                joint = new b2RopeJoint(def);\r\n                break;\r\n            case b2JointType.e_motorJoint:\r\n                joint = new b2MotorJoint(def);\r\n                break;\r\n            case b2JointType.e_areaJoint:\r\n                joint = new b2AreaJoint(def);\r\n                break;\r\n            default:\r\n                ///b2Assert(false);\r\n                break;\r\n        }\r\n        return joint;\r\n    }\r\n    static Destroy(joint, allocator) {\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJKb2ludEZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9Cb3gyRC9Cb3gyRC9EeW5hbWljcy9Kb2ludHMvYjJKb2ludEZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDN0QsT0FBTyxFQUFFLFdBQVcsRUFBa0IsTUFBTSxlQUFlLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBc0IsTUFBTSxtQkFBbUIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsZUFBZSxFQUFzQixNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxXQUFXLEVBQWtCLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxZQUFZLEVBQW1CLE1BQU0sZ0JBQWdCLENBQUM7QUFDL0QsT0FBTyxFQUFFLFlBQVksRUFBbUIsTUFBTSxnQkFBZ0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQXVCLE1BQU0sb0JBQW9CLENBQUM7QUFDM0UsT0FBTyxFQUFFLGFBQWEsRUFBb0IsTUFBTSxpQkFBaUIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZUFBZSxFQUFzQixNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxXQUFXLEVBQWtCLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxXQUFXLEVBQWtCLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxZQUFZLEVBQW1CLE1BQU0sZ0JBQWdCLENBQUM7QUFFL0QsTUFBTTtJQUNHLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBZSxFQUFFLFNBQWM7UUFDbEQsSUFBSSxLQUFLLEdBQVksSUFBSSxDQUFDO1FBRTFCLFFBQVEsR0FBRyxDQUFDLElBQUksRUFBRTtZQUNsQixLQUFLLFdBQVcsQ0FBQyxlQUFlO2dCQUM5QixLQUFLLEdBQUcsSUFBSSxlQUFlLENBQXNCLEdBQUcsQ0FBQyxDQUFDO2dCQUN0RCxNQUFNO1lBRVIsS0FBSyxXQUFXLENBQUMsWUFBWTtnQkFDM0IsS0FBSyxHQUFHLElBQUksWUFBWSxDQUFtQixHQUFHLENBQUMsQ0FBQztnQkFDaEQsTUFBTTtZQUVSLEtBQUssV0FBVyxDQUFDLGdCQUFnQjtnQkFDL0IsS0FBSyxHQUFHLElBQUksZ0JBQWdCLENBQXVCLEdBQUcsQ0FBQyxDQUFDO2dCQUN4RCxNQUFNO1lBRVIsS0FBSyxXQUFXLENBQUMsZUFBZTtnQkFDOUIsS0FBSyxHQUFHLElBQUksZUFBZSxDQUFzQixHQUFHLENBQUMsQ0FBQztnQkFDdEQsTUFBTTtZQUVSLEtBQUssV0FBVyxDQUFDLGFBQWE7Z0JBQzVCLEtBQUssR0FBRyxJQUFJLGFBQWEsQ0FBb0IsR0FBRyxDQUFDLENBQUM7Z0JBQ2xELE1BQU07WUFFUixLQUFLLFdBQVcsQ0FBQyxXQUFXO2dCQUMxQixLQUFLLEdBQUcsSUFBSSxXQUFXLENBQWtCLEdBQUcsQ0FBQyxDQUFDO2dCQUM5QyxNQUFNO1lBRVIsS0FBSyxXQUFXLENBQUMsWUFBWTtnQkFDM0IsS0FBSyxHQUFHLElBQUksWUFBWSxDQUFtQixHQUFHLENBQUMsQ0FBQztnQkFDaEQsTUFBTTtZQUVSLEtBQUssV0FBVyxDQUFDLFdBQVc7Z0JBQzFCLEtBQUssR0FBRyxJQUFJLFdBQVcsQ0FBa0IsR0FBRyxDQUFDLENBQUM7Z0JBQzlDLE1BQU07WUFFUixLQUFLLFdBQVcsQ0FBQyxlQUFlO2dCQUM5QixLQUFLLEdBQUcsSUFBSSxlQUFlLENBQXNCLEdBQUcsQ0FBQyxDQUFDO2dCQUN0RCxNQUFNO1lBRVIsS0FBSyxXQUFXLENBQUMsV0FBVztnQkFDMUIsS0FBSyxHQUFHLElBQUksV0FBVyxDQUFrQixHQUFHLENBQUMsQ0FBQztnQkFDOUMsTUFBTTtZQUVSLEtBQUssV0FBVyxDQUFDLFlBQVk7Z0JBQzNCLEtBQUssR0FBRyxJQUFJLFlBQVksQ0FBbUIsR0FBRyxDQUFDLENBQUM7Z0JBQ2hELE1BQU07WUFFUixLQUFLLFdBQVcsQ0FBQyxXQUFXO2dCQUMxQixLQUFLLEdBQUcsSUFBSSxXQUFXLENBQWtCLEdBQUcsQ0FBQyxDQUFDO2dCQUM5QyxNQUFNO1lBRVI7Z0JBQ0UsbUJBQW1CO2dCQUNuQixNQUFNO1NBQ1A7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQWMsRUFBRSxTQUFjO0lBQ3BELENBQUM7Q0FDRiJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2Sqrt } from \"../../Common/b2Math\";\r\nimport { b2Manifold } from \"../../Collision/b2Collision\";\r\nimport { b2TestOverlapShape } from \"../../Collision/b2Collision\";\r\nimport { b2TimeOfImpact, b2TOIInput, b2TOIOutput } from \"../../Collision/b2TimeOfImpact\";\r\n/// Friction mixing law. The idea is to allow either fixture to drive the restitution to zero.\r\n/// For example, anything slides on ice.\r\nexport function b2MixFriction(friction1, friction2) {\r\n    return b2Sqrt(friction1 * friction2);\r\n}\r\n/// Restitution mixing law. The idea is allow for anything to bounce off an inelastic surface.\r\n/// For example, a superball bounces on anything.\r\nexport function b2MixRestitution(restitution1, restitution2) {\r\n    return restitution1 > restitution2 ? restitution1 : restitution2;\r\n}\r\nexport class b2ContactEdge {\r\n    constructor() {\r\n        this.other = null; ///< provides quick access to the other body attached.\r\n        this.contact = null; ///< the contact\r\n        this.prev = null; ///< the previous contact edge in the body's contact list\r\n        this.next = null; ///< the next contact edge in the body's contact list\r\n    }\r\n}\r\nexport class b2Contact {\r\n    constructor() {\r\n        this.m_islandFlag = false; /// Used when crawling contact graph when forming islands.\r\n        this.m_touchingFlag = false; /// Set when the shapes are touching.\r\n        this.m_enabledFlag = false; /// This contact can be disabled (by user)\r\n        this.m_filterFlag = false; /// This contact needs filtering because a fixture filter was changed.\r\n        this.m_bulletHitFlag = false; /// This bullet contact had a TOI event\r\n        this.m_toiFlag = false; /// This contact has a valid TOI in m_toi\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_nodeA = new b2ContactEdge();\r\n        this.m_nodeB = new b2ContactEdge();\r\n        this.m_fixtureA = null;\r\n        this.m_fixtureB = null;\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_manifold = new b2Manifold();\r\n        this.m_toiCount = 0;\r\n        this.m_toi = 0;\r\n        this.m_friction = 0;\r\n        this.m_restitution = 0;\r\n        this.m_tangentSpeed = 0;\r\n        this.m_oldManifold = new b2Manifold();\r\n    }\r\n    GetManifold() {\r\n        return this.m_manifold;\r\n    }\r\n    GetWorldManifold(worldManifold) {\r\n        const bodyA = this.m_fixtureA.GetBody();\r\n        const bodyB = this.m_fixtureB.GetBody();\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        worldManifold.Initialize(this.m_manifold, bodyA.GetTransform(), shapeA.m_radius, bodyB.GetTransform(), shapeB.m_radius);\r\n    }\r\n    IsTouching() {\r\n        return this.m_touchingFlag;\r\n    }\r\n    SetEnabled(flag) {\r\n        this.m_enabledFlag = flag;\r\n    }\r\n    IsEnabled() {\r\n        return this.m_enabledFlag;\r\n    }\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    GetFixtureA() {\r\n        return this.m_fixtureA;\r\n    }\r\n    GetChildIndexA() {\r\n        return this.m_indexA;\r\n    }\r\n    GetFixtureB() {\r\n        return this.m_fixtureB;\r\n    }\r\n    GetChildIndexB() {\r\n        return this.m_indexB;\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n    }\r\n    FlagForFiltering() {\r\n        this.m_filterFlag = true;\r\n    }\r\n    SetFriction(friction) {\r\n        this.m_friction = friction;\r\n    }\r\n    GetFriction() {\r\n        return this.m_friction;\r\n    }\r\n    ResetFriction() {\r\n        this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\r\n    }\r\n    SetRestitution(restitution) {\r\n        this.m_restitution = restitution;\r\n    }\r\n    GetRestitution() {\r\n        return this.m_restitution;\r\n    }\r\n    ResetRestitution() {\r\n        this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\r\n    }\r\n    SetTangentSpeed(speed) {\r\n        this.m_tangentSpeed = speed;\r\n    }\r\n    GetTangentSpeed() {\r\n        return this.m_tangentSpeed;\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        this.m_islandFlag = false;\r\n        this.m_touchingFlag = false;\r\n        this.m_enabledFlag = true;\r\n        this.m_filterFlag = false;\r\n        this.m_bulletHitFlag = false;\r\n        this.m_toiFlag = false;\r\n        this.m_fixtureA = fixtureA;\r\n        this.m_fixtureB = fixtureB;\r\n        this.m_indexA = indexA;\r\n        this.m_indexB = indexB;\r\n        this.m_manifold.pointCount = 0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_nodeA.contact = null;\r\n        this.m_nodeA.prev = null;\r\n        this.m_nodeA.next = null;\r\n        this.m_nodeA.other = null;\r\n        this.m_nodeB.contact = null;\r\n        this.m_nodeB.prev = null;\r\n        this.m_nodeB.next = null;\r\n        this.m_nodeB.other = null;\r\n        this.m_toiCount = 0;\r\n        this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\r\n        this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\r\n    }\r\n    Update(listener) {\r\n        const tManifold = this.m_oldManifold;\r\n        this.m_oldManifold = this.m_manifold;\r\n        this.m_manifold = tManifold;\r\n        // Re-enable this contact.\r\n        this.m_enabledFlag = true;\r\n        let touching = false;\r\n        const wasTouching = this.m_touchingFlag;\r\n        const sensorA = this.m_fixtureA.IsSensor();\r\n        const sensorB = this.m_fixtureB.IsSensor();\r\n        const sensor = sensorA || sensorB;\r\n        const bodyA = this.m_fixtureA.GetBody();\r\n        const bodyB = this.m_fixtureB.GetBody();\r\n        const xfA = bodyA.GetTransform();\r\n        const xfB = bodyB.GetTransform();\r\n        ///const aabbOverlap = b2TestOverlapAABB(this.m_fixtureA.GetAABB(0), this.m_fixtureB.GetAABB(0));\r\n        // Is this contact a sensor?\r\n        if (sensor) {\r\n            ///if (aabbOverlap)\r\n            ///{\r\n            const shapeA = this.m_fixtureA.GetShape();\r\n            const shapeB = this.m_fixtureB.GetShape();\r\n            touching = b2TestOverlapShape(shapeA, this.m_indexA, shapeB, this.m_indexB, xfA, xfB);\r\n            ///}\r\n            // Sensors don't generate manifolds.\r\n            this.m_manifold.pointCount = 0;\r\n        }\r\n        else {\r\n            ///if (aabbOverlap)\r\n            ///{\r\n            this.Evaluate(this.m_manifold, xfA, xfB);\r\n            touching = this.m_manifold.pointCount > 0;\r\n            // Match old contact ids to new contact ids and copy the\r\n            // stored impulses to warm start the solver.\r\n            for (let i = 0; i < this.m_manifold.pointCount; ++i) {\r\n                const mp2 = this.m_manifold.points[i];\r\n                mp2.normalImpulse = 0;\r\n                mp2.tangentImpulse = 0;\r\n                const id2 = mp2.id;\r\n                for (let j = 0; j < this.m_oldManifold.pointCount; ++j) {\r\n                    const mp1 = this.m_oldManifold.points[j];\r\n                    if (mp1.id.key === id2.key) {\r\n                        mp2.normalImpulse = mp1.normalImpulse;\r\n                        mp2.tangentImpulse = mp1.tangentImpulse;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            ///}\r\n            ///else\r\n            ///{\r\n            ///  this.m_manifold.pointCount = 0;\r\n            ///}\r\n            if (touching !== wasTouching) {\r\n                bodyA.SetAwake(true);\r\n                bodyB.SetAwake(true);\r\n            }\r\n        }\r\n        this.m_touchingFlag = touching;\r\n        if (!wasTouching && touching && listener) {\r\n            listener.BeginContact(this);\r\n        }\r\n        if (wasTouching && !touching && listener) {\r\n            listener.EndContact(this);\r\n        }\r\n        if (!sensor && touching && listener) {\r\n            listener.PreSolve(this, this.m_oldManifold);\r\n        }\r\n    }\r\n    ComputeTOI(sweepA, sweepB) {\r\n        const input = b2Contact.ComputeTOI_s_input;\r\n        input.proxyA.SetShape(this.m_fixtureA.GetShape(), this.m_indexA);\r\n        input.proxyB.SetShape(this.m_fixtureB.GetShape(), this.m_indexB);\r\n        input.sweepA.Copy(sweepA);\r\n        input.sweepB.Copy(sweepB);\r\n        input.tMax = b2_linearSlop;\r\n        const output = b2Contact.ComputeTOI_s_output;\r\n        b2TimeOfImpact(output, input);\r\n        return output.t;\r\n    }\r\n}\r\nb2Contact.ComputeTOI_s_input = new b2TOIInput();\r\nb2Contact.ComputeTOI_s_output = new b2TOIOutput();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideCircles } from \"../../Collision/b2CollideCircle\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2CircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2CircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2CircleShape);\r\n        ///b2Assert(shapeB instanceof b2CircleShape);\r\n        b2CollideCircles(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaXJjbGVDb250YWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvRHluYW1pY3MvQ29udGFjdHMvYjJDaXJjbGVDb250YWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBR0YsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFJbkUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUd4QyxNQUFNLHNCQUF1QixTQUFRLFNBQVM7SUFDNUM7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQWM7UUFDakMsT0FBTyxJQUFJLGVBQWUsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTSxRQUFRLENBQUMsUUFBb0IsRUFBRSxHQUFnQixFQUFFLEdBQWdCO1FBQ3RFLE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCw2Q0FBNkM7UUFDN0MsNkNBQTZDO1FBQzdDLGdCQUFnQixDQUNkLFFBQVEsRUFDUSxNQUFNLEVBQUUsR0FBRyxFQUNYLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNqQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollidePolygons } from \"../../Collision/b2CollidePolygon\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2PolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2PolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2PolygonShape);\r\n        ///b2Assert(shapeB instanceof b2PolygonShape);\r\n        b2CollidePolygons(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQb2x5Z29uQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyUG9seWdvbkNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFHRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUlyRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sdUJBQXdCLFNBQVEsU0FBUztJQUM3QztRQUNFLEtBQUssRUFBRSxDQUFDO0lBQ1YsQ0FBQztJQUVNLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBYztRQUNqQyxPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFrQixFQUFFLFNBQWM7SUFDeEQsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFtQixFQUFFLE1BQWMsRUFBRSxRQUFtQixFQUFFLE1BQWM7UUFDbkYsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRU0sUUFBUSxDQUFDLFFBQW9CLEVBQUUsR0FBZ0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsOENBQThDO1FBQzlDLDhDQUE4QztRQUM5QyxpQkFBaUIsQ0FDZixRQUFRLEVBQ1MsTUFBTSxFQUFFLEdBQUcsRUFDWCxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQztDQUNGIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollidePolygonAndCircle } from \"../../Collision/b2CollideCircle\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2PolygonAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2PolygonAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        ///b2Assert(fixtureA.GetType() === b2ShapeType.e_polygonShape);\r\n        ///b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2PolygonShape);\r\n        ///b2Assert(shapeB instanceof b2CircleShape);\r\n        b2CollidePolygonAndCircle(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQb2x5Z29uQW5kQ2lyY2xlQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyUG9seWdvbkFuZENpcmNsZUNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFHRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUs1RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sZ0NBQWlDLFNBQVEsU0FBUztJQUN0RDtRQUNFLEtBQUssRUFBRSxDQUFDO0lBQ1YsQ0FBQztJQUVNLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBYztRQUNqQyxPQUFPLElBQUkseUJBQXlCLEVBQUUsQ0FBQztJQUN6QyxDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFrQixFQUFFLFNBQWM7SUFDeEQsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFtQixFQUFFLE1BQWMsRUFBRSxRQUFtQixFQUFFLE1BQWM7UUFDbkYsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNoRCwrREFBK0Q7UUFDL0QsOERBQThEO0lBQ2hFLENBQUM7SUFFTSxRQUFRLENBQUMsUUFBb0IsRUFBRSxHQUFnQixFQUFFLEdBQWdCO1FBQ3RFLE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCw4Q0FBOEM7UUFDOUMsNkNBQTZDO1FBQzdDLHlCQUF5QixDQUN2QixRQUFRLEVBQ1MsTUFBTSxFQUFFLEdBQUcsRUFDWixNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQztDQUNGIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndCircle } from \"../../Collision/b2CollideEdge\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2EdgeAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2EdgeAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        ///b2Assert(fixtureA.GetType() === b2ShapeType.e_edgeShape);\r\n        ///b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2EdgeShape);\r\n        ///b2Assert(shapeB instanceof b2CircleShape);\r\n        b2CollideEdgeAndCircle(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJFZGdlQW5kQ2lyY2xlQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyRWRnZUFuZENpcmNsZUNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFHRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUt2RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sNkJBQThCLFNBQVEsU0FBUztJQUNuRDtRQUNFLEtBQUssRUFBRSxDQUFDO0lBQ1YsQ0FBQztJQUVNLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBYztRQUNqQyxPQUFPLElBQUksc0JBQXNCLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFrQixFQUFFLFNBQWM7SUFDeEQsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFtQixFQUFFLE1BQWMsRUFBRSxRQUFtQixFQUFFLE1BQWM7UUFDbkYsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNoRCw0REFBNEQ7UUFDNUQsOERBQThEO0lBQ2hFLENBQUM7SUFFTSxRQUFRLENBQUMsUUFBb0IsRUFBRSxHQUFnQixFQUFFLEdBQWdCO1FBQ3RFLE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCwyQ0FBMkM7UUFDM0MsNkNBQTZDO1FBQzdDLHNCQUFzQixDQUNwQixRQUFRLEVBQ00sTUFBTSxFQUFFLEdBQUcsRUFDVCxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQztDQUNGIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndPolygon } from \"../../Collision/b2CollideEdge\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2EdgeAndPolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2EdgeAndPolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        ///b2Assert(fixtureA.GetType() === b2ShapeType.e_edgeShape);\r\n        ///b2Assert(fixtureB.GetType() === b2ShapeType.e_polygonShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2EdgeShape);\r\n        ///b2Assert(shapeB instanceof b2PolygonShape);\r\n        b2CollideEdgeAndPolygon(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJFZGdlQW5kUG9seWdvbkNvbnRhY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9Cb3gyRC9Cb3gyRC9EeW5hbWljcy9Db250YWN0cy9iMkVkZ2VBbmRQb2x5Z29uQ29udGFjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUdGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBS3hFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHeEMsTUFBTSw4QkFBK0IsU0FBUSxTQUFTO0lBQ3BEO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSx1QkFBdUIsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELDREQUE0RDtRQUM1RCwrREFBK0Q7SUFDakUsQ0FBQztJQUVNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELDJDQUEyQztRQUMzQyw4Q0FBOEM7UUFDOUMsdUJBQXVCLENBQ3JCLFFBQVEsRUFDTSxNQUFNLEVBQUUsR0FBRyxFQUNSLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNsQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndCircle } from \"../../Collision/b2CollideEdge\";\r\nimport { b2EdgeShape } from \"../../Collision/Shapes/b2EdgeShape\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2ChainAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2ChainAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        ///b2Assert(fixtureA.GetType() === b2ShapeType.e_chainShape);\r\n        ///b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2ChainShape);\r\n        ///b2Assert(shapeB instanceof b2CircleShape);\r\n        const chain = shapeA;\r\n        const edge = b2ChainAndCircleContact.Evaluate_s_edge;\r\n        chain.GetChildEdge(edge, this.m_indexA);\r\n        b2CollideEdgeAndCircle(manifold, edge, xfA, shapeB, xfB);\r\n    }\r\n}\r\nb2ChainAndCircleContact.Evaluate_s_edge = new b2EdgeShape();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaGFpbkFuZENpcmNsZUNvbnRhY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9Cb3gyRC9Cb3gyRC9EeW5hbWljcy9Db250YWN0cy9iMkNoYWluQW5kQ2lyY2xlQ29udGFjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUdGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBS3ZFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sOEJBQStCLFNBQVEsU0FBUztJQUNwRDtRQUNFLEtBQUssRUFBRSxDQUFDO0lBQ1YsQ0FBQztJQUVNLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBYztRQUNqQyxPQUFPLElBQUksdUJBQXVCLEVBQUUsQ0FBQztJQUN2QyxDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFrQixFQUFFLFNBQWM7SUFDeEQsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFtQixFQUFFLE1BQWMsRUFBRSxRQUFtQixFQUFFLE1BQWM7UUFDbkYsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNoRCw2REFBNkQ7UUFDN0QsOERBQThEO0lBQ2hFLENBQUM7SUFHTSxRQUFRLENBQUMsUUFBb0IsRUFBRSxHQUFnQixFQUFFLEdBQWdCO1FBQ3RFLE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCw0Q0FBNEM7UUFDNUMsNkNBQTZDO1FBQzdDLE1BQU0sS0FBSyxHQUFnQyxNQUFNLENBQUM7UUFDbEQsTUFBTSxJQUFJLEdBQWdCLHVCQUF1QixDQUFDLGVBQWUsQ0FBQztRQUNsRSxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDeEMsc0JBQXNCLENBQ3BCLFFBQVEsRUFDUixJQUFJLEVBQUUsR0FBRyxFQUNPLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNqQyxDQUFDOztBQWJjLHVDQUFlLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQyJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndPolygon } from \"../../Collision/b2CollideEdge\";\r\nimport { b2EdgeShape } from \"../../Collision/Shapes/b2EdgeShape\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2ChainAndPolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2ChainAndPolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        ///b2Assert(fixtureA.GetType() === b2ShapeType.e_chainShape);\r\n        ///b2Assert(fixtureB.GetType() === b2ShapeType.e_polygonShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2ChainShape);\r\n        ///b2Assert(shapeB instanceof b2PolygonShape);\r\n        const chain = shapeA;\r\n        const edge = b2ChainAndPolygonContact.Evaluate_s_edge;\r\n        chain.GetChildEdge(edge, this.m_indexA);\r\n        b2CollideEdgeAndPolygon(manifold, edge, xfA, shapeB, xfB);\r\n    }\r\n}\r\nb2ChainAndPolygonContact.Evaluate_s_edge = new b2EdgeShape();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaGFpbkFuZFBvbHlnb25Db250YWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvRHluYW1pY3MvQ29udGFjdHMvYjJDaGFpbkFuZFBvbHlnb25Db250YWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBR0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFJeEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBRWpFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHeEMsTUFBTSwrQkFBZ0MsU0FBUSxTQUFTO0lBQ3JEO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSx3QkFBd0IsRUFBRSxDQUFDO0lBQ3hDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELDZEQUE2RDtRQUM3RCwrREFBK0Q7SUFDakUsQ0FBQztJQUdNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELDRDQUE0QztRQUM1Qyw4Q0FBOEM7UUFDOUMsTUFBTSxLQUFLLEdBQWdDLE1BQU0sQ0FBQztRQUNsRCxNQUFNLElBQUksR0FBZ0Isd0JBQXdCLENBQUMsZUFBZSxDQUFDO1FBQ25FLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4Qyx1QkFBdUIsQ0FDckIsUUFBUSxFQUNSLElBQUksRUFBRSxHQUFHLEVBQ1EsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7O0FBYmMsd0NBQWUsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDIn0=","import { b2MakeArray } from \"../../Common/b2Settings\";\r\nimport { b2ShapeType } from \"../../Collision/Shapes/b2Shape\";\r\nimport { b2CircleContact } from \"./b2CircleContact\";\r\nimport { b2PolygonContact } from \"./b2PolygonContact\";\r\nimport { b2PolygonAndCircleContact } from \"./b2PolygonAndCircleContact\";\r\nimport { b2EdgeAndCircleContact } from \"./b2EdgeAndCircleContact\";\r\nimport { b2EdgeAndPolygonContact } from \"./b2EdgeAndPolygonContact\";\r\nimport { b2ChainAndCircleContact } from \"./b2ChainAndCircleContact\";\r\nimport { b2ChainAndPolygonContact } from \"./b2ChainAndPolygonContact\";\r\nexport class b2ContactRegister {\r\n    constructor() {\r\n        this.pool = null;\r\n        this.createFcn = null;\r\n        this.destroyFcn = null;\r\n        this.primary = false;\r\n    }\r\n}\r\nexport class b2ContactFactory {\r\n    constructor(allocator) {\r\n        this.m_allocator = null;\r\n        this.m_allocator = allocator;\r\n        this.InitializeRegisters();\r\n    }\r\n    AddType(createFcn, destroyFcn, type1, type2) {\r\n        const pool = b2MakeArray(256, (i) => createFcn(this.m_allocator)); // TODO: b2Settings\r\n        function poolCreateFcn(allocator) {\r\n            if (pool.length > 0) {\r\n                return pool.pop();\r\n            }\r\n            return createFcn(allocator);\r\n        }\r\n        function poolDestroyFcn(contact, allocator) {\r\n            pool.push(contact);\r\n        }\r\n        this.m_registers[type1][type2].pool = pool;\r\n        this.m_registers[type1][type2].createFcn = poolCreateFcn;\r\n        this.m_registers[type1][type2].destroyFcn = poolDestroyFcn;\r\n        this.m_registers[type1][type2].primary = true;\r\n        if (type1 !== type2) {\r\n            this.m_registers[type2][type1].pool = pool;\r\n            this.m_registers[type2][type1].createFcn = poolCreateFcn;\r\n            this.m_registers[type2][type1].destroyFcn = poolDestroyFcn;\r\n            this.m_registers[type2][type1].primary = false;\r\n        }\r\n        /*\r\n        this.m_registers[type1][type2].createFcn = createFcn;\r\n        this.m_registers[type1][type2].destroyFcn = destroyFcn;\r\n        this.m_registers[type1][type2].primary = true;\r\n    \r\n        if (type1 !== type2) {\r\n          this.m_registers[type2][type1].createFcn = createFcn;\r\n          this.m_registers[type2][type1].destroyFcn = destroyFcn;\r\n          this.m_registers[type2][type1].primary = false;\r\n        }\r\n        */\r\n    }\r\n    InitializeRegisters() {\r\n        this.m_registers = [ /*b2ShapeType.e_shapeTypeCount*/];\r\n        for (let i = 0; i < b2ShapeType.e_shapeTypeCount; i++) {\r\n            this.m_registers[i] = [ /*b2ShapeType.e_shapeTypeCount*/];\r\n            for (let j = 0; j < b2ShapeType.e_shapeTypeCount; j++) {\r\n                this.m_registers[i][j] = new b2ContactRegister();\r\n            }\r\n        }\r\n        this.AddType(b2CircleContact.Create, b2CircleContact.Destroy, b2ShapeType.e_circleShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2PolygonAndCircleContact.Create, b2PolygonAndCircleContact.Destroy, b2ShapeType.e_polygonShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2PolygonContact.Create, b2PolygonContact.Destroy, b2ShapeType.e_polygonShape, b2ShapeType.e_polygonShape);\r\n        this.AddType(b2EdgeAndCircleContact.Create, b2EdgeAndCircleContact.Destroy, b2ShapeType.e_edgeShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2EdgeAndPolygonContact.Create, b2EdgeAndPolygonContact.Destroy, b2ShapeType.e_edgeShape, b2ShapeType.e_polygonShape);\r\n        this.AddType(b2ChainAndCircleContact.Create, b2ChainAndCircleContact.Destroy, b2ShapeType.e_chainShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2ChainAndPolygonContact.Create, b2ChainAndPolygonContact.Destroy, b2ShapeType.e_chainShape, b2ShapeType.e_polygonShape);\r\n    }\r\n    Create(fixtureA, indexA, fixtureB, indexB) {\r\n        const type1 = fixtureA.GetType();\r\n        const type2 = fixtureB.GetType();\r\n        ///b2Assert(0 <= type1 && type1 < b2ShapeType.e_shapeTypeCount);\r\n        ///b2Assert(0 <= type2 && type2 < b2ShapeType.e_shapeTypeCount);\r\n        const reg = this.m_registers[type1][type2];\r\n        if (reg.createFcn) {\r\n            const c = reg.createFcn(this.m_allocator);\r\n            if (reg.primary) {\r\n                c.Reset(fixtureA, indexA, fixtureB, indexB);\r\n            }\r\n            else {\r\n                c.Reset(fixtureB, indexB, fixtureA, indexA);\r\n            }\r\n            return c;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    Destroy(contact) {\r\n        const fixtureA = contact.m_fixtureA;\r\n        const fixtureB = contact.m_fixtureB;\r\n        if (contact.m_manifold.pointCount > 0 &&\r\n            !fixtureA.IsSensor() &&\r\n            !fixtureB.IsSensor()) {\r\n            fixtureA.GetBody().SetAwake(true);\r\n            fixtureB.GetBody().SetAwake(true);\r\n        }\r\n        const typeA = fixtureA.GetType();\r\n        const typeB = fixtureB.GetType();\r\n        ///b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\r\n        ///b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\r\n        const reg = this.m_registers[typeA][typeB];\r\n        reg.destroyFcn(contact, this.m_allocator);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb250YWN0RmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyQ29udGFjdEZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUU3RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDdEQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDeEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFHdEUsTUFBTTtJQUFOO1FBQ1MsU0FBSSxHQUFnQixJQUFJLENBQUM7UUFDekIsY0FBUyxHQUFxQyxJQUFJLENBQUM7UUFDbkQsZUFBVSxHQUFvRCxJQUFJLENBQUM7UUFDbkUsWUFBTyxHQUFZLEtBQUssQ0FBQztJQUNsQyxDQUFDO0NBQUE7QUFFRCxNQUFNO0lBSUosWUFBWSxTQUFjO1FBSG5CLGdCQUFXLEdBQVEsSUFBSSxDQUFDO1FBSTdCLElBQUksQ0FBQyxXQUFXLEdBQUcsU0FBUyxDQUFDO1FBQzdCLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFTyxPQUFPLENBQUMsU0FBd0MsRUFBRSxVQUF3RCxFQUFFLEtBQWtCLEVBQUUsS0FBa0I7UUFDeEosTUFBTSxJQUFJLEdB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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_maxManifoldPoints, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2BodyType } from \"./b2Body\";\r\n// #endif\r\n/// Joints and fixtures are destroyed when their associated\r\n/// body is destroyed. Implement this listener so that you\r\n/// may nullify references to these joints and shapes.\r\nexport class b2DestructionListener {\r\n    /// Called when any joint is about to be destroyed due\r\n    /// to the destruction of one of its attached bodies.\r\n    SayGoodbyeJoint(joint) { }\r\n    /// Called when any fixture is about to be destroyed due\r\n    /// to the destruction of its parent body.\r\n    SayGoodbyeFixture(fixture) { }\r\n    // #if B2_ENABLE_PARTICLE\r\n    /// Called when any particle group is about to be destroyed.\r\n    SayGoodbyeParticleGroup(group) { }\r\n    /// Called when a particle is about to be destroyed.\r\n    /// The index can be used in conjunction with\r\n    /// b2ParticleSystem::GetUserDataBuffer() or\r\n    /// b2ParticleSystem::GetParticleHandleFromIndex() to determine which\r\n    /// particle has been destroyed.\r\n    SayGoodbyeParticle(system, index) { }\r\n}\r\n/// Implement this class to provide collision filtering. In other words, you can implement\r\n/// this class if you want finer control over contact creation.\r\nexport class b2ContactFilter {\r\n    /// Return true if contact calculations should be performed between these two shapes.\r\n    /// @warning for performance reasons this is only called when the AABBs begin to overlap.\r\n    ShouldCollide(fixtureA, fixtureB) {\r\n        const bodyA = fixtureA.GetBody();\r\n        const bodyB = fixtureB.GetBody();\r\n        // At least one body should be dynamic or kinematic.\r\n        if (bodyB.GetType() === b2BodyType.b2_staticBody && bodyA.GetType() === b2BodyType.b2_staticBody) {\r\n            return false;\r\n        }\r\n        // Does a joint prevent collision?\r\n        if (!bodyB.ShouldCollideConnected(bodyA)) {\r\n            return false;\r\n        }\r\n        const filter1 = fixtureA.GetFilterData();\r\n        const filter2 = fixtureB.GetFilterData();\r\n        if (filter1.groupIndex === filter2.groupIndex && filter1.groupIndex !== 0) {\r\n            return (filter1.groupIndex > 0);\r\n        }\r\n        const collide = (((filter1.maskBits & filter2.categoryBits) !== 0) && ((filter1.categoryBits & filter2.maskBits) !== 0));\r\n        return collide;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ShouldCollideFixtureParticle(fixture, system, index) {\r\n        return true;\r\n    }\r\n    ShouldCollideParticleParticle(system, indexA, indexB) {\r\n        return true;\r\n    }\r\n}\r\n// #endif\r\nb2ContactFilter.b2_defaultFilter = new b2ContactFilter();\r\n/// Contact impulses for reporting. Impulses are used instead of forces because\r\n/// sub-step forces may approach infinity for rigid body collisions. These\r\n/// match up one-to-one with the contact points in b2Manifold.\r\nexport class b2ContactImpulse {\r\n    constructor() {\r\n        this.normalImpulses = b2MakeNumberArray(b2_maxManifoldPoints);\r\n        this.tangentImpulses = b2MakeNumberArray(b2_maxManifoldPoints);\r\n        this.count = 0;\r\n    }\r\n}\r\n/// Implement this class to get contact information. You can use these results for\r\n/// things like sounds and game logic. You can also get contact results by\r\n/// traversing the contact lists after the time step. However, you might miss\r\n/// some contacts because continuous physics leads to sub-stepping.\r\n/// Additionally you may receive multiple callbacks for the same contact in a\r\n/// single time step.\r\n/// You should strive to make your callbacks efficient because there may be\r\n/// many callbacks per time step.\r\n/// @warning You cannot create/destroy Box2D entities inside these callbacks.\r\nexport class b2ContactListener {\r\n    /// Called when two fixtures begin to touch.\r\n    BeginContact(contact) { }\r\n    /// Called when two fixtures cease to touch.\r\n    EndContact(contact) { }\r\n    // #if B2_ENABLE_PARTICLE\r\n    BeginContactFixtureParticle(system, contact) { }\r\n    EndContactFixtureParticle(system, contact) { }\r\n    BeginContactParticleParticle(system, contact) { }\r\n    EndContactParticleParticle(system, contact) { }\r\n    // #endif\r\n    /// This is called after a contact is updated. This allows you to inspect a\r\n    /// contact before it goes to the solver. If you are careful, you can modify the\r\n    /// contact manifold (e.g. disable contact).\r\n    /// A copy of the old manifold is provided so that you can detect changes.\r\n    /// Note: this is called only for awake bodies.\r\n    /// Note: this is called even when the number of contact points is zero.\r\n    /// Note: this is not called for sensors.\r\n    /// Note: if you set the number of contact points to zero, you will not\r\n    /// get an EndContact callback. However, you may get a BeginContact callback\r\n    /// the next step.\r\n    PreSolve(contact, oldManifold) { }\r\n    /// This lets you inspect a contact after the solver is finished. This is useful\r\n    /// for inspecting impulses.\r\n    /// Note: the contact manifold does not include time of impact impulses, which can be\r\n    /// arbitrarily large if the sub-step is small. Hence the impulse is provided explicitly\r\n    /// in a separate data structure.\r\n    /// Note: this is only called for contacts that are touching, solid, and awake.\r\n    PostSolve(contact, impulse) { }\r\n}\r\nb2ContactListener.b2_defaultListener = new b2ContactListener();\r\n/// Callback class for AABB queries.\r\n/// See b2World::Query\r\nexport class b2QueryCallback {\r\n    /// Called for each fixture found in the query AABB.\r\n    /// @return false to terminate the query.\r\n    ReportFixture(fixture) {\r\n        return true;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ReportParticle(system, index) {\r\n        return false;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        return true;\r\n    }\r\n}\r\n/// Callback class for ray casts.\r\n/// See b2World::RayCast\r\nexport class b2RayCastCallback {\r\n    /// Called for each fixture found in the query. You control how the ray cast\r\n    /// proceeds by returning a float:\r\n    /// return -1: ignore this fixture and continue\r\n    /// return 0: terminate the ray cast\r\n    /// return fraction: clip the ray to this point\r\n    /// return 1: don't clip the ray and continue\r\n    /// @param fixture the fixture hit by the ray\r\n    /// @param point the point of initial intersection\r\n    /// @param normal the normal vector at the point of intersection\r\n    /// @return -1 to filter, 0 to terminate, fraction to clip the ray for\r\n    /// closest hit, 1 to continue\r\n    ReportFixture(fixture, point, normal, fraction) {\r\n        return fraction;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ReportParticle(system, index, point, normal, fraction) {\r\n        return 0;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        return true;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJXb3JsZENhbGxiYWNrcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL2IyV29ybGRDYWxsYmFja3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUkvRSxPQUFPLEVBQVUsVUFBVSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBTTlDLFNBQVM7QUFFVCwyREFBMkQ7QUFDM0QsMERBQTBEO0FBQzFELHNEQUFzRDtBQUN0RCxNQUFNO0lBQ0osc0RBQXNEO0lBQ3RELHFEQUFxRDtJQUM5QyxlQUFlLENBQUMsS0FBYyxJQUFTLENBQUM7SUFFL0Msd0RBQXdEO0lBQ3hELDBDQUEwQztJQUNuQyxpQkFBaUIsQ0FBQyxPQUFrQixJQUFTLENBQUM7SUFFckQseUJBQXlCO0lBQ3pCLDREQUE0RDtJQUNyRCx1QkFBdUIsQ0FBQyxLQUFzQixJQUFTLENBQUM7SUFFL0Qsb0RBQW9EO0lBQ3BELDZDQUE2QztJQUM3Qyw0Q0FBNEM7SUFDNUMscUVBQXFFO0lBQ3JFLGdDQUFnQztJQUN6QixrQkFBa0IsQ0FBQyxNQUF3QixFQUFFLEtBQWEsSUFBUyxDQUFDO0NBRTVFO0FBRUQsMEZBQTBGO0FBQzFGLCtEQUErRDtBQUMvRCxNQUFNO0lBQ0oscUZBQXFGO0lBQ3JGLHlGQUF5RjtJQUNsRixhQUFhLENBQUMsUUFBbUIsRUFBRSxRQUFtQjtRQUMzRCxNQUFNLEtBQUssR0FBVyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDekMsTUFBTSxLQUFLLEdBQVcsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBRXpDLG9EQUFvRDtRQUNwRCxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxVQUFVLENBQUMsYUFBYSxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FB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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2BroadPhase } from \"../Collision/b2BroadPhase\";\r\nimport { b2ContactFactory } from \"./Contacts/b2ContactFactory\";\r\nimport { b2BodyType } from \"./b2Body\";\r\nimport { b2ContactFilter, b2ContactListener } from \"./b2WorldCallbacks\";\r\n// Delegate of b2World.\r\nexport class b2ContactManager {\r\n    constructor() {\r\n        this.m_broadPhase = new b2BroadPhase();\r\n        this.m_contactList = null;\r\n        this.m_contactCount = 0;\r\n        this.m_contactFilter = b2ContactFilter.b2_defaultFilter;\r\n        this.m_contactListener = b2ContactListener.b2_defaultListener;\r\n        this.m_allocator = null;\r\n        this.m_contactFactory = null;\r\n        this.m_contactFactory = new b2ContactFactory(this.m_allocator);\r\n    }\r\n    // Broad-phase callback.\r\n    AddPair(proxyA, proxyB) {\r\n        ///b2Assert(proxyA instanceof b2FixtureProxy);\r\n        ///b2Assert(proxyB instanceof b2FixtureProxy);\r\n        let fixtureA = proxyA.fixture;\r\n        let fixtureB = proxyB.fixture;\r\n        let indexA = proxyA.childIndex;\r\n        let indexB = proxyB.childIndex;\r\n        let bodyA = fixtureA.GetBody();\r\n        let bodyB = fixtureB.GetBody();\r\n        // Are the fixtures on the same body?\r\n        if (bodyA === bodyB) {\r\n            return;\r\n        }\r\n        // TODO_ERIN use a hash table to remove a potential bottleneck when both\r\n        // bodies have a lot of contacts.\r\n        // Does a contact already exist?\r\n        let edge = bodyB.GetContactList();\r\n        while (edge) {\r\n            if (edge.other === bodyA) {\r\n                const fA = edge.contact.GetFixtureA();\r\n                const fB = edge.contact.GetFixtureB();\r\n                const iA = edge.contact.GetChildIndexA();\r\n                const iB = edge.contact.GetChildIndexB();\r\n                if (fA === fixtureA && fB === fixtureB && iA === indexA && iB === indexB) {\r\n                    // A contact already exists.\r\n                    return;\r\n                }\r\n                if (fA === fixtureB && fB === fixtureA && iA === indexB && iB === indexA) {\r\n                    // A contact already exists.\r\n                    return;\r\n                }\r\n            }\r\n            edge = edge.next;\r\n        }\r\n        // Check user filtering.\r\n        if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\r\n            return;\r\n        }\r\n        // Call the factory.\r\n        const c = this.m_contactFactory.Create(fixtureA, indexA, fixtureB, indexB);\r\n        if (c === null) {\r\n            return;\r\n        }\r\n        // Contact creation may swap fixtures.\r\n        fixtureA = c.GetFixtureA();\r\n        fixtureB = c.GetFixtureB();\r\n        indexA = c.GetChildIndexA();\r\n        indexB = c.GetChildIndexB();\r\n        bodyA = fixtureA.m_body;\r\n        bodyB = fixtureB.m_body;\r\n        // Insert into the world.\r\n        c.m_prev = null;\r\n        c.m_next = this.m_contactList;\r\n        if (this.m_contactList !== null) {\r\n            this.m_contactList.m_prev = c;\r\n        }\r\n        this.m_contactList = c;\r\n        // Connect to island graph.\r\n        // Connect to body A\r\n        c.m_nodeA.contact = c;\r\n        c.m_nodeA.other = bodyB;\r\n        c.m_nodeA.prev = null;\r\n        c.m_nodeA.next = bodyA.m_contactList;\r\n        if (bodyA.m_contactList !== null) {\r\n            bodyA.m_contactList.prev = c.m_nodeA;\r\n        }\r\n        bodyA.m_contactList = c.m_nodeA;\r\n        // Connect to body B\r\n        c.m_nodeB.contact = c;\r\n        c.m_nodeB.other = bodyA;\r\n        c.m_nodeB.prev = null;\r\n        c.m_nodeB.next = bodyB.m_contactList;\r\n        if (bodyB.m_contactList !== null) {\r\n            bodyB.m_contactList.prev = c.m_nodeB;\r\n        }\r\n        bodyB.m_contactList = c.m_nodeB;\r\n        // Wake up the bodies\r\n        if (!fixtureA.IsSensor() && !fixtureB.IsSensor()) {\r\n            bodyA.SetAwake(true);\r\n            bodyB.SetAwake(true);\r\n        }\r\n        ++this.m_contactCount;\r\n    }\r\n    FindNewContacts() {\r\n        this.m_broadPhase.UpdatePairs(this);\r\n    }\r\n    Destroy(c) {\r\n        const fixtureA = c.GetFixtureA();\r\n        const fixtureB = c.GetFixtureB();\r\n        const bodyA = fixtureA.GetBody();\r\n        const bodyB = fixtureB.GetBody();\r\n        if (this.m_contactListener && c.IsTouching()) {\r\n            this.m_contactListener.EndContact(c);\r\n        }\r\n        // Remove from the world.\r\n        if (c.m_prev) {\r\n            c.m_prev.m_next = c.m_next;\r\n        }\r\n        if (c.m_next) {\r\n            c.m_next.m_prev = c.m_prev;\r\n        }\r\n        if (c === this.m_contactList) {\r\n            this.m_contactList = c.m_next;\r\n        }\r\n        // Remove from body 1\r\n        if (c.m_nodeA.prev) {\r\n            c.m_nodeA.prev.next = c.m_nodeA.next;\r\n        }\r\n        if (c.m_nodeA.next) {\r\n            c.m_nodeA.next.prev = c.m_nodeA.prev;\r\n        }\r\n        if (c.m_nodeA === bodyA.m_contactList) {\r\n            bodyA.m_contactList = c.m_nodeA.next;\r\n        }\r\n        // Remove from body 2\r\n        if (c.m_nodeB.prev) {\r\n            c.m_nodeB.prev.next = c.m_nodeB.next;\r\n        }\r\n        if (c.m_nodeB.next) {\r\n            c.m_nodeB.next.prev = c.m_nodeB.prev;\r\n        }\r\n        if (c.m_nodeB === bodyB.m_contactList) {\r\n            bodyB.m_contactList = c.m_nodeB.next;\r\n        }\r\n        // Call the factory.\r\n        this.m_contactFactory.Destroy(c);\r\n        --this.m_contactCount;\r\n    }\r\n    // This is the top level collision call for the time step. Here\r\n    // all the narrow phase collision is processed for the world\r\n    // contact list.\r\n    Collide() {\r\n        // Update awake contacts.\r\n        let c = this.m_contactList;\r\n        while (c) {\r\n            const fixtureA = c.GetFixtureA();\r\n            const fixtureB = c.GetFixtureB();\r\n            const indexA = c.GetChildIndexA();\r\n            const indexB = c.GetChildIndexB();\r\n            const bodyA = fixtureA.GetBody();\r\n            const bodyB = fixtureB.GetBody();\r\n            // Is this contact flagged for filtering?\r\n            if (c.m_filterFlag) {\r\n                // Check user filtering.\r\n                if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\r\n                    const cNuke = c;\r\n                    c = cNuke.m_next;\r\n                    this.Destroy(cNuke);\r\n                    continue;\r\n                }\r\n                // Clear the filtering flag.\r\n                c.m_filterFlag = false;\r\n            }\r\n            const activeA = bodyA.IsAwake() && bodyA.m_type !== b2BodyType.b2_staticBody;\r\n            const activeB = bodyB.IsAwake() && bodyB.m_type !== b2BodyType.b2_staticBody;\r\n            // At least one body must be awake and it must be dynamic or kinematic.\r\n            if (!activeA && !activeB) {\r\n                c = c.m_next;\r\n                continue;\r\n            }\r\n            const proxyA = fixtureA.m_proxies[indexA].treeNode;\r\n            const proxyB = fixtureB.m_proxies[indexB].treeNode;\r\n            const overlap = this.m_broadPhase.TestOverlap(proxyA, proxyB);\r\n            // Here we destroy contacts that cease to overlap in the broad-phase.\r\n            if (!overlap) {\r\n                const cNuke = c;\r\n                c = cNuke.m_next;\r\n                this.Destroy(cNuke);\r\n                continue;\r\n            }\r\n            // The contact persists.\r\n            c.Update(this.m_contactListener);\r\n            c = c.m_next;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb250YWN0TWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL2IyQ29udGFjdE1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFHekQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDL0QsT0FBTyxFQUFVLFVBQVUsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUU5QyxPQUFPLEVBQUUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFeEUsdUJBQXVCO0FBQ3ZCLE1BQU07SUFVSjtRQVRPLGlCQUFZLEdBQWlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDaEQsa0JBQWEsR0FBcUIsSUFBSSxDQUFDO1FBQ3ZDLG1CQUFjLEdBQVcsQ0FBQyxDQUFDO1FBQzNCLG9CQUFlLEdBQW9CLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQztRQUNwRSxzQkFBaUIsR0FBc0IsaUJBQWlCLENBQUMsa0JBQWtCLENBQUM7UUFDNUUsZ0JBQVcsR0FBUSxJQUFJLENBQUM7UUFFeEIscUJBQWdCLEdBQXFCLElBQUksQ0FBQztRQUcvQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUVELHdCQUF3QjtJQUNqQixPQUFPLENBQUMsTUFBc0IsRUFBRSxNQUFzQjtRQUMzRCw4Q0FBOEM7UUFDOUMsOENBQThDO1FBRTlDLElBQUksUUFBUSxHQUFjLE1BQU0sQ0FBQyxPQUFPLENBQUM7UUFDekMsSUFBSSxRQUFRLEdBQWMsTUFBTSxDQUFDLE9BQU8sQ0FBQztRQUV6QyxJQUFJLE1BQU0sR0FBVyxNQUFNLENBQUMsVUFBVSxDQUFDO1FBQ3ZDLElB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","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\n/// Profiling data. Times are in milliseconds.\r\nexport class b2Profile {\r\n    constructor() {\r\n        this.step = 0;\r\n        this.collide = 0;\r\n        this.solve = 0;\r\n        this.solveInit = 0;\r\n        this.solveVelocity = 0;\r\n        this.solvePosition = 0;\r\n        this.broadphase = 0;\r\n        this.solveTOI = 0;\r\n    }\r\n    Reset() {\r\n        this.step = 0;\r\n        this.collide = 0;\r\n        this.solve = 0;\r\n        this.solveInit = 0;\r\n        this.solveVelocity = 0;\r\n        this.solvePosition = 0;\r\n        this.broadphase = 0;\r\n        this.solveTOI = 0;\r\n        return this;\r\n    }\r\n}\r\n/// This is an internal structure.\r\nexport class b2TimeStep {\r\n    constructor() {\r\n        this.dt = 0; // time step\r\n        this.inv_dt = 0; // inverse time step (0 if dt == 0).\r\n        this.dtRatio = 0; // dt * inv_dt0\r\n        this.velocityIterations = 0;\r\n        this.positionIterations = 0;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.particleIterations = 0;\r\n        // #endif\r\n        this.warmStarting = false;\r\n    }\r\n    Copy(step) {\r\n        this.dt = step.dt;\r\n        this.inv_dt = step.inv_dt;\r\n        this.dtRatio = step.dtRatio;\r\n        this.positionIterations = step.positionIterations;\r\n        this.velocityIterations = step.velocityIterations;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.particleIterations = step.particleIterations;\r\n        // #endif\r\n        this.warmStarting = step.warmStarting;\r\n        return this;\r\n    }\r\n}\r\nexport class b2Position {\r\n    constructor() {\r\n        this.c = new b2Vec2();\r\n        this.a = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Position());\r\n    }\r\n}\r\nexport class b2Velocity {\r\n    constructor() {\r\n        this.v = new b2Vec2();\r\n        this.w = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Velocity());\r\n    }\r\n}\r\nexport class b2SolverData {\r\n    constructor() {\r\n        this.step = new b2TimeStep();\r\n        this.positions = null;\r\n        this.velocities = null;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJUaW1lU3RlcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL2IyVGltZVN0ZXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTFDLDhDQUE4QztBQUM5QyxNQUFNO0lBQU47UUFDUyxTQUFJLEdBQVcsQ0FBQyxDQUFDO1FBQ2pCLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFDcEIsVUFBSyxHQUFXLENBQUMsQ0FBQztRQUNsQixjQUFTLEdBQVcsQ0FBQyxDQUFDO1FBQ3RCLGtCQUFhLEdBQVcsQ0FBQyxDQUFDO1FBQzFCLGtCQUFhLEdBQVcsQ0FBQyxDQUFDO1FBQzFCLGVBQVUsR0FBVyxDQUFDLENBQUM7UUFDdkIsYUFBUSxHQUFXLENBQUMsQ0FBQztJQWE5QixDQUFDO0lBWFEsS0FBSztRQUNWLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQztRQUNuQixJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQztRQUN2QixJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUNsQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRjtBQUVELGtDQUFrQztBQUNsQyxNQUFNO0lBQU47UUFDUyxPQUFFLEdBQVcsQ0FBQyxDQUFDLENBQUMsWUFBWTtRQUM1QixXQUFNLEdBQVcsQ0FBQyxDQUFDLENBQUMsb0NBQW9DO1FBQ3hELFlBQU8sR0FBVyxDQUFDLENBQUMsQ0FBQyxlQUFlO1FBQ3BDLHVCQUFrQixHQUFXLENBQUMsQ0FBQztRQUMvQix1QkFBa0IsR0FBVyxDQUFDLENBQUM7UUFDdEMseUJBQXlCO1FBQ2xCLHVCQUFrQixHQUFXLENBQUMsQ0FBQztRQUN0QyxTQUFTO1FBQ0YsaUJBQVksR0FBWSxLQUFLLENBQUM7SUFjdkMsQ0FBQztJQVpRLElBQUksQ0FBQyxJQUFnQjtRQUMxQixJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDbEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUM1QixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDO1FBQ2xELElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUM7UUFDbEQseUJBQXlCO1FBQ3pCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUM7UUFDbEQsU0FBUztRQUNULElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUN0QyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRjtBQUVELE1BQU07SUFBTjtRQUNTLE1BQUMsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ3pCLE1BQUMsR0FBVyxDQUFDLENBQUM7SUFLdkIsQ0FBQztJQUhRLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBYztRQUNwQyxPQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFTLEVBQWMsRUFBRSxDQUFDLElBQUksVUFBVSxFQUFFLENBQUMsQ0FBQztJQUMxRSxDQUFDO0NBQ0Y7QUFFRCxNQUFNO0lBQU47UUFDUyxNQUFDLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUN6QixNQUFDLEdBQVcsQ0FBQyxDQUFDO0lBS3ZCLENBQUM7SUFIUSxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQWM7UUFDcEMsT0FBTyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBUyxFQUFjLEVBQUUsQ0FBQyxJQUFJLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDMUUsQ0FBQztDQUNGO0FBRUQsTUFBTTtJQUFOO1FBQ1MsU0FBSSxHQUFlLElBQUksVUFBVSxFQUFFLENBQUM7UUFDcEMsY0FBUyxHQUFpQixJQUFJLENBQUM7UUFDL0IsZUFBVSxHQUFpQixJQUFJLENBQUM7SUFDekMsQ0FBQztDQUFBIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxManifoldPoints, b2_velocityThreshold, b2_maxLinearCorrection, b2_baumgarte, b2_toiBaumgarte, b2MakeArray } from \"../../Common/b2Settings\";\r\nimport { b2Min, b2Max, b2Clamp, b2Vec2, b2Mat22, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2WorldManifold } from \"../../Collision/b2Collision\";\r\nimport { b2ManifoldType } from \"../../Collision/b2Collision\";\r\nimport { b2TimeStep } from \"../b2TimeStep\";\r\nexport class b2VelocityConstraintPoint {\r\n    constructor() {\r\n        this.rA = new b2Vec2();\r\n        this.rB = new b2Vec2();\r\n        this.normalImpulse = 0;\r\n        this.tangentImpulse = 0;\r\n        this.normalMass = 0;\r\n        this.tangentMass = 0;\r\n        this.velocityBias = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2VelocityConstraintPoint());\r\n    }\r\n}\r\nexport class b2ContactVelocityConstraint {\r\n    constructor() {\r\n        this.points = b2VelocityConstraintPoint.MakeArray(b2_maxManifoldPoints);\r\n        this.normal = new b2Vec2();\r\n        this.tangent = new b2Vec2();\r\n        this.normalMass = new b2Mat22();\r\n        this.K = new b2Mat22();\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.invMassA = 0;\r\n        this.invMassB = 0;\r\n        this.invIA = 0;\r\n        this.invIB = 0;\r\n        this.friction = 0;\r\n        this.restitution = 0;\r\n        this.tangentSpeed = 0;\r\n        this.pointCount = 0;\r\n        this.contactIndex = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ContactVelocityConstraint());\r\n    }\r\n}\r\nexport class b2ContactPositionConstraint {\r\n    constructor() {\r\n        this.localPoints = b2Vec2.MakeArray(b2_maxManifoldPoints);\r\n        this.localNormal = new b2Vec2();\r\n        this.localPoint = new b2Vec2();\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.invMassA = 0;\r\n        this.invMassB = 0;\r\n        this.localCenterA = new b2Vec2();\r\n        this.localCenterB = new b2Vec2();\r\n        this.invIA = 0;\r\n        this.invIB = 0;\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.radiusA = 0;\r\n        this.radiusB = 0;\r\n        this.pointCount = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ContactPositionConstraint());\r\n    }\r\n}\r\nexport class b2ContactSolverDef {\r\n    constructor() {\r\n        this.step = new b2TimeStep();\r\n        this.contacts = null;\r\n        this.count = 0;\r\n        this.positions = null;\r\n        this.velocities = null;\r\n        this.allocator = null;\r\n    }\r\n}\r\nexport class b2PositionSolverManifold {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.point = new b2Vec2();\r\n        this.separation = 0;\r\n    }\r\n    Initialize(pc, xfA, xfB, index) {\r\n        const pointA = b2PositionSolverManifold.Initialize_s_pointA;\r\n        const pointB = b2PositionSolverManifold.Initialize_s_pointB;\r\n        const planePoint = b2PositionSolverManifold.Initialize_s_planePoint;\r\n        const clipPoint = b2PositionSolverManifold.Initialize_s_clipPoint;\r\n        ///b2Assert(pc.pointCount > 0);\r\n        switch (pc.type) {\r\n            case b2ManifoldType.e_circles:\r\n                {\r\n                    // b2Vec2 pointA = b2Mul(xfA, pc->localPoint);\r\n                    b2Transform.MulXV(xfA, pc.localPoint, pointA);\r\n                    // b2Vec2 pointB = b2Mul(xfB, pc->localPoints[0]);\r\n                    b2Transform.MulXV(xfB, pc.localPoints[0], pointB);\r\n                    // normal = pointB - pointA;\r\n                    // normal.Normalize();\r\n                    b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\r\n                    // point = 0.5f * (pointA + pointB);\r\n                    b2Vec2.MidVV(pointA, pointB, this.point);\r\n                    // separation = b2Dot(pointB - pointA, normal) - pc->radius;\r\n                    this.separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                }\r\n                break;\r\n            case b2ManifoldType.e_faceA:\r\n                {\r\n                    // normal = b2Mul(xfA.q, pc->localNormal);\r\n                    b2Rot.MulRV(xfA.q, pc.localNormal, this.normal);\r\n                    // b2Vec2 planePoint = b2Mul(xfA, pc->localPoint);\r\n                    b2Transform.MulXV(xfA, pc.localPoint, planePoint);\r\n                    // b2Vec2 clipPoint = b2Mul(xfB, pc->localPoints[index]);\r\n                    b2Transform.MulXV(xfB, pc.localPoints[index], clipPoint);\r\n                    // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\r\n                    this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                    // point = clipPoint;\r\n                    this.point.Copy(clipPoint);\r\n                }\r\n                break;\r\n            case b2ManifoldType.e_faceB:\r\n                {\r\n                    // normal = b2Mul(xfB.q, pc->localNormal);\r\n                    b2Rot.MulRV(xfB.q, pc.localNormal, this.normal);\r\n                    // b2Vec2 planePoint = b2Mul(xfB, pc->localPoint);\r\n                    b2Transform.MulXV(xfB, pc.localPoint, planePoint);\r\n                    // b2Vec2 clipPoint = b2Mul(xfA, pc->localPoints[index]);\r\n                    b2Transform.MulXV(xfA, pc.localPoints[index], clipPoint);\r\n                    // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\r\n                    this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                    // point = clipPoint;\r\n                    this.point.Copy(clipPoint);\r\n                    // Ensure normal points from A to B\r\n                    // normal = -normal;\r\n                    this.normal.SelfNeg();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\nb2PositionSolverManifold.Initialize_s_pointA = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_pointB = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_planePoint = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_clipPoint = new b2Vec2();\r\nexport class b2ContactSolver {\r\n    constructor() {\r\n        this.m_step = new b2TimeStep();\r\n        this.m_positions = null;\r\n        this.m_velocities = null;\r\n        this.m_allocator = null;\r\n        this.m_positionConstraints = b2ContactPositionConstraint.MakeArray(1024); // TODO: b2Settings\r\n        this.m_velocityConstraints = b2ContactVelocityConstraint.MakeArray(1024); // TODO: b2Settings\r\n        this.m_contacts = null;\r\n        this.m_count = 0;\r\n    }\r\n    Initialize(def) {\r\n        this.m_step.Copy(def.step);\r\n        this.m_allocator = def.allocator;\r\n        this.m_count = def.count;\r\n        // TODO:\r\n        if (this.m_positionConstraints.length < this.m_count) {\r\n            const new_length = b2Max(this.m_positionConstraints.length * 2, this.m_count);\r\n            while (this.m_positionConstraints.length < new_length) {\r\n                this.m_positionConstraints[this.m_positionConstraints.length] = new b2ContactPositionConstraint();\r\n            }\r\n        }\r\n        // TODO:\r\n        if (this.m_velocityConstraints.length < this.m_count) {\r\n            const new_length = b2Max(this.m_velocityConstraints.length * 2, this.m_count);\r\n            while (this.m_velocityConstraints.length < new_length) {\r\n                this.m_velocityConstraints[this.m_velocityConstraints.length] = new b2ContactVelocityConstraint();\r\n            }\r\n        }\r\n        this.m_positions = def.positions;\r\n        this.m_velocities = def.velocities;\r\n        this.m_contacts = def.contacts;\r\n        // Initialize position independent portions of the constraints.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const contact = this.m_contacts[i];\r\n            const fixtureA = contact.m_fixtureA;\r\n            const fixtureB = contact.m_fixtureB;\r\n            const shapeA = fixtureA.GetShape();\r\n            const shapeB = fixtureB.GetShape();\r\n            const radiusA = shapeA.m_radius;\r\n            const radiusB = shapeB.m_radius;\r\n            const bodyA = fixtureA.GetBody();\r\n            const bodyB = fixtureB.GetBody();\r\n            const manifold = contact.GetManifold();\r\n            const pointCount = manifold.pointCount;\r\n            ///b2Assert(pointCount > 0);\r\n            const vc = this.m_velocityConstraints[i];\r\n            vc.friction = contact.m_friction;\r\n            vc.restitution = contact.m_restitution;\r\n            vc.tangentSpeed = contact.m_tangentSpeed;\r\n            vc.indexA = bodyA.m_islandIndex;\r\n            vc.indexB = bodyB.m_islandIndex;\r\n            vc.invMassA = bodyA.m_invMass;\r\n            vc.invMassB = bodyB.m_invMass;\r\n            vc.invIA = bodyA.m_invI;\r\n            vc.invIB = bodyB.m_invI;\r\n            vc.contactIndex = i;\r\n            vc.pointCount = pointCount;\r\n            vc.K.SetZero();\r\n            vc.normalMass.SetZero();\r\n            const pc = this.m_positionConstraints[i];\r\n            pc.indexA = bodyA.m_islandIndex;\r\n            pc.indexB = bodyB.m_islandIndex;\r\n            pc.invMassA = bodyA.m_invMass;\r\n            pc.invMassB = bodyB.m_invMass;\r\n            pc.localCenterA.Copy(bodyA.m_sweep.localCenter);\r\n            pc.localCenterB.Copy(bodyB.m_sweep.localCenter);\r\n            pc.invIA = bodyA.m_invI;\r\n            pc.invIB = bodyB.m_invI;\r\n            pc.localNormal.Copy(manifold.localNormal);\r\n            pc.localPoint.Copy(manifold.localPoint);\r\n            pc.pointCount = pointCount;\r\n            pc.radiusA = radiusA;\r\n            pc.radiusB = radiusB;\r\n            pc.type = manifold.type;\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const cp = manifold.points[j];\r\n                const vcp = vc.points[j];\r\n                if (this.m_step.warmStarting) {\r\n                    vcp.normalImpulse = this.m_step.dtRatio * cp.normalImpulse;\r\n                    vcp.tangentImpulse = this.m_step.dtRatio * cp.tangentImpulse;\r\n                }\r\n                else {\r\n                    vcp.normalImpulse = 0;\r\n                    vcp.tangentImpulse = 0;\r\n                }\r\n                vcp.rA.SetZero();\r\n                vcp.rB.SetZero();\r\n                vcp.normalMass = 0;\r\n                vcp.tangentMass = 0;\r\n                vcp.velocityBias = 0;\r\n                pc.localPoints[j].Copy(cp.localPoint);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    InitializeVelocityConstraints() {\r\n        const xfA = b2ContactSolver.InitializeVelocityConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.InitializeVelocityConstraints_s_xfB;\r\n        const worldManifold = b2ContactSolver.InitializeVelocityConstraints_s_worldManifold;\r\n        const k_maxConditionNumber = 1000;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const pc = this.m_positionConstraints[i];\r\n            const radiusA = pc.radiusA;\r\n            const radiusB = pc.radiusB;\r\n            const manifold = this.m_contacts[vc.contactIndex].GetManifold();\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const mB = vc.invMassB;\r\n            const iA = vc.invIA;\r\n            const iB = vc.invIB;\r\n            const localCenterA = pc.localCenterA;\r\n            const localCenterB = pc.localCenterB;\r\n            const cA = this.m_positions[indexA].c;\r\n            const aA = this.m_positions[indexA].a;\r\n            const vA = this.m_velocities[indexA].v;\r\n            const wA = this.m_velocities[indexA].w;\r\n            const cB = this.m_positions[indexB].c;\r\n            const aB = this.m_positions[indexB].a;\r\n            const vB = this.m_velocities[indexB].v;\r\n            const wB = this.m_velocities[indexB].w;\r\n            ///b2Assert(manifold.pointCount > 0);\r\n            xfA.q.SetAngle(aA);\r\n            xfB.q.SetAngle(aB);\r\n            b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n            b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n            worldManifold.Initialize(manifold, xfA, radiusA, xfB, radiusB);\r\n            vc.normal.Copy(worldManifold.normal);\r\n            b2Vec2.CrossVOne(vc.normal, vc.tangent); // compute from normal\r\n            const pointCount = vc.pointCount;\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // vcp->rA = worldManifold.points[j] - cA;\r\n                b2Vec2.SubVV(worldManifold.points[j], cA, vcp.rA);\r\n                // vcp->rB = worldManifold.points[j] - cB;\r\n                b2Vec2.SubVV(worldManifold.points[j], cB, vcp.rB);\r\n                const rnA = b2Vec2.CrossVV(vcp.rA, vc.normal);\r\n                const rnB = b2Vec2.CrossVV(vcp.rB, vc.normal);\r\n                const kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                vcp.normalMass = kNormal > 0 ? 1 / kNormal : 0;\r\n                // b2Vec2 tangent = b2Cross(vc->normal, 1.0f);\r\n                const tangent = vc.tangent; // precomputed from normal\r\n                const rtA = b2Vec2.CrossVV(vcp.rA, tangent);\r\n                const rtB = b2Vec2.CrossVV(vcp.rB, tangent);\r\n                const kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\r\n                vcp.tangentMass = kTangent > 0 ? 1 / kTangent : 0;\r\n                // Setup a velocity bias for restitution.\r\n                vcp.velocityBias = 0;\r\n                // float32 vRel = b2Dot(vc->normal, vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA));\r\n                const vRel = b2Vec2.DotVV(vc.normal, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n                if (vRel < (-b2_velocityThreshold)) {\r\n                    vcp.velocityBias += (-vc.restitution * vRel);\r\n                }\r\n            }\r\n            // If we have two points, then prepare the block solver.\r\n            if (vc.pointCount === 2) {\r\n                const vcp1 = vc.points[0];\r\n                const vcp2 = vc.points[1];\r\n                const rn1A = b2Vec2.CrossVV(vcp1.rA, vc.normal);\r\n                const rn1B = b2Vec2.CrossVV(vcp1.rB, vc.normal);\r\n                const rn2A = b2Vec2.CrossVV(vcp2.rA, vc.normal);\r\n                const rn2B = b2Vec2.CrossVV(vcp2.rB, vc.normal);\r\n                const k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\r\n                const k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\r\n                const k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\r\n                // Ensure a reasonable condition number.\r\n                // float32 k_maxConditionNumber = 1000.0f;\r\n                if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\r\n                    // K is safe to invert.\r\n                    vc.K.ex.Set(k11, k12);\r\n                    vc.K.ey.Set(k12, k22);\r\n                    vc.K.GetInverse(vc.normalMass);\r\n                }\r\n                else {\r\n                    // The constraints are redundant, just use one.\r\n                    // TODO_ERIN use deepest?\r\n                    vc.pointCount = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    WarmStart() {\r\n        const P = b2ContactSolver.WarmStart_s_P;\r\n        // Warm start.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const iA = vc.invIA;\r\n            const mB = vc.invMassB;\r\n            const iB = vc.invIB;\r\n            const pointCount = vc.pointCount;\r\n            const vA = this.m_velocities[indexA].v;\r\n            let wA = this.m_velocities[indexA].w;\r\n            const vB = this.m_velocities[indexB].v;\r\n            let wB = this.m_velocities[indexB].w;\r\n            const normal = vc.normal;\r\n            // b2Vec2 tangent = b2Cross(normal, 1.0f);\r\n            const tangent = vc.tangent; // precomputed from normal\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // b2Vec2 P = vcp->normalImpulse * normal + vcp->tangentImpulse * tangent;\r\n                b2Vec2.AddVV(b2Vec2.MulSV(vcp.normalImpulse, normal, b2Vec2.s_t0), b2Vec2.MulSV(vcp.tangentImpulse, tangent, b2Vec2.s_t1), P);\r\n                // wA -= iA * b2Cross(vcp->rA, P);\r\n                wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                // vA -= mA * P;\r\n                vA.SelfMulSub(mA, P);\r\n                // wB += iB * b2Cross(vcp->rB, P);\r\n                wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n                // vB += mB * P;\r\n                vB.SelfMulAdd(mB, P);\r\n            }\r\n            // this.m_velocities[indexA].v = vA;\r\n            this.m_velocities[indexA].w = wA;\r\n            // this.m_velocities[indexB].v = vB;\r\n            this.m_velocities[indexB].w = wB;\r\n        }\r\n    }\r\n    SolveVelocityConstraints() {\r\n        const dv = b2ContactSolver.SolveVelocityConstraints_s_dv;\r\n        const dv1 = b2ContactSolver.SolveVelocityConstraints_s_dv1;\r\n        const dv2 = b2ContactSolver.SolveVelocityConstraints_s_dv2;\r\n        const P = b2ContactSolver.SolveVelocityConstraints_s_P;\r\n        const a = b2ContactSolver.SolveVelocityConstraints_s_a;\r\n        const b = b2ContactSolver.SolveVelocityConstraints_s_b;\r\n        const x = b2ContactSolver.SolveVelocityConstraints_s_x;\r\n        const d = b2ContactSolver.SolveVelocityConstraints_s_d;\r\n        const P1 = b2ContactSolver.SolveVelocityConstraints_s_P1;\r\n        const P2 = b2ContactSolver.SolveVelocityConstraints_s_P2;\r\n        const P1P2 = b2ContactSolver.SolveVelocityConstraints_s_P1P2;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const iA = vc.invIA;\r\n            const mB = vc.invMassB;\r\n            const iB = vc.invIB;\r\n            const pointCount = vc.pointCount;\r\n            const vA = this.m_velocities[indexA].v;\r\n            let wA = this.m_velocities[indexA].w;\r\n            const vB = this.m_velocities[indexB].v;\r\n            let wB = this.m_velocities[indexB].w;\r\n            // b2Vec2 normal = vc->normal;\r\n            const normal = vc.normal;\r\n            // b2Vec2 tangent = b2Cross(normal, 1.0f);\r\n            const tangent = vc.tangent; // precomputed from normal\r\n            const friction = vc.friction;\r\n            ///b2Assert(pointCount === 1 || pointCount === 2);\r\n            // Solve tangent constraints first because non-penetration is more important\r\n            // than friction.\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // Relative velocity at contact\r\n                // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), dv);\r\n                // Compute tangent force\r\n                // float32 vt = b2Dot(dv, tangent) - vc->tangentSpeed;\r\n                const vt = b2Vec2.DotVV(dv, tangent) - vc.tangentSpeed;\r\n                let lambda = vcp.tangentMass * (-vt);\r\n                // b2Clamp the accumulated force\r\n                const maxFriction = friction * vcp.normalImpulse;\r\n                const newImpulse = b2Clamp(vcp.tangentImpulse + lambda, (-maxFriction), maxFriction);\r\n                lambda = newImpulse - vcp.tangentImpulse;\r\n                vcp.tangentImpulse = newImpulse;\r\n                // Apply contact impulse\r\n                // b2Vec2 P = lambda * tangent;\r\n                b2Vec2.MulSV(lambda, tangent, P);\r\n                // vA -= mA * P;\r\n                vA.SelfMulSub(mA, P);\r\n                // wA -= iA * b2Cross(vcp->rA, P);\r\n                wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                // vB += mB * P;\r\n                vB.SelfMulAdd(mB, P);\r\n                // wB += iB * b2Cross(vcp->rB, P);\r\n                wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n            }\r\n            // Solve normal constraints\r\n            if (vc.pointCount === 1) {\r\n                const vcp = vc.points[0];\r\n                // Relative velocity at contact\r\n                // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), dv);\r\n                // Compute normal impulse\r\n                // float32 vn = b2Dot(dv, normal);\r\n                const vn = b2Vec2.DotVV(dv, normal);\r\n                let lambda = (-vcp.normalMass * (vn - vcp.velocityBias));\r\n                // b2Clamp the accumulated impulse\r\n                // float32 newImpulse = b2Max(vcp->normalImpulse + lambda, 0.0f);\r\n                const newImpulse = b2Max(vcp.normalImpulse + lambda, 0);\r\n                lambda = newImpulse - vcp.normalImpulse;\r\n                vcp.normalImpulse = newImpulse;\r\n                // Apply contact impulse\r\n                // b2Vec2 P = lambda * normal;\r\n                b2Vec2.MulSV(lambda, normal, P);\r\n                // vA -= mA * P;\r\n                vA.SelfMulSub(mA, P);\r\n                // wA -= iA * b2Cross(vcp->rA, P);\r\n                wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                // vB += mB * P;\r\n                vB.SelfMulAdd(mB, P);\r\n                // wB += iB * b2Cross(vcp->rB, P);\r\n                wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n            }\r\n            else {\r\n                // Block solver developed in collaboration with Dirk Gregorius (back in 01/07 on Box2D_Lite).\r\n                // Build the mini LCP for this contact patch\r\n                //\r\n                // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i = 1..2\r\n                //\r\n                // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\r\n                // b = vn0 - velocityBias\r\n                //\r\n                // The system is solved using the \"Total enumeration method\" (s. Murty). The complementary constraint vn_i * x_i\r\n                // implies that we must have in any solution either vn_i = 0 or x_i = 0. So for the 2D contact problem the cases\r\n                // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and vn1 = 0 need to be tested. The first valid\r\n                // solution that satisfies the problem is chosen.\r\n                //\r\n                // In order to account of the accumulated impulse 'a' (because of the iterative nature of the solver which only requires\r\n                // that the accumulated impulse is clamped and not the incremental impulse) we change the impulse variable (x_i).\r\n                //\r\n                // Substitute:\r\n                //\r\n                // x = a + d\r\n                //\r\n                // a := old total impulse\r\n                // x := new total impulse\r\n                // d := incremental impulse\r\n                //\r\n                // For the current iteration we extend the formula for the incremental impulse\r\n                // to compute the new total impulse:\r\n                //\r\n                // vn = A * d + b\r\n                //    = A * (x - a) + b\r\n                //    = A * x + b - A * a\r\n                //    = A * x + b'\r\n                // b' = b - A * a;\r\n                const cp1 = vc.points[0];\r\n                const cp2 = vc.points[1];\r\n                // b2Vec2 a(cp1->normalImpulse, cp2->normalImpulse);\r\n                a.Set(cp1.normalImpulse, cp2.normalImpulse);\r\n                ///b2Assert(a.x >= 0 && a.y >= 0);\r\n                // Relative velocity at contact\r\n                // b2Vec2 dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, cp1.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, cp1.rA, b2Vec2.s_t1), dv1);\r\n                // b2Vec2 dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, cp2.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, cp2.rA, b2Vec2.s_t1), dv2);\r\n                // Compute normal velocity\r\n                // float32 vn1 = b2Dot(dv1, normal);\r\n                let vn1 = b2Vec2.DotVV(dv1, normal);\r\n                // float32 vn2 = b2Dot(dv2, normal);\r\n                let vn2 = b2Vec2.DotVV(dv2, normal);\r\n                // b2Vec2 b;\r\n                b.x = vn1 - cp1.velocityBias;\r\n                b.y = vn2 - cp2.velocityBias;\r\n                // Compute b'\r\n                // b -= b2Mul(vc->K, a);\r\n                b.SelfSub(b2Mat22.MulMV(vc.K, a, b2Vec2.s_t0));\r\n                /*\r\n                #if B2_DEBUG_SOLVER === 1\r\n                const k_errorTol: number = 0.001;\r\n                #endif\r\n                */\r\n                for (;;) {\r\n                    //\r\n                    // Case 1: vn = 0\r\n                    //\r\n                    // 0 = A * x + b'\r\n                    //\r\n                    // Solve for x:\r\n                    //\r\n                    // x = - inv(A) * b'\r\n                    //\r\n                    // b2Vec2 x = - b2Mul(vc->normalMass, b);\r\n                    b2Mat22.MulMV(vc.normalMass, b, x).SelfNeg();\r\n                    if (x.x >= 0 && x.y >= 0) {\r\n                        // Get the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n                        dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn1 = b2Dot(dv1, normal);\r\n                        vn2 = b2Dot(dv2, normal);\r\n            \r\n                        ///b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\r\n                        ///b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 2: vn1 = 0 and x2 = 0\r\n                    //\r\n                    //   0 = a11 * x1 + a12 * 0 + b1'\r\n                    // vn2 = a21 * x1 + a22 * 0 + b2'\r\n                    //\r\n                    x.x = (-cp1.normalMass * b.x);\r\n                    x.y = 0;\r\n                    vn1 = 0;\r\n                    vn2 = vc.K.ex.y * x.x + b.y;\r\n                    if (x.x >= 0 && vn2 >= 0) {\r\n                        // Get the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn1 = b2Dot(dv1, normal);\r\n            \r\n                        ///b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 3: vn2 = 0 and x1 = 0\r\n                    //\r\n                    // vn1 = a11 * 0 + a12 * x2 + b1'\r\n                    //   0 = a21 * 0 + a22 * x2 + b2'\r\n                    //\r\n                    x.x = 0;\r\n                    x.y = (-cp2.normalMass * b.y);\r\n                    vn1 = vc.K.ey.x * x.y + b.x;\r\n                    vn2 = 0;\r\n                    if (x.y >= 0 && vn1 >= 0) {\r\n                        // Resubstitute for the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn2 = b2Dot(dv2, normal);\r\n            \r\n                        ///b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 4: x1 = 0 and x2 = 0\r\n                    //\r\n                    // vn1 = b1\r\n                    // vn2 = b2;\r\n                    x.x = 0;\r\n                    x.y = 0;\r\n                    vn1 = b.x;\r\n                    vn2 = b.y;\r\n                    if (vn1 >= 0 && vn2 >= 0) {\r\n                        // Resubstitute for the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        break;\r\n                    }\r\n                    // No solution, give up. This is hit sometimes, but it doesn't seem to matter.\r\n                    break;\r\n                }\r\n            }\r\n            // this.m_velocities[indexA].v = vA;\r\n            this.m_velocities[indexA].w = wA;\r\n            // this.m_velocities[indexB].v = vB;\r\n            this.m_velocities[indexB].w = wB;\r\n        }\r\n    }\r\n    StoreImpulses() {\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            let vc = this.m_velocityConstraints[i];\r\n            let manifold = this.m_contacts[vc.contactIndex].GetManifold();\r\n            for (let j = 0; j < vc.pointCount; ++j) {\r\n                manifold.points[j].normalImpulse = vc.points[j].normalImpulse;\r\n                manifold.points[j].tangentImpulse = vc.points[j].tangentImpulse;\r\n            }\r\n        }\r\n    }\r\n    SolvePositionConstraints() {\r\n        const xfA = b2ContactSolver.SolvePositionConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.SolvePositionConstraints_s_xfB;\r\n        const psm = b2ContactSolver.SolvePositionConstraints_s_psm;\r\n        const rA = b2ContactSolver.SolvePositionConstraints_s_rA;\r\n        const rB = b2ContactSolver.SolvePositionConstraints_s_rB;\r\n        const P = b2ContactSolver.SolvePositionConstraints_s_P;\r\n        let minSeparation = 0;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const pc = this.m_positionConstraints[i];\r\n            const indexA = pc.indexA;\r\n            const indexB = pc.indexB;\r\n            const localCenterA = pc.localCenterA;\r\n            const mA = pc.invMassA;\r\n            const iA = pc.invIA;\r\n            const localCenterB = pc.localCenterB;\r\n            const mB = pc.invMassB;\r\n            const iB = pc.invIB;\r\n            const pointCount = pc.pointCount;\r\n            const cA = this.m_positions[indexA].c;\r\n            let aA = this.m_positions[indexA].a;\r\n            const cB = this.m_positions[indexB].c;\r\n            let aB = this.m_positions[indexB].a;\r\n            // Solve normal constraints\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                xfA.q.SetAngle(aA);\r\n                xfB.q.SetAngle(aB);\r\n                b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n                b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n                psm.Initialize(pc, xfA, xfB, j);\r\n                const normal = psm.normal;\r\n                const point = psm.point;\r\n                const separation = psm.separation;\r\n                // b2Vec2 rA = point - cA;\r\n                b2Vec2.SubVV(point, cA, rA);\r\n                // b2Vec2 rB = point - cB;\r\n                b2Vec2.SubVV(point, cB, rB);\r\n                // Track max constraint error.\r\n                minSeparation = b2Min(minSeparation, separation);\r\n                // Prevent large corrections and allow slop.\r\n                const C = b2Clamp(b2_baumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\r\n                // Compute the effective mass.\r\n                // float32 rnA = b2Cross(rA, normal);\r\n                const rnA = b2Vec2.CrossVV(rA, normal);\r\n                // float32 rnB = b2Cross(rB, normal);\r\n                const rnB = b2Vec2.CrossVV(rB, normal);\r\n                // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                const K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                // Compute normal impulse\r\n                const impulse = K > 0 ? -C / K : 0;\r\n                // b2Vec2 P = impulse * normal;\r\n                b2Vec2.MulSV(impulse, normal, P);\r\n                // cA -= mA * P;\r\n                cA.SelfMulSub(mA, P);\r\n                // aA -= iA * b2Cross(rA, P);\r\n                aA -= iA * b2Vec2.CrossVV(rA, P);\r\n                // cB += mB * P;\r\n                cB.SelfMulAdd(mB, P);\r\n                // aB += iB * b2Cross(rB, P);\r\n                aB += iB * b2Vec2.CrossVV(rB, P);\r\n            }\r\n            // this.m_positions[indexA].c = cA;\r\n            this.m_positions[indexA].a = aA;\r\n            // this.m_positions[indexB].c = cB;\r\n            this.m_positions[indexB].a = aB;\r\n        }\r\n        // We can't expect minSpeparation >= -b2_linearSlop because we don't\r\n        // push the separation above -b2_linearSlop.\r\n        return minSeparation > (-3 * b2_linearSlop);\r\n    }\r\n    SolveTOIPositionConstraints(toiIndexA, toiIndexB) {\r\n        const xfA = b2ContactSolver.SolveTOIPositionConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.SolveTOIPositionConstraints_s_xfB;\r\n        const psm = b2ContactSolver.SolveTOIPositionConstraints_s_psm;\r\n        const rA = b2ContactSolver.SolveTOIPositionConstraints_s_rA;\r\n        const rB = b2ContactSolver.SolveTOIPositionConstraints_s_rB;\r\n        const P = b2ContactSolver.SolveTOIPositionConstraints_s_P;\r\n        let minSeparation = 0;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const pc = this.m_positionConstraints[i];\r\n            const indexA = pc.indexA;\r\n            const indexB = pc.indexB;\r\n            const localCenterA = pc.localCenterA;\r\n            const localCenterB = pc.localCenterB;\r\n            const pointCount = pc.pointCount;\r\n            let mA = 0;\r\n            let iA = 0;\r\n            if (indexA === toiIndexA || indexA === toiIndexB) {\r\n                mA = pc.invMassA;\r\n                iA = pc.invIA;\r\n            }\r\n            let mB = 0;\r\n            let iB = 0;\r\n            if (indexB === toiIndexA || indexB === toiIndexB) {\r\n                mB = pc.invMassB;\r\n                iB = pc.invIB;\r\n            }\r\n            const cA = this.m_positions[indexA].c;\r\n            let aA = this.m_positions[indexA].a;\r\n            const cB = this.m_positions[indexB].c;\r\n            let aB = this.m_positions[indexB].a;\r\n            // Solve normal constraints\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                xfA.q.SetAngle(aA);\r\n                xfB.q.SetAngle(aB);\r\n                b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n                b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n                psm.Initialize(pc, xfA, xfB, j);\r\n                const normal = psm.normal;\r\n                const point = psm.point;\r\n                const separation = psm.separation;\r\n                // b2Vec2 rA = point - cA;\r\n                b2Vec2.SubVV(point, cA, rA);\r\n                // b2Vec2 rB = point - cB;\r\n                b2Vec2.SubVV(point, cB, rB);\r\n                // Track max constraint error.\r\n                minSeparation = b2Min(minSeparation, separation);\r\n                // Prevent large corrections and allow slop.\r\n                const C = b2Clamp(b2_toiBaumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\r\n                // Compute the effective mass.\r\n                // float32 rnA = b2Cross(rA, normal);\r\n                const rnA = b2Vec2.CrossVV(rA, normal);\r\n                // float32 rnB = b2Cross(rB, normal);\r\n                const rnB = b2Vec2.CrossVV(rB, normal);\r\n                // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                const K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                // Compute normal impulse\r\n                const impulse = K > 0 ? -C / K : 0;\r\n                // b2Vec2 P = impulse * normal;\r\n                b2Vec2.MulSV(impulse, normal, P);\r\n                // cA -= mA * P;\r\n                cA.SelfMulSub(mA, P);\r\n                // aA -= iA * b2Cross(rA, P);\r\n                aA -= iA * b2Vec2.CrossVV(rA, P);\r\n                // cB += mB * P;\r\n                cB.SelfMulAdd(mB, P);\r\n                // aB += iB * b2Cross(rB, P);\r\n                aB += iB * b2Vec2.CrossVV(rB, P);\r\n            }\r\n            // this.m_positions[indexA].c = cA;\r\n            this.m_positions[indexA].a = aA;\r\n            // this.m_positions[indexB].c = cB;\r\n            this.m_positions[indexB].a = aB;\r\n        }\r\n        // We can't expect minSpeparation >= -b2_linearSlop because we don't\r\n        // push the separation above -b2_linearSlop.\r\n        return minSeparation >= -1.5 * b2_linearSlop;\r\n    }\r\n}\r\nb2ContactSolver.InitializeVelocityConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.InitializeVelocityConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.InitializeVelocityConstraints_s_worldManifold = new b2WorldManifold();\r\nb2ContactSolver.WarmStart_s_P = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv1 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv2 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_a = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_b = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_x = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_d = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P1 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P2 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P1P2 = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.SolvePositionConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.SolvePositionConstraints_s_psm = new b2PositionSolverManifold();\r\nb2ContactSolver.SolvePositionConstraints_s_rA = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_rB = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_psm = new b2PositionSolverManifold();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_rA = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_rB = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb250YWN0U29sdmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvRHluYW1pY3MvQ29udGFjdHMvYjJDb250YWN0U29sdmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsT0FBTyxFQUFFLGFBQWEsRUFBRSxvQkFBb0IsRUFBRSxvQkFBb0IsRUFBRSxzQkFBc0IsRUFBRSxZQUFZLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3hLLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUdqRyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBSzdELE9BQU8sRUFBRSxVQUFVLEVBQTBCLE1BQU0sZUFBZSxDQUFDO0FBRW5FLE1BQU07SUFBTjtRQUNTLE9BQUUsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQzFCLE9BQUUsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQzFCLGtCQUFhLEdBQVcsQ0FBQyxDQUFDO1FBQzFCLG1CQUFjLEdBQVcsQ0FBQyxDQUFDO1FBQzNCLGVBQVUsR0FBVyxDQUFDLENBQUM7UUFDdkIsZ0JBQVcsR0FBVyxDQUFDLENBQUM7UUFDeEIsaUJBQVksR0FBVyxDQUFDLENBQUM7SUFLbEMsQ0FBQztJQUhRLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBYztRQUNwQyxPQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLElBQUkseUJBQXlCLEVBQUUsQ0FBQyxDQUFDO0lBQzdFLENBQUM7Q0FDRjtBQUVELE1BQU07SUFBTjtR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QUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMvQyxNQUFNLEVBQUUsR0FBVyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUUvQyxNQUFNLEVBQUUsR0FBVyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM5QyxNQUFNLEVBQUUsR0FBVyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM5QyxNQUFNLEVBQUUsR0FBVyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMvQyxNQUFNLEVBQUUsR0FBVyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUUvQyxxQ0FBcUM7WUFFckMsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDbkIsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLFlBQVksRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZFLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxZQUFZLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUV2RSxhQUFhLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUUvRCxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENB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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_maxFloat, b2_timeToSleep } from \"../Common/b2Settings\";\r\nimport { b2_maxTranslation, b2_maxTranslationSquared } from \"../Common/b2Settings\";\r\nimport { b2_maxRotation, b2_maxRotationSquared } from \"../Common/b2Settings\";\r\nimport { b2_linearSleepTolerance, b2_angularSleepTolerance } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2ContactSolver, b2ContactSolverDef } from \"./Contacts/b2ContactSolver\";\r\nimport { b2BodyType } from \"./b2Body\";\r\nimport { b2SolverData, b2Position, b2Velocity } from \"./b2TimeStep\";\r\nimport { b2ContactImpulse } from \"./b2WorldCallbacks\";\r\n/*\r\nPosition Correction Notes\r\n=========================\r\nI tried the several algorithms for position correction of the 2D revolute joint.\r\nI looked at these systems:\r\n- simple pendulum (1m diameter sphere on massless 5m stick) with initial angular velocity of 100 rad/s.\r\n- suspension bridge with 30 1m long planks of length 1m.\r\n- multi-link chain with 30 1m long links.\r\n\r\nHere are the algorithms:\r\n\r\nBaumgarte - A fraction of the position error is added to the velocity error. There is no\r\nseparate position solver.\r\n\r\nPseudo Velocities - After the velocity solver and position integration,\r\nthe position error, Jacobian, and effective mass are recomputed. Then\r\nthe velocity constraints are solved with pseudo velocities and a fraction\r\nof the position error is added to the pseudo velocity error. The pseudo\r\nvelocities are initialized to zero and there is no warm-starting. After\r\nthe position solver, the pseudo velocities are added to the positions.\r\nThis is also called the First Order World method or the Position LCP method.\r\n\r\nModified Nonlinear Gauss-Seidel (NGS) - Like Pseudo Velocities except the\r\nposition error is re-computed for each constraint and the positions are updated\r\nafter the constraint is solved. The radius vectors (aka Jacobians) are\r\nre-computed too (otherwise the algorithm has horrible instability). The pseudo\r\nvelocity states are not needed because they are effectively zero at the beginning\r\nof each iteration. Since we have the current position error, we allow the\r\niterations to terminate early if the error becomes smaller than b2_linearSlop.\r\n\r\nFull NGS or just NGS - Like Modified NGS except the effective mass are re-computed\r\neach time a constraint is solved.\r\n\r\nHere are the results:\r\nBaumgarte - this is the cheapest algorithm but it has some stability problems,\r\nespecially with the bridge. The chain links separate easily close to the root\r\nand they jitter as they struggle to pull together. This is one of the most common\r\nmethods in the field. The big drawback is that the position correction artificially\r\naffects the momentum, thus leading to instabilities and false bounce. I used a\r\nbias factor of 0.2. A larger bias factor makes the bridge less stable, a smaller\r\nfactor makes joints and contacts more spongy.\r\n\r\nPseudo Velocities - the is more stable than the Baumgarte method. The bridge is\r\nstable. However, joints still separate with large angular velocities. Drag the\r\nsimple pendulum in a circle quickly and the joint will separate. The chain separates\r\neasily and does not recover. I used a bias factor of 0.2. A larger value lead to\r\nthe bridge collapsing when a heavy cube drops on it.\r\n\r\nModified NGS - this algorithm is better in some ways than Baumgarte and Pseudo\r\nVelocities, but in other ways it is worse. The bridge and chain are much more\r\nstable, but the simple pendulum goes unstable at high angular velocities.\r\n\r\nFull NGS - stable in all tests. The joints display good stiffness. The bridge\r\nstill sags, but this is better than infinite forces.\r\n\r\nRecommendations\r\nPseudo Velocities are not really worthwhile because the bridge and chain cannot\r\nrecover from joint separation. In other cases the benefit over Baumgarte is small.\r\n\r\nModified NGS is not a robust method for the revolute joint due to the violent\r\ninstability seen in the simple pendulum. Perhaps it is viable with other constraint\r\ntypes, especially scalar constraints where the effective mass is a scalar.\r\n\r\nThis leaves Baumgarte and Full NGS. Baumgarte has small, but manageable instabilities\r\nand is very fast. I don't think we can escape Baumgarte, especially in highly\r\ndemanding cases where high constraint fidelity is not needed.\r\n\r\nFull NGS is robust and easy on the eyes. I recommend this as an option for\r\nhigher fidelity simulation and certainly for suspension bridges and long chains.\r\nFull NGS might be a good choice for ragdolls, especially motorized ragdolls where\r\njoint separation can be problematic. The number of NGS iterations can be reduced\r\nfor better performance without harming robustness much.\r\n\r\nEach joint in a can be handled differently in the position solver. So I recommend\r\na system where the user can select the algorithm on a per joint basis. I would\r\nprobably default to the slower Full NGS and let the user select the faster\r\nBaumgarte method in performance critical scenarios.\r\n*/\r\n/*\r\nCache Performance\r\n\r\nThe Box2D solvers are dominated by cache misses. Data structures are designed\r\nto increase the number of cache hits. Much of misses are due to random access\r\nto body data. The constraint structures are iterated over linearly, which leads\r\nto few cache misses.\r\n\r\nThe bodies are not accessed during iteration. Instead read only data, such as\r\nthe mass values are stored with the constraints. The mutable data are the constraint\r\nimpulses and the bodies velocities/positions. The impulses are held inside the\r\nconstraint structures. The body velocities/positions are held in compact, temporary\r\narrays to increase the number of cache hits. Linear and angular velocity are\r\nstored in a single array since multiple arrays lead to multiple misses.\r\n*/\r\n/*\r\n2D Rotation\r\n\r\nR = [cos(theta) -sin(theta)]\r\n    [sin(theta) cos(theta) ]\r\n\r\nthetaDot = omega\r\n\r\nLet q1 = cos(theta), q2 = sin(theta).\r\nR = [q1 -q2]\r\n    [q2  q1]\r\n\r\nq1Dot = -thetaDot * q2\r\nq2Dot = thetaDot * q1\r\n\r\nq1_new = q1_old - dt * w * q2\r\nq2_new = q2_old + dt * w * q1\r\nthen normalize.\r\n\r\nThis might be faster than computing sin+cos.\r\nHowever, we can compute sin+cos of the same angle fast.\r\n*/\r\nexport class b2Island {\r\n    constructor() {\r\n        this.m_allocator = null;\r\n        this.m_listener = null;\r\n        this.m_bodies = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_contacts = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_joints = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_positions = b2Position.MakeArray(1024); // TODO: b2Settings\r\n        this.m_velocities = b2Velocity.MakeArray(1024); // TODO: b2Settings\r\n        this.m_bodyCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_bodyCapacity = 0;\r\n        this.m_contactCapacity = 0;\r\n        this.m_jointCapacity = 0;\r\n    }\r\n    Initialize(bodyCapacity, contactCapacity, jointCapacity, allocator, listener) {\r\n        this.m_bodyCapacity = bodyCapacity;\r\n        this.m_contactCapacity = contactCapacity;\r\n        this.m_jointCapacity = jointCapacity;\r\n        this.m_bodyCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_allocator = allocator;\r\n        this.m_listener = listener;\r\n        // TODO:\r\n        while (this.m_bodies.length < bodyCapacity) {\r\n            this.m_bodies[this.m_bodies.length] = null;\r\n        }\r\n        // TODO:\r\n        while (this.m_contacts.length < contactCapacity) {\r\n            this.m_contacts[this.m_contacts.length] = null;\r\n        }\r\n        // TODO:\r\n        while (this.m_joints.length < jointCapacity) {\r\n            this.m_joints[this.m_joints.length] = null;\r\n        }\r\n        // TODO:\r\n        if (this.m_positions.length < bodyCapacity) {\r\n            const new_length = b2Max(this.m_positions.length * 2, bodyCapacity);\r\n            while (this.m_positions.length < new_length) {\r\n                this.m_positions[this.m_positions.length] = new b2Position();\r\n            }\r\n        }\r\n        // TODO:\r\n        if (this.m_velocities.length < bodyCapacity) {\r\n            const new_length = b2Max(this.m_velocities.length * 2, bodyCapacity);\r\n            while (this.m_velocities.length < new_length) {\r\n                this.m_velocities[this.m_velocities.length] = new b2Velocity();\r\n            }\r\n        }\r\n    }\r\n    Clear() {\r\n        this.m_bodyCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_jointCount = 0;\r\n    }\r\n    AddBody(body) {\r\n        ///b2Assert(this.m_bodyCount < this.m_bodyCapacity);\r\n        body.m_islandIndex = this.m_bodyCount;\r\n        this.m_bodies[this.m_bodyCount++] = body;\r\n    }\r\n    AddContact(contact) {\r\n        ///b2Assert(this.m_contactCount < this.m_contactCapacity);\r\n        this.m_contacts[this.m_contactCount++] = contact;\r\n    }\r\n    AddJoint(joint) {\r\n        ///b2Assert(this.m_jointCount < this.m_jointCapacity);\r\n        this.m_joints[this.m_jointCount++] = joint;\r\n    }\r\n    Solve(profile, step, gravity, allowSleep) {\r\n        const timer = b2Island.s_timer.Reset();\r\n        const h = step.dt;\r\n        // Integrate velocities and apply damping. Initialize the body state.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const b = this.m_bodies[i];\r\n            /*const c: b2Vec2 =*/ this.m_positions[i].c.Copy(b.m_sweep.c);\r\n            const a = b.m_sweep.a;\r\n            const v = this.m_velocities[i].v.Copy(b.m_linearVelocity);\r\n            let w = b.m_angularVelocity;\r\n            // Store positions for continuous collision.\r\n            b.m_sweep.c0.Copy(b.m_sweep.c);\r\n            b.m_sweep.a0 = b.m_sweep.a;\r\n            if (b.m_type === b2BodyType.b2_dynamicBody) {\r\n                // Integrate velocities.\r\n                v.x += h * (b.m_gravityScale * gravity.x + b.m_invMass * b.m_force.x);\r\n                v.y += h * (b.m_gravityScale * gravity.y + b.m_invMass * b.m_force.y);\r\n                w += h * b.m_invI * b.m_torque;\r\n                // Apply damping.\r\n                // ODE: dv/dt + c * v = 0\r\n                // Solution: v(t) = v0 * exp(-c * t)\r\n                // Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\r\n                // v2 = exp(-c * dt) * v1\r\n                // Pade approximation:\r\n                // v2 = v1 * 1 / (1 + c * dt)\r\n                v.SelfMul(1.0 / (1.0 + h * b.m_linearDamping));\r\n                w *= 1.0 / (1.0 + h * b.m_angularDamping);\r\n            }\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n        }\r\n        timer.Reset();\r\n        // Solver data\r\n        const solverData = b2Island.s_solverData;\r\n        solverData.step.Copy(step);\r\n        solverData.positions = this.m_positions;\r\n        solverData.velocities = this.m_velocities;\r\n        // Initialize velocity constraints.\r\n        const contactSolverDef = b2Island.s_contactSolverDef;\r\n        contactSolverDef.step.Copy(step);\r\n        contactSolverDef.contacts = this.m_contacts;\r\n        contactSolverDef.count = this.m_contactCount;\r\n        contactSolverDef.positions = this.m_positions;\r\n        contactSolverDef.velocities = this.m_velocities;\r\n        contactSolverDef.allocator = this.m_allocator;\r\n        const contactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\r\n        contactSolver.InitializeVelocityConstraints();\r\n        if (step.warmStarting) {\r\n            contactSolver.WarmStart();\r\n        }\r\n        for (let i = 0; i < this.m_jointCount; ++i) {\r\n            this.m_joints[i].InitVelocityConstraints(solverData);\r\n        }\r\n        profile.solveInit = timer.GetMilliseconds();\r\n        // Solve velocity constraints.\r\n        timer.Reset();\r\n        for (let i = 0; i < step.velocityIterations; ++i) {\r\n            for (let j = 0; j < this.m_jointCount; ++j) {\r\n                this.m_joints[j].SolveVelocityConstraints(solverData);\r\n            }\r\n            contactSolver.SolveVelocityConstraints();\r\n        }\r\n        // Store impulses for warm starting\r\n        contactSolver.StoreImpulses();\r\n        profile.solveVelocity = timer.GetMilliseconds();\r\n        // Integrate positions.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const c = this.m_positions[i].c;\r\n            let a = this.m_positions[i].a;\r\n            const v = this.m_velocities[i].v;\r\n            let w = this.m_velocities[i].w;\r\n            // Check for large velocities\r\n            const translation = b2Vec2.MulSV(h, v, b2Island.s_translation);\r\n            if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\r\n                const ratio = b2_maxTranslation / translation.Length();\r\n                v.SelfMul(ratio);\r\n            }\r\n            const rotation = h * w;\r\n            if (rotation * rotation > b2_maxRotationSquared) {\r\n                const ratio = b2_maxRotation / b2Abs(rotation);\r\n                w *= ratio;\r\n            }\r\n            // Integrate\r\n            c.x += h * v.x;\r\n            c.y += h * v.y;\r\n            a += h * w;\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n        }\r\n        // Solve position constraints\r\n        timer.Reset();\r\n        let positionSolved = false;\r\n        for (let i = 0; i < step.positionIterations; ++i) {\r\n            const contactsOkay = contactSolver.SolvePositionConstraints();\r\n            let jointsOkay = true;\r\n            for (let j = 0; j < this.m_jointCount; ++j) {\r\n                const jointOkay = this.m_joints[j].SolvePositionConstraints(solverData);\r\n                jointsOkay = jointsOkay && jointOkay;\r\n            }\r\n            if (contactsOkay && jointsOkay) {\r\n                // Exit early if the position errors are small.\r\n                positionSolved = true;\r\n                break;\r\n            }\r\n        }\r\n        // Copy state buffers back to the bodies\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const body = this.m_bodies[i];\r\n            body.m_sweep.c.Copy(this.m_positions[i].c);\r\n            body.m_sweep.a = this.m_positions[i].a;\r\n            body.m_linearVelocity.Copy(this.m_velocities[i].v);\r\n            body.m_angularVelocity = this.m_velocities[i].w;\r\n            body.SynchronizeTransform();\r\n        }\r\n        profile.solvePosition = timer.GetMilliseconds();\r\n        this.Report(contactSolver.m_velocityConstraints);\r\n        if (allowSleep) {\r\n            let minSleepTime = b2_maxFloat;\r\n            const linTolSqr = b2_linearSleepTolerance * b2_linearSleepTolerance;\r\n            const angTolSqr = b2_angularSleepTolerance * b2_angularSleepTolerance;\r\n            for (let i = 0; i < this.m_bodyCount; ++i) {\r\n                const b = this.m_bodies[i];\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    continue;\r\n                }\r\n                if (!b.m_autoSleepFlag ||\r\n                    b.m_angularVelocity * b.m_angularVelocity > angTolSqr ||\r\n                    b2Vec2.DotVV(b.m_linearVelocity, b.m_linearVelocity) > linTolSqr) {\r\n                    b.m_sleepTime = 0;\r\n                    minSleepTime = 0;\r\n                }\r\n                else {\r\n                    b.m_sleepTime += h;\r\n                    minSleepTime = b2Min(minSleepTime, b.m_sleepTime);\r\n                }\r\n            }\r\n            if (minSleepTime >= b2_timeToSleep && positionSolved) {\r\n                for (let i = 0; i < this.m_bodyCount; ++i) {\r\n                    const b = this.m_bodies[i];\r\n                    b.SetAwake(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveTOI(subStep, toiIndexA, toiIndexB) {\r\n        ///b2Assert(toiIndexA < this.m_bodyCount);\r\n        ///b2Assert(toiIndexB < this.m_bodyCount);\r\n        // Initialize the body state.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const b = this.m_bodies[i];\r\n            this.m_positions[i].c.Copy(b.m_sweep.c);\r\n            this.m_positions[i].a = b.m_sweep.a;\r\n            this.m_velocities[i].v.Copy(b.m_linearVelocity);\r\n            this.m_velocities[i].w = b.m_angularVelocity;\r\n        }\r\n        const contactSolverDef = b2Island.s_contactSolverDef;\r\n        contactSolverDef.contacts = this.m_contacts;\r\n        contactSolverDef.count = this.m_contactCount;\r\n        contactSolverDef.allocator = this.m_allocator;\r\n        contactSolverDef.step.Copy(subStep);\r\n        contactSolverDef.positions = this.m_positions;\r\n        contactSolverDef.velocities = this.m_velocities;\r\n        const contactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\r\n        // Solve position constraints.\r\n        for (let i = 0; i < subStep.positionIterations; ++i) {\r\n            const contactsOkay = contactSolver.SolveTOIPositionConstraints(toiIndexA, toiIndexB);\r\n            if (contactsOkay) {\r\n                break;\r\n            }\r\n        }\r\n        /*\r\n        #if 0\r\n          // Is the new position really safe?\r\n          for (int32 i = 0; i < this.m_contactCount; ++i) {\r\n            b2Contact* c = this.m_contacts[i];\r\n            b2Fixture* fA = c.GetFixtureA();\r\n            b2Fixture* fB = c.GetFixtureB();\r\n      \r\n            b2Body* bA = fA.GetBody();\r\n            b2Body* bB = fB.GetBody();\r\n      \r\n            int32 indexA = c.GetChildIndexA();\r\n            int32 indexB = c.GetChildIndexB();\r\n      \r\n            b2DistanceInput input;\r\n            input.proxyA.Set(fA.GetShape(), indexA);\r\n            input.proxyB.Set(fB.GetShape(), indexB);\r\n            input.transformA = bA.GetTransform();\r\n            input.transformB = bB.GetTransform();\r\n            input.useRadii = false;\r\n      \r\n            b2DistanceOutput output;\r\n            b2SimplexCache cache;\r\n            cache.count = 0;\r\n            b2Distance(&output, &cache, &input);\r\n      \r\n            if (output.distance === 0 || cache.count === 3) {\r\n              cache.count += 0;\r\n            }\r\n          }\r\n        #endif\r\n        */\r\n        // Leap of faith to new safe state.\r\n        this.m_bodies[toiIndexA].m_sweep.c0.Copy(this.m_positions[toiIndexA].c);\r\n        this.m_bodies[toiIndexA].m_sweep.a0 = this.m_positions[toiIndexA].a;\r\n        this.m_bodies[toiIndexB].m_sweep.c0.Copy(this.m_positions[toiIndexB].c);\r\n        this.m_bodies[toiIndexB].m_sweep.a0 = this.m_positions[toiIndexB].a;\r\n        // No warm starting is needed for TOI events because warm\r\n        // starting impulses were applied in the discrete solver.\r\n        contactSolver.InitializeVelocityConstraints();\r\n        // Solve velocity constraints.\r\n        for (let i = 0; i < subStep.velocityIterations; ++i) {\r\n            contactSolver.SolveVelocityConstraints();\r\n        }\r\n        // Don't store the TOI contact forces for warm starting\r\n        // because they can be quite large.\r\n        const h = subStep.dt;\r\n        // Integrate positions\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const c = this.m_positions[i].c;\r\n            let a = this.m_positions[i].a;\r\n            const v = this.m_velocities[i].v;\r\n            let w = this.m_velocities[i].w;\r\n            // Check for large velocities\r\n            const translation = b2Vec2.MulSV(h, v, b2Island.s_translation);\r\n            if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\r\n                const ratio = b2_maxTranslation / translation.Length();\r\n                v.SelfMul(ratio);\r\n            }\r\n            const rotation = h * w;\r\n            if (rotation * rotation > b2_maxRotationSquared) {\r\n                const ratio = b2_maxRotation / b2Abs(rotation);\r\n                w *= ratio;\r\n            }\r\n            // Integrate\r\n            c.SelfMulAdd(h, v);\r\n            a += h * w;\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n            // Sync bodies\r\n            const body = this.m_bodies[i];\r\n            body.m_sweep.c.Copy(c);\r\n            body.m_sweep.a = a;\r\n            body.m_linearVelocity.Copy(v);\r\n            body.m_angularVelocity = w;\r\n            body.SynchronizeTransform();\r\n        }\r\n        this.Report(contactSolver.m_velocityConstraints);\r\n    }\r\n    Report(constraints) {\r\n        if (this.m_listener === null) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.m_contactCount; ++i) {\r\n            const c = this.m_contacts[i];\r\n            if (!c) {\r\n                continue;\r\n            }\r\n            const vc = constraints[i];\r\n            const impulse = b2Island.s_impulse;\r\n            impulse.count = vc.pointCount;\r\n            for (let j = 0; j < vc.pointCount; ++j) {\r\n                impulse.normalImpulses[j] = vc.points[j].normalImpulse;\r\n                impulse.tangentImpulses[j] = vc.points[j].tangentImpulse;\r\n            }\r\n            this.m_listener.PostSolve(c, impulse);\r\n        }\r\n    }\r\n}\r\nb2Island.s_timer = new b2Timer();\r\nb2Island.s_solverData = new b2SolverData();\r\nb2Island.s_contactSolverDef = new b2ContactSolverDef();\r\nb2Island.s_contactSolver = new b2ContactSolver();\r\nb2Island.s_translation = new b2Vec2();\r\nb2Island.s_impulse = new b2ContactImpulse();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_invalidParticleIndex } from \"../Common/b2Settings\";\r\nimport { b2Clamp, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\n/**\r\n * The particle type. Can be combined with the | operator.\r\n */\r\nexport var b2ParticleFlag;\r\n(function (b2ParticleFlag) {\r\n    /// Water particle.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_waterParticle\"] = 0] = \"b2_waterParticle\";\r\n    /// Removed after next simulation step.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_zombieParticle\"] = 2] = \"b2_zombieParticle\";\r\n    /// Zero velocity.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_wallParticle\"] = 4] = \"b2_wallParticle\";\r\n    /// With restitution from stretching.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_springParticle\"] = 8] = \"b2_springParticle\";\r\n    /// With restitution from deformation.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_elasticParticle\"] = 16] = \"b2_elasticParticle\";\r\n    /// With viscosity.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_viscousParticle\"] = 32] = \"b2_viscousParticle\";\r\n    /// Without isotropic pressure.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_powderParticle\"] = 64] = \"b2_powderParticle\";\r\n    /// With surface tension.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_tensileParticle\"] = 128] = \"b2_tensileParticle\";\r\n    /// Mix color between contacting particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_colorMixingParticle\"] = 256] = \"b2_colorMixingParticle\";\r\n    /// Call b2DestructionListener on destruction.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_destructionListenerParticle\"] = 512] = \"b2_destructionListenerParticle\";\r\n    /// Prevents other particles from leaking.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_barrierParticle\"] = 1024] = \"b2_barrierParticle\";\r\n    /// Less compressibility.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_staticPressureParticle\"] = 2048] = \"b2_staticPressureParticle\";\r\n    /// Makes pairs or triads with other particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_reactiveParticle\"] = 4096] = \"b2_reactiveParticle\";\r\n    /// With high repulsive force.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_repulsiveParticle\"] = 8192] = \"b2_repulsiveParticle\";\r\n    /// Call b2ContactListener when this particle is about to interact with\r\n    /// a rigid body or stops interacting with a rigid body.\r\n    /// This results in an expensive operation compared to using\r\n    /// b2_fixtureContactFilterParticle to detect collisions between\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_fixtureContactListenerParticle\"] = 16384] = \"b2_fixtureContactListenerParticle\";\r\n    /// Call b2ContactListener when this particle is about to interact with\r\n    /// another particle or stops interacting with another particle.\r\n    /// This results in an expensive operation compared to using\r\n    /// b2_particleContactFilterParticle to detect collisions between\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_particleContactListenerParticle\"] = 32768] = \"b2_particleContactListenerParticle\";\r\n    /// Call b2ContactFilter when this particle interacts with rigid bodies.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_fixtureContactFilterParticle\"] = 65536] = \"b2_fixtureContactFilterParticle\";\r\n    /// Call b2ContactFilter when this particle interacts with other\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_particleContactFilterParticle\"] = 131072] = \"b2_particleContactFilterParticle\";\r\n})(b2ParticleFlag || (b2ParticleFlag = {}));\r\nexport class b2ParticleDef {\r\n    constructor() {\r\n        this.flags = 0;\r\n        this.position = new b2Vec2();\r\n        this.velocity = new b2Vec2();\r\n        this.color = new b2Color();\r\n        this.lifetime = 0.0;\r\n        this.userData = null;\r\n        this.group = null;\r\n    }\r\n}\r\nexport function b2CalculateParticleIterations(gravity, radius, timeStep) {\r\n    // In some situations you may want more particle iterations than this,\r\n    // but to avoid excessive cycle cost, don't recommend more than this.\r\n    const B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS = 8;\r\n    const B2_RADIUS_THRESHOLD = 0.01;\r\n    const iterations = Math.ceil(Math.sqrt(gravity / (B2_RADIUS_THRESHOLD * radius)) * timeStep);\r\n    return b2Clamp(iterations, 1, B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS);\r\n}\r\nexport class b2ParticleHandle {\r\n    constructor() {\r\n        this.m_index = b2_invalidParticleIndex;\r\n    }\r\n    GetIndex() { return this.m_index; }\r\n    SetIndex(index) { this.m_index = index; }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQYXJ0aWNsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL1BhcnRpY2xlL2IyUGFydGljbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCx5QkFBeUI7QUFFekIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDL0QsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHM0M7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxjQThDWDtBQTlDRCxXQUFZLGNBQWM7SUFDeEIsbUJBQW1CO0lBQ25CLDJFQUFvQixDQUFBO0lBQ3BCLHVDQUF1QztJQUN2Qyw2RUFBMEIsQ0FBQTtJQUMxQixrQkFBa0I7SUFDbEIseUVBQXdCLENBQUE7SUFDeEIscUNBQXFDO0lBQ3JDLDZFQUEwQixDQUFBO0lBQzFCLHNDQUFzQztJQUN0QyxnRkFBMkIsQ0FBQTtJQUMzQixtQkFBbUI7SUFDbkIsZ0ZBQTJCLENBQUE7SUFDM0IsK0JBQStCO0lBQy9CLDhFQUEwQixDQUFBO0lBQzFCLHlCQUF5QjtJQUN6QixpRkFBMkIsQ0FBQTtJQUMzQiwyQ0FBMkM7SUFDM0MseUZBQStCLENBQUE7SUFDL0IsOENBQThDO0lBQzlDLHlHQUF1QyxDQUFBO0lBQ3ZDLDBDQUEwQztJQUMxQyxrRkFBNEIsQ0FBQTtJQUM1Qix5QkFBeUI7SUFDekIsZ0dBQW1DLENBQUE7SUFDbkMsK0NBQStDO0lBQy9DLG9GQUE2QixDQUFBO0lBQzdCLDhCQUE4QjtJQUM5QixzRkFBOEIsQ0FBQTtJQUM5Qix1RUFBdUU7SUFDdkUsd0RBQXdEO0lBQ3hELDREQUE0RDtJQUM1RCxnRUFBZ0U7SUFDaEUsY0FBYztJQUNkLGlIQUEyQyxDQUFBO0lBQzNDLHVFQUF1RTtJQUN2RSxnRUFBZ0U7SUFDaEUsNERBQTREO0lBQzVELGlFQUFpRTtJQUNqRSxjQUFjO0lBQ2QsbUhBQTRDLENBQUE7SUFDNUMsd0VBQXdFO0lBQ3hFLDZHQUF5QyxDQUFBO0lBQ3pDLGdFQUFnRTtJQUNoRSxjQUFjO0lBQ2QsZ0hBQTBDLENBQUE7QUFDNUMsQ0FBQyxFQTlDVyxjQUFjLEtBQWQsY0FBYyxRQThDekI7QUFFRCxNQUFNO0lBQU47UUFDRSxVQUFLLEdBQW1CLENBQUMsQ0FBQztRQUMxQixhQUFRLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNoQyxhQUFRLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNoQyxVQUFLLEdBQVksSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUMvQixhQUFRLEdBQVcsR0FBRyxDQUFDO1FBQ3ZCLGFBQVEsR0FBUSxJQUFJLENBQUM7UUFDckIsVUFBSyxHQUFvQixJQUFJLENBQUM7SUFDaEMsQ0FBQztDQUFBO0FBRUQsTUFBTSx3Q0FBd0MsT0FBZSxFQUFFLE1BQWMsRUFBRSxRQUFnQjtJQUM3RixzRUFBc0U7SUFDdEUscUVBQXFFO0lBQ3JFLE1BQU0sc0NBQXNDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pELE1BQU0sbUJBQW1CLEdBQUcsSUFBSSxDQUFDO0lBQ2pDLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxtQkFBbUIsR0FBRyxNQUFNLENBQUMsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDO0lBQzdGLE9BQU8sT0FBTyxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsc0NBQXNDLENBQUMsQ0FBQztBQUN4RSxDQUFDO0FBRUQsTUFBTTtJQUFOO1FBQ1MsWUFBTyxHQUFXLHVCQUF1QixDQUFDO0lBR25ELENBQUM7SUFGUSxRQUFRLEtBQWEsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUMzQyxRQUFRLENBQUMsS0FBYSxJQUFVLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQztDQUMvRDtBQUVELFNBQVMifQ==","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2Vec2, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\nexport var b2ParticleGroupFlag;\r\n(function (b2ParticleGroupFlag) {\r\n    /// Prevents overlapping or leaking.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_solidParticleGroup\"] = 1] = \"b2_solidParticleGroup\";\r\n    /// Keeps its shape.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_rigidParticleGroup\"] = 2] = \"b2_rigidParticleGroup\";\r\n    /// Won't be destroyed if it gets empty.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupCanBeEmpty\"] = 4] = \"b2_particleGroupCanBeEmpty\";\r\n    /// Will be destroyed on next simulation step.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupWillBeDestroyed\"] = 8] = \"b2_particleGroupWillBeDestroyed\";\r\n    /// Updates depth data on next simulation step.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupNeedsUpdateDepth\"] = 16] = \"b2_particleGroupNeedsUpdateDepth\";\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupInternalMask\"] = 24] = \"b2_particleGroupInternalMask\";\r\n})(b2ParticleGroupFlag || (b2ParticleGroupFlag = {}));\r\nexport class b2ParticleGroupDef {\r\n    constructor() {\r\n        this.flags = 0;\r\n        this.groupFlags = 0;\r\n        this.position = new b2Vec2();\r\n        this.angle = 0.0;\r\n        this.linearVelocity = new b2Vec2();\r\n        this.angularVelocity = 0.0;\r\n        this.color = new b2Color();\r\n        this.strength = 1.0;\r\n        this.shape = null;\r\n        this.shapes = null;\r\n        this.shapeCount = 0;\r\n        this.stride = 0;\r\n        this.particleCount = 0;\r\n        this.positionData = null;\r\n        this.lifetime = 0;\r\n        this.userData = null;\r\n        this.group = null;\r\n    }\r\n}\r\nexport class b2ParticleGroup {\r\n    constructor(system) {\r\n        this.m_system = null;\r\n        this.m_firstIndex = 0;\r\n        this.m_lastIndex = 0;\r\n        this.m_groupFlags = 0;\r\n        this.m_strength = 1.0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_timestamp = -1;\r\n        this.m_mass = 0.0;\r\n        this.m_inertia = 0.0;\r\n        this.m_center = new b2Vec2();\r\n        this.m_linearVelocity = new b2Vec2();\r\n        this.m_angularVelocity = 0.0;\r\n        this.m_transform = new b2Transform();\r\n        ///m_transform.SetIdentity();\r\n        this.m_userData = null;\r\n        this.m_system = system;\r\n    }\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    GetParticleSystem() {\r\n        return this.m_system;\r\n    }\r\n    GetParticleCount() {\r\n        return this.m_lastIndex - this.m_firstIndex;\r\n    }\r\n    GetBufferIndex() {\r\n        return this.m_firstIndex;\r\n    }\r\n    ContainsParticle(index) {\r\n        return this.m_firstIndex <= index && index < this.m_lastIndex;\r\n    }\r\n    GetAllParticleFlags() {\r\n        let flags = 0;\r\n        for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n            flags |= this.m_system.m_flagsBuffer.data[i];\r\n        }\r\n        return flags;\r\n    }\r\n    GetGroupFlags() {\r\n        return this.m_groupFlags;\r\n    }\r\n    SetGroupFlags(flags) {\r\n        ///b2Assert((flags & b2ParticleGroupFlag.b2_particleGroupInternalMask) === 0);\r\n        flags |= this.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupInternalMask;\r\n        this.m_system.SetGroupFlags(this, flags);\r\n    }\r\n    GetMass() {\r\n        this.UpdateStatistics();\r\n        return this.m_mass;\r\n    }\r\n    GetInertia() {\r\n        this.UpdateStatistics();\r\n        return this.m_inertia;\r\n    }\r\n    GetCenter() {\r\n        this.UpdateStatistics();\r\n        return this.m_center;\r\n    }\r\n    GetLinearVelocity() {\r\n        this.UpdateStatistics();\r\n        return this.m_linearVelocity;\r\n    }\r\n    GetAngularVelocity() {\r\n        this.UpdateStatistics();\r\n        return this.m_angularVelocity;\r\n    }\r\n    GetTransform() {\r\n        return this.m_transform;\r\n    }\r\n    GetPosition() {\r\n        return this.m_transform.p;\r\n    }\r\n    GetAngle() {\r\n        return this.m_transform.q.GetAngle();\r\n    }\r\n    GetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n        const s_t0 = b2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0;\r\n        this.UpdateStatistics();\r\n        ///  return m_linearVelocity + b2Cross(m_angularVelocity, worldPoint - m_center);\r\n        return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_center, s_t0), out);\r\n    }\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    ApplyForce(force) {\r\n        this.m_system.ApplyForce(this.m_firstIndex, this.m_lastIndex, force);\r\n    }\r\n    ApplyLinearImpulse(impulse) {\r\n        this.m_system.ApplyLinearImpulse(this.m_firstIndex, this.m_lastIndex, impulse);\r\n    }\r\n    DestroyParticles(callDestructionListener) {\r\n        ///b2Assert(this.m_system.m_world.IsLocked() === false);\r\n        if (this.m_system.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n            this.m_system.DestroyParticle(i, callDestructionListener);\r\n        }\r\n    }\r\n    UpdateStatistics() {\r\n        const p = new b2Vec2();\r\n        const v = new b2Vec2();\r\n        if (this.m_timestamp !== this.m_system.m_timestamp) {\r\n            const m = this.m_system.GetParticleMass();\r\n            ///  this.m_mass = 0;\r\n            this.m_mass = m * (this.m_lastIndex - this.m_firstIndex);\r\n            this.m_center.SetZero();\r\n            this.m_linearVelocity.SetZero();\r\n            for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n                ///  this.m_mass += m;\r\n                ///  this.m_center += m * this.m_system.m_positionBuffer.data[i];\r\n                this.m_center.SelfMulAdd(m, this.m_system.m_positionBuffer.data[i]);\r\n                ///  this.m_linearVelocity += m * this.m_system.m_velocityBuffer.data[i];\r\n                this.m_linearVelocity.SelfMulAdd(m, this.m_system.m_velocityBuffer.data[i]);\r\n            }\r\n            if (this.m_mass > 0) {\r\n                const inv_mass = 1 / this.m_mass;\r\n                ///this.m_center *= 1 / this.m_mass;\r\n                this.m_center.SelfMul(inv_mass);\r\n                ///this.m_linearVelocity *= 1 / this.m_mass;\r\n                this.m_linearVelocity.SelfMul(inv_mass);\r\n            }\r\n            this.m_inertia = 0;\r\n            this.m_angularVelocity = 0;\r\n            for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n                ///b2Vec2 p = this.m_system.m_positionBuffer.data[i] - this.m_center;\r\n                b2Vec2.SubVV(this.m_system.m_positionBuffer.data[i], this.m_center, p);\r\n                ///b2Vec2 v = this.m_system.m_velocityBuffer.data[i] - this.m_linearVelocity;\r\n                b2Vec2.SubVV(this.m_system.m_velocityBuffer.data[i], this.m_linearVelocity, v);\r\n                this.m_inertia += m * b2Vec2.DotVV(p, p);\r\n                this.m_angularVelocity += m * b2Vec2.CrossVV(p, v);\r\n            }\r\n            if (this.m_inertia > 0) {\r\n                this.m_angularVelocity *= 1 / this.m_inertia;\r\n            }\r\n            this.m_timestamp = this.m_system.m_timestamp;\r\n        }\r\n    }\r\n}\r\nb2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0 = new b2Vec2();\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQYXJ0aWNsZUdyb3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvUGFydGljbGUvYjJQYXJ0aWNsZUdyb3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBRUgseUJBQXlCO0FBRXpCLE9BQU8sRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdkQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBSzNDLE1BQU0sQ0FBTixJQUFZLG1CQWFYO0FBYkQsV0FBWSxtQkFBbUI7SUFDN0Isb0NBQW9DO0lBQ3BDLCtGQUE4QixDQUFBO0lBQzlCLG9CQUFvQjtJQUNwQiwrRkFBOEIsQ0FBQTtJQUM5Qix3Q0FBd0M7SUFDeEMseUdBQW1DLENBQUE7SUFDbkMsOENBQThDO0lBQzlDLG1IQUF3QyxDQUFBO0lBQ3hDLCtDQUErQztJQUMvQyxzSEFBeUMsQ0FBQTtJQUV6Qyw4R0FBaUcsQ0FBQTtBQUNuRyxDQUFDLEVBYlcsbUJBQW1CLEtBQW5CLG1CQUFtQixRQWE5QjtBQUVELE1BQU07SUFBTjtRQUNFLFVBQUssR0FBbUIsQ0FBQyxDQUFDO1FBQzFCLGVBQVUsR0FBd0IsQ0FBQyxDQUFDO1FBQ3BDLGFBQVEsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ2hDLFVBQUssR0FBVyxHQUFHLENBQUM7UUFDcEIsbUJBQWMsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ3RDLG9CQUFlLEdBQVcsR0FBRyxDQUFDO1FBQzlCLFVBQUssR0FBWSxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQy9CLGFBQVEsR0FBVyxHQUFHLENBQUM7UUFDdkIsVUFBSyxHQUFZLElBQUksQ0FBQztRQUN0QixXQUFNLEdBQWMsSUFBSSxDQUFDO1FBQ3pCLGVBQVUsR0FBVyxDQUFDLENBQUM7UUFDdkIsV0FBTSxHQUFXLENBQUMsQ0FBQztR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","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2MakeArray } from \"../Common/b2Settings\";\r\nfunction b2Assert(condition) { }\r\nexport class b2StackQueue {\r\n    constructor(capacity) {\r\n        this.m_front = 0;\r\n        this.m_back = 0;\r\n        this.m_capacity = 0;\r\n        this.m_buffer = b2MakeArray(capacity, (index) => null);\r\n        ///this.m_end = capacity; // TODO: this was wrong!\r\n        this.m_capacity = capacity;\r\n    }\r\n    Push(item) {\r\n        if (this.m_back >= this.m_capacity) {\r\n            for (let i = this.m_front; i < this.m_back; i++) {\r\n                this.m_buffer[i - this.m_front] = this.m_buffer[i];\r\n            }\r\n            this.m_back -= this.m_front;\r\n            this.m_front = 0;\r\n            if (this.m_back >= this.m_capacity) {\r\n                if (this.m_capacity > 0) {\r\n                    this.m_buffer.concat(b2MakeArray(this.m_capacity, (index) => null));\r\n                    this.m_capacity *= 2;\r\n                }\r\n                else {\r\n                    this.m_buffer.concat(b2MakeArray(1, (index) => null));\r\n                    this.m_capacity = 1;\r\n                }\r\n                ///m_buffer = (T*) m_allocator->Reallocate(m_buffer, sizeof(T) * m_capacity);\r\n            }\r\n        }\r\n        this.m_buffer[this.m_back] = item;\r\n        this.m_back++;\r\n    }\r\n    Pop() {\r\n        b2Assert(this.m_front < this.m_back);\r\n        delete this.m_buffer[this.m_front];\r\n        this.m_front++;\r\n    }\r\n    Empty() {\r\n        b2Assert(this.m_front <= this.m_back);\r\n        return this.m_front === this.m_back;\r\n    }\r\n    Front() {\r\n        return this.m_buffer[this.m_front];\r\n    }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTdGFja1F1ZXVlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvUGFydGljbGUvYjJTdGFja1F1ZXVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBRUgseUJBQXlCO0FBRXpCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVuRCxrQkFBa0IsU0FBa0IsSUFBRyxDQUFDO0FBRXhDLE1BQU07SUFLSixZQUFZLFFBQWdCO1FBSDVCLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFDcEIsV0FBTSxHQUFXLENBQUMsQ0FBQztRQUNuQixlQUFVLEdBQVcsQ0FBQyxDQUFDO1FBRXJCLElBQUksQ0FBQyxRQUFRLEdBQUcsV0FBVyxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkQsa0RBQWtEO1FBQ2xELElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO0lBQzdCLENBQUM7SUFDRCxJQUFJLENBQUMsSUFBTztRQUNWLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2xDLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDL0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDcEQ7WUFDRCxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDNUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7WUFDakIsSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7Z0JBQ2xDLElBQUksSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLEVBQUU7b0JBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUNwRSxJQUFJLENBQUMsVUFBVSxJQUFJLENBQUMsQ0FBQztpQkFDdEI7cUJBQU07b0JBQ0wsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDdEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7aUJBQ3JCO2dCQUNELDZFQUE2RTthQUM5RTtTQUNGO1FBQ0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBQ0QsR0FBRztRQUNELFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyQyxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBQ0QsS0FBSztRQUNILFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN0QyxPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN0QyxDQUFDO0lBQ0QsS0FBSztRQUNILE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDckMsQ0FBQztDQUNGO0FBRUQsU0FBUyJ9","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_maxFloat, b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2StackQueue } from \"./b2StackQueue\";\r\nfunction b2Assert(condition) { }\r\n/**\r\n * A field representing the nearest generator from each point.\r\n */\r\nexport class b2VoronoiDiagram {\r\n    constructor(generatorCapacity) {\r\n        this.m_generatorBuffer = null;\r\n        this.m_generatorCapacity = 0;\r\n        this.m_generatorCount = 0;\r\n        this.m_countX = 0;\r\n        this.m_countY = 0;\r\n        this.m_diagram = null;\r\n        this.m_generatorBuffer = b2MakeArray(generatorCapacity, (index) => new b2VoronoiDiagram.Generator());\r\n        this.m_generatorCapacity = generatorCapacity;\r\n    }\r\n    /**\r\n     * Add a generator.\r\n     *\r\n     * @param center the position of the generator.\r\n     * @param tag a tag used to identify the generator in callback functions.\r\n     * @param necessary whether to callback for nodes associated with the generator.\r\n     */\r\n    AddGenerator(center, tag, necessary) {\r\n        b2Assert(this.m_generatorCount < this.m_generatorCapacity);\r\n        let g = this.m_generatorBuffer[this.m_generatorCount++];\r\n        g.center.Copy(center);\r\n        g.tag = tag;\r\n        g.necessary = necessary;\r\n    }\r\n    /**\r\n     * Generate the Voronoi diagram. It is rasterized with a given\r\n     * interval in the same range as the necessary generators exist.\r\n     *\r\n     * @param radius the interval of the diagram.\r\n     * @param margin margin for which the range of the diagram is extended.\r\n     */\r\n    Generate(radius, margin) {\r\n        b2Assert(this.m_diagram === null);\r\n        let inverseRadius = 1 / radius;\r\n        let lower = new b2Vec2(+b2_maxFloat, +b2_maxFloat);\r\n        let upper = new b2Vec2(-b2_maxFloat, -b2_maxFloat);\r\n        let necessary_count = 0;\r\n        for (let k = 0; k < this.m_generatorCount; k++) {\r\n            let g = this.m_generatorBuffer[k];\r\n            if (g.necessary) {\r\n                b2Vec2.MinV(lower, g.center, lower);\r\n                b2Vec2.MaxV(upper, g.center, upper);\r\n                ++necessary_count;\r\n            }\r\n        }\r\n        if (necessary_count === 0) {\r\n            ///debugger;\r\n            this.m_countX = 0;\r\n            this.m_countY = 0;\r\n            return;\r\n        }\r\n        lower.x -= margin;\r\n        lower.y -= margin;\r\n        upper.x += margin;\r\n        upper.y += margin;\r\n        this.m_countX = 1 + Math.floor(inverseRadius * (upper.x - lower.x));\r\n        this.m_countY = 1 + Math.floor(inverseRadius * (upper.y - lower.y));\r\n        ///  m_diagram = (Generator**) m_allocator->Allocate(sizeof(Generator*) * m_countX * m_countY);\r\n        ///  for (int32 i = 0; i < m_countX * m_countY; i++)\r\n        ///  {\r\n        ///    m_diagram[i] = NULL;\r\n        ///  }\r\n        this.m_diagram = b2MakeArray(this.m_countX * this.m_countY, (index) => null);\r\n        // (4 * m_countX * m_countY) is the queue capacity that is experimentally\r\n        // known to be necessary and sufficient for general particle distributions.\r\n        let queue = new b2StackQueue(4 * this.m_countX * this.m_countY);\r\n        for (let k = 0; k < this.m_generatorCount; k++) {\r\n            let g = this.m_generatorBuffer[k];\r\n            ///  g.center = inverseRadius * (g.center - lower);\r\n            g.center.SelfSub(lower).SelfMul(inverseRadius);\r\n            let x = Math.floor(g.center.x);\r\n            let y = Math.floor(g.center.y);\r\n            if (x >= 0 && y >= 0 && x < this.m_countX && y < this.m_countY) {\r\n                queue.Push(new b2VoronoiDiagram.Task(x, y, x + y * this.m_countX, g));\r\n            }\r\n        }\r\n        while (!queue.Empty()) {\r\n            let task = queue.Front();\r\n            let x = task.m_x;\r\n            let y = task.m_y;\r\n            let i = task.m_i;\r\n            let g = task.m_generator;\r\n            queue.Pop();\r\n            if (!this.m_diagram[i]) {\r\n                this.m_diagram[i] = g;\r\n                if (x > 0) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x - 1, y, i - 1, g));\r\n                }\r\n                if (y > 0) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y - 1, i - this.m_countX, g));\r\n                }\r\n                if (x < this.m_countX - 1) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, g));\r\n                }\r\n                if (y < this.m_countY - 1) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, g));\r\n                }\r\n            }\r\n        }\r\n        for (let y = 0; y < this.m_countY; y++) {\r\n            for (let x = 0; x < this.m_countX - 1; x++) {\r\n                let i = x + y * this.m_countX;\r\n                let a = this.m_diagram[i];\r\n                let b = this.m_diagram[i + 1];\r\n                if (a !== b) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y, i, b));\r\n                    queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, a));\r\n                }\r\n            }\r\n        }\r\n        for (let y = 0; y < this.m_countY - 1; y++) {\r\n            for (let x = 0; x < this.m_countX; x++) {\r\n                let i = x + y * this.m_countX;\r\n                let a = this.m_diagram[i];\r\n                let b = this.m_diagram[i + this.m_countX];\r\n                if (a !== b) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y, i, b));\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, a));\r\n                }\r\n            }\r\n        }\r\n        while (!queue.Empty()) {\r\n            let task = queue.Front();\r\n            let x = task.m_x;\r\n            let y = task.m_y;\r\n            let i = task.m_i;\r\n            let k = task.m_generator;\r\n            queue.Pop();\r\n            let a = this.m_diagram[i];\r\n            let b = k;\r\n            if (a !== b) {\r\n                let ax = a.center.x - x;\r\n                let ay = a.center.y - y;\r\n                let bx = b.center.x - x;\r\n                let by = b.center.y - y;\r\n                let a2 = ax * ax + ay * ay;\r\n                let b2 = bx * bx + by * by;\r\n                if (a2 > b2) {\r\n                    this.m_diagram[i] = b;\r\n                    if (x > 0) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x - 1, y, i - 1, b));\r\n                    }\r\n                    if (y > 0) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x, y - 1, i - this.m_countX, b));\r\n                    }\r\n                    if (x < this.m_countX - 1) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, b));\r\n                    }\r\n                    if (y < this.m_countY - 1) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, b));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enumerate all nodes that contain at least one necessary\r\n     * generator.\r\n     */\r\n    GetNodes(callback) {\r\n        for (let y = 0; y < this.m_countY - 1; y++) {\r\n            for (let x = 0; x < this.m_countX - 1; x++) {\r\n                let i = x + y * this.m_countX;\r\n                let a = this.m_diagram[i];\r\n                let b = this.m_diagram[i + 1];\r\n                let c = this.m_diagram[i + this.m_countX];\r\n                let d = this.m_diagram[i + 1 + this.m_countX];\r\n                if (b !== c) {\r\n                    if (a !== b && a !== c &&\r\n                        (a.necessary || b.necessary || c.necessary)) {\r\n                        callback(a.tag, b.tag, c.tag);\r\n                    }\r\n                    if (d !== b && d !== c &&\r\n                        (a.necessary || b.necessary || c.necessary)) {\r\n                        callback(b.tag, d.tag, c.tag);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n(function (b2VoronoiDiagram) {\r\n    class Generator {\r\n        constructor() {\r\n            this.center = new b2Vec2();\r\n            this.tag = 0;\r\n            this.necessary = false;\r\n        }\r\n    }\r\n    b2VoronoiDiagram.Generator = Generator;\r\n    class Task {\r\n        constructor(x, y, i, g) {\r\n            this.m_x = 0;\r\n            this.m_y = 0;\r\n            this.m_i = 0;\r\n            this.m_generator = null;\r\n            this.m_x = x;\r\n            this.m_y = y;\r\n            this.m_i = i;\r\n            this.m_generator = g;\r\n        }\r\n    }\r\n    b2VoronoiDiagram.Task = Task;\r\n})(b2VoronoiDiagram || (b2VoronoiDiagram = {})); // namespace b2VoronoiDiagram\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_linearSlop, b2_maxFloat, b2_maxParticleIndex, b2_invalidParticleIndex, b2_minParticleSystemBufferCapacity, b2_maxTriadDistanceSquared, b2_barrierCollisionTime, b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2_maxParticlePressure, b2_minParticleWeight, b2_maxParticleForce, b2_particleStride } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Max, b2Abs, b2Clamp, b2Sqrt, b2InvSqrt, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"../Collision/b2Collision\";\r\nimport { b2ShapeType, b2Shape } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2EdgeShape } from \"../Collision/Shapes/b2EdgeShape\";\r\nimport { b2TimeStep } from \"../Dynamics/b2TimeStep\";\r\nimport { b2QueryCallback } from \"../Dynamics/b2WorldCallbacks\";\r\nimport { b2ParticleFlag, b2ParticleDef, b2ParticleHandle } from \"./b2Particle\";\r\nimport { b2ParticleGroupFlag, b2ParticleGroupDef, b2ParticleGroup } from \"./b2ParticleGroup\";\r\nimport { b2VoronoiDiagram } from \"./b2VoronoiDiagram\";\r\nfunction b2Assert(condition) { }\r\nfunction std_iter_swap(array, a, b) {\r\n    const tmp = array[a];\r\n    array[a] = array[b];\r\n    array[b] = tmp;\r\n}\r\nfunction default_compare(a, b) { return a < b; }\r\nfunction std_sort(array, first = 0, len = array.length - first, cmp = default_compare) {\r\n    let left = first;\r\n    let stack = [];\r\n    let pos = 0;\r\n    for (;;) { /* outer loop */\r\n        for (; left + 1 < len; len++) { /* sort left to len-1 */\r\n            let pivot = array[left + Math.floor(Math.random() * (len - left))]; /* pick random pivot */\r\n            stack[pos++] = len; /* sort right part later */\r\n            for (let right = left - 1;;) { /* inner loop: partitioning */\r\n                while (cmp(array[++right], pivot)) { } /* look for greater element */\r\n                while (cmp(pivot, array[--len])) { } /* look for smaller element */\r\n                if (right >= len)\r\n                    break; /* partition point found? */\r\n                std_iter_swap(array, right, len); /* the only swap */\r\n            } /* partitioned, continue left part */\r\n        }\r\n        if (pos === 0)\r\n            break; /* stack empty? */\r\n        left = len; /* left to right is sorted */\r\n        len = stack[--pos]; /* get next range to sort */\r\n    }\r\n    return array;\r\n}\r\n;\r\nfunction std_stable_sort(array, first = 0, len = array.length - first, cmp = default_compare) {\r\n    return std_sort(array, first, len, cmp);\r\n}\r\n;\r\nfunction std_remove_if(array, predicate, length = array.length) {\r\n    let l = 0;\r\n    for (let c = 0; c < length; ++c) {\r\n        // if we can be collapsed, keep l where it is.\r\n        if (predicate(array[c]))\r\n            continue;\r\n        // this node can't be collapsed; push it back as far as we can.\r\n        if (c === l) {\r\n            ++l;\r\n            continue; // quick exit if we're already in the right spot\r\n        }\r\n        // array[l++] = array[c];\r\n        std_iter_swap(array, l++, c);\r\n    }\r\n    return l;\r\n}\r\n;\r\nfunction std_lower_bound(array, first, last, val, cmp = default_compare) {\r\n    let count = last - first;\r\n    while (count > 0) {\r\n        let step = Math.floor(count / 2);\r\n        let it = first + step;\r\n        if (cmp(array[it], val)) {\r\n            first = ++it;\r\n            count -= step + 1;\r\n        }\r\n        else\r\n            count = step;\r\n    }\r\n    return first;\r\n}\r\n;\r\nfunction std_upper_bound(array, first, last, val, cmp = default_compare) {\r\n    let count = last - first;\r\n    while (count > 0) {\r\n        let step = Math.floor(count / 2);\r\n        let it = first + step;\r\n        if (!cmp(val, array[it])) {\r\n            first = ++it;\r\n            count -= step + 1;\r\n        }\r\n        else\r\n            count = step;\r\n    }\r\n    return first;\r\n}\r\n;\r\nfunction std_rotate(array, first, n_first, last) {\r\n    let next = n_first;\r\n    while (first !== next) {\r\n        std_iter_swap(array, first++, next++);\r\n        if (next === last)\r\n            next = n_first;\r\n        else if (first === n_first)\r\n            n_first = next;\r\n    }\r\n}\r\nfunction std_unique(array, first, last, cmp) {\r\n    if (first === last) {\r\n        return last;\r\n    }\r\n    let result = first;\r\n    while (++first !== last) {\r\n        if (!cmp(array[result], array[first])) {\r\n            ///array[++result] = array[first];\r\n            std_iter_swap(array, ++result, first);\r\n        }\r\n    }\r\n    return ++result;\r\n}\r\nexport class b2GrowableBuffer {\r\n    constructor(allocator) {\r\n        this.data = [];\r\n        this.count = 0;\r\n        this.capacity = 0;\r\n        this.allocator = allocator;\r\n    }\r\n    Append() {\r\n        if (this.count >= this.capacity) {\r\n            this.Grow();\r\n        }\r\n        return this.count++;\r\n    }\r\n    Reserve(newCapacity) {\r\n        if (this.capacity >= newCapacity)\r\n            return;\r\n        b2Assert(this.capacity === this.data.length);\r\n        for (let i = this.capacity; i < newCapacity; ++i) {\r\n            this.data[i] = this.allocator();\r\n        }\r\n        this.capacity = newCapacity;\r\n    }\r\n    Grow() {\r\n        // Double the capacity.\r\n        let newCapacity = this.capacity ? 2 * this.capacity : b2_minParticleSystemBufferCapacity;\r\n        b2Assert(newCapacity > this.capacity);\r\n        this.Reserve(newCapacity);\r\n    }\r\n    Free() {\r\n        if (this.data.length === 0) {\r\n            return;\r\n        }\r\n        this.data = [];\r\n        this.capacity = 0;\r\n        this.count = 0;\r\n    }\r\n    Shorten(newEnd) {\r\n        b2Assert(false);\r\n    }\r\n    Data() {\r\n        return this.data;\r\n    }\r\n    GetCount() {\r\n        return this.count;\r\n    }\r\n    SetCount(newCount) {\r\n        ///b2Assert(0 <= newCount && newCount <= this.capacity);\r\n        this.count = newCount;\r\n    }\r\n    GetCapacity() {\r\n        return this.capacity;\r\n    }\r\n    RemoveIf(pred) {\r\n        let count = 0;\r\n        for (let i = 0; i < this.count; ++i) {\r\n            if (!pred(this.data[i])) {\r\n                count++;\r\n            }\r\n        }\r\n        this.count = std_remove_if(this.data, pred, this.count);\r\n        b2Assert(count === this.count);\r\n    }\r\n    Unique(pred) {\r\n        this.count = std_unique(this.data, 0, this.count, pred);\r\n    }\r\n}\r\nexport class b2FixtureParticleQueryCallback extends b2QueryCallback {\r\n    constructor(system) {\r\n        super();\r\n        this.m_system = system;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        // Skip reporting particles.\r\n        return false;\r\n    }\r\n    ReportFixture(fixture) {\r\n        if (fixture.IsSensor()) {\r\n            return true;\r\n        }\r\n        const shape = fixture.GetShape();\r\n        const childCount = shape.GetChildCount();\r\n        for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n            const aabb = fixture.GetAABB(childIndex);\r\n            const enumerator = this.m_system.GetInsideBoundsEnumerator(aabb);\r\n            let index;\r\n            while ((index = enumerator.GetNext()) >= 0) {\r\n                this.ReportFixtureAndParticle(fixture, childIndex, index);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    ReportParticle(system, index) {\r\n        return false;\r\n    }\r\n    ReportFixtureAndParticle(fixture, childIndex, index) {\r\n        b2Assert(false); // pure virtual\r\n    }\r\n}\r\nexport class b2ParticleContact {\r\n    constructor() {\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.weight = 0;\r\n        this.normal = new b2Vec2();\r\n        this.flags = 0;\r\n    }\r\n    SetIndices(a, b) {\r\n        b2Assert(a <= b2_maxParticleIndex && b <= b2_maxParticleIndex);\r\n        this.indexA = a;\r\n        this.indexB = b;\r\n    }\r\n    SetWeight(w) {\r\n        this.weight = w;\r\n    }\r\n    SetNormal(n) {\r\n        this.normal.Copy(n);\r\n    }\r\n    SetFlags(f) {\r\n        this.flags = f;\r\n    }\r\n    GetIndexA() {\r\n        return this.indexA;\r\n    }\r\n    GetIndexB() {\r\n        return this.indexB;\r\n    }\r\n    GetWeight() {\r\n        return this.weight;\r\n    }\r\n    GetNormal() {\r\n        return this.normal;\r\n    }\r\n    GetFlags() {\r\n        return this.flags;\r\n    }\r\n    IsEqual(rhs) {\r\n        return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && this.weight === rhs.weight && this.normal.x === rhs.normal.x && this.normal.y === rhs.normal.y;\r\n    }\r\n    IsNotEqual(rhs) {\r\n        return !this.IsEqual(rhs);\r\n    }\r\n    ApproximatelyEqual(rhs) {\r\n        const MAX_WEIGHT_DIFF = 0.01; // Weight 0 ~ 1, so about 1%\r\n        const MAX_NORMAL_DIFF_SQ = 0.01 * 0.01; // Normal length = 1, so 1%\r\n        return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && b2Abs(this.weight - rhs.weight) < MAX_WEIGHT_DIFF && b2Vec2.DistanceSquaredVV(this.normal, rhs.normal) < MAX_NORMAL_DIFF_SQ;\r\n    }\r\n}\r\nexport class b2ParticleBodyContact {\r\n    constructor() {\r\n        this.index = 0; // Index of the particle making contact.\r\n        this.body = null; // The body making contact.\r\n        this.fixture = null; // The specific fixture making contact\r\n        this.weight = 0.0; // Weight of the contact. A value between 0.0f and 1.0f.\r\n        this.normal = new b2Vec2(); // The normalized direction from the particle to the body.\r\n        this.mass = 0.0; // The effective mass used in calculating force.\r\n    }\r\n}\r\nexport class b2ParticlePair {\r\n    constructor() {\r\n        this.indexA = 0; // Indices of the respective particles making pair.\r\n        this.indexB = 0;\r\n        this.flags = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\r\n        this.strength = 0.0; // The strength of cohesion among the particles.\r\n        this.distance = 0.0; // The initial distance of the particles.\r\n    }\r\n}\r\nexport class b2ParticleTriad {\r\n    constructor() {\r\n        this.indexA = 0; // Indices of the respective particles making triad.\r\n        this.indexB = 0;\r\n        this.indexC = 0;\r\n        this.flags = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\r\n        this.strength = 0.0; // The strength of cohesion among the particles.\r\n        this.pa = new b2Vec2(0.0, 0.0); // Values used for calculation.\r\n        this.pb = new b2Vec2(0.0, 0.0);\r\n        this.pc = new b2Vec2(0.0, 0.0);\r\n        this.ka = 0.0;\r\n        this.kb = 0.0;\r\n        this.kc = 0.0;\r\n        this.s = 0.0;\r\n    }\r\n}\r\nexport class b2ParticleSystemDef {\r\n    constructor() {\r\n        // Initialize physical coefficients to the maximum values that\r\n        // maintain numerical stability.\r\n        /**\r\n         * Enable strict Particle/Body contact check.\r\n         * See SetStrictContactCheck for details.\r\n         */\r\n        this.strictContactCheck = false;\r\n        /**\r\n         * Set the particle density.\r\n         * See SetDensity for details.\r\n         */\r\n        this.density = 1.0;\r\n        /**\r\n         * Change the particle gravity scale. Adjusts the effect of the\r\n         * global gravity vector on particles. Default value is 1.0f.\r\n         */\r\n        this.gravityScale = 1.0;\r\n        /**\r\n         * Particles behave as circles with this radius. In Box2D units.\r\n         */\r\n        this.radius = 1.0;\r\n        /**\r\n         * Set the maximum number of particles.\r\n         * By default, there is no maximum. The particle buffers can\r\n         * continue to grow while b2World's block allocator still has\r\n         * memory.\r\n         * See SetMaxParticleCount for details.\r\n         */\r\n        this.maxCount = 0;\r\n        /**\r\n         * Increases pressure in response to compression\r\n         * Smaller values allow more compression\r\n         */\r\n        this.pressureStrength = 0.005;\r\n        /**\r\n         * Reduces velocity along the collision normal\r\n         * Smaller value reduces less\r\n         */\r\n        this.dampingStrength = 1.0;\r\n        /**\r\n         * Restores shape of elastic particle groups\r\n         * Larger values increase elastic particle velocity\r\n         */\r\n        this.elasticStrength = 0.25;\r\n        /**\r\n         * Restores length of spring particle groups\r\n         * Larger values increase spring particle velocity\r\n         */\r\n        this.springStrength = 0.25;\r\n        /**\r\n         * Reduces relative velocity of viscous particles\r\n         * Larger values slow down viscous particles more\r\n         */\r\n        this.viscousStrength = 0.25;\r\n        /**\r\n         * Produces pressure on tensile particles\r\n         * 0~0.2. Larger values increase the amount of surface tension.\r\n         */\r\n        this.surfaceTensionPressureStrength = 0.2;\r\n        /**\r\n         * Smoothes outline of tensile particles\r\n         * 0~0.2. Larger values result in rounder, smoother,\r\n         * water-drop-like clusters of particles.\r\n         */\r\n        this.surfaceTensionNormalStrength = 0.2;\r\n        /**\r\n         * Produces additional pressure on repulsive particles\r\n         * Larger values repulse more\r\n         * Negative values mean attraction. The range where particles\r\n         * behave stably is about -0.2 to 2.0.\r\n         */\r\n        this.repulsiveStrength = 1.0;\r\n        /**\r\n         * Produces repulsion between powder particles\r\n         * Larger values repulse more\r\n         */\r\n        this.powderStrength = 0.5;\r\n        /**\r\n         * Pushes particles out of solid particle group\r\n         * Larger values repulse more\r\n         */\r\n        this.ejectionStrength = 0.5;\r\n        /**\r\n         * Produces static pressure\r\n         * Larger values increase the pressure on neighboring partilces\r\n         * For a description of static pressure, see\r\n         * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\r\n         */\r\n        this.staticPressureStrength = 0.2;\r\n        /**\r\n         * Reduces instability in static pressure calculation\r\n         * Larger values make stabilize static pressure with fewer\r\n         * iterations\r\n         */\r\n        this.staticPressureRelaxation = 0.2;\r\n        /**\r\n         * Computes static pressure more precisely\r\n         * See SetStaticPressureIterations for details\r\n         */\r\n        this.staticPressureIterations = 8;\r\n        /**\r\n         * Determines how fast colors are mixed\r\n         * 1.0f ==> mixed immediately\r\n         * 0.5f ==> mixed half way each simulation step (see\r\n         * b2World::Step())\r\n         */\r\n        this.colorMixingStrength = 0.5;\r\n        /**\r\n         * Whether to destroy particles by age when no more particles\r\n         * can be created.  See #b2ParticleSystem::SetDestructionByAge()\r\n         * for more information.\r\n         */\r\n        this.destroyByAge = true;\r\n        /**\r\n         * Granularity of particle lifetimes in seconds.  By default\r\n         * this is set to (1.0f / 60.0f) seconds.  b2ParticleSystem uses\r\n         * a 32-bit signed value to track particle lifetimes so the\r\n         * maximum lifetime of a particle is (2^32 - 1) / (1.0f /\r\n         * lifetimeGranularity) seconds. With the value set to 1/60 the\r\n         * maximum lifetime or age of a particle is 2.27 years.\r\n         */\r\n        this.lifetimeGranularity = 1.0 / 60.0;\r\n    }\r\n    Copy(def) {\r\n        this.strictContactCheck = def.strictContactCheck;\r\n        this.density = def.density;\r\n        this.gravityScale = def.gravityScale;\r\n        this.radius = def.radius;\r\n        this.maxCount = def.maxCount;\r\n        this.pressureStrength = def.pressureStrength;\r\n        this.dampingStrength = def.dampingStrength;\r\n        this.elasticStrength = def.elasticStrength;\r\n        this.springStrength = def.springStrength;\r\n        this.viscousStrength = def.viscousStrength;\r\n        this.surfaceTensionPressureStrength = def.surfaceTensionPressureStrength;\r\n        this.surfaceTensionNormalStrength = def.surfaceTensionNormalStrength;\r\n        this.repulsiveStrength = def.repulsiveStrength;\r\n        this.powderStrength = def.powderStrength;\r\n        this.ejectionStrength = def.ejectionStrength;\r\n        this.staticPressureStrength = def.staticPressureStrength;\r\n        this.staticPressureRelaxation = def.staticPressureRelaxation;\r\n        this.staticPressureIterations = def.staticPressureIterations;\r\n        this.colorMixingStrength = def.colorMixingStrength;\r\n        this.destroyByAge = def.destroyByAge;\r\n        this.lifetimeGranularity = def.lifetimeGranularity;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2ParticleSystemDef().Copy(this);\r\n    }\r\n}\r\nexport class b2ParticleSystem {\r\n    constructor(def, world) {\r\n        this.m_paused = false;\r\n        this.m_timestamp = 0;\r\n        this.m_allParticleFlags = 0;\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n        this.m_allGroupFlags = 0;\r\n        this.m_needsUpdateAllGroupFlags = false;\r\n        this.m_hasForce = false;\r\n        this.m_iterationIndex = 0;\r\n        this.m_inverseDensity = 0.0;\r\n        this.m_particleDiameter = 0.0;\r\n        this.m_inverseDiameter = 0.0;\r\n        this.m_squaredDiameter = 0.0;\r\n        this.m_count = 0;\r\n        this.m_internalAllocatedCapacity = 0;\r\n        /**\r\n         * Allocator for b2ParticleHandle instances.\r\n         */\r\n        ///m_handleAllocator: any = null;\r\n        /**\r\n         * Maps particle indicies to handles.\r\n         */\r\n        this.m_handleIndexBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_flagsBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_positionBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_velocityBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_forceBuffer = [];\r\n        /**\r\n         * this.m_weightBuffer is populated in ComputeWeight and used in\r\n         * ComputeDepth(), SolveStaticPressure() and SolvePressure().\r\n         */\r\n        this.m_weightBuffer = [];\r\n        /**\r\n         * When any particles have the flag b2_staticPressureParticle,\r\n         * this.m_staticPressureBuffer is first allocated and used in\r\n         * SolveStaticPressure() and SolvePressure().  It will be\r\n         * reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_staticPressureBuffer = [];\r\n        /**\r\n         * this.m_accumulationBuffer is used in many functions as a temporary\r\n         * buffer for scalar values.\r\n         */\r\n        this.m_accumulationBuffer = [];\r\n        /**\r\n         * When any particles have the flag b2_tensileParticle,\r\n         * this.m_accumulation2Buffer is first allocated and used in\r\n         * SolveTensile() as a temporary buffer for vector values.  It\r\n         * will be reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_accumulation2Buffer = [];\r\n        /**\r\n         * When any particle groups have the flag b2_solidParticleGroup,\r\n         * this.m_depthBuffer is first allocated and populated in\r\n         * ComputeDepth() and used in SolveSolid(). It will be\r\n         * reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_depthBuffer = [];\r\n        this.m_colorBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_groupBuffer = [];\r\n        this.m_userDataBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * Stuck particle detection parameters and record keeping\r\n         */\r\n        this.m_stuckThreshold = 0;\r\n        this.m_lastBodyContactStepBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_bodyContactCountBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_consecutiveContactStepsBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_stuckParticleBuffer = new b2GrowableBuffer(() => 0);\r\n        this.m_proxyBuffer = new b2GrowableBuffer(() => new b2ParticleSystem.Proxy());\r\n        this.m_contactBuffer = new b2GrowableBuffer(() => new b2ParticleContact());\r\n        this.m_bodyContactBuffer = new b2GrowableBuffer(() => new b2ParticleBodyContact());\r\n        this.m_pairBuffer = new b2GrowableBuffer(() => new b2ParticlePair());\r\n        this.m_triadBuffer = new b2GrowableBuffer(() => new b2ParticleTriad());\r\n        /**\r\n         * Time each particle should be destroyed relative to the last\r\n         * time this.m_timeElapsed was initialized.  Each unit of time\r\n         * corresponds to b2ParticleSystemDef::lifetimeGranularity\r\n         * seconds.\r\n         */\r\n        this.m_expirationTimeBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * List of particle indices sorted by expiration time.\r\n         */\r\n        this.m_indexByExpirationTimeBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * Time elapsed in 32:32 fixed point.  Each non-fractional unit\r\n         * of time corresponds to\r\n         * b2ParticleSystemDef::lifetimeGranularity seconds.\r\n         */\r\n        this.m_timeElapsed = 0;\r\n        /**\r\n         * Whether the expiration time buffer has been modified and\r\n         * needs to be resorted.\r\n         */\r\n        this.m_expirationTimeBufferRequiresSorting = false;\r\n        this.m_groupCount = 0;\r\n        this.m_groupList = null;\r\n        this.m_def = new b2ParticleSystemDef();\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.SetStrictContactCheck(def.strictContactCheck);\r\n        this.SetDensity(def.density);\r\n        this.SetGravityScale(def.gravityScale);\r\n        this.SetRadius(def.radius);\r\n        this.SetMaxParticleCount(def.maxCount);\r\n        b2Assert(def.lifetimeGranularity > 0.0);\r\n        this.m_def = def.Clone();\r\n        this.m_world = world;\r\n        this.SetDestructionByAge(this.m_def.destroyByAge);\r\n    }\r\n    static computeTag(x, y) {\r\n        ///return ((uint32)(y + yOffset) << yShift) + (uint32)(xScale * x + xOffset);\r\n        return ((((y + b2ParticleSystem.yOffset) >>> 0) << b2ParticleSystem.yShift) + ((b2ParticleSystem.xScale * x + b2ParticleSystem.xOffset) >>> 0)) >>> 0;\r\n    }\r\n    static computeRelativeTag(tag, x, y) {\r\n        ///return tag + (y << yShift) + (x << xShift);\r\n        return (tag + (y << b2ParticleSystem.yShift) + (x << b2ParticleSystem.xShift)) >>> 0;\r\n    }\r\n    Drop() {\r\n        while (this.m_groupList) {\r\n            this.DestroyParticleGroup(this.m_groupList);\r\n        }\r\n        this.FreeUserOverridableBuffer(this.m_handleIndexBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_flagsBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_lastBodyContactStepBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_bodyContactCountBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_consecutiveContactStepsBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_positionBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_velocityBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_colorBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_userDataBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_expirationTimeBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_indexByExpirationTimeBuffer);\r\n        this.FreeBuffer(this.m_forceBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_weightBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_staticPressureBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_accumulationBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_accumulation2Buffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_depthBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_groupBuffer, this.m_internalAllocatedCapacity);\r\n    }\r\n    /**\r\n     * Create a particle whose properties have been defined.\r\n     *\r\n     * No reference to the definition is retained.\r\n     *\r\n     * A simulation step must occur before it's possible to interact\r\n     * with a newly created particle.  For example,\r\n     * DestroyParticleInShape() will not destroy a particle until\r\n     * b2World::Step() has been called.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     */\r\n    CreateParticle(def) {\r\n        b2Assert(this.m_world.IsLocked() === false);\r\n        if (this.m_world.IsLocked()) {\r\n            return 0;\r\n        }\r\n        if (this.m_count >= this.m_internalAllocatedCapacity) {\r\n            // Double the particle capacity.\r\n            let capacity = this.m_count ? 2 * this.m_count : b2_minParticleSystemBufferCapacity;\r\n            this.ReallocateInternalAllocatedBuffers(capacity);\r\n        }\r\n        if (this.m_count >= this.m_internalAllocatedCapacity) {\r\n            // If the oldest particle should be destroyed...\r\n            if (this.m_def.destroyByAge) {\r\n                this.DestroyOldestParticle(0, false);\r\n                // Need to destroy this particle *now* so that it's possible to\r\n                // create a new particle.\r\n                this.SolveZombie();\r\n            }\r\n            else {\r\n                return b2_invalidParticleIndex;\r\n            }\r\n        }\r\n        let index = this.m_count++;\r\n        this.m_flagsBuffer.data[index] = 0;\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            this.m_lastBodyContactStepBuffer.data[index] = 0;\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            this.m_bodyContactCountBuffer.data[index] = 0;\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            this.m_consecutiveContactStepsBuffer.data[index] = 0;\r\n        }\r\n        this.m_positionBuffer.data[index] = (this.m_positionBuffer.data[index] || new b2Vec2()).Copy(def.position);\r\n        this.m_velocityBuffer.data[index] = (this.m_velocityBuffer.data[index] || new b2Vec2()).Copy(def.velocity);\r\n        this.m_weightBuffer[index] = 0;\r\n        this.m_forceBuffer[index] = (this.m_forceBuffer[index] || new b2Vec2()).SetZero();\r\n        if (this.m_staticPressureBuffer) {\r\n            this.m_staticPressureBuffer[index] = 0;\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            this.m_depthBuffer[index] = 0;\r\n        }\r\n        if (this.m_colorBuffer.data || !def.color.IsZero()) {\r\n            this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n            this.m_colorBuffer.data[index] = (this.m_colorBuffer.data[index] || new b2Color()).Copy(def.color);\r\n        }\r\n        if (this.m_userDataBuffer.data || def.userData) {\r\n            this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\r\n            this.m_userDataBuffer.data[index] = def.userData;\r\n        }\r\n        if (this.m_handleIndexBuffer.data) {\r\n            this.m_handleIndexBuffer.data[index] = null;\r\n        }\r\n        ///Proxy& proxy = m_proxyBuffer.Append();\r\n        let proxy = this.m_proxyBuffer.data[this.m_proxyBuffer.Append()];\r\n        // If particle lifetimes are enabled or the lifetime is set in the particle\r\n        // definition, initialize the lifetime.\r\n        let finiteLifetime = def.lifetime > 0.0;\r\n        if (this.m_expirationTimeBuffer.data || finiteLifetime) {\r\n            this.SetParticleLifetime(index, finiteLifetime ? def.lifetime :\r\n                this.ExpirationTimeToLifetime(-this.GetQuantizedTimeElapsed()));\r\n            // Add a reference to the newly added particle to the end of the\r\n            // queue.\r\n            this.m_indexByExpirationTimeBuffer.data[index] = index;\r\n        }\r\n        proxy.index = index;\r\n        let group = def.group;\r\n        this.m_groupBuffer[index] = group;\r\n        if (group) {\r\n            if (group.m_firstIndex < group.m_lastIndex) {\r\n                // Move particles in the group just before the new particle.\r\n                this.RotateBuffer(group.m_firstIndex, group.m_lastIndex, index);\r\n                b2Assert(group.m_lastIndex === index);\r\n                // Update the index range of the group to contain the new particle.\r\n                group.m_lastIndex = index + 1;\r\n            }\r\n            else {\r\n                // If the group is empty, reset the index range to contain only the\r\n                // new particle.\r\n                group.m_firstIndex = index;\r\n                group.m_lastIndex = index + 1;\r\n            }\r\n        }\r\n        this.SetParticleFlags(index, def.flags);\r\n        return index;\r\n    }\r\n    /**\r\n     * Retrieve a handle to the particle at the specified index.\r\n     *\r\n     * Please see #b2ParticleHandle for why you might want a handle.\r\n     */\r\n    GetParticleHandleFromIndex(index) {\r\n        b2Assert(index >= 0 && index < this.GetParticleCount() && index !== b2_invalidParticleIndex);\r\n        this.m_handleIndexBuffer.data = this.RequestBuffer(this.m_handleIndexBuffer.data);\r\n        let handle = this.m_handleIndexBuffer.data[index];\r\n        if (handle) {\r\n            return handle;\r\n        }\r\n        // Create a handle.\r\n        ///handle = m_handleAllocator.Allocate();\r\n        handle = new b2ParticleHandle();\r\n        b2Assert(handle !== null);\r\n        handle.SetIndex(index);\r\n        this.m_handleIndexBuffer.data[index] = handle;\r\n        return handle;\r\n    }\r\n    /**\r\n     * Destroy a particle.\r\n     *\r\n     * The particle is removed after the next simulation step (see\r\n     * b2World::Step()).\r\n     *\r\n     * @param index Index of the particle to destroy.\r\n     * @param callDestructionListener Whether to call the\r\n     *      destruction listener just before the particle is\r\n     *      destroyed.\r\n     */\r\n    DestroyParticle(index, callDestructionListener = false) {\r\n        let flags = b2ParticleFlag.b2_zombieParticle;\r\n        if (callDestructionListener) {\r\n            flags |= b2ParticleFlag.b2_destructionListenerParticle;\r\n        }\r\n        this.SetParticleFlags(index, this.m_flagsBuffer.data[index] | flags);\r\n    }\r\n    /**\r\n     * Destroy the Nth oldest particle in the system.\r\n     *\r\n     * The particle is removed after the next b2World::Step().\r\n     *\r\n     * @param index Index of the Nth oldest particle to\r\n     *      destroy, 0 will destroy the oldest particle in the\r\n     *      system, 1 will destroy the next oldest particle etc.\r\n     * @param callDestructionListener Whether to call the\r\n     *      destruction listener just before the particle is\r\n     *      destroyed.\r\n     */\r\n    DestroyOldestParticle(index, callDestructionListener = false) {\r\n        const particleCount = this.GetParticleCount();\r\n        b2Assert(index >= 0 && index < particleCount);\r\n        // Make sure particle lifetime tracking is enabled.\r\n        b2Assert(this.m_indexByExpirationTimeBuffer.data !== null);\r\n        // Destroy the oldest particle (preferring to destroy finite\r\n        // lifetime particles first) to free a slot in the buffer.\r\n        const oldestFiniteLifetimeParticle = this.m_indexByExpirationTimeBuffer.data[particleCount - (index + 1)];\r\n        const oldestInfiniteLifetimeParticle = this.m_indexByExpirationTimeBuffer.data[index];\r\n        this.DestroyParticle(this.m_expirationTimeBuffer.data[oldestFiniteLifetimeParticle] > 0.0 ?\r\n            oldestFiniteLifetimeParticle : oldestInfiniteLifetimeParticle, callDestructionListener);\r\n    }\r\n    /**\r\n     * Destroy particles inside a shape.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * In addition, this function immediately destroys particles in\r\n     * the shape in constrast to DestroyParticle() which defers the\r\n     * destruction until the next simulation step.\r\n     *\r\n     * @return Number of particles destroyed.\r\n     * @param shape Shape which encloses particles\r\n     *      that should be destroyed.\r\n     * @param xf Transform applied to the shape.\r\n     * @param callDestructionListener Whether to call the\r\n     *      world b2DestructionListener for each particle\r\n     *      destroyed.\r\n     */\r\n    DestroyParticlesInShape(shape, xf, callDestructionListener = false) {\r\n        const s_aabb = b2ParticleSystem.DestroyParticlesInShape_s_aabb;\r\n        b2Assert(this.m_world.IsLocked() === false);\r\n        if (this.m_world.IsLocked()) {\r\n            return 0;\r\n        }\r\n        const callback = new b2ParticleSystem.DestroyParticlesInShapeCallback(this, shape, xf, callDestructionListener);\r\n        const aabb = s_aabb;\r\n        shape.ComputeAABB(aabb, xf, 0);\r\n        this.m_world.QueryAABB(callback, aabb);\r\n        return callback.Destroyed();\r\n    }\r\n    /**\r\n     * Create a particle group whose properties have been defined.\r\n     *\r\n     * No reference to the definition is retained.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     */\r\n    CreateParticleGroup(groupDef) {\r\n        let s_transform = b2ParticleSystem.CreateParticleGroup_s_transform;\r\n        b2Assert(this.m_world.IsLocked() === false);\r\n        if (this.m_world.IsLocked()) {\r\n            return null;\r\n        }\r\n        let transform = s_transform;\r\n        transform.SetPositionAngle(groupDef.position, groupDef.angle);\r\n        let firstIndex = this.m_count;\r\n        if (groupDef.shape) {\r\n            this.CreateParticlesWithShapeForGroup(groupDef.shape, groupDef, transform);\r\n        }\r\n        if (groupDef.shapes) {\r\n            this.CreateParticlesWithShapesForGroup(groupDef.shapes, groupDef.shapeCount, groupDef, transform);\r\n        }\r\n        if (groupDef.particleCount) {\r\n            b2Assert(groupDef.positionData !== null);\r\n            for (let i = 0; i < groupDef.particleCount; i++) {\r\n                let p = groupDef.positionData[i];\r\n                this.CreateParticleForGroup(groupDef, transform, p);\r\n            }\r\n        }\r\n        let lastIndex = this.m_count;\r\n        let group = new b2ParticleGroup(this);\r\n        group.m_firstIndex = firstIndex;\r\n        group.m_lastIndex = lastIndex;\r\n        group.m_strength = groupDef.strength;\r\n        group.m_userData = groupDef.userData;\r\n        group.m_transform.Copy(transform);\r\n        group.m_prev = null;\r\n        group.m_next = this.m_groupList;\r\n        if (this.m_groupList) {\r\n            this.m_groupList.m_prev = group;\r\n        }\r\n        this.m_groupList = group;\r\n        ++this.m_groupCount;\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            this.m_groupBuffer[i] = group;\r\n        }\r\n        this.SetGroupFlags(group, groupDef.groupFlags);\r\n        // Create pairs and triads between particles in the group.\r\n        let filter = new b2ParticleSystem.ConnectionFilter();\r\n        this.UpdateContacts(true);\r\n        this.UpdatePairsAndTriads(firstIndex, lastIndex, filter);\r\n        if (groupDef.group) {\r\n            this.JoinParticleGroups(groupDef.group, group);\r\n            group = groupDef.group;\r\n        }\r\n        return group;\r\n    }\r\n    /**\r\n     * Join two particle groups.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * @param groupA the first group. Expands to encompass the second group.\r\n     * @param groupB the second group. It is destroyed.\r\n     */\r\n    JoinParticleGroups(groupA, groupB) {\r\n        b2Assert(this.m_world.IsLocked() === false);\r\n        if (this.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        b2Assert(groupA !== groupB);\r\n        this.RotateBuffer(groupB.m_firstIndex, groupB.m_lastIndex, this.m_count);\r\n        b2Assert(groupB.m_lastIndex === this.m_count);\r\n        this.RotateBuffer(groupA.m_firstIndex, groupA.m_lastIndex, groupB.m_firstIndex);\r\n        b2Assert(groupA.m_lastIndex === groupB.m_firstIndex);\r\n        // Create pairs and triads connecting groupA and groupB.\r\n        let filter = new b2ParticleSystem.JoinParticleGroupsFilter(groupB.m_firstIndex);\r\n        this.UpdateContacts(true);\r\n        this.UpdatePairsAndTriads(groupA.m_firstIndex, groupB.m_lastIndex, filter);\r\n        for (let i = groupB.m_firstIndex; i < groupB.m_lastIndex; i++) {\r\n            this.m_groupBuffer[i] = groupA;\r\n        }\r\n        let groupFlags = groupA.m_groupFlags | groupB.m_groupFlags;\r\n        this.SetGroupFlags(groupA, groupFlags);\r\n        groupA.m_lastIndex = groupB.m_lastIndex;\r\n        groupB.m_firstIndex = groupB.m_lastIndex;\r\n        this.DestroyParticleGroup(groupB);\r\n    }\r\n    /**\r\n     * Split particle group into multiple disconnected groups.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * @param group the group to be split.\r\n     */\r\n    SplitParticleGroup(group) {\r\n        this.UpdateContacts(true);\r\n        let particleCount = group.GetParticleCount();\r\n        // We create several linked lists. Each list represents a set of connected particles.\r\n        ///ParticleListNode* nodeBuffer = (ParticleListNode*) m_world.m_stackAllocator.Allocate(sizeof(ParticleListNode) * particleCount);\r\n        let nodeBuffer = b2MakeArray(particleCount, (index) => new b2ParticleSystem.ParticleListNode());\r\n        b2ParticleSystem.InitializeParticleLists(group, nodeBuffer);\r\n        this.MergeParticleListsInContact(group, nodeBuffer);\r\n        let survivingList = b2ParticleSystem.FindLongestParticleList(group, nodeBuffer);\r\n        this.MergeZombieParticleListNodes(group, nodeBuffer, survivingList);\r\n        this.CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList);\r\n        this.UpdatePairsAndTriadsWithParticleList(group, nodeBuffer);\r\n        ///this.m_world.m_stackAllocator.Free(nodeBuffer);\r\n    }\r\n    /**\r\n     * Get the world particle group list. With the returned group,\r\n     * use b2ParticleGroup::GetNext to get the next group in the\r\n     * world list.\r\n     *\r\n     * A null group indicates the end of the list.\r\n     *\r\n     * @return the head of the world particle group list.\r\n     */\r\n    GetParticleGroupList() {\r\n        return this.m_groupList;\r\n    }\r\n    /**\r\n     * Get the number of particle groups.\r\n     */\r\n    GetParticleGroupCount() {\r\n        return this.m_groupCount;\r\n    }\r\n    /**\r\n     * Get the number of particles.\r\n     */\r\n    GetParticleCount() {\r\n        return this.m_count;\r\n    }\r\n    /**\r\n     * Get the maximum number of particles.\r\n     */\r\n    GetMaxParticleCount() {\r\n        return this.m_def.maxCount;\r\n    }\r\n    /**\r\n     * Set the maximum number of particles.\r\n     *\r\n     * A value of 0 means there is no maximum. The particle buffers\r\n     * can continue to grow while b2World's block allocator still\r\n     * has memory.\r\n     *\r\n     * Note: If you try to CreateParticle() with more than this\r\n     * count, b2_invalidParticleIndex is returned unless\r\n     * SetDestructionByAge() is used to enable the destruction of\r\n     * the oldest particles in the system.\r\n     */\r\n    SetMaxParticleCount(count) {\r\n        b2Assert(this.m_count <= count);\r\n        this.m_def.maxCount = count;\r\n    }\r\n    /**\r\n     * Get all existing particle flags.\r\n     */\r\n    GetAllParticleFlags() {\r\n        return this.m_allParticleFlags;\r\n    }\r\n    /**\r\n     * Get all existing particle group flags.\r\n     */\r\n    GetAllGroupFlags() {\r\n        return this.m_allGroupFlags;\r\n    }\r\n    /**\r\n     * Pause or unpause the particle system. When paused,\r\n     * b2World::Step() skips over this particle system. All\r\n     * b2ParticleSystem function calls still work.\r\n     *\r\n     * @param paused paused is true to pause, false to un-pause.\r\n     */\r\n    SetPaused(paused) {\r\n        this.m_paused = paused;\r\n    }\r\n    /**\r\n     * Initially, true, then, the last value passed into\r\n     * SetPaused().\r\n     *\r\n     * @return true if the particle system is being updated in b2World::Step().\r\n     */\r\n    GetPaused() {\r\n        return this.m_paused;\r\n    }\r\n    /**\r\n     * Change the particle density.\r\n     *\r\n     * Particle density affects the mass of the particles, which in\r\n     * turn affects how the particles interact with b2Bodies. Note\r\n     * that the density does not affect how the particles interact\r\n     * with each other.\r\n     */\r\n    SetDensity(density) {\r\n        this.m_def.density = density;\r\n        this.m_inverseDensity = 1 / this.m_def.density;\r\n    }\r\n    /**\r\n     * Get the particle density.\r\n     */\r\n    GetDensity() {\r\n        return this.m_def.density;\r\n    }\r\n    /**\r\n     * Change the particle gravity scale. Adjusts the effect of the\r\n     * global gravity vector on particles.\r\n     */\r\n    SetGravityScale(gravityScale) {\r\n        this.m_def.gravityScale = gravityScale;\r\n    }\r\n    /**\r\n     * Get the particle gravity scale.\r\n     */\r\n    GetGravityScale() {\r\n        return this.m_def.gravityScale;\r\n    }\r\n    /**\r\n     * Damping is used to reduce the velocity of particles. The\r\n     * damping parameter can be larger than 1.0f but the damping\r\n     * effect becomes sensitive to the time step when the damping\r\n     * parameter is large.\r\n     */\r\n    SetDamping(damping) {\r\n        this.m_def.dampingStrength = damping;\r\n    }\r\n    /**\r\n     * Get damping for particles\r\n     */\r\n    GetDamping() {\r\n        return this.m_def.dampingStrength;\r\n    }\r\n    /**\r\n     * Change the number of iterations when calculating the static\r\n     * pressure of particles. By default, 8 iterations. You can\r\n     * reduce the number of iterations down to 1 in some situations,\r\n     * but this may cause instabilities when many particles come\r\n     * together. If you see particles popping away from each other\r\n     * like popcorn, you may have to increase the number of\r\n     * iterations.\r\n     *\r\n     * For a description of static pressure, see\r\n     * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\r\n     */\r\n    SetStaticPressureIterations(iterations) {\r\n        this.m_def.staticPressureIterations = iterations;\r\n    }\r\n    /**\r\n     * Get the number of iterations for static pressure of\r\n     * particles.\r\n     */\r\n    GetStaticPressureIterations() {\r\n        return this.m_def.staticPressureIterations;\r\n    }\r\n    /**\r\n     * Change the particle radius.\r\n     *\r\n     * You should set this only once, on world start.\r\n     * If you change the radius during execution, existing particles\r\n     * may explode, shrink, or behave unexpectedly.\r\n     */\r\n    SetRadius(radius) {\r\n        this.m_particleDiameter = 2 * radius;\r\n        this.m_squaredDiameter = this.m_particleDiameter * this.m_particleDiameter;\r\n        this.m_inverseDiameter = 1 / this.m_particleDiameter;\r\n    }\r\n    /**\r\n     * Get the particle radius.\r\n     */\r\n    GetRadius() {\r\n        return this.m_particleDiameter / 2;\r\n    }\r\n    /**\r\n     * Get the position of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle positions array.\r\n     */\r\n    GetPositionBuffer() {\r\n        return this.m_positionBuffer.data;\r\n    }\r\n    /**\r\n     * Get the velocity of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle velocities array.\r\n     */\r\n    GetVelocityBuffer() {\r\n        return this.m_velocityBuffer.data;\r\n    }\r\n    /**\r\n     * Get the color of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle colors array.\r\n     */\r\n    GetColorBuffer() {\r\n        this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n        return this.m_colorBuffer.data;\r\n    }\r\n    /**\r\n     * Get the particle-group of each particle.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle group array.\r\n     */\r\n    GetGroupBuffer() {\r\n        return this.m_groupBuffer;\r\n    }\r\n    /**\r\n     * Get the weight of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle positions array.\r\n     */\r\n    GetWeightBuffer() {\r\n        return this.m_weightBuffer;\r\n    }\r\n    /**\r\n     * Get the user-specified data of each particle.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle user-data array.\r\n     */\r\n    GetUserDataBuffer() {\r\n        this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\r\n        return this.m_userDataBuffer.data;\r\n    }\r\n    /**\r\n     * Get the flags for each particle. See the b2ParticleFlag enum.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle-flags array.\r\n     */\r\n    GetFlagsBuffer() {\r\n        return this.m_flagsBuffer.data;\r\n    }\r\n    /**\r\n     * Set flags for a particle. See the b2ParticleFlag enum.\r\n     */\r\n    SetParticleFlags(index, newFlags) {\r\n        let oldFlags = this.m_flagsBuffer.data[index];\r\n        if (oldFlags & ~newFlags) {\r\n            // If any flags might be removed\r\n            this.m_needsUpdateAllParticleFlags = true;\r\n        }\r\n        if (~this.m_allParticleFlags & newFlags) {\r\n            // If any flags were added\r\n            if (newFlags & b2ParticleFlag.b2_tensileParticle) {\r\n                this.m_accumulation2Buffer = this.RequestBuffer(this.m_accumulation2Buffer);\r\n            }\r\n            if (newFlags & b2ParticleFlag.b2_colorMixingParticle) {\r\n                this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n            }\r\n            this.m_allParticleFlags |= newFlags;\r\n        }\r\n        this.m_flagsBuffer.data[index] = newFlags;\r\n    }\r\n    /**\r\n     * Get flags for a particle. See the b2ParticleFlag enum.\r\n     */\r\n    GetParticleFlags(index) {\r\n        return this.m_flagsBuffer.data[index];\r\n    }\r\n    /**\r\n     * Set an external buffer for particle data.\r\n     *\r\n     * Normally, the b2World's block allocator is used for particle\r\n     * data. However, sometimes you may have an OpenGL or Java\r\n     * buffer for particle data. To avoid data duplication, you may\r\n     * supply this external buffer.\r\n     *\r\n     * Note that, when b2World's block allocator is used, the\r\n     * particle data buffers can grow as required. However, when\r\n     * external buffers are used, the maximum number of particles is\r\n     * clamped to the size of the smallest external buffer.\r\n     *\r\n     * @param buffer a pointer to a block of memory.\r\n     * @param capacity the number of values in the block.\r\n     */\r\n    SetFlagsBuffer(buffer, capacity) {\r\n        this.SetUserOverridableBuffer(this.m_flagsBuffer, buffer, capacity);\r\n    }\r\n    SetPositionBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Float32Array) {\r\n        ///let array = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Vec2(buffer.subarray(i * 2, i * 2 + 2));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_positionBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_positionBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetVelocityBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Float32Array) {\r\n        ///let array = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Vec2(buffer.subarray(i * 2, i * 2 + 2));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_velocityBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_velocityBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetColorBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Uint8Array) {\r\n        ///let array: b2Color[] = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Color(buffer.subarray(i * 4, i * 4 + 4));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_colorBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_colorBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetUserDataBuffer(buffer, capacity) {\r\n        this.SetUserOverridableBuffer(this.m_userDataBuffer, buffer, capacity);\r\n    }\r\n    /**\r\n     * Get contacts between particles\r\n     * Contact data can be used for many reasons, for example to\r\n     * trigger rendering or audio effects.\r\n     */\r\n    GetContacts() {\r\n        return this.m_contactBuffer.data;\r\n    }\r\n    GetContactCount() {\r\n        return this.m_contactBuffer.count;\r\n    }\r\n    /**\r\n     * Get contacts between particles and bodies\r\n     *\r\n     * Contact data can be used for many reasons, for example to\r\n     * trigger rendering or audio effects.\r\n     */\r\n    GetBodyContacts() {\r\n        return this.m_bodyContactBuffer.data;\r\n    }\r\n    GetBodyContactCount() {\r\n        return this.m_bodyContactBuffer.count;\r\n    }\r\n    /**\r\n     * Get array of particle pairs. The particles in a pair:\r\n     *   (1) are contacting,\r\n     *   (2) are in the same particle group,\r\n     *   (3) are part of a rigid particle group, or are spring, elastic,\r\n     *       or wall particles.\r\n     *   (4) have at least one particle that is a spring or barrier\r\n     *       particle (i.e. one of the types in k_pairFlags),\r\n     *   (5) have at least one particle that returns true for\r\n     *       ConnectionFilter::IsNecessary,\r\n     *   (6) are not zombie particles.\r\n     *\r\n     * Essentially, this is an array of spring or barrier particles\r\n     * that are interacting. The array is sorted by b2ParticlePair's\r\n     * indexA, and then indexB. There are no duplicate entries.\r\n     */\r\n    GetPairs() {\r\n        return this.m_pairBuffer.data;\r\n    }\r\n    GetPairCount() {\r\n        return this.m_pairBuffer.count;\r\n    }\r\n    /**\r\n     * Get array of particle triads. The particles in a triad:\r\n     *   (1) are in the same particle group,\r\n     *   (2) are in a Voronoi triangle together,\r\n     *   (3) are within b2_maxTriadDistance particle diameters of each\r\n     *       other,\r\n     *   (4) return true for ConnectionFilter::ShouldCreateTriad\r\n     *   (5) have at least one particle of type elastic (i.e. one of the\r\n     *       types in k_triadFlags),\r\n     *   (6) are part of a rigid particle group, or are spring, elastic,\r\n     *       or wall particles.\r\n     *   (7) are not zombie particles.\r\n     *\r\n     * Essentially, this is an array of elastic particles that are\r\n     * interacting. The array is sorted by b2ParticleTriad's indexA,\r\n     * then indexB, then indexC. There are no duplicate entries.\r\n     */\r\n    GetTriads() {\r\n        return this.m_triadBuffer.data;\r\n    }\r\n    GetTriadCount() {\r\n        return this.m_triadBuffer.count;\r\n    }\r\n    /**\r\n     * Set an optional threshold for the maximum number of\r\n     * consecutive particle iterations that a particle may contact\r\n     * multiple bodies before it is considered a candidate for being\r\n     * \"stuck\". Setting to zero or less disables.\r\n     */\r\n    SetStuckThreshold(steps) {\r\n        this.m_stuckThreshold = steps;\r\n        if (steps > 0) {\r\n            this.m_lastBodyContactStepBuffer.data = this.RequestBuffer(this.m_lastBodyContactStepBuffer.data);\r\n            this.m_bodyContactCountBuffer.data = this.RequestBuffer(this.m_bodyContactCountBuffer.data);\r\n            this.m_consecutiveContactStepsBuffer.data = this.RequestBuffer(this.m_consecutiveContactStepsBuffer.data);\r\n        }\r\n    }\r\n    /**\r\n     * Get potentially stuck particles from the last step; the user\r\n     * must decide if they are stuck or not, and if so, delete or\r\n     * move them\r\n     */\r\n    GetStuckCandidates() {\r\n        ///return m_stuckParticleBuffer.Data();\r\n        return this.m_stuckParticleBuffer.Data();\r\n    }\r\n    /**\r\n     * Get the number of stuck particle candidates from the last\r\n     * step.\r\n     */\r\n    GetStuckCandidateCount() {\r\n        ///return m_stuckParticleBuffer.GetCount();\r\n        return this.m_stuckParticleBuffer.GetCount();\r\n    }\r\n    /**\r\n     * Compute the kinetic energy that can be lost by damping force\r\n     */\r\n    ComputeCollisionEnergy() {\r\n        let s_v = b2ParticleSystem.ComputeCollisionEnergy_s_v;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let sum_v2 = 0;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let n = contact.normal;\r\n            ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n            let v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n            let vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                sum_v2 += vn * vn;\r\n            }\r\n        }\r\n        return 0.5 * this.GetParticleMass() * sum_v2;\r\n    }\r\n    /**\r\n     * Set strict Particle/Body contact check.\r\n     *\r\n     * This is an option that will help ensure correct behavior if\r\n     * there are corners in the world model where Particle/Body\r\n     * contact is ambiguous. This option scales at n*log(n) of the\r\n     * number of Particle/Body contacts, so it is best to only\r\n     * enable if it is necessary for your geometry. Enable if you\r\n     * see strange particle behavior around b2Body intersections.\r\n     */\r\n    SetStrictContactCheck(enabled) {\r\n        this.m_def.strictContactCheck = enabled;\r\n    }\r\n    /**\r\n     * Get the status of the strict contact check.\r\n     */\r\n    GetStrictContactCheck() {\r\n        return this.m_def.strictContactCheck;\r\n    }\r\n    /**\r\n     * Set the lifetime (in seconds) of a particle relative to the\r\n     * current time.  A lifetime of less than or equal to 0.0f\r\n     * results in the particle living forever until it's manually\r\n     * destroyed by the application.\r\n     */\r\n    SetParticleLifetime(index, lifetime) {\r\n        b2Assert(this.ValidateParticleIndex(index));\r\n        let initializeExpirationTimes = this.m_indexByExpirationTimeBuffer.data === null;\r\n        this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\r\n        this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\r\n        // Initialize the inverse mapping buffer.\r\n        if (initializeExpirationTimes) {\r\n            let particleCount = this.GetParticleCount();\r\n            for (let i = 0; i < particleCount; ++i) {\r\n                this.m_indexByExpirationTimeBuffer.data[i] = i;\r\n            }\r\n        }\r\n        ///const int32 quantizedLifetime = (int32)(lifetime / m_def.lifetimeGranularity);\r\n        let quantizedLifetime = lifetime / this.m_def.lifetimeGranularity;\r\n        // Use a negative lifetime so that it's possible to track which\r\n        // of the infinite lifetime particles are older.\r\n        let newExpirationTime = quantizedLifetime > 0.0 ? this.GetQuantizedTimeElapsed() + quantizedLifetime : quantizedLifetime;\r\n        if (newExpirationTime !== this.m_expirationTimeBuffer.data[index]) {\r\n            this.m_expirationTimeBuffer.data[index] = newExpirationTime;\r\n            this.m_expirationTimeBufferRequiresSorting = true;\r\n        }\r\n    }\r\n    /**\r\n     * Get the lifetime (in seconds) of a particle relative to the\r\n     * current time.  A value > 0.0f is returned if the particle is\r\n     * scheduled to be destroyed in the future, values <= 0.0f\r\n     * indicate the particle has an infinite lifetime.\r\n     */\r\n    GetParticleLifetime(index) {\r\n        b2Assert(this.ValidateParticleIndex(index));\r\n        return this.ExpirationTimeToLifetime(this.GetExpirationTimeBuffer()[index]);\r\n    }\r\n    /**\r\n     * Enable / disable destruction of particles in CreateParticle()\r\n     * when no more particles can be created due to a prior call to\r\n     * SetMaxParticleCount().  When this is enabled, the oldest\r\n     * particle is destroyed in CreateParticle() favoring the\r\n     * destruction of particles with a finite lifetime over\r\n     * particles with infinite lifetimes. This feature is enabled by\r\n     * default when particle lifetimes are tracked.  Explicitly\r\n     * enabling this feature using this function enables particle\r\n     * lifetime tracking.\r\n     */\r\n    SetDestructionByAge(enable) {\r\n        if (enable) {\r\n            this.GetExpirationTimeBuffer();\r\n        }\r\n        this.m_def.destroyByAge = enable;\r\n    }\r\n    /**\r\n     * Get whether the oldest particle will be destroyed in\r\n     * CreateParticle() when the maximum number of particles are\r\n     * present in the system.\r\n     */\r\n    GetDestructionByAge() {\r\n        return this.m_def.destroyByAge;\r\n    }\r\n    /**\r\n     * Get the array of particle expiration times indexed by\r\n     * particle index.\r\n     *\r\n     * GetParticleCount() items are in the returned array.\r\n     */\r\n    GetExpirationTimeBuffer() {\r\n        this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\r\n        return this.m_expirationTimeBuffer.data;\r\n    }\r\n    /**\r\n     * Convert a expiration time value in returned by\r\n     * GetExpirationTimeBuffer() to a time in seconds relative to\r\n     * the current simulation time.\r\n     */\r\n    ExpirationTimeToLifetime(expirationTime) {\r\n        return (expirationTime > 0 ?\r\n            expirationTime - this.GetQuantizedTimeElapsed() :\r\n            expirationTime) * this.m_def.lifetimeGranularity;\r\n    }\r\n    /**\r\n     * Get the array of particle indices ordered by reverse\r\n     * lifetime. The oldest particle indexes are at the end of the\r\n     * array with the newest at the start.  Particles with infinite\r\n     * lifetimes (i.e expiration times less than or equal to 0) are\r\n     * placed at the start of the array.\r\n     * ExpirationTimeToLifetime(GetExpirationTimeBuffer()[index]) is\r\n     * equivalent to GetParticleLifetime(index).\r\n     *\r\n     * GetParticleCount() items are in the returned array.\r\n     */\r\n    GetIndexByExpirationTimeBuffer() {\r\n        // If particles are present, initialize / reinitialize the lifetime buffer.\r\n        if (this.GetParticleCount()) {\r\n            this.SetParticleLifetime(0, this.GetParticleLifetime(0));\r\n        }\r\n        else {\r\n            this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\r\n        }\r\n        return this.m_indexByExpirationTimeBuffer.data;\r\n    }\r\n    /**\r\n     * Apply an impulse to one particle. This immediately modifies\r\n     * the velocity. Similar to b2Body::ApplyLinearImpulse.\r\n     *\r\n     * @param index the particle that will be modified.\r\n     * @param impulse impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n     */\r\n    ParticleApplyLinearImpulse(index, impulse) {\r\n        this.ApplyLinearImpulse(index, index + 1, impulse);\r\n    }\r\n    /**\r\n     * Apply an impulse to all particles between 'firstIndex' and\r\n     * 'lastIndex'. This immediately modifies the velocity. Note\r\n     * that the impulse is applied to the total mass of all\r\n     * particles. So, calling ParticleApplyLinearImpulse(0, impulse)\r\n     * and ParticleApplyLinearImpulse(1, impulse) will impart twice\r\n     * as much velocity as calling just ApplyLinearImpulse(0, 1,\r\n     * impulse).\r\n     *\r\n     * @param firstIndex the first particle to be modified.\r\n     * @param lastIndex the last particle to be modified.\r\n     * @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n     */\r\n    ApplyLinearImpulse(firstIndex, lastIndex, impulse) {\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let numParticles = (lastIndex - firstIndex);\r\n        let totalMass = numParticles * this.GetParticleMass();\r\n        ///const b2Vec2 velocityDelta = impulse / totalMass;\r\n        let velocityDelta = impulse.Clone().SelfMul(1 / totalMass);\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            ///m_velocityBuffer.data[i] += velocityDelta;\r\n            vel_data[i].SelfAdd(velocityDelta);\r\n        }\r\n    }\r\n    static IsSignificantForce(force) {\r\n        return force.x !== 0 || force.y !== 0;\r\n    }\r\n    /**\r\n     * Apply a force to the center of a particle.\r\n     *\r\n     * @param index the particle that will be modified.\r\n     * @param force the world force vector, usually in Newtons (N).\r\n     */\r\n    ParticleApplyForce(index, force) {\r\n        if (b2ParticleSystem.IsSignificantForce(force) &&\r\n            this.ForceCanBeApplied(this.m_flagsBuffer.data[index])) {\r\n            this.PrepareForceBuffer();\r\n            ///m_forceBuffer[index] += force;\r\n            this.m_forceBuffer[index].SelfAdd(force);\r\n        }\r\n    }\r\n    /**\r\n     * Distribute a force across several particles. The particles\r\n     * must not be wall particles. Note that the force is\r\n     * distributed across all the particles, so calling this\r\n     * function for indices 0..N is not the same as calling\r\n     * ParticleApplyForce(i, force) for i in 0..N.\r\n     *\r\n     * @param firstIndex the first particle to be modified.\r\n     * @param lastIndex the last particle to be modified.\r\n     * @param force the world force vector, usually in Newtons (N).\r\n     */\r\n    ApplyForce(firstIndex, lastIndex, force) {\r\n        // Ensure we're not trying to apply force to particles that can't move,\r\n        // such as wall particles.\r\n        // #if B2_ASSERT_ENABLED\r\n        ///let flags = 0;\r\n        ///for (let i = firstIndex; i < lastIndex; i++) {\r\n        ///flags |= this.m_flagsBuffer.data[i];\r\n        ///}\r\n        ///b2Assert(this.ForceCanBeApplied(flags));\r\n        // #endif\r\n        // Early out if force does nothing (optimization).\r\n        ///const b2Vec2 distributedForce = force / (float32)(lastIndex - firstIndex);\r\n        let distributedForce = force.Clone().SelfMul(1 / (lastIndex - firstIndex));\r\n        if (b2ParticleSystem.IsSignificantForce(distributedForce)) {\r\n            this.PrepareForceBuffer();\r\n            // Distribute the force over all the particles.\r\n            for (let i = firstIndex; i < lastIndex; i++) {\r\n                ///m_forceBuffer[i] += distributedForce;\r\n                this.m_forceBuffer[i].SelfAdd(distributedForce);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get the next particle-system in the world's particle-system\r\n     * list.\r\n     */\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /**\r\n     * Query the particle system for all particles that potentially\r\n     * overlap the provided AABB.\r\n     * b2QueryCallback::ShouldQueryParticleSystem is ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param aabb the query box.\r\n     */\r\n    QueryAABB(callback, aabb) {\r\n        if (this.m_proxyBuffer.count === 0) {\r\n            return;\r\n        }\r\n        let beginProxy = 0;\r\n        let endProxy = this.m_proxyBuffer.count;\r\n        let firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x, this.m_inverseDiameter * aabb.lowerBound.y), b2ParticleSystem.Proxy.CompareProxyTag);\r\n        let lastProxy = std_upper_bound(this.m_proxyBuffer.data, firstProxy, endProxy, b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x, this.m_inverseDiameter * aabb.upperBound.y), b2ParticleSystem.Proxy.CompareTagProxy);\r\n        let pos_data = this.m_positionBuffer.data;\r\n        for (let k = firstProxy; k < lastProxy; ++k) {\r\n            let proxy = this.m_proxyBuffer.data[k];\r\n            let i = proxy.index;\r\n            let p = pos_data[i];\r\n            if (aabb.lowerBound.x < p.x && p.x < aabb.upperBound.x &&\r\n                aabb.lowerBound.y < p.y && p.y < aabb.upperBound.y) {\r\n                if (!callback.ReportParticle(this, i)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Query the particle system for all particles that potentially\r\n     * overlap the provided shape's AABB. Calls QueryAABB\r\n     * internally. b2QueryCallback::ShouldQueryParticleSystem is\r\n     * ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param shape the query shape\r\n     * @param xf the transform of the AABB\r\n     * @param childIndex\r\n     */\r\n    QueryShapeAABB(callback, shape, xf, childIndex = 0) {\r\n        let s_aabb = b2ParticleSystem.QueryShapeAABB_s_aabb;\r\n        let aabb = s_aabb;\r\n        shape.ComputeAABB(aabb, xf, childIndex);\r\n        this.QueryAABB(callback, aabb);\r\n    }\r\n    QueryPointAABB(callback, point, slop = b2_linearSlop) {\r\n        let s_aabb = b2ParticleSystem.QueryPointAABB_s_aabb;\r\n        let aabb = s_aabb;\r\n        aabb.lowerBound.Set(point.x - slop, point.y - slop);\r\n        aabb.upperBound.Set(point.x + slop, point.y + slop);\r\n        this.QueryAABB(callback, aabb);\r\n    }\r\n    /**\r\n     * Ray-cast the particle system for all particles in the path of\r\n     * the ray. Your callback controls whether you get the closest\r\n     * point, any point, or n-points. The ray-cast ignores particles\r\n     * that contain the starting point.\r\n     * b2RayCastCallback::ShouldQueryParticleSystem is ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param point1 the ray starting point\r\n     * @param point2 the ray ending point\r\n     */\r\n    RayCast(callback, point1, point2) {\r\n        let s_aabb = b2ParticleSystem.RayCast_s_aabb;\r\n        let s_p = b2ParticleSystem.RayCast_s_p;\r\n        let s_v = b2ParticleSystem.RayCast_s_v;\r\n        let s_n = b2ParticleSystem.RayCast_s_n;\r\n        let s_point = b2ParticleSystem.RayCast_s_point;\r\n        if (this.m_proxyBuffer.count === 0) {\r\n            return;\r\n        }\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let aabb = s_aabb;\r\n        b2Vec2.MinV(point1, point2, aabb.lowerBound);\r\n        b2Vec2.MaxV(point1, point2, aabb.upperBound);\r\n        let fraction = 1;\r\n        // solving the following equation:\r\n        // ((1-t)*point1+t*point2-position)^2=diameter^2\r\n        // where t is a potential fraction\r\n        ///b2Vec2 v = point2 - point1;\r\n        let v = b2Vec2.SubVV(point2, point1, s_v);\r\n        let v2 = b2Vec2.DotVV(v, v);\r\n        let enumerator = this.GetInsideBoundsEnumerator(aabb);\r\n        let i;\r\n        while ((i = enumerator.GetNext()) >= 0) {\r\n            ///b2Vec2 p = point1 - m_positionBuffer.data[i];\r\n            let p = b2Vec2.SubVV(point1, pos_data[i], s_p);\r\n            let pv = b2Vec2.DotVV(p, v);\r\n            let p2 = b2Vec2.DotVV(p, p);\r\n            let determinant = pv * pv - v2 * (p2 - this.m_squaredDiameter);\r\n            if (determinant >= 0) {\r\n                let sqrtDeterminant = b2Sqrt(determinant);\r\n                // find a solution between 0 and fraction\r\n                let t = (-pv - sqrtDeterminant) / v2;\r\n                if (t > fraction) {\r\n                    continue;\r\n                }\r\n                if (t < 0) {\r\n                    t = (-pv + sqrtDeterminant) / v2;\r\n                    if (t < 0 || t > fraction) {\r\n                        continue;\r\n                    }\r\n                }\r\n                ///b2Vec2 n = p + t * v;\r\n                let n = b2Vec2.AddVMulSV(p, t, v, s_n);\r\n                n.Normalize();\r\n                ///float32 f = callback.ReportParticle(this, i, point1 + t * v, n, t);\r\n                let f = callback.ReportParticle(this, i, b2Vec2.AddVMulSV(point1, t, v, s_point), n, t);\r\n                fraction = b2Min(fraction, f);\r\n                if (fraction <= 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Compute the axis-aligned bounding box for all particles\r\n     * contained within this particle system.\r\n     * @param aabb Returns the axis-aligned bounding box of the system.\r\n     */\r\n    ComputeAABB(aabb) {\r\n        let particleCount = this.GetParticleCount();\r\n        b2Assert(aabb !== null);\r\n        aabb.lowerBound.x = +b2_maxFloat;\r\n        aabb.lowerBound.y = +b2_maxFloat;\r\n        aabb.upperBound.x = -b2_maxFloat;\r\n        aabb.upperBound.y = -b2_maxFloat;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        for (let i = 0; i < particleCount; i++) {\r\n            let p = pos_data[i];\r\n            b2Vec2.MinV(aabb.lowerBound, p, aabb.lowerBound);\r\n            b2Vec2.MaxV(aabb.upperBound, p, aabb.upperBound);\r\n        }\r\n        aabb.lowerBound.x -= this.m_particleDiameter;\r\n        aabb.lowerBound.y -= this.m_particleDiameter;\r\n        aabb.upperBound.x += this.m_particleDiameter;\r\n        aabb.upperBound.y += this.m_particleDiameter;\r\n    }\r\n    FreeBuffer(b, capacity) {\r\n        if (b === null) {\r\n            return;\r\n        }\r\n        b.length = 0;\r\n    }\r\n    FreeUserOverridableBuffer(b) {\r\n        if (b.userSuppliedCapacity === 0) {\r\n            this.FreeBuffer(b.data, this.m_internalAllocatedCapacity);\r\n        }\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer3(oldBuffer, oldCapacity, newCapacity) {\r\n        b2Assert(newCapacity > oldCapacity);\r\n        let newBuffer = (oldBuffer) ? oldBuffer.slice() : [];\r\n        newBuffer.length = newCapacity;\r\n        return newBuffer;\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer5(buffer, userSuppliedCapacity, oldCapacity, newCapacity, deferred) {\r\n        b2Assert(newCapacity > oldCapacity);\r\n        // A 'deferred' buffer is reallocated only if it is not NULL.\r\n        // If 'userSuppliedCapacity' is not zero, buffer is user supplied and must\r\n        // be kept.\r\n        b2Assert(!userSuppliedCapacity || newCapacity <= userSuppliedCapacity);\r\n        if ((!deferred || buffer) && !userSuppliedCapacity) {\r\n            buffer = this.ReallocateBuffer3(buffer, oldCapacity, newCapacity);\r\n        }\r\n        return buffer;\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer4(buffer, oldCapacity, newCapacity, deferred) {\r\n        b2Assert(newCapacity > oldCapacity);\r\n        return this.ReallocateBuffer5(buffer.data, buffer.userSuppliedCapacity, oldCapacity, newCapacity, deferred);\r\n    }\r\n    RequestBuffer(buffer) {\r\n        if (!buffer) {\r\n            if (this.m_internalAllocatedCapacity === 0) {\r\n                this.ReallocateInternalAllocatedBuffers(b2_minParticleSystemBufferCapacity);\r\n            }\r\n            buffer = [];\r\n            buffer.length = this.m_internalAllocatedCapacity;\r\n        }\r\n        return buffer;\r\n    }\r\n    /**\r\n     * Reallocate the handle / index map and schedule the allocation\r\n     * of a new pool for handle allocation.\r\n     */\r\n    ReallocateHandleBuffers(newCapacity) {\r\n        b2Assert(newCapacity > this.m_internalAllocatedCapacity);\r\n        // Reallocate a new handle / index map buffer, copying old handle pointers\r\n        // is fine since they're kept around.\r\n        this.m_handleIndexBuffer.data = this.ReallocateBuffer4(this.m_handleIndexBuffer, this.m_internalAllocatedCapacity, newCapacity, true);\r\n        // Set the size of the next handle allocation.\r\n        ///this.m_handleAllocator.SetItemsPerSlab(newCapacity - this.m_internalAllocatedCapacity);\r\n    }\r\n    ReallocateInternalAllocatedBuffers(capacity) {\r\n        function LimitCapacity(capacity, maxCount) {\r\n            return maxCount && capacity > maxCount ? maxCount : capacity;\r\n        }\r\n        // Don't increase capacity beyond the smallest user-supplied buffer size.\r\n        capacity = LimitCapacity(capacity, this.m_def.maxCount);\r\n        capacity = LimitCapacity(capacity, this.m_flagsBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_positionBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_velocityBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_colorBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_userDataBuffer.userSuppliedCapacity);\r\n        if (this.m_internalAllocatedCapacity < capacity) {\r\n            this.ReallocateHandleBuffers(capacity);\r\n            this.m_flagsBuffer.data = this.ReallocateBuffer4(this.m_flagsBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            // Conditionally defer these as they are optional if the feature is\r\n            // not enabled.\r\n            let stuck = this.m_stuckThreshold > 0;\r\n            this.m_lastBodyContactStepBuffer.data = this.ReallocateBuffer4(this.m_lastBodyContactStepBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_bodyContactCountBuffer.data = this.ReallocateBuffer4(this.m_bodyContactCountBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_consecutiveContactStepsBuffer.data = this.ReallocateBuffer4(this.m_consecutiveContactStepsBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_positionBuffer.data = this.ReallocateBuffer4(this.m_positionBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_velocityBuffer.data = this.ReallocateBuffer4(this.m_velocityBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_forceBuffer = this.ReallocateBuffer5(this.m_forceBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_weightBuffer = this.ReallocateBuffer5(this.m_weightBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_staticPressureBuffer = this.ReallocateBuffer5(this.m_staticPressureBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_accumulationBuffer = this.ReallocateBuffer5(this.m_accumulationBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_accumulation2Buffer = this.ReallocateBuffer5(this.m_accumulation2Buffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_depthBuffer = this.ReallocateBuffer5(this.m_depthBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_colorBuffer.data = this.ReallocateBuffer4(this.m_colorBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_groupBuffer = this.ReallocateBuffer5(this.m_groupBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_userDataBuffer.data = this.ReallocateBuffer4(this.m_userDataBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_expirationTimeBuffer.data = this.ReallocateBuffer4(this.m_expirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_indexByExpirationTimeBuffer.data = this.ReallocateBuffer4(this.m_indexByExpirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_internalAllocatedCapacity = capacity;\r\n        }\r\n    }\r\n    CreateParticleForGroup(groupDef, xf, p) {\r\n        let particleDef = new b2ParticleDef();\r\n        particleDef.flags = groupDef.flags;\r\n        ///particleDef.position = b2Mul(xf, p);\r\n        b2Transform.MulXV(xf, p, particleDef.position);\r\n        ///particleDef.velocity =\r\n        ///  groupDef.linearVelocity +\r\n        ///  b2Cross(groupDef.angularVelocity,\r\n        ///      particleDef.position - groupDef.position);\r\n        b2Vec2.AddVV(groupDef.linearVelocity, b2Vec2.CrossSV(groupDef.angularVelocity, b2Vec2.SubVV(particleDef.position, groupDef.position, b2Vec2.s_t0), b2Vec2.s_t0), particleDef.velocity);\r\n        particleDef.color.Copy(groupDef.color);\r\n        particleDef.lifetime = groupDef.lifetime;\r\n        particleDef.userData = groupDef.userData;\r\n        this.CreateParticle(particleDef);\r\n    }\r\n    CreateParticlesStrokeShapeForGroup(shape, groupDef, xf) {\r\n        let s_edge = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge;\r\n        let s_d = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d;\r\n        let s_p = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p;\r\n        let stride = groupDef.stride;\r\n        if (stride === 0) {\r\n            stride = this.GetParticleStride();\r\n        }\r\n        let positionOnEdge = 0;\r\n        let childCount = shape.GetChildCount();\r\n        for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n            let edge = null;\r\n            if (shape.GetType() === b2ShapeType.e_edgeShape) {\r\n                edge = shape;\r\n            }\r\n            else {\r\n                b2Assert(shape.GetType() === b2ShapeType.e_chainShape);\r\n                edge = s_edge;\r\n                shape.GetChildEdge(edge, childIndex);\r\n            }\r\n            let d = b2Vec2.SubVV(edge.m_vertex2, edge.m_vertex1, s_d);\r\n            let edgeLength = d.Length();\r\n            while (positionOnEdge < edgeLength) {\r\n                ///b2Vec2 p = edge.m_vertex1 + positionOnEdge / edgeLength * d;\r\n                let p = b2Vec2.AddVMulSV(edge.m_vertex1, positionOnEdge / edgeLength, d, s_p);\r\n                this.CreateParticleForGroup(groupDef, xf, p);\r\n                positionOnEdge += stride;\r\n            }\r\n            positionOnEdge -= edgeLength;\r\n        }\r\n    }\r\n    CreateParticlesFillShapeForGroup(shape, groupDef, xf) {\r\n        let s_aabb = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb;\r\n        let s_p = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_p;\r\n        let stride = groupDef.stride;\r\n        if (stride === 0) {\r\n            stride = this.GetParticleStride();\r\n        }\r\n        ///b2Transform identity;\r\n        /// identity.SetIdentity();\r\n        let identity = b2Transform.IDENTITY;\r\n        let aabb = s_aabb;\r\n        b2Assert(shape.GetChildCount() === 1);\r\n        shape.ComputeAABB(aabb, identity, 0);\r\n        for (let y = Math.floor(aabb.lowerBound.y / stride) * stride; y < aabb.upperBound.y; y += stride) {\r\n            for (let x = Math.floor(aabb.lowerBound.x / stride) * stride; x < aabb.upperBound.x; x += stride) {\r\n                let p = s_p.Set(x, y);\r\n                if (shape.TestPoint(identity, p)) {\r\n                    this.CreateParticleForGroup(groupDef, xf, p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    CreateParticlesWithShapeForGroup(shape, groupDef, xf) {\r\n        switch (shape.GetType()) {\r\n            case b2ShapeType.e_edgeShape:\r\n            case b2ShapeType.e_chainShape:\r\n                this.CreateParticlesStrokeShapeForGroup(shape, groupDef, xf);\r\n                break;\r\n            case b2ShapeType.e_polygonShape:\r\n            case b2ShapeType.e_circleShape:\r\n                this.CreateParticlesFillShapeForGroup(shape, groupDef, xf);\r\n                break;\r\n            default:\r\n                b2Assert(false);\r\n                break;\r\n        }\r\n    }\r\n    CreateParticlesWithShapesForGroup(shapes, shapeCount, groupDef, xf) {\r\n        let compositeShape = new b2ParticleSystem.CompositeShape(shapes, shapeCount);\r\n        this.CreateParticlesFillShapeForGroup(compositeShape, groupDef, xf);\r\n    }\r\n    CloneParticle(oldIndex, group) {\r\n        let def = new b2ParticleDef();\r\n        def.flags = this.m_flagsBuffer.data[oldIndex];\r\n        def.position.Copy(this.m_positionBuffer.data[oldIndex]);\r\n        def.velocity.Copy(this.m_velocityBuffer.data[oldIndex]);\r\n        if (this.m_colorBuffer.data) {\r\n            def.color.Copy(this.m_colorBuffer.data[oldIndex]);\r\n        }\r\n        if (this.m_userDataBuffer.data) {\r\n            def.userData = this.m_userDataBuffer.data[oldIndex];\r\n        }\r\n        def.group = group;\r\n        let newIndex = this.CreateParticle(def);\r\n        if (this.m_handleIndexBuffer.data) {\r\n            let handle = this.m_handleIndexBuffer.data[oldIndex];\r\n            if (handle)\r\n                handle.SetIndex(newIndex);\r\n            this.m_handleIndexBuffer.data[newIndex] = handle;\r\n            this.m_handleIndexBuffer.data[oldIndex] = null;\r\n        }\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            this.m_lastBodyContactStepBuffer.data[newIndex] =\r\n                this.m_lastBodyContactStepBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            this.m_bodyContactCountBuffer.data[newIndex] =\r\n                this.m_bodyContactCountBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            this.m_consecutiveContactStepsBuffer.data[newIndex] =\r\n                this.m_consecutiveContactStepsBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_hasForce) {\r\n            this.m_forceBuffer[newIndex].Copy(this.m_forceBuffer[oldIndex]);\r\n        }\r\n        if (this.m_staticPressureBuffer) {\r\n            this.m_staticPressureBuffer[newIndex] = this.m_staticPressureBuffer[oldIndex];\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            this.m_depthBuffer[newIndex] = this.m_depthBuffer[oldIndex];\r\n        }\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            this.m_expirationTimeBuffer.data[newIndex] =\r\n                this.m_expirationTimeBuffer.data[oldIndex];\r\n        }\r\n        return newIndex;\r\n    }\r\n    DestroyParticlesInGroup(group, callDestructionListener = false) {\r\n        for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n            this.DestroyParticle(i, callDestructionListener);\r\n        }\r\n    }\r\n    DestroyParticleGroup(group) {\r\n        b2Assert(this.m_groupCount > 0);\r\n        b2Assert(group !== null);\r\n        if (this.m_world.m_destructionListener) {\r\n            this.m_world.m_destructionListener.SayGoodbyeParticleGroup(group);\r\n        }\r\n        this.SetGroupFlags(group, 0);\r\n        for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n            this.m_groupBuffer[i] = null;\r\n        }\r\n        if (group.m_prev) {\r\n            group.m_prev.m_next = group.m_next;\r\n        }\r\n        if (group.m_next) {\r\n            group.m_next.m_prev = group.m_prev;\r\n        }\r\n        if (group === this.m_groupList) {\r\n            this.m_groupList = group.m_next;\r\n        }\r\n        --this.m_groupCount;\r\n    }\r\n    static ParticleCanBeConnected(flags, group) {\r\n        return ((flags & (b2ParticleFlag.b2_wallParticle | b2ParticleFlag.b2_springParticle | b2ParticleFlag.b2_elasticParticle)) !== 0) ||\r\n            ((group !== null) && ((group.GetGroupFlags() & b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0));\r\n    }\r\n    UpdatePairsAndTriads(firstIndex, lastIndex, filter) {\r\n        let s_dab = b2ParticleSystem.UpdatePairsAndTriads_s_dab;\r\n        let s_dbc = b2ParticleSystem.UpdatePairsAndTriads_s_dbc;\r\n        let s_dca = b2ParticleSystem.UpdatePairsAndTriads_s_dca;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        // Create pairs or triads.\r\n        // All particles in each pair/triad should satisfy the following:\r\n        // * firstIndex <= index < lastIndex\r\n        // * don't have b2_zombieParticle\r\n        // * ParticleCanBeConnected returns true\r\n        // * ShouldCreatePair/ShouldCreateTriad returns true\r\n        // Any particles in each pair/triad should satisfy the following:\r\n        // * filter.IsNeeded returns true\r\n        // * have one of k_pairFlags/k_triadsFlags\r\n        b2Assert(firstIndex <= lastIndex);\r\n        let particleFlags = 0;\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            particleFlags |= this.m_flagsBuffer.data[i];\r\n        }\r\n        if (particleFlags & b2ParticleSystem.k_pairFlags) {\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                let contact = this.m_contactBuffer.data[k];\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                let af = this.m_flagsBuffer.data[a];\r\n                let bf = this.m_flagsBuffer.data[b];\r\n                let groupA = this.m_groupBuffer[a];\r\n                let groupB = this.m_groupBuffer[b];\r\n                if (a >= firstIndex && a < lastIndex &&\r\n                    b >= firstIndex && b < lastIndex &&\r\n                    !((af | bf) & b2ParticleFlag.b2_zombieParticle) &&\r\n                    ((af | bf) & b2ParticleSystem.k_pairFlags) &&\r\n                    (filter.IsNecessary(a) || filter.IsNecessary(b)) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(af, groupA) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(bf, groupB) &&\r\n                    filter.ShouldCreatePair(a, b)) {\r\n                    ///b2ParticlePair& pair = m_pairBuffer.Append();\r\n                    let pair = this.m_pairBuffer.data[this.m_pairBuffer.Append()];\r\n                    pair.indexA = a;\r\n                    pair.indexB = b;\r\n                    pair.flags = contact.flags;\r\n                    pair.strength = b2Min(groupA ? groupA.m_strength : 1, groupB ? groupB.m_strength : 1);\r\n                    ///pair.distance = b2Distance(pos_data[a], pos_data[b]); // TODO: this was wrong!\r\n                    pair.distance = b2Vec2.DistanceVV(pos_data[a], pos_data[b]);\r\n                }\r\n                ///std::stable_sort(m_pairBuffer.Begin(), m_pairBuffer.End(), ComparePairIndices);\r\n                std_stable_sort(this.m_pairBuffer.data, 0, this.m_pairBuffer.count, b2ParticleSystem.ComparePairIndices);\r\n                ///m_pairBuffer.Unique(MatchPairIndices);\r\n                this.m_pairBuffer.Unique(b2ParticleSystem.MatchPairIndices);\r\n            }\r\n        }\r\n        if (particleFlags & b2ParticleSystem.k_triadFlags) {\r\n            let diagram = new b2VoronoiDiagram(lastIndex - firstIndex);\r\n            ///let necessary_count = 0;\r\n            for (let i = firstIndex; i < lastIndex; i++) {\r\n                let flags = this.m_flagsBuffer.data[i];\r\n                let group = this.m_groupBuffer[i];\r\n                if (!(flags & b2ParticleFlag.b2_zombieParticle) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(flags, group)) {\r\n                    ///if (filter.IsNecessary(i)) {\r\n                    ///++necessary_count;\r\n                    ///}\r\n                    diagram.AddGenerator(pos_data[i], i, filter.IsNecessary(i));\r\n                }\r\n            }\r\n            ///if (necessary_count === 0) {\r\n            /////debugger;\r\n            ///for (let i = firstIndex; i < lastIndex; i++) {\r\n            ///  filter.IsNecessary(i);\r\n            ///}\r\n            ///}\r\n            let stride = this.GetParticleStride();\r\n            diagram.Generate(stride / 2, stride * 2);\r\n            const system = this;\r\n            let callback = /*UpdateTriadsCallback*/ (a, b, c) => {\r\n                let af = system.m_flagsBuffer.data[a];\r\n                let bf = system.m_flagsBuffer.data[b];\r\n                let cf = system.m_flagsBuffer.data[c];\r\n                if (((af | bf | cf) & b2ParticleSystem.k_triadFlags) &&\r\n                    filter.ShouldCreateTriad(a, b, c)) {\r\n                    let pa = pos_data[a];\r\n                    let pb = pos_data[b];\r\n                    let pc = pos_data[c];\r\n                    let dab = b2Vec2.SubVV(pa, pb, s_dab);\r\n                    let dbc = b2Vec2.SubVV(pb, pc, s_dbc);\r\n                    let dca = b2Vec2.SubVV(pc, pa, s_dca);\r\n                    let maxDistanceSquared = b2_maxTriadDistanceSquared * system.m_squaredDiameter;\r\n                    if (b2Vec2.DotVV(dab, dab) > maxDistanceSquared ||\r\n                        b2Vec2.DotVV(dbc, dbc) > maxDistanceSquared ||\r\n                        b2Vec2.DotVV(dca, dca) > maxDistanceSquared) {\r\n                        return;\r\n                    }\r\n                    let groupA = system.m_groupBuffer[a];\r\n                    let groupB = system.m_groupBuffer[b];\r\n                    let groupC = system.m_groupBuffer[c];\r\n                    ///b2ParticleTriad& triad = m_system.m_triadBuffer.Append();\r\n                    let triad = system.m_triadBuffer.data[system.m_triadBuffer.Append()];\r\n                    triad.indexA = a;\r\n                    triad.indexB = b;\r\n                    triad.indexC = c;\r\n                    triad.flags = af | bf | cf;\r\n                    triad.strength = b2Min(b2Min(groupA ? groupA.m_strength : 1, groupB ? groupB.m_strength : 1), groupC ? groupC.m_strength : 1);\r\n                    ///let midPoint = b2Vec2.MulSV(1.0 / 3.0, b2Vec2.AddVV(pa, b2Vec2.AddVV(pb, pc, new b2Vec2()), new b2Vec2()), new b2Vec2());\r\n                    let midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\r\n                    let midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\r\n                    ///triad.pa = b2Vec2.SubVV(pa, midPoint, new b2Vec2());\r\n                    triad.pa.x = pa.x - midPoint_x;\r\n                    triad.pa.y = pa.y - midPoint_y;\r\n                    ///triad.pb = b2Vec2.SubVV(pb, midPoint, new b2Vec2());\r\n                    triad.pb.x = pb.x - midPoint_x;\r\n                    triad.pb.y = pb.y - midPoint_y;\r\n                    ///triad.pc = b2Vec2.SubVV(pc, midPoint, new b2Vec2());\r\n                    triad.pc.x = pc.x - midPoint_x;\r\n                    triad.pc.y = pc.y - midPoint_y;\r\n                    triad.ka = -b2Vec2.DotVV(dca, dab);\r\n                    triad.kb = -b2Vec2.DotVV(dab, dbc);\r\n                    triad.kc = -b2Vec2.DotVV(dbc, dca);\r\n                    triad.s = b2Vec2.CrossVV(pa, pb) + b2Vec2.CrossVV(pb, pc) + b2Vec2.CrossVV(pc, pa);\r\n                }\r\n            };\r\n            diagram.GetNodes(callback);\r\n            ///std::stable_sort(m_triadBuffer.Begin(), m_triadBuffer.End(), CompareTriadIndices);\r\n            std_stable_sort(this.m_triadBuffer.data, 0, this.m_triadBuffer.count, b2ParticleSystem.CompareTriadIndices);\r\n            ///m_triadBuffer.Unique(MatchTriadIndices);\r\n            this.m_triadBuffer.Unique(b2ParticleSystem.MatchTriadIndices);\r\n        }\r\n    }\r\n    UpdatePairsAndTriadsWithReactiveParticles() {\r\n        let filter = new b2ParticleSystem.ReactiveFilter(this.m_flagsBuffer);\r\n        this.UpdatePairsAndTriads(0, this.m_count, filter);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_flagsBuffer.data[i] &= ~b2ParticleFlag.b2_reactiveParticle;\r\n        }\r\n        this.m_allParticleFlags &= ~b2ParticleFlag.b2_reactiveParticle;\r\n    }\r\n    static ComparePairIndices(a, b) {\r\n        let diffA = a.indexA - b.indexA;\r\n        if (diffA !== 0)\r\n            return diffA < 0;\r\n        return a.indexB < b.indexB;\r\n    }\r\n    static MatchPairIndices(a, b) {\r\n        return a.indexA === b.indexA && a.indexB === b.indexB;\r\n    }\r\n    static CompareTriadIndices(a, b) {\r\n        let diffA = a.indexA - b.indexA;\r\n        if (diffA !== 0)\r\n            return diffA < 0;\r\n        let diffB = a.indexB - b.indexB;\r\n        if (diffB !== 0)\r\n            return diffB < 0;\r\n        return a.indexC < b.indexC;\r\n    }\r\n    static MatchTriadIndices(a, b) {\r\n        return a.indexA === b.indexA && a.indexB === b.indexB && a.indexC === b.indexC;\r\n    }\r\n    static InitializeParticleLists(group, nodeBuffer) {\r\n        let bufferIndex = group.GetBufferIndex();\r\n        let particleCount = group.GetParticleCount();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            let node = nodeBuffer[i];\r\n            node.list = node;\r\n            node.next = null;\r\n            node.count = 1;\r\n            node.index = i + bufferIndex;\r\n        }\r\n    }\r\n    MergeParticleListsInContact(group, nodeBuffer) {\r\n        let bufferIndex = group.GetBufferIndex();\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            /*const b2ParticleContact&*/\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            if (!group.ContainsParticle(a) || !group.ContainsParticle(b)) {\r\n                continue;\r\n            }\r\n            let listA = nodeBuffer[a - bufferIndex].list;\r\n            let listB = nodeBuffer[b - bufferIndex].list;\r\n            if (listA === listB) {\r\n                continue;\r\n            }\r\n            // To minimize the cost of insertion, make sure listA is longer than\r\n            // listB.\r\n            if (listA.count < listB.count) {\r\n                let _tmp = listA;\r\n                listA = listB;\r\n                listB = _tmp; ///b2Swap(listA, listB);\r\n            }\r\n            b2Assert(listA.count >= listB.count);\r\n            b2ParticleSystem.MergeParticleLists(listA, listB);\r\n        }\r\n    }\r\n    static MergeParticleLists(listA, listB) {\r\n        // Insert listB between index 0 and 1 of listA\r\n        // Example:\r\n        //     listA => a1 => a2 => a3 => null\r\n        //     listB => b1 => b2 => null\r\n        // to\r\n        //     listA => listB => b1 => b2 => a1 => a2 => a3 => null\r\n        b2Assert(listA !== listB);\r\n        for (let b = listB;;) {\r\n            b.list = listA;\r\n            let nextB = b.next;\r\n            if (nextB) {\r\n                b = nextB;\r\n            }\r\n            else {\r\n                b.next = listA.next;\r\n                break;\r\n            }\r\n        }\r\n        listA.next = listB;\r\n        listA.count += listB.count;\r\n        listB.count = 0;\r\n    }\r\n    static FindLongestParticleList(group, nodeBuffer) {\r\n        let particleCount = group.GetParticleCount();\r\n        let result = nodeBuffer[0];\r\n        for (let i = 0; i < particleCount; i++) {\r\n            let node = nodeBuffer[i];\r\n            if (result.count < node.count) {\r\n                result = node;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    MergeZombieParticleListNodes(group, nodeBuffer, survivingList) {\r\n        let particleCount = group.GetParticleCount();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            let node = nodeBuffer[i];\r\n            if (node !== survivingList &&\r\n                (this.m_flagsBuffer.data[node.index] & b2ParticleFlag.b2_zombieParticle)) {\r\n                b2ParticleSystem.MergeParticleListAndNode(survivingList, node);\r\n            }\r\n        }\r\n    }\r\n    static MergeParticleListAndNode(list, node) {\r\n        // Insert node between index 0 and 1 of list\r\n        // Example:\r\n        //     list => a1 => a2 => a3 => null\r\n        //     node => null\r\n        // to\r\n        //     list => node => a1 => a2 => a3 => null\r\n        b2Assert(node !== list);\r\n        b2Assert(node.list === node);\r\n        b2Assert(node.count === 1);\r\n        node.list = list;\r\n        node.next = list.next;\r\n        list.next = node;\r\n        list.count++;\r\n        node.count = 0;\r\n    }\r\n    CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList) {\r\n        let particleCount = group.GetParticleCount();\r\n        let def = new b2ParticleGroupDef();\r\n        def.groupFlags = group.GetGroupFlags();\r\n        def.userData = group.GetUserData();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            let list = nodeBuffer[i];\r\n            if (!list.count || list === survivingList) {\r\n                continue;\r\n            }\r\n            b2Assert(list.list === list);\r\n            let newGroup = this.CreateParticleGroup(def);\r\n            for (let node = list; node; node = node.next) {\r\n                let oldIndex = node.index;\r\n                let flags = this.m_flagsBuffer.data[oldIndex];\r\n                b2Assert(!(flags & b2ParticleFlag.b2_zombieParticle));\r\n                let newIndex = this.CloneParticle(oldIndex, newGroup);\r\n                this.m_flagsBuffer.data[oldIndex] |= b2ParticleFlag.b2_zombieParticle;\r\n                node.index = newIndex;\r\n            }\r\n        }\r\n    }\r\n    UpdatePairsAndTriadsWithParticleList(group, nodeBuffer) {\r\n        let bufferIndex = group.GetBufferIndex();\r\n        // Update indices in pairs and triads. If an index belongs to the group,\r\n        // replace it with the corresponding value in nodeBuffer.\r\n        // Note that nodeBuffer is allocated only for the group and the index should\r\n        // be shifted by bufferIndex.\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            let pair = this.m_pairBuffer.data[k];\r\n            let a = pair.indexA;\r\n            let b = pair.indexB;\r\n            if (group.ContainsParticle(a)) {\r\n                pair.indexA = nodeBuffer[a - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(b)) {\r\n                pair.indexB = nodeBuffer[b - bufferIndex].index;\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            let triad = this.m_triadBuffer.data[k];\r\n            let a = triad.indexA;\r\n            let b = triad.indexB;\r\n            let c = triad.indexC;\r\n            if (group.ContainsParticle(a)) {\r\n                triad.indexA = nodeBuffer[a - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(b)) {\r\n                triad.indexB = nodeBuffer[b - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(c)) {\r\n                triad.indexC = nodeBuffer[c - bufferIndex].index;\r\n            }\r\n        }\r\n    }\r\n    ComputeDepth() {\r\n        ///b2ParticleContact* contactGroups = (b2ParticleContact*) this.m_world.m_stackAllocator.Allocate(sizeof(b2ParticleContact) * this.m_contactBuffer.GetCount());\r\n        let contactGroups = []; // TODO: static\r\n        let contactGroupsCount = 0;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let groupA = this.m_groupBuffer[a];\r\n            let groupB = this.m_groupBuffer[b];\r\n            if (groupA && groupA === groupB &&\r\n                (groupA.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth)) {\r\n                contactGroups[contactGroupsCount++] = contact;\r\n            }\r\n        }\r\n        ///b2ParticleGroup** groupsToUpdate = (b2ParticleGroup**) this.m_world.m_stackAllocator.Allocate(sizeof(b2ParticleGroup*) * this.m_groupCount);\r\n        let groupsToUpdate = []; // TODO: static\r\n        let groupsToUpdateCount = 0;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\r\n                groupsToUpdate[groupsToUpdateCount++] = group;\r\n                this.SetGroupFlags(group, group.m_groupFlags &\r\n                    ~b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\r\n                for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                    this.m_accumulationBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        // Compute sum of weight of contacts except between different groups.\r\n        for (let k = 0; k < contactGroupsCount; k++) {\r\n            let contact = contactGroups[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let w = contact.weight;\r\n            this.m_accumulationBuffer[a] += w;\r\n            this.m_accumulationBuffer[b] += w;\r\n        }\r\n        b2Assert(this.m_depthBuffer !== null);\r\n        for (let i = 0; i < groupsToUpdateCount; i++) {\r\n            let group = groupsToUpdate[i];\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                let w = this.m_accumulationBuffer[i];\r\n                this.m_depthBuffer[i] = w < 0.8 ? 0 : b2_maxFloat;\r\n            }\r\n        }\r\n        // The number of iterations is equal to particle number from the deepest\r\n        // particle to the nearest surface particle, and in general it is smaller\r\n        // than sqrt of total particle number.\r\n        ///int32 iterationCount = (int32)b2Sqrt((float)m_count);\r\n        let iterationCount = b2Sqrt(this.m_count) >> 0;\r\n        for (let t = 0; t < iterationCount; t++) {\r\n            let updated = false;\r\n            for (let k = 0; k < contactGroupsCount; k++) {\r\n                let contact = contactGroups[k];\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                let r = 1 - contact.weight;\r\n                ///float32& ap0 = m_depthBuffer[a];\r\n                let ap0 = this.m_depthBuffer[a];\r\n                ///float32& bp0 = m_depthBuffer[b];\r\n                let bp0 = this.m_depthBuffer[b];\r\n                let ap1 = bp0 + r;\r\n                let bp1 = ap0 + r;\r\n                if (ap0 > ap1) {\r\n                    ///ap0 = ap1;\r\n                    this.m_depthBuffer[a] = ap1;\r\n                    updated = true;\r\n                }\r\n                if (bp0 > bp1) {\r\n                    ///bp0 = bp1;\r\n                    this.m_depthBuffer[b] = bp1;\r\n                    updated = true;\r\n                }\r\n            }\r\n            if (!updated) {\r\n                break;\r\n            }\r\n        }\r\n        for (let i = 0; i < groupsToUpdateCount; i++) {\r\n            let group = groupsToUpdate[i];\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                if (this.m_depthBuffer[i] < b2_maxFloat) {\r\n                    this.m_depthBuffer[i] *= this.m_particleDiameter;\r\n                }\r\n                else {\r\n                    this.m_depthBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        ///this.m_world.m_stackAllocator.Free(groupsToUpdate);\r\n        ///this.m_world.m_stackAllocator.Free(contactGroups);\r\n    }\r\n    GetInsideBoundsEnumerator(aabb) {\r\n        let lowerTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x - 1, this.m_inverseDiameter * aabb.lowerBound.y - 1);\r\n        let upperTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x + 1, this.m_inverseDiameter * aabb.upperBound.y + 1);\r\n        ///const Proxy* beginProxy = m_proxyBuffer.Begin();\r\n        let beginProxy = 0;\r\n        ///const Proxy* endProxy = m_proxyBuffer.End();\r\n        let endProxy = this.m_proxyBuffer.count;\r\n        ///const Proxy* firstProxy = std::lower_bound(beginProxy, endProxy, lowerTag);\r\n        let firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, lowerTag, b2ParticleSystem.Proxy.CompareProxyTag);\r\n        ///const Proxy* lastProxy = std::upper_bound(firstProxy, endProxy, upperTag);\r\n        let lastProxy = std_upper_bound(this.m_proxyBuffer.data, beginProxy, endProxy, upperTag, b2ParticleSystem.Proxy.CompareTagProxy);\r\n        b2Assert(beginProxy <= firstProxy);\r\n        b2Assert(firstProxy <= lastProxy);\r\n        b2Assert(lastProxy <= endProxy);\r\n        return new b2ParticleSystem.InsideBoundsEnumerator(this, lowerTag, upperTag, firstProxy, lastProxy);\r\n    }\r\n    UpdateAllParticleFlags() {\r\n        this.m_allParticleFlags = 0;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_allParticleFlags |= this.m_flagsBuffer.data[i];\r\n        }\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n    }\r\n    UpdateAllGroupFlags() {\r\n        this.m_allGroupFlags = 0;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            this.m_allGroupFlags |= group.m_groupFlags;\r\n        }\r\n        this.m_needsUpdateAllGroupFlags = false;\r\n    }\r\n    AddContact(a, b, contacts) {\r\n        let s_d = b2ParticleSystem.AddContact_s_d;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        b2Assert(contacts === this.m_contactBuffer);\r\n        ///b2Vec2 d = m_positionBuffer.data[b] - m_positionBuffer.data[a];\r\n        let d = b2Vec2.SubVV(pos_data[b], pos_data[a], s_d);\r\n        let distBtParticlesSq = b2Vec2.DotVV(d, d);\r\n        if (distBtParticlesSq < this.m_squaredDiameter) {\r\n            let invD = b2InvSqrt(distBtParticlesSq);\r\n            if (!isFinite(invD)) {\r\n                invD = 1.98177537e+019;\r\n            }\r\n            ///b2ParticleContact& contact = contacts.Append();\r\n            let contact = this.m_contactBuffer.data[this.m_contactBuffer.Append()];\r\n            contact.indexA = a;\r\n            contact.indexB = b;\r\n            contact.flags = this.m_flagsBuffer.data[a] | this.m_flagsBuffer.data[b];\r\n            contact.weight = 1 - distBtParticlesSq * invD * this.m_inverseDiameter;\r\n            ///contact.SetNormal(invD * d);\r\n            b2Vec2.MulSV(invD, d, contact.normal);\r\n        }\r\n    }\r\n    FindContacts_Reference(contacts) {\r\n        b2Assert(contacts === this.m_contactBuffer);\r\n        let beginProxy = 0;\r\n        let endProxy = this.m_proxyBuffer.count;\r\n        this.m_contactBuffer.count = 0;\r\n        for (let a = beginProxy, c = beginProxy; a < endProxy; a++) {\r\n            let rightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 0);\r\n            for (let b = a + 1; b < endProxy; b++) {\r\n                if (rightTag < this.m_proxyBuffer.data[b].tag)\r\n                    break;\r\n                this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\r\n            }\r\n            let bottomLeftTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, -1, 1);\r\n            for (; c < endProxy; c++) {\r\n                if (bottomLeftTag <= this.m_proxyBuffer.data[c].tag)\r\n                    break;\r\n            }\r\n            let bottomRightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 1);\r\n            for (let b = c; b < endProxy; b++) {\r\n                if (bottomRightTag < this.m_proxyBuffer.data[b].tag)\r\n                    break;\r\n                this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\r\n            }\r\n        }\r\n    }\r\n    ///void ReorderForFindContact(FindContactInput* reordered, int alignedCount) const;\r\n    ///void GatherChecksOneParticle(const uint32 bound, const int startIndex, const int particleIndex, int* nextUncheckedIndex, b2GrowableBuffer<FindContactCheck>& checks) const;\r\n    ///void GatherChecks(b2GrowableBuffer<FindContactCheck>& checks) const;\r\n    ///void FindContacts_Simd(b2GrowableBuffer<b2ParticleContact>& contacts) const;\r\n    FindContacts(contacts) {\r\n        this.FindContacts_Reference(contacts);\r\n    }\r\n    ///static void UpdateProxyTags(const uint32* const tags, b2GrowableBuffer<Proxy>& proxies);\r\n    ///static bool ProxyBufferHasIndex(int32 index, const Proxy* const a, int count);\r\n    ///static int NumProxiesWithSameTag(const Proxy* const a, const Proxy* const b, int count);\r\n    ///static bool AreProxyBuffersTheSame(const b2GrowableBuffer<Proxy>& a, const b2GrowableBuffer<Proxy>& b);\r\n    UpdateProxies_Reference(proxies) {\r\n        b2Assert(proxies === this.m_proxyBuffer);\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let inv_diam = this.m_inverseDiameter;\r\n        for (let k = 0; k < this.m_proxyBuffer.count; ++k) {\r\n            let proxy = this.m_proxyBuffer.data[k];\r\n            let i = proxy.index;\r\n            let p = pos_data[i];\r\n            proxy.tag = b2ParticleSystem.computeTag(inv_diam * p.x, inv_diam * p.y);\r\n        }\r\n    }\r\n    ///void UpdateProxies_Simd(b2GrowableBuffer<Proxy>& proxies) const;\r\n    UpdateProxies(proxies) {\r\n        this.UpdateProxies_Reference(proxies);\r\n    }\r\n    SortProxies(proxies) {\r\n        b2Assert(proxies === this.m_proxyBuffer);\r\n        ///std::sort(proxies.Begin(), proxies.End());\r\n        std_sort(this.m_proxyBuffer.data, 0, this.m_proxyBuffer.count, b2ParticleSystem.Proxy.CompareProxyProxy);\r\n    }\r\n    FilterContacts(contacts) {\r\n        // Optionally filter the contact.\r\n        let contactFilter = this.GetParticleContactFilter();\r\n        if (contactFilter === null)\r\n            return;\r\n        /// contacts.RemoveIf(b2ParticleContactRemovePredicate(this, contactFilter));\r\n        b2Assert(contacts === this.m_contactBuffer);\r\n        const system = this;\r\n        let predicate = (contact) => {\r\n            return (contact.flags & b2ParticleFlag.b2_particleContactFilterParticle) && !contactFilter.ShouldCollideParticleParticle(system, contact.indexA, contact.indexB);\r\n        };\r\n        this.m_contactBuffer.RemoveIf(predicate);\r\n    }\r\n    NotifyContactListenerPreContact(particlePairs) {\r\n        let contactListener = this.GetParticleContactListener();\r\n        if (contactListener === null)\r\n            return;\r\n        ///particlePairs.Initialize(m_contactBuffer.Begin(), m_contactBuffer.GetCount(), GetFlagsBuffer());\r\n        particlePairs.Initialize(this.m_contactBuffer, this.m_flagsBuffer);\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    NotifyContactListenerPostContact(particlePairs) {\r\n        let contactListener = this.GetParticleContactListener();\r\n        if (contactListener === null)\r\n            return;\r\n        // Loop through all new contacts, reporting any new ones, and\r\n        // \"invalidating\" the ones that still exist.\r\n        ///const b2ParticleContact* const endContact = m_contactBuffer.End();\r\n        ///for (b2ParticleContact* contact = m_contactBuffer.Begin(); contact < endContact; ++contact)\r\n        for (let k = 0; k < this.m_contactBuffer.count; ++k) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            ///ParticlePair pair;\r\n            ///pair.first = contact.GetIndexA();\r\n            ///pair.second = contact.GetIndexB();\r\n            ///const int32 itemIndex = particlePairs.Find(pair);\r\n            let itemIndex = -1; // TODO\r\n            if (itemIndex >= 0) {\r\n                // Already touching, ignore this contact.\r\n                particlePairs.Invalidate(itemIndex);\r\n            }\r\n            else {\r\n                // Just started touching, inform the listener.\r\n                contactListener.BeginContactParticleParticle(this, contact);\r\n            }\r\n        }\r\n        // Report particles that are no longer touching.\r\n        // That is, any pairs that were not invalidated above.\r\n        ///const int32 pairCount = particlePairs.GetCount();\r\n        ///const ParticlePair* const pairs = particlePairs.GetBuffer();\r\n        ///const int8* const valid = particlePairs.GetValidBuffer();\r\n        ///for (int32 i = 0; i < pairCount; ++i)\r\n        ///{\r\n        ///  if (valid[i])\r\n        ///  {\r\n        ///    contactListener.EndContactParticleParticle(this, pairs[i].first, pairs[i].second);\r\n        ///  }\r\n        ///}\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    static b2ParticleContactIsZombie(contact) {\r\n        return (contact.flags & b2ParticleFlag.b2_zombieParticle) === b2ParticleFlag.b2_zombieParticle;\r\n    }\r\n    UpdateContacts(exceptZombie) {\r\n        this.UpdateProxies(this.m_proxyBuffer);\r\n        this.SortProxies(this.m_proxyBuffer);\r\n        ///b2ParticlePairSet particlePairs(&this.m_world.m_stackAllocator);\r\n        let particlePairs = new b2ParticleSystem.b2ParticlePairSet(); // TODO: static\r\n        this.NotifyContactListenerPreContact(particlePairs);\r\n        this.FindContacts(this.m_contactBuffer);\r\n        this.FilterContacts(this.m_contactBuffer);\r\n        this.NotifyContactListenerPostContact(particlePairs);\r\n        if (exceptZombie) {\r\n            this.m_contactBuffer.RemoveIf(b2ParticleSystem.b2ParticleContactIsZombie);\r\n        }\r\n    }\r\n    NotifyBodyContactListenerPreContact(fixtureSet) {\r\n        let contactListener = this.GetFixtureContactListener();\r\n        if (contactListener === null)\r\n            return;\r\n        ///fixtureSet.Initialize(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.GetCount(), GetFlagsBuffer());\r\n        fixtureSet.Initialize(this.m_bodyContactBuffer, this.m_flagsBuffer);\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    NotifyBodyContactListenerPostContact(fixtureSet) {\r\n        let contactListener = this.GetFixtureContactListener();\r\n        if (contactListener === null)\r\n            return;\r\n        // Loop through all new contacts, reporting any new ones, and\r\n        // \"invalidating\" the ones that still exist.\r\n        ///for (b2ParticleBodyContact* contact = m_bodyContactBuffer.Begin(); contact !== m_bodyContactBuffer.End(); ++contact)\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            b2Assert(contact !== null);\r\n            ///FixtureParticle fixtureParticleToFind;\r\n            ///fixtureParticleToFind.first = contact.fixture;\r\n            ///fixtureParticleToFind.second = contact.index;\r\n            ///const int32 index = fixtureSet.Find(fixtureParticleToFind);\r\n            let index = -1; // TODO\r\n            if (index >= 0) {\r\n                // Already touching remove this from the set.\r\n                fixtureSet.Invalidate(index);\r\n            }\r\n            else {\r\n                // Just started touching, report it!\r\n                contactListener.BeginContactFixtureParticle(this, contact);\r\n            }\r\n        }\r\n        // If the contact listener is enabled, report all fixtures that are no\r\n        // longer in contact with particles.\r\n        ///const FixtureParticle* const fixtureParticles = fixtureSet.GetBuffer();\r\n        ///const int8* const fixtureParticlesValid = fixtureSet.GetValidBuffer();\r\n        ///const int32 fixtureParticleCount = fixtureSet.GetCount();\r\n        ///for (int32 i = 0; i < fixtureParticleCount; ++i)\r\n        ///{\r\n        ///  if (fixtureParticlesValid[i])\r\n        ///  {\r\n        ///    const FixtureParticle* const fixtureParticle = &fixtureParticles[i];\r\n        ///    contactListener.EndContactFixtureParticle(fixtureParticle.first, this, fixtureParticle.second);\r\n        ///  }\r\n        ///}\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    UpdateBodyContacts() {\r\n        let s_aabb = b2ParticleSystem.UpdateBodyContacts_s_aabb;\r\n        // If the particle contact listener is enabled, generate a set of\r\n        // fixture / particle contacts.\r\n        ///FixtureParticleSet fixtureSet(&m_world.m_stackAllocator);\r\n        let fixtureSet = new b2ParticleSystem.FixtureParticleSet(); // TODO: static\r\n        this.NotifyBodyContactListenerPreContact(fixtureSet);\r\n        if (this.m_stuckThreshold > 0) {\r\n            let particleCount = this.GetParticleCount();\r\n            for (let i = 0; i < particleCount; i++) {\r\n                // Detect stuck particles, see comment in\r\n                // b2ParticleSystem::DetectStuckParticle()\r\n                this.m_bodyContactCountBuffer.data[i] = 0;\r\n                if (this.m_timestamp > (this.m_lastBodyContactStepBuffer.data[i] + 1)) {\r\n                    this.m_consecutiveContactStepsBuffer.data[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        this.m_bodyContactBuffer.SetCount(0);\r\n        this.m_stuckParticleBuffer.SetCount(0);\r\n        let aabb = s_aabb;\r\n        this.ComputeAABB(aabb);\r\n        let callback = new b2ParticleSystem.UpdateBodyContactsCallback(this, this.GetFixtureContactFilter());\r\n        this.m_world.QueryAABB(callback, aabb);\r\n        if (this.m_def.strictContactCheck) {\r\n            this.RemoveSpuriousBodyContacts();\r\n        }\r\n        this.NotifyBodyContactListenerPostContact(fixtureSet);\r\n    }\r\n    Solve(step) {\r\n        let s_subStep = b2ParticleSystem.Solve_s_subStep;\r\n        if (this.m_count === 0) {\r\n            return;\r\n        }\r\n        // If particle lifetimes are enabled, destroy particles that are too old.\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            this.SolveLifetimes(step);\r\n        }\r\n        if (this.m_allParticleFlags & b2ParticleFlag.b2_zombieParticle) {\r\n            this.SolveZombie();\r\n        }\r\n        if (this.m_needsUpdateAllParticleFlags) {\r\n            this.UpdateAllParticleFlags();\r\n        }\r\n        if (this.m_needsUpdateAllGroupFlags) {\r\n            this.UpdateAllGroupFlags();\r\n        }\r\n        if (this.m_paused) {\r\n            return;\r\n        }\r\n        for (this.m_iterationIndex = 0; this.m_iterationIndex < step.particleIterations; this.m_iterationIndex++) {\r\n            ++this.m_timestamp;\r\n            let subStep = s_subStep.Copy(step);\r\n            subStep.dt /= step.particleIterations;\r\n            subStep.inv_dt *= step.particleIterations;\r\n            this.UpdateContacts(false);\r\n            this.UpdateBodyContacts();\r\n            this.ComputeWeight();\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\r\n                this.ComputeDepth();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_reactiveParticle) {\r\n                this.UpdatePairsAndTriadsWithReactiveParticles();\r\n            }\r\n            if (this.m_hasForce) {\r\n                this.SolveForce(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_viscousParticle) {\r\n                this.SolveViscous();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_repulsiveParticle) {\r\n                this.SolveRepulsive(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_powderParticle) {\r\n                this.SolvePowder(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_tensileParticle) {\r\n                this.SolveTensile(subStep);\r\n            }\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                this.SolveSolid(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_colorMixingParticle) {\r\n                this.SolveColorMixing();\r\n            }\r\n            this.SolveGravity(subStep);\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_staticPressureParticle) {\r\n                this.SolveStaticPressure(subStep);\r\n            }\r\n            this.SolvePressure(subStep);\r\n            this.SolveDamping(subStep);\r\n            if (this.m_allParticleFlags & b2ParticleSystem.k_extraDampingFlags) {\r\n                this.SolveExtraDamping();\r\n            }\r\n            // SolveElastic and SolveSpring refer the current velocities for\r\n            // numerical stability, they should be called as late as possible.\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_elasticParticle) {\r\n                this.SolveElastic(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_springParticle) {\r\n                this.SolveSpring(subStep);\r\n            }\r\n            this.LimitVelocity(subStep);\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                this.SolveRigidDamping();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_barrierParticle) {\r\n                this.SolveBarrier(subStep);\r\n            }\r\n            // SolveCollision, SolveRigid and SolveWall should be called after\r\n            // other force functions because they may require particles to have\r\n            // specific velocities.\r\n            this.SolveCollision(subStep);\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                this.SolveRigid(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_wallParticle) {\r\n                this.SolveWall();\r\n            }\r\n            // The particle positions can be updated only at the end of substep.\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                ///m_positionBuffer.data[i] += subStep.dt * m_velocityBuffer.data[i];\r\n                this.m_positionBuffer.data[i].SelfMulAdd(subStep.dt, this.m_velocityBuffer.data[i]);\r\n            }\r\n        }\r\n    }\r\n    SolveCollision(step) {\r\n        let s_aabb = b2ParticleSystem.SolveCollision_s_aabb;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // This function detects particles which are crossing boundary of bodies\r\n        // and modifies velocities of them so that they will move just in front of\r\n        // boundary. This function function also applies the reaction force to\r\n        // bodies as precisely as the numerical stability is kept.\r\n        let aabb = s_aabb;\r\n        aabb.lowerBound.x = +b2_maxFloat;\r\n        aabb.lowerBound.y = +b2_maxFloat;\r\n        aabb.upperBound.x = -b2_maxFloat;\r\n        aabb.upperBound.y = -b2_maxFloat;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            let v = vel_data[i];\r\n            let p1 = pos_data[i];\r\n            ///let p2 = p1 + step.dt * v;\r\n            let p2_x = p1.x + step.dt * v.x;\r\n            let p2_y = p1.y + step.dt * v.y;\r\n            ///aabb.lowerBound = b2Min(aabb.lowerBound, b2Min(p1, p2));\r\n            aabb.lowerBound.x = b2Min(aabb.lowerBound.x, b2Min(p1.x, p2_x));\r\n            aabb.lowerBound.y = b2Min(aabb.lowerBound.y, b2Min(p1.y, p2_y));\r\n            ///aabb.upperBound = b2Max(aabb.upperBound, b2Max(p1, p2));\r\n            aabb.upperBound.x = b2Max(aabb.upperBound.x, b2Max(p1.x, p2_x));\r\n            aabb.upperBound.y = b2Max(aabb.upperBound.y, b2Max(p1.y, p2_y));\r\n        }\r\n        let callback = new b2ParticleSystem.SolveCollisionCallback(this, step);\r\n        this.m_world.QueryAABB(callback, aabb);\r\n    }\r\n    LimitVelocity(step) {\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let criticalVelocitySquared = this.GetCriticalVelocitySquared(step);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            let v = vel_data[i];\r\n            let v2 = b2Vec2.DotVV(v, v);\r\n            if (v2 > criticalVelocitySquared) {\r\n                ///v *= b2Sqrt(criticalVelocitySquared / v2);\r\n                v.SelfMul(b2Sqrt(criticalVelocitySquared / v2));\r\n            }\r\n        }\r\n    }\r\n    SolveGravity(step) {\r\n        let s_gravity = b2ParticleSystem.SolveGravity_s_gravity;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        ///b2Vec2 gravity = step.dt * m_def.gravityScale * m_world.GetGravity();\r\n        let gravity = b2Vec2.MulSV(step.dt * this.m_def.gravityScale, this.m_world.GetGravity(), s_gravity);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            vel_data[i].SelfAdd(gravity);\r\n        }\r\n    }\r\n    SolveBarrier(step) {\r\n        let s_aabb = b2ParticleSystem.SolveBarrier_s_aabb;\r\n        let s_va = b2ParticleSystem.SolveBarrier_s_va;\r\n        let s_vb = b2ParticleSystem.SolveBarrier_s_vb;\r\n        let s_pba = b2ParticleSystem.SolveBarrier_s_pba;\r\n        let s_vba = b2ParticleSystem.SolveBarrier_s_vba;\r\n        let s_vc = b2ParticleSystem.SolveBarrier_s_vc;\r\n        let s_pca = b2ParticleSystem.SolveBarrier_s_pca;\r\n        let s_vca = b2ParticleSystem.SolveBarrier_s_vca;\r\n        let s_qba = b2ParticleSystem.SolveBarrier_s_qba;\r\n        let s_qca = b2ParticleSystem.SolveBarrier_s_qca;\r\n        let s_dv = b2ParticleSystem.SolveBarrier_s_dv;\r\n        let s_f = b2ParticleSystem.SolveBarrier_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // If a particle is passing between paired barrier particles,\r\n        // its velocity will be decelerated to avoid passing.\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            let flags = this.m_flagsBuffer.data[i];\r\n            ///if ((flags & b2ParticleSystem.k_barrierWallFlags) === b2ParticleSystem.k_barrierWallFlags)\r\n            if ((flags & b2ParticleSystem.k_barrierWallFlags) !== 0) {\r\n                vel_data[i].SetZero();\r\n            }\r\n        }\r\n        let tmax = b2_barrierCollisionTime * step.dt;\r\n        let mass = this.GetParticleMass();\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            let pair = this.m_pairBuffer.data[k];\r\n            if (pair.flags & b2ParticleFlag.b2_barrierParticle) {\r\n                let a = pair.indexA;\r\n                let b = pair.indexB;\r\n                let pa = pos_data[a];\r\n                let pb = pos_data[b];\r\n                /// b2AABB aabb;\r\n                let aabb = s_aabb;\r\n                ///aabb.lowerBound = b2Min(pa, pb);\r\n                b2Vec2.MinV(pa, pb, aabb.lowerBound);\r\n                ///aabb.upperBound = b2Max(pa, pb);\r\n                b2Vec2.MaxV(pa, pb, aabb.upperBound);\r\n                let aGroup = this.m_groupBuffer[a];\r\n                let bGroup = this.m_groupBuffer[b];\r\n                ///b2Vec2 va = GetLinearVelocity(aGroup, a, pa);\r\n                let va = this.GetLinearVelocity(aGroup, a, pa, s_va);\r\n                ///b2Vec2 vb = GetLinearVelocity(bGroup, b, pb);\r\n                let vb = this.GetLinearVelocity(bGroup, b, pb, s_vb);\r\n                ///b2Vec2 pba = pb - pa;\r\n                let pba = b2Vec2.SubVV(pb, pa, s_pba);\r\n                ///b2Vec2 vba = vb - va;\r\n                let vba = b2Vec2.SubVV(vb, va, s_vba);\r\n                ///InsideBoundsEnumerator enumerator = GetInsideBoundsEnumerator(aabb);\r\n                let enumerator = this.GetInsideBoundsEnumerator(aabb);\r\n                let c;\r\n                while ((c = enumerator.GetNext()) >= 0) {\r\n                    let pc = pos_data[c];\r\n                    let cGroup = this.m_groupBuffer[c];\r\n                    if (aGroup !== cGroup && bGroup !== cGroup) {\r\n                        ///b2Vec2 vc = GetLinearVelocity(cGroup, c, pc);\r\n                        let vc = this.GetLinearVelocity(cGroup, c, pc, s_vc);\r\n                        // Solve the equation below:\r\n                        //   (1-s)*(pa+t*va)+s*(pb+t*vb) = pc+t*vc\r\n                        // which expresses that the particle c will pass a line\r\n                        // connecting the particles a and b at the time of t.\r\n                        // if s is between 0 and 1, c will pass between a and b.\r\n                        ///b2Vec2 pca = pc - pa;\r\n                        let pca = b2Vec2.SubVV(pc, pa, s_pca);\r\n                        ///b2Vec2 vca = vc - va;\r\n                        let vca = b2Vec2.SubVV(vc, va, s_vca);\r\n                        let e2 = b2Vec2.CrossVV(vba, vca);\r\n                        let e1 = b2Vec2.CrossVV(pba, vca) - b2Vec2.CrossVV(pca, vba);\r\n                        let e0 = b2Vec2.CrossVV(pba, pca);\r\n                        let s, t;\r\n                        ///b2Vec2 qba, qca;\r\n                        let qba = s_qba, qca = s_qca;\r\n                        if (e2 === 0) {\r\n                            if (e1 === 0)\r\n                                continue;\r\n                            t = -e0 / e1;\r\n                            if (!(t >= 0 && t < tmax))\r\n                                continue;\r\n                            ///qba = pba + t * vba;\r\n                            b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                            ///qca = pca + t * vca;\r\n                            b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                            s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                            if (!(s >= 0 && s <= 1))\r\n                                continue;\r\n                        }\r\n                        else {\r\n                            let det = e1 * e1 - 4 * e0 * e2;\r\n                            if (det < 0)\r\n                                continue;\r\n                            let sqrtDet = b2Sqrt(det);\r\n                            let t1 = (-e1 - sqrtDet) / (2 * e2);\r\n                            let t2 = (-e1 + sqrtDet) / (2 * e2);\r\n                            ///if (t1 > t2) b2Swap(t1, t2);\r\n                            if (t1 > t2) {\r\n                                let tmp = t1;\r\n                                t1 = t2;\r\n                                t2 = tmp;\r\n                            }\r\n                            t = t1;\r\n                            ///qba = pba + t * vba;\r\n                            b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                            ///qca = pca + t * vca;\r\n                            b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                            ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\r\n                            s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                            if (!(t >= 0 && t < tmax && s >= 0 && s <= 1)) {\r\n                                t = t2;\r\n                                if (!(t >= 0 && t < tmax))\r\n                                    continue;\r\n                                ///qba = pba + t * vba;\r\n                                b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                                ///qca = pca + t * vca;\r\n                                b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                                ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\r\n                                s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                                if (!(s >= 0 && s <= 1))\r\n                                    continue;\r\n                            }\r\n                        }\r\n                        // Apply a force to particle c so that it will have the\r\n                        // interpolated velocity at the collision point on line ab.\r\n                        ///b2Vec2 dv = va + s * vba - vc;\r\n                        let dv = s_dv;\r\n                        dv.x = va.x + s * vba.x - vc.x;\r\n                        dv.y = va.y + s * vba.y - vc.y;\r\n                        ///b2Vec2 f = GetParticleMass() * dv;\r\n                        let f = b2Vec2.MulSV(mass, dv, s_f);\r\n                        if (this.IsRigidGroup(cGroup)) {\r\n                            // If c belongs to a rigid group, the force will be\r\n                            // distributed in the group.\r\n                            let mass = cGroup.GetMass();\r\n                            let inertia = cGroup.GetInertia();\r\n                            if (mass > 0) {\r\n                                ///cGroup.m_linearVelocity += 1 / mass * f;\r\n                                cGroup.m_linearVelocity.SelfMulAdd(1 / mass, f);\r\n                            }\r\n                            if (inertia > 0) {\r\n                                ///cGroup.m_angularVelocity += b2Cross(pc - cGroup.GetCenter(), f) / inertia;\r\n                                cGroup.m_angularVelocity += b2Vec2.CrossVV(b2Vec2.SubVV(pc, cGroup.GetCenter(), b2Vec2.s_t0), f) / inertia;\r\n                            }\r\n                        }\r\n                        else {\r\n                            ///m_velocityBuffer.data[c] += dv;\r\n                            vel_data[c].SelfAdd(dv);\r\n                        }\r\n                        // Apply a reversed force to particle c after particle\r\n                        // movement so that momentum will be preserved.\r\n                        ///ParticleApplyForce(c, -step.inv_dt * f);\r\n                        this.ParticleApplyForce(c, f.SelfMul(-step.inv_dt));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveStaticPressure(step) {\r\n        this.m_staticPressureBuffer = this.RequestBuffer(this.m_staticPressureBuffer);\r\n        let criticalPressure = this.GetCriticalPressure(step);\r\n        let pressurePerWeight = this.m_def.staticPressureStrength * criticalPressure;\r\n        let maxPressure = b2_maxParticlePressure * criticalPressure;\r\n        let relaxation = this.m_def.staticPressureRelaxation;\r\n        /// Compute pressure satisfying the modified Poisson equation:\r\n        ///   Sum_for_j((p_i - p_j) * w_ij) + relaxation * p_i =\r\n        ///   pressurePerWeight * (w_i - b2_minParticleWeight)\r\n        /// by iterating the calculation:\r\n        ///   p_i = (Sum_for_j(p_j * w_ij) + pressurePerWeight *\r\n        ///         (w_i - b2_minParticleWeight)) / (w_i + relaxation)\r\n        /// where\r\n        ///   p_i and p_j are static pressure of particle i and j\r\n        ///   w_ij is contact weight between particle i and j\r\n        ///   w_i is sum of contact weight of particle i\r\n        for (let t = 0; t < this.m_def.staticPressureIterations; t++) {\r\n            ///memset(m_accumulationBuffer, 0, sizeof(*m_accumulationBuffer) * m_count);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                this.m_accumulationBuffer[i] = 0;\r\n            }\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                let contact = this.m_contactBuffer.data[k];\r\n                if (contact.flags & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    let a = contact.indexA;\r\n                    let b = contact.indexB;\r\n                    let w = contact.weight;\r\n                    this.m_accumulationBuffer[a] += w * this.m_staticPressureBuffer[b]; // a <- b\r\n                    this.m_accumulationBuffer[b] += w * this.m_staticPressureBuffer[a]; // b <- a\r\n                }\r\n            }\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                let w = this.m_weightBuffer[i];\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    let wh = this.m_accumulationBuffer[i];\r\n                    let h = (wh + pressurePerWeight * (w - b2_minParticleWeight)) /\r\n                        (w + relaxation);\r\n                    this.m_staticPressureBuffer[i] = b2Clamp(h, 0.0, maxPressure);\r\n                }\r\n                else {\r\n                    this.m_staticPressureBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ComputeWeight() {\r\n        // calculates the sum of contact-weights for each particle\r\n        // that means dimensionless density\r\n        ///memset(m_weightBuffer, 0, sizeof(*m_weightBuffer) * m_count);\r\n        for (let k = 0; k < this.m_count; k++) {\r\n            this.m_weightBuffer[k] = 0;\r\n        }\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            let w = contact.weight;\r\n            this.m_weightBuffer[a] += w;\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let w = contact.weight;\r\n            this.m_weightBuffer[a] += w;\r\n            this.m_weightBuffer[b] += w;\r\n        }\r\n    }\r\n    SolvePressure(step) {\r\n        let s_f = b2ParticleSystem.SolvePressure_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // calculates pressure as a linear function of density\r\n        let criticalPressure = this.GetCriticalPressure(step);\r\n        let pressurePerWeight = this.m_def.pressureStrength * criticalPressure;\r\n        let maxPressure = b2_maxParticlePressure * criticalPressure;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            let w = this.m_weightBuffer[i];\r\n            let h = pressurePerWeight * b2Max(0.0, w - b2_minParticleWeight);\r\n            this.m_accumulationBuffer[i] = b2Min(h, maxPressure);\r\n        }\r\n        // ignores particles which have their own repulsive force\r\n        if (this.m_allParticleFlags & b2ParticleSystem.k_noPressureFlags) {\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleSystem.k_noPressureFlags) {\r\n                    this.m_accumulationBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        // static pressure\r\n        if (this.m_allParticleFlags & b2ParticleFlag.b2_staticPressureParticle) {\r\n            b2Assert(this.m_staticPressureBuffer !== null);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    this.m_accumulationBuffer[i] += this.m_staticPressureBuffer[i];\r\n                }\r\n            }\r\n        }\r\n        // applies pressure between each particles in contact\r\n        let velocityPerPressure = step.dt / (this.m_def.density * this.m_particleDiameter);\r\n        let inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            let b = contact.body;\r\n            let w = contact.weight;\r\n            let m = contact.mass;\r\n            let n = contact.normal;\r\n            let p = pos_data[a];\r\n            let h = this.m_accumulationBuffer[a] + pressurePerWeight * w;\r\n            ///b2Vec2 f = velocityPerPressure * w * m * h * n;\r\n            let f = b2Vec2.MulSV(velocityPerPressure * w * m * h, n, s_f);\r\n            ///m_velocityBuffer.data[a] -= GetParticleInvMass() * f;\r\n            vel_data[a].SelfMulSub(inv_mass, f);\r\n            b.ApplyLinearImpulse(f, p, true);\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let w = contact.weight;\r\n            let n = contact.normal;\r\n            let h = this.m_accumulationBuffer[a] + this.m_accumulationBuffer[b];\r\n            ///b2Vec2 f = velocityPerPressure * w * h * n;\r\n            let f = b2Vec2.MulSV(velocityPerPressure * w * h, n, s_f);\r\n            ///m_velocityBuffer.data[a] -= f;\r\n            vel_data[a].SelfSub(f);\r\n            ///m_velocityBuffer.data[b] += f;\r\n            vel_data[b].SelfAdd(f);\r\n        }\r\n    }\r\n    SolveDamping(step) {\r\n        let s_v = b2ParticleSystem.SolveDamping_s_v;\r\n        let s_f = b2ParticleSystem.SolveDamping_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // reduces normal velocity of each contact\r\n        let linearDamping = this.m_def.dampingStrength;\r\n        let quadraticDamping = 1 / this.GetCriticalVelocity(step);\r\n        let inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            let b = contact.body;\r\n            let w = contact.weight;\r\n            let m = contact.mass;\r\n            let n = contact.normal;\r\n            let p = pos_data[a];\r\n            ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n            let v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n            let vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                let damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\r\n                ///b2Vec2 f = damping * m * vn * n;\r\n                let f = b2Vec2.MulSV(damping * m * vn, n, s_f);\r\n                ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                vel_data[a].SelfMulAdd(inv_mass, f);\r\n                ///b.ApplyLinearImpulse(-f, p, true);\r\n                b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let w = contact.weight;\r\n            let n = contact.normal;\r\n            ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n            let v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n            let vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                ///float32 damping = b2Max(linearDamping * w, b2Min(- quadraticDamping * vn, 0.5f));\r\n                let damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\r\n                ///b2Vec2 f = damping * vn * n;\r\n                let f = b2Vec2.MulSV(damping * vn, n, s_f);\r\n                ///this.m_velocityBuffer.data[a] += f;\r\n                vel_data[a].SelfAdd(f);\r\n                ///this.m_velocityBuffer.data[b] -= f;\r\n                vel_data[b].SelfSub(f);\r\n            }\r\n        }\r\n    }\r\n    SolveRigidDamping() {\r\n        let s_t0 = b2ParticleSystem.SolveRigidDamping_s_t0;\r\n        let s_t1 = b2ParticleSystem.SolveRigidDamping_s_t1;\r\n        let s_p = b2ParticleSystem.SolveRigidDamping_s_p;\r\n        let s_v = b2ParticleSystem.SolveRigidDamping_s_v;\r\n        let invMassA = [0.0], invInertiaA = [0.0], tangentDistanceA = [0.0]; // TODO: static\r\n        let invMassB = [0.0], invInertiaB = [0.0], tangentDistanceB = [0.0]; // TODO: static\r\n        // Apply impulse to rigid particle groups colliding with other objects\r\n        // to reduce relative velocity at the colliding point.\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let damping = this.m_def.dampingStrength;\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            let aGroup = this.m_groupBuffer[a];\r\n            if (this.IsRigidGroup(aGroup)) {\r\n                let b = contact.body;\r\n                let n = contact.normal;\r\n                let w = contact.weight;\r\n                let p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - aGroup.GetLinearVelocityFromWorldPoint(p);\r\n                let v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, s_t0), aGroup.GetLinearVelocityFromWorldPoint(p, s_t1), s_v);\r\n                let vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    // The group's average velocity at particle position 'p' is pushing\r\n                    // the particle into the body.\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, true, aGroup, a, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, p, n);\r\n                    // Calculate b.m_I from public functions of b2Body.\r\n                    ///this.InitDampingParameter(&invMassB, &invInertiaB, &tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\r\n                    this.InitDampingParameter(invMassB, invInertiaB, tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\r\n                    ///float32 f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\r\n                    let f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\r\n                    ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, f, n);\r\n                    this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], true, aGroup, a, f, n);\r\n                    ///b.ApplyLinearImpulse(-f * n, p, true);\r\n                    b.ApplyLinearImpulse(b2Vec2.MulSV(-f, n, b2Vec2.s_t0), p, true);\r\n                }\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let n = contact.normal;\r\n            let w = contact.weight;\r\n            let aGroup = this.m_groupBuffer[a];\r\n            let bGroup = this.m_groupBuffer[b];\r\n            let aRigid = this.IsRigidGroup(aGroup);\r\n            let bRigid = this.IsRigidGroup(bGroup);\r\n            if (aGroup !== bGroup && (aRigid || bRigid)) {\r\n                ///b2Vec2 p = 0.5f * (this.m_positionBuffer.data[a] + this.m_positionBuffer.data[b]);\r\n                let p = b2Vec2.MidVV(pos_data[a], pos_data[b], s_p);\r\n                ///b2Vec2 v = GetLinearVelocity(bGroup, b, p) - GetLinearVelocity(aGroup, a, p);\r\n                let v = b2Vec2.SubVV(this.GetLinearVelocity(bGroup, b, p, s_t0), this.GetLinearVelocity(aGroup, a, p, s_t1), s_v);\r\n                let vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, aRigid, aGroup, a, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, p, n);\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassB, &invInertiaB, &tangentDistanceB, bRigid, bGroup, b, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, p, n);\r\n                    ///float32 f = damping * w * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\r\n                    let f = damping * w * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\r\n                    ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, f, n);\r\n                    this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], aRigid, aGroup, a, f, n);\r\n                    ///this.ApplyDamping(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, -f, n);\r\n                    this.ApplyDamping(invMassB[0], invInertiaB[0], tangentDistanceB[0], bRigid, bGroup, b, -f, n);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveExtraDamping() {\r\n        let s_v = b2ParticleSystem.SolveExtraDamping_s_v;\r\n        let s_f = b2ParticleSystem.SolveExtraDamping_s_f;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // Applies additional damping force between bodies and particles which can\r\n        // produce strong repulsive force. Applying damping force multiple times\r\n        // is effective in suppressing vibration.\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleSystem.k_extraDampingFlags) {\r\n                let b = contact.body;\r\n                let m = contact.mass;\r\n                let n = contact.normal;\r\n                let p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n                let v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n                ///float32 vn = b2Dot(v, n);\r\n                let vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    ///b2Vec2 f = 0.5f * m * vn * n;\r\n                    let f = b2Vec2.MulSV(0.5 * m * vn, n, s_f);\r\n                    ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                    vel_data[a].SelfMulAdd(inv_mass, f);\r\n                    ///b.ApplyLinearImpulse(-f, p, true);\r\n                    b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveWall() {\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_wallParticle) {\r\n                vel_data[i].SetZero();\r\n            }\r\n        }\r\n    }\r\n    SolveRigid(step) {\r\n        let s_position = b2ParticleSystem.SolveRigid_s_position;\r\n        let s_rotation = b2ParticleSystem.SolveRigid_s_rotation;\r\n        let s_transform = b2ParticleSystem.SolveRigid_s_transform;\r\n        let s_velocityTransform = b2ParticleSystem.SolveRigid_s_velocityTransform;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                group.UpdateStatistics();\r\n                ///b2Rot rotation(step.dt * group.m_angularVelocity);\r\n                let rotation = s_rotation;\r\n                rotation.SetAngle(step.dt * group.m_angularVelocity);\r\n                ///b2Transform transform(group.m_center + step.dt * group.m_linearVelocity - b2Mul(rotation, group.m_center), rotation);\r\n                let position = b2Vec2.AddVV(group.m_center, b2Vec2.SubVV(b2Vec2.MulSV(step.dt, group.m_linearVelocity, b2Vec2.s_t0), b2Rot.MulRV(rotation, group.m_center, b2Vec2.s_t1), b2Vec2.s_t0), s_position);\r\n                let transform = s_transform;\r\n                transform.SetPositionRotation(position, rotation);\r\n                ///group.m_transform = b2Mul(transform, group.m_transform);\r\n                b2Transform.MulXX(transform, group.m_transform, group.m_transform);\r\n                let velocityTransform = s_velocityTransform;\r\n                velocityTransform.p.x = step.inv_dt * transform.p.x;\r\n                velocityTransform.p.y = step.inv_dt * transform.p.y;\r\n                velocityTransform.q.s = step.inv_dt * transform.q.s;\r\n                velocityTransform.q.c = step.inv_dt * (transform.q.c - 1);\r\n                for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                    ///m_velocityBuffer.data[i] = b2Mul(velocityTransform, m_positionBuffer.data[i]);\r\n                    b2Transform.MulXV(velocityTransform, pos_data[i], vel_data[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveElastic(step) {\r\n        let s_pa = b2ParticleSystem.SolveElastic_s_pa;\r\n        let s_pb = b2ParticleSystem.SolveElastic_s_pb;\r\n        let s_pc = b2ParticleSystem.SolveElastic_s_pc;\r\n        let s_r = b2ParticleSystem.SolveElastic_s_r;\r\n        let s_t0 = b2ParticleSystem.SolveElastic_s_t0;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let elasticStrength = step.inv_dt * this.m_def.elasticStrength;\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            let triad = this.m_triadBuffer.data[k];\r\n            if (triad.flags & b2ParticleFlag.b2_elasticParticle) {\r\n                let a = triad.indexA;\r\n                let b = triad.indexB;\r\n                let c = triad.indexC;\r\n                let oa = triad.pa;\r\n                let ob = triad.pb;\r\n                let oc = triad.pc;\r\n                ///b2Vec2 pa = m_positionBuffer.data[a];\r\n                let pa = s_pa.Copy(pos_data[a]);\r\n                ///b2Vec2 pb = m_positionBuffer.data[b];\r\n                let pb = s_pb.Copy(pos_data[b]);\r\n                ///b2Vec2 pc = m_positionBuffer.data[c];\r\n                let pc = s_pc.Copy(pos_data[c]);\r\n                let va = vel_data[a];\r\n                let vb = vel_data[b];\r\n                let vc = vel_data[c];\r\n                ///pa += step.dt * va;\r\n                pa.SelfMulAdd(step.dt, va);\r\n                ///pb += step.dt * vb;\r\n                pb.SelfMulAdd(step.dt, vb);\r\n                ///pc += step.dt * vc;\r\n                pc.SelfMulAdd(step.dt, vc);\r\n                ///b2Vec2 midPoint = (float32) 1 / 3 * (pa + pb + pc);\r\n                let midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\r\n                let midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\r\n                ///pa -= midPoint;\r\n                pa.x -= midPoint_x;\r\n                pa.y -= midPoint_y;\r\n                ///pb -= midPoint;\r\n                pb.x -= midPoint_x;\r\n                pb.y -= midPoint_y;\r\n                ///pc -= midPoint;\r\n                pc.x -= midPoint_x;\r\n                pc.y -= midPoint_y;\r\n                ///b2Rot r;\r\n                let r = s_r;\r\n                r.s = b2Vec2.CrossVV(oa, pa) + b2Vec2.CrossVV(ob, pb) + b2Vec2.CrossVV(oc, pc);\r\n                r.c = b2Vec2.DotVV(oa, pa) + b2Vec2.DotVV(ob, pb) + b2Vec2.DotVV(oc, pc);\r\n                let r2 = r.s * r.s + r.c * r.c;\r\n                let invR = b2InvSqrt(r2);\r\n                if (!isFinite(invR)) {\r\n                    invR = 1.98177537e+019;\r\n                }\r\n                r.s *= invR;\r\n                r.c *= invR;\r\n                ///r.angle = Math.atan2(r.s, r.c); // TODO: optimize\r\n                let strength = elasticStrength * triad.strength;\r\n                ///va += strength * (b2Mul(r, oa) - pa);\r\n                b2Rot.MulRV(r, oa, s_t0);\r\n                b2Vec2.SubVV(s_t0, pa, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                va.SelfAdd(s_t0);\r\n                ///vb += strength * (b2Mul(r, ob) - pb);\r\n                b2Rot.MulRV(r, ob, s_t0);\r\n                b2Vec2.SubVV(s_t0, pb, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                vb.SelfAdd(s_t0);\r\n                ///vc += strength * (b2Mul(r, oc) - pc);\r\n                b2Rot.MulRV(r, oc, s_t0);\r\n                b2Vec2.SubVV(s_t0, pc, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                vc.SelfAdd(s_t0);\r\n            }\r\n        }\r\n    }\r\n    SolveSpring(step) {\r\n        let s_pa = b2ParticleSystem.SolveSpring_s_pa;\r\n        let s_pb = b2ParticleSystem.SolveSpring_s_pb;\r\n        let s_d = b2ParticleSystem.SolveSpring_s_d;\r\n        let s_f = b2ParticleSystem.SolveSpring_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let springStrength = step.inv_dt * this.m_def.springStrength;\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            let pair = this.m_pairBuffer.data[k];\r\n            if (pair.flags & b2ParticleFlag.b2_springParticle) {\r\n                ///int32 a = pair.indexA;\r\n                let a = pair.indexA;\r\n                ///int32 b = pair.indexB;\r\n                let b = pair.indexB;\r\n                ///b2Vec2 pa = m_positionBuffer.data[a];\r\n                let pa = s_pa.Copy(pos_data[a]);\r\n                ///b2Vec2 pb = m_positionBuffer.data[b];\r\n                let pb = s_pb.Copy(pos_data[b]);\r\n                ///b2Vec2& va = m_velocityBuffer.data[a];\r\n                let va = vel_data[a];\r\n                ///b2Vec2& vb = m_velocityBuffer.data[b];\r\n                let vb = vel_data[b];\r\n                ///pa += step.dt * va;\r\n                pa.SelfMulAdd(step.dt, va);\r\n                ///pb += step.dt * vb;\r\n                pb.SelfMulAdd(step.dt, vb);\r\n                ///b2Vec2 d = pb - pa;\r\n                let d = b2Vec2.SubVV(pb, pa, s_d);\r\n                ///float32 r0 = pair.distance;\r\n                let r0 = pair.distance;\r\n                ///float32 r1 = d.Length();\r\n                let r1 = d.Length();\r\n                ///float32 strength = springStrength * pair.strength;\r\n                let strength = springStrength * pair.strength;\r\n                ///b2Vec2 f = strength * (r0 - r1) / r1 * d;\r\n                let f = b2Vec2.MulSV(strength * (r0 - r1) / r1, d, s_f);\r\n                ///va -= f;\r\n                va.SelfSub(f);\r\n                ///vb += f;\r\n                vb.SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveTensile(step) {\r\n        let s_weightedNormal = b2ParticleSystem.SolveTensile_s_weightedNormal;\r\n        let s_s = b2ParticleSystem.SolveTensile_s_s;\r\n        let s_f = b2ParticleSystem.SolveTensile_s_f;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        b2Assert(this.m_accumulation2Buffer !== null);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_accumulation2Buffer[i] = new b2Vec2();\r\n            this.m_accumulation2Buffer[i].SetZero();\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_tensileParticle) {\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                let w = contact.weight;\r\n                let n = contact.normal;\r\n                ///b2Vec2 weightedNormal = (1 - w) * w * n;\r\n                let weightedNormal = b2Vec2.MulSV((1 - w) * w, n, s_weightedNormal);\r\n                ///m_accumulation2Buffer[a] -= weightedNormal;\r\n                this.m_accumulation2Buffer[a].SelfSub(weightedNormal);\r\n                ///m_accumulation2Buffer[b] += weightedNormal;\r\n                this.m_accumulation2Buffer[b].SelfAdd(weightedNormal);\r\n            }\r\n        }\r\n        let criticalVelocity = this.GetCriticalVelocity(step);\r\n        let pressureStrength = this.m_def.surfaceTensionPressureStrength * criticalVelocity;\r\n        let normalStrength = this.m_def.surfaceTensionNormalStrength * criticalVelocity;\r\n        let maxVelocityVariation = b2_maxParticleForce * criticalVelocity;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_tensileParticle) {\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                let w = contact.weight;\r\n                let n = contact.normal;\r\n                let h = this.m_weightBuffer[a] + this.m_weightBuffer[b];\r\n                ///b2Vec2 s = m_accumulation2Buffer[b] - m_accumulation2Buffer[a];\r\n                let s = b2Vec2.SubVV(this.m_accumulation2Buffer[b], this.m_accumulation2Buffer[a], s_s);\r\n                let fn = b2Min(pressureStrength * (h - 2) + normalStrength * b2Vec2.DotVV(s, n), maxVelocityVariation) * w;\r\n                ///b2Vec2 f = fn * n;\r\n                let f = b2Vec2.MulSV(fn, n, s_f);\r\n                ///m_velocityBuffer.data[a] -= f;\r\n                vel_data[a].SelfSub(f);\r\n                ///m_velocityBuffer.data[b] += f;\r\n                vel_data[b].SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveViscous() {\r\n        let s_v = b2ParticleSystem.SolveViscous_s_v;\r\n        let s_f = b2ParticleSystem.SolveViscous_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let viscousStrength = this.m_def.viscousStrength;\r\n        let inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleFlag.b2_viscousParticle) {\r\n                let b = contact.body;\r\n                let w = contact.weight;\r\n                let m = contact.mass;\r\n                let p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n                let v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n                ///b2Vec2 f = viscousStrength * m * w * v;\r\n                let f = b2Vec2.MulSV(viscousStrength * m * w, v, s_f);\r\n                ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                vel_data[a].SelfMulAdd(inv_mass, f);\r\n                ///b.ApplyLinearImpulse(-f, p, true);\r\n                b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_viscousParticle) {\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                let w = contact.weight;\r\n                ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n                let v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n                ///b2Vec2 f = viscousStrength * w * v;\r\n                let f = b2Vec2.MulSV(viscousStrength * w, v, s_f);\r\n                ///m_velocityBuffer.data[a] += f;\r\n                vel_data[a].SelfAdd(f);\r\n                ///m_velocityBuffer.data[b] -= f;\r\n                vel_data[b].SelfSub(f);\r\n            }\r\n        }\r\n    }\r\n    SolveRepulsive(step) {\r\n        let s_f = b2ParticleSystem.SolveRepulsive_s_f;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let repulsiveStrength = this.m_def.repulsiveStrength * this.GetCriticalVelocity(step);\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_repulsiveParticle) {\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\r\n                    let w = contact.weight;\r\n                    let n = contact.normal;\r\n                    ///b2Vec2 f = repulsiveStrength * w * n;\r\n                    let f = b2Vec2.MulSV(repulsiveStrength * w, n, s_f);\r\n                    ///m_velocityBuffer.data[a] -= f;\r\n                    vel_data[a].SelfSub(f);\r\n                    ///m_velocityBuffer.data[b] += f;\r\n                    vel_data[b].SelfAdd(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolvePowder(step) {\r\n        let s_f = b2ParticleSystem.SolvePowder_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let powderStrength = this.m_def.powderStrength * this.GetCriticalVelocity(step);\r\n        let minWeight = 1.0 - b2_particleStride;\r\n        let inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleFlag.b2_powderParticle) {\r\n                let w = contact.weight;\r\n                if (w > minWeight) {\r\n                    let b = contact.body;\r\n                    let m = contact.mass;\r\n                    let p = pos_data[a];\r\n                    let n = contact.normal;\r\n                    let f = b2Vec2.MulSV(powderStrength * m * (w - minWeight), n, s_f);\r\n                    vel_data[a].SelfMulSub(inv_mass, f);\r\n                    b.ApplyLinearImpulse(f, p, true);\r\n                }\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_powderParticle) {\r\n                let w = contact.weight;\r\n                if (w > minWeight) {\r\n                    let a = contact.indexA;\r\n                    let b = contact.indexB;\r\n                    let n = contact.normal;\r\n                    let f = b2Vec2.MulSV(powderStrength * (w - minWeight), n, s_f);\r\n                    vel_data[a].SelfSub(f);\r\n                    vel_data[b].SelfAdd(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveSolid(step) {\r\n        let s_f = b2ParticleSystem.SolveSolid_s_f;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // applies extra repulsive force from solid particle groups\r\n        this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\r\n        let ejectionStrength = step.inv_dt * this.m_def.ejectionStrength;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\r\n                let w = contact.weight;\r\n                let n = contact.normal;\r\n                let h = this.m_depthBuffer[a] + this.m_depthBuffer[b];\r\n                let f = b2Vec2.MulSV(ejectionStrength * h * w, n, s_f);\r\n                vel_data[a].SelfSub(f);\r\n                vel_data[b].SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveForce(step) {\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let velocityPerForce = step.dt * this.GetParticleInvMass();\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            ///m_velocityBuffer.data[i] += velocityPerForce * m_forceBuffer[i];\r\n            vel_data[i].SelfMulAdd(velocityPerForce, this.m_forceBuffer[i]);\r\n        }\r\n        this.m_hasForce = false;\r\n    }\r\n    SolveColorMixing() {\r\n        // mixes color between contacting particles\r\n        b2Assert(this.m_colorBuffer.data !== null);\r\n        const colorMixing = 0.5 * this.m_def.colorMixingStrength;\r\n        if (colorMixing) {\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                let contact = this.m_contactBuffer.data[k];\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                if (this.m_flagsBuffer.data[a] & this.m_flagsBuffer.data[b] &\r\n                    b2ParticleFlag.b2_colorMixingParticle) {\r\n                    let colorA = this.m_colorBuffer.data[a];\r\n                    let colorB = this.m_colorBuffer.data[b];\r\n                    // Use the static method to ensure certain compilers inline\r\n                    // this correctly.\r\n                    b2Color.MixColors(colorA, colorB, colorMixing);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveZombie() {\r\n        // removes particles with zombie flag\r\n        let newCount = 0;\r\n        ///int32* newIndices = (int32*) this.m_world.m_stackAllocator.Allocate(sizeof(int32) * this.m_count);\r\n        let newIndices = []; // TODO: static\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            newIndices[i] = b2_invalidParticleIndex;\r\n        }\r\n        b2Assert(newIndices.length === this.m_count);\r\n        let allParticleFlags = 0;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            let flags = this.m_flagsBuffer.data[i];\r\n            if (flags & b2ParticleFlag.b2_zombieParticle) {\r\n                let destructionListener = this.m_world.m_destructionListener;\r\n                if ((flags & b2ParticleFlag.b2_destructionListenerParticle) && destructionListener) {\r\n                    destructionListener.SayGoodbyeParticle(this, i);\r\n                }\r\n                // Destroy particle handle.\r\n                if (this.m_handleIndexBuffer.data) {\r\n                    let handle = this.m_handleIndexBuffer.data[i];\r\n                    if (handle) {\r\n                        handle.SetIndex(b2_invalidParticleIndex);\r\n                        this.m_handleIndexBuffer.data[i] = null;\r\n                        ///m_handleAllocator.Free(handle);\r\n                    }\r\n                }\r\n                newIndices[i] = b2_invalidParticleIndex;\r\n            }\r\n            else {\r\n                newIndices[i] = newCount;\r\n                if (i !== newCount) {\r\n                    // Update handle to reference new particle index.\r\n                    if (this.m_handleIndexBuffer.data) {\r\n                        let handle = this.m_handleIndexBuffer.data[i];\r\n                        if (handle)\r\n                            handle.SetIndex(newCount);\r\n                        this.m_handleIndexBuffer.data[newCount] = handle;\r\n                    }\r\n                    this.m_flagsBuffer.data[newCount] = this.m_flagsBuffer.data[i];\r\n                    if (this.m_lastBodyContactStepBuffer.data) {\r\n                        this.m_lastBodyContactStepBuffer.data[newCount] = this.m_lastBodyContactStepBuffer.data[i];\r\n                    }\r\n                    if (this.m_bodyContactCountBuffer.data) {\r\n                        this.m_bodyContactCountBuffer.data[newCount] = this.m_bodyContactCountBuffer.data[i];\r\n                    }\r\n                    if (this.m_consecutiveContactStepsBuffer.data) {\r\n                        this.m_consecutiveContactStepsBuffer.data[newCount] = this.m_consecutiveContactStepsBuffer.data[i];\r\n                    }\r\n                    this.m_positionBuffer.data[newCount].Copy(this.m_positionBuffer.data[i]);\r\n                    this.m_velocityBuffer.data[newCount].Copy(this.m_velocityBuffer.data[i]);\r\n                    this.m_groupBuffer[newCount] = this.m_groupBuffer[i];\r\n                    if (this.m_hasForce) {\r\n                        this.m_forceBuffer[newCount].Copy(this.m_forceBuffer[i]);\r\n                    }\r\n                    if (this.m_staticPressureBuffer) {\r\n                        this.m_staticPressureBuffer[newCount] = this.m_staticPressureBuffer[i];\r\n                    }\r\n                    if (this.m_depthBuffer) {\r\n                        this.m_depthBuffer[newCount] = this.m_depthBuffer[i];\r\n                    }\r\n                    if (this.m_colorBuffer.data) {\r\n                        this.m_colorBuffer.data[newCount].Copy(this.m_colorBuffer.data[i]);\r\n                    }\r\n                    if (this.m_userDataBuffer.data) {\r\n                        this.m_userDataBuffer.data[newCount] = this.m_userDataBuffer.data[i];\r\n                    }\r\n                    if (this.m_expirationTimeBuffer.data) {\r\n                        this.m_expirationTimeBuffer.data[newCount] = this.m_expirationTimeBuffer.data[i];\r\n                    }\r\n                }\r\n                newCount++;\r\n                allParticleFlags |= flags;\r\n            }\r\n        }\r\n        // predicate functions\r\n        let Test = {\r\n            ///static bool IsProxyInvalid(const Proxy& proxy)\r\n            IsProxyInvalid: (proxy) => {\r\n                return proxy.index < 0;\r\n            },\r\n            ///static bool IsContactInvalid(const b2ParticleContact& contact)\r\n            IsContactInvalid: (contact) => {\r\n                return contact.indexA < 0 || contact.indexB < 0;\r\n            },\r\n            ///static bool IsBodyContactInvalid(const b2ParticleBodyContact& contact)\r\n            IsBodyContactInvalid: (contact) => {\r\n                return contact.index < 0;\r\n            },\r\n            ///static bool IsPairInvalid(const b2ParticlePair& pair)\r\n            IsPairInvalid: (pair) => {\r\n                return pair.indexA < 0 || pair.indexB < 0;\r\n            },\r\n            ///static bool IsTriadInvalid(const b2ParticleTriad& triad)\r\n            IsTriadInvalid: (triad) => {\r\n                return triad.indexA < 0 || triad.indexB < 0 || triad.indexC < 0;\r\n            }\r\n        };\r\n        // update proxies\r\n        for (let k = 0; k < this.m_proxyBuffer.count; k++) {\r\n            let proxy = this.m_proxyBuffer.data[k];\r\n            proxy.index = newIndices[proxy.index];\r\n        }\r\n        this.m_proxyBuffer.RemoveIf(Test.IsProxyInvalid);\r\n        // update contacts\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            contact.indexA = newIndices[contact.indexA];\r\n            contact.indexB = newIndices[contact.indexB];\r\n        }\r\n        this.m_contactBuffer.RemoveIf(Test.IsContactInvalid);\r\n        // update particle-body contacts\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            contact.index = newIndices[contact.index];\r\n        }\r\n        this.m_bodyContactBuffer.RemoveIf(Test.IsBodyContactInvalid);\r\n        // update pairs\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            let pair = this.m_pairBuffer.data[k];\r\n            pair.indexA = newIndices[pair.indexA];\r\n            pair.indexB = newIndices[pair.indexB];\r\n        }\r\n        this.m_pairBuffer.RemoveIf(Test.IsPairInvalid);\r\n        // update triads\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            let triad = this.m_triadBuffer.data[k];\r\n            triad.indexA = newIndices[triad.indexA];\r\n            triad.indexB = newIndices[triad.indexB];\r\n            triad.indexC = newIndices[triad.indexC];\r\n        }\r\n        this.m_triadBuffer.RemoveIf(Test.IsTriadInvalid);\r\n        // Update lifetime indices.\r\n        if (this.m_indexByExpirationTimeBuffer.data) {\r\n            let writeOffset = 0;\r\n            for (let readOffset = 0; readOffset < this.m_count; readOffset++) {\r\n                let newIndex = newIndices[this.m_indexByExpirationTimeBuffer.data[readOffset]];\r\n                if (newIndex !== b2_invalidParticleIndex) {\r\n                    this.m_indexByExpirationTimeBuffer.data[writeOffset++] = newIndex;\r\n                }\r\n            }\r\n        }\r\n        // update groups\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            let firstIndex = newCount;\r\n            let lastIndex = 0;\r\n            let modified = false;\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                let j = newIndices[i];\r\n                if (j >= 0) {\r\n                    firstIndex = b2Min(firstIndex, j);\r\n                    lastIndex = b2Max(lastIndex, j + 1);\r\n                }\r\n                else {\r\n                    modified = true;\r\n                }\r\n            }\r\n            if (firstIndex < lastIndex) {\r\n                group.m_firstIndex = firstIndex;\r\n                group.m_lastIndex = lastIndex;\r\n                if (modified) {\r\n                    if (group.m_groupFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                        this.SetGroupFlags(group, group.m_groupFlags | b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                group.m_firstIndex = 0;\r\n                group.m_lastIndex = 0;\r\n                if (!(group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupCanBeEmpty)) {\r\n                    this.SetGroupFlags(group, group.m_groupFlags | b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed);\r\n                }\r\n            }\r\n        }\r\n        // update particle count\r\n        this.m_count = newCount;\r\n        ///m_world.m_stackAllocator.Free(newIndices);\r\n        this.m_allParticleFlags = allParticleFlags;\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n        // destroy bodies with no particles\r\n        for (let group = this.m_groupList; group;) {\r\n            let next = group.GetNext();\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed) {\r\n                this.DestroyParticleGroup(group);\r\n            }\r\n            group = next;\r\n        }\r\n    }\r\n    /**\r\n     * Destroy all particles which have outlived their lifetimes set\r\n     * by SetParticleLifetime().\r\n     */\r\n    SolveLifetimes(step) {\r\n        b2Assert(this.m_expirationTimeBuffer.data !== null);\r\n        b2Assert(this.m_indexByExpirationTimeBuffer.data !== null);\r\n        // Update the time elapsed.\r\n        this.m_timeElapsed = this.LifetimeToExpirationTime(step.dt);\r\n        // Get the floor (non-fractional component) of the elapsed time.\r\n        let quantizedTimeElapsed = this.GetQuantizedTimeElapsed();\r\n        let expirationTimes = this.m_expirationTimeBuffer.data;\r\n        let expirationTimeIndices = this.m_indexByExpirationTimeBuffer.data;\r\n        let particleCount = this.GetParticleCount();\r\n        // Sort the lifetime buffer if it's required.\r\n        if (this.m_expirationTimeBufferRequiresSorting) {\r\n            ///const ExpirationTimeComparator expirationTimeComparator(expirationTimes);\r\n            ///std::sort(expirationTimeIndices, expirationTimeIndices + particleCount, expirationTimeComparator);\r\n            /**\r\n             * Compare the lifetime of particleIndexA and particleIndexB\r\n             * returning true if the lifetime of A is greater than B for\r\n             * particles that will expire.  If either particle's lifetime is\r\n             * infinite (<= 0.0f) this function return true if the lifetime\r\n             * of A is lesser than B. When used with std::sort() this\r\n             * results in an array of particle indicies sorted in reverse\r\n             * order by particle lifetime.\r\n             *\r\n             * For example, the set of lifetimes\r\n             * (1.0, 0.7, 0.3, 0.0, -1.0, 2.0)\r\n             * would be sorted as\r\n             * (0.0, 1.0, -2.0, 1.0, 0.7, 0.3)\r\n             */\r\n            let ExpirationTimeComparator = (particleIndexA, particleIndexB) => {\r\n                let expirationTimeA = expirationTimes[particleIndexA];\r\n                let expirationTimeB = expirationTimes[particleIndexB];\r\n                let infiniteExpirationTimeA = expirationTimeA <= 0.0;\r\n                let infiniteExpirationTimeB = expirationTimeB <= 0.0;\r\n                return infiniteExpirationTimeA === infiniteExpirationTimeB ?\r\n                    expirationTimeA > expirationTimeB : infiniteExpirationTimeA;\r\n            };\r\n            std_sort(expirationTimeIndices, 0, particleCount, ExpirationTimeComparator);\r\n            this.m_expirationTimeBufferRequiresSorting = false;\r\n        }\r\n        // Destroy particles which have expired.\r\n        for (let i = particleCount - 1; i >= 0; --i) {\r\n            let particleIndex = expirationTimeIndices[i];\r\n            let expirationTime = expirationTimes[particleIndex];\r\n            // If no particles need to be destroyed, skip this.\r\n            if (quantizedTimeElapsed < expirationTime || expirationTime <= 0) {\r\n                break;\r\n            }\r\n            // Destroy this particle.\r\n            this.DestroyParticle(particleIndex);\r\n        }\r\n    }\r\n    RotateBuffer(start, mid, end) {\r\n        // move the particles assigned to the given group toward the end of array\r\n        if (start === mid || mid === end) {\r\n            return;\r\n        }\r\n        b2Assert(mid >= start && mid <= end);\r\n        function newIndices(i) {\r\n            if (i < start) {\r\n                return i;\r\n            }\r\n            else if (i < mid) {\r\n                return i + end - mid;\r\n            }\r\n            else if (i < end) {\r\n                return i + start - mid;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        ///std::rotate(m_flagsBuffer.data + start, m_flagsBuffer.data + mid, m_flagsBuffer.data + end);\r\n        std_rotate(this.m_flagsBuffer.data, start, mid, end);\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            ///std::rotate(m_lastBodyContactStepBuffer.data + start, m_lastBodyContactStepBuffer.data + mid, m_lastBodyContactStepBuffer.data + end);\r\n            std_rotate(this.m_lastBodyContactStepBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            ///std::rotate(m_bodyContactCountBuffer.data + start, m_bodyContactCountBuffer.data + mid, m_bodyContactCountBuffer.data + end);\r\n            std_rotate(this.m_bodyContactCountBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            ///std::rotate(m_consecutiveContactStepsBuffer.data + start, m_consecutiveContactStepsBuffer.data + mid, m_consecutiveContactStepsBuffer.data + end);\r\n            std_rotate(this.m_consecutiveContactStepsBuffer.data, start, mid, end);\r\n        }\r\n        ///std::rotate(m_positionBuffer.data + start, m_positionBuffer.data + mid, m_positionBuffer.data + end);\r\n        std_rotate(this.m_positionBuffer.data, start, mid, end);\r\n        ///std::rotate(m_velocityBuffer.data + start, m_velocityBuffer.data + mid, m_velocityBuffer.data + end);\r\n        std_rotate(this.m_velocityBuffer.data, start, mid, end);\r\n        ///std::rotate(m_groupBuffer + start, m_groupBuffer + mid, m_groupBuffer + end);\r\n        std_rotate(this.m_groupBuffer, start, mid, end);\r\n        if (this.m_hasForce) {\r\n            ///std::rotate(m_forceBuffer + start, m_forceBuffer + mid, m_forceBuffer + end);\r\n            std_rotate(this.m_forceBuffer, start, mid, end);\r\n        }\r\n        if (this.m_staticPressureBuffer) {\r\n            ///std::rotate(m_staticPressureBuffer + start, m_staticPressureBuffer + mid, m_staticPressureBuffer + end);\r\n            std_rotate(this.m_staticPressureBuffer, start, mid, end);\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            ///std::rotate(m_depthBuffer + start, m_depthBuffer + mid, m_depthBuffer + end);\r\n            std_rotate(this.m_depthBuffer, start, mid, end);\r\n        }\r\n        if (this.m_colorBuffer.data) {\r\n            ///std::rotate(m_colorBuffer.data + start, m_colorBuffer.data + mid, m_colorBuffer.data + end);\r\n            std_rotate(this.m_colorBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_userDataBuffer.data) {\r\n            ///std::rotate(m_userDataBuffer.data + start, m_userDataBuffer.data + mid, m_userDataBuffer.data + end);\r\n            std_rotate(this.m_userDataBuffer.data, start, mid, end);\r\n        }\r\n        // Update handle indices.\r\n        if (this.m_handleIndexBuffer.data) {\r\n            ///std::rotate(m_handleIndexBuffer.data + start, m_handleIndexBuffer.data + mid, m_handleIndexBuffer.data + end);\r\n            std_rotate(this.m_handleIndexBuffer.data, start, mid, end);\r\n            for (let i = start; i < end; ++i) {\r\n                let handle = this.m_handleIndexBuffer.data[i];\r\n                if (handle)\r\n                    handle.SetIndex(newIndices(handle.GetIndex()));\r\n            }\r\n        }\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            ///std::rotate(m_expirationTimeBuffer.data + start, m_expirationTimeBuffer.data + mid, m_expirationTimeBuffer.data + end);\r\n            std_rotate(this.m_expirationTimeBuffer.data, start, mid, end);\r\n            // Update expiration time buffer indices.\r\n            let particleCount = this.GetParticleCount();\r\n            let indexByExpirationTime = this.m_indexByExpirationTimeBuffer.data;\r\n            for (let i = 0; i < particleCount; ++i) {\r\n                indexByExpirationTime[i] = newIndices(indexByExpirationTime[i]);\r\n            }\r\n        }\r\n        // update proxies\r\n        for (let k = 0; k < this.m_proxyBuffer.count; k++) {\r\n            let proxy = this.m_proxyBuffer.data[k];\r\n            proxy.index = newIndices(proxy.index);\r\n        }\r\n        // update contacts\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            contact.indexA = newIndices(contact.indexA);\r\n            contact.indexB = newIndices(contact.indexB);\r\n        }\r\n        // update particle-body contacts\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            contact.index = newIndices(contact.index);\r\n        }\r\n        // update pairs\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            let pair = this.m_pairBuffer.data[k];\r\n            pair.indexA = newIndices(pair.indexA);\r\n            pair.indexB = newIndices(pair.indexB);\r\n        }\r\n        // update triads\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            let triad = this.m_triadBuffer.data[k];\r\n            triad.indexA = newIndices(triad.indexA);\r\n            triad.indexB = newIndices(triad.indexB);\r\n            triad.indexC = newIndices(triad.indexC);\r\n        }\r\n        // update groups\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            group.m_firstIndex = newIndices(group.m_firstIndex);\r\n            group.m_lastIndex = newIndices(group.m_lastIndex - 1) + 1;\r\n        }\r\n    }\r\n    GetCriticalVelocity(step) {\r\n        return this.m_particleDiameter * step.inv_dt;\r\n    }\r\n    GetCriticalVelocitySquared(step) {\r\n        let velocity = this.GetCriticalVelocity(step);\r\n        return velocity * velocity;\r\n    }\r\n    GetCriticalPressure(step) {\r\n        return this.m_def.density * this.GetCriticalVelocitySquared(step);\r\n    }\r\n    GetParticleStride() {\r\n        return b2_particleStride * this.m_particleDiameter;\r\n    }\r\n    GetParticleMass() {\r\n        let stride = this.GetParticleStride();\r\n        return this.m_def.density * stride * stride;\r\n    }\r\n    GetParticleInvMass() {\r\n        ///return 1.777777 * this.m_inverseDensity * this.m_inverseDiameter * this.m_inverseDiameter;\r\n        // mass = density * stride^2, so we take the inverse of this.\r\n        let inverseStride = this.m_inverseDiameter * (1.0 / b2_particleStride);\r\n        return this.m_inverseDensity * inverseStride * inverseStride;\r\n    }\r\n    /**\r\n     * Get the world's contact filter if any particles with the\r\n     * b2_contactFilterParticle flag are present in the system.\r\n     */\r\n    GetFixtureContactFilter() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_fixtureContactFilterParticle) ?\r\n            this.m_world.m_contactManager.m_contactFilter : null;\r\n    }\r\n    /**\r\n     * Get the world's contact filter if any particles with the\r\n     * b2_particleContactFilterParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetParticleContactFilter() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_particleContactFilterParticle) ?\r\n            this.m_world.m_contactManager.m_contactFilter : null;\r\n    }\r\n    /**\r\n     * Get the world's contact listener if any particles with the\r\n     * b2_fixtureContactListenerParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetFixtureContactListener() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_fixtureContactListenerParticle) ?\r\n            this.m_world.m_contactManager.m_contactListener : null;\r\n    }\r\n    /**\r\n     * Get the world's contact listener if any particles with the\r\n     * b2_particleContactListenerParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetParticleContactListener() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_particleContactListenerParticle) ?\r\n            this.m_world.m_contactManager.m_contactListener : null;\r\n    }\r\n    SetUserOverridableBuffer(buffer, newData, newCapacity) {\r\n        b2Assert(((newData !== null) && (newCapacity > 0)) || ((newData === null) && (newCapacity === 0)));\r\n        ///if (!buffer.userSuppliedCapacity)\r\n        ///{\r\n        ///this.m_world.m_blockAllocator.Free(buffer.data, sizeof(T) * m_internalAllocatedCapacity);\r\n        ///}\r\n        buffer.data = newData;\r\n        buffer.userSuppliedCapacity = newCapacity;\r\n    }\r\n    SetGroupFlags(group, newFlags) {\r\n        let oldFlags = group.m_groupFlags;\r\n        if ((oldFlags ^ newFlags) & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n            // If the b2_solidParticleGroup flag changed schedule depth update.\r\n            newFlags |= b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth;\r\n        }\r\n        if (oldFlags & ~newFlags) {\r\n            // If any flags might be removed\r\n            this.m_needsUpdateAllGroupFlags = true;\r\n        }\r\n        if (~this.m_allGroupFlags & newFlags) {\r\n            // If any flags were added\r\n            if (newFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\r\n            }\r\n            this.m_allGroupFlags |= newFlags;\r\n        }\r\n        group.m_groupFlags = newFlags;\r\n    }\r\n    static BodyContactCompare(lhs, rhs) {\r\n        if (lhs.index === rhs.index) {\r\n            // Subsort by weight, decreasing.\r\n            return lhs.weight > rhs.weight;\r\n        }\r\n        return lhs.index < rhs.index;\r\n    }\r\n    RemoveSpuriousBodyContacts() {\r\n        // At this point we have a list of contact candidates based on AABB\r\n        // overlap.The AABB query that  generated this returns all collidable\r\n        // fixtures overlapping particle bounding boxes.  This breaks down around\r\n        // vertices where two shapes intersect, such as a \"ground\" surface made\r\n        // of multiple b2PolygonShapes; it potentially applies a lot of spurious\r\n        // impulses from normals that should not actually contribute.  See the\r\n        // Ramp example in Testbed.\r\n        //\r\n        // To correct for this, we apply this algorithm:\r\n        //   * sort contacts by particle and subsort by weight (nearest to farthest)\r\n        //   * for each contact per particle:\r\n        //      - project a point at the contact distance along the inverse of the\r\n        //        contact normal\r\n        //      - if this intersects the fixture that generated the contact, apply\r\n        //         it, otherwise discard as impossible\r\n        //      - repeat for up to n nearest contacts, currently we get good results\r\n        //        from n=3.\r\n        ///std::sort(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleSystem::BodyContactCompare);\r\n        std_sort(this.m_bodyContactBuffer.data, 0, this.m_bodyContactBuffer.count, b2ParticleSystem.BodyContactCompare);\r\n        ///int32 discarded = 0;\r\n        ///std::remove_if(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleBodyContactRemovePredicate(this, &discarded));\r\n        ///\r\n        ///m_bodyContactBuffer.SetCount(m_bodyContactBuffer.GetCount() - discarded);\r\n        let s_n = b2ParticleSystem.RemoveSpuriousBodyContacts_s_n;\r\n        let s_pos = b2ParticleSystem.RemoveSpuriousBodyContacts_s_pos;\r\n        let s_normal = b2ParticleSystem.RemoveSpuriousBodyContacts_s_normal;\r\n        // Max number of contacts processed per particle, from nearest to farthest.\r\n        // This must be at least 2 for correctness with concave shapes; 3 was\r\n        // experimentally arrived at as looking reasonable.\r\n        let k_maxContactsPerPoint = 3;\r\n        const system = this;\r\n        // Index of last particle processed.\r\n        let lastIndex = -1;\r\n        // Number of contacts processed for the current particle.\r\n        let currentContacts = 0;\r\n        // Output the number of discarded contacts.\r\n        // let discarded = 0;\r\n        let b2ParticleBodyContactRemovePredicate = (contact) => {\r\n            // This implements the selection criteria described in\r\n            // RemoveSpuriousBodyContacts().\r\n            // This functor is iterating through a list of Body contacts per\r\n            // Particle, ordered from near to far.  For up to the maximum number of\r\n            // contacts we allow per point per step, we verify that the contact\r\n            // normal of the Body that genenerated the contact makes physical sense\r\n            // by projecting a point back along that normal and seeing if it\r\n            // intersects the fixture generating the contact.\r\n            if (contact.index !== lastIndex) {\r\n                currentContacts = 0;\r\n                lastIndex = contact.index;\r\n            }\r\n            if (currentContacts++ > k_maxContactsPerPoint) {\r\n                // ++discarded;\r\n                return true;\r\n            }\r\n            // Project along inverse normal (as returned in the contact) to get the\r\n            // point to check.\r\n            ///b2Vec2 n = contact.normal;\r\n            let n = s_n.Copy(contact.normal);\r\n            // weight is 1-(inv(diameter) * distance)\r\n            ///n *= system.m_particleDiameter * (1 - contact.weight);\r\n            n.SelfMul(system.m_particleDiameter * (1 - contact.weight));\r\n            ///b2Vec2 pos = system.m_positionBuffer.data[contact.index] + n;\r\n            let pos = b2Vec2.AddVV(system.m_positionBuffer.data[contact.index], n, s_pos);\r\n            // pos is now a point projected back along the contact normal to the\r\n            // contact distance. If the surface makes sense for a contact, pos will\r\n            // now lie on or in the fixture generating\r\n            if (!contact.fixture.TestPoint(pos)) {\r\n                let childCount = contact.fixture.GetShape().GetChildCount();\r\n                for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n                    let normal = s_normal;\r\n                    let distance = contact.fixture.ComputeDistance(pos, normal, childIndex);\r\n                    if (distance < b2_linearSlop) {\r\n                        return false;\r\n                    }\r\n                }\r\n                // ++discarded;\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        this.m_bodyContactBuffer.count = std_remove_if(this.m_bodyContactBuffer.data, b2ParticleBodyContactRemovePredicate, this.m_bodyContactBuffer.count);\r\n    }\r\n    DetectStuckParticle(particle) {\r\n        // Detect stuck particles\r\n        //\r\n        // The basic algorithm is to allow the user to specify an optional\r\n        // threshold where we detect whenever a particle is contacting\r\n        // more than one fixture for more than threshold consecutive\r\n        // steps. This is considered to be \"stuck\", and these are put\r\n        // in a list the user can query per step, if enabled, to deal with\r\n        // such particles.\r\n        if (this.m_stuckThreshold <= 0) {\r\n            return;\r\n        }\r\n        // Get the state variables for this particle.\r\n        ///int32 * const consecutiveCount = &m_consecutiveContactStepsBuffer.data[particle];\r\n        ///int32 * const lastStep = &m_lastBodyContactStepBuffer.data[particle];\r\n        ///int32 * const bodyCount = &m_bodyContactCountBuffer.data[particle];\r\n        // This is only called when there is a body contact for this particle.\r\n        ///++(*bodyCount);\r\n        ++this.m_bodyContactCountBuffer.data[particle];\r\n        // We want to only trigger detection once per step, the first time we\r\n        // contact more than one fixture in a step for a given particle.\r\n        ///if (*bodyCount === 2)\r\n        if (this.m_bodyContactCountBuffer.data[particle] === 2) {\r\n            ///++(*consecutiveCount);\r\n            ++this.m_consecutiveContactStepsBuffer.data[particle];\r\n            ///if (*consecutiveCount > m_stuckThreshold)\r\n            if (this.m_consecutiveContactStepsBuffer.data[particle] > this.m_stuckThreshold) {\r\n                ///int32& newStuckParticle = m_stuckParticleBuffer.Append();\r\n                ///newStuckParticle = particle;\r\n                this.m_stuckParticleBuffer.data[this.m_stuckParticleBuffer.Append()] = particle;\r\n            }\r\n        }\r\n        ///*lastStep = m_timestamp;\r\n        this.m_lastBodyContactStepBuffer.data[particle] = this.m_timestamp;\r\n    }\r\n    /**\r\n     * Determine whether a particle index is valid.\r\n     */\r\n    ValidateParticleIndex(index) {\r\n        return index >= 0 && index < this.GetParticleCount() &&\r\n            index !== b2_invalidParticleIndex;\r\n    }\r\n    /**\r\n     * Get the time elapsed in\r\n     * b2ParticleSystemDef::lifetimeGranularity.\r\n     */\r\n    GetQuantizedTimeElapsed() {\r\n        ///return (int32)(m_timeElapsed >> 32);\r\n        return Math.floor(this.m_timeElapsed / 0x100000000);\r\n    }\r\n    /**\r\n     * Convert a lifetime in seconds to an expiration time.\r\n     */\r\n    LifetimeToExpirationTime(lifetime) {\r\n        ///return m_timeElapsed + (int64)((lifetime / m_def.lifetimeGranularity) * (float32)(1LL << 32));\r\n        return this.m_timeElapsed + Math.floor(((lifetime / this.m_def.lifetimeGranularity) * 0x100000000));\r\n    }\r\n    ForceCanBeApplied(flags) {\r\n        return !(flags & b2ParticleFlag.b2_wallParticle);\r\n    }\r\n    PrepareForceBuffer() {\r\n        if (!this.m_hasForce) {\r\n            ///memset(m_forceBuffer, 0, sizeof(*m_forceBuffer) * m_count);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                this.m_forceBuffer[i].SetZero();\r\n            }\r\n            this.m_hasForce = true;\r\n        }\r\n    }\r\n    IsRigidGroup(group) {\r\n        return (group !== null) && ((group.m_groupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0);\r\n    }\r\n    GetLinearVelocity(group, particleIndex, point, out) {\r\n        if (this.IsRigidGroup(group)) {\r\n            return group.GetLinearVelocityFromWorldPoint(point, out);\r\n        }\r\n        else {\r\n            ///return m_velocityBuffer.data[particleIndex];\r\n            return out.Copy(this.m_velocityBuffer.data[particleIndex]);\r\n        }\r\n    }\r\n    InitDampingParameter(invMass, invInertia, tangentDistance, mass, inertia, center, point, normal) {\r\n        ///*invMass = mass > 0 ? 1 / mass : 0;\r\n        invMass[0] = mass > 0 ? 1 / mass : 0;\r\n        ///*invInertia = inertia > 0 ? 1 / inertia : 0;\r\n        invInertia[0] = inertia > 0 ? 1 / inertia : 0;\r\n        ///*tangentDistance = b2Cross(point - center, normal);\r\n        tangentDistance[0] = b2Vec2.CrossVV(b2Vec2.SubVV(point, center, b2Vec2.s_t0), normal);\r\n    }\r\n    InitDampingParameterWithRigidGroupOrParticle(invMass, invInertia, tangentDistance, isRigidGroup, group, particleIndex, point, normal) {\r\n        if (isRigidGroup) {\r\n            this.InitDampingParameter(invMass, invInertia, tangentDistance, group.GetMass(), group.GetInertia(), group.GetCenter(), point, normal);\r\n        }\r\n        else {\r\n            let flags = this.m_flagsBuffer.data[particleIndex];\r\n            this.InitDampingParameter(invMass, invInertia, tangentDistance, flags & b2ParticleFlag.b2_wallParticle ? 0 : this.GetParticleMass(), 0, point, point, normal);\r\n        }\r\n    }\r\n    ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, normalVelocity) {\r\n        let invMass = invMassA + invInertiaA * tangentDistanceA * tangentDistanceA +\r\n            invMassB + invInertiaB * tangentDistanceB * tangentDistanceB;\r\n        return invMass > 0 ? normalVelocity / invMass : 0;\r\n    }\r\n    ApplyDamping(invMass, invInertia, tangentDistance, isRigidGroup, group, particleIndex, impulse, normal) {\r\n        if (isRigidGroup) {\r\n            ///group.m_linearVelocity += impulse * invMass * normal;\r\n            group.m_linearVelocity.SelfMulAdd(impulse * invMass, normal);\r\n            ///group.m_angularVelocity += impulse * tangentDistance * invInertia;\r\n            group.m_angularVelocity += impulse * tangentDistance * invInertia;\r\n        }\r\n        else {\r\n            ///m_velocityBuffer.data[particleIndex] += impulse * invMass * normal;\r\n            this.m_velocityBuffer.data[particleIndex].SelfMulAdd(impulse * invMass, normal);\r\n        }\r\n    }\r\n}\r\nb2ParticleSystem.xTruncBits = 12;\r\nb2ParticleSystem.yTruncBits = 12;\r\nb2ParticleSystem.tagBits = 8 * 4; // 8u * sizeof(uint32);\r\nb2ParticleSystem.yOffset = 1 << (b2ParticleSystem.yTruncBits - 1);\r\nb2ParticleSystem.yShift = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits;\r\nb2ParticleSystem.xShift = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits - b2ParticleSystem.xTruncBits;\r\nb2ParticleSystem.xScale = 1 << b2ParticleSystem.xShift;\r\nb2ParticleSystem.xOffset = b2ParticleSystem.xScale * (1 << (b2ParticleSystem.xTruncBits - 1));\r\nb2ParticleSystem.yMask = ((1 << b2ParticleSystem.yTruncBits) - 1) << b2ParticleSystem.yShift;\r\nb2ParticleSystem.xMask = ~b2ParticleSystem.yMask;\r\nb2ParticleSystem.DestroyParticlesInShape_s_aabb = new b2AABB();\r\nb2ParticleSystem.CreateParticleGroup_s_transform = new b2Transform();\r\nb2ParticleSystem.ComputeCollisionEnergy_s_v = new b2Vec2();\r\nb2ParticleSystem.QueryShapeAABB_s_aabb = new b2AABB();\r\nb2ParticleSystem.QueryPointAABB_s_aabb = new b2AABB();\r\nb2ParticleSystem.RayCast_s_aabb = new b2AABB();\r\nb2ParticleSystem.RayCast_s_p = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_v = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_n = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_point = new b2Vec2();\r\n/**\r\n * All particle types that require creating pairs\r\n */\r\nb2ParticleSystem.k_pairFlags = b2ParticleFlag.b2_springParticle;\r\n/**\r\n * All particle types that require creating triads\r\n */\r\nb2ParticleSystem.k_triadFlags = b2ParticleFlag.b2_elasticParticle;\r\n/**\r\n * All particle types that do not produce dynamic pressure\r\n */\r\nb2ParticleSystem.k_noPressureFlags = b2ParticleFlag.b2_powderParticle | b2ParticleFlag.b2_tensileParticle;\r\n/**\r\n * All particle types that apply extra damping force with bodies\r\n */\r\nb2ParticleSystem.k_extraDampingFlags = b2ParticleFlag.b2_staticPressureParticle;\r\nb2ParticleSystem.k_barrierWallFlags = b2ParticleFlag.b2_barrierParticle | b2ParticleFlag.b2_wallParticle;\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge = new b2EdgeShape();\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d = new b2Vec2();\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p = new b2Vec2();\r\nb2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb = new b2AABB();\r\nb2ParticleSystem.CreateParticlesFillShapeForGroup_s_p = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dab = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dbc = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dca = new b2Vec2();\r\nb2ParticleSystem.AddContact_s_d = new b2Vec2();\r\nb2ParticleSystem.UpdateBodyContacts_s_aabb = new b2AABB();\r\nb2ParticleSystem.Solve_s_subStep = new b2TimeStep();\r\nb2ParticleSystem.SolveCollision_s_aabb = new b2AABB();\r\nb2ParticleSystem.SolveGravity_s_gravity = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_aabb = new b2AABB();\r\nb2ParticleSystem.SolveBarrier_s_va = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vb = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_pba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vc = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_pca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_qba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_qca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_dv = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_f = new b2Vec2();\r\nb2ParticleSystem.SolvePressure_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveDamping_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_t0 = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_t1 = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_p = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveExtraDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveExtraDamping_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRigid_s_position = new b2Vec2();\r\nb2ParticleSystem.SolveRigid_s_rotation = new b2Rot();\r\nb2ParticleSystem.SolveRigid_s_transform = new b2Transform();\r\nb2ParticleSystem.SolveRigid_s_velocityTransform = new b2Transform();\r\nb2ParticleSystem.SolveElastic_s_pa = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_pb = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_pc = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_r = new b2Rot();\r\nb2ParticleSystem.SolveElastic_s_t0 = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_pa = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_pb = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_d = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_weightedNormal = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_s = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveViscous_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveViscous_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRepulsive_s_f = new b2Vec2();\r\nb2ParticleSystem.SolvePowder_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveSolid_s_f = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_n = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_pos = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_normal = new b2Vec2();\r\n(function (b2ParticleSystem) {\r\n    class UserOverridableBuffer {\r\n        constructor() {\r\n            this.data = null;\r\n            this.userSuppliedCapacity = 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.UserOverridableBuffer = UserOverridableBuffer;\r\n    class Proxy {\r\n        constructor() {\r\n            this.index = b2_invalidParticleIndex;\r\n            this.tag = 0;\r\n        }\r\n        static CompareProxyProxy(a, b) {\r\n            return a.tag < b.tag;\r\n        }\r\n        static CompareTagProxy(a, b) {\r\n            return a < b.tag;\r\n        }\r\n        static CompareProxyTag(a, b) {\r\n            return a.tag < b;\r\n        }\r\n    }\r\n    b2ParticleSystem.Proxy = Proxy;\r\n    class InsideBoundsEnumerator {\r\n        /**\r\n         * InsideBoundsEnumerator enumerates all particles inside the\r\n         * given bounds.\r\n         *\r\n         * Construct an enumerator with bounds of tags and a range of\r\n         * proxies.\r\n         */\r\n        constructor(system, lower, upper, first, last) {\r\n            this.m_system = system;\r\n            this.m_xLower = (lower & b2ParticleSystem.xMask) >>> 0;\r\n            this.m_xUpper = (upper & b2ParticleSystem.xMask) >>> 0;\r\n            this.m_yLower = (lower & b2ParticleSystem.yMask) >>> 0;\r\n            this.m_yUpper = (upper & b2ParticleSystem.yMask) >>> 0;\r\n            this.m_first = first;\r\n            this.m_last = last;\r\n            b2Assert(this.m_first <= this.m_last);\r\n        }\r\n        /**\r\n         * Get index of the next particle. Returns\r\n         * b2_invalidParticleIndex if there are no more particles.\r\n         */\r\n        GetNext() {\r\n            while (this.m_first < this.m_last) {\r\n                let xTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.xMask) >>> 0;\r\n                // #if B2_ASSERT_ENABLED\r\n                ///let yTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.yMask) >>> 0;\r\n                ///b2Assert(yTag >= this.m_yLower);\r\n                ///b2Assert(yTag <= this.m_yUpper);\r\n                // #endif\r\n                if (xTag >= this.m_xLower && xTag <= this.m_xUpper) {\r\n                    return (this.m_system.m_proxyBuffer.data[this.m_first++]).index;\r\n                }\r\n                this.m_first++;\r\n            }\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.InsideBoundsEnumerator = InsideBoundsEnumerator;\r\n    class ParticleListNode {\r\n        constructor() {\r\n            /**\r\n             * The head of the list.\r\n             */\r\n            this.list = null;\r\n            /**\r\n             * The next node in the list.\r\n             */\r\n            this.next = null;\r\n            /**\r\n             * Number of entries in the list. Valid only for the node at the\r\n             * head of the list.\r\n             */\r\n            this.count = 0;\r\n            /**\r\n             * Particle index.\r\n             */\r\n            this.index = 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.ParticleListNode = ParticleListNode;\r\n    /**\r\n     * @constructor\r\n     */\r\n    class FixedSetAllocator {\r\n        Allocate(itemSize, count) {\r\n            // TODO\r\n            return count;\r\n        }\r\n        Clear() {\r\n            // TODO\r\n        }\r\n        GetCount() {\r\n            // TODO\r\n            return 0;\r\n        }\r\n        Invalidate(itemIndex) {\r\n            // TODO\r\n        }\r\n        GetValidBuffer() {\r\n            // TODO\r\n            return [];\r\n        }\r\n        GetBuffer() {\r\n            // TODO\r\n            return [];\r\n        }\r\n        SetCount(count) {\r\n            // TODO\r\n        }\r\n    }\r\n    b2ParticleSystem.FixedSetAllocator = FixedSetAllocator;\r\n    class FixtureParticle {\r\n        constructor(fixture, particle) {\r\n            this.second = b2_invalidParticleIndex;\r\n            this.first = fixture;\r\n            this.second = particle;\r\n        }\r\n    }\r\n    b2ParticleSystem.FixtureParticle = FixtureParticle;\r\n    class FixtureParticleSet extends b2ParticleSystem.FixedSetAllocator {\r\n        Initialize(bodyContactBuffer, flagsBuffer) {\r\n            // TODO\r\n        }\r\n        Find(pair) {\r\n            // TODO\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.FixtureParticleSet = FixtureParticleSet;\r\n    class ParticlePair {\r\n        constructor(particleA, particleB) {\r\n            this.first = b2_invalidParticleIndex;\r\n            this.second = b2_invalidParticleIndex;\r\n            this.first = particleA;\r\n            this.second = particleB;\r\n        }\r\n    }\r\n    b2ParticleSystem.ParticlePair = ParticlePair;\r\n    class b2ParticlePairSet extends b2ParticleSystem.FixedSetAllocator {\r\n        Initialize(contactBuffer, flagsBuffer) {\r\n            // TODO\r\n        }\r\n        Find(pair) {\r\n            // TODO\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.b2ParticlePairSet = b2ParticlePairSet;\r\n    class ConnectionFilter {\r\n        /**\r\n         * Is the particle necessary for connection?\r\n         * A pair or a triad should contain at least one 'necessary'\r\n         * particle.\r\n         */\r\n        IsNecessary(index) {\r\n            return true;\r\n        }\r\n        /**\r\n         * An additional condition for creating a pair.\r\n         */\r\n        ShouldCreatePair(a, b) {\r\n            return true;\r\n        }\r\n        /**\r\n         * An additional condition for creating a triad.\r\n         */\r\n        ShouldCreateTriad(a, b, c) {\r\n            return true;\r\n        }\r\n    }\r\n    b2ParticleSystem.ConnectionFilter = ConnectionFilter;\r\n    class DestroyParticlesInShapeCallback extends b2QueryCallback {\r\n        constructor(system, shape, xf, callDestructionListener) {\r\n            super();\r\n            this.m_callDestructionListener = false;\r\n            this.m_destroyed = 0;\r\n            this.m_system = system;\r\n            this.m_shape = shape;\r\n            this.m_xf = xf;\r\n            this.m_callDestructionListener = callDestructionListener;\r\n            this.m_destroyed = 0;\r\n        }\r\n        ReportFixture(fixture) {\r\n            return false;\r\n        }\r\n        ReportParticle(particleSystem, index) {\r\n            if (particleSystem !== this.m_system)\r\n                return false;\r\n            b2Assert(index >= 0 && index < this.m_system.m_count);\r\n            if (this.m_shape.TestPoint(this.m_xf, this.m_system.m_positionBuffer.data[index])) {\r\n                this.m_system.DestroyParticle(index, this.m_callDestructionListener);\r\n                this.m_destroyed++;\r\n            }\r\n            return true;\r\n        }\r\n        Destroyed() {\r\n            return this.m_destroyed;\r\n        }\r\n    }\r\n    b2ParticleSystem.DestroyParticlesInShapeCallback = DestroyParticlesInShapeCallback;\r\n    class JoinParticleGroupsFilter extends b2ParticleSystem.ConnectionFilter {\r\n        constructor(threshold) {\r\n            super();\r\n            this.m_threshold = 0;\r\n            this.m_threshold = threshold;\r\n        }\r\n        /**\r\n         * An additional condition for creating a pair.\r\n         */\r\n        ShouldCreatePair(a, b) {\r\n            return (a < this.m_threshold && this.m_threshold <= b) ||\r\n                (b < this.m_threshold && this.m_threshold <= a);\r\n        }\r\n        /**\r\n         * An additional condition for creating a triad.\r\n         */\r\n        ShouldCreateTriad(a, b, c) {\r\n            return (a < this.m_threshold || b < this.m_threshold || c < this.m_threshold) &&\r\n                (this.m_threshold <= a || this.m_threshold <= b || this.m_threshold <= c);\r\n        }\r\n    }\r\n    b2ParticleSystem.JoinParticleGroupsFilter = JoinParticleGroupsFilter;\r\n    class CompositeShape extends b2Shape {\r\n        constructor(shapes, shapeCount = shapes.length) {\r\n            super(b2ShapeType.e_unknown, 0);\r\n            this.m_shapeCount = 0;\r\n            this.m_shapes = shapes;\r\n            this.m_shapeCount = shapeCount;\r\n        }\r\n        Clone() {\r\n            b2Assert(false);\r\n            throw new Error();\r\n        }\r\n        GetChildCount() {\r\n            return 1;\r\n        }\r\n        /**\r\n         * @see b2Shape::TestPoint\r\n         */\r\n        TestPoint(xf, p) {\r\n            for (let i = 0; i < this.m_shapeCount; i++) {\r\n                if (this.m_shapes[i].TestPoint(xf, p)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeDistance\r\n         */\r\n        ComputeDistance(xf, p, normal, childIndex) {\r\n            b2Assert(false);\r\n            return 0;\r\n        }\r\n        /**\r\n         * Implement b2Shape.\r\n         */\r\n        RayCast(output, input, xf, childIndex) {\r\n            b2Assert(false);\r\n            return false;\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeAABB\r\n         */\r\n        ComputeAABB(aabb, xf, childIndex) {\r\n            let s_subaabb = new b2AABB();\r\n            aabb.lowerBound.x = +b2_maxFloat;\r\n            aabb.lowerBound.y = +b2_maxFloat;\r\n            aabb.upperBound.x = -b2_maxFloat;\r\n            aabb.upperBound.y = -b2_maxFloat;\r\n            b2Assert(childIndex === 0);\r\n            for (let i = 0; i < this.m_shapeCount; i++) {\r\n                let childCount = this.m_shapes[i].GetChildCount();\r\n                for (let j = 0; j < childCount; j++) {\r\n                    let subaabb = s_subaabb;\r\n                    this.m_shapes[i].ComputeAABB(subaabb, xf, j);\r\n                    aabb.Combine1(subaabb);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeMass\r\n         */\r\n        ComputeMass(massData, density) {\r\n            b2Assert(false);\r\n        }\r\n        SetupDistanceProxy(proxy, index) {\r\n            b2Assert(false);\r\n        }\r\n        ComputeSubmergedArea(normal, offset, xf, c) {\r\n            b2Assert(false);\r\n            return 0;\r\n        }\r\n        Dump(log) {\r\n            b2Assert(false);\r\n        }\r\n    }\r\n    b2ParticleSystem.CompositeShape = CompositeShape;\r\n    class ReactiveFilter extends b2ParticleSystem.ConnectionFilter {\r\n        constructor(flagsBuffer) {\r\n            super();\r\n            this.m_flagsBuffer = flagsBuffer;\r\n        }\r\n        IsNecessary(index) {\r\n            return (this.m_flagsBuffer.data[index] & b2ParticleFlag.b2_reactiveParticle) !== 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.ReactiveFilter = ReactiveFilter;\r\n    class UpdateBodyContactsCallback extends b2FixtureParticleQueryCallback {\r\n        constructor(system, contactFilter) {\r\n            super(system); // base class constructor\r\n            this.m_contactFilter = contactFilter;\r\n        }\r\n        ShouldCollideFixtureParticle(fixture, particleSystem, particleIndex) {\r\n            // Call the contact filter if it's set, to determine whether to\r\n            // filter this contact.  Returns true if contact calculations should\r\n            // be performed, false otherwise.\r\n            if (this.m_contactFilter) {\r\n                let flags = this.m_system.GetFlagsBuffer();\r\n                if (flags[particleIndex] & b2ParticleFlag.b2_fixtureContactFilterParticle) {\r\n                    return this.m_contactFilter.ShouldCollideFixtureParticle(fixture, this.m_system, particleIndex);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        ReportFixtureAndParticle(fixture, childIndex, a) {\r\n            let s_n = b2ParticleSystem.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n;\r\n            let s_rp = b2ParticleSystem.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp;\r\n            let ap = this.m_system.m_positionBuffer.data[a];\r\n            let n = s_n;\r\n            let d = fixture.ComputeDistance(ap, n, childIndex);\r\n            if (d < this.m_system.m_particleDiameter && this.ShouldCollideFixtureParticle(fixture, this.m_system, a)) {\r\n                let b = fixture.GetBody();\r\n                let bp = b.GetWorldCenter();\r\n                let bm = b.GetMass();\r\n                let bI = b.GetInertia() - bm * b.GetLocalCenter().LengthSquared();\r\n                let invBm = bm > 0 ? 1 / bm : 0;\r\n                let invBI = bI > 0 ? 1 / bI : 0;\r\n                let invAm = this.m_system.m_flagsBuffer.data[a] &\r\n                    b2ParticleFlag.b2_wallParticle ? 0 : this.m_system.GetParticleInvMass();\r\n                ///b2Vec2 rp = ap - bp;\r\n                let rp = b2Vec2.SubVV(ap, bp, s_rp);\r\n                let rpn = b2Vec2.CrossVV(rp, n);\r\n                let invM = invAm + invBm + invBI * rpn * rpn;\r\n                ///b2ParticleBodyContact& contact = m_system.m_bodyContactBuffer.Append();\r\n                let contact = this.m_system.m_bodyContactBuffer.data[this.m_system.m_bodyContactBuffer.Append()];\r\n                contact.index = a;\r\n                contact.body = b;\r\n                contact.fixture = fixture;\r\n                contact.weight = 1 - d * this.m_system.m_inverseDiameter;\r\n                ///contact.normal = -n;\r\n                contact.normal.Copy(n.SelfNeg());\r\n                contact.mass = invM > 0 ? 1 / invM : 0;\r\n                this.m_system.DetectStuckParticle(a);\r\n            }\r\n        }\r\n    }\r\n    UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n = new b2Vec2();\r\n    UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp = new b2Vec2();\r\n    b2ParticleSystem.UpdateBodyContactsCallback = UpdateBodyContactsCallback;\r\n    class SolveCollisionCallback extends b2FixtureParticleQueryCallback {\r\n        constructor(system, step) {\r\n            super(system); // base class constructor\r\n            this.m_step = step;\r\n        }\r\n        ReportFixtureAndParticle(fixture, childIndex, a) {\r\n            let s_p1 = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_p1;\r\n            let s_output = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_output;\r\n            let s_input = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_input;\r\n            let s_p = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_p;\r\n            let s_v = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_v;\r\n            let s_f = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_f;\r\n            let body = fixture.GetBody();\r\n            let ap = this.m_system.m_positionBuffer.data[a];\r\n            let av = this.m_system.m_velocityBuffer.data[a];\r\n            let output = s_output;\r\n            let input = s_input;\r\n            if (this.m_system.m_iterationIndex === 0) {\r\n                // Put 'ap' in the local space of the previous frame\r\n                ///b2Vec2 p1 = b2MulT(body.m_xf0, ap);\r\n                let p1 = b2Transform.MulTXV(body.m_xf0, ap, s_p1);\r\n                if (fixture.GetShape().GetType() === b2ShapeType.e_circleShape) {\r\n                    // Make relative to the center of the circle\r\n                    ///p1 -= body.GetLocalCenter();\r\n                    p1.SelfSub(body.GetLocalCenter());\r\n                    // Re-apply rotation about the center of the circle\r\n                    ///p1 = b2Mul(body.m_xf0.q, p1);\r\n                    b2Rot.MulRV(body.m_xf0.q, p1, p1);\r\n                    // Subtract rotation of the current frame\r\n                    ///p1 = b2MulT(body.m_xf.q, p1);\r\n                    b2Rot.MulTRV(body.m_xf.q, p1, p1);\r\n                    // Return to local space\r\n                    ///p1 += body.GetLocalCenter();\r\n                    p1.SelfAdd(body.GetLocalCenter());\r\n                }\r\n                // Return to global space and apply rotation of current frame\r\n                ///input.p1 = b2Mul(body.m_xf, p1);\r\n                b2Transform.MulXV(body.m_xf, p1, input.p1);\r\n            }\r\n            else {\r\n                ///input.p1 = ap;\r\n                input.p1.Copy(ap);\r\n            }\r\n            ///input.p2 = ap + m_step.dt * av;\r\n            b2Vec2.AddVMulSV(ap, this.m_step.dt, av, input.p2);\r\n            input.maxFraction = 1;\r\n            if (fixture.RayCast(output, input, childIndex)) {\r\n                let n = output.normal;\r\n                ///b2Vec2 p = (1 - output.fraction) * input.p1 + output.fraction * input.p2 + b2_linearSlop * n;\r\n                let p = s_p;\r\n                p.x = (1 - output.fraction) * input.p1.x + output.fraction * input.p2.x + b2_linearSlop * n.x;\r\n                p.y = (1 - output.fraction) * input.p1.y + output.fraction * input.p2.y + b2_linearSlop * n.y;\r\n                ///b2Vec2 v = m_step.inv_dt * (p - ap);\r\n                let v = s_v;\r\n                v.x = this.m_step.inv_dt * (p.x - ap.x);\r\n                v.y = this.m_step.inv_dt * (p.y - ap.y);\r\n                ///m_system.m_velocityBuffer.data[a] = v;\r\n                this.m_system.m_velocityBuffer.data[a].Copy(v);\r\n                ///b2Vec2 f = m_step.inv_dt * m_system.GetParticleMass() * (av - v);\r\n                let f = s_f;\r\n                f.x = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.x - v.x);\r\n                f.y = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.y - v.y);\r\n                this.m_system.ParticleApplyForce(a, f);\r\n            }\r\n        }\r\n        ReportParticle(system, index) {\r\n            return false;\r\n        }\r\n    }\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_p1 = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_output = new b2RayCastOutput();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_input = new b2RayCastInput();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_p = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_v = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_f = new b2Vec2();\r\n    b2ParticleSystem.SolveCollisionCallback = SolveCollisionCallback;\r\n})(b2ParticleSystem || (b2ParticleSystem = {}));\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_epsilon, b2_linearSlop, b2_maxSubSteps, b2_maxTOIContacts } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Vec2, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2Color, b2DrawFlags } from \"../Common/b2Draw\";\r\nimport { b2AABB, b2RayCastInput, b2RayCastOutput, b2TestOverlapShape } from \"../Collision/b2Collision\";\r\nimport { b2TimeOfImpact, b2TOIInput, b2TOIOutput, b2TOIOutputState } from \"../Collision/b2TimeOfImpact\";\r\nimport { b2ShapeType } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2JointType } from \"./Joints/b2Joint\";\r\nimport { b2JointFactory } from \"./Joints/b2JointFactory\";\r\nimport { b2Body, b2BodyType } from \"./b2Body\";\r\nimport { b2ContactManager } from \"./b2ContactManager\";\r\nimport { b2Island } from \"./b2Island\";\r\nimport { b2Profile, b2TimeStep } from \"./b2TimeStep\";\r\nimport { b2QueryCallback } from \"./b2WorldCallbacks\";\r\nimport { b2RayCastCallback } from \"./b2WorldCallbacks\";\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_maxFloat } from \"../Common/b2Settings\";\r\nimport { b2CalculateParticleIterations } from \"../Particle/b2Particle\";\r\nimport { b2ParticleSystem } from \"../Particle/b2ParticleSystem\";\r\n// #endif\r\n/// The world class manages all physics entities, dynamic simulation,\r\n/// and asynchronous queries. The world also contains efficient memory\r\n/// management facilities.\r\nexport class b2World {\r\n    // #endif\r\n    /// Construct a world object.\r\n    /// @param gravity the world gravity vector.\r\n    constructor(gravity) {\r\n        // b2BlockAllocator m_blockAllocator;\r\n        // b2StackAllocator m_stackAllocator;\r\n        this.m_newFixture = false;\r\n        this.m_locked = false;\r\n        this.m_clearForces = true;\r\n        this.m_contactManager = new b2ContactManager();\r\n        this.m_bodyList = null;\r\n        this.m_jointList = null;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_particleSystemList = null;\r\n        // #endif\r\n        this.m_bodyCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_gravity = new b2Vec2();\r\n        this.m_allowSleep = true;\r\n        this.m_destructionListener = null;\r\n        this.m_debugDraw = null;\r\n        // This is used to compute the time step ratio to\r\n        // support a variable time step.\r\n        this.m_inv_dt0 = 0;\r\n        // These are for debugging the solver.\r\n        this.m_warmStarting = true;\r\n        this.m_continuousPhysics = true;\r\n        this.m_subStepping = false;\r\n        this.m_stepComplete = true;\r\n        this.m_profile = new b2Profile();\r\n        this.m_island = new b2Island();\r\n        this.s_stack = [];\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        this.m_gravity.Copy(gravity);\r\n    }\r\n    /// Register a destruction listener. The listener is owned by you and must\r\n    /// remain in scope.\r\n    SetDestructionListener(listener) {\r\n        this.m_destructionListener = listener;\r\n    }\r\n    /// Register a contact filter to provide specific control over collision.\r\n    /// Otherwise the default filter is used (b2_defaultFilter). The listener is\r\n    /// owned by you and must remain in scope.\r\n    SetContactFilter(filter) {\r\n        this.m_contactManager.m_contactFilter = filter;\r\n    }\r\n    /// Register a contact event listener. The listener is owned by you and must\r\n    /// remain in scope.\r\n    SetContactListener(listener) {\r\n        this.m_contactManager.m_contactListener = listener;\r\n    }\r\n    /// Register a routine for debug drawing. The debug draw functions are called\r\n    /// inside with b2World::DrawDebugData method. The debug draw object is owned\r\n    /// by you and must remain in scope.\r\n    SetDebugDraw(debugDraw) {\r\n        this.m_debugDraw = debugDraw;\r\n    }\r\n    /// Create a rigid body given a definition. No reference to the definition\r\n    /// is retained.\r\n    /// @warning This function is locked during callbacks.\r\n    CreateBody(def) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return null;\r\n        }\r\n        const b = new b2Body(def, this);\r\n        // Add to world doubly linked list.\r\n        b.m_prev = null;\r\n        b.m_next = this.m_bodyList;\r\n        if (this.m_bodyList) {\r\n            this.m_bodyList.m_prev = b;\r\n        }\r\n        this.m_bodyList = b;\r\n        ++this.m_bodyCount;\r\n        return b;\r\n    }\r\n    /// Destroy a rigid body given a definition. No reference to the definition\r\n    /// is retained. This function is locked during callbacks.\r\n    /// @warning This automatically deletes all associated shapes and joints.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyBody(b) {\r\n        ///b2Assert(this.m_bodyCount > 0);\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return;\r\n        }\r\n        // Delete the attached joints.\r\n        let je = b.m_jointList;\r\n        while (je) {\r\n            const je0 = je;\r\n            je = je.next;\r\n            if (this.m_destructionListener) {\r\n                this.m_destructionListener.SayGoodbyeJoint(je0.joint);\r\n            }\r\n            this.DestroyJoint(je0.joint);\r\n            b.m_jointList = je;\r\n        }\r\n        b.m_jointList = null;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        // @see b2Controller list\r\n        let coe = b.m_controllerList;\r\n        while (coe) {\r\n            const coe0 = coe;\r\n            coe = coe.nextController;\r\n            coe0.controller.RemoveBody(b);\r\n        }\r\n        // #endif\r\n        // Delete the attached contacts.\r\n        let ce = b.m_contactList;\r\n        while (ce) {\r\n            const ce0 = ce;\r\n            ce = ce.next;\r\n            this.m_contactManager.Destroy(ce0.contact);\r\n        }\r\n        b.m_contactList = null;\r\n        // Delete the attached fixtures. This destroys broad-phase proxies.\r\n        let f = b.m_fixtureList;\r\n        while (f) {\r\n            const f0 = f;\r\n            f = f.m_next;\r\n            if (this.m_destructionListener) {\r\n                this.m_destructionListener.SayGoodbyeFixture(f0);\r\n            }\r\n            f0.DestroyProxies(this.m_contactManager.m_broadPhase);\r\n            f0.Destroy();\r\n            b.m_fixtureList = f;\r\n            b.m_fixtureCount -= 1;\r\n        }\r\n        b.m_fixtureList = null;\r\n        b.m_fixtureCount = 0;\r\n        // Remove world body list.\r\n        if (b.m_prev) {\r\n            b.m_prev.m_next = b.m_next;\r\n        }\r\n        if (b.m_next) {\r\n            b.m_next.m_prev = b.m_prev;\r\n        }\r\n        if (b === this.m_bodyList) {\r\n            this.m_bodyList = b.m_next;\r\n        }\r\n        --this.m_bodyCount;\r\n    }\r\n    /// Create a joint to constrain bodies together. No reference to the definition\r\n    /// is retained. This may cause the connected bodies to cease colliding.\r\n    /// @warning This function is locked during callbacks.\r\n    CreateJoint(def) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return null;\r\n        }\r\n        const j = b2JointFactory.Create(def, null);\r\n        // Connect to the world list.\r\n        j.m_prev = null;\r\n        j.m_next = this.m_jointList;\r\n        if (this.m_jointList) {\r\n            this.m_jointList.m_prev = j;\r\n        }\r\n        this.m_jointList = j;\r\n        ++this.m_jointCount;\r\n        // Connect to the bodies' doubly linked lists.\r\n        // j.m_edgeA.joint = j;\r\n        // j.m_edgeA.other = j.m_bodyB;\r\n        j.m_edgeA.prev = null;\r\n        j.m_edgeA.next = j.m_bodyA.m_jointList;\r\n        if (j.m_bodyA.m_jointList)\r\n            j.m_bodyA.m_jointList.prev = j.m_edgeA;\r\n        j.m_bodyA.m_jointList = j.m_edgeA;\r\n        // j.m_edgeB.joint = j;\r\n        // j.m_edgeB.other = j.m_bodyA;\r\n        j.m_edgeB.prev = null;\r\n        j.m_edgeB.next = j.m_bodyB.m_jointList;\r\n        if (j.m_bodyB.m_jointList)\r\n            j.m_bodyB.m_jointList.prev = j.m_edgeB;\r\n        j.m_bodyB.m_jointList = j.m_edgeB;\r\n        const bodyA = def.bodyA;\r\n        const bodyB = def.bodyB;\r\n        // If the joint prevents collisions, then flag any contacts for filtering.\r\n        if (!def.collideConnected) {\r\n            let edge = bodyB.GetContactList();\r\n            while (edge) {\r\n                if (edge.other === bodyA) {\r\n                    // Flag the contact for filtering at the next time step (where either\r\n                    // body is awake).\r\n                    edge.contact.FlagForFiltering();\r\n                }\r\n                edge = edge.next;\r\n            }\r\n        }\r\n        // Note: creating a joint doesn't wake the bodies.\r\n        return j;\r\n    }\r\n    /// Destroy a joint. This may cause the connected bodies to begin colliding.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyJoint(j) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return;\r\n        }\r\n        const collideConnected = j.m_collideConnected;\r\n        // Remove from the doubly linked list.\r\n        if (j.m_prev) {\r\n            j.m_prev.m_next = j.m_next;\r\n        }\r\n        if (j.m_next) {\r\n            j.m_next.m_prev = j.m_prev;\r\n        }\r\n        if (j === this.m_jointList) {\r\n            this.m_jointList = j.m_next;\r\n        }\r\n        // Disconnect from island graph.\r\n        const bodyA = j.m_bodyA;\r\n        const bodyB = j.m_bodyB;\r\n        // Wake up connected bodies.\r\n        bodyA.SetAwake(true);\r\n        bodyB.SetAwake(true);\r\n        // Remove from body 1.\r\n        if (j.m_edgeA.prev) {\r\n            j.m_edgeA.prev.next = j.m_edgeA.next;\r\n        }\r\n        if (j.m_edgeA.next) {\r\n            j.m_edgeA.next.prev = j.m_edgeA.prev;\r\n        }\r\n        if (j.m_edgeA === bodyA.m_jointList) {\r\n            bodyA.m_jointList = j.m_edgeA.next;\r\n        }\r\n        j.m_edgeA.prev = null;\r\n        j.m_edgeA.next = null;\r\n        // Remove from body 2\r\n        if (j.m_edgeB.prev) {\r\n            j.m_edgeB.prev.next = j.m_edgeB.next;\r\n        }\r\n        if (j.m_edgeB.next) {\r\n            j.m_edgeB.next.prev = j.m_edgeB.prev;\r\n        }\r\n        if (j.m_edgeB === bodyB.m_jointList) {\r\n            bodyB.m_jointList = j.m_edgeB.next;\r\n        }\r\n        j.m_edgeB.prev = null;\r\n        j.m_edgeB.next = null;\r\n        b2JointFactory.Destroy(j, null);\r\n        ///b2Assert(this.m_jointCount > 0);\r\n        --this.m_jointCount;\r\n        // If the joint prevents collisions, then flag any contacts for filtering.\r\n        if (!collideConnected) {\r\n            let edge = bodyB.GetContactList();\r\n            while (edge) {\r\n                if (edge.other === bodyA) {\r\n                    // Flag the contact for filtering at the next time step (where either\r\n                    // body is awake).\r\n                    edge.contact.FlagForFiltering();\r\n                }\r\n                edge = edge.next;\r\n            }\r\n        }\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    CreateParticleSystem(def) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return null;\r\n        }\r\n        const p = new b2ParticleSystem(def, this);\r\n        // Add to world doubly linked list.\r\n        p.m_prev = null;\r\n        p.m_next = this.m_particleSystemList;\r\n        if (this.m_particleSystemList) {\r\n            this.m_particleSystemList.m_prev = p;\r\n        }\r\n        this.m_particleSystemList = p;\r\n        return p;\r\n    }\r\n    DestroyParticleSystem(p) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return;\r\n        }\r\n        // Remove world particleSystem list.\r\n        if (p.m_prev) {\r\n            p.m_prev.m_next = p.m_next;\r\n        }\r\n        if (p.m_next) {\r\n            p.m_next.m_prev = p.m_prev;\r\n        }\r\n        if (p === this.m_particleSystemList) {\r\n            this.m_particleSystemList = p.m_next;\r\n        }\r\n    }\r\n    CalculateReasonableParticleIterations(timeStep) {\r\n        if (this.m_particleSystemList === null) {\r\n            return 1;\r\n        }\r\n        function GetSmallestRadius(world) {\r\n            let smallestRadius = b2_maxFloat;\r\n            for (let system = world.GetParticleSystemList(); system !== null; system = system.m_next) {\r\n                smallestRadius = b2Min(smallestRadius, system.GetRadius());\r\n            }\r\n            return smallestRadius;\r\n        }\r\n        // Use the smallest radius, since that represents the worst-case.\r\n        return b2CalculateParticleIterations(this.m_gravity.Length(), GetSmallestRadius(this), timeStep);\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    Step(dt, velocityIterations, positionIterations, particleIterations = this.CalculateReasonableParticleIterations(dt)) {\r\n        // #else\r\n        // public Step(dt: number, velocityIterations: number, positionIterations: number): void {\r\n        // #endif\r\n        const stepTimer = b2World.Step_s_stepTimer.Reset();\r\n        // If new fixtures were added, we need to find the new contacts.\r\n        if (this.m_newFixture) {\r\n            this.m_contactManager.FindNewContacts();\r\n            this.m_newFixture = false;\r\n        }\r\n        this.m_locked = true;\r\n        const step = b2World.Step_s_step;\r\n        step.dt = dt;\r\n        step.velocityIterations = velocityIterations;\r\n        step.positionIterations = positionIterations;\r\n        // #if B2_ENABLE_PARTICLE\r\n        step.particleIterations = particleIterations;\r\n        // #endif\r\n        if (dt > 0) {\r\n            step.inv_dt = 1 / dt;\r\n        }\r\n        else {\r\n            step.inv_dt = 0;\r\n        }\r\n        step.dtRatio = this.m_inv_dt0 * dt;\r\n        step.warmStarting = this.m_warmStarting;\r\n        // Update contacts. This is where some contacts are destroyed.\r\n        const timer = b2World.Step_s_timer.Reset();\r\n        this.m_contactManager.Collide();\r\n        this.m_profile.collide = timer.GetMilliseconds();\r\n        // Integrate velocities, solve velocity constraints, and integrate positions.\r\n        if (this.m_stepComplete && step.dt > 0) {\r\n            const timer = b2World.Step_s_timer.Reset();\r\n            // #if B2_ENABLE_PARTICLE\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                p.Solve(step); // Particle Simulation\r\n            }\r\n            // #endif\r\n            this.Solve(step);\r\n            this.m_profile.solve = timer.GetMilliseconds();\r\n        }\r\n        // Handle TOI events.\r\n        if (this.m_continuousPhysics && step.dt > 0) {\r\n            const timer = b2World.Step_s_timer.Reset();\r\n            this.SolveTOI(step);\r\n            this.m_profile.solveTOI = timer.GetMilliseconds();\r\n        }\r\n        if (step.dt > 0) {\r\n            this.m_inv_dt0 = step.inv_dt;\r\n        }\r\n        if (this.m_clearForces) {\r\n            this.ClearForces();\r\n        }\r\n        this.m_locked = false;\r\n        this.m_profile.step = stepTimer.GetMilliseconds();\r\n    }\r\n    /// Manually clear the force buffer on all bodies. By default, forces are cleared automatically\r\n    /// after each call to Step. The default behavior is modified by calling SetAutoClearForces.\r\n    /// The purpose of this function is to support sub-stepping. Sub-stepping is often used to maintain\r\n    /// a fixed sized time step under a variable frame-rate.\r\n    /// When you perform sub-stepping you will disable auto clearing of forces and instead call\r\n    /// ClearForces after all sub-steps are complete in one pass of your game loop.\r\n    /// @see SetAutoClearForces\r\n    ClearForces() {\r\n        for (let body = this.m_bodyList; body; body = body.m_next) {\r\n            body.m_force.SetZero();\r\n            body.m_torque = 0;\r\n        }\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    DrawParticleSystem(system) {\r\n        const particleCount = system.GetParticleCount();\r\n        if (particleCount) {\r\n            const radius = system.GetRadius();\r\n            const positionBuffer = system.GetPositionBuffer();\r\n            if (system.m_colorBuffer.data) {\r\n                const colorBuffer = system.GetColorBuffer();\r\n                this.m_debugDraw.DrawParticles(positionBuffer, radius, colorBuffer, particleCount);\r\n            }\r\n            else {\r\n                this.m_debugDraw.DrawParticles(positionBuffer, radius, null, particleCount);\r\n            }\r\n        }\r\n    }\r\n    DrawDebugData() {\r\n        if (this.m_debugDraw === null) {\r\n            return;\r\n        }\r\n        const flags = this.m_debugDraw.GetFlags();\r\n        const color = b2World.DrawDebugData_s_color.SetRGB(0, 0, 0);\r\n        if (flags & b2DrawFlags.e_shapeBit) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                const xf = b.m_xf;\r\n                this.m_debugDraw.PushTransform(xf);\r\n                for (let f = b.GetFixtureList(); f; f = f.m_next) {\r\n                    if (!b.IsActive()) {\r\n                        color.SetRGB(0.5, 0.5, 0.3);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                        color.SetRGB(0.5, 0.9, 0.5);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (b.GetType() === b2BodyType.b2_kinematicBody) {\r\n                        color.SetRGB(0.5, 0.5, 0.9);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (!b.IsAwake()) {\r\n                        color.SetRGB(0.6, 0.6, 0.6);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else {\r\n                        color.SetRGB(0.9, 0.7, 0.7);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                }\r\n                this.m_debugDraw.PopTransform(xf);\r\n            }\r\n        }\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (flags & b2DrawFlags.e_particleBit) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                this.DrawParticleSystem(p);\r\n            }\r\n        }\r\n        // #endif\r\n        if (flags & b2DrawFlags.e_jointBit) {\r\n            for (let j = this.m_jointList; j; j = j.m_next) {\r\n                this.DrawJoint(j);\r\n            }\r\n        }\r\n        /*\r\n        if (flags & b2DrawFlags.e_pairBit) {\r\n          color.SetRGB(0.3, 0.9, 0.9);\r\n          for (let contact = this.m_contactManager.m_contactList; contact; contact = contact.m_next) {\r\n            const fixtureA = contact.GetFixtureA();\r\n            const fixtureB = contact.GetFixtureB();\r\n    \r\n            const cA = fixtureA.GetAABB().GetCenter();\r\n            const cB = fixtureB.GetAABB().GetCenter();\r\n    \r\n            this.m_debugDraw.DrawSegment(cA, cB, color);\r\n          }\r\n        }\r\n        */\r\n        if (flags & b2DrawFlags.e_aabbBit) {\r\n            color.SetRGB(0.9, 0.3, 0.9);\r\n            const bp = this.m_contactManager.m_broadPhase;\r\n            const vs = b2World.DrawDebugData_s_vs;\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                if (!b.IsActive()) {\r\n                    continue;\r\n                }\r\n                for (let f = b.GetFixtureList(); f; f = f.m_next) {\r\n                    for (let i = 0; i < f.m_proxyCount; ++i) {\r\n                        const proxy = f.m_proxies[i];\r\n                        const aabb = bp.GetFatAABB(proxy.treeNode);\r\n                        vs[0].Set(aabb.lowerBound.x, aabb.lowerBound.y);\r\n                        vs[1].Set(aabb.upperBound.x, aabb.lowerBound.y);\r\n                        vs[2].Set(aabb.upperBound.x, aabb.upperBound.y);\r\n                        vs[3].Set(aabb.lowerBound.x, aabb.upperBound.y);\r\n                        this.m_debugDraw.DrawPolygon(vs, 4, color);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (flags & b2DrawFlags.e_centerOfMassBit) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                const xf = b2World.DrawDebugData_s_xf;\r\n                xf.q.Copy(b.m_xf.q);\r\n                xf.p.Copy(b.GetWorldCenter());\r\n                this.m_debugDraw.DrawTransform(xf);\r\n            }\r\n        }\r\n        // #if B2_ENABLE_CONTROLLER  \r\n        // @see b2Controller list\r\n        if (flags & b2DrawFlags.e_controllerBit) {\r\n            for (let c = this.m_controllerList; c; c = c.m_next) {\r\n                c.Draw(this.m_debugDraw);\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    /// Query the world for all fixtures that potentially overlap the\r\n    /// provided AABB.\r\n    /// @param callback a user implemented callback class.\r\n    /// @param aabb the query box.\r\n    QueryAABB(callback, aabb) {\r\n        const broadPhase = this.m_contactManager.m_broadPhase;\r\n        function WorldQueryWrapper(proxy) {\r\n            const fixture_proxy = broadPhase.GetUserData(proxy);\r\n            ///b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            ///const index: number = fixture_proxy.childIndex;\r\n            if (callback instanceof b2QueryCallback) {\r\n                return callback.ReportFixture(fixture);\r\n            }\r\n            else /* if (typeof(callback) === 'function') */ {\r\n                return callback(fixture);\r\n            }\r\n        }\r\n        broadPhase.Query(WorldQueryWrapper, aabb);\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryAABB(callback, aabb);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryShape(callback, shape, transform) {\r\n        const broadPhase = this.m_contactManager.m_broadPhase;\r\n        function WorldQueryWrapper(proxy) {\r\n            const fixture_proxy = broadPhase.GetUserData(proxy);\r\n            ///b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            ///const index: number = fixture_proxy.childIndex;\r\n            if (b2TestOverlapShape(shape, 0, fixture.GetShape(), 0, transform, fixture.GetBody().GetTransform())) {\r\n                if (callback instanceof b2QueryCallback) {\r\n                    return callback.ReportFixture(fixture);\r\n                }\r\n                else /* if (typeof(callback) === 'function') */ {\r\n                    return callback(fixture);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        const aabb = b2World.QueryShape_s_aabb;\r\n        shape.ComputeAABB(aabb, transform, 0); // TODO\r\n        broadPhase.Query(WorldQueryWrapper, aabb);\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryAABB(callback, aabb);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryPoint(callback, point) {\r\n        const broadPhase = this.m_contactManager.m_broadPhase;\r\n        function WorldQueryWrapper(proxy) {\r\n            const fixture_proxy = broadPhase.GetUserData(proxy);\r\n            ///b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            ///const index: number = fixture_proxy.childIndex;\r\n            if (fixture.TestPoint(point)) {\r\n                if (callback instanceof b2QueryCallback) {\r\n                    return callback.ReportFixture(fixture);\r\n                }\r\n                else /* if (typeof(callback) === 'function') */ {\r\n                    return callback(fixture);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        const aabb = b2World.QueryPoint_s_aabb;\r\n        aabb.lowerBound.Set(point.x - b2_linearSlop, point.y - b2_linearSlop);\r\n        aabb.upperBound.Set(point.x + b2_linearSlop, point.y + b2_linearSlop);\r\n        broadPhase.Query(WorldQueryWrapper, aabb);\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryAABB(callback, aabb);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    RayCast(callback, point1, point2) {\r\n        const broadPhase = this.m_contactManager.m_broadPhase;\r\n        function WorldRayCastWrapper(input, proxy) {\r\n            const fixture_proxy = broadPhase.GetUserData(proxy);\r\n            ///b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            const index = fixture_proxy.childIndex;\r\n            const output = b2World.RayCast_s_output;\r\n            const hit = fixture.RayCast(output, input, index);\r\n            if (hit) {\r\n                const fraction = output.fraction;\r\n                const point = b2World.RayCast_s_point;\r\n                point.Set((1 - fraction) * point1.x + fraction * point2.x, (1 - fraction) * point1.y + fraction * point2.y);\r\n                if (callback instanceof b2RayCastCallback) {\r\n                    return callback.ReportFixture(fixture, point, output.normal, fraction);\r\n                }\r\n                else /* if (typeof(callback) === 'function') */ {\r\n                    return callback(fixture, point, output.normal, fraction);\r\n                }\r\n            }\r\n            return input.maxFraction;\r\n        }\r\n        const input = b2World.RayCast_s_input;\r\n        input.maxFraction = 1;\r\n        input.p1.Copy(point1);\r\n        input.p2.Copy(point2);\r\n        broadPhase.RayCast(WorldRayCastWrapper, input);\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2RayCastCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.RayCast(callback, point1, point2);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    RayCastOne(point1, point2) {\r\n        let result = null;\r\n        let min_fraction = 1;\r\n        function WorldRayCastOneWrapper(fixture, point, normal, fraction) {\r\n            if (fraction < min_fraction) {\r\n                min_fraction = fraction;\r\n                result = fixture;\r\n            }\r\n            return min_fraction;\r\n        }\r\n        this.RayCast(WorldRayCastOneWrapper, point1, point2);\r\n        return result;\r\n    }\r\n    RayCastAll(point1, point2, out = []) {\r\n        function WorldRayCastAllWrapper(fixture, point, normal, fraction) {\r\n            out.push(fixture);\r\n            return 1;\r\n        }\r\n        this.RayCast(WorldRayCastAllWrapper, point1, point2);\r\n        return out;\r\n    }\r\n    /// Get the world body list. With the returned body, use b2Body::GetNext to get\r\n    /// the next body in the world list. A NULL body indicates the end of the list.\r\n    /// @return the head of the world body list.\r\n    GetBodyList() {\r\n        return this.m_bodyList;\r\n    }\r\n    /// Get the world joint list. With the returned joint, use b2Joint::GetNext to get\r\n    /// the next joint in the world list. A NULL joint indicates the end of the list.\r\n    /// @return the head of the world joint list.\r\n    GetJointList() {\r\n        return this.m_jointList;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    GetParticleSystemList() {\r\n        return this.m_particleSystemList;\r\n    }\r\n    // #endif\r\n    /// Get the world contact list. With the returned contact, use b2Contact::GetNext to get\r\n    /// the next contact in the world list. A NULL contact indicates the end of the list.\r\n    /// @return the head of the world contact list.\r\n    /// @warning contacts are created and destroyed in the middle of a time step.\r\n    /// Use b2ContactListener to avoid missing contacts.\r\n    GetContactList() {\r\n        return this.m_contactManager.m_contactList;\r\n    }\r\n    /// Enable/disable sleep.\r\n    SetAllowSleeping(flag) {\r\n        if (flag === this.m_allowSleep) {\r\n            return;\r\n        }\r\n        this.m_allowSleep = flag;\r\n        if (!this.m_allowSleep) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                b.SetAwake(true);\r\n            }\r\n        }\r\n    }\r\n    GetAllowSleeping() {\r\n        return this.m_allowSleep;\r\n    }\r\n    /// Enable/disable warm starting. For testing.\r\n    SetWarmStarting(flag) {\r\n        this.m_warmStarting = flag;\r\n    }\r\n    GetWarmStarting() {\r\n        return this.m_warmStarting;\r\n    }\r\n    /// Enable/disable continuous physics. For testing.\r\n    SetContinuousPhysics(flag) {\r\n        this.m_continuousPhysics = flag;\r\n    }\r\n    GetContinuousPhysics() {\r\n        return this.m_continuousPhysics;\r\n    }\r\n    /// Enable/disable single stepped continuous physics. For testing.\r\n    SetSubStepping(flag) {\r\n        this.m_subStepping = flag;\r\n    }\r\n    GetSubStepping() {\r\n        return this.m_subStepping;\r\n    }\r\n    /// Get the number of broad-phase proxies.\r\n    GetProxyCount() {\r\n        return this.m_contactManager.m_broadPhase.GetProxyCount();\r\n    }\r\n    /// Get the number of bodies.\r\n    GetBodyCount() {\r\n        return this.m_bodyCount;\r\n    }\r\n    /// Get the number of joints.\r\n    GetJointCount() {\r\n        return this.m_jointCount;\r\n    }\r\n    /// Get the number of contacts (each may have 0 or more contact points).\r\n    GetContactCount() {\r\n        return this.m_contactManager.m_contactCount;\r\n    }\r\n    /// Get the height of the dynamic tree.\r\n    GetTreeHeight() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeHeight();\r\n    }\r\n    /// Get the balance of the dynamic tree.\r\n    GetTreeBalance() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeBalance();\r\n    }\r\n    /// Get the quality metric of the dynamic tree. The smaller the better.\r\n    /// The minimum is 1.\r\n    GetTreeQuality() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeQuality();\r\n    }\r\n    /// Change the global gravity vector.\r\n    SetGravity(gravity, wake = true) {\r\n        if (!b2Vec2.IsEqualToV(this.m_gravity, gravity)) {\r\n            this.m_gravity.Copy(gravity);\r\n            if (wake) {\r\n                for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                    b.SetAwake(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /// Get the global gravity vector.\r\n    GetGravity() {\r\n        return this.m_gravity;\r\n    }\r\n    /// Is the world locked (in the middle of a time step).\r\n    IsLocked() {\r\n        return this.m_locked;\r\n    }\r\n    /// Set flag to control automatic clearing of forces after each time step.\r\n    SetAutoClearForces(flag) {\r\n        this.m_clearForces = flag;\r\n    }\r\n    /// Get the flag that controls automatic clearing of forces after each time step.\r\n    GetAutoClearForces() {\r\n        return this.m_clearForces;\r\n    }\r\n    /// Shift the world origin. Useful for large worlds.\r\n    /// The body shift formula is: position -= newOrigin\r\n    /// @param newOrigin the new origin with respect to the old origin\r\n    ShiftOrigin(newOrigin) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return;\r\n        }\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_xf.p.SelfSub(newOrigin);\r\n            b.m_sweep.c0.SelfSub(newOrigin);\r\n            b.m_sweep.c.SelfSub(newOrigin);\r\n        }\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.ShiftOrigin(newOrigin);\r\n        }\r\n        this.m_contactManager.m_broadPhase.ShiftOrigin(newOrigin);\r\n    }\r\n    /// Get the contact manager for testing.\r\n    GetContactManager() {\r\n        return this.m_contactManager;\r\n    }\r\n    /// Get the current profile.\r\n    GetProfile() {\r\n        return this.m_profile;\r\n    }\r\n    /// Dump the world into the log file.\r\n    /// @warning this should be called outside of a time step.\r\n    Dump(log) {\r\n        if (this.m_locked) {\r\n            return;\r\n        }\r\n        log(\"const g: b2Vec2 = new b2Vec2(%.15f, %.15f);\\n\", this.m_gravity.x, this.m_gravity.y);\r\n        log(\"this.m_world.SetGravity(g);\\n\");\r\n        log(\"const bodies: b2Body[] = [];\\n\");\r\n        log(\"const joints: b2Joint[] = [];\\n\");\r\n        let i = 0;\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_islandIndex = i;\r\n            b.Dump(log);\r\n            ++i;\r\n        }\r\n        i = 0;\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.m_index = i;\r\n            ++i;\r\n        }\r\n        // First pass on joints, skip gear joints.\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            if (j.m_type === b2JointType.e_gearJoint) {\r\n                continue;\r\n            }\r\n            log(\"{\\n\");\r\n            j.Dump(log);\r\n            log(\"}\\n\");\r\n        }\r\n        // Second pass on joints, only gear joints.\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            if (j.m_type !== b2JointType.e_gearJoint) {\r\n                continue;\r\n            }\r\n            log(\"{\\n\");\r\n            j.Dump(log);\r\n            log(\"}\\n\");\r\n        }\r\n    }\r\n    DrawJoint(joint) {\r\n        const bodyA = joint.GetBodyA();\r\n        const bodyB = joint.GetBodyB();\r\n        const xf1 = bodyA.m_xf;\r\n        const xf2 = bodyB.m_xf;\r\n        const x1 = xf1.p;\r\n        const x2 = xf2.p;\r\n        const p1 = joint.GetAnchorA(b2World.DrawJoint_s_p1);\r\n        const p2 = joint.GetAnchorB(b2World.DrawJoint_s_p2);\r\n        const color = b2World.DrawJoint_s_color.SetRGB(0.5, 0.8, 0.8);\r\n        switch (joint.m_type) {\r\n            case b2JointType.e_distanceJoint:\r\n                this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                break;\r\n            case b2JointType.e_pulleyJoint:\r\n                {\r\n                    const pulley = joint;\r\n                    const s1 = pulley.GetGroundAnchorA();\r\n                    const s2 = pulley.GetGroundAnchorB();\r\n                    this.m_debugDraw.DrawSegment(s1, p1, color);\r\n                    this.m_debugDraw.DrawSegment(s2, p2, color);\r\n                    this.m_debugDraw.DrawSegment(s1, s2, color);\r\n                }\r\n                break;\r\n            case b2JointType.e_mouseJoint:\r\n                // don't draw this\r\n                this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                break;\r\n            default:\r\n                this.m_debugDraw.DrawSegment(x1, p1, color);\r\n                this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                this.m_debugDraw.DrawSegment(x2, p2, color);\r\n        }\r\n    }\r\n    DrawShape(fixture, color) {\r\n        const shape = fixture.GetShape();\r\n        switch (shape.m_type) {\r\n            case b2ShapeType.e_circleShape:\r\n                {\r\n                    const circle = shape;\r\n                    const center = circle.m_p;\r\n                    const radius = circle.m_radius;\r\n                    const axis = b2Vec2.UNITX;\r\n                    this.m_debugDraw.DrawSolidCircle(center, radius, axis, color);\r\n                }\r\n                break;\r\n            case b2ShapeType.e_edgeShape:\r\n                {\r\n                    const edge = shape;\r\n                    const v1 = edge.m_vertex1;\r\n                    const v2 = edge.m_vertex2;\r\n                    this.m_debugDraw.DrawSegment(v1, v2, color);\r\n                }\r\n                break;\r\n            case b2ShapeType.e_chainShape:\r\n                {\r\n                    const chain = shape;\r\n                    const count = chain.m_count;\r\n                    const vertices = chain.m_vertices;\r\n                    let v1 = vertices[0];\r\n                    this.m_debugDraw.DrawCircle(v1, 0.05, color);\r\n                    for (let i = 1; i < count; ++i) {\r\n                        const v2 = vertices[i];\r\n                        this.m_debugDraw.DrawSegment(v1, v2, color);\r\n                        this.m_debugDraw.DrawCircle(v2, 0.05, color);\r\n                        v1 = v2;\r\n                    }\r\n                }\r\n                break;\r\n            case b2ShapeType.e_polygonShape:\r\n                {\r\n                    const poly = shape;\r\n                    const vertexCount = poly.m_count;\r\n                    const vertices = poly.m_vertices;\r\n                    this.m_debugDraw.DrawSolidPolygon(vertices, vertexCount, color);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    Solve(step) {\r\n        // #if B2_ENABLE_PARTICLE\r\n        // update previous transforms\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_xf0.Copy(b.m_xf);\r\n        }\r\n        // #endif\r\n        // #if B2_ENABLE_CONTROLLER\r\n        // @see b2Controller list\r\n        for (let controller = this.m_controllerList; controller; controller = controller.m_next) {\r\n            controller.Step(step);\r\n        }\r\n        // #endif\r\n        this.m_profile.solveInit = 0;\r\n        this.m_profile.solveVelocity = 0;\r\n        this.m_profile.solvePosition = 0;\r\n        // Size the island for the worst case.\r\n        const island = this.m_island;\r\n        island.Initialize(this.m_bodyCount, this.m_contactManager.m_contactCount, this.m_jointCount, null, // this.m_stackAllocator,\r\n        this.m_contactManager.m_contactListener);\r\n        // Clear all the island flags.\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_islandFlag = false;\r\n        }\r\n        for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n            c.m_islandFlag = false;\r\n        }\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.m_islandFlag = false;\r\n        }\r\n        // Build and simulate all awake islands.\r\n        ///const stackSize: number = this.m_bodyCount;\r\n        const stack = this.s_stack;\r\n        for (let seed = this.m_bodyList; seed; seed = seed.m_next) {\r\n            if (seed.m_islandFlag) {\r\n                continue;\r\n            }\r\n            if (!seed.IsAwake() || !seed.IsActive()) {\r\n                continue;\r\n            }\r\n            // The seed can be dynamic or kinematic.\r\n            if (seed.GetType() === b2BodyType.b2_staticBody) {\r\n                continue;\r\n            }\r\n            // Reset island and stack.\r\n            island.Clear();\r\n            let stackCount = 0;\r\n            stack[stackCount++] = seed;\r\n            seed.m_islandFlag = true;\r\n            // Perform a depth first search (DFS) on the constraint graph.\r\n            while (stackCount > 0) {\r\n                // Grab the next body off the stack and add it to the island.\r\n                const b = stack[--stackCount];\r\n                ///b2Assert(b.IsActive());\r\n                island.AddBody(b);\r\n                // Make sure the body is awake.\r\n                b.SetAwake(true);\r\n                // To keep islands as small as possible, we don't\r\n                // propagate islands across static bodies.\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    continue;\r\n                }\r\n                // Search all contacts connected to this body.\r\n                for (let ce = b.m_contactList; ce; ce = ce.next) {\r\n                    const contact = ce.contact;\r\n                    // Has this contact already been added to an island?\r\n                    if (contact.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    // Is this contact solid and touching?\r\n                    if (!contact.IsEnabled() || !contact.IsTouching()) {\r\n                        continue;\r\n                    }\r\n                    // Skip sensors.\r\n                    const sensorA = contact.m_fixtureA.m_isSensor;\r\n                    const sensorB = contact.m_fixtureB.m_isSensor;\r\n                    if (sensorA || sensorB) {\r\n                        continue;\r\n                    }\r\n                    island.AddContact(contact);\r\n                    contact.m_islandFlag = true;\r\n                    const other = ce.other;\r\n                    // Was the other body already added to this island?\r\n                    if (other.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    ///b2Assert(stackCount < stackSize);\r\n                    stack[stackCount++] = other;\r\n                    other.m_islandFlag = true;\r\n                }\r\n                // Search all joints connect to this body.\r\n                for (let je = b.m_jointList; je; je = je.next) {\r\n                    if (je.joint.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    const other = je.other;\r\n                    // Don't simulate joints connected to inactive bodies.\r\n                    if (!other.IsActive()) {\r\n                        continue;\r\n                    }\r\n                    island.AddJoint(je.joint);\r\n                    je.joint.m_islandFlag = true;\r\n                    if (other.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    ///b2Assert(stackCount < stackSize);\r\n                    stack[stackCount++] = other;\r\n                    other.m_islandFlag = true;\r\n                }\r\n            }\r\n            const profile = new b2Profile();\r\n            island.Solve(profile, step, this.m_gravity, this.m_allowSleep);\r\n            this.m_profile.solveInit += profile.solveInit;\r\n            this.m_profile.solveVelocity += profile.solveVelocity;\r\n            this.m_profile.solvePosition += profile.solvePosition;\r\n            // Post solve cleanup.\r\n            for (let i = 0; i < island.m_bodyCount; ++i) {\r\n                // Allow static bodies to participate in other islands.\r\n                const b = island.m_bodies[i];\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    b.m_islandFlag = false;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < stack.length; ++i) {\r\n            if (!stack[i])\r\n                break;\r\n            stack[i] = null;\r\n        }\r\n        const timer = new b2Timer();\r\n        // Synchronize fixtures, check for out of range bodies.\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            // If a body was not in an island then it did not move.\r\n            if (!b.m_islandFlag) {\r\n                continue;\r\n            }\r\n            if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                continue;\r\n            }\r\n            // Update fixtures (for broad-phase).\r\n            b.SynchronizeFixtures();\r\n        }\r\n        // Look for new contacts.\r\n        this.m_contactManager.FindNewContacts();\r\n        this.m_profile.broadphase = timer.GetMilliseconds();\r\n    }\r\n    SolveTOI(step) {\r\n        // b2Island island(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, &m_stackAllocator, m_contactManager.m_contactListener);\r\n        const island = this.m_island;\r\n        island.Initialize(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, null, this.m_contactManager.m_contactListener);\r\n        if (this.m_stepComplete) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                b.m_islandFlag = false;\r\n                b.m_sweep.alpha0 = 0;\r\n            }\r\n            for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n                // Invalidate TOI\r\n                c.m_toiFlag = false;\r\n                c.m_islandFlag = false;\r\n                c.m_toiCount = 0;\r\n                c.m_toi = 1;\r\n            }\r\n        }\r\n        // Find TOI events and solve them.\r\n        for (;;) {\r\n            // Find the first TOI.\r\n            let minContact = null;\r\n            let minAlpha = 1;\r\n            for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n                // Is this contact disabled?\r\n                if (!c.IsEnabled()) {\r\n                    continue;\r\n                }\r\n                // Prevent excessive sub-stepping.\r\n                if (c.m_toiCount > b2_maxSubSteps) {\r\n                    continue;\r\n                }\r\n                let alpha = 1;\r\n                if (c.m_toiFlag) {\r\n                    // This contact has a valid cached TOI.\r\n                    alpha = c.m_toi;\r\n                }\r\n                else {\r\n                    const fA = c.GetFixtureA();\r\n                    const fB = c.GetFixtureB();\r\n                    // Is there a sensor?\r\n                    if (fA.IsSensor() || fB.IsSensor()) {\r\n                        continue;\r\n                    }\r\n                    const bA = fA.GetBody();\r\n                    const bB = fB.GetBody();\r\n                    const typeA = bA.m_type;\r\n                    const typeB = bB.m_type;\r\n                    ///b2Assert(typeA !== b2BodyType.b2_staticBody || typeB !== b2BodyType.b2_staticBody);\r\n                    const activeA = bA.IsAwake() && typeA !== b2BodyType.b2_staticBody;\r\n                    const activeB = bB.IsAwake() && typeB !== b2BodyType.b2_staticBody;\r\n                    // Is at least one body active (awake and dynamic or kinematic)?\r\n                    if (!activeA && !activeB) {\r\n                        continue;\r\n                    }\r\n                    const collideA = bA.IsBullet() || typeA !== b2BodyType.b2_dynamicBody;\r\n                    const collideB = bB.IsBullet() || typeB !== b2BodyType.b2_dynamicBody;\r\n                    // Are these two non-bullet dynamic bodies?\r\n                    if (!collideA && !collideB) {\r\n                        continue;\r\n                    }\r\n                    // Compute the TOI for this contact.\r\n                    // Put the sweeps onto the same time interval.\r\n                    let alpha0 = bA.m_sweep.alpha0;\r\n                    if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\r\n                        alpha0 = bB.m_sweep.alpha0;\r\n                        bA.m_sweep.Advance(alpha0);\r\n                    }\r\n                    else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\r\n                        alpha0 = bA.m_sweep.alpha0;\r\n                        bB.m_sweep.Advance(alpha0);\r\n                    }\r\n                    ///b2Assert(alpha0 < 1);\r\n                    const indexA = c.GetChildIndexA();\r\n                    const indexB = c.GetChildIndexB();\r\n                    // Compute the time of impact in interval [0, minTOI]\r\n                    const input = b2World.SolveTOI_s_toi_input;\r\n                    input.proxyA.SetShape(fA.GetShape(), indexA);\r\n                    input.proxyB.SetShape(fB.GetShape(), indexB);\r\n                    input.sweepA.Copy(bA.m_sweep);\r\n                    input.sweepB.Copy(bB.m_sweep);\r\n                    input.tMax = 1;\r\n                    const output = b2World.SolveTOI_s_toi_output;\r\n                    b2TimeOfImpact(output, input);\r\n                    // Beta is the fraction of the remaining portion of the .\r\n                    const beta = output.t;\r\n                    if (output.state === b2TOIOutputState.e_touching) {\r\n                        alpha = b2Min(alpha0 + (1 - alpha0) * beta, 1);\r\n                    }\r\n                    else {\r\n                        alpha = 1;\r\n                    }\r\n                    c.m_toi = alpha;\r\n                    c.m_toiFlag = true;\r\n                }\r\n                if (alpha < minAlpha) {\r\n                    // This is the minimum TOI found so far.\r\n                    minContact = c;\r\n                    minAlpha = alpha;\r\n                }\r\n            }\r\n            if (minContact === null || 1 - 10 * b2_epsilon < minAlpha) {\r\n                // No more TOI events. Done!\r\n                this.m_stepComplete = true;\r\n                break;\r\n            }\r\n            // Advance the bodies to the TOI.\r\n            const fA = minContact.GetFixtureA();\r\n            const fB = minContact.GetFixtureB();\r\n            const bA = fA.GetBody();\r\n            const bB = fB.GetBody();\r\n            const backup1 = b2World.SolveTOI_s_backup1.Copy(bA.m_sweep);\r\n            const backup2 = b2World.SolveTOI_s_backup2.Copy(bB.m_sweep);\r\n            bA.Advance(minAlpha);\r\n            bB.Advance(minAlpha);\r\n            // The TOI contact likely has some new contact points.\r\n            minContact.Update(this.m_contactManager.m_contactListener);\r\n            minContact.m_toiFlag = false;\r\n            ++minContact.m_toiCount;\r\n            // Is the contact solid?\r\n            if (!minContact.IsEnabled() || !minContact.IsTouching()) {\r\n                // Restore the sweeps.\r\n                minContact.SetEnabled(false);\r\n                bA.m_sweep.Copy(backup1);\r\n                bB.m_sweep.Copy(backup2);\r\n                bA.SynchronizeTransform();\r\n                bB.SynchronizeTransform();\r\n                continue;\r\n            }\r\n            bA.SetAwake(true);\r\n            bB.SetAwake(true);\r\n            // Build the island\r\n            island.Clear();\r\n            island.AddBody(bA);\r\n            island.AddBody(bB);\r\n            island.AddContact(minContact);\r\n            bA.m_islandFlag = true;\r\n            bB.m_islandFlag = true;\r\n            minContact.m_islandFlag = true;\r\n            // Get contacts on bodyA and bodyB.\r\n            // const bodies: b2Body[] = [bA, bB];\r\n            for (let i = 0; i < 2; ++i) {\r\n                const body = (i === 0) ? (bA) : (bB); // bodies[i];\r\n                if (body.m_type === b2BodyType.b2_dynamicBody) {\r\n                    for (let ce = body.m_contactList; ce; ce = ce.next) {\r\n                        if (island.m_bodyCount === island.m_bodyCapacity) {\r\n                            break;\r\n                        }\r\n                        if (island.m_contactCount === island.m_contactCapacity) {\r\n                            break;\r\n                        }\r\n                        const contact = ce.contact;\r\n                        // Has this contact already been added to the island?\r\n                        if (contact.m_islandFlag) {\r\n                            continue;\r\n                        }\r\n                        // Only add static, kinematic, or bullet bodies.\r\n                        const other = ce.other;\r\n                        if (other.m_type === b2BodyType.b2_dynamicBody &&\r\n                            !body.IsBullet() && !other.IsBullet()) {\r\n                            continue;\r\n                        }\r\n                        // Skip sensors.\r\n                        const sensorA = contact.m_fixtureA.m_isSensor;\r\n                        const sensorB = contact.m_fixtureB.m_isSensor;\r\n                        if (sensorA || sensorB) {\r\n                            continue;\r\n                        }\r\n                        // Tentatively advance the body to the TOI.\r\n                        const backup = b2World.SolveTOI_s_backup.Copy(other.m_sweep);\r\n                        if (!other.m_islandFlag) {\r\n                            other.Advance(minAlpha);\r\n                        }\r\n                        // Update the contact points\r\n                        contact.Update(this.m_contactManager.m_contactListener);\r\n                        // Was the contact disabled by the user?\r\n                        if (!contact.IsEnabled()) {\r\n                            other.m_sweep.Copy(backup);\r\n                            other.SynchronizeTransform();\r\n                            continue;\r\n                        }\r\n                        // Are there contact points?\r\n                        if (!contact.IsTouching()) {\r\n                            other.m_sweep.Copy(backup);\r\n                            other.SynchronizeTransform();\r\n                            continue;\r\n                        }\r\n                        // Add the contact to the island\r\n                        contact.m_islandFlag = true;\r\n                        island.AddContact(contact);\r\n                        // Has the other body already been added to the island?\r\n                        if (other.m_islandFlag) {\r\n                            continue;\r\n                        }\r\n                        // Add the other body to the island.\r\n                        other.m_islandFlag = true;\r\n                        if (other.m_type !== b2BodyType.b2_staticBody) {\r\n                            other.SetAwake(true);\r\n                        }\r\n                        island.AddBody(other);\r\n                    }\r\n                }\r\n            }\r\n            const subStep = b2World.SolveTOI_s_subStep;\r\n            subStep.dt = (1 - minAlpha) * step.dt;\r\n            subStep.inv_dt = 1 / subStep.dt;\r\n            subStep.dtRatio = 1;\r\n            subStep.positionIterations = 20;\r\n            subStep.velocityIterations = step.velocityIterations;\r\n            // #if B2_ENABLE_PARTICLE\r\n            subStep.particleIterations = step.particleIterations;\r\n            // #endif\r\n            subStep.warmStarting = false;\r\n            island.SolveTOI(subStep, bA.m_islandIndex, bB.m_islandIndex);\r\n            // Reset island flags and synchronize broad-phase proxies.\r\n            for (let i = 0; i < island.m_bodyCount; ++i) {\r\n                const body = island.m_bodies[i];\r\n                body.m_islandFlag = false;\r\n                if (body.m_type !== b2BodyType.b2_dynamicBody) {\r\n                    continue;\r\n                }\r\n                body.SynchronizeFixtures();\r\n                // Invalidate all contact TOIs on this displaced body.\r\n                for (let ce = body.m_contactList; ce; ce = ce.next) {\r\n                    ce.contact.m_toiFlag = false;\r\n                    ce.contact.m_islandFlag = false;\r\n                }\r\n            }\r\n            // Commit fixture proxy movements to the broad-phase so that new contacts are created.\r\n            // Also, some contacts can be destroyed.\r\n            this.m_contactManager.FindNewContacts();\r\n            if (this.m_subStepping) {\r\n                this.m_stepComplete = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // #if B2_ENABLE_CONTROLLER\r\n    AddController(controller) {\r\n        ///b2Assert(controller.m_world === null, \"Controller can only be a member of one world\");\r\n        controller.m_world = this;\r\n        controller.m_next = this.m_controllerList;\r\n        controller.m_prev = null;\r\n        if (this.m_controllerList)\r\n            this.m_controllerList.m_prev = controller;\r\n        this.m_controllerList = controller;\r\n        ++this.m_controllerCount;\r\n        return controller;\r\n    }\r\n    RemoveController(controller) {\r\n        ///b2Assert(controller.m_world === this, \"Controller is not a member of this world\");\r\n        if (controller.m_prev)\r\n            controller.m_prev.m_next = controller.m_next;\r\n        if (controller.m_next)\r\n            controller.m_next.m_prev = controller.m_prev;\r\n        if (this.m_controllerList === controller)\r\n            this.m_controllerList = controller.m_next;\r\n        --this.m_controllerCount;\r\n        controller.m_prev = null;\r\n        controller.m_next = null;\r\n        controller.m_world = null;\r\n        return controller;\r\n    }\r\n}\r\n// #endif\r\n/// Take a time step. This performs collision detection, integration,\r\n/// and constraint solution.\r\n/// @param timeStep the amount of time to simulate, this should not vary.\r\n/// @param velocityIterations for the velocity constraint solver.\r\n/// @param positionIterations for the position constraint solver.\r\nb2World.Step_s_step = new b2TimeStep();\r\nb2World.Step_s_stepTimer = new b2Timer();\r\nb2World.Step_s_timer = new b2Timer();\r\n// #endif\r\n/// Call this to draw shapes and other debug draw data.\r\nb2World.DrawDebugData_s_color = new b2Color(0, 0, 0);\r\nb2World.DrawDebugData_s_vs = b2Vec2.MakeArray(4);\r\nb2World.DrawDebugData_s_xf = new b2Transform();\r\nb2World.QueryShape_s_aabb = new b2AABB();\r\nb2World.QueryPoint_s_aabb = new b2AABB();\r\n/// Ray-cast the world for all fixtures in the path of the ray. Your callback\r\n/// controls whether you get the closest point, any point, or n-points.\r\n/// The ray-cast ignores shapes that contain the starting point.\r\n/// @param callback a user implemented callback class.\r\n/// @param point1 the ray starting point\r\n/// @param point2 the ray ending point\r\nb2World.RayCast_s_input = new b2RayCastInput();\r\nb2World.RayCast_s_output = new b2RayCastOutput();\r\nb2World.RayCast_s_point = new b2Vec2();\r\nb2World.DrawJoint_s_p1 = new b2Vec2();\r\nb2World.DrawJoint_s_p2 = new b2Vec2();\r\nb2World.DrawJoint_s_color = new b2Color(0.5, 0.8, 0.8);\r\nb2World.SolveTOI_s_subStep = new b2TimeStep();\r\nb2World.SolveTOI_s_backup = new b2Sweep();\r\nb2World.SolveTOI_s_backup1 = new b2Sweep();\r\nb2World.SolveTOI_s_backup2 = new b2Sweep();\r\nb2World.SolveTOI_s_toi_input = new b2TOIInput();\r\nb2World.SolveTOI_s_toi_output = new b2TOIOutput();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2Atan2, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\n///\r\nexport class b2RopeDef {\r\n    constructor() {\r\n        ///\r\n        this.vertices = [];\r\n        ///\r\n        this.count = 0;\r\n        ///\r\n        this.masses = [];\r\n        ///\r\n        this.gravity = new b2Vec2(0, 0);\r\n        ///\r\n        this.damping = 0.1;\r\n        /// Stretching stiffness\r\n        this.k2 = 0.9;\r\n        /// Bending stiffness. Values above 0.5 can make the simulation blow up.\r\n        this.k3 = 0.1;\r\n    }\r\n}\r\n///\r\nexport class b2Rope {\r\n    constructor() {\r\n        this.m_count = 0;\r\n        this.m_ps = null;\r\n        this.m_p0s = null;\r\n        this.m_vs = null;\r\n        this.m_ims = null;\r\n        this.m_Ls = null;\r\n        this.m_as = null;\r\n        this.m_gravity = new b2Vec2();\r\n        this.m_damping = 0;\r\n        this.m_k2 = 1;\r\n        this.m_k3 = 0.1;\r\n    }\r\n    GetVertexCount() {\r\n        return this.m_count;\r\n    }\r\n    GetVertices() {\r\n        return this.m_ps;\r\n    }\r\n    ///\r\n    Initialize(def) {\r\n        ///b2Assert(def.count >= 3);\r\n        this.m_count = def.count;\r\n        // this.m_ps = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_ps = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_p0s = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_p0s = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_vs = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_vs = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_ims = (float32*)b2Alloc(this.m_count * sizeof(float32));\r\n        this.m_ims = b2MakeNumberArray(this.m_count);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_ps[i].Copy(def.vertices[i]);\r\n            this.m_p0s[i].Copy(def.vertices[i]);\r\n            this.m_vs[i].SetZero();\r\n            const m = def.masses[i];\r\n            if (m > 0) {\r\n                this.m_ims[i] = 1 / m;\r\n            }\r\n            else {\r\n                this.m_ims[i] = 0;\r\n            }\r\n        }\r\n        const count2 = this.m_count - 1;\r\n        const count3 = this.m_count - 2;\r\n        // this.m_Ls = (float32*)be2Alloc(count2 * sizeof(float32));\r\n        this.m_Ls = b2MakeNumberArray(count2);\r\n        // this.m_as = (float32*)b2Alloc(count3 * sizeof(float32));\r\n        this.m_as = b2MakeNumberArray(count3);\r\n        for (let i = 0; i < count2; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            this.m_Ls[i] = b2Vec2.DistanceVV(p1, p2);\r\n        }\r\n        for (let i = 0; i < count3; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const p3 = this.m_ps[i + 2];\r\n            const d1 = b2Vec2.SubVV(p2, p1, b2Vec2.s_t0);\r\n            const d2 = b2Vec2.SubVV(p3, p2, b2Vec2.s_t1);\r\n            const a = b2Vec2.CrossVV(d1, d2);\r\n            const b = b2Vec2.DotVV(d1, d2);\r\n            this.m_as[i] = b2Atan2(a, b);\r\n        }\r\n        this.m_gravity.Copy(def.gravity);\r\n        this.m_damping = def.damping;\r\n        this.m_k2 = def.k2;\r\n        this.m_k3 = def.k3;\r\n    }\r\n    ///\r\n    Step(h, iterations) {\r\n        if (h === 0) {\r\n            return;\r\n        }\r\n        const d = Math.exp(-h * this.m_damping);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_p0s[i].Copy(this.m_ps[i]);\r\n            if (this.m_ims[i] > 0) {\r\n                this.m_vs[i].SelfMulAdd(h, this.m_gravity);\r\n            }\r\n            this.m_vs[i].SelfMul(d);\r\n            this.m_ps[i].SelfMulAdd(h, this.m_vs[i]);\r\n        }\r\n        for (let i = 0; i < iterations; ++i) {\r\n            this.SolveC2();\r\n            this.SolveC3();\r\n            this.SolveC2();\r\n        }\r\n        const inv_h = 1 / h;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            b2Vec2.MulSV(inv_h, b2Vec2.SubVV(this.m_ps[i], this.m_p0s[i], b2Vec2.s_t0), this.m_vs[i]);\r\n        }\r\n    }\r\n    SolveC2() {\r\n        const count2 = this.m_count - 1;\r\n        for (let i = 0; i < count2; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const d = b2Vec2.SubVV(p2, p1, b2Rope.s_d);\r\n            const L = d.Normalize();\r\n            const im1 = this.m_ims[i];\r\n            const im2 = this.m_ims[i + 1];\r\n            if (im1 + im2 === 0) {\r\n                continue;\r\n            }\r\n            const s1 = im1 / (im1 + im2);\r\n            const s2 = im2 / (im1 + im2);\r\n            p1.SelfMulSub(this.m_k2 * s1 * (this.m_Ls[i] - L), d);\r\n            p2.SelfMulAdd(this.m_k2 * s2 * (this.m_Ls[i] - L), d);\r\n            // this.m_ps[i] = p1;\r\n            // this.m_ps[i + 1] = p2;\r\n        }\r\n    }\r\n    SetAngle(angle) {\r\n        const count3 = this.m_count - 2;\r\n        for (let i = 0; i < count3; ++i) {\r\n            this.m_as[i] = angle;\r\n        }\r\n    }\r\n    SolveC3() {\r\n        const count3 = this.m_count - 2;\r\n        for (let i = 0; i < count3; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const p3 = this.m_ps[i + 2];\r\n            const m1 = this.m_ims[i];\r\n            const m2 = this.m_ims[i + 1];\r\n            const m3 = this.m_ims[i + 2];\r\n            const d1 = b2Vec2.SubVV(p2, p1, b2Rope.s_d1);\r\n            const d2 = b2Vec2.SubVV(p3, p2, b2Rope.s_d2);\r\n            const L1sqr = d1.LengthSquared();\r\n            const L2sqr = d2.LengthSquared();\r\n            if (L1sqr * L2sqr === 0) {\r\n                continue;\r\n            }\r\n            const a = b2Vec2.CrossVV(d1, d2);\r\n            const b = b2Vec2.DotVV(d1, d2);\r\n            let angle = b2Atan2(a, b);\r\n            const Jd1 = b2Vec2.MulSV((-1 / L1sqr), d1.SelfSkew(), b2Rope.s_Jd1);\r\n            const Jd2 = b2Vec2.MulSV((1 / L2sqr), d2.SelfSkew(), b2Rope.s_Jd2);\r\n            const J1 = b2Vec2.NegV(Jd1, b2Rope.s_J1);\r\n            const J2 = b2Vec2.SubVV(Jd1, Jd2, b2Rope.s_J2);\r\n            const J3 = Jd2;\r\n            let mass = m1 * b2Vec2.DotVV(J1, J1) + m2 * b2Vec2.DotVV(J2, J2) + m3 * b2Vec2.DotVV(J3, J3);\r\n            if (mass === 0) {\r\n                continue;\r\n            }\r\n            mass = 1 / mass;\r\n            let C = angle - this.m_as[i];\r\n            while (C > b2_pi) {\r\n                angle -= 2 * b2_pi;\r\n                C = angle - this.m_as[i];\r\n            }\r\n            while (C < -b2_pi) {\r\n                angle += 2 * b2_pi;\r\n                C = angle - this.m_as[i];\r\n            }\r\n            const impulse = -this.m_k3 * mass * C;\r\n            p1.SelfMulAdd((m1 * impulse), J1);\r\n            p2.SelfMulAdd((m2 * impulse), J2);\r\n            p3.SelfMulAdd((m3 * impulse), J3);\r\n            // this.m_ps[i] = p1;\r\n            // this.m_ps[i + 1] = p2;\r\n            // this.m_ps[i + 2] = p3;\r\n        }\r\n    }\r\n    Draw(draw) {\r\n        const c = new b2Color(0.4, 0.5, 0.7);\r\n        for (let i = 0; i < this.m_count - 1; ++i) {\r\n            draw.DrawSegment(this.m_ps[i], this.m_ps[i + 1], c);\r\n        }\r\n    }\r\n}\r\n///\r\nb2Rope.s_d = new b2Vec2();\r\nb2Rope.s_d1 = new b2Vec2();\r\nb2Rope.s_d2 = new b2Vec2();\r\nb2Rope.s_Jd1 = new b2Vec2();\r\nb2Rope.s_Jd2 = new b2Vec2();\r\nb2Rope.s_J1 = new b2Vec2();\r\nb2Rope.s_J2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/**\r\n\\mainpage Box2D API Documentation\r\n\r\n\\section intro_sec Getting Started\r\n\r\nFor documentation please see http://box2d.org/documentation.html\r\n\r\nFor discussion please visit http://box2d.org/forum\r\n*/\r\n// These include files constitute the main Box2D API\r\nexport * from \"./Common/b2Settings\";\r\nexport * from \"./Common/b2Math\";\r\nexport * from \"./Common/b2Draw\";\r\nexport * from \"./Common/b2Timer\";\r\nexport * from \"./Common/b2GrowableStack\";\r\nexport * from \"./Common/b2BlockAllocator\";\r\nexport * from \"./Common/b2StackAllocator\";\r\nexport * from \"./Collision/b2Collision\";\r\nexport * from \"./Collision/b2Distance\";\r\nexport * from \"./Collision/b2BroadPhase\";\r\nexport * from \"./Collision/b2DynamicTree\";\r\nexport * from \"./Collision/b2TimeOfImpact\";\r\nexport * from \"./Collision/b2CollideCircle\";\r\nexport * from \"./Collision/b2CollidePolygon\";\r\nexport * from \"./Collision/b2CollideEdge\";\r\nexport * from \"./Collision/Shapes/b2Shape\";\r\nexport * from \"./Collision/Shapes/b2CircleShape\";\r\nexport * from \"./Collision/Shapes/b2PolygonShape\";\r\nexport * from \"./Collision/Shapes/b2EdgeShape\";\r\nexport * from \"./Collision/Shapes/b2ChainShape\";\r\nexport * from \"./Dynamics/b2Fixture\";\r\nexport * from \"./Dynamics/b2Body\";\r\nexport * from \"./Dynamics/b2World\";\r\nexport * from \"./Dynamics/b2WorldCallbacks\";\r\nexport * from \"./Dynamics/b2Island\";\r\nexport * from \"./Dynamics/b2TimeStep\";\r\nexport * from \"./Dynamics/b2ContactManager\";\r\nexport * from \"./Dynamics/Contacts/b2Contact\";\r\nexport * from \"./Dynamics/Contacts/b2ContactFactory\";\r\nexport * from \"./Dynamics/Contacts/b2ContactSolver\";\r\nexport * from \"./Dynamics/Contacts/b2CircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2PolygonContact\";\r\nexport * from \"./Dynamics/Contacts/b2PolygonAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2EdgeAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2EdgeAndPolygonContact\";\r\nexport * from \"./Dynamics/Contacts/b2ChainAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2ChainAndPolygonContact\";\r\nexport * from \"./Dynamics/Joints/b2Joint\";\r\nexport * from \"./Dynamics/Joints/b2JointFactory\";\r\nexport * from \"./Dynamics/Joints/b2AreaJoint\";\r\nexport * from \"./Dynamics/Joints/b2DistanceJoint\";\r\nexport * from \"./Dynamics/Joints/b2FrictionJoint\";\r\nexport * from \"./Dynamics/Joints/b2GearJoint\";\r\nexport * from \"./Dynamics/Joints/b2MotorJoint\";\r\nexport * from \"./Dynamics/Joints/b2MouseJoint\";\r\nexport * from \"./Dynamics/Joints/b2PrismaticJoint\";\r\nexport * from \"./Dynamics/Joints/b2PulleyJoint\";\r\nexport * from \"./Dynamics/Joints/b2RevoluteJoint\";\r\nexport * from \"./Dynamics/Joints/b2RopeJoint\";\r\nexport * from \"./Dynamics/Joints/b2WeldJoint\";\r\nexport * from \"./Dynamics/Joints/b2WheelJoint\";\r\n// #if B2_ENABLE_PARTICLE\r\nexport * from \"./Particle/b2Particle\";\r\nexport * from \"./Particle/b2ParticleGroup\";\r\nexport * from \"./Particle/b2ParticleSystem\";\r\n// #endif\r\nexport * from \"./Rope/b2Rope\";\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm94MkQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9Cb3gyRC9Cb3gyRC9Cb3gyRC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGOzs7Ozs7OztFQVFFO0FBRUYsb0RBQW9EO0FBRXBELGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLGlCQUFpQixDQUFDO0FBQ2hDLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLDJCQUEyQixDQUFDO0FBQzFDLGNBQWMsMkJBQTJCLENBQUM7QUFFMUMsY0FBYyx5QkFBeUIsQ0FBQztBQUN4QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyw4QkFBOEIsQ0FBQztBQUM3QyxjQUFjLDJCQUEyQixDQUFDO0FBRTFDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxpQ0FBaUMsQ0FBQztBQUVoRCxjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYyx1QkFBdUIsQ0FBQztBQUN0QyxjQUFjLDZCQUE2QixDQUFDO0FBRTVDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLHFDQUFxQyxDQUFDO0FBQ3BELGNBQWMscUNBQXFDLENBQUM7QUFDcEQsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLCtDQUErQyxDQUFDO0FBQzlELGNBQWMsNENBQTRDLENBQUM7QUFDM0QsY0FBYyw2Q0FBNkMsQ0FBQztBQUM1RCxjQUFjLDZDQUE2QyxDQUFDO0FBQzVELGNBQWMsOENBQThDLENBQUM7QUFFN0QsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLGtDQUFrQyxDQUFDO0FBQ2pELGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLGdDQUFnQyxDQUFDO0FBQy9DLGNBQWMsb0NBQW9DLENBQUM7QUFDbkQsY0FBYyxpQ0FBaUMsQ0FBQztBQUNoRCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLGdDQUFnQyxDQUFDO0FBRS9DLHlCQUF5QjtBQUN6QixjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyw2QkFBNkIsQ0FBQztBQUM1QyxTQUFTO0FBRVQsY0FBYyxlQUFlLENBQUMifQ==","﻿\r\nimport {\r\n\tb2Vec2, b2Transform, b2Rot,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact,\r\n} from \"./Physics.js\";\r\n\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { Rectangle } from \"../math.js\";\r\n\r\n\r\nexport class FootholdChain {\r\n\t/**\r\n\t * @param {number} id\r\n\t */\r\n\tconstructor(id) {\r\n\t\tthis.id = id;\r\n\r\n\t\t/** @type {FootholdSingle[]} */\r\n\t\tthis.footholds = [];\r\n\r\n\t\tthis.bound = new Rectangle();\r\n\r\n\t\tthis.loop = false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {FootholdSingle} head - foothold chain head\r\n\t * @param {FootholdSingle[]} map_footholds - map footholds\r\n\t * @param {function} type - foothold constructor\r\n\t */\r\n\tinit(head, map_footholds, type) {\r\n\t\tlet left, top, right, bottom;\r\n\r\n\t\tleft = head.x1;\r\n\t\ttop = head.y1;\r\n\t\tright = head.x2;\r\n\t\tbottom = head.y2;\r\n\r\n\t\tfor (let fh = head, childIndex = 0; fh != null; fh = map_footholds[fh.next], ++childIndex) {\r\n\t\t\tleft = Math.min(left, fh.x1, fh.x2);\r\n\t\t\ttop = Math.min(top, fh.y1, fh.y2);\r\n\t\t\tright = Math.max(right, fh.x1, fh.x2);\r\n\t\t\tbottom = Math.max(bottom, fh.y1, fh.y2);\r\n\r\n\t\t\tthis.footholds.push(fh);\r\n\r\n\t\t\tif (fh.next == head.id) {\r\n\t\t\t\tthis.loop = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.bound.parse(left, top, right, bottom);\r\n\r\n\t\tthis.FootholdType = type;\r\n\r\n\t\tif (type == FootholdSingle) {\r\n\t\t\tthis.footholds.forEach((fh, childIndex) => {\r\n\t\t\t\tfh.init(this, childIndex);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if (type == FootholdChainChild) {\r\n\t\t\tlet center = this.bound.center;\r\n\t\t\tlet xf = new b2Transform();\r\n\r\n\t\t\txf.SetPositionXY(center.x, center.y);\r\n\r\n\t\t\tthis.footholds.forEach((fh, childIndex) => {\r\n\t\t\t\tfh.init(this, childIndex, xf);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} childIndex\r\n\t * @returns {FootholdChainChild}\r\n\t */\r\n\tgetFootholdFromContact(childIndex) {\r\n\t\treturn this.footholds[childIndex];\r\n\t}\r\n}\r\n\r\nexport class FootholdSingle {\r\n\t/**\r\n\t * @param {object} _raw\r\n\t * @param {number} index\r\n\t * @param {number} layerIndex\r\n\t * @param {number} groupIndex\r\n\t */\r\n\tconstructor(_raw, index, layerIndex, groupIndex) {\r\n\t\tthis._raw = _raw;\r\n\r\n\t\t// ground.footholds\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.layer = layerIndex | 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.group = groupIndex | 0;\r\n\r\n\t\t/** @type {number} - in ground.footholds */\r\n\t\tthis.id = index;\r\n\t\t\r\n\t\t/** @type {number} - prev id */\r\n\t\tthis.prev = _raw.prev ? (_raw.prev - 1) : null;\r\n\r\n\t\t/** @type {number} - next id */\r\n\t\tthis.next = _raw.next ? (_raw.next - 1) : null;\r\n\r\n\t\t// chain.footholds\r\n\r\n\t\t/** @type {FootholdChain} */\r\n\t\tthis.chain = null;\r\n\r\n\t\t/** @type {number} - in chain.footholds */\r\n\t\tthis.childIndex = null;\r\n\r\n\t\t// body\r\n\t\t\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.m_angle = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.m_length = 0;\r\n\r\n\t\t// debug\r\n\r\n\t\t/** @type {number} - this和next_fh的夾角 */\r\n\t\tthis.next_a = undefined;\r\n\r\n\t\tthis.next_a_deg = undefined;\r\n\t\t\r\n\t\tthis.$showDebugInfo = false;\r\n\t}\r\n\t\r\n\tgetFootholdFromContact() {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {FootholdChain} chain\r\n\t * @param {number} childIndex\r\n\t * @param {b2Transform} body_xf\r\n\t */\r\n\tinit(chain, childIndex, body_xf) {\r\n\t\tlet x1, y1, x2, y2;\r\n\t\t\r\n\t\tthis.chain = this;\r\n\t\tthis.childIndex = childIndex;\r\n\r\n\t\tx1 = this.x1 / $gv.CANVAS_SCALE;\r\n\t\ty1 = this.y1 / $gv.CANVAS_SCALE;\r\n\t\tx2 = this.x2 / $gv.CANVAS_SCALE;\r\n\t\ty2 = this.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\tconst dx = x2 - x1;\r\n\t\tconst dy = y2 - y1;\r\n\r\n\t\tif (dy == 0) {\r\n\t\t\tthis.m_angle = dx < 0 ? Math.PI : 0;\r\n\t\t\tthis.m_length = dx;\r\n\t\t}\r\n\t\telse if (dx == 0) {\r\n\t\t\tthis.m_angle = dy < 0 ? (-Math.PI * 0.5) : (Math.PI * 0.5);\r\n\t\t\tthis.m_length = dy;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.m_angle = Math.atan2(dy, dx);\r\n\t\t\tthis.m_length = Math.sqrt(dy ** 2 + dx ** 2);\r\n\t\t}\r\n\t}\r\n\r\n\tGetVertex1() {\r\n\t\treturn new b2Vec2(this.x1 / $gv.CANVAS_SCALE, this.y1 / $gv.CANVAS_SCALE);\r\n\t}\r\n\r\n\tGetVertex2() {\r\n\t\treturn new b2Vec2(this.x2 / $gv.CANVAS_SCALE, this.y2 / $gv.CANVAS_SCALE);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tGetWorldCenter() {\r\n\t\treturn this.body.GetWorldCenter();\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalPoint(worldPoint, out) {\r\n\t\treturn this.body.GetLocalPoint(worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n\t\treturn this.body.GetLinearVelocityFromWorldPoint(worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldVector\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalVector(worldVector, out) {\r\n\t\treturn this.body.GetLocalVector(worldVector, out);\r\n\t}\r\n\r\n\t/** @type {FootholdSingle} */\r\n\tget next_fh() {\r\n\t\tconst footholds = this.body.m_world.ground.footholds;\r\n\t\treturn footholds[this.next];\r\n\t}\r\n\t/** @type {FootholdSingle} */\r\n\tget prev_fh() {\r\n\t\tconst footholds = this.body.m_world.ground.footholds;\r\n\t\treturn footholds[this.prev];\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget x1() { return this._raw.x1; }\r\n\t/** @type {number} */\r\n\tget y1() { return this._raw.y1; }\r\n\t/** @type {number} */\r\n\tget x2() { return this._raw.x2; }\r\n\t/** @type {number} */\r\n\tget y2() { return this._raw.y2; }\r\n\r\n\tget is_empty() {\r\n\t\treturn this.is_first && this.is_last;\r\n\t}\r\n\tget is_first() {\r\n\t\treturn this._raw.prev == 0;\r\n\t}\r\n\tget is_last() {\r\n\t\treturn this._raw.next == 0;\r\n\t}\r\n\tget is_wall() {\r\n\t\treturn this.x1 == this.x2;\r\n\t}\r\n\tget _is_horizontal_floor() {\r\n\t\treturn this.y1 == this.y2;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLine(ctx) {\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(this.x1, this.y1);\r\n\t\tctx.lineTo(this.x2, this.y2);\r\n\t\tctx.stroke();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLineV01(ctx) {\r\n\t\tif (this.m_hasVertex0) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.moveTo(this.x0, this.y0);\r\n\t\t\tctx.lineTo(this.x1, this.y1);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLineV23(ctx) {\r\n\t\tif (this.m_hasVertex3) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.moveTo(this.x2, this.y2);\r\n\t\t\tctx.lineTo(this.x3, this.y3);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\t$_text_pos(x1, y1, x2, y2) {\r\n\t\treturn {\r\n\t\t\tx: (x2 + x1) / 2,\r\n\t\t\ty: Math.max(y2, y1),\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t$drawDebugInfo(renderer) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst fh = this;\r\n\t\tconst text = `[${fh.id}](${fh.x1}, ${fh.y1})[${fh.group}]{${fh._raw.piece}}∠${fh.next_a_deg}`;\r\n\r\n\t\tconst ta = ctx.textAlign, tb = ctx.textBaseline;\r\n\t\tconst tp = this.$_text_pos(fh.x1, fh.y1, fh.x2, fh.y2);\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"top\";\r\n\r\n\t\tctx.lineWidth = 5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#FF00FF\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.strokeText(text, tp.x, tp.y);\r\n\r\n\t\tctx.fillStyle = \"#FFF\";\r\n\t\tctx.fillText(text, tp.x, tp.y);\r\n\r\n\t\t//ctx.fillText(`[${fh.piece}][1](${fh.x2}, ${fh.y2})`, fh.x2, fh.y2);\r\n\r\n\t\tctx.textAlign = ta;\r\n\t\tctx.textBaseline = tb;\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} color\r\n\t */\r\n\t$drawDebugInfo2(renderer, color) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst fh = this;\r\n\t\tconst text = `${fh.prev}<${fh.id}>${fh.next} C{${fh.chain.id}} (${fh.x1}, ${fh.y1})(${fh.x2}, ${fh.y2}) L[${fh.layer}] G[${fh.group}] P{${fh._raw.piece}}∠${fh.next_a_deg}`;\r\n\r\n\t\tlet ta = ctx.textAlign, tb = ctx.textBaseline;\r\n\t\tconst tp = this.$_text_pos(fh.x1, fh.y1, fh.x2, fh.y2);\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"top\";\r\n\r\n\t\tctx.lineWidth = 5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = color || \"#FF00FF\";\r\n\t\tfh._drawLine(ctx);\r\n\t\t\r\n\t\t//ctx.strokeStyle = \"#FF0\";\r\n\t\t//fh._drawLineV01(ctx);\r\n\t\t//fh._drawLineV23(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.strokeText(text, tp.x, tp.y);\r\n\r\n\t\tctx.fillStyle = \"#FFF\";\r\n\t\tctx.fillText(text, tp.x, tp.y);\r\n\r\n\t\t//ctx.fillText(`[${fh.piece}][1](${fh.x2}, ${fh.y2})`, fh.x2, fh.y2);\r\n\r\n\t\tctx.textAlign = ta;\r\n\t\tctx.textBaseline = tb;\r\n\t}\r\n}\r\n\r\nexport class FootholdChainChild extends FootholdSingle {\r\n\tconstructor(_raw, index, layerIndex, groupIndex) {\r\n\t\tsuper(_raw, index, layerIndex, groupIndex);\r\n\r\n\t\t/** @type {b2Transform} - local */\r\n\t\tthis.m_xf = new b2Transform();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {FootholdChain} chain\r\n\t * @param {number} childIndex\r\n\t * @param {b2Transform} body_xf\r\n\t */\r\n\tinit(chain, childIndex, body_xf) {\r\n\t\tsuper.init(chain, childIndex, body_xf);\r\n\t\t\r\n\t\tb2Vec2.AddVV(this.GetVertex1(), this.GetVertex2(), this.m_xf.p);\r\n\t\tb2Vec2.MulVS(this.m_xf.p, 0.5, this.m_xf.p);\r\n\t\tthis.m_xf.SetRotationAngle(this.m_angle);\r\n\r\n\t\tb2Transform.MulTXX(this.m_xf, body_xf, this.m_xf);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tGetWorldCenter() {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn xf.p;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalPoint(worldPoint, out) {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn b2Transform.MulTXV(xf, worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n\t\tconst body = this.body;\r\n\t\treturn b2Vec2.AddVCrossSV(body.m_linearVelocity, body.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.GetWorldCenter(), b2Vec2.s_t0), out);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldVector\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalVector(worldVector, out) {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn b2Rot.MulTRV(xf.q, worldVector, out);\r\n\t}\r\n}\r\n","﻿\r\nimport {\r\n\tb2_polygonRadius,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2PolygonShape, b2EdgeShape, b2ChainShape,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact, b2Manifold, b2ContactImpulse, b2WorldManifold\r\n} from \"./Physics.js\";\r\n\r\nimport { Vec2, Rectangle } from \"../math.js\";\r\n\r\nimport { World, GRAVITY } from \"./World.js\";\r\nimport { FootholdChain, FootholdSingle, FootholdChainChild} from \"./Foothold.js\";\r\n\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport const Foothold = FootholdSingle;\r\n//const Foothold = FootholdChainChild;\r\n\r\n\r\n/**\r\n * 可以防止player卡在foothold裡面\r\n */\r\nwindow.CREATE_SOLID_FOOTHOLD = false;\r\n/**\r\n * polygon + edge\r\n */\r\nwindow.CREATE_SOLID_AND_EDGE_FOOTHOLD = false;\r\n\r\n/**\r\n * b2EdgeShape ghost vertex\r\n */\r\nwindow.USE_GHOST_VERTEX = true;\r\n\r\nwindow.FOOTHOLD_IS_BULLET = true;\r\n\r\n/**\r\n * @param {number} left\r\n * @param {number} right\r\n * @param {number} interpolater - 0~1\r\n */\r\nfunction lerp(left, right, interpolater) {\r\n\treturn left + interpolater * (right - left);\r\n}\r\n\r\nexport class Ground {\r\n\tconstructor() {\r\n\t\t/** @type {b2Body[]} */\r\n\t\tthis.bodies = null;\r\n\r\n\t\t/** @type {Foothold[]} */\r\n\t\tthis.footholds = null;\r\n\t\t\r\n\t\t/** @type {Rectangle[]} */\r\n\t\tthis.rectChains = null;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.footholds = [];\r\n\t\tthis.bodies = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {object} data\r\n\t * @param {World} world\r\n\t */\r\n\tload(map_raw_data, world) {\r\n\t\tif (!(\"foothold\" in map_raw_data)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (let layerIndex in map_raw_data.foothold) {\r\n\t\t\tlet groups = map_raw_data.foothold[layerIndex];\r\n\r\n\t\t\t//foothold[5] maybe is Bounding-Box(loop line)\r\n\r\n\t\t\tfor (let groupIndex in groups) {\r\n\t\t\t\tlet segment = groups[groupIndex];\r\n\t\t\t\tfor (let k in segment) {\r\n\t\t\t\t\tconst index = k - 1;\r\n\r\n\t\t\t\t\tlet fh = new Foothold(segment[k], index, layerIndex, groupIndex);\r\n\r\n\t\t\t\t\tthis.footholds[index] = fh;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/** @type {FootholdChain[]} */\r\n\t\tlet chains = [];\r\n\r\n\t\tlet chainId = 0;\r\n\t\tlet rectChains = this.rectChains = [];\r\n\r\n\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\tconst foothold = this.footholds[i];\r\n\t\t\t\r\n\t\t\tif (foothold.chain == null) {\r\n\t\t\t\t/** @type {foothold} */\r\n\t\t\t\tlet head;\r\n\r\n\t\t\t\tfor (let fh = foothold; fh != null; fh = this.footholds[fh.prev]) {\r\n\t\t\t\t\tif (fh.prev != null && fh.prev == foothold.id) {\r\n\t\t\t\t\t\thead = fh;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!head) {\r\n\t\t\t\t\thead = foothold;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet chain = new FootholdChain(chainId);\r\n\r\n\t\t\t\tchain.init(head, this.footholds, Foothold);\r\n\r\n\t\t\t\tif (Foothold == FootholdSingle) {\r\n\t\t\t\t\tif (window.CREATE_SOLID_AND_EDGE_FOOTHOLD) {\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, false);//edge\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, true);//polygon\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, window.CREATE_SOLID_FOOTHOLD);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (Foothold == FootholdChainChild) {\r\n\t\t\t\t\tthis._create_chain(world, chain);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchains.push(chain);\r\n\r\n\t\t\t\trectChains[chainId] = chain.bound;\r\n\t\t\t\t\r\n\t\t\t\tchainId++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @param {FootholdChain} chain\r\n\t */\r\n\t_create_chain(world, chain) {\r\n\t\t/** @type {b2Body} */\r\n\t\tlet body;\r\n\r\n\t\t/** @type {b2ChainShape} */\r\n\t\tlet shape;\r\n\r\n\t\t{\r\n\t\t\tlet bdef = new b2BodyDef();\r\n\r\n\t\t\tconst center = chain.bound.center;\r\n\r\n\t\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\t\tbdef.position.Set(center.x / $gv.CANVAS_SCALE, center.y / $gv.CANVAS_SCALE);\r\n\t\t\tbdef.angle = 0;\r\n\t\t\tbdef.gravityScale = 0;\r\n\t\t\tbdef.linearDamping = 1;\r\n\t\t\tbdef.bullet = true;\r\n\t\t\tbdef.userData = this;\r\n\r\n\t\t\tbody = world.CreateBody(bdef);\r\n\t\t\tbody.$type = \"ground\";\r\n\r\n\t\t\tthis.bodies.push(body);\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tshape = new b2ChainShape();\r\n\r\n\t\t\t/** @type {b2Vec2[]} */\r\n\t\t\tlet vertices = [body.GetLocalPoint(chain.footholds[0].GetVertex1(), new b2Vec2())];\r\n\r\n\t\t\tfor (let i = 0; i < chain.footholds.length; ++i) {\r\n\t\t\t\tconst fh = chain.footholds[i];\r\n\r\n\t\t\t\tvertices.push(body.GetLocalPoint(fh.GetVertex2(), new b2Vec2()));\r\n\r\n\t\t\t\tfh.body = body;\r\n\t\t\t\tfh._chain = chain;\r\n\t\t\t}\r\n\r\n\t\t\tif (chain.loop) {\r\n\t\t\t\tshape.CreateLoop(vertices);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.CreateChain(vertices);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tlet fdef = new b2FixtureDef();\r\n\t\t\tfdef.shape = shape;\r\n\t\t\tfdef.density = 1;\r\n\t\t\tfdef.filter.Copy(FilterHelper.get(\"foothold\"));\r\n\t\t\tfdef.friction = 1;\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tfdef.userData = chain;\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\t//fixture.beginContact = this.beginContact_bodyBase_oneway;\r\n\t\t\tfixture.endContact = this.endContact_bodyBase_oneway;\r\n\t\t\tfixture.preSolve = this.preSolveGround_bodyBase_oneway;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @param {FootholdChain} chain\r\n\t * @param {boolean} is_solid\r\n\t */\r\n\t_create_foothold(world, chain, is_solid) {\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\r\n\t\t/** @type {b2PolygonShape&b2EdgeShape} */\r\n\t\tlet shape;\r\n\r\n\r\n\t\tif (is_solid) {\r\n\t\t\tshape = new b2PolygonShape();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tshape = new b2EdgeShape();\r\n\t\t}\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\tbdef.linearDamping = 1;\r\n\t\tbdef.gravityScale = 0;\r\n\t\tbdef.userData = this;\r\n\t\tbdef.bullet = window.FOOTHOLD_IS_BULLET;\r\n\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.density = 1;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"foothold\"));\r\n\t\tfdef.friction = 1;\r\n\t\tfdef.restitution = 0;\r\n\t\t//fdef.userData = chain;\r\n\r\n\t\tfor (let i = 0; i < chain.footholds.length; ++i) {\r\n\t\t\tconst fh = chain.footholds[i];\r\n\t\t\t//if (fh.is_wall) {\r\n\t\t\t//\tthis._create_wall(fh);\r\n\t\t\t//\tcontinue;\r\n\t\t\t//}\r\n\t\t\tlet x1, y1, x2, y2;\r\n\r\n\t\t\tx1 = fh.x1 / $gv.CANVAS_SCALE;\r\n\t\t\ty1 = fh.y1 / $gv.CANVAS_SCALE;\r\n\t\t\tx2 = fh.x2 / $gv.CANVAS_SCALE;\r\n\t\t\ty2 = fh.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\t\tcreate.call(this, fh);\r\n\t\t\t\r\n\t\t\tconst next = this.footholds[fh.next];\r\n\t\t\tif (next) {\r\n\t\t\t\tlet x1n, y1n, x2n, y2n;\r\n\t\t\t\tlet nx1, ny1, nx2, ny2;\r\n\r\n\t\t\t\tnx1 = next.x1 / $gv.CANVAS_SCALE;\r\n\t\t\t\tny1 = next.y1 / $gv.CANVAS_SCALE;\r\n\t\t\t\tnx2 = next.x2 / $gv.CANVAS_SCALE;\r\n\t\t\t\tny2 = next.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\t\t\tlet v1 = new b2Vec2(x1 - x2, y1 - y2);\r\n\t\t\t\tlet v2 = new b2Vec2(nx2 - nx1, ny2 - ny1);\r\n\t\t\t\tlet a = Math.atan2(b2Vec2.CrossVV(v1, v2), b2Vec2.DotVV(v1, v2));\r\n\r\n\t\t\t\tfh.next_a = a;\r\n\t\t\t\tfh.next_a_deg = Math.abs(Math.trunc(a * 180 / Math.PI)) % 180;\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * @param {Foothold} fh\r\n\t\t * @param {number} x1\r\n\t\t * @param {number} y1\r\n\t\t * @param {number} x2\r\n\t\t * @param {number} y2\r\n\t\t */\r\n\t\tfunction create(fh) {\r\n\t\t\tb2Vec2.AddVV(fh.GetVertex1(), fh.GetVertex2(), bdef.position);\r\n\t\t\tb2Vec2.MulVS(bdef.position, 0.5, bdef.position);\r\n\r\n\t\t\tlet hlen = fh.m_length * 0.5;\r\n\t\t\tbdef.angle = fh.m_angle;\r\n\r\n\t\t\tlet body = world.CreateBody(bdef);\r\n\t\t\tbody.$type = \"ground\";\r\n\r\n\t\t\tif (is_solid) {\r\n\t\t\t\tshape.SetAsBox(hlen, b2_polygonRadius);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.m_vertex1.Set(-hlen, 0)\r\n\t\t\t\tshape.m_vertex2.Set(hlen, 0);\r\n\r\n\t\t\t\tif (window.USE_GHOST_VERTEX) {\r\n\t\t\t\t\tif (fh.prev != null) {\r\n\t\t\t\t\t\tconst prev = this.footholds[fh.prev];\r\n\t\t\t\t\t\tshape.m_hasVertex0 = true;\r\n\t\t\t\t\t\tshape.m_vertex0.Copy(prev.GetVertex2());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (fh.next != null) {\r\n\t\t\t\t\t\tconst next = this.footholds[fh.next];\r\n\t\t\t\t\t\tshape.m_hasVertex3 = true;\r\n\t\t\t\t\t\tshape.m_vertex3.Copy(next.GetVertex1());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfdef.userData = fh;\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\t//fixture.beginContact = this.beginContact_bodyBase_oneway;\r\n\t\t\tfixture.endContact = this.endContact_bodyBase_oneway;\r\n\t\t\tfixture.preSolve = this.preSolveGround_bodyBase_oneway;\r\n\r\n\t\t\tfh.body = body;\r\n\t\t\tthis.bodies.push(body);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {{left: number, right: number}}\r\n\t */\r\n\t_compute_left_right_border() {\r\n\t\tlet left = null, right = null;\r\n\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\tlet fh = this.footholds[i];\r\n\t\t\t//if (fh.layer == 5) {\r\n\t\t\t\tlet x1, x2;\r\n\t\t\t\t\r\n\t\t\t\tif (fh.x1 < fh.x2) {\r\n\t\t\t\t\tx1 = fh.x1;\r\n\t\t\t\t\tx2 = fh.x2;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tx1 = fh.x2;\r\n\t\t\t\t\tx2 = fh.x1;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (left == null || x1 < left) {\r\n\t\t\t\t\tleft = x1;\r\n\t\t\t\t}\r\n\t\t\t\tif (right == null || x2 > right) {\r\n\t\t\t\t\tright = x2;\r\n\t\t\t\t}\r\n\t\t\t\t//if (left != null) {\r\n\t\t\t\t//\tleft = Math.min(left, fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\tleft = Math.min(fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\tright = Math.max(fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t//}\r\n\t\t}\r\n\t\treturn { left, right };\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tbeginContact_bodyBase_oneway(contact, fa, fb, childIndexA, childIndexB) {\r\n\t\tif (fb.$type == \"player\") {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tlet numPoints, worldManifold;\r\n\t\tconst playerBody = fb.GetBody();\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tconst fh = this.getFootholdFromContact(childIndexA);\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = fb.GetUserData();\r\n\t\tif (!player || !player.body || player.body.$type != \"player\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (player.state.ladder) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (!contact.IsTouching()) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.log(\"J: \" + player.state.jump);\r\n\t\t}\r\n\r\n\t\tconst $fh = player.$foothold;\r\n\t\tconst player_pos = player.foot_walk.GetWorldCenter();//player.getPosition();\r\n\t\tconst relative_position = fh.GetLocalPoint(player_pos, new b2Vec2());\r\n\t\tconst platformFaceY = b2_polygonRadius * 2;\r\n\r\n\t\tconst foot_width = player.chara_profile.foot_width - b2_polygonRadius;\r\n\r\n\t\tif (numPoints == null) {\r\n\t\t\tnumPoints = contact.GetManifold().pointCount;\r\n\t\t\tworldManifold = new b2WorldManifold();\r\n\t\t\tcontact.GetWorldManifold(worldManifold);\r\n\t\t}\r\n\r\n\t\t//check if contact points are moving into platform\r\n\t\tfor (let i = 0; i < numPoints; ++i) {\r\n\t\t\tconst cpoint = worldManifold.points[i];\r\n\t\t\tconst pointVelPlatform = fh.GetLinearVelocityFromWorldPoint(cpoint, new b2Vec2());\r\n\t\t\tconst pointVelOther = playerBody.GetLinearVelocityFromWorldPoint(cpoint, new b2Vec2());\r\n\t\t\tconst point = new b2Vec2(pointVelOther.x - pointVelPlatform.x, pointVelOther.y - pointVelPlatform.y);\r\n\t\t\tconst relativeVel = fh.GetLocalVector(point, new b2Vec2());\r\n\t\t\t\r\n\t\t\t//let dist = b2Vec2.SubVV(cpoint, player_pos, new b2Vec2());\r\n\t\t\t//let length = dist.Length();\r\n\t\t\t//\r\n\t\t\t//player._$footCFDist = length;\r\n\t\t\t//player._$footCFSub = Math.abs(length - player.chara_profile.foot_width);\r\n\t\t\t//\r\n\t\t\t//if (player.$foothold && player.$foothold != fh) {\r\n\t\t\t//\tif (player._$footCFSub > b2_polygonRadius) {\r\n\t\t\t//\t\tplayer.leave_$fh = fh;\r\n\t\t\t//\t\tcontinue;\r\n\t\t\t//\t}\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tif (relative_position.y <= -foot_width) {\r\n\t\t\t\tif (relativeVel.y > 1) {//if moving down faster than 1 m/s, handle as before\r\n\t\t\t\t\t//player._foothold = fh;\r\n\t\t\t\t\tif (fh.is_wall || player._which_foothold_contact(fh, cpoint)) {\r\n\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tnormal_contact(cpoint);\r\n\t\t\t\t\t//\treturn;//not primary, normal contact \r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse if (relativeVel.y > -1) { //if moving slower than 1 m/s\r\n\t\t\t\t\t//borderline case, moving only slightly out of platform\r\n\t\t\t\t\t//player._foothold = fh;\r\n\t\t\t\t\tif (fh.is_wall || player._which_foothold_contact(fh, cpoint)) {\r\n\t\t\t\t\t\tif (player.$foothold && player.$foothold.id != fh.id) {\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\treturn;//contact point is less than 5cm inside front face of platfrom\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tnormal_contact(cpoint);\r\n\t\t\t\t\t//\treturn;//not primary, normal contact\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//no points are moving into platform, contact should not be solid\r\n\t\tcontact.SetEnabled(false);\r\n\r\n\t\t/**\r\n\t\t * @param {b2Vec2} cpoint\r\n\t\t */\r\n\t\tfunction normal_contact(cpoint) {\r\n\t\t\tif (fh.is_wall) {\r\n\t\t\t\tcontact.SetFriction(0);\r\n\r\n\t\t\t\tif (player.prev_$fh &&\r\n\t\t\t\t\tplayer.prev_$fh.chain != fh.chain &&\r\n\t\t\t\t\tplayer.prev_$fh.layer != fh.layer\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (player.$foothold &&\r\n\t\t\t\t\tplayer.$foothold.chain != fh.chain &&\r\n\t\t\t\t\tplayer.$foothold.layer != fh.layer\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (player.state.dropDown && player.leave_$fh != null) {\r\n\t\t\t\t//HACK: ?? foothold edge\r\n\t\t\t\tif (player.leave_$fh == player.$foothold && player.$foothold != fh) {\r\n\t\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (playerBody.$type == \"pl_ft_walk\" &&// player.leave_$fh &&\r\n\t\t\t\t\tplayer.leave_$fh.id != fh.id &&\r\n\t\t\t\t\tplayer.leave_$fh.chain.id != fh.chain.id &&\r\n\t\t\t\t\t(player.leave_$fh.prev == null || player.leave_$fh.prev != fh.id) &&\r\n\t\t\t\t\t(player.leave_$fh.next == null || player.leave_$fh.next != fh.id)\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst foot = player.foot_walk.GetPosition();\r\n\t\t\t\t\tif (cpoint.y > foot.y) {\r\n\t\t\t\t\t\tplayer.leave_$fh = null;\r\n\t\t\t\t\t\tplayer.state.dropDown = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tplayer.state.dropDown = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (player.leave_$fh && player.leave_$fh == fh) {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet ccc = $fh && (\r\n\t\t\t\tfh.is_wall ||\r\n\t\t\t\t(fh == player._foothold && (fh.y1 < $fh.y1 || fh.y2 < $fh.y2)) ||\r\n\t\t\t\t(fh != player._foothold && (fh.y1 > $fh.y1 || fh.y2 > $fh.y2))\r\n\t\t\t);\r\n\t\t\tif (ccc && $fh != fh && (!player._$fallEdge || player._$fallEdge != $fh)) {\r\n\t\t\t\tif (fh.chain.id != $fh.chain.id &&\r\n\t\t\t\t\t(!$fh.prev || $fh.y1 != fh.y2) &&\r\n\t\t\t\t\t(!$fh.next || $fh.y2 != fh.y1)\r\n\t\t\t\t) {\r\n\t\t\t\t\tplayer.leave_$fh = fh;\r\n\t\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (player._$fallEdge && player._$fallEdge == fh) {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\tif ((fh.prev == null && (cpoint.x * $gv.CANVAS_SCALE) < fh.x1) ||\r\n\t\t\t\t\t(fh.next == null && (cpoint.x * $gv.CANVAS_SCALE) > fh.x2)\r\n\t\t\t\t) {\r\n\t\t\t\t\tplayer.state.jump = true;\r\n\r\n\t\t\t\t\tplayer._$fallEdge = fh;\r\n\r\n\t\t\t\t\tplayer._foothold = null;\r\n\t\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t\t//\r\n\t\t\t\t\tplayer.$foothold = null;\r\n\r\n\t\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\t//player._$fallEdge = null;//??\r\n\r\n\t\t\t\t//if (fh._is_horizontal_floor && !player.state.dropDown) {//防止反彈\r\n\t\t\t\t//\tplayerBody.ApplyForceToCenter(GRAVITY/*.Clone().SelfMul(10)*/);\r\n\t\t\t\t//}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tendContact_bodyBase_oneway(contact, fa, fb, childIndexA, childIndexB) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = fb.GetUserData();\r\n\t\tif (!player) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tconst fh = this.getFootholdFromContact(childIndexA);\r\n\r\n\t\tif (player._foot_contact_list.length) {\r\n\t\t\tplayer._foot_contact_list.forEach((fc, i) => {\r\n\t\t\t\tif (fc.foothold == fh) {\r\n\t\t\t\t\tplayer._foot_contact_list.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif (player._$fallEdge && fh == player._$fallEdge) {\r\n\t\t\tplayer._$fallEdge = null;\r\n\t\t}\r\n\t\telse if (player._foothold && fh == player._foothold) {\r\n\t\t\tif (player._foot_contact_list.length) {\r\n\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\tlet max = player._foot_contact_list.pop();\r\n\t\t\t\tplayer.$foothold = max.foothold;\r\n\t\t\t\tplayer._foothold = max.foothold;\r\n\t\t\t\tplayer._foot_at = max.position;\r\n\t\t\t\tplayer._foothold_priority = max.priority;\r\n\t\t\t\t//console.log(\"end contact: contact old foothold: fh == player._foothold\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tplayer._foothold = null;//正常離開地面\r\n\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\tplayer.prev_$fh = null;\r\n\t\t\t\t//console.log(\"end contact: 正常離開地面: fh == player._foothold\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (player.$foothold && fh == player.$foothold) {\r\n\t\t\tif (player._foot_contact_list.length) {\r\n\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\tlet max = player._foot_contact_list.pop();\r\n\t\t\t\tplayer.$foothold = max.foothold;\r\n\t\t\t\tplayer._foothold = max.foothold;\r\n\t\t\t\tplayer._foot_at = max.position;\r\n\t\t\t\tplayer._foothold_priority = max.priority;\r\n\t\t\t\t//console.log(\"end contact: contact old foothold: fh == player.$foothold\");\r\n\t\t\t}\r\n\t\t\telse {//afterStep\r\n\t\t\t\tif (player._foothold) {\r\n\t\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\t\tplayer.$foothold = player._foothold;\r\n\t\t\t\t\t//console.log(\"end contact: contact other foothold\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tplayer.$foothold = null;//正常離開地面\r\n\t\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t\tplayer.prev_$fh = null;\r\n\t\t\t\t\t//console.info(\"end contact: 正常離開地面: fh == player.$foothold\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (player.leave_$fh && player.leave_$fh == fh) {\r\n\t\t\tplayer.leave_$fh = null;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tpreSolveGround_bodyBase_oneway(contact, oldManifold, fa, fb, childIndexA, childIndexB) {\r\n\t\t/** @type {Ground} */\r\n\t\tlet that = fa.GetBody().GetUserData();\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tlet target = this;\r\n\r\n\t\tthat.beginContact_bodyBase_oneway.call(target, contact, fa, fb, childIndexA, childIndexB);\r\n\t\t\r\n\t\t//if (contact.IsEnabled() && contact.IsTouching()) {\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\tunload(world) {\r\n\t\tfor (let i = 0; i < this.bodies.length; ++i) {\r\n\t\t\tworld.DestroyBody(this.bodies[i]);\r\n\t\t}\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {object} data\r\n\t */\r\n\taddFoothold(data) {\r\n\t\tthis.footholds.push(new Foothold(data));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t$drawDebugInfo(renderer) {\r\n\t\tif ($gv.m_display_foothold) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.lineCap = \"round\";\r\n\t\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\t\tlet fh = this.footholds[i];\r\n\t\t\t\tif (fh == null) {//line end\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (fh.$showDebugInfo) {\r\n\t\t\t\t\tfh.$drawDebugInfo(renderer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t$showDebugInfo(layer, group, isShow, isHide) {\r\n\t\tif (isShow == null) {\r\n\t\t\tisShow = true;\r\n\t\t}\r\n\t\tif (isHide == null) {\r\n\t\t\tisHide = false;\r\n\t\t}\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tif (fh.layer == layer && fh.group == group) {\r\n\t\t\t\tfh.$showDebugInfo = isShow;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfh.$showDebugInfo = isHide;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t$showDebugInfoByLayer(layer, isShow, isHide) {\r\n\t\tif (isShow == null) {\r\n\t\t\tisShow = true;\r\n\t\t}\r\n\t\tif (isHide == null) {\r\n\t\t\tisHide = false;\r\n\t\t}\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tif (fh.layer == layer) {\r\n\t\t\t\tfh.$showDebugInfo = isShow;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfh.$showDebugInfo = isHide;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//static $showDebugInfoByGroup() {\r\n\t//}\r\n\t$hideAllDebugInfo() {\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tfh.$showDebugInfo = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nGround.Foothold = Foothold;\r\n\r\n","﻿\r\nimport { Vec2 } from \"../math.js\";\r\n\r\n\r\nexport class ActionAnimationFrameData {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.move = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded raw data\r\n\t * @param {ActionAnimationFrameData} raw\r\n\t * @param {string} action\r\n\t * @param {number} frame\r\n\t */\r\n\t_load(raw, action, frame) {\r\n\t\tthis._raw = raw;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = raw.delay;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tif (raw.move) {\r\n\t\t\tthis.move = new Vec2(raw.move.x, raw.move.y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.move = new Vec2(0, 0);\r\n\t\t}\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = raw.action || action;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = raw.frame || frame;\r\n\t}\r\n}\r\n\r\nexport class ActionAnimation {\r\n\tconstructor(raw) {\r\n\t\t/** @returns {ActionAnimationFrameData[]} */\r\n\t\tthis.frames = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._action = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\r\n\t\t/** @type {number} this.delay = delay < 0 ? -delay:0; if (this.delay == 0) launch attack */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.loop = false;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\t_load(action) {\r\n\t\tthis._action = action;\r\n\t\tthis.frames = ActionAnimation.Adef[action];\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\treload(action) {\r\n\t\tthis.reset();\r\n\t\tthis._load(action);\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * update action delay, target.action, target.action_frame, target.tx, target.ty\r\n\t * @param {number} stamp\r\n\t * @param {CharacterRenderer} target\r\n\t */\r\n\tupdate(stamp, target) {\r\n\t\tif (!this.frames) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fdat = this.fdat;\r\n\t\tlet delay = 0;\r\n\r\n\t\tif (!fdat) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.time = this.time + stamp;\r\n\r\n\t\tif (fdat.delay < 0) {\r\n\t\t\tfdat.delay = -fdat.delay;\r\n\t\t}\r\n\r\n\t\tif (fdat.delay > 0) {\r\n\t\t\tdelay = fdat.delay;\r\n\t\t\tthis.delay = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelay = -fdat.delay;\r\n\t\t\tthis.delay = delay;\r\n\t\t}\r\n\r\n\t\tif (this.time > delay) {\r\n\t\t\tthis.frame = ++this.frame;\r\n\t\t\tthis.time = 0;\r\n\t\t}\r\n\r\n\t\t//translate target position\r\n\t\tif (fdat.move) {\r\n\t\t\ttarget.tx = -fdat.move.x * target.front;\r\n\t\t\ttarget.ty = fdat.move.y;//Y 軸相反\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\tif (this.isEnd()) {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// 改變 action & action_frame 會造成迴圈: this.reload(this._action)\r\n\t\ttarget._action = fdat.action;\r\n\t\ttarget._action_frame = fdat.frame;\r\n\r\n\t\tif (!this.frames || this.fdat == null) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t\telse if (!this.loop) {\r\n\t\t\tthis._is_end = false;\r\n\t\t}\r\n\t\tif (this.frames.length <= 1) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\treturn this._is_end;\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.frames.reduce((total, frame) => total + frame.delay, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * frame data\r\n\t * @returns {ActionAnimationFrameData}\r\n\t */\r\n\tget fdat() {\r\n\t\treturn this.frames[this.frame];\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\t/** @type {{[action:string]:ActionAnimationFrameData[]}} */\r\n\t\tlet raw = await $get.data(ActionAnimation._base_path);\r\n\r\n\t\tlet aadef = Object.assign({}, raw);\r\n\t\t\r\n\t\tdelete aadef['info'];\r\n\r\n\t\tfor (let actName in aadef) {\r\n\t\t\tlet aa = aadef[actName];\r\n\t\t\taadef[actName] = Object.values(aa).map((_fdef, frame) => {\r\n\t\t\t\tlet fdef = new ActionAnimationFrameData();\r\n\t\t\t\tfdef._load(_fdef, actName, frame);\r\n\t\t\t\treturn fdef;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//action definition\r\n\t\tActionAnimation.Adef = aadef;\r\n\r\n\t\twindow.CharacterActionAnimationDefinition = aadef;\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Character/00002000\";\r\n\t}\r\n}\r\n/**\r\n * action definition\r\n * @type {{[action:string]:ActionAnimationFrameData[]}}\r\n */\r\nActionAnimation.Adef = null;\r\n\r\n","﻿\r\nimport { ItemCategoryInfo } from \"../../public/javascripts/resource.js\";\r\n\r\nimport { Sprite } from \"./Sprite\";\r\n\r\nimport { KeySlotData } from \"../ui/Basic/KeySlotData.js\";\r\n\r\n\r\n/** @type {$ItemRawData} */\r\nlet _loadedItem = {};\r\n\r\nwindow.$loadedItem = _loadedItem;\r\n\r\n\r\nclass $ItemRawData {\r\n\tconstructor() {\r\n\t}\r\n}\r\n\r\n\r\n//class ItemInfo {\r\n//\t/**\r\n//\t * @param {{}} _rawInfo\r\n//\t */\r\n//\tconstructor(_raw) {\r\n//\t\tthis.icon = new Sprite(_raw.icon);\r\n//\t\tthis.iconRaw = new Sprite(_raw.iconRaw);\r\n//\t}\r\n//\r\n//\t/**\r\n//\t * @param {string} itemId\r\n//\t * @returns {Promise<Sprite[]>}\r\n//\t */\r\n//\tload(itemId, loadSprite = false) {\r\n//\t\tlet url = ItemCategoryInfo.getIconUrl(itemId);\r\n//\t\tlet rawUrl = ItemCategoryInfo.getIconRawUrl(itemId);\r\n//\r\n//\t\tthis.icon._url = url;\r\n//\t\tthis.iconRaw._url = rawUrl;\r\n//\r\n//\t\t// 目前用不到 Sprite\r\n//\t\t// UI 只會用到 _raw, Image\r\n//\r\n//\t\tif (loadSprite) {\r\n//\t\t\t//manual load\r\n//\t\t\tthis.icon.__loadTexture();\r\n//\t\t\tthis.iconRaw.__loadTexture();\r\n//\r\n//\t\t\treturn Promise.all([this.icon.$promise, this.iconRaw.$promise]);\r\n//\t\t}\r\n//\t}\r\n//}\r\n\r\nexport class ItemBase {\r\n\t/**\r\n\t * @param {string} itemId\r\n\t * @param {{}} _raw\r\n\t */\r\n\tconstructor(itemId, _raw) {\r\n\t\t//this.assign(this, _raw);\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis._raw = null;\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.id = null;\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t\"_raw\": {\r\n\t\t\t\tvalue: _raw\r\n\t\t\t},\r\n\t\t\t\"id\": {\r\n\t\t\t\tvalue: itemId\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!this._raw.info) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\r\n\t\tthis._raw.info.id = itemId;\r\n\t\tthis._raw.info.name = \"<loading>\";\r\n\t\tthis._raw.info.desc = \"<loading>\";\r\n\t\tthis._raw.info.__v = window.DATA_TAG + window.DATA_VERSION;\r\n\r\n\t\tlet isItem = ItemCategoryInfo.isItem(itemId);\r\n\r\n\t\tif (!isItem) {\r\n\t\t\tthis._raw.info.icon = {};\r\n\t\t\tthis._raw.info.iconRaw = {};\r\n\t\t}\r\n\r\n\t\tthis._raw.info.icon[\"\"] = ItemCategoryInfo.getIconUrl(itemId);\r\n\t\tthis._raw.info.iconRaw[\"\"] = ItemCategoryInfo.getIconRawUrl(itemId);\r\n\r\n\t\tif (isItem) {\r\n\t\t\tthis._load();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._raw.info.name = itemId;\r\n\t\t\tthis._raw.info.desc = \"<not item>\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * load name and desc\r\n\t */\r\n\tasync _load() {\r\n\t\tlet data = await ItemCategoryInfo.loadString(this.id);\r\n\r\n\t\tthis._raw.info.name = data.name;\r\n\t\tthis._raw.info.desc = data.desc;\r\n\t}\r\n}\r\n\r\nexport class ItemEquip extends ItemBase {\r\n}\r\nItemEquip.prototype.$test_proto_prop = 123;\r\n\r\nexport class ItemConsume extends ItemBase {\r\n}\r\n\r\nexport class ItemEtc extends ItemBase {\r\n}\r\n\r\nexport class ItemInstall extends ItemBase {\r\n}\r\n\r\nexport class ItemCash extends ItemBase {\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {string} itemId\r\n * @param {...Partial<T>} props\r\n * @returns {Promise<T>}\r\n */\r\nfunction _createItemSync(itemId, ...props) {\r\n\tlet itemPrototype = _loadedItem[itemId];\r\n\tif (!itemPrototype) {\r\n\t\tthrow new TypeError();\r\n\t}\r\n\r\n\t/** @type {string} - 1 digit */\r\n\tlet typeId = itemId[0];\r\n\r\n\t/** @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} */\r\n\tlet _itemType;\r\n\r\n\tswitch (typeId) {\r\n\t\tcase '0':\r\n\t\t\t_itemType = ItemEquip;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"未完成\");\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tlet item = new _itemType(itemId, itemPrototype);\r\n\r\n\tif (props && props.length) {\r\n\t\tObject.assign(item, ...props);\r\n\t}\r\n\r\n\treturn item;\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {string} itemId\r\n * @param {...Partial<T>} props\r\n * @returns {Promise<T>}\r\n */\r\nexport async function $createItem(itemId, ...props) {\r\n\t/** @type {string} - 1 digit */\r\n\tlet typeId = itemId[0];\r\n\t/** @type {string} */\r\n\tlet url;\r\n\r\n\t/** @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} */\r\n\tlet _itemType;\r\n\r\n\tswitch (typeId) {\r\n\t\tcase '0':\r\n\t\t\t_itemType = ItemEquip;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"未完成\");\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\turl = ItemCategoryInfo.getDataPath(itemId);\r\n\r\n\tlet itemPrototype = await $get.data(url);// raw\r\n\tif (!itemPrototype) {\r\n\t\tconsole.warn(\"item not exist: \" + itemId);\r\n\t\treturn null;\r\n\t}\r\n\t_loadedItem[itemId] = itemPrototype;\r\n\r\n\tlet item = new _itemType(itemId, itemPrototype);\r\n\r\n\tif (props && props.length) {\r\n\t\tObject.assign(item, ...props);\r\n\t}\r\n\r\n\treturn item;\r\n}\r\n\r\n\r\nexport class ItemSlot extends KeySlotData {\r\n\t/**\r\n\t * @template T\r\n\t * @param {number} itemSlot\r\n\t * @param {number} itemSN\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\tconstructor(itemSlot, itemSN, itemData, amount) {\r\n\t\tsuper();\r\n\r\n\t\tthis.SN = itemSN;\r\n\t\tthis.slot = itemSlot;\r\n\t\tthis.amount = amount;\r\n\t\t\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} - item props\r\n\t\t */\r\n\t\tthis.data = itemData;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @template T\r\n\t * @param {number} itemSlot\r\n\t * @param {number} itemSN\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\tassign(itemSlot, itemSN, itemData, amount) {\r\n\t\tthis.SN = itemSN;\r\n\t\tthis.slot = itemSlot;\r\n\t\tthis.amount = amount;\r\n\r\n\t\tthis.data = itemData;\r\n\t}\r\n\r\n\t_clear() {\r\n\t\tthis.data = null;\r\n\t\tthis.amount = 0;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((!this.data && this.amount) || (this.data && !this.amount)) {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !this.data && !this.amount;\r\n\t}\r\n\r\n\tgetData() {\r\n\t\treturn this.data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} data\r\n\t */\r\n\tsetData(data) {\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t */\r\n\tstatic parse(text) {\r\n\t\tif (text.__proto__ == String.prototype) {\r\n\t\t\tlet iSlot = new ItemSlot();\r\n\t\t\tlet o = JSON.parse(text);\r\n\t\t\t//iSlot.SN = o.SN;\r\n\t\t\t//iSlot.slot = o.slot;\r\n\t\t\t//iSlot.amount = o.amount;\r\n\t\t\t//iSlot.itemId = o.itemId;\r\n\t\t\tObject.assign(iSlot, o);\r\n\t\t\treturn iSlot;\r\n\t\t}\r\n\t\tthrow new TypeError();\r\n\t}\r\n}\r\n","﻿\r\nclass CharacterBaseStat {\r\n\tconstructor() {\r\n\t\tthis.hp = 8855;\r\n\t\tthis.mp = 5246;\r\n\t\tthis.mhp = 28855;\r\n\t\tthis.mmp = 25246;\r\n\t\tthis.exp = 55;\r\n\r\n\t\tthis.str = 123;\r\n\t\tthis.luk = 4;\r\n\t\tthis.dex = 999;\r\n\t\tthis.int = 4;\r\n\t}\r\n}\r\n\r\nclass CharacterTemporaryStat {\r\n}\r\n\r\nconst symbol_job = Symbol(\"job\");\r\nconst symbol_onJobChange = Symbol(\"onJobChange\");\r\n\r\nclass CharacterStat extends CharacterBaseStat {\r\n\tconstructor(sceneChara) {\r\n\t\tsuper();\r\n\r\n\t\tthis._$sceneChara = sceneChara;\r\n\r\n\t\tthis.level = 150;\r\n\r\n\t\t//this._job = 3;\r\n\t\t//this._spec_job = 3;\r\n\r\n\t\t///** @type {number} - 最大屬性攻擊 */\r\n\t\t//this.currentMaxBaseDamage = 10000;\r\n\r\n\t\t///** @type {number} - 最小屬性攻擊 */\r\n\t\t//this.currentMinBaseDamage = 1000;\r\n\r\n\t\t/** @type {number} - 爆擊率 0~100 */\r\n\t\tthis.critRate = 50;\r\n\r\n\t\t/** @type {number} - 爆擊傷害 0~100 */\r\n\t\tthis.critDamage = 80;\r\n\r\n\t\t///** @type {number} - 最大爆擊傷害 0~100 */\r\n\t\t//this.maxCritDamage = 80;\r\n\r\n\t\t///** @type {number} - 最小爆擊傷害 0~100 */\r\n\t\t//this.minCritDamage = 40;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget job() {\r\n\t\treturn this[symbolStatJob];\r\n\t}\r\n\tset job(value) {\r\n\t\tthis[symbolStatJob] = value;\r\n\r\n\t\tconst onJobChange = this[symbol_onJobChange];\r\n\r\n\t\tif (_onJobChange) {\r\n\t\t\t_onJobChange()\r\n\t\t}\r\n\t}\r\n\r\n\t/** @param {function():void} cbfunc */\r\n\tonJobChange(cbfunc) {\r\n\t\tthis[symbol_onJobChange] = cbfunc;\r\n\t}\r\n\r\n\t_getTotalAttack() {\r\n\t\treturn 100;\r\n\t}\r\n\r\n\t/** @returns {number} - 最大屬性攻擊 */\r\n\tgetCurrentMaxBaseDamage() {\r\n\t\t//return this.currentMaxBaseDamage;\r\n\t\treturn 1.30 * (4 * this.dex + this.str) * (this._getTotalAttack() / 100);\r\n\t}\r\n\t/** @returns {number} - 最小屬性攻擊 */\r\n\tgetCurrentMinBaseDamage() {\r\n\t\t//return this.currentMinBaseDamage;\r\n\t\treturn 1.30 * (this.dex + this.str) * (this._getTotalAttack() / 100);\r\n\t}\r\n\t/** @returns {number} - 爆擊率 0~100 */\r\n\tgetCritRate() {\r\n\t\treturn this.critRate;\r\n\t}\r\n\t/** @returns {number} - 爆擊傷害 0~100 */\r\n\tgetCritDamage() {\r\n\t\treturn this.critDamage;\r\n\t}\r\n\t///** @returns {number} - 最大爆擊傷害 0~100 */\r\n\t//getMaxCritDamage() {\r\n\t//\treturn this._$maxCritDamage;\r\n\t//}\r\n\t///** @returns {number} - 最小爆擊傷害 0~100 */\r\n\t//getMinCritDamage() {\r\n\t//\treturn this._$minCritDamage;\r\n\t//}\r\n\r\n\tgetHpPercentS() {\r\n\t\treturn (this.hp * 100 / this.mhp).toFixed(0);\r\n\t}\r\n\tgetMpPercentS() {\r\n\t\treturn (this.mp * 100 / this.mmp).toFixed(0);\r\n\t}\r\n\tgetExpPercentS() {\r\n\t\treturn (this.exp * 100 / this.getNextExp()).toFixed(2);\r\n\t}\r\n\tgetNextExp() {\r\n\t\treturn 100;\r\n\t}\r\n}\r\n\r\n//?? packet\r\nclass $RemotePlayerData {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.id = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.equips_code = null;\r\n\t}\r\n}\r\n//?? packet\r\nclass $PlayerData extends $RemotePlayerData {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t/** @type {CharacterStat} */\r\n\t\tthis.stat = undefined;\r\n\t}\r\n\r\n\tgetRemoteData() {\r\n\t\treturn {\r\n\t\t\tid: this.id,\r\n\t\t\tmapId: this.mapId,\r\n\t\t\tequips_code: this.equips_code,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tCharacterStat,\r\n\t$RemotePlayerData, $PlayerData,\r\n};\r\n","\r\nwindow.DownloadData = (function () {\r\n\tlet a = document.createElement(\"a\");\r\n\tdocument.body.appendChild(a);\r\n\ta.style = \"display: none\";\r\n\ta.target = \"_blank\";\r\n\treturn function (text, type, fileName) {\r\n\t\tlet blob = new Blob([text], { type: type || \"octet/stream\" });\r\n\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\tif (fileName && fileName != \"\") {\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = fileName;\r\n\t\t\ta.click();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//a.href = url;\r\n\t\t\t//a.click();\r\n\t\t\twindow.open(url, '_blank');\r\n\t\t}\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n}());\r\n\r\nwindow.SelectText = function (elem) {\r\n\tvar range, selection;\r\n\r\n\tif (document.body.createTextRange) {\r\n\t\trange = document.body.createTextRange();\r\n\t\trange.moveToElementText(elem);\r\n\t\trange.select();\r\n\t}\r\n\telse if (window.getSelection) {\r\n\t\tselection = window.getSelection();\r\n\t\trange = document.createRange();\r\n\t\trange.selectNodeContents(elem);\r\n\t\tselection.removeAllRanges();\r\n\t\tselection.addRange(range);\r\n\t}\r\n}\r\nwindow.copyToClipboard = function (text) {\r\n\tvar $temp = $(\"<input>\");\r\n\t$(\"body\").append($temp);\r\n\t$temp.val(text).select();\r\n\tdocument.execCommand(\"copy\");\r\n\t$temp.remove();\r\n}\r\n\r\n/**\r\n * disable textNode \"#text\"\r\n * @param {string} xml - xml\r\n * @param {string[]=} arrayTags - optional\r\n * @returns {object}\r\n */\r\nfunction parseXml(xml, arrayTags) {\r\n\tvar dom = null;\r\n\tif (window.DOMParser) {\r\n\t\tdom = (new DOMParser()).parseFromString(xml, \"text/xml\");\r\n\t}\r\n\telse if (window.ActiveXObject) {\r\n\t\tdom = new ActiveXObject('Microsoft.XMLDOM');\r\n\t\tdom.async = false;\r\n\t\tif (!dom.loadXML(xml)) {\r\n\t\t\tthrow dom.parseError.reason + \" \" + dom.parseError.srcText;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tthrow \"cannot parse xml string!\";\r\n\t}\r\n\r\n\tfunction isArray(o) {\r\n\t\treturn Object.prototype.toString.apply(o) === '[object Array]';\r\n\t}\r\n\r\n\tfunction parseNode(xmlNode, result) {\r\n\t\tif (xmlNode.nodeName == \"#text\" && xmlNode.nodeValue.trim() == \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar jsonNode = {};\r\n\t\tvar existing = result[xmlNode.nodeName];\r\n\t\tif (existing) {\r\n\t\t\tif (!isArray(existing)) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [existing, jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName].push(jsonNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName] = jsonNode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (xmlNode.attributes) {\r\n\t\t\tvar length = xmlNode.attributes.length;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tvar attribute = xmlNode.attributes[i];\r\n\t\t\t\tjsonNode[attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar length = xmlNode.childNodes.length;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tparseNode(xmlNode.childNodes[i], jsonNode);\r\n\t\t}\r\n\t}\r\n\r\n\tvar result = {};\r\n\tif (dom.childNodes.length) {\r\n\t\tparseNode(dom.childNodes[0], result);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n","\r\n<template>\r\n\t<div @mousedown=\"mousedown($event)\" class=\"ui-draggable\">\r\n\t\t<slot></slot>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\t//var cs = getComputedStyle(event.currentTarget, null);\r\n\t\r\n\t//not effective in ui\r\n\t//this func no work, mouse event from window\r\n\tfunction reset_mouse() {\r\n\t\t$gv.mouse_move = 0;\r\n\t\t$gv.mouse_x = 0;\r\n\t\t$gv.mouse_y = 0;\r\n\t\t$gv.mouse_dl = 0;\r\n\t\t$gv.mouse_ul = 0;\r\n\t\t$gv.mouse_dm = 0;\r\n\t\t$gv.mouse_um = 0;\r\n\t\t$gv.mouse_dr = 0;\r\n\t\t$gv.mouse_ur = 0;\r\n\t}\r\n\r\n\tfunction _calc_origin_pos(el) {\r\n\t\tlet left = el.style.left;\r\n\t\tlet top = el.style.top;\r\n\t\tlet x, y;\r\n\r\n\t\tel.style.left = \"0px\";\r\n\t\tx = el.offsetLeft;\r\n\t\tel.style.left = left;\r\n\r\n\t\tel.style.top = \"0px\";\r\n\t\ty = el.offsetTop;\r\n\t\tel.style.top = top;\r\n\r\n\t\treturn {\r\n\t\t\tx, y\r\n\t\t}\r\n\t}\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\thandle: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"header\",\r\n\t\t\t\tdescription: \"class only\"\r\n\t\t\t},\r\n\t\t\tzIndex: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 0,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tdefault: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\trequired: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tmouse_x0: 0,\r\n\t\t\t\tmouse_y0: 0,\r\n\t\t\t\torigin_x: 0,\r\n\t\t\t\torigin_y: 0,\r\n\t\t\t\told_width: 0,\r\n\t\t\t\told_height: 0,\r\n\t\t\t\t//elem_handle: null,\r\n\t\t\t\thandle_mousemove: null,\r\n\t\t\t\thandle_mouseup: null,\r\n\t\t\t}\r\n\t\t},\r\n\t\t//computed: {\r\n\t\t//\thandleClassName: function () {\r\n\t\t//\t\treturn this.handle || \"header\";\r\n\t\t//\t},\r\n\t\t//},\r\n\t\tmethods: {\r\n\t\t\tmousemove: function () {\r\n\t\t\t\treset_mouse();\r\n\t\t\t\tif (event.which == 1) {\r\n\t\t\t\t\tlet el = this.$el;//event.currentTarget\r\n\r\n\t\t\t\t\tlet x = event.clientX - this.mouse_x0;\r\n\t\t\t\t\tlet y = event.clientY - this.mouse_y0;\r\n\r\n\t\t\t\t\tel.style.left = Math.max(x, 0) + \"px\";\r\n\t\t\t\t\tel.style.top = Math.max(y, 0) + \"px\";\r\n\r\n\t\t\t\t\tlet pw = el.parentElement.offsetWidth;\r\n\t\t\t\t\tlet ph = el.parentElement.offsetHeight;\r\n\r\n\t\t\t\t\tlet ox = el.offsetLeft;\r\n\t\t\t\t\tlet oy = el.offsetTop;\r\n\t\t\t\t\tlet ow = this.old_width;//el.offsetWidth;\r\n\t\t\t\t\tlet oh = this.old_height;//el.offsetHeight;\r\n\r\n\t\t\t\t\tif (ox < 0) {\r\n\t\t\t\t\t\tel.style.left = \"0px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (ox + ow >= pw) {\r\n\t\t\t\t\t\tel.style.left = (pw - ow) + \"px\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// parent 高度不足時對齊上邊\r\n\t\t\t\t\tif (oy >= 0) {\r\n\t\t\t\t\t\tif (oh < ph) {\r\n\t\t\t\t\t\t\tif (oy + oh >= ph) {\r\n\t\t\t\t\t\t\t\tel.style.top = (ph - oh) + \"px\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tel.style.top = (-this.origin_y) + \"px\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (oy < 0) {\r\n\t\t\t\t\t\tel.style.top = \"0px\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//el.style.minWidth = ow + \"px\";\r\n\t\t\t\t\t//el.style.minHeight = oh + \"px\";\r\n\r\n\r\n\r\n\t\t\t\t\t//if (el.style.width != \"auto\") {\r\n\t\t\t\t\t//\tel.style.width = ow = \"px\";\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t//if (el.style.height != \"auto\") {\r\n\t\t\t\t\t//\tel.style.height = oh = \"px\";\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.mouseup();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmousedown: function (event) {\r\n\t\t\t\treset_mouse();\r\n\t\t\t\t//if (event.target != this.elem_handle) {\r\n\t\t\t\t//\treturn;\r\n\t\t\t\t//}\r\n\t\t\t\tif (!event.target.classList.contains(this.handle)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tevent.target.focus();\r\n\r\n\t\t\t\tlet rp = this.get_relative_position();\r\n\r\n\t\t\t\t//calc click-position of parent\r\n\t\t\t\tthis.mouse_x0 = event.clientX - rp.x;\r\n\t\t\t\tthis.mouse_y0 = event.clientY - rp.y;\r\n\t\t\t\tif (event.which == 1) {\r\n\t\t\t\t\tlet el = this.$el;\r\n\t\t\t\t\tthis.old_width = el.offsetWidth;\r\n\t\t\t\t\tthis.old_height = el.offsetHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet vm = this;\r\n\r\n\t\t\t\tthis.handle_mousemove = function (event) {\r\n\t\t\t\t\tvm.mousemove(event);\r\n\t\t\t\t};\r\n\t\t\t\tthis.handle_mouseup = function () {\r\n\t\t\t\t\tvm.mouseup();\r\n\t\t\t\t};\r\n\r\n\t\t\t\twindow.addEventListener(\"mousemove\", vm.handle_mousemove);\r\n\t\t\t\twindow.addEventListener(\"mouseup\", vm.handle_mouseup);\r\n\t\t\t},\r\n\t\t\tmouseup: function () {\r\n\t\t\t\treset_mouse();\r\n\t\t\t\twindow.removeEventListener(\"mousemove\", this.handle_mousemove);\r\n\t\t\t\twindow.removeEventListener(\"mouseup\", this.handle_mouseup);\r\n\t\t\t\tthis.$emit(\"update:position\", this.get_relative_position());\r\n\t\t\t},\r\n\t\t\tget_relative_position: function () {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: this.$el.offsetLeft,\r\n\t\t\t\t\ty: this.$el.offsetTop\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tlet el = this.$el;\r\n\t\t\tlet x, y;\r\n\r\n\t\t\tx = this.position.x;\r\n\t\t\ty = this.position.y;\r\n\r\n\t\t\tif (this.position.x || this.position.y) {\r\n\t\t\t\tthis.$el.style.left = x + \"px\";\r\n\t\t\t\tthis.$el.style.top = y + \"px\";\r\n\t\t\t\tthis.origin_x = x;\r\n\t\t\t\tthis.origin_y = y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet ori_pos = _calc_origin_pos(el);\r\n\r\n\t\t\t\tthis.origin_x = ori_pos.x;\r\n\t\t\t\tthis.origin_y = ori_pos.y;\r\n\t\t\t}\r\n\t\t\t//this.elem_handle = el.querySelector(this.handle);\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tzIndex: function (val) {\r\n\t\t\t\tthis.$el.style.zIndex = val;\r\n\t\t\t},\r\n\t\t\t\"position.x\": function (val) {\r\n\t\t\t\tthis.$el.style.left = val + \"px\";\r\n\t\t\t},\r\n\t\t\t\"position.y\": function (val) {\r\n\t\t\t\tthis.$el.style.top = val + \"px\";\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.ui-draggable {\r\n\t\tposition: absolute;\r\n\t\tdisplay: inline-block;\r\n\t\tuser-select: none;\r\n\t}\r\n</style>\r\n\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-draggable.vue?vue&type=template&id=6de210d4&\"\nimport script from \"./ui-draggable.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-draggable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-draggable.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ui-draggable\",on:{\"mousedown\":function($event){_vm.mousedown($event)}}},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","﻿\r\nimport { Rectangle, Vec2 } from \"../math.js\";\r\n\r\nimport {\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2Body, b2Fixture,\r\n\tb2PolygonShape, b2CircleShape,\r\n\tb2Contact, b2Manifold,\r\n\tFixtureContactListener,\r\n} from \"./Physics.js\";\r\n\r\nimport { World } from \"./World.js\";\r\n\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { SceneSkill, SkillEffectAnimation } from \"../Skill.js\";\r\n\r\nimport { AttackInfo } from \"../../Common/AttackInfo.js\";\r\n\r\nimport { BaseSceneCharacter } from \"../SceneCharacter.js\";//?? SceneCharacter, SceneRemoteCharacter\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport class PBullet {\r\n\t/**\r\n\t * @param {PPlayer} owner\r\n\t * @param {SceneSkill} skill\r\n\t * @param {SkillEffectAnimation} bulletRenderer\r\n\t */\r\n\tconstructor(owner, skill, bulletRenderer) {\r\n\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\tif (!owner || !skill || !bulletRenderer) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\talert(\"new PBullet(owner, skill)\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.owner = owner;\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {SceneSkill} */\r\n\t\tthis.skill = skill;\r\n\r\n\t\t/** @type {SkillEffectAnimation} */\r\n\t\tthis.bulletRenderer = bulletRenderer;\r\n\r\n\t\t/** @type {BaseBulletMoveFunc} */\r\n\t\tthis.bulletMoveFunc = null;\r\n\r\n\t\t/** @type {-1|1} */\r\n\t\tthis.front = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Partial<FixtureContactListener>=} listener\r\n\t */\r\n\t_create(listener) {\r\n\t\tconst world = this.owner.body.GetWorld();\r\n\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tconst cx = (this.bulletRenderer.textures[0]._raw.__w * 0.5) / $gv.CANVAS_SCALE;\r\n\t\tconst cy = (this.bulletRenderer.textures[0]._raw.__h * 0.5) / $gv.CANVAS_SCALE;\r\n\r\n\t\tlet { x, y } = this.owner.body.GetWorldCenter();\r\n\t\tconst front = this.owner.state.front;\r\n\r\n\t\t//TODO: set bullet position, front, angle\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;\r\n\t\tif (front > 0) {\r\n\t\t\tbdef.position.Set(x + cx, y);\r\n\t\t}\r\n\t\telse if (front < 0) {\r\n\t\t\tbdef.position.Set(x - cx, y);\r\n\t\t}\r\n\t\telse {//?? center position\r\n\t\t\tbdef.position.Set(x, y);\r\n\t\t}\r\n\t\tbdef.angle = 0;//???\r\n\t\tbdef.gravityScale = 0;\r\n\t\tbdef.allowSleep = false;\r\n\t\tbdef.bullet = true;\r\n\t\tbdef.fixedRotation = true;\r\n\t\tbdef.userData = this;\r\n\r\n\t\tthis.body = world.CreateBody(bdef);\r\n\r\n\t\tshape.SetAsBox(cx, cy);//renderer origin is center\r\n\t\t\r\n\t\t//TODO: implement filter: player_bullet\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"bullet\"));\r\n\t\t//fdef.filter.Copy(FilterHelper.get(\"pvp_bullet\"));\r\n\t\t\r\n\t\tfdef.userData = this;\r\n\r\n\t\tlet fixture = this.body.CreateFixture(fdef);\r\n\r\n\t\tif (listener) {\r\n\t\t\tObject.keys(FixtureContactListener.prototype).forEach(key => fixture[key] = listener[key]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfixture.preSolve = bullet_default_preSolve;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetPosition() {\r\n\t\treturn this.body.GetPosition();\r\n\t}\r\n\r\n\t/**\r\n\t * default is horizontal move front\r\n\t * @param {BaseBulletMoveFunc=} bulletMoveFunc\r\n\t * @param {number=} linearVelocityX - unit is meter\r\n\t * @param {number=} linearVelocityY - unit is meter\r\n\t */\r\n\tlaunch(bulletMoveFunc, linearVelocityX, linearVelocityY) {\r\n\t\tif (bulletMoveFunc) {\r\n\t\t\tdebugger;\r\n\r\n\t\t\tthis.bulletMoveFunc = bulletMoveFunc;\r\n\t\t\t//TODO: this.bulletMoveFunc.Step\r\n\t\t\t//TODO: this.bulletMoveFunc.AfterStep\r\n\r\n\t\t\tthis.body.addStep(bulletMoveFunc.Step.bind(bulletMoveFunc, this));\r\n\t\t\tthis.body.addAfterStep(bulletMoveFunc.AfterStep.bind(bulletMoveFunc, this));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.body.m_linearVelocity.Set(linearVelocityX, linearVelocityY);\r\n\r\n\t\t\t//TODO: time to live, range limit\r\n\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\tthis.body.AfterStep = () => {\r\n\t\t\t\t\tthis.$tick = (this.$tick | 0) + 1;\r\n\t\t\t\t\tif (this.$tick > (window.$FIRE_BULLET_TIME_TO_LIVE || 60)) {\r\n\t\t\t\t\t\tthis.bulletRenderer.destroy();\r\n\t\t\t\t\t\tthis.destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tif (this.body) {\r\n\t\t\tthis.body.m_world.DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\r\n\t\t\t//this.bulletRenderer.destroy();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Manifold} oldManifold\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nfunction bullet_default_preSolve(contact, oldManifold, fa, fb) {\r\n\t/** @type {PPlayer} */\r\n\tconst targetPlayer = fb.m_userData;\r\n\tif (!targetPlayer) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/** @type {BaseSceneCharacter} */\r\n\tconst targetChara = targetPlayer.chara;//not implement yet\r\n\tif (!targetChara) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/** @type {PBullet} */\r\n\tconst that = fa.m_userData;\r\n\r\n\t/** @type {PPlayer} */\r\n\tconst ownerPlayer = that.owner;\r\n\t\r\n\t//not from self\r\n\tif (ownerPlayer == targetPlayer) {\r\n\t\treturn;\r\n\t}\r\n\tthat.skill.addAttack(targetChara);\r\n\r\n\tcontact.SetEnabled(false);\r\n\r\n\tthat.bulletRenderer.destroy();\r\n\tthat.destroy();\r\n}\r\n\r\n\r\n/**\r\n * 子彈的移動方式\r\n */\r\nexport class BaseBulletMoveFunc {\r\n\tconstructor() {\r\n\t}\r\n\r\n\t//TODO: base bullet move function\r\n\r\n\t/**\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tinit(bullet) {\r\n\t}\r\n\r\n\t/**\r\n\t * before update\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tStep(bullet) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tAfterStep(bullet) {\r\n\t}\r\n}\r\n\r\n\r\n\t///**\r\n\t// * b2Vec2(meter) to Vec2 (pixel)\r\n\t// * @returns {Vec2}\r\n\t// */\r\n\t//getPosition() { }","﻿\r\nimport { IRenderer } from \"./IRenderer.js\";\r\nimport { Sprite } from \"./Sprite.js\";\r\nimport { Animation } from \"./Animation\";\r\nimport { SceneObject } from \"./SceneObject\";\r\nimport { ActionAnimation } from './Renderer/CharacterActionAnimation.js';\r\nimport { CharacterAnimationBase } from \"./Renderer/CharacterRenderer.js\";\r\nimport { PPlayer } from \"./Physics/PPlayer.js\";\r\nimport { SceneCharacter } from \"./SceneCharacter.js\";\r\nimport { World } from \"./Physics/World.js\";\r\nimport { PBullet } from \"./Physics/PBullet.js\";\r\nimport { AttackInfo, AttackPair } from \"../Common/AttackInfo.js\";\r\n\r\nimport { Vec2 } from \"./math.js\";//dev\r\n\r\n\r\n// skill timeline\r\n//\r\n// 以 ActionAnimation 控制流程\r\n// skill 必須要有 ActionAnimation 才能正確運作(開始、結束)\r\n//\r\n// # normal skill\r\n// -delay1        | delay2\r\n// _init          | update\r\n// defaultAction  | wait current_action end\r\n//                | SkillEffect\r\n//\r\n// # rapid skill\r\n// delay1      | delay2         | delay3\r\n// _init       | control/update | update\r\n// prepare     | loop           | end\r\n// SkillEffect | SkillEffect    | SkillEffect\r\n\r\n\r\n/**\r\n * 23001002(藝術跳躍)\r\n * 24001002(幻影瞬步)\r\n */\r\nlet jump2_info = {\r\n\ttype: 40,\r\n\tcasterMove: 1,\r\n\tavaliableInJumpingState: 1\r\n};\r\n\r\n/**\r\n * 23121000(伊修塔爾之環): localhost/xml2/Skill/2312/skill/23121000\r\n */\r\nlet rapid_attack_info = {\r\n\ttype: 2,\r\n\tknockbackLimit: 80,\r\n\trapidAttack: 1\r\n};\r\n\r\n\r\nclass _SkillInfo {\r\n\tconstructor() {\r\n\t\tthis.type = 40;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.casterMove = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.avaliableInJumpingState = 1;\r\n\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.areaAttack = 1;\r\n\r\n\t\tthis.knockbackLimit = 80;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.rapidAttack = 1;\r\n\t}\r\n}\r\nclass _SkillCommonData {\r\n\tconstructor() {\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.lt = null;//new Vec2(-200, -113)\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.rb = null;//new Vec2(-10, 0)\r\n\r\n\t\t/** @type {string} - code */\r\n\t\tthis.mpCon = \"3 + d(x / 6)\";\r\n\r\n\t\t/** @type {string} - code */\r\n\t\tthis.damage = \"175 + 8 * x\";\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.mobCount = 6;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.attackCount = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.maxLevel = 20;\r\n\t}\r\n}\r\nclass _SkillData {\r\n\tconstructor() {\r\n\t\t/** @type {{ [actType: number]: string }} */\r\n\t\tthis.action = {\r\n\t\t\t\"0\": \"dualVulcanLoop\"\r\n\t\t};\r\n\r\n\t\t/** @type {_SkillCommonData} */\r\n\t\tthis.common = null;\r\n\r\n\t\t/** @type {_SkillInfo} */\r\n\t\tthis.info = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.effect = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.prepare = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydown = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydown0 = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydownend = null;\r\n\r\n\t\t/** @type {{[skill_id:string]:{[type:number]:number}}} */\r\n\t\tthis.finalAttack = {\r\n\t\t\t\"23100006\": {\r\n\t\t\t\t\"0\": 52\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.masterLevel = 10;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.combatOrders = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.weapon = 52;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.subWeapon = 35;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.psd = 1;\r\n\r\n\t\t/** @type {number} - ?? */\r\n\t\tthis.psdSkill = {\r\n\t\t\t23111002: {}\r\n\t\t};\r\n\r\n\t\t/** @type {{[skill_id:string]:number}} */\r\n\t\tthis.req = {\r\n\t\t\t\"23111000\": 20\r\n\t\t};\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.canJobRidingUse = 1;\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport class SkillEffectAnimation extends Animation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {{x: number, y: number, front:-1|1}} */\r\n\t\tthis.targetRenderer = null;\r\n\r\n\t\t/** @type {PBullet} */\r\n\t\tthis.$physics = null;\r\n\r\n\t\tthis.is_loop = false;\r\n\r\n\t\tthis.opacity = 1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string|number} type - ??\r\n\t * @param {string} url - ??\r\n\t * @param {object} raw - ??\r\n\t */\r\n\tload(type) {\r\n\t\tif (!this._raw) {\r\n\t\t\tthrow new Error(\"Not implement. skill data is loaded\");\r\n\t\t\tthis._url = [this._url, type].join(\"/\");\r\n\t\t\treturn super.load();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (Array.isArray(this._raw[0])) {\r\n\t\t\t\t/** @type {Sprite[]} */\r\n\t\t\t\tthis.textures = this._raw[type];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/** @type {Sprite[]} */\r\n\t\t\t\tthis.textures = this._raw;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\r\n\t\tthis.$physics = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.update_p(stamp);\r\n\t\t}\r\n\t\telse if (this.targetRenderer) {\r\n\t\t\tthis.update_r(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.render_p(renderer);\r\n\t\t}\r\n\t\telse if (this.targetRenderer) {\r\n\t\t\tthis.render_r(renderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate_p(stamp) {\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender_p(renderer) {\r\n\t\tconst pos = this.$physics.getPosition();\r\n\t\tconst front = this.$physics.front;\r\n\t\tconst x = pos.x * $gv.CANVAS_SCALE;\r\n\t\tconst y = pos.y * $gv.CANVAS_SCALE;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\t//renderer.pushGlobalAlpha();\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tthis.draw(renderer, x, y, 0, front > 0);\r\n\r\n\t\t//renderer.popGlobalAlpha();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate_r(stamp) {\r\n\t\tstamp *= this.targetRenderer.getSpeed();\r\n\t\t\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender_r(renderer) {\r\n\t\tthis.x = this.targetRenderer.x + this.targetRenderer.tx;//TODO: crr.tx and crr.ty ??\r\n\t\tthis.y = this.targetRenderer.y + this.targetRenderer.ty;\r\n\r\n\t\t//renderer.pushGlobalAlpha();\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tthis.draw(renderer, this.x, this.y, 0, this.targetRenderer.front > 0);\r\n\r\n\t\t//renderer.popGlobalAlpha();\r\n\t}\r\n}\r\n\r\nclass SkillHitAnimation extends SkillEffectAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * TODO: SceneObject 取代 EffectManager\r\n */\r\nexport class EffectManager {\r\n\tconstructor() {\r\n\t}\r\n\t\r\n\tstatic AddEffect(effect) {\r\n\t\teffect.update(0);//init effect position\r\n\t\t\r\n\t\tEffectManager._effects.push(effect);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tstatic Update(stamp) {\r\n\t\tconst effects = EffectManager._effects;\r\n\t\t\r\n\t\tEffectManager._effects = effects.filter(function (eff) {\r\n\t\t\tif (!eff.isEnd()) {\r\n\t\t\t\teff.update(stamp);\r\n\t\t\t}\r\n\t\t\tif (eff.isEnd()) {\r\n\t\t\t\teff.destroy();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tstatic Render(renderer) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\tconst effects = EffectManager._effects;\r\n\t\tfor (let i = 0; i < effects.length; ++i) {\r\n\t\t\teffects[i].render(renderer);\r\n\t\t}\r\n\r\n\t\trenderer.popGlobalAlpha();\r\n\t}\r\n}\r\n/** @type {Animation[]} */\r\nEffectManager._effects = [];\r\n\r\nwindow.$EffectManager = EffectManager;\r\n\r\n\r\n\r\n/**\r\n * \r\n */\r\nclass SkillAnimationBase {\r\n\t///**\r\n\t// * @param {object} raw\r\n\t// * @param {string} url\r\n\t// */\r\n\tconstructor(/*raw, url*/) {\r\n\t\t//this._raw = raw;\r\n\r\n\t\t/**\r\n\t\t * @type {_SkillData}\r\n\t\t */\r\n\t\tthis.data = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.url = null;\r\n\t\t\r\n\t\t//this.textures = {\r\n\t\t//\teffect: [],\r\n\t\t//\thit: {\r\n\t\t//\t\t\"0\": []\r\n\t\t//\t},\r\n\t\t//}\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.skillId = null;\r\n\r\n\t\t/**\r\n\t\t * actType = GetJobInfo(chara).avaliableWeapon.indexOf(ItemInfo.get(chara.weapon).type)\r\n\t\t */\r\n\t\tthis.actType = 0;\r\n\t\t\r\n\t\t/** @type {SceneObject} */\r\n\t\tthis._owner = null;\r\n\r\n\t\t/** @type {CharacterAnimationBase} */\r\n\t\tthis._crr = null;\r\n\r\n\t\t/** @type {ActionAnimation} */\r\n\t\tthis._actani = null;\r\n\t\t\r\n\t\t/** @type {number} - skill type */\r\n\t\tthis.type = 0;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis._$is_end = false;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_launch = false;\r\n\t\t\r\n\t\t//if (raw && url) {\r\n\t\t//\tthis.__load(url, raw, null);\r\n\t\t//}\r\n\r\n\t\t/** @type {\"prepare\"|\"keydown\"|\"keydownend\"} */\r\n\t\tthis.state = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t}\r\n\r\n\tget is_end() {\r\n\t\treturn this._$is_end;\r\n\t}\r\n\tset is_end(value) {\r\n\t\tthis._$is_end = value;\r\n\t\tif (value) {\r\n\t\t\tthis.owner.$physics.state.invokeSkill = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {SceneObject} */\r\n\tget owner() {\r\n\t\treturn this._owner;\r\n\t}\r\n\tset owner(value) {\r\n\t\tif (!value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._owner = value;\r\n\r\n\t\tthis._crr = value.renderer;\r\n\t\tif (!this._crr) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//const chara = value; //??\r\n\t\t//this.actType = GetJobInfo(chara).avaliableWeapon.indexOf(ItemInfo.get(chara.weapon).type)\r\n\r\n\t\tthis._actani = this._crr.actani;\r\n\t\tif (!this._actani) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @alias owner\r\n\t * @returns {SceneCharacter}\r\n\t */\r\n\tget _owner_player() {\r\n\t\treturn this._owner;\r\n\t}\r\n\tset _owner_player(value) {\r\n\t\tthis.owner = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} action\r\n\t */\r\n\t_applyAction(action) {\r\n\t\tif (this._actani && this.data) {\r\n\t\t\tconst actions = this.data.action;\r\n\t\t\tthis._actani.reload(action);//action ? 0, 1\r\n\t\t\tthis._actani.loop = false;\r\n\r\n\t\t\tthis.owner.$physics.state.invokeSkill = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/** skill default action */\r\n\t_applyDefaultAction() {\r\n\t\tconst actions = this.data.action;\r\n\t\tthis._applyAction(actions[this.actType]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * download data, load texture\r\n\t * @param {string} skillId\r\n\t */\r\n\tasync _load(skillId) {\r\n\t\tconst jobID = /^(\\d+)\\d{4}$/.exec(skillId)[1];\r\n\r\n\t\tconst url = `${this.constructor._base_path}/${jobID}/skill/${skillId}`;\r\n\r\n\t\tconst raw = await $get.data(url);\r\n\t\tif (!raw) {\r\n\t\t\talert(\"SkillAnimationBase\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.data = raw;\r\n\t\t\r\n\t\tthis.url = url;\r\n\r\n\t\tthis.skillId = skillId;\r\n\r\n\t\tthis.type = this.data.info ? (this.data.info.type || 0) : 0;//const\r\n\r\n\t\tthis.__proto__ = this._decide_type().prototype;\r\n\t\t{\r\n\t\t\tthis._loadTexture(raw);\r\n\r\n\t\t\tthis._init();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * copy\r\n\t * @param {SkillAnimationBase} skill_anim\r\n\t * @param {SkillAnimationBase} proto - skill prototype\r\n\t */\r\n\t_assign(skill_anim, proto) {\r\n\t\tthis.data = skill_anim.data;\r\n\t\t\r\n\t\tthis.url = skill_anim.url;\r\n\r\n\t\tthis.skillId = skill_anim.skillId;\r\n\t\t\r\n\t\tthis.type = skill_anim.type;//const\r\n\r\n\t\tthis.__proto__ = this._decide_type().prototype;\r\n\t\t{\r\n\t\t\tthis._init();\r\n\t\t}\r\n\t}\r\n\t\r\n\t_loadTexture() {\r\n\t\tfor (let effName of this._effect_names) {\r\n\t\t\tlet eff = this.data[effName];\r\n\t\t\tif (eff) {\r\n\t\t\t\tthis.data[effName] = arrNd_texture(eff, [this.url, effName].join(\"/\"));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction arrNd_texture(arrNd/*, url*/) {\r\n\t\t\tif (\"0\" in arrNd[0]) {\r\n\t\t\t\treturn arr2d_texture(arrNd/*, url*/);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn arr1d_texture(arrNd/*, url*/);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction arr1d_texture(arr1d/*, url*/) {\r\n\t\t\tlet effect = [];\r\n\t\t\tfor (let  i = 0; i in arr1d; ++i) {\r\n\t\t\t\tlet data = arr1d[i];\r\n\t\t\t\tlet tex = new Sprite(data);\r\n\t\t\t\t//tex._url = `${url}/${i}`;\r\n\t\t\t\teffect[i] = tex;\r\n\t\t\t}\r\n\t\t\teffect.action = arr1d.action;\r\n\t\t\treturn effect;\r\n\t\t}\r\n\t\tfunction arr2d_texture(arr2d/*, url*/) {\r\n\t\t\tlet hit = [];\r\n\t\t\tfor (let i = 0; i in arr2d; ++i) {\r\n\t\t\t\t//const url_i = `${url}/${i}`;\r\n\t\t\t\tlet group = arr2d[i];\r\n\t\t\t\thit[i] = [];\r\n\t\t\t\tfor (let  j = 0; j in group; ++j) {\r\n\t\t\t\t\tlet data = group[j];\r\n\t\t\t\t\tlet tex = new Sprite(data);\r\n\t\t\t\t\t//tex._url = `${url_i}/${j}`;\r\n\t\t\t\t\thit[i][j] = tex;\r\n\t\t\t\t}\r\n\t\t\t\thit[i].action = group.action;\r\n\t\t\t}\r\n\t\t\treturn hit;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * reset and restart\r\n\t */\r\n\treset() {\r\n\t\tthis._actani.reset();\r\n\t\tthis.is_launch = false;\r\n\t}\r\n\r\n\t/**\r\n\t * onKeydown + onKeyup\r\n\t * TODO: 可控制方向的技能\r\n\t * @virtual\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * TODO: 自動攻擊、被動技能、debuf\r\n\t * @virtual\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$promise) {\r\n\t\t\t//Now loading...\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t\tconsole.warn(\"Skill not implement: \" + this.skillId);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * no timer\r\n\t * @param {number} stamp\r\n\t */\r\n\t_default_update(stamp) {\r\n\t\t//stamp *= this.targetRenderer.getSpeed();\r\n\r\n\t\tif (this._actani) {\r\n\t\t\tif (this._actani.delay) {// not start yet\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (!this.is_launch) {\r\n\t\t\t\tthis._addEffect();\r\n\r\n\t\t\t\tthis.is_launch = true;\r\n\t\t\t}\r\n\t\t\tif (this._actani.isEnd()) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneObject} targetObject\r\n\t */\r\n\taddAttack(targetObject) {\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tconst owner = this._owner;\r\n\r\n\t\tlet attack = new AttackPair();\r\n\r\n\t\t//attack.objectid = targetObject.$objectid;\r\n\t\tattack.setTargetObject(targetObject);\r\n\r\n\t\tattack.allDamage.length = this.data.common.attackCount;\r\n\r\n\t\t////apply damage\r\n\t\t//for (let i = 0; i < attack.allDamage.length; ++i) {\r\n\t\t//\ttargetObject.damage(owner, 123);\r\n\t\t//}\r\n\t\t////\r\n\t\t//targetObject.knockback(chara, 16, 16);\r\n\r\n\t\tthis.attackInfo.allAttack.push(attack);\r\n\t}\r\n\r\n\tcreateBullet(effectName) {\r\n\t\tlet eff, bullet;\r\n\r\n\t\t//bullet renderer\r\n\t\t{\r\n\t\t\teff = this._addEffect(effectName);\r\n\r\n\t\t\teff.is_loop = true;\r\n\t\t}\r\n\r\n\t\t//bullet physics\r\n\t\t{\r\n\t\t\tbullet = new PBullet(this.owner.$physics, this, eff);\r\n\r\n\t\t\tbullet._create();\r\n\r\n\t\t\tbullet.launch(null, this.owner.$physics.state.front * (window.$BULLET_SPEED | 32), 0);\r\n\t\t}\r\n\r\n\t\t//link renderer and physics\r\n\t\teff.$physics = bullet;\r\n\r\n\t\treturn bullet;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {boolean} [isBullet=false]\r\n\t */\r\n\t_addDefaultEffect(isBullet) {\r\n\t\tthis._applyDefaultAction();\r\n\t\tthis._addEffect(\"effect\", isBullet);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} [effectName=\"effect\"]\r\n\t * @param {boolean} [isBullet=false]\r\n\t */\r\n\t_addEffect(effectName = \"effect\", isBullet) {\r\n\t\tlet action = this.data[effectName].action;\r\n\t\tif (action) {\r\n\t\t\tthis._applyAction(action);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst type = this.actType;\r\n\t\t\tlet effect = new SkillEffectAnimation(this.data[effectName], [this.url, effectName].join(\"/\"));\r\n\r\n\t\t\tif (isBullet) {\r\n\t\t\t\t//...??\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\teffect.targetRenderer = this._crr;\r\n\t\t\t}\r\n\t\t\teffect.load(type);\r\n\r\n\t\t\tEffectManager.AddEffect(effect);\r\n\r\n\t\t\treturn effect;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {{x: number, y: number}=} target\r\n\t * @param {number=} type\r\n\t */\r\n\t_addHitEffect(x, y, target, type) {\r\n\t\tlet hit = new SkillHitAnimation();\r\n\t\t\r\n\t\thit.target = target;\r\n\t\t\r\n\t\thit.load(this.url + \"/hit/\" + type, this.data.hit, type);\r\n\t\t\r\n\t\tEffectManager.AddEffect(hit);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @returns {function():(T extends SkillAnimationBase)}\r\n\t */\r\n\t_decide_type() {\r\n\t\tconst info = this.data.info;\r\n\r\n\t\t//TODO: register skill\r\n\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\tcase 2:\r\n\t\t\t\tif (info.rapidAttack) {\r\n\t\t\t\t\treturn _SkillAnimation_RapidAttack;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40:\r\n\t\t\t\tif (info.casterMove && info.avaliableInJumpingState) {\r\n\t\t\t\t\treturn _SkillAnimation_N_Jump;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn _SkillAnimation_Default;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _effect_names() {\r\n\t\treturn [\"effect\", \"hit\"];\r\n\t}\r\n\t\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Skill\";\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_Default extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis._default_update(stamp);\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_RapidAttack extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\r\n\t\tthis.state = \"prepare\";\r\n\t\tthis._state_func = this._prepare;\r\n\t\tthis.current_effect = this._addEffect(this.state);\r\n\r\n\t\t/** animation */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** fire bullet */\r\n\t\tthis.tick = 0;\r\n\r\n\t\tthis.fadeTotalTime = this._actani.getTotalTime();\r\n\r\n\t\tthis._crr.fixed_speed = true;\r\n\t}\r\n\r\n\t_prepare() {\r\n\t\tthis.current_effect.opacity = this.time / this.fadeTotalTime;\r\n\t\tif (this.current_effect.opacity > 1) {\r\n\t\t\tthis.current_effect.opacity = 1;\r\n\t\t}\r\n\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\tthis.current_effect.opacity = 0;//prepare\r\n\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\tthis.state = \"keydown\";\r\n\t\t\tthis._state_func = this._keydown;\r\n\t\t\tthis.current_effect = this._addEffect(this.state);\r\n\r\n\t\t\tthis._actani.loop = true;\r\n\t\t\tthis.current_effect.is_loop = true;\r\n\r\n\t\t\tthis.time = 0;//reset\r\n\t\t}\r\n\t}\r\n\t_keydown() {\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\t//this.current_effect.reset();\r\n\t\t\t//this.current_effect.opacity = 1;\r\n\t\t\t//this._actani.reset();\r\n\t\t\tthis.time = 0;//reset\r\n\t\t}\r\n\t}\r\n\t_keydownend() {\r\n\t\tthis.current_effect.opacity = 1 - (this.time / this.fadeTotalTime);\r\n\t\tif (this.current_effect.opacity < 0) {\r\n\t\t\tthis.current_effect.opacity = 0;\r\n\t\t}\r\n\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\tthis.current_effect.opacity = 0;//keydownend\r\n\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\tthis._crr.fixed_speed = false;\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t\tswitch (this.state) {\r\n\t\t\tcase \"prepare\":\r\n\t\t\tcase \"keydown\":\r\n\t\t\t\tif (!keyDown || keyUp) {\r\n\t\t\t\t\tthis.current_effect.opacity = 0;//keydown\r\n\t\t\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\t\t\tthis.state = \"keydownend\";\r\n\t\t\t\t\tthis._state_func = this._keydownend;\r\n\t\t\t\t\tthis.current_effect = this._addEffect(this.state);\r\n\t\t\t\t\tthis.fadeTotalTime = this._actani.getTotalTime();\r\n\r\n\t\t\t\t\tthis._actani.loop = false;\r\n\t\t\t\t\tthis.time = 0;//reset\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\t//keydown(first step): prepare\r\n\t\t//keydown(second step): keydown + keydown0\r\n\t\t//keyup: keydownend\r\n\r\n\t\tstamp *= this._crr.getSpeed();\r\n\t\tthis.time += stamp;\r\n\r\n\t\t++this.tick;\r\n\r\n\t\tthis._state_func();\r\n\r\n\t\tif (this.tick % (window.$FIRE_BULLET_T | 3) == (window.$FIRE_BULLET_T2 | 2) && this.state != \"keydownend\") {\r\n\t\t\tthis.createBullet(\"ball\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _effect_names() {\r\n\t\treturn [\"prepare\", \"keydown\", \"keydownend\", \"hit\", \"ball\"];\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_N_Jump extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis.jump_max_count = (window.jump_max_count || 2);\r\n\t}\r\n\r\n\tjump2() {\r\n\t\tconst crr = this._crr;\r\n\t\t//const body = this._owner_player.$physics.body;\r\n\t\tconst foot_walk = this._owner_player.$physics.foot_walk;\r\n\r\n\t\tconst pos = this._owner_player.$physics.getPosition();\r\n\t\tconsole.log(\"pos: { x: %o, y: %o }\", pos.x, pos.y);\r\n\r\n\t\t//body.ConstantVelocityWorldCenter2((window.$NJmpX || 40) * crr.front, (window.$NJmpY || 0));\r\n\t\tfoot_walk.ConstantVelocityWorldCenter2((window.$NJmpX || 40) * crr.front, (window.$NJmpY || 0));\r\n\r\n\t\tthis._addDefaultEffect();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t\tif (!this._owner) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst $physics = this._owner.$physics;\r\n\r\n\t\tif ($physics.state.jump_count == 0) {\r\n\t\t\tif (keyDown == 1 && $physics.state.jump) {\r\n\t\t\t\tthis.jump2();\r\n\t\t\t\t$physics.state.jump_count += 2;\r\n\t\t\t}\r\n\t\t\telse {//normal jump\r\n\t\t\t\tinputKey.jump = inputKey.jump ? Math.max(keyDown, inputKey.jump) : keyDown;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($physics.state.jump) {\r\n\t\t\tif (keyDown == 1 && $physics.state.jump_count < this.jump_max_count) {\r\n\t\t\t\tthis.jump2();\r\n\t\t\t\t$physics.state.jump_count += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst $physics = this._owner.$physics;\r\n\r\n\t\tif ($physics.state.jump_count > 1) {\r\n\t\t\tif ($physics.$foothold || this._actani.isEnd()) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($physics.$foothold) {//!$physics._isCanJump()\r\n\t\t\tif (this._actani.isEnd()) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t\telse if ($gv.m_editor_mode) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this._actani.isEnd()) {\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * TODO: add skill\r\n */\r\nclass __SkillAnimation_Template extends SkillAnimationBase {\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t\t// ...\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t}\r\n}\r\n\r\nexport class SceneSkill extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {AttackInfo} */\r\n\t\tthis.attackInfo = new AttackInfo();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @param {SceneObject} owner\r\n\t */\r\n\tload(skillId, owner) {\r\n\t\tthis.owner = owner;\r\n\r\n\t\tif (!skillId) {\r\n\t\t\tthrow new Error(\"1 argument required\");\r\n\t\t}\r\n\t\t\r\n\t\tif (String(skillId).length <= 4) {\r\n\t\t\tthrow new Error(\"skill ID format\");\r\n\t\t}\r\n\t\t//skillId = 1120017;//1001005;// jobId + 4-digit\r\n\r\n\t\tthis.attackInfo.skill = skillId;\r\n\t\t\r\n\t\tlet loaded_skill = SceneSkill.__loaded_skill[skillId];\r\n\t\tif (loaded_skill && loaded_skill.data) {\r\n\t\t\tthis._assign(loaded_skill);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet promise = this._load(skillId, owner);\r\n\r\n\t\t\tthis.$promise = promise;\r\n\r\n\t\t\tSceneSkill.__loaded_skill[skillId] = this;\r\n\r\n\t\t\tpromise.then(() => {\r\n\t\t\t\tdelete this.$promise;\r\n\t\t\t});\r\n\r\n\t\t\treturn promise;\r\n\t\t}\r\n\t}\r\n}\r\nSceneSkill.__loaded_skill = {};\r\n\r\nwindow.$SceneSkill = SceneSkill;\r\n\r\nclass _ArrowKey {\r\n\tconstructor() {\r\n\t\tthis.left = 0;\r\n\t\tthis.up = 0;\r\n\t\tthis.right = 0;\r\n\t\tthis.down = 0;\r\n\t}\r\n}\r\n","﻿/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\nimport {\r\n\tb2_pi,\r\n\tb2Vec2, b2Rot, b2DegToRad, b2Transform, b2AABB,\r\n\tb2Color, b2Draw, b2DrawFlags,\r\n\tb2Body, b2Fixture,\r\n\tb2Joint,\r\n} from \"./Physics.js\";\r\nimport { Rectangle } from \"../math.js\";\r\n\r\n\r\nfunction setFlags(flags, bit, flag) {\r\n\treturn flag ? (flags | bit):(flags & ~bit);\r\n}\r\n\r\nclass DebugDraw extends b2Draw {\r\n\t/**\r\n\t * This class implements debug drawing callbacks that are\r\n\t * invoked inside b2World::Step.\r\n\t * @export\r\n\t * @constructor\r\n\t * @extends {b2Draw}\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\tconstructor(ctx) {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/**\r\n\t\t * @type {CanvasRenderingContext2D}\r\n\t\t */\r\n\t\tthis.m_ctx = ctx;\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.axis_length = 1;\r\n\r\n\t\t/**\r\n\t\t * @type {b2Rot}\r\n\t\t */\r\n\t\tthis.viewRotation = new b2Rot(b2DegToRad(0));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.viewZoom = 1;\r\n\t\t\r\n\t\tthis.flag_drawShape = true;\r\n\t\tthis.flag_drawJoint = true;\r\n\t\tthis.flag_drawAabb = false;\r\n\t\tthis.flag_drawCenterOfMass = true;\r\n\t\tthis.flag_drawController = true;\r\n\t\tthis.flag_drawParticle = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tget canvasScale() {\r\n\t\treturn $gv.CANVAS_SCALE;\r\n\t}\r\n\tset canvasScale(value) {\r\n\t\t$gv.CANVAS_SCALE = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {Rectangle}\r\n\t */\r\n\tget viewRect() {\r\n\t\treturn $gv.m_viewRect;\r\n\t}\r\n\r\n\tset flag_drawAll(flag) { this.m_drawFlags = flag ? b2DrawFlags.e_all : b2DrawFlags.e_none;  }\r\n\tset flag_drawShape(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_shapeBit, flag); }\r\n\tset flag_drawJoint(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_jointBit, flag); }\r\n\tset flag_drawAabb(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_aabbBit, flag); }\r\n\tset flag_drawPair(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_pairBit, flag); }\r\n\tset flag_drawCenterOfMass(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_centerOfMassBit, flag); }\r\n\tset flag_drawParticle(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_particleBit, flag); }\r\n\tset flag_drawController(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_controllerBit, flag); }\r\n\t\r\n\tget flag_drawAll() { this.m_drawFlags; }\r\n\tget flag_drawShape() { return this.m_drawFlags & b2DrawFlags.e_shapeBit; }\r\n\tget flag_drawJoint() { return this.m_drawFlags & b2DrawFlags.e_jointBit; }\r\n\tget flag_drawAabb() { return this.m_drawFlags & b2DrawFlags.e_aabbBit; }\r\n\tget flag_drawPair() { return this.m_drawFlags & b2DrawFlags.e_pairBit; }\r\n\tget flag_drawCenterOfMass() { return this.m_drawFlags & b2DrawFlags.e_centerOfMassBit; }\r\n\tget flag_drawParticle() { return this.m_drawFlags & b2DrawFlags.e_particleBit; }\r\n\tget flag_drawController() { return this.m_drawFlags & b2DrawFlags.e_controllerBit; }\r\n\r\n\tget flagNames() {\r\n\t\treturn [\r\n\t\t\t\"flag_drawAll\",\r\n\t\t\t\"flag_drawShape\",\r\n\t\t\t\"flag_drawJoint\",\r\n\t\t\t\"flag_drawAabb\",\r\n\t\t\t\"flag_drawPair\",\r\n\t\t\t\"flag_drawCenterOfMass\",\r\n\t\t\t\"flag_drawParticle\",\r\n\t\t\t\"flag_drawController\",\r\n\t\t];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.PushTransform = function (xf)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tctx.save();\r\n\t//ctx.translate(xf.p.x, xf.p.y);\r\n\t//ctx.rotate(xf.q.GetAngle());\r\n\tctx.transform(xf.q.c, xf.q.s, -xf.q.s, xf.q.c, xf.p.x, xf.p.y);\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.PopTransform = function (xf)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tctx.restore();\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2[]} vertices\r\n * @param {number} vertexCount\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawPolygon = function (vertices, vertexCount, color)\r\n{\r\n\tif (!vertexCount) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(vertices[0].x, vertices[0].y);\r\n\tfor (let i = 1; i < vertexCount; i++)\r\n\t{\r\n\t\tctx.lineTo(vertices[i].x, vertices[i].y);\r\n\t}\r\n\tctx.closePath();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} vertices\r\n * @param {number} vertexCount\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSolidPolygon = function (vertices, vertexCount, color)\r\n{\r\n\tif (!vertexCount) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(vertices[0].x, vertices[0].y);\r\n\tfor (let i = 1; i < vertexCount; i++)\r\n\t{\r\n\t\tctx.lineTo(vertices[i].x, vertices[i].y);\r\n\t}\r\n\tctx.closePath();\r\n\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\tctx.fill();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} center\r\n * @param {number} radius\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawCircle = function (center, radius, color)\r\n{\r\n\tif (!radius) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.arc(center.x, center.y, radius, 0, b2_pi * 2, true);\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} center\r\n * @param {number} radius\r\n * @param {b2Vec2} axis\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSolidCircle = function (center, radius, axis, color)\r\n{\r\n\tif (!radius) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tlet cx = center.x;\r\n\tlet cy = center.y;\r\n\tctx.beginPath();\r\n\tctx.arc(cx, cy, radius, 0, b2_pi * 2, true);\r\n\tctx.moveTo(cx, cy);\r\n\tctx.lineTo((cx + axis.x * radius), (cy + axis.y * radius));\r\n\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\tctx.fill();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} centers\r\n * @param {number} radius\r\n * @param {b2Color} colors\r\n * @param {number} count\r\n */\r\nDebugDraw.prototype.DrawParticles = function (centers, radius, colors, count) {\r\n\tconst ctx = this.m_ctx;\r\n\tif (ctx) {\r\n\t\tif (colors !== null) {\r\n\t\t\tfor (let i = 0; i < count; ++i) {\r\n\t\t\t\tlet center = centers[i];\r\n\t\t\t\t/** @type {b2Color} */let color = colors[i];\r\n\t\t\t\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\t\t\t\tctx.fillRect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n\t\t\t\t///ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, box2d.b2_pi * 2, true); ctx.fill();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n\t\t\tctx.beginPath();\r\n\t\t\tfor (let i = 0; i < count; ++i) {\r\n\t\t\t\tlet center = centers[i];\r\n\t\t\t\tctx.rect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n\t\t\t\t///ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, box2d.b2_pi * 2, true); ctx.fill();\r\n\t\t\t}\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} p1\r\n * @param {b2Vec2} p2\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSegment = function (p1, p2, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(p1.x, p1.y);\r\n\tctx.lineTo(p2.x, p2.y);\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.DrawTransform = function (xf)\r\n{\r\n\tif (this.axis_length == 0) {\r\n\t\treturn;\r\n\t}\r\n\t// viewport -> canvas\r\n\tlet cs = this.canvasScale;\r\n\tif (!this.viewRect.collide4f2(xf.p.x * cs, xf.p.y * cs, this.axis_length * cs, this.axis_length * cs)) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tthis.PushTransform(xf);\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(0, 0);\r\n\tctx.lineTo(this.axis_length, 0);\r\n\tctx.strokeStyle = b2Color.RED.MakeStyleString(1);\r\n\tctx.stroke();\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(0, 0);\r\n\tctx.lineTo(0, this.axis_length);\r\n\tctx.strokeStyle = b2Color.GREEN.MakeStyleString(1);\r\n\tctx.stroke();\r\n\r\n\tthis.PopTransform(xf);\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} p\r\n * @param {number} size\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawPoint = function (p, size, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.fillStyle = color.MakeStyleString();\r\n\tsize /= this.viewZoom;\r\n\tsize /= this.canvasScale;\r\n\tlet hsize = size / 2;\r\n\tctx.fillRect(p.x - hsize, p.y - hsize, size, size);\r\n}\r\n\r\n/**\r\n * @export\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {string} format\r\n * @param {...string|number} var_args\r\n */\r\nDebugDraw.prototype.DrawString = function (x, y, format, var_args)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tconst font = ctx.font;\r\n\r\n\tlet args = Array.prototype.slice.call(arguments);\r\n\tlet string = goog.string.format.apply(null, args.slice(2));\r\n\r\n\tctx.save();\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.font = '18pt helvetica';//'9pt lucida console';\r\n\t\tlet color = DebugDraw.prototype.DrawString.s_color;\r\n\t\tctx.fillStyle = color.MakeStyleString();\r\n\t\tctx.fillText(string, x, y);\r\n\tctx.restore();\r\n\r\n\tctx.font = font;\r\n}\r\nDebugDraw.prototype.DrawString.s_color = new b2Color(0.9, 0.6, 0.6);\r\n\r\n/**\r\n * @export\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {string} format\r\n * @param {...string|number} var_args\r\n */\r\nDebugDraw.prototype.DrawStringWorld = function (x, y, format, var_args)\r\n{\r\n\tlet p = DebugDraw.prototype.DrawStringWorld.s_p.Set(x, y);\r\n\r\n\t// world -> viewport\r\n\tlet vt = this.viewCenter;\r\n\tb2Vec2.SubVV(p, vt, p);\r\n\tlet vr = this.viewRotation;\r\n\tb2Rot.MulTRV(vr, p, p);\r\n\tlet vs = this.viewZoom;\r\n\tb2Vec2.MulSV(vs, p, p);\r\n\r\n\t// viewport -> canvas\r\n\tlet cs = this.canvasScale;\r\n\tb2Vec2.MulSV(cs, p, p);\r\n\tp.y *= -1;\r\n\tlet cc = DebugDraw.prototype.DrawStringWorld.s_cc.Set(0.5 * this.m_canvas.width, 0.5 * this.m_canvas.height);\r\n\tb2Vec2.AddVV(p, cc, p);\r\n\r\n\tlet ctx = this.m_ctx;\r\n\tconst font = ctx.font;\r\n\r\n\tlet args = Array.prototype.slice.call(arguments);\r\n\tlet string = goog.string.format.apply(null, args.slice(2));\r\n\r\n\tctx.save();\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.font = '18pt helvetica';//'9pt lucida console';\r\n\t\tlet color = DebugDraw.prototype.DrawStringWorld.s_color;\r\n\t\tctx.fillStyle = color.MakeStyleString();\r\n\t\tctx.fillText(string, p.x, p.y);\r\n\tctx.restore();\r\n\r\n\tctx.font = font;\r\n}\r\nDebugDraw.prototype.DrawStringWorld.s_p = new b2Vec2();\r\nDebugDraw.prototype.DrawStringWorld.s_cc = new b2Vec2();\r\nDebugDraw.prototype.DrawStringWorld.s_color = new b2Color(0.5, 0.9, 0.5);\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2AABB} aabb\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawAABB = function (aabb, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.strokeStyle = color.MakeStyleString();\r\n\tlet x = aabb.lowerBound.x;\r\n\tlet y = aabb.lowerBound.y;\r\n\tlet w = aabb.upperBound.x - aabb.lowerBound.x;\r\n\tlet h = aabb.upperBound.y - aabb.lowerBound.y;\r\n\tctx.strokeRect(x, y, w, h);\r\n}\r\n\r\nexport default DebugDraw;\r\n","﻿\r\nimport {\r\n\tb2_linearSlop,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2PolygonShape, b2EdgeShape,\r\n\tb2Body,\r\n\tb2Contact, b2Manifold, b2ContactImpulse, b2WorldManifold\r\n} from \"./Physics.js\";\r\n\r\nimport { World } from \"./World\";\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport class MapLadderRope {\r\n\tconstructor(raw) {\r\n\t\t/** @type {number} - is ladder ? 1 : 0 */\r\n\t\tthis.l = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.uf = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.x = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y1 = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y2 = null;\r\n\r\n\t\t/** @type {number} - ?? */\r\n\t\tthis.page = null;\r\n\r\n\t\t/** @type {number} - select obj from layeredObject[layer] where obj.piece == piece */\r\n\t\tthis.piece = null;\r\n\r\n\t\tObject.assign(this, raw);\r\n\t}\r\n\r\n\tisLadder() {\r\n\t\treturn !!this.l;\r\n\t}\r\n}\r\n\r\n\r\nexport class LadderRope extends MapLadderRope {\r\n\tconstructor(raw) {\r\n\t\tsuper(raw);\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\t}\r\n\r\n\tcalcHeight() {\r\n\t\treturn (this.y2 - this.y1);\r\n\t}\r\n\tcalcHalfHeight() {\r\n\t\treturn (this.y2 - this.y1) * 0.5;\r\n\t}\r\n\tcalcWidth() {\r\n\t\treturn (this.isLadder() ? 16 : 4);\r\n\t}\r\n\tcalcHalfWidth() {\r\n\t\treturn (this.isLadder() ? 16 : 4) * 0.5;\r\n\t}\r\n\tcalcLength() {\r\n\t\treturn (this.y2 - this.y1) / $gv.CANVAS_SCALE;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\t_create(world) {\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tconst x = this.x / $gv.CANVAS_SCALE;\r\n\t\tconst y1 = this.y1 / $gv.CANVAS_SCALE;\r\n\t\tconst y2 = this.y2 / $gv.CANVAS_SCALE;\r\n\t\tconst hwidth = this.calcHalfWidth() / $gv.CANVAS_SCALE;\r\n\t\tconst hheight = (y2 - y1) * 0.5;\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\tbdef.position.Set(x, y1);\r\n\r\n\t\tbdef.angle = 0;\r\n\t\tbdef.gravityScale = 0;\r\n\t\t//bdef.allowSleep = true;\r\n\t\t//bdef.bullet = true;\r\n\t\tbdef.fixedRotation = true;\r\n\t\tbdef.userData = this;\r\n\r\n\t\tthis.body = world.CreateBody(bdef);\r\n\r\n\t\tshape.SetAsBox(hwidth, hheight + 0.5, new b2Vec2(0, hheight - 0.5), 0);\r\n\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"ladder\"));\r\n\r\n\t\tfdef.isSensor = true;\r\n\t\tfdef.userData = this;\r\n\r\n\t\tlet fixture = this.body.CreateFixture(fdef);\r\n\r\n\t\tfixture.beginContact = this.beginContact.bind(this);\r\n\t\tfixture.endContact = this.endContact.bind(this);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tbeginContact(contact, fa, fb) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst targetPlayer = fb.m_userData;\r\n\t\tif (!targetPlayer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!targetPlayer.state.ladder) {\r\n\t\t\ttargetPlayer.contactLadder(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tendContact(contact, fa, fb) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst targetPlayer = fb.m_userData;\r\n\t\tif (!targetPlayer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttargetPlayer.leaveLadder();\r\n\t}\r\n}\r\n\r\n\r\nexport class MapLadderRopeLoader {\r\n\t/**\r\n\t * @param {{[prop:string]:any}} map_raw_data\r\n\t * @param {World} world\r\n\t * @returns {LadderRope[]}\r\n\t */\r\n\tstatic load(map_raw_data, world) {\r\n\t\t/** @type {LadderRope[]} */\r\n\t\tlet ladderRopes = [];\r\n\r\n\t\tfor (let i in map_raw_data.ladderRope) {\r\n\t\t\tlet raw = map_raw_data.ladderRope[i];\r\n\t\t\tlet idx = parseInt(i, 10) - 1;\r\n\t\t\tif (idx >= 0 && Number.isSafeInteger(idx)) {\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: ?? ladderRope\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t\tlet ladderRope = new LadderRope(raw);\r\n\t\t\tladderRope._$index = i;\r\n\t\t\tladderRope._create(world);\r\n\t\t\tladderRopes.push(ladderRope);\r\n\t\t};\r\n\r\n\t\treturn ladderRopes;\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { PRemoteCharacter } from \"./PPlayer.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\n\r\n\r\nwindow.$MobAction_Move_Priority = 2;\r\nwindow.$MobAction_Jump_Priority = 1;\r\n\r\n\r\nexport class MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\t/** @type {string} - ?? */\r\n\t\tthis._name = null;\r\n\r\n\t\t/** @type {Animation} */\r\n\t\tthis._ani = animation;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\tinit() {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tisEnd(pMob) {\r\n\t\tlet end = this._ani.isEnd();\r\n\t\tif (end) {\r\n\t\t\tthis.onEnd(pMob);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tonEnd(pMob) {\r\n\t}\r\n}\r\n\r\nexport class MobAction_Stand extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"stand\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\t//保持停止。\r\n\t\tpMob.ikey[\"left\"] = 0;\r\n\t\tpMob.ikey[\"right\"] = 0;\r\n\t}\r\n}\r\n\r\nexport class _MobAction_Move extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"move\";\r\n\t\tthis.front = 0;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn window.$MobAction_Move_Priority;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\tlet name = pMob.action._name;\r\n\r\n\t\t//switch (pMob.action._name) {\r\n\t\t//\tcase \"attack\":\r\n\t\t//\t\treturn false;\r\n\t\t//\tdefault:\r\n\t\t\t\tif (name.startsWith(\"attack\")) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t//\t\tbreak;\r\n\t\t//}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport class MobAction_MoveLeft extends _MobAction_Move {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis.front = -1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn super.isValid(pMob) && (!pMob.state.jump || this.front == pMob.state.front);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tpMob.ikey[\"left\"] = 1;\r\n\t\tpMob.ikey[\"right\"] = 0;\r\n\t}\r\n\t\r\n\t///**\r\n\t// * @param {PMob} pMob\r\n\t// */\r\n\t//onEnd(pMob) {\r\n\t//\tpMob.ikey[\"left\"] = 0;//不停止移動，下個動作在處理。\r\n\t//}\r\n}\r\n\r\nexport class MobAction_MoveRight extends _MobAction_Move {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis.front = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn super.isValid(pMob) && (!pMob.state.jump || this.front == pMob.state.front);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tpMob.ikey[\"left\"] = 0;\r\n\t\tpMob.ikey[\"right\"] = 1;\r\n\t}\r\n\t\r\n\t///**\r\n\t// * @param {PMob} pMob\r\n\t// */\r\n\t//onEnd(pMob) {\r\n\t//\tpMob.ikey[\"right\"] = 0;//不停止移動，下個動作在處理。\r\n\t//}\r\n}\r\n\r\nexport class MobAction_Jump extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"jump\";\r\n\t\t//this.move = false;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn window.$MobAction_Jump_Priority;\r\n\t}\r\n\r\n\tinit() {\r\n\t\t//this.move = 1 || Math.random() > 0.5;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\tlet name = pMob.action._name;\r\n\r\n\t\tswitch (pMob.action._name) {\r\n\t\t\tcase \"attack\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tif (name.startsWith(\"attack\")) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn !pMob.state.jump;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tif (pMob.state.walk) {\r\n\t\t\tif (pMob.state.front < 0) {\r\n\t\t\t\tpMob.ikey[\"left\"] = 1;\r\n\t\t\t}\r\n\t\t\telse if (pMob.state.front > 0) {\r\n\t\t\t\tpMob.ikey[\"right\"] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tpMob.ikey[\"jump\"] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tonEnd(pMob) {\r\n\t\t//if (this.move) {\r\n\t\t//\tif (pMob.state.front < 0) {\r\n\t\t//\t\tpMob.ikey[\"left\"] = 0;\r\n\t\t//\t}\r\n\t\t//\telse if (pMob.state.front > 0) {\r\n\t\t//\t\tpMob.ikey[\"right\"] = 0;\r\n\t\t//\t}\r\n\t\t//}\r\n\t\tpMob.ikey[\"jump\"] = 0;\r\n\t}\r\n}\r\n\r\nexport class MobAction_Attack extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"attack\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn pMob.action.isEnd();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t}\r\n}\r\n\r\nexport class PMob extends PRemoteCharacter {\r\n\t/**\r\n\t * @param {MapMob} mapMob\r\n\t */\r\n\tconstructor(mapMob) {\r\n\t\tsuper();\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.attackTarget = true;\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis._enable_rx = false;\r\n\t\t\r\n\t\t/** @type {MapMob} */\r\n\t\tthis.chara = mapMob;\r\n\r\n\t\t//TODO: move this code to ??\r\n\t\tif (mapMob) {\r\n\t\t\tif (mapMob.renderer.isFlyMob()) {\r\n\t\t\t\tthis.setMovementSpeed(this._info.flySpeed);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setMovementSpeed(this._info.speed);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.activityRegion = null;\r\n\t\t\r\n\t\tthis.$debugControl = false;\r\n\r\n\t\t/** @type {{[action:string]:number}} */\r\n\t\tthis.ikey = {};\r\n\r\n\t\t/** @type {MobActionController[]} */\r\n\t\tthis.actions = [];\r\n\r\n\t\t/** @type {MobActionController} */\r\n\t\tthis.action = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {} param - ??\r\n\t */\r\n\t_registerAction(param) {\r\n\t\tthis.actions.push(param);\r\n\t}\r\n\r\n\t/**\r\n\t * {[action:string]:{ controller:MobActionController, renderer:Animation }}\r\n\t * @param {{[action:string]:Animation}} actions\r\n\t * @param {{[action:string]:MobActionController[]} =act_map\r\n\t */\r\n\t_loadAction(actions, act_map) {\r\n\t\tact_map = act_map || {\r\n\t\t\tstand: [MobAction_Stand],\r\n\t\t\tmove: [MobAction_MoveLeft, MobAction_MoveRight],\r\n\t\t\tjump: [MobAction_Jump],\r\n\t\t};\r\n\t\t\r\n\t\tObject.keys(actions).forEach(key => {\r\n\t\t\tif (actions[key] && act_map[key]) {\r\n\t\t\t\tconst list = act_map[key];\r\n\t\t\t\tfor (let type of list) {\r\n\t\t\t\t\tlet controller = new type(actions[key]);\r\n\t\t\t\t\tlet priority = controller.priority;\r\n\r\n\t\t\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\t\t\tif (!(Number.isSafeInteger(priority) && priority > 0)) {\r\n\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0; i < priority; ++i) {\r\n\t\t\t\t\t\tthis._registerAction(controller);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.warn(\"未完成 MobActionController: \" + key);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.action = this.actions[0];\r\n\t\tif (!this.action) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _info() {\r\n\t\treturn this.chara.renderer._raw.info;\r\n\t}\r\n\tget hasBodyDamage() {\r\n\t\tif (this._info.bodyAttack != 0 && this._info.bodyAttack != 1) {\r\n\t\t\talert(\"bodyAttack:\" + this._info.bodyAttack);\r\n\t\t}\r\n\t\treturn this._info.bodyAttack != 0;\r\n\t}\r\n\tget _speed() {\r\n\t\treturn this._info.speed;\r\n\t}\r\n\tget _pushed() {\r\n\t\treturn this._info.pushed;\r\n\t}\r\n\tget _fs() {\r\n\t\treturn this._info.fs;\r\n\t}\r\n\tget _category() {\r\n\t\treturn this._info.category;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {string}\r\n\t */\r\n\tget _body_category() {\r\n\t\treturn \"mob\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\t\t\r\n\t\tthis.setPosition(this.chara.x / $gv.CANVAS_SCALE, this.chara.y / $gv.CANVAS_SCALE, true);\r\n\t\t\r\n\t\tthis._appleMobCategory(this._category);\r\n\t}\r\n\t_appleMobCategory(category) {\r\n\t\tswitch (category) {\r\n\t\t\tcase 1:\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.__setAsWalkOnlyMob();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.__setAsJumpDropMob();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.__setAsWalkOnlyMob();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.chara.front = this.chara.spawn.f ? 1:-1;\r\n\t}\r\n\t__setAsWalkOnlyMob() {\r\n\t\tconst ground = this.body.GetWorld().ground;\r\n\t\t\r\n\t\tconst fhId = this.chara.spawn.fh;\r\n\t\t\r\n\t\tif (fhId >= 0) {\r\n\t\t\tlet fh = ground.footholds[fhId];\r\n\r\n\t\t\tthis.activityRegion = ground.rectChains[fh.chain];\r\n\t\t}\r\n\t}\r\n\t__setAsJumpDropMob() {\r\n\t}\r\n\t\r\n\tisCanMove() {\r\n\t\treturn !(this._info.ignoreMoveImpact || this._walker_omega == 0 || this._info.noFlip);\r\n\t}\r\n\t\r\n\t/** @override */\r\n\tcontrol() {\r\n\t\tif (this.isCanMove()) {\r\n\t\t\tswitch (this._category) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tthis._control_basic(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tthis._control_basic(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._control_basic(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//this.ikey[\"jump\"] = 0;\r\n\t\t\t//this.ikey[\"left\"] = 0;\r\n\t\t\t//this.ikey[\"right\"] = 0;\r\n\r\n\t\t\tsuper.control(this.ikey);\r\n\t\t}\r\n\t}\r\n\t_control_basic(isAllowJump) {\r\n\t\tif (this.action) {\r\n\t\t\tif (this.action.isEnd(this)) {\r\n\t\t\t\tlet actions = this.actions.filter(act => act.isValid(this));\r\n\t\t\t\tlet next = Math.trunc(Math.random() * 100) % actions.length;\r\n\r\n\t\t\t\tthis.action = actions[next];\r\n\r\n\t\t\t\tif (!this.action) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.action.init();\r\n\r\n\t\t\t\t//console.log(\"mob: \" + this.action.name);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t}\r\n\r\n\t\t\tthis.action.update(this);\r\n\t\t}\r\n\t}\r\n\r\n\tstop() {\r\n\t\tconst empty = {};\r\n\t\tthis.ikey = empty;\r\n\t\tsuper.control(empty);\r\n\t}\r\n\t\r\n\tStep() {\t\t\r\n\t\tsuper.Step();\r\n\t\t\r\n\t\tthis.control();\r\n\t\t\r\n\t\tlet rx0, rx1, limit_action;\r\n\t\t\r\n\t\tif (this.attackTarget && this.activityRegion) {\r\n\t\t\trx0 = this.activityRegion.left;\r\n\t\t\trx1 = this.activityRegion.right;\r\n\t\t\tlimit_action = true;\r\n\t\t}\r\n\t\telse if (!this._enable_rx) {\r\n\t\t\trx0 = this.chara.spawn.rx0;\r\n\t\t\trx1 = this.chara.spawn.rx1;\r\n\t\t\tlimit_action = false;\r\n\t\t}\r\n\t\t\r\n\t\tif (limit_action) {\r\n\t\t\tconst cbpos = this.body.GetPosition();\r\n\t\t\tconst x = cbpos.x * $gv.CANVAS_SCALE;\r\n\t\t\tconst y = cbpos.y * $gv.CANVAS_SCALE;\r\n\t\t\tconst dx0 = rx0 - x;\r\n\t\t\tconst dx1 = x - rx1;\r\n\t\t\t\r\n\t\t\tif (dx0 > 0) {\r\n\t\t\t\tconst fwpos = this.foot_walk.GetPosition();\r\n\t\t\t\tthis.body.SetPositionXY(rx0 / $gv.CANVAS_SCALE, cbpos.y);\r\n\t\t\t\tthis.foot_walk.SetPositionXY(rx0 / $gv.CANVAS_SCALE, fwpos.y);\r\n\t\t\t}\r\n\t\t\telse if (dx1 > 0) {\r\n\t\t\t\tconst fwpos = this.foot_walk.GetPosition();\r\n\t\t\t\tthis.body.SetPositionXY(rx1 / $gv.CANVAS_SCALE, cbpos.y);\r\n\t\t\t\tthis.foot_walk.SetPositionXY(rx1 / $gv.CANVAS_SCALE, fwpos.y);\r\n\r\n\t\t\t\tif (!this.attackTarget) {\r\n\t\t\t\t\tthis.state.front *= -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tAfterStep() {\r\n\t\tsuper.AfterStep();\r\n\t\t\r\n\t\tconst pos = this.getPosition();\r\n\t\tconst x = pos.x * $gv.CANVAS_SCALE;\r\n\t\tconst y = pos.y * $gv.CANVAS_SCALE;\r\n\t\t\r\n\t\tthis.chara.x = x;\r\n\t\tthis.chara.y = y;\r\n\t\t\r\n\t\tif (!this._info.noFlip) {\r\n\t\t\tthis.chara.front = -this.state.front;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nexport class MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tthis.createDelay = 0;\r\n\t\tthis.collisionDelay = 0;\r\n\t\tthis.duration = 0;\r\n\t\t\r\n\t\tthis.moveSpeed = 0;\r\n\t\tthis.angle = 0;\r\n\t\t\r\n\t\tthis.flip = false;\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis._speed_x = 0;//uint: px/second\r\n\t\tthis._speed_y = 0;//uint: px/second\r\n\t}\r\n}\r\n\r\nexport class MobSkillBallBase extends SceneObject {\r\n\t/**\r\n\t * @param {MobSkillBallDefinition} ballDef\r\n\t * @param {{[x:string]:Animation} animations\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tballDef = Object.assign(new this._BallDefinition(), ballDef);\r\n\t\t\r\n\t\tthis.createDelay = ballDef.createDelay;\r\n\t\tthis.collisionDelay = ballDef.collisionDelay;\r\n\t\tthis.duration = ballDef.duration;\r\n\t\t\r\n\t\tthis.moveSpeed = ballDef.moveSpeed;\r\n\t\tthis.angle = ballDef.angle * Math.PI / 180;//deg to rad\r\n\t\t\r\n\t\tthis.x = ballDef.x;\r\n\t\tthis.y = ballDef.y;\r\n\t\t\r\n\t\tif (this.moveSpeed) {\r\n\t\t\tthis._speed_x = Math.cos(this.angle + Math.PI) * this.moveSpeed;//uint: px/second\r\n\t\t\tthis._speed_y = Math.sin(this.angle + Math.PI) * this.moveSpeed;//uint: px/second\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._speed_x = 0;//uint: px/second\r\n\t\t\tthis._speed_y = 0;//uint: px/second\r\n\t\t}\r\n\t\t\r\n\t\tthis.state = this.E_BEFORE_CREATE;\r\n\t}\r\n\t\r\n\tget E_BEFORE_CREATE() { return 0; }\r\n\tget E_CREATED() { return 1; }\r\n\tget E_BEGIN_COLLISION() { return 2; }\r\n\tget E_ENG_COLLISION() { return 3; }\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.state = this.E_CREATED;\r\n\t\tif (this.collisionDelay > 0) {\r\n\t\t\tthis.enablePhysics = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tbegin_collision() {\r\n\t\tthis.enablePhysics = true;\r\n\t\tthis.state = this.E_BEGIN_COLLISION;\r\n\t}\r\n\t\r\n\tend_collision() {\r\n\t\tthis.enablePhysics = false;\r\n\t\tthis.state = this.E_ENG_COLLISION;\r\n\t}\r\n\t\r\n\t/**\r\n\t * debug\r\n\t * @param {PWorld} pWorld\r\n\t */\r\n\tupdate(stamp, pWorld) {\r\n\t\tif (this.state == this.E_BEFORE_CREATE) {\r\n\t\t\tthis.createDelay -= stamp;\r\n\t\t\tif (this.createDelay <= 0) {\r\n\t\t\t\tthis.create();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state == this.E_CREATED) {\r\n\t\t\t\tthis.collisionDelay -= stamp;\r\n\t\t\t\tif (this.collisionDelay <= 0) {\r\n\t\t\t\t\tthis.begin_collision();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.state == this.E_BEGIN_COLLISION) {\r\n\t\t\t\tif (this.duration > 0) {\r\n\t\t\t\t\tthis.duration -= stamp;\r\n\t\t\t\t\tif (this.duration) {\r\n\t\t\t\t\t\tthis.end_collision();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!window.$stop) {//debug\r\n\t\t\t\tthis.x += this._speed_x * stamp / 1000;//debug\r\n\t\t\t\tthis.y += this._speed_y * stamp / 1000;//debug\r\n\t\t\t}\r\n\t\t\tthis.renderer.update(stamp);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} engine\r\n\t */\r\n\trender(engine) {\r\n\t\tif (this.state != this.E_BEFORE_CREATE) {\r\n\t\t\tconst flip = this.flip;\r\n\t\t\tthis.renderer.draw(engine, this.x, this.y, this.angle, flip);\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nexport class MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tthis._raw = _raw;\r\n\t\tthis._url = _url;\r\n\t\t\r\n\t\tthis.level = null;\r\n\t\t\r\n\t\tthis.animations = {};\r\n\t}\r\n\t\r\n\t/** @param {number} level */\r\n\tasync load(level) {\r\n\t\tthis.level = level;\r\n\t\t\r\n\t\tif (!this._raw && !this._url) {\r\n\t\t\tthis._url = [this._base_path, level].join(\"/\");\r\n\t\t\t\r\n\t\t\tthis._raw = await $get.data(this._url);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let name of this._anima_name_list) {\r\n\t\t\t//name = \"ball0\";\r\n\t\t\tlet anima = new Animation(this._raw[name], [this._url, name].join(\"/\"));\r\n\t\t\tanima.is_loop = true;\r\n\t\t\tanima.load();\r\n\t\t\tthis.animations[name] = anima;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {void} */\r\n\tinvoke() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/** @returns {string} */\r\n\tget _base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\n","﻿\r\nexport class KeySlotData {\r\n}\r\n\r\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"009f3464\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"37287e38\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"c9ae3650\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"38713d8e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7b9bb866\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3c9f94b0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"62027292\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=style&index=0&id=678b2630&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6eb55494\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"166ef477\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=style&index=0&id=10601658&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"da2cfcee\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=style&index=0&id=ea11de16&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"613b7622\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4c329b45\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&id=89d3864e&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"637cc032\", content, true, {});","\r\n<template>\r\n\t<ui-draggable class=\"ui-dialog\" :zIndex=\"zIndex\" :position=\"position\" @update:position=\"updateDialogPosition\">\r\n\t\t<div ref=\"header\" class=\"header\" @mousedown.left=\"requireOrder($event)\" :style=\"header_style\">\r\n\t\t\t<slot name=\"header\"></slot>\r\n\t\t\t<div class=\"header-buttons\">\r\n\t\t\t\t<button v-if=\"minimum\"\r\n\t\t\t\t\t\t@click=\"minimum=false\"\r\n\t\t\t\t\t\tclass=\"header-button\">\r\n\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-plus\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t<button v-else\r\n\t\t\t\t\t\t@click=\"minimum=true; onCollapsed()\"\r\n\t\t\t\t\t\tclass=\"header-button\">\r\n\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-minus\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div ref=\"content\" @mousedown.left=\"requireOrder($event)\" :style=\"content_style\" class=\"content\">\r\n\t\t\t<slot name=\"content\"></slot>\r\n\t\t\t<slot></slot>\r\n\t\t</div>\r\n\t\t<div ref=\"footer\" v-if=\"!minimum\" @mousedown.left=\"requireOrder($event)\" class=\"footer\">\r\n\t\t\t<slot name=\"footer\"></slot>\r\n\t\t</div>\r\n\t</ui-draggable>\r\n</template>\r\n\r\n<script>\r\n\timport UIDraggable from \"./ui-draggable.vue\";\r\n\r\n\tlet px_regx = /(^-?(\\d+|(\\d*.\\d+))px$)|(^auto$)/;\r\n\t//.match(/(^[+-]?\\d+\\.\\d+?)|(^[+-]?\\d+)|(^[+-]?\\.\\d+)/)\r\n\r\n\tlet zIndices = [];\r\n\r\n\texport default {\r\n\t\t//render: function (createElement) {\r\n\t\t//\treturn createElement(\"div\", [render2.apply(this, arguments), render.apply(this, arguments)]);\r\n\t\t//},\r\n\t\t\r\n\t\tprops: {\r\n\t\t\t//\"min-width\": {\r\n\t\t\t//\tdefault: \"\",\r\n\t\t\t//},\r\n\t\t\t//\"min-height\": {\r\n\t\t\t//\tdefault: \"\",\r\n\t\t\t//},\r\n\t\t\twidth: {//max-width\r\n\t\t\t\tdefault: \"\",//auto\r\n\t\t\t\t//validator: function (value) {\r\n\t\t\t\t//\treturn value == \"\" || px_regx.test(value) || Number.isSafeInteger(value);\r\n\t\t\t\t//}\r\n\t\t\t},\r\n\t\t\theight: {//max-height\r\n\t\t\t\tdefault: \"\",//auto\r\n\t\t\t\t//validator: function (value) {\r\n\t\t\t\t//\treturn value == \"\" || px_regx.test(value) || Number.isSafeInteger(value);\r\n\t\t\t\t//}\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\trequired: false\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tcontent_style: {\r\n\t\t\t\t},\r\n\t\t\t\theader_style: {\r\n\t\t\t\t},\r\n\t\t\t\tminimum: false,\r\n\t\t\t\tzIndex: 1,\r\n\t\t//\t\t_option: {}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcomputed: {\r\n\t\t},\r\n\r\n\t\t// directives: {\r\n\t\t//     'dialog': {\r\n\t\t//         bind: function () {\r\n\t\t//         }\r\n\t\t//     }\r\n\t\t// }\r\n\r\n\t\tmethods: {\r\n\t\t\tupdateDialogPosition: function (event) {\r\n\t\t\t\tthis.$emit('update:position', event);\r\n\t\t\t},\r\n\t\t\tonCollapsed: function () {\r\n\t\t\t\tlet contents = this.$children[0].$children;\r\n\t\t\t\tfor (let i = 0; i < contents.length; ++i) {\r\n\t\t\t\t\tcontents[i].$emit(\"onCollapsed\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcompute_width: function () {\r\n\t\t\t\treturn this.width;\r\n\t\t\t},\r\n\t\t\tcompute_height: function () {\r\n\t\t\t\treturn this.height;\r\n\t\t\t},\r\n\t\t\t//myUpdate: function (val) {\r\n\t\t\t//\t//return;\r\n\t\t\t//\t$(this.$el).dialog({\r\n\t\t\t//\t\ttitle: val\r\n\t\t\t//\t});\r\n\t\t\t//},\r\n\t\t\tshow: function () {\r\n\t\t\t\tlet el = $(this.$el);\r\n\t\t\t\tel.show.apply(el, arguments);\r\n\t\t\t},\r\n\t\t\thide: function () {\r\n\t\t\t\tlet el = $(this.$el);\r\n\t\t\t\tel.hide.apply(el, arguments);\r\n\t\t\t},\r\n\t\t\t//_resize_content: function (this_elem) {\r\n\t\t\t//\tlet header = $(this.$refs.header);\r\n\t\t\t//\tlet content = $(this.$refs.content);\r\n\t\t\t//\tlet footer = $(this.$refs.footer);\r\n\t\t\t//\r\n\t\t\t//\tlet hh = header.outerHeight();\r\n\t\t\t//\t//let ch = content.outerHeight();\r\n\t\t\t//\tlet fh = footer.outerHeight();\r\n\t\t\t//\r\n\t\t\t//\tcontent.height($(this_elem).height() - hh - fh);\r\n\t\t\t//},\r\n\t\t\trequireOrder: function () {\r\n\t\t\t\tconst index = zIndices.indexOf(this);\r\n\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\tlet removed = zIndices.splice(index, 1);//remove\r\n\t\t\t\t\tif (removed[0] != this) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tzIndices.push(this);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < zIndices.length; ++i) {\r\n\t\t\t\t\t\tzIndices[i].__set_z_index(i + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t__set_z_index: function (z) {\r\n\t\t\t\tthis.zIndex = z;\r\n\t\t\t},\r\n\t\t\treset_content_style: function () {\r\n\t\t\t\tlet style = {};\r\n\t\t\t\tlet el_content = this.$refs.content;\r\n\t\t\t\tif (el_content) {\r\n\t\t\t\t\tlet width = this.compute_width();\r\n\t\t\t\t\tif (this.minimum) {\r\n\t\t\t\t\t\tstyle[\"height\"] = \"0px\";\r\n\t\t\t\t\t\tstyle[\"min-height\"] = \"0px\";\r\n\t\t\t\t\t\tstyle[\"max-height\"] = \"0px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet height = this.compute_height();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//if (el_content.style.width != \"auto\") {\r\n\t\t\t\t\t\t//\tstyle[\"max-width\"] = typeof width == \"number\" ? (parseFloat(width) + \"px\"):width;\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t//if (el_content.style.height != \"auto\") {\r\n\t\t\t\t\t\t\tstyle[\"max-height\"] = typeof height == \"number\" ? (parseFloat(height) + \"px\"):height;\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstyle[\"width\"] = typeof width == \"number\" ? (parseFloat(width) + \"px\") : width;\r\n\t\t\t\t\tstyle[\"max-width\"] = typeof width == \"number\" ? (parseFloat(width) + \"px\") : width;\r\n\t\t\t\t\t//style[\"min-width\"] = this[\"min-width\"];\r\n\t\t\t\t\t//style[\"min-height\"] = this[\"min-height\"];\r\n\t\t\t\t}\r\n\t\t\t\tthis.content_style = style;\r\n\t\t\t\tthis.header_style[\"width\"] = this.content_style[\"width\"];\r\n\t\t\t\tthis.header_style[\"max-width\"] = this.content_style[\"max-width\"];\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\twatch: {\r\n\t\t\twidth: function () {\r\n\t\t\t\t//alert(\"UIDialog.width is not implement\");\r\n\t\t\t\tthis.reset_content_style();\r\n\t\t\t},\r\n\t\t\theight: function () {\r\n\t\t\t\t//alert(\"UIDialog.height is not implement\");\r\n\t\t\t\tthis.reset_content_style();\r\n\t\t\t},\r\n\t\t\tminimum: function () {\r\n\t\t\t\tthis.reset_content_style();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmounted: function () {\r\n\t\t\tzIndices.push(this);\r\n\r\n\t\t\tthis.zIndex = zIndices.length;\r\n\t\t\t\r\n\t\t\tthis.reset_content_style();\r\n\t\t},\r\n\r\n\t\tupdated: function () {\r\n\t\t},\r\n\r\n\t\t//   watch: {\r\n\t\t//   }\r\n\r\n\t\tcomponents: {\r\n\t\t\t\"ui-draggable\": UIDraggable\r\n\t\t}\r\n\t}\r\n\t\r\n\t//export default {\r\n\t//\t//render: function (createElement) {\r\n\t//\t//\treturn createElement(\"div\", [render2.apply(this, arguments), render.apply(this, arguments)]);\r\n\t//\t//},\r\n\t//\r\n\t//\tprops: {\r\n\t//\t\ttitle: {\r\n\t//\t\t\ttype: String,\r\n\t//\t\t\tdefault: \"\",\r\n\t//\t\t\trequired: false\r\n\t//\t\t},\r\n\t//\t\tposition: {\r\n\t//\t\t\ttype: Object,\r\n\t//\t\t\trequired: false\r\n\t//\t\t},\r\n\t//\t\toption: {\r\n\t//\t\t\ttype: Object,\r\n\t//\t\t\trequired: false\r\n\t//\t\t},\r\n\t//\t},\r\n\t//\r\n\t//\t//data: function () {\r\n\t//\t//\treturn {\r\n\t//\t//\t\t_option: {}\r\n\t//\t//\t};\r\n\t//\t//},\r\n\t//\r\n\t//\t// directives: {\r\n\t//\t//     'dialog': {\r\n\t//\t//         bind: function () {\r\n\t//\t//         }\r\n\t//\t//     }\r\n\t//\t// }\r\n\t//\r\n\t//\tmethods: {\r\n\t//\t\t//myUpdate: function (val) {\r\n\t//\t\t//\t//return;\r\n\t//\t\t//\t$(this.$el).dialog({\r\n\t//\t\t//\t\ttitle: val\r\n\t//\t\t//\t});\r\n\t//\t\t//},\r\n\t//\t\tshow: function () {\r\n\t//\t\t\tlet el = $(this.$el);\r\n\t//\t\t\tel.show.apply(el, arguments);\r\n\t//\t\t},\r\n\t//\t\thide: function () {\r\n\t//\t\t\tlet el = $(this.$el);\r\n\t//\t\t\tel.hide.apply(el, arguments);\r\n\t//\t\t},\r\n\t//\t\textends_option: function (option) {\r\n\t//\t\t\toption = Object.assign({}, this.option, option);\r\n\t//\t\t\tlet pos = {};\r\n\t//\t\t\tfor (let i in this.position) {\r\n\t//\t\t\t\tpos[i] = this.position[i];\r\n\t//\t\t\t}\r\n\t//\t\t\toption.title = this.title;\r\n\t//\t\t\toption.position = pos;\r\n\t//\t\t\treturn option;\r\n\t//\t\t},\r\n\t//\t\t//_resize_content: function (this_elem) {\r\n\t//\t\t//\tvar header = $(this.$refs.header);\r\n\t//\t\t//\tvar content = $(this.$refs.content);\r\n\t//\t\t//\tvar footer = $(this.$refs.footer);\r\n\t//\t\t//\r\n\t//\t\t//\tvar hh = header.outerHeight();\r\n\t//\t\t//\t//var ch = content.outerHeight();\r\n\t//\t\t//\tvar fh = footer.outerHeight();\r\n\t//\t\t//\r\n\t//\t\t//\tcontent.height($(this_elem).height() - hh - fh);\r\n\t//\t\t//},\r\n\t//\t},\r\n\t//\r\n\t//\tmounted: function () {\r\n\t//\t\tlet vm = this;\r\n\t//\t\t//width, height\r\n\t//\t\t//maxWidth, maxHeight\r\n\t//\t\t//minWidth, minHeight\r\n\t//\t\t$(this.$el).dialog(this.extends_option({\r\n\t//\t\t\t//resizeStop: function (event, ui) {\r\n\t//\t\t\t//\t//originalPosition: Object\r\n\t//\t\t\t//\t//originalSize: Object\r\n\t//\t\t\t//\t//position: Object\r\n\t//\t\t\t//\t//size: Object\r\n\t//\t\t\t//\tvm._resize_content(this);//this_elem\r\n\t//\t\t\t//\t//this.$emit(\"resizeStop\", this.size);\r\n\t//\t\t\t//\t//this.$emit('update:active', selected);\r\n\t//\t\t\t//}\r\n\t//\t\t}));\r\n\t//\t},\r\n\t//\r\n\t//\tupdated: function () {\r\n\t//\t\t$(this.$el).dialog(this.extends_option());\r\n\t//\t},\r\n\t//\r\n\t//\t//   watch: {\r\n\t//\t//     title: function (val) {\r\n\t//\t//       $(this.$el).dialog({\r\n\t//\t//         title: val\r\n\t//\t//       });\r\n\t//\t//     }\r\n\t//\t//   }\r\n\t//}\r\n</script>\r\n\r\n<style>\r\n\t.ui-dialog {\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.ui-dialog > * {\r\n\t\t/*padding: 0.5em 1em;*/\r\n\t\t/*display: inline-block;*/\r\n\t\t/*width: 100%;*/\r\n\t}\r\n\r\n\t.ui-dialog > .header {\r\n\t\t/*cursor: default;*/\r\n\t\tpadding: 0.25em 0.5em;\r\n\t\tuser-select: none;\r\n\t\tbackground: #e9e9e9;\r\n\t\tborder: 1px solid #dddddd;\r\n\t\t/*border-top-left-radius: 4px;*/\r\n\t\t/*border-top-right-radius: 4px;*/\r\n\t\ttext-align: left;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t\r\n\t.ui-dialog > .header .header-buttons {\r\n\t\tdisplay: inline;\r\n\t\tright: 0.5em;\r\n\t\tmargin-right: 1px;\r\n\t\tposition: absolute;\r\n\t}\r\n\t.ui-dialog > .header .header-buttons > * {\r\n\t\tpadding: 0;\r\n\t\tborder: none;\r\n\t\tbackground: transparent;\r\n\t}\r\n\t.ui-dialog > .header .header-buttons > .header-button {\r\n\t}\r\n\t.ui-dialog > .header .header-buttons > .header-button:hover {\r\n\t\tbackground: lightgray;\r\n\t}\r\n\t.ui-dialog > .header .header-buttons > .header-button:active {\r\n\t\tbackground: lightblue;\r\n\t}\r\n\r\n\t.ui-dialog > .content {\r\n\t\tposition: relative;\r\n\t\tbackground: white;\r\n\t\tborder-left: 1px solid #dddddd;\r\n\t\tborder-right: 1px solid #dddddd;\r\n\t\tmin-width: 16em;\r\n\t\tmin-height: 10em;\r\n\t\t/*width: auto;*/\r\n\t\t/*height: auto;*/\r\n\t\toverflow: auto;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.ui-dialog > .footer {\r\n\t\tpadding: 0.1em 0.25em;\r\n\t\tuser-select: none;\r\n\t\tbackground: #e9e9e9;\r\n\t\tborder: 1px solid #dddddd;\r\n\t\t/*border-bottom-left-radius: 4px;*/\r\n\t\t/*border-bottom-right-radius: 4px;*/\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-dialog.vue?vue&type=template&id=6a43e1d2&\"\nimport script from \"./ui-dialog.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-dialog.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-dialog.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ui-draggable',{staticClass:\"ui-dialog\",attrs:{\"zIndex\":_vm.zIndex,\"position\":_vm.position},on:{\"update:position\":_vm.updateDialogPosition}},[_c('div',{ref:\"header\",staticClass:\"header\",style:(_vm.header_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[_vm._t(\"header\"),_vm._v(\" \"),_c('div',{staticClass:\"header-buttons\"},[(_vm.minimum)?_c('button',{staticClass:\"header-button\",on:{\"click\":function($event){_vm.minimum=false}}},[_c('span',{staticClass:\"ui-icon ui-icon-plus\"})]):_c('button',{staticClass:\"header-button\",on:{\"click\":function($event){_vm.minimum=true; _vm.onCollapsed()}}},[_c('span',{staticClass:\"ui-icon ui-icon-minus\"})])])],2),_vm._v(\" \"),_c('div',{ref:\"content\",staticClass:\"content\",style:(_vm.content_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[_vm._t(\"content\"),_vm._v(\" \"),_vm._t(\"default\")],2),_vm._v(\" \"),(!_vm.minimum)?_c('div',{ref:\"footer\",staticClass:\"footer\",on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[_vm._t(\"footer\")],2):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n/**\r\n * usage:\r\n *\tvar fairyDust = new FairyDust();\r\n *\tfairyDust.load(4).then(()=>fairyDust.invoke());\r\n */\r\n\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { MobSkillBallDefinition, MobSkillBallBase, MobSkillBase } from \"./MobSkillBase.js\";\r\n\r\n\r\nclass FairyDustBallDefinition extends MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.scale = 0;// 1~3\r\n\t}\r\n}\r\n\r\nexport class FairyDustBall extends MobSkillBallBase {\r\n\t/**\r\n\t * @param {FairyDustBallDefinition} ballDef\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper(ballDef, animations);\r\n\t\t\r\n\t\tthis.x = 1000;\r\n\t\tthis.y = -80;\r\n\t\t\r\n\t\t//this.scale = ballDef.scale;\r\n\t\t\r\n\t\tthis.renderer = animations[\"ball\" + ballDef.scale].clone();\r\n\t}\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.$physics = {// make dummy for debug\r\n\t\t\tstate: {}\r\n\t\t};\r\n\t\t\r\n\t\tsuper.create(pWorld);//complete create\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\treturn FairyDustBallDefinition;\r\n\t}\r\n}\r\nexport class FairyDustBallHit extends SceneObject {\r\n\tconstructor(target, animations) {\r\n\t\tsuper();\r\n\t\t//MouseJoint\r\n\t\t//World.CreateJoint()\r\n\t}\r\n}\r\n\r\nexport class FairyDust extends MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t}\r\n\t\r\n\t/** @param {4|10} level */\r\n\t\r\n\tinvoke() {\r\n\t\tconst s = this._raw.s;\r\n\t\tconst s2 = this._raw.s2;\r\n\t\tconst v = this._raw.v;\r\n\t\tconst v2 = this._raw.v2;\r\n\t\tconst w = this._raw.w;\r\n\t\tconst w2 = this._raw.w2;\r\n\t\tconst u = this._raw.u;\r\n\t\tlet x = this._raw.x;\r\n\t\t\r\n\t\tfor (let i = 0, max = Randomizer.randInt(w, w + w2); i < max; i++) {\r\n\t\t\tx += Randomizer.nextInt(x);\r\n\t\t\tlet ball = new FairyDustBall({\r\n\t\t\t\tscale: Randomizer.nextInt(3),\r\n\t\t\t\tcreateDelay: u,\r\n\t\t\t\tmoveSpeed: v + Randomizer.nextInt(v2),\r\n\t\t\t\tangle: x + Randomizer.randInt(s, s2),\r\n\t\t\t}, this.animations);\r\n\t\t\t$gv.SceneObjectMgr.addToScene(10, ball);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\treturn [\"ball0\", \"ball1\", \"ball2\"];\r\n\t}\r\n\t\r\n\tget _base_path() {\r\n\t\treturn \"/Skill/MobSkill/238/level\";\r\n\t}\r\n}\r\n\r\nexport class _FairyDust extends FairyDust {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t}\r\n\t/** @override */\r\n\tload(level) {\r\n\t\tif (!this._raw && !this._url) {\r\n\t\t\tthis._raw = window.MOB_SKILL_RAW[238].level[level];\r\n\t\t\tthis._url = [this._base_path, level].join(\"/\");\r\n\t\t}\r\n\t\tsuper.load(level);\r\n\t}\r\n}\r\n\r\n","﻿\r\nlet LoginPacket = require(\"./LoginPacket.js\");\r\nlet ChatPacket = require(\"./ChatPacket.js\");\r\nlet CharacterPacket = require(\"./CharacterPacket.js\");\r\n\r\nlet ex = Object.assign({},\r\n\tLoginPacket,\r\n\tChatPacket,\r\n\tCharacterPacket\r\n);\r\n\r\nmodule.exports = ex;\r\n","﻿\r\nimport { Animation } from \"../Animation.js\"\r\nimport { IRenderer } from \"../IRenderer.js\";\r\n\r\n/**\r\n * @interface\r\n */\r\nexport class Drawable {\r\n\tconstructor() {\r\n\t\t/** @type {number} = 0~1 */\r\n\t\tthis.opacity = 1;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t}\r\n\r\n\tisEnd() {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tthrow new Error();\r\n\t}\r\n}\r\n\r\nexport class Layer {\r\n\tconstructor() {\r\n\t\t/** @type {Drawable[]} */\r\n\t\tthis.objects = [];\r\n\r\n\t\tthis.opacity = 1;\r\n\t}\r\n\t\r\n\tadd(obj) {\r\n\t\tthis.objects.push(obj);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.objects = this.objects.filter(function (obj) {\r\n\t\t\tif (obj.isEnd()) {\r\n\t\t\t\tobj.destroy();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tobj.update(stamp);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tif (this.opacity > 0) {\r\n\t\t\tconst opacity = this.opacity;\r\n\r\n\t\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\t\tthis.objects.forEach(function (obj) {\r\n\t\t\t\trenderer.globalAlpha = obj.opacity * opacity;\r\n\r\n\t\t\t\tobj.render(renderer);\r\n\t\t\t});\r\n\r\n\t\t\trenderer.popGlobalAlpha();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { IRenderer } from \"../IRenderer\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Drawable, Layer } from \"./Layer\";\r\nimport { DamagePair, AttackInfo } from \"../../Common/AttackInfo\";\r\n\r\n// 123\r\n// NoRed[1][1], NoRed[0][2], NoRed[0][3], ...\r\n\r\nclass _DamageSkin {\r\n\tconstructor() {\r\n\t\t/** @type {DamageNumberTextures} */\r\n\t\tthis.NoRed = null;\r\n\t\t/** @type {DamageNumberTextures} */\r\n\t\tthis.NoCri = null;\r\n\t}\r\n}\r\nclass _DamageSkinDefault extends _DamageSkin {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoBlue = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoViolet = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoProduction = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoKite = null;\r\n\t}\r\n}\r\n\r\n\r\n/** @type {{default:_DamageSkinDefault,[skin:string]:_DamageSkin}} */\r\nconst loaded_skin = {};\r\n\r\nclass DamageNumberTextures {\r\n\tconstructor() {\r\n\t\t/** @type {Sprite} */\r\n\t\tfor (let i = 0; i <= 9; ++i) {\r\n\t\t\tthis[i] = null;\r\n\t\t}\r\n\t\tthis.addedCanvasH = 0;\r\n\t}\r\n\t/**\r\n\t * @param {string} path\r\n\t */\r\n\tasync _load(path) {\r\n\t\tconst _raw = await $get.data(path);\r\n\t\t\r\n\t\tObject.keys(_raw).forEach(key => {\r\n\t\t\tlet texture = new Sprite(_raw[key]);\r\n\r\n\t\t\ttexture._url = [path, key].join(\"/\");\r\n\r\n\t\t\tthis[key] = texture;\r\n\t\t});\r\n\r\n\t\tthis.addedCanvasH = _raw.addedCanvasH | 0;\r\n\t}\r\n}\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.Miss = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.guard = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.shot = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.effect = null;\r\n\r\n\r\nfunction font_adv(texture) {\r\n\treturn texture.width * 3 / 4;\r\n}\r\n\r\nfunction draw_axis(ctx, x, y) {\r\n\tctx.strokeStyle = \"#F00\";\r\n\tctx.beginPath();\r\n\tctx.moveTo(x, y);\r\n\tctx.lineTo(x, y + 10);\r\n\tctx.stroke();\r\n\r\n\tctx.strokeStyle = \"#0F0\";\r\n\tctx.beginPath();\r\n\tctx.moveTo(x, y);\r\n\tctx.lineTo(x + 10, y);\r\n\tctx.stroke();\r\n}\r\n\r\nclass DamageNumberRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.style = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.skin = null;\r\n\r\n\t\t/** @type {DamageNumberTextures[]} - this.textures[is_first_num ? 1:0][num] */\r\n\t\tthis.textures = [];\r\n\r\n\t\t/** @type {number[]} */\r\n\t\tthis.rand_y = [0];\r\n\t\tfor (let i = 1, sign = Math.random() > 0.5 ? -1:1; i < DamageNumberRenderer.max_display_digit; ++i) {\r\n\t\t\tthis.rand_y[i] = Math.random() * DamageNumberRenderer.max_rand_y * sign;\r\n\t\t\tsign *= -1;\r\n\t\t}\r\n\r\n\t\t///** @type {Promise<void>} */\r\n\t\t//this._$promise = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {DamageNumberRenderer} other\r\n\t */\r\n\t_copy(other) {\r\n\t\tthis._url = other._url;\r\n\t\tthis.skin = other.skin;\r\n\t\tthis.style = other.style;\r\n\t\tthis.textures = other.textures;\r\n\r\n\t\t//loading\r\n\t\tif (this._$promise) {\r\n\t\t\tthis._$promise = other._$promise;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @returns {Promise<DamageNumberRenderer>}\r\n\t */\r\n\tasync _load(skin, style) {\r\n\t\tlet tasks = [];\r\n\t\tlet url;\r\n\r\n\t\tif (skin == \"default\") {\r\n\t\t\turl = this._default_base_path + style;\r\n\t\t}\r\n\t\telse {\r\n\t\t\turl = this._skin_base_path + [skin, style].join(\"/\");\r\n\t\t}\r\n\r\n\t\tif (!loaded_skin[skin]) {\r\n\t\t\tloaded_skin[skin] = {};\r\n\t\t}\r\n\t\tloaded_skin[skin][style] = this;\r\n\r\n\t\tthis._url = url;\r\n\t\tthis.skin = skin;\r\n\t\tthis.style = style;\r\n\r\n\t\tfor (let i = 0; i <= 1; ++i) {\r\n\t\t\tconst sPath = url + i;\r\n\t\t\t\r\n\t\t\tthis.textures[i] = new DamageNumberTextures();\r\n\r\n\t\t\ttasks[i] = this.textures[i]._load(sPath);\r\n\t\t}\r\n\r\n\t\tawait Promise.all(tasks);\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @returns {Promise<DamageNumberRenderer>}\r\n\t */\r\n\tasync load(skin, style) {\r\n\t\tlet loaded;\r\n\r\n\t\tif (loaded_skin[skin]) {\r\n\t\t\tloaded = loaded_skin[skin][style];\r\n\t\t}\r\n\r\n\t\tif (loaded) {\r\n\t\t\tthis._copy(skin, loaded);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._$promise = this._load(skin, style);\r\n\r\n\t\t\tawait this._$promise;\r\n\r\n\t\t\tdelete this._$promise;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} damage\r\n\t * @param {boolean} critical\r\n\t * @param {number} cx\r\n\t * @param {number} cy\r\n\t */\r\n\tdraw(renderer, damage, critical, cx, cy) {\r\n\t\tlet str_damage = damage.toFixed(0);\r\n\r\n\t\t/** @type {Sprite} */\r\n\t\tlet texture;\r\n\t\tlet text_width = 0;\r\n\r\n\t\t{\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\ttext_width += -texture.x;\r\n\t\t\ttext_width += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length - 1; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\ttext_width += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tlet x = cx - text_width / 2;\r\n\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\ttexture.draw2(x, cy);\r\n\t\t\tx += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\ttexture.draw2(x, cy + this.rand_y[i]);\r\n\r\n\t\t\t\tx += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._display_axis) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\t\t\tlet x = cx - text_width / 2;\r\n\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\tdraw_axis(ctx, x, cy);\r\n\t\t\tx += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\tdraw_axis(ctx, x, cy + this.rand_y[i]);\r\n\r\n\t\t\t\tx += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget _default_base_path() {\r\n\t\treturn \"/Effect/BasicEff\";\r\n\t}\r\n\tget _skin_base_path() {\r\n\t\treturn \"/Effect/BasicEff/damageSkin/\";\r\n\t}\r\n}\r\nDamageNumberRenderer.loaded_skin = loaded_skin;\r\nDamageNumberRenderer.max_display_digit = Math.trunc(Math.log10(Number.MAX_SAFE_INTEGER) + 1);\r\nDamageNumberRenderer.max_rand_y = 5;\r\n\r\n\r\nexport class DamageNumber extends Drawable {\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @param {DamagePair} damagePair\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t */\r\n\tconstructor(skin, style, damagePair, x, y, delay) {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\tthis.vy = DamageNumber.move_y / DamageNumber.time_tt;\r\n\r\n\t\tthis.delay = delay;\r\n\t\tthis.time = 0;\r\n\t\tthis.state = 0;\r\n\r\n\t\tthis.damagePair = damagePair;\r\n\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.renderer;\r\n\r\n\t\tthis._load(skin, style);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @param {number} recursive\r\n\t */\r\n\t_load(skin, style, recursive) {\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tlet loaded;\r\n\t\t\r\n\t\tif (loaded_skin[skin]) {\r\n\t\t\tloaded = loaded_skin[skin][style];\r\n\t\t}\r\n\r\n\t\tif (loaded) {\r\n\t\t\tthis.renderer = loaded;\r\n\r\n\t\t\tthis._$promise = this.renderer._$promise;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderer = new DamageNumberRenderer();\r\n\t\t\tthis._$promise = this.renderer.load(skin, style);\r\n\t\t}\r\n\t\tif (this._$promise) {\r\n\t\t\tthis.render = this.$noRender;\r\n\r\n\t\t\tthis._$promise\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tdelete this.render;\r\n\t\t\t\t\tdelete this._$promise;\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\tdelete this._$promise;\r\n\t\t\t\t\tconsole.error(`Can't load damageSkin[${skin}][${style}]`);\r\n\r\n\t\t\t\t\tif (recursive) {\r\n\t\t\t\t\t\tthrow Error();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log(`try load damageSkin[\"default\"][${style}]`);\r\n\t\t\t\t\t\tthis._load(\"default\", style, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t$noRender() {\r\n\t\t// nothing\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.state = 2;\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\treturn this.state >= 1 && this.time > 1000;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.time += stamp;\r\n\r\n\t\tif (this.delay && this.time >= this.delay) {\r\n\t\t\tthis.time = 0;\r\n\t\t\tthis.delay = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.y += this.vy * stamp;\r\n\r\n\t\t\tif (this.state == 0) {\r\n\t\t\t\tthis.vy = this.vy * DamageNumber.move_avy;\r\n\r\n\t\t\t\tif (this.time > DamageNumber.time_d1) {\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.state = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.state == 1) {\r\n\t\t\t\tthis.vy = this.vy * DamageNumber.move_avy2;\r\n\r\n\t\t\t\tif (this.time < DamageNumber.time_d2) {\r\n\t\t\t\t\tthis.opacity = 1 - (this.time / DamageNumber.time_d2);\r\n\t\t\t\t\t//this.opacity = Math.clamp(this.opacity, 0, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.opacity = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tthis.renderer.draw(renderer, this.damagePair.realDamage, this.damagePair.critical, this.x, this.y);\r\n\t}\r\n}\r\nDamageNumber.time_d1 = 1000;\r\nDamageNumber.time_d2 = 1000;\r\nDamageNumber.time_tt = DamageNumber.time_d1 + DamageNumber.time_d2;\r\nDamageNumber.move_y = -300;\r\nDamageNumber.move_avy = 1.001;\r\nDamageNumber.move_avy2 = 0.99;\r\n\r\nexport class DamageNumberTest extends DamageNumber {\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t}\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n}\r\n\r\nexport class DamageNumberLayer extends Layer {\r\n\t//constructor() {\r\n\t//\tsuper();\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {number} critical\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t */\r\n\t_addTest(realDamage = 9876543210, critical = false, x = 0, y = 0, delay = 0, skin = null, style = \"NoRed\") {\r\n\t\tthis.objects.push(new DamageNumber(skin, style, new DamagePair(realDamage, critical), x, y, delay));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {number} critical\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t */\r\n\t_addTest2(realDamage = 9876543210, critical = false, x = 0, y = 0, delay = 0, skin = null, style = \"NoRed\") {\r\n\t\tthis.objects.push(new DamageNumberTest(skin, style, new DamagePair(realDamage, critical), x, y, delay));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {AttackInfo} attackInfo\r\n\t */\r\n\t_addAttack(skin, style, attackInfo) {\r\n\t\tattackInfo.allAttack.forEach(attack => {\r\n\t\t\tlet target = attack.getTargetObject();\r\n\t\t\tif (target) {\r\n\t\t\t\tconst pos = target.$physics.getPosition();\r\n\t\t\t\tlet x, y;\r\n\r\n\t\t\t\tx = pos.x * $gv.CANVAS_SCALE;\r\n\t\t\t\ty = pos.y * $gv.CANVAS_SCALE - 70;\r\n\r\n\t\t\t\tattack.allDamage.forEach(damage => {\r\n\t\t\t\t\tthis.addDamagePair(skin, style, damage, x, y);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @template K\r\n\t * @param {string} skin\r\n\t * @param {K extends keyof loaded_skin[skin] ? K:never} style\r\n\t * @param {DamagePair} damagePair\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t */\r\n\taddDamagePair(skin, style, damagePair, x, y, delay = 0) {\r\n\t\tthis.objects.push(new DamageNumber(skin, style, damagePair, x, y, delay));\r\n\t}\r\n}\r\n\r\n\r\nexport const damageNumberLayer = new DamageNumberLayer();\r\n\r\nwindow.$damageNumberLayer = damageNumberLayer;\r\nwindow.$DamageNumber = DamageNumber\r\nwindow.$DamageNumberTest = DamageNumberTest;\r\nwindow.$DamageNumberRenderer = DamageNumberRenderer;\r\n//DamageNumberRenderer.prototype._display_axis = true;\r\n\r\n","\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { MobSkillBallDefinition, MobSkillBallBase, MobSkillBase } from \"./MobSkillBase.js\";\r\n\r\nclass FlowerTrapBallDefinition extends MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.size = 0;// 1~3\r\n\t}\r\n}\r\n\r\nexport class FlowerTrapBall extends MobSkillBallBase {\r\n\t/**\r\n\t * @param {FlowerTrapBallDefinition} ballDef\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper(ballDef, animations);\r\n\t\t\r\n\t\tthis.renderer = animations[ballDef.size].clone();\r\n\t}\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.$physics = {// make dummy for debug\r\n\t\t\tstate: {}\r\n\t\t};\r\n\t\t\r\n\t\tsuper.create(pWorld);//complete create\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\treturn FlowerTrapBallDefinition;\r\n\t}\r\n}\r\n\r\nexport class FlowerTrap extends MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t\tthis.patterns = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} pattern - 0~2 int\r\n\t * @param {number} x - int\r\n\t * @param {number} y - int\r\n\t * @param {boolean} flip - not sure\r\n\t */\r\n\t_invoke(pattern, x, y, flip) {\r\n\t\tconst pats = this._raw[\"pattern\" + pattern];\r\n\t\tfor (let i = 0; i in pats; ++i) {\r\n\t\t\tconst pat = pats[i];\r\n\t\t\tlet mx, my, angle;\r\n\t\t\t\r\n\t\t\tmx = x + (flip ? (-pat.pos.x) : (pat.pos.x));\r\n\t\t\tmy = y + pat.pos.y;\r\n\t\t\tangle = pat.angle - 90;//texture is vertical, angle - 90deg\r\n\t\t\t\r\n\t\t\tlet ball = new FlowerTrapBall({\r\n\t\t\t\tx: mx, y: my, angle: angle,\r\n\t\t\t\tsize: pat.size,\r\n\t\t\t\tcreateDelay: pat.createDelay,\r\n\t\t\t\tcollisionDelay: pat.collisionDelay,\r\n\t\t\t\tduration: pat.duration\r\n\t\t\t}, this.animations);\r\n\t\t\t\r\n\t\t\t$gv.SceneObjectMgr.addToScene(10, ball);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {void} */\r\n\tinvoke() {\r\n\t\tthis._invoke(Randomizer.nextInt(3), 1000, 48, Randomizer.nextBoolean());\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\treturn [\"XL\", \"L\", \"M\", \"S\"];\r\n\t}\r\n\t\r\n\t/** @returns {string} */\r\n\tget _base_path() {\r\n\t\treturn \"/Skill/MobSkill/238/level\";\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { CharacterStat, $RemotePlayerData, $PlayerData } from \"../../Common/PlayerData\";\r\n\r\nexport class $RequestPacket_SelectChara {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.charaId = undefined;\r\n\t}\r\n}\r\nexport class $ResponsePacket_SelectChara {\r\n\tconstructor() {\r\n\t\t/** @type {$PlayerData} */\r\n\t\tthis.charaData = null;\r\n\r\n\t\t/** @type {$RemotePlayerData[]} */\r\n\t\tthis.remoteCharacters = null;\r\n\t}\r\n}\r\n","﻿\r\n\r\nexport class $Packet_CharacterChat {\r\n\tconstructor() {\r\n\t\t/** @type {number} - chat type */\r\n\t\tthis.type = null;\r\n\r\n\t\t/** @type {number} - ChatBalloon style */\r\n\t\tthis.$style = null;\r\n\r\n\t\t/** @type {string} - chat text */\r\n\t\tthis.text = null;\r\n\t}\r\n}\r\n","﻿\r\nimport { CharacterMoveElem } from \"../../Client/PMovePath\";\r\n\r\n/**\r\n * @type {{[x:string]:string}[]}\r\n */\r\nconst keyboard_map = [{\r\n\tArrowUp: \"up\",\r\n\tArrowLeft: \"left\",\r\n\tArrowDown: \"down\",\r\n\tArrowRight: \"right\",\r\n\tz: \"jump\",\r\n\tx: \"skill_1\",\r\n\tc: \"skill_2\",\r\n\tv: \"skill_3\",\r\n},\r\n{\r\n\tw: \"up\",\r\n\ta: \"left\",\r\n\ts: \"down\",\r\n\td: \"right\",\r\n\tq: \"jump\",\r\n\tx: \"skill_1\",\r\n\tc: \"skill_2\",\r\n\tv: \"skill_3\",\r\n}];\r\n\r\nexport class $Packet_CharacterMove {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.id = undefined;\r\n\r\n\t\t/** @type {CharacterMoveElem[]} */\r\n\t\tthis.path = [];\r\n\r\n\t\t/** @type {number} - time stamp */\r\n\t\tthis.stamp = (new Date().getTime());\r\n\t}\r\n\tcapture(chara) {\r\n\t\tconst phy = chara.$physics;\r\n\t\tconst body = phy.body;\r\n\t\tlet elem = new CharacterMoveElem();\r\n\r\n\t\t{\r\n\t\t\tconst crr = chara.renderer;\r\n\r\n\t\t\telem.action = crr.action;\r\n\t\t\t//elem.action_frame = crr.action_frame;\r\n\t\t\telem.emotion = crr.emotion;\r\n\t\t\t//elem.emotion_frame = crr.emotion_frame;\r\n\t\t}\r\n\r\n\t\telem.isAwake = body.IsAwake();\r\n\t\tif (elem.isAwake) {\r\n\r\n\t\t\tlet pos = phy.getPosition();\r\n\t\t\tlet vel = body.GetLinearVelocity();\r\n\r\n\t\t\telem.x = pos.x;\r\n\t\t\telem.y = pos.y;\r\n\t\t\telem.vx = vel.x;\r\n\t\t\telem.vy = vel.y;\r\n\t\t\t//elem.fx = force.x;\r\n\t\t\t//elem.fy = force.y;\r\n\r\n\t\t\telem.pState = phy.state;\r\n\r\n\t\t\telem.elapsed = (new Date().getTime()) - this.stamp;\r\n\t\t}\r\n\r\n\t\tthis.path.push(elem);\r\n\t}\r\n}\r\n\r\nclass $CharacterMoveItemElem {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.from = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.to = null;\r\n\r\n\t\t/** @type {string} - equip id */\r\n\t\tthis.item = null;\r\n\t}\r\n}\r\nclass $Packet_CharacterMoveItem {\r\n\tconstructor() {\r\n\t\t/** @type {$CharacterMoveItemElem} */\r\n\t\tthis.elem = [];\r\n\t}\r\n}\r\n\r\nclass $Packet_CharacterSkill {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.skillId = null;\r\n\t}\r\n}\r\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-draggable {\\n\\tposition: absolute;\\n\\tdisplay: inline-block;\\n\\tuser-select: none;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-dialog {\\n\\tborder-radius: 4px;\\n}\\n.ui-dialog > * {\\n\\t/*padding: 0.5em 1em;*/\\n\\t/*display: inline-block;*/\\n\\t/*width: 100%;*/\\n}\\n.ui-dialog > .header {\\n\\t/*cursor: default;*/\\n\\tpadding: 0.25em 0.5em;\\n\\tuser-select: none;\\n\\tbackground: #e9e9e9;\\n\\tborder: 1px solid #dddddd;\\n\\t/*border-top-left-radius: 4px;*/\\n\\t/*border-top-right-radius: 4px;*/\\n\\ttext-align: left;\\n\\tbox-sizing: border-box;\\n}\\n.ui-dialog > .header .header-buttons {\\n\\tdisplay: inline;\\n\\tright: 0.5em;\\n\\tmargin-right: 1px;\\n\\tposition: absolute;\\n}\\n.ui-dialog > .header .header-buttons > * {\\n\\tpadding: 0;\\n\\tborder: none;\\n\\tbackground: transparent;\\n}\\n.ui-dialog > .header .header-buttons > .header-button {\\n}\\n.ui-dialog > .header .header-buttons > .header-button:hover {\\n\\tbackground: lightgray;\\n}\\n.ui-dialog > .header .header-buttons > .header-button:active {\\n\\tbackground: lightblue;\\n}\\n.ui-dialog > .content {\\n\\tposition: relative;\\n\\tbackground: white;\\n\\tborder-left: 1px solid #dddddd;\\n\\tborder-right: 1px solid #dddddd;\\n\\tmin-width: 16em;\\n\\tmin-height: 10em;\\n\\t/*width: auto;*/\\n\\t/*height: auto;*/\\n\\toverflow: auto;\\n\\tbox-sizing: border-box;\\n}\\n.ui-dialog > .footer {\\n\\tpadding: 0.1em 0.25em;\\n\\tuser-select: none;\\n\\tbackground: #e9e9e9;\\n\\tborder: 1px solid #dddddd;\\n\\t/*border-bottom-left-radius: 4px;*/\\n\\t/*border-bottom-right-radius: 4px;*/\\n\\tbox-sizing: border-box;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\ndiv[data-v-550d0e17] {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n}\\n.active[data-v-550d0e17] {\\n\\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\\n\\tbackground-color: #ffec64;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.menu-frame {\\n\\tuser-select: none;\\n\\tposition: absolute;\\n\\toverflow: hidden;\\n}\\n.menu {\\n\\tlist-style: none;\\n\\tmargin: 0;\\n\\tpadding: 0em 0em;\\n\\tbackground: #f0f9ff;\\n\\tborder: 1px solid darkgray;\\n\\tbox-shadow: 0.2em 0.2em 0.2em darkgray;\\n}\\n.menu > *:not(hr) {\\n\\tdisplay: block;\\n\\tpadding: 0.25em 1em 0.25em 1em;\\n\\tbackground: #f0f9ff;\\n\\tcursor: pointer;\\n}\\n.menu > *.disable {\\n\\tcursor: not-allowed;\\n\\tcolor: darkgray;\\n}\\n.menu > *:not(.disable):not(hr):hover {\\n\\tbackground: linear-gradient(to bottom, #4096ee 0%,#4096ee 100%);\\n\\tbox-shadow: inset 0 0 1px #1e69de;\\n}\\n.menu > *:not(.disable):not(hr):active {\\n\\tbackground: linear-gradient(to bottom, #6db3f2 0%,#54a3ee 50%,#3690f0 51%,#1e69de 100%);\\n\\tbox-shadow: inset 0 0 1px #1e69de;\\n}\\n.menu > hr {\\n\\tmargin: 0.2em 0;\\n}\\n.menu-enter-active {\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n\\twhite-space: nowrap;\\n\\twidth: 100%;\\n\\theight: 5em;\\n\\ttransition: .3s;\\n}\\n.menu-enter {\\n\\topacity: 0;\\n\\theight: 0;\\n\\twidth: 0;\\n}\\n.menu-leave-active {\\n\\ttransition: .4s;\\n}\\n.menu-leave-to {\\n\\topacity: 0;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-button-group input[type=\\\"radio\\\"] {\\n\\tdisplay: none;\\n}\\n.ui-button-group {\\n\\tdisplay: flex;\\n}\\n.ui-button-group button {\\n\\tflex: 1;\\n\\tpadding: 0;\\n\\toutline: none;\\n}\\n/*.ui-button-group button > * {\\n\\twidth: 100%;\\n\\theight: 100%;\\n}*/\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-equip-box .header {\\n\\ttext-align: left;\\n}\\n.ui-equip-box .header.btn-group, .ui-equip-box .header .pagination {\\n\\ttext-align: center;\\n}\\n.ui-equip-box .pagination {\\n\\theight: 2em;\\n\\toverflow: auto;\\n\\tfont-size: initial;\\n}\\n.ui-equip-box .item-list {\\n\\tlist-style: none;\\n\\tmargin: auto;\\n\\tpadding: 1px;\\n}\\n.ui-equip-box .item-list-sm {\\n\\tmargin: auto;\\n\\tpadding: 1px;\\n\\tline-height: 0;\\n\\ttext-align: center;\\n}\\n.ui-equip-box .item-detail {\\n\\twidth: 100%;\\n\\tborder-spacing: 1px;\\n}\\n.ui-equip-box .list-item, .ui-equip-box .list-item-sm {\\n\\tborder: 1px solid black;\\n\\tborder-bottom: none;\\n\\tbackground: linear-gradient(to bottom, rgba(240,249,255,0.9) 0%,rgba(203,235,255,0.9) 30%,rgba(201,234,255,0.9) 50%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 75%,rgba(240,249,255,0.9) 100%);\\n}\\n.ui-equip-box .list-item-sm {\\n\\tdisplay: inline-block;\\n\\tborder: none;\\n\\toutline: 1px solid black;\\n\\tbox-shadow: inset 1px 1px 0 lightblue;\\n}\\n.ui-equip-box .list-item:target, .ui-equip-box .list-item-sm:target {\\n\\tbox-shadow: inset 0 0 0 1px red;\\n\\toutline: 1px solid red;\\n\\tposition: relative;\\n}\\n.ui-equip-box .list-item:last-child {\\n\\tborder-bottom: 1px solid black;\\n}\\n.ui-equip-box .list-item:hover, .ui-equip-box .list-item-sm:hover {\\n\\tbackground: aliceblue;\\n}\\n.ui-equip-box .list-item:active, .ui-equip-box .list-item-sm:active {\\n\\tbackground: lightgray;\\n}\\n.ui-equip-box .item-name {\\n\\tuser-select: text;\\n\\twidth: 12em;\\n\\twhite-space: nowrap;\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n}\\n.ui-equip-box .list-item:target .item-name {\\n\\tcolor: red;\\n\\tfont-weight: bold;\\n}\\n.ui-equip-box .item-id {\\n\\tuser-select: text;\\n}\\n.ui-equip-box .item-icon-outer-frame {\\n\\tposition: relative;\\n\\twidth: 48px;\\n\\theight: 48px;\\n\\tuser-select: none;\\n}\\n.ui-equip-box .item-icon-frame > img, .ui-equip-box .item-icon-frame-sm > img {\\n\\tmax-width: 48px;\\n\\tmax-height: 48px;\\n\\tdisplay: block;\\n\\tmargin: auto;\\n}\\n.ui-equip-box .filters button:hover {\\n\\tborder: 1px solid blue;\\n\\tborder-radius: 3px;\\n\\tbackground: rgba(240, 249, 255, 0.9);\\n}\\n.ui-equip-box .filters button:hover, .face_color button:hover, .hair_color button:hover {\\n\\tfilter: contrast(150%) brightness(110%);\\n}\\n.ui-equip-box .filters button.active {\\n\\tborder-radius: 3px;\\n\\tbackground-color: hsl(203, 0%, 70%);\\n}\\n.ui-equip-box .filters button.active img {\\n\\tfilter: grayscale(100%) brightness(90%) contrast(150%);\\n}\\n.ui-equip-box .filters button.active:hover {\\n\\tborder: 1px solid blue;\\n\\tbackground: rgba(240, 249, 255, 0.9);\\n}\\n.ui-equip-box .filters button.active:hover {\\n\\tfilter: contrast(150%) grayscale(100%) brightness(110%);\\n}\\n.ui-equip-box .face_color, hair_color {\\n\\tborder: 1px solid transparent;\\n\\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\\n}\\n.ui-equip-box .face_color button.active, .hair_color button.active {\\n\\tborder: 1px solid white;\\n\\tbox-shadow: 0 0 0.5em 0 blue, 0 0 1em 0 yellow;\\n\\tcolor: white;\\n\\ttext-shadow: 0 0 0.1em black, 0 0 0.5em black;\\n\\tz-index: 1;\\n}\\n.ui-equip-box .button-area > * {\\n\\tpadding-top: 1px;\\n}\\n.ui-equip-box .button-area {\\n\\tuser-select: none;\\n}\\n.ui-equip-box .button-area button {\\n\\ttext-align: center;\\n\\tcursor: pointer;\\n\\tborder: 1px solid transparent;\\n\\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\\n\\tfont-family: 微軟正黑體;\\n\\tfont-weight: bold;\\n\\tfont-size: 1em;\\n}\\n.ui-equip-box .button-area button > img {\\n\\tdisplay: block;\\n\\tmargin: auto;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=style&index=0&id=678b2630&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=style&index=0&id=678b2630&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\ndiv.frame[data-v-678b2630] {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\twidth: 64px;\\n\\theight: 96px;\\n\\n\\tuser-select: none;\\n\\tbackground-position: 0px 0px, 10px 10px;\\n\\tbackground-size: 20px 20px;\\n\\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\\n}\\ndiv.center[data-v-678b2630] {\\n\\tposition: absolute;\\n\\tleft: 32px;\\n\\ttop: 96px;\\n}\\nimg[data-v-678b2630] {\\n\\tposition: absolute;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-character-frame {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\twidth: 64px;\\n\\theight: 96px;\\n\\n\\tuser-select: none;\\n\\tbackground-position: 0px 0px, 10px 10px;\\n\\tbackground-size: 20px 20px;\\n\\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\\n}\\n.ui-character-center {\\n\\tposition: absolute;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tbackground: rgba(0,0,0,0.2);\\n\\toverflow: hidden;\\n\\ttext-align: center;\\n}\\n.ui-character-text {\\n\\ttext-align: center;\\n\\tposition: absolute;\\n\\ttop: calc(50% - 0.5em);\\n\\tfont-weight: bold;\\n\\tcolor: white;\\n\\ttext-shadow: 0 0 1px black, 0 0 2px black, 0 0 5px black;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=style&index=0&id=10601658&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=style&index=0&id=10601658&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.UIEditCharacterAttribute td > *[data-v-10601658] {\\n\\twidth: 100%;\\n}\\n.btn[data-v-10601658] {\\n\\tmargin: auto;\\n\\tpadding: 0;\\n\\tuser-select: none;\\n}\\n.chara_ear[data-v-10601658] {\\n\\twidth: 100%;\\n\\tdisplay: block;\\n}\\n.equip-icon[data-v-10601658] {\\n\\tmargin: auto;\\n\\tmax-width: 32px;\\n\\tmax-height: 32px;\\n\\twidth: auto !important;\\n\\theight: auto !important;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=style&index=0&id=ea11de16&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=style&index=0&id=ea11de16&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-life-list[data-v-ea11de16] {\\r\\n\\tpadding: 0 1px;\\n}\\ntable[data-v-ea11de16] {\\r\\n    border-collapse: collapse;\\r\\n    border-spacing: 0;\\n}\\ntr.new-item[data-v-ea11de16] {\\r\\n\\tbackground: lightgray;\\n}\\ntr.item[data-v-ea11de16]:hover {\\r\\n\\tbackground: lightblue;\\r\\n\\toutline: 1px auto rgb(77, 144, 254);\\n}\\n.button[data-v-ea11de16] {\\r\\n\\twidth: 100%;\\n}\\n.input[data-v-ea11de16] {\\r\\n  width: 2.7em;\\n}\\n.input[type=text][data-v-ea11de16] {\\r\\n  width: 4em;\\n}\\n.input[type=number][data-v-ea11de16] {\\r\\n  width: 4em;\\n}\\n.input[type=checkbox][data-v-ea11de16] {\\r\\n  width: 1em;\\n}\\n.input-mobid[type=number][data-v-ea11de16] {\\r\\n  width: 5em;\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.sticky[data-v-6e4fb2d8] {\\r\\n\\tposition: sticky;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\n}\\n.info[data-v-6e4fb2d8] {\\r\\n\\tbackground: #f5f5f5;\\n}\\n.view[data-v-6e4fb2d8] {\\r\\n\\tdisplay: flex;\\n}\\n.view > div[data-v-6e4fb2d8] {\\r\\n\\tflex: 100;\\n}\\n.imgbox[data-v-6e4fb2d8] {\\r\\n\\tflex: 80;\\n}\\n.table[data-v-6e4fb2d8] {\\r\\n\\tborder-collapse: collapse;\\r\\n\\tborder-spacing: 0;\\n}\\n.input[data-v-6e4fb2d8] {\\r\\n\\twidth: 5em;\\n}\\n.input-xy[data-v-6e4fb2d8] {\\r\\n\\twidth: 8em;\\n}\\n.input-xy > *[data-v-6e4fb2d8] {\\r\\n\\twidth: 4em;\\n}\\n.img[data-v-6e4fb2d8] {\\r\\n\\tmax-width: 25vh;\\r\\n\\tmax-height: 25vh;\\r\\n\\tborder-bottom: 1px solid red;\\r\\n\\tborder-left: 1px solid green;\\n}\\n.text[data-v-6e4fb2d8] {\\r\\n\\tuser-select: text;\\n}\\n.red-text[data-v-6e4fb2d8] {\\r\\n\\tcolor: red;\\n}\\n.tb[data-v-6e4fb2d8], .tb td[data-v-6e4fb2d8] {\\r\\n\\tborder: 1px solid black;\\r\\n\\tborder-collapse: collapse;\\r\\n\\tborder-spacing: 0;\\r\\n\\tuser-select: text;\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&id=89d3864e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&id=89d3864e&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.dialog-group[data-v-89d3864e] {\\n\\tposition: fixed;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n.ui-dialog .ui-equip-box-dialog.ui-dialog-content[data-v-89d3864e] {\\n\\tpadding: 0;\\n\\twidth: 100% !important;\\n}\\n\\n/*li.active {\\n\\tbackground-color: lightcyan;\\n}\\n*/\\n.ui-character-list .active[data-v-89d3864e] {\\n\\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\\n\\tbackground-color: #ffec64;\\n}\\n.ui-character-list[data-v-89d3864e] {\\n\\tlist-style: none;\\n\\tpadding: 0;\\n}\\n.ui-character-list > li[data-v-89d3864e] {\\n\\twidth: 16em;\\n}\\n.ui-character-list table[data-v-89d3864e] {\\n\\twidth: 100%;\\n\\t/*border-collapse: collapse;*/\\n}\\n.ui-character-list td[data-v-89d3864e]:nth-child(1) {\\n\\t/*border: 1px solid black;*/\\n\\twidth: 20%;\\n}\\n.ui-character-list td[data-v-89d3864e]:nth-child(2) {\\n\\t/*border: 1px solid black;*/\\n\\twidth: 50%;\\n}\\n\\n/*\\n.ui-character-list td:first-child {\\n}\\n*/\\n\\n/*.ui-character-list td:last-child {\\n\\tfloat: right;\\n}*/\\n.chara-ls-btn-group[data-v-89d3864e] {\\n\\tdisplay: inline;\\n\\tfloat: right;\\n}\\n.chara-ls-btn[data-v-89d3864e] {\\n    display: inline-flex;\\n\\twidth: 20px;\\n\\theight: 20px;\\n\\tpadding: 0;\\n}\\n.chara-ls-btn > *[data-v-89d3864e] {\\n\\tmargin: auto;\\n\\tpadding: 0;\\n}\\n.loading[data-v-89d3864e] {\\n\\tposition: absolute;\\n\\ttop:0;\\n\\tleft:0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tbackground: rgba(100, 100, 100, 0.5);\\n\\ttext-shadow: 1px 1px 0 white, 0 0 1px white;\\n\\t\\n\\tdisplay:flex;\\n\\talign-items:center;\\n\\tjustify-content:center;\\n}\\n\\n/*\\n\\thttp://www.oxxostudio.tw/articles/201408/sticky-ball.html\\n*/\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}