{"version":3,"sources":["webpack:///./src/game/Animation.js","webpack:///./src/game/Renderer/CharacterRenderer.js","webpack:///./src/init.js","webpack:///./src/game/Renderer/ChatBalloon.js","webpack:///./src/game/Renderer/PanelRenderer.js","webpack:///./src/game/Renderer/NameLabel.js","webpack:///./src/editor/editor.vue?a235","webpack:///./src/components/ui-sortable.vue?b47b","webpack:///src/components/ui-sortable.vue","webpack:///./src/components/ui-sortable.vue","webpack:///./src/components/ui-sortable.vue?0a64","webpack:///./src/components/ui-trigger.vue?25aa","webpack:///src/components/ui-trigger.vue","webpack:///./src/components/ui-trigger.vue","webpack:///./src/components/ui-trigger.vue?94ec","webpack:///./src/components/CorePosition.js","webpack:///./src/components/ui-menu.vue?b0c7","webpack:///src/components/ui-menu.vue","webpack:///./src/components/ui-menu.vue","webpack:///./src/components/ui-menu.vue?a4f1","webpack:///./src/editor/ui-equip-box.vue?48ce","webpack:///./src/components/ui-button-group.vue?a16d","webpack:///src/components/ui-button-group.vue","webpack:///./src/components/ui-button-group.vue","webpack:///./src/components/ui-button-group.vue?5045","webpack:///src/editor/ui-equip-box.vue","webpack:///./src/editor/ui-equip-box.vue?396c","webpack:///./src/editor/ui-equip-box.vue","webpack:///./src/editor/ui-character.vue?12d3","webpack:///src/editor/ui-character.vue","webpack:///./src/editor/ui-character.vue","webpack:///./src/editor/ui-character.vue?b2a6","webpack:///./src/editor/ui-character-svg.vue?f107","webpack:///src/editor/ui-character-svg.vue","webpack:///./src/editor/ui-character-svg.vue","webpack:///./src/editor/ui-character-svg.vue?b140","webpack:///./src/editor/ui-character-attribute.vue?6a03","webpack:///src/editor/ui-character-attribute.vue","webpack:///./src/editor/ui-character-attribute.vue","webpack:///./src/editor/ui-character-attribute.vue?fd11","webpack:///src/editor/ui-mob-list.vue","webpack:///./src/editor/ui-mob-list.vue?22b4","webpack:///./src/editor/ui-mob-list.vue","webpack:///./src/editor/ui-mob-list.vue?f6f3","webpack:///./src/editor/ui-map-editor.vue?f2e6","webpack:///src/editor/ui-map-editor.vue","webpack:///./src/editor/ui-map-editor.vue","webpack:///./src/editor/ui-map-editor.vue?f2a3","webpack:///src/editor/editor.vue","webpack:///./src/editor/editor.vue?9915","webpack:///./src/editor/editor.vue","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2Settings.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2Math.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2Collision.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/Shapes/b2Shape.js","webpack:///./src/game/Sprite.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./public/javascripts/resource.js","webpack:///./src/game/Physics/PPlayer.js","webpack:///./src/game/SceneObject.js","webpack:///./src/game/Physics/Physics.js","webpack:///./src/game/Physics/Filter.js","webpack:///./src/game/Physics/World.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2Distance.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2Fixture.js","webpack:///./src/Common/AttackInfo.js","webpack:///./src/game/Renderer/RenderingOption.js","webpack:///./src/game/Renderer/MobRenderer.js","webpack:///./src/game/Renderer/NpcRenderer.js","webpack:///./src/game/Renderer/ParticleSystem.js","webpack:///./src/game/Map.js","webpack:///./src/ui/Basic/KeySlot.js","webpack:///./src/game/Renderer/Chair.js","webpack:///./src/game/SceneCharacter.js","webpack:///./src/Client/PMovePath.js","webpack:///./src/game/Renderer/LifeRenderer.js","webpack:///./src/game/Renderer/Layer.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2Draw.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2Timer.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2GrowableStack.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2BlockAllocator.js","webpack:///./src/Box2D/build/Box2D/Box2D/Common/b2StackAllocator.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2DynamicTree.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2BroadPhase.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2TimeOfImpact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2CollideCircle.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2CollidePolygon.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/b2CollideEdge.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/Shapes/b2CircleShape.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/Shapes/b2PolygonShape.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/Shapes/b2EdgeShape.js","webpack:///./src/Box2D/build/Box2D/Box2D/Collision/Shapes/b2ChainShape.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2Body.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2Joint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2DistanceJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2AreaJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2FrictionJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2GearJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2MotorJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2MouseJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2PrismaticJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2PulleyJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2RevoluteJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2RopeJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2WeldJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2WheelJoint.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Joints/b2JointFactory.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2Contact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2CircleContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2PolygonContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2EdgeAndCircleContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2EdgeAndPolygonContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2ChainAndCircleContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2ChainAndPolygonContact.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2ContactFactory.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2WorldCallbacks.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2ContactManager.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2TimeStep.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/Contacts/b2ContactSolver.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2Island.js","webpack:///./src/Box2D/build/Box2D/Box2D/Particle/b2Particle.js","webpack:///./src/Box2D/build/Box2D/Box2D/Particle/b2ParticleGroup.js","webpack:///./src/Box2D/build/Box2D/Box2D/Particle/b2StackQueue.js","webpack:///./src/Box2D/build/Box2D/Box2D/Particle/b2VoronoiDiagram.js","webpack:///./src/Box2D/build/Box2D/Box2D/Particle/b2ParticleSystem.js","webpack:///./src/Box2D/build/Box2D/Box2D/Dynamics/b2World.js","webpack:///./src/Box2D/build/Box2D/Box2D/Rope/b2Rope.js","webpack:///./src/Box2D/build/Box2D/Box2D/Box2D.js","webpack:///./src/game/Physics/Foothold.js","webpack:///./src/game/Physics/Ground.js","webpack:///./src/game/Renderer/CharacterActionAnimation.js","webpack:///./src/game/Item.js","webpack:///./src/Common/PlayerData.js","webpack:///./src/util.js","webpack:///./src/game/Renderer/SceneRenderer.js","webpack:///src/components/ui-draggable.vue","webpack:///./src/components/ui-draggable.vue?0d95","webpack:///./src/components/ui-draggable.vue","webpack:///./src/components/ui-draggable.vue?5457","webpack:///./src/game/Physics/PBullet.js","webpack:///./src/game/Skill.js","webpack:///./src/game/Physics/DebugDraw.js","webpack:///./src/game/Physics/LadderRope.js","webpack:///./src/game/Physics/PMob.js","webpack:///./src/game/MobSkill/MobSkillBase.js","webpack:///./src/ui/Basic/KeySlotData.js","webpack:///./src/components/ui-draggable.vue?1fda","webpack:///./src/components/ui-dialog.vue?2a4d","webpack:///./src/components/ui-sortable.vue?e333","webpack:///./src/components/ui-trigger.vue?3fd0","webpack:///./src/components/ui-menu.vue?1e26","webpack:///./src/components/ui-button-group.vue?ea58","webpack:///./src/editor/ui-equip-box.vue?a67f","webpack:///./src/editor/ui-character.vue?6bd2","webpack:///./src/editor/ui-character-svg.vue?360a","webpack:///./src/editor/ui-character-attribute.vue?08dc","webpack:///./src/editor/ui-mob-list.vue?eb58","webpack:///./src/editor/ui-map-editor.vue?6a39","webpack:///./src/editor/editor.vue?9533","webpack:///src/components/ui-dialog.vue","webpack:///./src/components/ui-dialog.vue?9232","webpack:///./src/components/ui-dialog.vue","webpack:///./src/components/ui-dialog.vue?1564","webpack:///./src/game/MobSkill/238.FairyDust.js","webpack:///./src/Common/Packet/index.js","webpack:///./src/game/Renderer/DamageNumber.js","webpack:///./src/game/MobSkill/238.FlowerTrap.js","webpack:///./src/Common/Packet/LoginPacket.js","webpack:///./src/Common/Packet/ChatPacket.js","webpack:///./src/Common/Packet/CharacterPacket.js","webpack:///./src/components/ui-draggable.vue?9385","webpack:///./src/components/ui-draggable.vue?eb3f","webpack:///./src/components/ui-dialog.vue?9072","webpack:///./src/components/ui-dialog.vue?d8b9","webpack:///./src/components/ui-sortable.vue?bc72","webpack:///./src/components/ui-sortable.vue?8988","webpack:///./src/components/ui-trigger.vue?6479","webpack:///./src/components/ui-trigger.vue?705e","webpack:///./src/components/ui-menu.vue?6bca","webpack:///./src/components/ui-menu.vue?501f","webpack:///./src/components/ui-button-group.vue?d78a","webpack:///./src/components/ui-button-group.vue?4ed0","webpack:///./src/editor/ui-equip-box.vue?d030","webpack:///./src/editor/ui-equip-box.vue?b767","webpack:///./src/editor/ui-character.vue?9939","webpack:///./src/editor/ui-character.vue?4118","webpack:///./src/editor/ui-character-svg.vue?3a46","webpack:///./src/editor/ui-character-svg.vue?4231","webpack:///./src/editor/ui-character-attribute.vue?dca3","webpack:///./src/editor/ui-character-attribute.vue?522f","webpack:///./src/editor/ui-mob-list.vue?c582","webpack:///./src/editor/ui-mob-list.vue?2bca","webpack:///./src/editor/ui-map-editor.vue?4b39","webpack:///./src/editor/ui-map-editor.vue?1e30","webpack:///./src/editor/editor.vue?b78d","webpack:///./src/editor/editor.vue?4287"],"names":["window","m_draw_animation_texture_info","IAnimation","[object Object]","raw","url","this","_raw","_url","Object","defineProperties","value","frame","time","delta","textures","is_loop","is_end","reduce","pv","cv","delay","newAnim","constructor","Error","stamp","texture","AnimationBase","super","i","_Sprite_js__WEBPACK_IMPORTED_MODULE_2__","isLoaded","__loadTexture","fc","length","reset","renderer","x","y","angle","flip","drawRotaGraph","Animation","draw","_draw_and_preload","zMap","sMap","FragmentTexture","_Sprite_js__WEBPACK_IMPORTED_MODULE_5__","full_path","origin","__proto__","_math_js__WEBPACK_IMPORTED_MODULE_6__","prototype","map","relative","calcRelative","_calcRelative","filter","_IRenderer_js__WEBPACK_IMPORTED_MODULE_4__","opacity","visible","_slot","_place","classList","z","not_value","console","error","order","TypeError","empty","brow","neck","navel","hand","handMove","_earBelowHead","earBelowHead","_earOverHead","earOverHead","that","base","anchor","minus","plus","chara","body","head","_getRelativeFunction","isHasAnchor","isAnchorNeck","_calcRelative_neck","isAnchorBrow","_calcRelative_brow","isAnchorNavel","slots","_getOrigin","_calcRelative_navel","isAnchorHand","_calcRelative_hand","isAnchorHandMove","lastIndexOf","_calcRelative_handMove_lHand","_calcRelative_handMove","_calcRelativeEmpty","_anchor","fragments","arm","getTexture","tamingMob","adj_pos","globalAlpha","isEmpty","drawGraph2","ctx","toString","BodyFragmentTexture","update","hideBody","HairFragmentTexture","args","graph2","graph3","_render","ItemEffectAnimation","_Animation__WEBPACK_IMPORTED_MODULE_2__","defineProperty","__getAttr","load","attr","defVal","actionExceptRotation","oy","height","ItemEffect","animation","action","fixed","enable","itemEffectList","_list","$get","list","clear","forEach","id","add","parseInt","ex","equipID","Number","has","eff","data","_load","render","front","__construct","join","Set","CharacterFragmentBase","CharacterBodyFragment","getFrameTexture","action_frame","CharacterFaceFragment","emotion_frame","emotion","CharacterTamingMobFragment","_action_frame","_ride_action","EquipImageFilter","equip","hue","j","k","ft","sat","bri","contrast","ICharacterAppearanceBase","CharacterAppearanceBase","effect","_onload","categoryInfo","slot_order","islot","vslot","toJSON","__onload","func","call","cateInfo","use_category","_public_javascripts_resource_js__WEBPACK_IMPORTED_MODULE_0__","isEquipExist","getItem","load_extern_item_data","__load_slot","__load_fragments","then","a","FragmentConstructor","action_list","keys","_raw_textures","_base_path","__load_frame_textures","fragment_textures","place","frag","__load_place_textures","path","FragmentTextureConstructor","slot","info","islots","match","vslots","getIconUrl","getIconRawUrl","_animation_type","CharacterAppearance","d","isSafeInteger","CharacterEquip","CharacterHeadBase","CharacterHair","CharacterFaceBase","face","_info","FragmentType","elfEarFragment","lefEarFragment","highlefEarFragment","ear","lefEar","highlefEar","elfEar","slice","type","actionMap","characterAction","emotionMap","characterEmotion","tm","Math","trunc","CharacterSlots","_ordered_slot","_hair","_hair2","_hairMix2","_hair3","_hairMix3","hair","cap","accessoryFace","accessoryEyes","accessoryEars","coat","longcoat","pants","shoes","glove","cape","shield","weapon","configurable","writable","enumerable","hairColor2","hairMix2","hairColor3","hairMix3","color","getColorHairID","get","undefined","getHairColor","hc2Id","$promise_hair2","__loadColoredHair","hair2","Promise","resolve","item","ori","hc3Id","$promise_hair3","hair3","loadedEquip","alert","_unload","warn","slotName","push","ha","enumerate_equip","CharacterChangeLog","useEquip","unuseEquip","weaponType","CharacterAnimationBase","_$dirty","job","subJob","actani","_CharacterActionAnimation_js__WEBPACK_IMPORTED_MODULE_7__","speed","fixed_speed","_action","_emotion","_emotion_frame","_emotion_time","_emotion_frame_sequence","__require_update","__frag_list","$$changeLog","name","nc","tasks","count","getFrameCount","_isLoaded_or_doload","$promise","all","act","_act","reload","emo","circularSequence","emotion_frame_count","random","next","f","emotion_time","emotion_delay","getDelay","_stamp","getSpeed","isEnd","loop","_update","__update_frag_list","pushGlobalAlpha","__draw_list","popGlobalAlpha","pushMatrix","translate","rotate","m_a","scale","popMatrix","__add_equip_to_frag_list","is_back","fts","startsWith","__add_frag_to_list","ae","_calcBoundBox","left","top","right","bottom","x0","y0","x1","width","y1","min","max","_boundBox","obj","CharacterRenderer","tx","ty","__load_task","result","Init","reverse","use","initAnimation","waitLoaded","_draw","__forceUpdate","_waitFrameTexturesLoaded","category","getJobWeaponCategory","isCashWeapon","task","_use","_unuse","code","es","split","_clear","v","indexOf","ss","cate","h2","h3","hc","c2","m2","c3","m3","hairMix4","apply","isFinite","hairColor","col","faceColor","getFaceColor","getColorFaceID","changeLog","unuse","genCode","_stringify","link","enumerate","log","open","_outlink","__texture_to_base64","frag_list","file_name","svg","clz","DownloadData","filename","bound","size","$swapCanvas","c2w","_ctx2","canvas","c2h","base64","toDataURL","elem","document","createElement","download","href","appendChild","click","removeChild","$src","src","reject","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","onerror","ev","readAsDataURL","response","responseType","send","_init_js__WEBPACK_IMPORTED_MODULE_1__","jQuery","jquery__WEBPACK_IMPORTED_MODULE_0___default","$","vue__WEBPACK_IMPORTED_MODULE_14___default","config","productionTip","vuex__WEBPACK_IMPORTED_MODULE_15__","onwheel","init_tasks","AddInitTask","InitAll","ChatBalloon","style","cache","cb","assign","promise","argb","clr","defCol","str_rgba","padStart","nw","_Sprite_js__WEBPACK_IMPORTED_MODULE_1__","n","ne","w","c","e","sw","s","se","arrow","text","lines","LINE_HEIGHT","fillStyle","font","textAlign","textBaseline","min_width","_tw","line","measureText","hw","tw","th","draw2","_drawPattern","xw","r_adj","arrow_hw","hw_arrow_hw","cy","fillText","$images_ChatBalloon","PanelRenderer_PanelRenderer","Sprite","cx","hwidth","_drawPatterncx","NameLabel_NameLabel","label","_load_center","_load_color","labelStyle","$images_NameLabel","components_ui_sortablevue_type_script_lang_js_","props","methods","getValue","$el","sortable","items","indices","new_list","$emit","mounted","$$el","bind","disableSelection","beforeUpdate","$nextTick","el","remove","append","updated","watch","newValue","ui_sortable","componentNormalizer","_vm","_h","$createElement","_self","_c","_l","index","_t","components_ui_triggervue_type_script_lang_js_","active","ui_trigger","class","components_ui_menuvue_type_script_lang_js_","mixins","position","default","my","at","collision","calcPosition","rel","mypos","pos","replace","setPosition","val","handler","of","deep","show","_cp_onclick","on","off","ui_menu","staticClass","attrs","_e","ui_equip_boxvue_type_template_id_050f0798_staticRenderFns","staticStyle","display","directives","rawName","expression","flex","change","$event","$$selectedVal","Array","target","options","o","selected","_value","selected_category","multiple","og","key","cat","domProps","id_prefix","_v","_s","categoryName","ref","keydown","_k","keyCode","searchNextText","input","composing","search_text","DATA_TAG_VERSION","arg","modifiers","mouseenter","mouseleave","padding","background","border","text-align","checked","isArray","onlyShowSearchResult","_i","$$a","$$c","$$i","concat","displayMode","components_ui_button_groupvue_type_script_lang_js_","buttons","required","String","onclick","splice","btns","_update_element","actives","isInteger","querySelectorAll","querySelector","toggle","ui_button_group","data-id","filter_buttons","face_color_buttons","hair_color_buttons","ItemFilter","cash","gender","reqJob","fn","pageSize","editor_ui_equip_boxvue_type_script_lang_js_","search_next","column_count","loaded_equip_list","loaded_category","equip_list","search_equip_result","filters","face_color","hair_color","hair_color2","hair_mix2","page","face_names","hair_names","computed","DATA_TAG","DATA_VERSION","categoryGroupList","ks","values","resource","group","_g","toLocaleLowerCase","listPath","__count_of_item_in_page","start","__count_of_page","ceil","clip-path","copyImageUrl","img","currentTarget","confirm","copyToClipboard","copyInnerText","innerText","SelectText","copyText","search_equip","async","clearSearch","loadList","old_search_equip_result","rr","si","_is_category_hair","black","b1","$page","calcPage","_is_category_face","regexp","RegExp","test","localeCompare","sort","b","sa","sb","toLowerCase","change_page","location","hash","$refs","input_search","focus","content","scrollTop","__get_category_slot","cateinfo","__get_color","prefix","coloredPath","JSON","parse","asset","concat_external_resource","cash_weapon","wt","va","__t","_equip","fnFilter","__get_filter","count_of_page","fnFilters","every","__get_item","first","__get_item_id","__get_item_name","__get_item_name_ex","_name","__get_item_icon_url","icon","__face_or_hair_img_onerror","sp","ls","clickItem","num","groupCollapsed","groupEnd","event","hoverItem","mouseleaveItem","selected_category_onchange","oldVal","mix","inserted","components","ui-draggable","ui_draggable","ui-button-group","ui_dialog","ui_equip_box","zIndex","mousedown","button","requireOrder","minimum","_m","update:active","scopedSlots","_u","alt","title","font-family","text-shadow","border-spacing","getHairMixColor1CSS","number","step","__r","_n","blur","$forceUpdate","getHairMixColor2CSS","preventDefault","mousemove","contextmenu","rowspan","$foreign","pre","editor_ui_charactervue_type_script_lang_js_","arr","set","newVal","get_ft_src","get_ft_style","visibility","ui_character","editor_ui_character_svgvue_type_script_lang_js_","is_loading","is_processing","fake","vm","setTimeout","download2","innerHTML","cursor","ui_character_svg","version","xmlns","xmlns:xlink","transform","xlink:href","editor_ui_character_attributevue_type_script_lang_js_","isShowDebug","isShowEquipImageFilter","actions","character_action_list","emotions","character_emotion_list","sceneChara","chara_angle","round","degrees","deg","radians","pauseAnimation","isEquip","getEquipCategoryName","ui_character_attribute","vertical-align","border-collapse","$set","enablePhysics","clicl","update_frame_list","disabled","colspan","_q","user-select","mouseover","editor_ui_mob_listvue_type_script_lang_js_","store","vuex_esm","Store","state","spawns","m","mobTime","hide","fh","rx0","rx1","is_clear","onCollapsed","hidePreview","showPreview","smallTip","$root","desc","Map","loadLifeDesc","imageUrl","html","addSpawn","scene_map","lifeMgr","spawnPoints","removeAll","killAll","entities","life","die","$on","ui_mob_list","float","spawn","for","editor_ui_map_editorvue_type_script_lang_js_","aaaa","isShowRX","typeb","isShowRY","isShowCX","isShowCY","get_ObjPath_style","display_aabb","aabb_color","scrollIntoView","center","aabb","$gv","m_viewRect","setCenter","$select","fupdate","ui_map_editor","model","callback","$$v","_texture_base_path","__h","movetype","endsWith","editor_editorvue_type_script_lang_js_","charaList","_last_id","progressValue","progressMaximum","getters","lastId","mutations","increaseProgress","payload","amount","increaseProgressMax","isIdExist","context","sortCharaById","get_n","selectChara","selected_chara","$remote","$physics","CANVAS_SCALE","_addChara","SceneCharacter","__synchronize","dispatch","commit","_createChara","$io","remote_chara","emplace","_parse","_setup_test","addChara","createChara","loadCharacters","localStorage","savedChara","saveCharacters","ls_charaList","setItem","stringify","scr_rat_x","innerWidth","scr_rat_y","innerHeight","dirty","is_show_chara_dl_menu","mapEditorMode","selectedLayer","wnd_debug_style","wnds","menu","visable","character_list","character_attribute","equip_box","spawnpoint","debug_window","gv","mapState","$store","addNewChara","addCloneChara","oninput_sort","app","updateScreen","$hairMixColor2","catch","reason","params","useItem","openCharacterDLMenu","chara_dl_menu","closeCharacterDLMenu","copyCharaCode","_save_as_png","Engine","getElementById","bgm_outer","ui-dialog","ui-sortable","ui-trigger","ui-menu","ui-character","ui-character-svg","ui-character-attribute","ui-equip-box","ui-mob-list","ui-map-editor","editor_component","wnd","m_is_rendering_map","m_display_back","m_display_front","m_display_mapobj","m_display_maptile","m_display_portal","m_display_particle_system","m_display_skeletal_anim","m_display_life","m_display_player","m_display_other_player","m_display_name_label","m_display_foothold","m_display_selected_object","m_display_debug_info","m_display_physics_debug","m_debugDraw","flagName","update:position","resize","reset_content_style","layer","objs","z-index","close","_save_as_svg","__webpack_exports__","b2Assert","condition","__webpack_require__","b2MakeNumberArray","b2_maxFloat","b2_epsilon","b2_epsilon_sq","b2_pi","b2_maxManifoldPoints","b2_maxPolygonVertices","b2_aabbExtension","b2_aabbMultiplier","b2_linearSlop","b2_angularSlop","b2_polygonRadius","b2_maxSubSteps","b2_maxTOIContacts","b2_velocityThreshold","b2_maxLinearCorrection","b2_maxAngularCorrection","b2_maxTranslation","b2_maxTranslationSquared","b2_maxRotation","b2_maxRotationSquared","b2_baumgarte","b2_toiBaumgarte","b2_invalidParticleIndex","b2_maxParticleIndex","b2_particleStride","b2_minParticleWeight","b2_maxParticlePressure","b2_maxParticleForce","b2_maxTriadDistance","b2_maxTriadDistanceSquared","b2_minParticleSystemBufferCapacity","b2_barrierCollisionTime","b2_timeToSleep","b2_linearSleepTolerance","b2_angularSleepTolerance","b2Alloc","b2Free","mem","b2Log","message","b2Version","major","minor","revision","b2_version","b2_changelist","b2ParseInt","b2ParseUInt","abs","b2MakeArray","init","b2MakeNullArray","_b2Settings__WEBPACK_IMPORTED_MODULE_0__","b2_pi_over_180","b2_180_over_pi","b2_two_pi","b2Abs","b2Min","b2Max","b2Clamp","lo","hi","b2Swap","tmp","b2IsValid","b2Sq","b2InvSqrt","sqrt","b2Sqrt","b2Pow","pow","b2DegToRad","b2RadToDeg","b2Cos","cos","b2Sin","sin","b2Acos","acos","b2Asin","asin","b2Atan2","atan2","b2NextPowerOfTwo","b2IsPowerOfTwo","b2Random","b2RandomRange","b2Vec2","other","Length","inv_length","out","b2AbsV","b2MinV","b2MaxV","b2ClampV","v_x","v_y","b2RotateV","b2DotVV","b2CrossVV","b2CrossVS","b2CrossVOne","b2CrossSV","b2CrossOneV","b2AddVV","b2SubVV","b2MulSV","b2MulVS","b2AddVMulSV","b2SubVMulSV","b2AddVCrossSV","b2MidVV","b2ExtVV","b2IsEqualToV","c_x","c_y","b2DistanceVV","b2DistanceSquaredVV","b2NegV","ZERO","UNITX","UNITY","s_t0","s_t1","s_t2","s_t3","b2Vec2_zero","b2Vec3","b2DotV3V3","b2CrossV3V3","a_x","a_y","a_z","b_x","b_y","b_z","b2Mat22","ey","Copy","c1","SetVV","r1c1","r1c2","r2c1","r2c2","SetSSSS","SetAngle","SetZero","det","a11","a12","a21","a22","SelfAbs","GetInverse","M","SelfAdd","SelfSub","M_ex","M_ey","b2AbsM","b2MulMV","b2MulTMV","A","B","A_ex","A_ey","B_ex","B_ey","b2AddMM","A_ex_x","A_ex_y","A_ey_x","A_ey_y","B_ex_x","B_ex_y","B_ey_x","B_ey_y","b2MulMM","b2MulTMM","IDENTITY","b2Mat33","ez","SetXYZ","a31","a32","a13","a23","a33","v_z","b2MulM33V3","b2MulM33XYZ","b2MulM33V2","b2MulM33XY","b2Rot","q","r","b2MulRR","b2MulTRR","b2MulRV","b2MulTRV","q_c","q_s","r_c","r_s","b2Transform","p","SetIdentity","rotation","GetAngle","T","T_q_c","T_q_s","b2MulXV","p_x","p_y","b2MulTXV","b2MulXX","b2MulTXX","b2Sweep","localCenter","c0","a0","alpha0","xf","beta","one_minus_beta","alpha","floor","b2ContactFeatureType","b2ManifoldType","b2PointState","_b2Distance__WEBPACK_IMPORTED_MODULE_2__","b2ContactFeature","_key","_key_invalid","_indexA","_indexB","_typeA","_typeB","indexA","indexB","typeA","typeB","b2ContactID","cf","b2ManifoldPoint","localPoint","_Common_b2Math__WEBPACK_IMPORTED_MODULE_1__","normalImpulse","tangentImpulse","_Common_b2Settings__WEBPACK_IMPORTED_MODULE_0__","b2Manifold","points","MakeArray","localNormal","e_unknown","pointCount","Reset","b2WorldManifold","normal","separations","manifold","xfA","radiusA","xfB","radiusB","e_circles","pointA","MulXV","Initialize_s_pointA","pointB","Initialize_s_pointB","DistanceSquaredVV","SubVV","SelfNormalize","cA","AddVMulSV","Initialize_s_cA","cB","SubVMulSV","Initialize_s_cB","MidVV","DotVV","e_faceA","MulRV","planePoint","Initialize_s_planePoint","clipPoint","Initialize_s_clipPoint","e_faceB","SelfNeg","b2GetPointStates","state1","state2","manifold1","manifold2","b2_removeState","jct","b2_persistState","b2_nullState","b2_addState","b2ClipVertex","b2RayCastInput","p1","p2","maxFraction","b2RayCastOutput","fraction","b2AABB","lowerBound","upperBound","m_cache_center","m_cache_extent","d_x","d_y","valid","IsValid","ExtVV","aabb1","aabb2","Combine2","output","tmin","tmax","absD_x","absD_y","inv_d","t1","t2","t3","d1_x","d1_y","d2_x","d2_y","b2TestOverlapAABB","b2ClipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","vIn0","vIn1","distance0","distance1","interp","e_vertex","e_face","b2TestOverlapShape_s_input","b2TestOverlapShape_s_simplexCache","b2TestOverlapShape_s_output","b2TestOverlapShape","shapeA","shapeB","proxyA","SetShape","proxyB","transformA","transformB","useRadii","simplexCache","distance","b2ShapeType","_Common_b2Math__WEBPACK_IMPORTED_MODULE_0__","b2MassData","mass","I","b2Shape","radius","m_type","m_radius","SpriteBase","_Engine_js__WEBPACK_IMPORTED_MODULE_2__","__w","isTexture","hasOwnProperty","__isEmpty","_order","defaultValue","propertyName","converter","_engine","drawGraph","_get","_math_js__WEBPACK_IMPORTED_MODULE_0__","h","save","rect","clip","restore","sh","sx","_drawImage","sy","drawPattern","drawHorizontalPattern","drawVerticalPattern","_drawHorizontalPattern","_drawVerticalPattern","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","exports","$failed_urls","$archive","ItemCategoryInfo","imgDir","stringPath","dataDir","stringDir","iconPath","iconRawPath","itemId","results","__v","iconRaw","_id","$ItemCategoryInfo","Equip","Consume","Etc","Install","Cash","typeName","0","1","2","3","4","typeId","0000","0001","0002","0003","0004","0100","0101","0102","0103","0104","0105","0106","0107","0108","0109","0110","0121","0122","0123","0124","0125","0126","0127","0128","0130","0131","0132","0133","0134","013526","013530","0136","0137","0138","0140","0141","0142","0143","0144","0145","0146","0147","0148","0149","0150","0151","0152","0153","0154","0155","0156","0157","0158","0170","019","0301","_categoryList","info_map","ResourceManager","dp","equip_map","$setValue","timeout","status","responseText","ontimeout","onabort","root_path","$ROOT_PATH","archive","failed_urls","ps","lastIndex","origin_value","$getValue","$ResourceManager","symbol_isPack","Symbol","url_startsWith_protocol","_setValueByPath","is_pack","_getValueFromArchiveByPath","_path","_getDataPathByUrl","$getValueAsync","pack","packUrl","jsonText","packSync","dataUrl","dataSync","listUrl","listSync","soundMp3Url","soundWavUrl","assetUrl","ItemAttrNormalize","g","regexp_getHairStyleID","regexp_getFaceStyleID","regexp_getHairColor","regexp_getFaceColor","CharacterRenderConfig","id_1","id_2","ItemTypeInfo","Hat","Cape","Top","Overall","Glove","Bottom","Shield","Shoes","Eye Decoration","Earrings","Face Accessory","Face","Hair","external","load_external_resource","_external_raw","typeInfo","overallCategory","subCategory","it","isCash","","external_resource_promise","_concat_external_resource_p","origin_data","_concat_external_resource","id_map","ori_item","_desc","trigger_update_external_equip_list","default_","frameBooks","frames","effects","_frags","frags","_frag","image","originOrZero","mapOffset","metaInfo","DEGTORAD","PI","b2Vec2_temp","_Physics_js__WEBPACK_IMPORTED_MODULE_0__","chara_profile","density","foot_width","foot_j_width","JUMP_FORCE","MOVEMENT_VELOCITY","$LADDER_SPEED","PLAYER_USE_WHEEL_WALKER","FOOT_FRICTION","MOVEMENT_POWER","MOVEMENT_STOP_POWER","PORTAL_COOLDOWN","PPlayerState","_begin_jump","jump","jump_count","_drop","walk","prone","dropDown","_fly","brake","ladder","ladder_move_dir","invincible","freeze","invokeSkill","portal_cooldown","knockback","outOfControl","FootContact","foothold","priority","PCharacterBase","disable","setMovementSpeed","foot_walk","walker","$foothold","prev_$fh","leave_$fh","_foothold","_foot_at","_foothold_priority","_foot_contact_list","portal","_walker_omega","jump_force","clearForce","by","fy","SetPositionXY","ConstantVelocity","GetPosition","mapRenderer","mapController","controller","map_id","getMap","exeScript","reg","tn","cmd","fromTn","toPortal","portalMgr","portals","find","pn","_gotoPortal","tpid","tp","doAfterStep","unload","m_world","onceUnlock","_useLadder","contactLadder","flag","world","$ladder_pj","ladderBody","GetAngularVelocity","SetFixedRotation","SetAwake","SetLinearVelocity2","b2_kinematicBody","SetMotorSpeed","calcHeight","getPosition","pjd","bodyA","bodyB","localAxisA","lowerTranslation","upperTranslation","enableLimit","maxMotorForce","_getMass","pj","CreateJoint","b2_dynamicBody","DestroyJoint","$sticky_pj","_isCanMove","up","down","EnableMotor","useLadder","ApplyLinearImpulseToCenter2","_usePortal","GetLocalPoint","wheel_sp","velocity","GetLinearVelocity","actionDropdown","SetMaxMotorTorque","remove_sticky","vx","止滑","sticky","_isCanJump","actionJump","isDrop","increment_percent","isNaN","_setWalkerOmegaFromVelocity","movement_velocity","GetWorld","GetGravity","GetMass","SetGravityScale","_body_category","first_pos","jmp_body_pos_y","bdef","fdef","shape","bullet","userData","CreateBody","$type","_Filter_js__WEBPACK_IMPORTED_MODULE_7__","SetAsBox","friction","restitution","fixture","CreateFixture","circle","m_p","_set_foot_listener","jd","Initialize","enableMotor","maxMotorTorque","lowerAngle","upperAngle","referenceAngle","frequencyHz","dampingRatio","addStep","Step","addAfterStep","AfterStep","setjumpForce","DestroyBody","fa","fb","GetBody","GetUserData","contact","_isFromSelfContact","SetEnabled","foot_fixture","beginContact","__beginContact_walker","endContact","__endContact_walker","preSolve","__preSolve_walker","_ignoreSelfContact","targetBody","m_body","_beginContactPortal","m_userData","_endContactPortal","oldManifold","script","foot_at","is_wall","chain","prev","y2","__priority_foothold_contact","Clone","foot_contact","mapBound_body","_endContactFootholdList","_$fallEdge","force","ApplyForceToCenter","upper","GetUpperLimit","lower","GetLowerLimit","translation","GetJointTranslation","m_awakeFlag","pop","PCharacter","arguments","moveX","moveY","move","ApplyLinearImpulseToCenter","kbTime","fx","forceMove","md","ground","bodies","maxForce","moveElem","elapsed","ConstantVelocityWorldCenter2","vy","ALPHA","ONE_MINUS_ALPHA","dx","dy","FRAME_ELAPSED","oldVel","pState","setGravityScale","sign","PPlayer","_create","SCREEN_PRINTLN","toFixed","m_linearVelocity","input_keyDown","mouse_dl","px","mouse_x","py","mouse_y","SetLinearVelocity","mouse_dm","_$renderer","PRemoteCharacter","_create_anchor","moveTo","m_targetA","SceneObject","$objectid","$layer","damage","_Renderer_NameLabel_js__WEBPACK_IMPORTED_MODULE_2__","crr","__drawName_default","bgColor","_left","_top","_right","_bottom","beginPath","lineTo","arcTo","fill","box2d","FilterHelper","b2Body","b2Fixture","b2Contact","b2ContactImpulse","b2ContactListener","$box2d","_on_step","_on_after_step","ApplyForceToCenter2","Acceleration","desiredVel","sourceVel","point","GetWorldCenter","velChange","ix","iy","impulse","ApplyLinearImpulse","AccelerationX","desiredVelX","velChangeX","AccelerationY","desiredVelY","velChangeY","ConstantVelocity2","pointX","pointY","ConstantVelocityX","ConstantVelocityY","postSolve","getOwnerID","host","owner","module","FixtureContactListener","filter_preset","next_category","_Box2D_build_Box2D_Box2D_Dynamics_b2Fixture__WEBPACK_IMPORTED_MODULE_0__","preset","maskBits","categoryBits","debugName","debugCategory","groupIndex","filter_table","filter_list","registerCategory","contactFilter","_Box2D_build_Box2D_Box2D_Box2D__WEBPACK_IMPORTED_MODULE_1__","Fixture","filterName","GetFilterData","GetType","ShouldCollideConnected","ShouldCollide","$gravityAcc","$positionIterations","$velocityIterations","$particleIterations","$particleRadius","GRAVITY","ContactListener","m_fixtureA","m_fixtureB","childIndexA","m_indexA","childIndexB","m_indexB","World","SetDebugDraw","SetContactListener","_Ground_js__WEBPACK_IMPORTED_MODULE_2__","ladderRope","stop","$_mouseJoint","_onceAfterStep","_destryBodyList","_DestroyBody","m_locked","draw_foothold_path_count","particleType","b2_elasticParticle","particleSystemDef","m_particleSystem","CreateParticleSystem","SetRadius","SetDamping","pd","flags","CreateParticleGroup","b2_colorMixingParticle","ColorParticleGroup","$vbo_ps","map_raw_data","_LadderRope_js__WEBPACK_IMPORTED_MODULE_3__","IsLocked","mapMob","mob","_PMob_js__WEBPACK_IMPORTED_MODULE_5__","_destroy","mapNpc","compute_rectangle","_Filter_js__WEBPACK_IMPORTED_MODULE_8__","b2_staticBody","MAP_PORTAL_FULL_SIZE","isSensor","bb","m_vertex1","m_vertex2","player","sceneObject","_PPlayer_js__WEBPACK_IMPORTED_MODULE_4__","AddVV","hit_fixture","QueryAABB","TestPoint","SetTarget","$_mouseDown","mouse_ul","$_mouseUp","mouse_move","$_mouseMove","$_onMouseEvent","GetBodyList","m_next","MAX_FPS","debugDraw","m_ctx","canvasScale","lineWidth","viewZoom","DrawDebugData","fillRect","m_display_particleSystem","gl","GetParticleCount","buf","GetPositionBuffer","vertices","Float32Array","bufferData","ARRAY_BUFFER","STATIC_DRAW","vbo","createBuffer","bindBuffer","m_groupList","particleCount","instanceOffset","GetBufferIndex","drawArrays","POINTS","m_positionBuffer","m_colorBuffer","m_weightBuffer","r2","$particle_grd","grd","createRadialGradient","addColorStop","m_firstIndex","m_lastIndex","setTransform","$ladderRope","$drawDebugInfo","$drawDebugInfo2","strokeStyle","footholds","_drawLine","lr","calcWidth","b2DistanceProxy","m_buffer","m_vertices","m_count","SetupDistanceProxy","bestIndex","bestValue","b2SimplexCache","metric","b2DistanceInput","b2DistanceOutput","iterations","b2_gjkCalls","b2_gjkIters","b2_gjkMaxIters","b2_gjk_reset","b2SimplexVertex","wA","wB","b2Simplex","m_v1","m_v2","m_v3","wALocal","GetVertex","wBLocal","metric1","metric2","GetMetric","NegV","e12","CrossVV","CrossOneV","CrossVOne","pA","pB","DistanceVV","w1","w2","s_e12","d12_2","d12_1","inv_d12","w3","w1e12","e13","s_e13","w1e13","d13_1","d13_2","e23","s_e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","b2Distance_s_simplex","b2Distance_s_saveA","b2Distance_s_saveB","b2Distance_s_p","b2Distance_s_d","b2Distance_s_normal","b2Distance_s_supportA","b2Distance_s_supportB","b2Distance","simplex","ReadCache","saveA","saveB","saveCount","distanceSqr1","distanceSqr2","iter","Solve2","Solve3","GetClosestPoint","LengthSquared","GetSearchDirection","vertex","GetSupport","MulTRV","duplicate","GetWitnessPoints","WriteCache","rA","rB","Normalize","SelfMulAdd","SelfMulSub","_Collision_Shapes_b2Shape__WEBPACK_IMPORTED_MODULE_3__","b2Filter","b2FixtureDef","b2FixtureProxy","_Collision_b2Collision__WEBPACK_IMPORTED_MODULE_2__","childIndex","treeNode","def","m_density","m_friction","m_restitution","m_proxies","m_proxyCount","m_filter","m_isSensor","m_shape","sensor","Refilter","edge","GetContactList","fixtureA","GetFixtureA","fixtureB","GetFixtureB","FlagForFiltering","broadPhase","m_contactManager","m_broadPhase","TouchProxy","GetTransform","ComputeDistance","RayCast","massData","ComputeMass","bodyIndex","Dump","GetChildCount","proxy","ComputeAABB","CreateProxy","DestroyProxy","transform1","transform2","Synchronize_s_aabb1","Synchronize_s_aabb2","displacement","Synchronize_s_displacement","MoveProxy","AttackInfo","allAttack","skill","symbol_targetObject","AttackPair","allDamage","targetObject","objectid","setTargetObject","realDamage","critical","DamagePair","RenderingOption","option","clone","MobAnimationSpeed","$mob_name","MobRenderer_MobRenderer","LifeRenderer","__info","noFlip","level","maxHP","maxMP","PADamage","PDRate","MADamage","MDRate","acc","eva","pushed","fs","summonType","elemAttr","mobType","firstAttack","hideHP","boss","hpTagColor","hpTagBgcolor","showNotRemoteDam","defaultHP","defaultMP","ignoreMoveImpact","_get_desc_base_path","flySpeed","_animations","NpcAnimationSpeed","NpcRenderer_NpcRenderer","rand_r","range","rand_color2i","colorVar","IRenderer","fromInt24","ParticleSystem_Particle","_initParam","math","startScale","lifeMax","lifeVar","angleVar","startColor","startColorVar","color_d","endColor","endColorVar","selfSub","sizeX","sizeY","startSize","startSizeVar","endScale","endSize","endSizeVar","scale_d","startX","posX","posVarX","startY","posY","posVarY","emitterMode","emitterType","gravity","speedVar","dir","radialAccel","radialAccelVar","tangentialAccel","tangentialAccelVar","rotationIsDir","dt","radial","tangential","normalize","mul","newy","_radial","_dir","mx","toHSV","drawColoredGraph2","ParticleSystem_ParticleGroupData","duration","totalParticle","ParticleSystem_ParticleGroup","particles","Infinity","pg","totalTime","particle","t","particle_name","particleName","_particle_path","_experimental_particle","Image","helper","imagedata","imageToImagedata","imagedataToDataURL","whiteToRed","encodeURIComponent","naturalWidth","naturalHeight","URL","viewRect","blendFuncDst","blendFuncSrc","globalCompositeOperation","hh","collide4f2","enable_skeletal_anim","map_sprite","Back","Obj","Tile","map_load_package","$map_sprite","allQuest","Map_MapTexture","texture0","raw_default","a1","movew","moveh","movep","mover","ratio","loadIdentity","_drawRotaGraph","Map_MapObjectBase","quest","qid","_load_object_info","_load_back_info","_load_tile_info","zM","rx","ry","backTags","flow","_load_texture","_texture_raw","__calc_aabb","compute_max_rectangle","hr","m_editor_mode","$editor_mouse","next_texture","mcx","mcy","m_selected_object","m_hover_object","$unselect","index_of_texture","collide","setLineDash","lineDashOffset","stroke","__draw_texture","horizontal","vertical","x2","yy","xx","__draw","mrx","mry","MapObject","_update_and_preload","oS","l0","l1","l2","Map_MapParticle","groups","evaluate","mapRawData","sceneMap","particleList","particleRaw","mpp","Map_MapObjectSkeletalAnim","ssanim","_fname","_folder","SSAnim","spineRandomStart","anim_length","setAnimTime","MapTile","tS","u","no","MapPortal","states","skin","_loadTexture","__display_mode","_portals_raw","_type_map","pt","editor","game","_getTexturePath","_script","MapPortalManager","createPortal","MapBackBase","MapBack","bS","MapBackAnimation","MapBackSkeletalAnim","ob","LifeSpawnPoint","spawnId","Map_MapLifeEntity","lifeSpawnPoint","lifeId","is_dead","Map_MapMob","Map_MapNpc","loadDescription","skills","hp","createMob","_loadAction","_load_skill_by_mob_id","_load_skill_info","attack","skill_map","firstSkillInfo","skill_list","_applyState","m_display_mob","skill1","sname","anim","skill_info","$anim","mob_id","FlowerTrap","FairyDust","5","invoke","6","7","8","9","10","skill_map_action","lev","skill_id","unknow skill","decreaseLife","destroyMob","m_display_npc","destroyNpc","MapLifeEntityCapacityRate","MapLifeManager","entity","increaseLife","destroyLife","Create","npcID","is_dummy","mobID","whereLayer","Map_SceneMap","frontground","layeredObject","layeredTile","namedObject","mapBound","$load_tasks","$loading_status","$_mapString","$mapString","$region","_map_names","$MapNames","_Init","loading_task_map","back","ani","objIsEmpty","__constructLayeredObject_obj","tiles","__constructLayeredObject_tile","tile","ti","spineAni","objtb","__compute_top_bottom_border","tiletb","reCalc","VRLeft","VRTop","VRRight","VRBottom","tb","_compute_top_bottom_border","_compute_left_right_border","_window_title","mapName","streetName","_get_map_data_url","url2","_loadBgm","_constructBack","_constructLayeredObject","mapobj","__constructMiniMap","construct","_compute_map_bound","viewCenter","_createMapBound","spawnMob","bgmPath","bgm","elem_bgm","_getBgmPath","_bgm_path","autoplay","play","pause","miniMap","centerX","centerY","mouse_dr","player_spawns","isActivated","layerIndex","KeySlot","KeySlot_ActionSlot","KeySlotData","KeySlot_SkillSlot","Chair_ChairEffect","_offset","_host","_player","chair","sceneRenderer","layers","Chair_Chair","bodyRelMove","_addToScene","$addItem_repeatEquip","SceneCharacter_ChatController","$outputText","_isDisplay","isDisplay","$displayDuration","displayDuration","ChatBalloon_default_style","$colon","colon","boundBox","$maxLength","ChatBalloon_display_duration","keyboard_map","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","SceneCharacter_BaseSceneCharacter","stat","PlayerData","activeSkills","chatCtrl","$inPacket","$outPacket","_move","shift","isAwake","equipId","from","to","chairId","addToScene","SceneRenderer","sitAction","sitEmotion","skillId","Skill","delete","_handleAttack","attackInfo","_player_control","getLayer","__drawName","NameLabel_default_style","player_state","fly","isLadder","_is_end","getTargetObject","damVar","getCurrentMaxBaseDamage","getCurrentMinBaseDamage","critRate","critDamage","DamageNumber","addDamagePair","m_damageSkin","SceneCharacter_SceneCharacter","scene","$createPlayer","Item","onJobChange","_onJobChange","newJob","$recMove","key_map","ikey","can_use_skill","keyName","keySlot","keyDown","input_keyUp","ck","noSit","itemSlot","keyUp","sk","control","incDEXr","timeLimited","Date","_addItem","err","itemData","slotType","getSlot","_removeItem","emit","update_renderer","findItem","_consume","isChair","sitChair","addItem","$style","enter","socket","charaMove","Packet","capture","SceneCharacter_SceneRemoteCharacter","_remote_control","BaseMoveElem","CharacterMoveElem","stand","_construct_actions","getDefaultAction","$index","eval","_Animation_js__WEBPACK_IMPORTED_MODULE_1__","engine","LayerObject","Layer","objects","rendering_option","_RenderingOption__WEBPACK_IMPORTED_MODULE_2__","destroy","opt","b2DrawFlags","b2Color","gg","aa","a2","a3","SetRGBA","mixColor","strength","MixColors","colorA","colorB","dr","dg","db","da","MakeStyleString","RED","GREEN","BLUE","b2Draw","m_drawFlags","vertexCount","axis","centers","colors","b2Timer","m_start","now","b2Counter","m_min_count","m_max_count","b2GrowableStack","N","m_stack","element","b2BlockAllocator","b2StackAllocator","verify","b2DynamicTree_b2TreeNode","m_id","b2Collision","child1","child2","b2DynamicTree_b2DynamicTree","m_root","m_freeList","m_path","m_insertionCount","stack","s_stack","Push","GetCount","node","Pop","TestOverlap","IsLeaf","b2Math","s_r","s_v","abs_v","AbsV","s_abs_v","segmentAABB","s_segmentAABB","t_x","t_y","GetCenter","GetExtents","subInput","s_subInput","s_node_id","AllocateNode","r_x","b2Settings","r_y","InsertLeaf","RemoveLeaf","FreeNode","Contains","leaf","leafAABB","area","GetPerimeter","combinedAABB","s_combinedAABB","combinedArea","cost","inheritanceCost","cost1","s_aabb","oldArea","newArea","cost2","sibling","oldParent","newParent","Balance","grandParent","C","balance","F","G","D","E","GetAreaNode","rootArea","height1","ComputeHeightNode","height2","ValidateStructure","ValidateMetrics","freeIndex","maxBalance","GetMaxBalanceNode","Validate","newOrigin","ShiftOriginNode","b2Pair","b2BroadPhase_b2BroadPhase","m_tree","m_moveCount","m_moveBuffer","m_pairCount","m_pairBuffer","BufferMove","UnBufferMove","GetFatAABB","aabbA","aabbB","contactManager","queryProxy","QueryCallback","pair","fatAABB","Query","b2PairLessThan","primaryPair","userDataA","userDataB","AddPair","GetHeight","GetMaxBalance","GetAreaRatio","ShiftOrigin","pair1","pair2","b2_toiTime","b2_toiMaxTime","b2_toiCalls","b2_toiIters","b2_toiMaxIters","b2_toiRootIters","b2_toiMaxRootIters","b2_toi_reset","b2TimeOfImpact_s_xfA","b2TimeOfImpact_s_xfB","b2TimeOfImpact_s_pointA","b2TimeOfImpact_s_pointB","b2TimeOfImpact_s_normal","b2TimeOfImpact_s_axisA","b2TimeOfImpact_s_axisB","b2TimeOfImpact_b2TOIInput","sweepA","sweepB","tMax","b2TOIOutputState","b2SeparationFunctionType","b2TOIOutput","b2TimeOfImpact_b2SeparationFunction","m_sweepA","m_sweepB","m_localPoint","m_axis","m_proxyA","m_proxyB","e_points","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","axisA","axisB","b2TimeOfImpact_s_timer","b2TimeOfImpact_s_cache","b2TimeOfImpact_s_distanceInput","b2TimeOfImpact_s_distanceOutput","b2TimeOfImpact_s_fcn","b2TimeOfImpact_s_indexA","b2TimeOfImpact_s_indexB","b2TimeOfImpact_s_sweepA","b2TimeOfImpact_s_sweepB","b2TimeOfImpact","timer","totalRadius","tolerance","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","done","pushBackIter","s2","FindMinSeparation","e_separated","s1","Evaluate","e_failed","rootIterCount","GetMilliseconds","b2CollideCircles_s_pA","b2CollideCircles_s_pB","b2CollideCircles","circleA","circleB","distSqr","b2CollidePolygonAndCircle_s_c","b2CollidePolygonAndCircle_s_cLocal","b2CollidePolygonAndCircle_s_faceCenter","b2CollidePolygonAndCircle","polygonA","cLocal","MulTXV","normalIndex","separation","normals","m_normals","vertIndex1","vertIndex2","v1","v2","u1","u2","faceCenter","b2EdgeSeparation_s_normal1World","b2EdgeSeparation_s_normal1","b2EdgeSeparation_s_v1","b2EdgeSeparation_s_v2","b2EdgeSeparation","poly1","xf1","edge1","poly2","xf2","vertices1","normals1","count2","vertices2","normal1World","normal1","minDot","dot","b2FindMaxSeparation_s_d","b2FindMaxSeparation_s_dLocal1","b2FindMaxSeparation","edgeIndex","count1","m_centroid","dLocal1","maxDot","prevEdge","sPrev","nextEdge","sNext","bestEdge","bestSeparation","increment","b2FindIncidentEdge_s_normal1","b2CollidePolygons_s_incidentEdge","b2CollidePolygons_s_clipPoints1","b2CollidePolygons_s_clipPoints2","b2CollidePolygons_s_edgeA","b2CollidePolygons_s_edgeB","b2CollidePolygons_s_localTangent","b2CollidePolygons_s_localNormal","b2CollidePolygons_s_planePoint","b2CollidePolygons_s_normal","b2CollidePolygons_s_tangent","b2CollidePolygons_s_ntangent","b2CollidePolygons_s_v11","b2CollidePolygons_s_v12","b2CollidePolygons","polyA","polyB","edgeA","separationA","edgeB","separationB","incidentEdge","normals2","i1","i2","cf0","cf1","b2FindIncidentEdge","iv1","iv2","local_v11","local_v12","localTangent","tangent","v11","v12","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","np","ntangent","cp","b2CollideEdgeAndCircle_s_Q","b2CollideEdgeAndCircle_s_e","b2CollideEdgeAndCircle_s_d","b2CollideEdgeAndCircle_s_e1","b2CollideEdgeAndCircle_s_e2","b2CollideEdgeAndCircle_s_P","b2CollideEdgeAndCircle_s_n","b2CollideEdgeAndCircle_s_id","b2CollideEdgeAndCircle","Q","P","m_hasVertex0","A1","m_vertex0","B1","e1","m_hasVertex3","B2","m_vertex3","A2","e2","den","b2EPAxis","b2CollideEdge_b2TempPolygon","b2CollideEdge_b2EPCollider","m_polygonB","m_xf","m_centroidB","m_v0","m_normal0","m_normal1","m_normal2","m_normal","m_type1","m_type2","m_lowerLimit","m_upperLimit","m_front","polygonB","MulTXX","hasVertex0","hasVertex3","s_edge1","offset1","offset0","offset2","convex1","convex2","edge0","s_edge0","edge2","s_edge2","edgeAxis","ComputeEdgeSeparation","s_edgeAxis","polygonAxis","ComputePolygonSeparation","s_polygonAxis","primaryAxis","ie","s_ie","rf","s_rf","ie0","ie1","sideNormal1","sideNormal2","s_clipPoints1","s_clipPoints2","perp","s_perp","s_n","b2CollideEdgeAndPolygon_s_collider","b2CollideEdgeAndPolygon","Collide","b2CircleShape_b2CircleShape","e_circleShape","TestPoint_s_center","TestPoint_s_d","ComputeDistance_s_center","RayCast_s_position","RayCast_s_s","RayCast_s_r","sigma","ComputeAABB_s_p","radius_sq","l","com","b2PolygonShape_b2PolygonShape","e_polygonShape","Set_s_ps","tempCount","unique","i0","hull","Set_s_hull","ih","Set_s_r","Set_s_v","vertexi1","vertexi2","ComputeCentroid","hx","hy","SetPosition","SetRotationAngle","pLocal","TestPoint_s_pLocal","ComputeDistance_s_pLocal","maxDistance","normalForMaxDistance","ComputeDistance_s_normalForMaxDistance","minDistance","ComputeDistance_s_minDistance","minDistance2","ComputeDistance_s_distance","distance2","RayCast_s_p1","RayCast_s_p2","RayCast_s_d","numerator","denominator","ComputeAABB_s_v","MinV","MaxV","SelfSubXY","SelfAddXY","ComputeMass_s_center","ComputeMass_s_s","SelfMul","ComputeMass_s_e1","ComputeMass_s_e2","triangleArea","MulSV","ex1","ey1","ex2","ey2","Validate_s_e","Validate_s_v","normalL","ComputeSubmergedArea_s_normalL","offsetL","depths","ComputeSubmergedArea_s_depths","diveCount","intoIndex","outoIndex","lastSubmerged","isSubmerged","ComputeSubmergedArea_s_md","intoIndex2","outoIndex2","intoLamdda","outoLamdda","intoVec","ComputeSubmergedArea_s_intoVec","outoVec","ComputeSubmergedArea_s_outoVec","ComputeSubmergedArea_s_center","p3","vs","pRef","ComputeCentroid_s_pRef","ComputeCentroid_s_e1","ComputeCentroid_s_e2","b2EdgeShape_b2EdgeShape","e_edgeShape","ComputeDistance_s_v1","ComputeDistance_s_v2","ComputeDistance_s_d","ComputeDistance_s_s","ds","RayCast_s_e","RayCast_s_q","ComputeAABB_s_v1","ComputeAABB_s_v2","b2ChainShape_b2ChainShape","e_chainShape","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","prevVertex","nextVertex","CreateChain","ComputeDistance_s_edgeShape","GetChildEdge","edgeShape","RayCast_s_edgeShape","b2BodyType","b2JointType","b2LimitState","b2Body_b2BodyDef","linearVelocity","angularVelocity","linearDamping","angularDamping","allowSleep","awake","fixedRotation","gravityScale","b2Body_b2Body","bd","m_islandFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_toiFlag","m_islandIndex","m_xf0","m_sweep","m_angularVelocity","m_force","m_torque","m_prev","m_fixtureList","m_fixtureCount","m_jointList","m_contactList","m_mass","m_invMass","m_I","m_invI","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_controllerList","m_controllerCount","CreateFixtureDef","CreateFixtureShapeDensity","CreateProxies","ResetMassData","m_newFixture","CreateFixtureShapeDensity_s_def","ppF","Destroy","DestroyProxies","SetTransformXY","Synchronize","FindNewContacts","SetTransformVec","wake","torque","oldCenter","SetMassData_s_oldCenter","AddVCrossSV","ResetMassData_s_localCenter","GetMassData","ResetMassData_s_massData","ResetMassData_s_oldCenter","localVector","worldPoint","worldVector","GetLinearVelocityFromWorldPoint","GetWorldPoint","SynchronizeFixtures","ce","ce0","proxyCount","IsActive","type_str","SynchronizeFixtures_s_xf1","jn","joint","m_collideConnected","Advance","b2Joint_b2Jacobian","linear","angularA","angularB","b2JointEdge","b2JointDef","e_unknownJoint","collideConnected","b2Joint","m_index","m_edgeA","m_edgeB","m_bodyA","m_bodyB","inv_dt","b2DistanceJoint_b2DistanceJointDef","e_distanceJoint","localAnchorA","localAnchorB","b2","anchor1","anchor2","b2DistanceJoint_b2DistanceJoint","m_frequencyHz","m_dampingRatio","m_bias","m_localAnchorA","m_localAnchorB","m_gamma","m_impulse","m_length","m_u","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_qA","m_qB","m_lalcA","m_lalcB","hz","positions","aA","vA","velocities","aB","vB","qA","qB","crAu","crBu","invMass","omega","warmStarting","dtRatio","InitVelocityConstraints_s_P","vpA","SolveVelocityConstraints_s_vpA","vpB","SolveVelocityConstraints_s_vpB","Cdot","SolveVelocityConstraints_s_P","SolvePositionConstraints_s_P","b2AreaJoint_b2AreaJointDef","e_areaJoint","b2AreaJoint_b2AreaJoint","m_bodies","m_targetLengths","m_targetArea","m_joints","m_deltas","m_delta","djd","body_c","next_c","SetFrequency","SetDampingRatio","prev_c","body_v","dotMassSum","crossMassSum","lambda","perimeter","dist","toExtrude","next_i","norm_sq","b2FrictionJoint_b2FrictionJointDef","e_frictionJoint","maxTorque","bA","bB","b2FrictionJoint_b2FrictionJoint","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","m_K","mA","mB","iA","iB","K","oldImpulse","maxImpulse","Cdot_v2","SolveVelocityConstraints_s_Cdot_v2","impulseV","MulMV","SolveVelocityConstraints_s_impulseV","oldImpulseV","SolveVelocityConstraints_s_oldImpulseV","b2GearJoint_b2GearJointDef","e_gearJoint","joint1","joint2","b2GearJoint_b2GearJoint","coordinateA","coordinateB","m_joint1","m_joint2","m_typeA","m_typeB","m_bodyC","m_bodyD","m_localAnchorC","m_localAnchorD","m_localAxisC","m_localAxisD","m_referenceAngleA","m_referenceAngleB","m_constant","m_ratio","m_indexC","m_indexD","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","m_qC","m_qD","m_lalcC","m_lalcD","GetBodyA","GetBodyB","xfC","aC","e_revoluteJoint","revolute","m_referenceAngle","prismatic","m_localXAxisA","pC","xfD","aD","pD","vC","wC","vD","wD","qC","qD","InitVelocityConstraints_s_u","rC","InitVelocityConstraints_s_rC","InitVelocityConstraints_s_rA","rD","InitVelocityConstraints_s_rD","InitVelocityConstraints_s_rB","cC","cD","JvAC","JvBD","JwA","JwB","JwC","JwD","SolvePositionConstraints_s_u","SolvePositionConstraints_s_rC","SolvePositionConstraints_s_rA","SolvePositionConstraints_s_rD","SolvePositionConstraints_s_rB","index1","index2","b2MotorJoint_b2MotorJointDef","e_motorJoint","linearOffset","angularOffset","correctionFactor","angleA","angleB","b2MotorJoint_b2MotorJoint","m_linearOffset","m_angularOffset","m_correctionFactor","m_linearError","m_angularError","IsEqualToV","inv_h","CrossSV","impulse_v2","SolveVelocityConstraints_s_impulse_v2","oldImpulse_v2","SolveVelocityConstraints_s_oldImpulse_v2","b2MouseJoint_b2MouseJointDef","e_mouseJoint","b2MouseJoint_b2MouseJoint","m_beta","m_C","IsAwake","SolveVelocityConstraints_s_Cdot","SolveVelocityConstraints_s_impulse","SolveVelocityConstraints_s_oldImpulse","b2PrismaticJoint_b2PrismaticJointDef","e_prismaticJoint","motorSpeed","GetLocalVector","b2PrismaticJoint_b2PrismaticJoint","m_localYAxisA","m_motorImpulse","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_motorSpeed","m_enableLimit","m_enableMotor","m_limitState","e_inactiveLimit","m_perp","m_s1","m_s2","m_a1","m_a2","m_K3","m_K2","m_motorMass","InitVelocityConstraints_s_d","jointTranslation","e_equalLimits","e_atLowerLimit","e_atUpperLimit","LA","LB","Cdot1_x","Cdot1_y","Cdot2","f1","SolveVelocityConstraints_s_f1","df3","Solve33","SolveVelocityConstraints_s_df3","f2r","Solve22","SolveVelocityConstraints_s_f2r","df2","SolveVelocityConstraints_s_df2","SolvePositionConstraints_s_d","SolvePositionConstraints_s_impulse","C1_x","C1_y","linearError","angularError","C2","k11","k12","k13","k22","k23","k33","K2","impulse1","Solve","SolvePositionConstraints_s_impulse1","GetJointTranslation_s_pA","GetJointTranslation_s_pB","GetJointTranslation_s_d","GetWorldVector","GetJointTranslation_s_axis","b2PulleyJoint_b2PulleyJointDef","e_pulleyJoint","groundAnchorA","groundAnchorB","lengthA","lengthB","groundA","groundB","anchorA","anchorB","b2PulleyJoint_b2PulleyJoint","m_groundAnchorA","m_groundAnchorB","m_lengthA","m_lengthB","m_uA","m_uB","ruA","ruB","PA","InitVelocityConstraints_s_PA","PB","InitVelocityConstraints_s_PB","SolveVelocityConstraints_s_PA","SolveVelocityConstraints_s_PB","uA","uB","SolvePositionConstraints_s_PA","SolvePositionConstraints_s_PB","GetCurrentLengthA_s_p","GetCurrentLengthB_s_p","b2RevoluteJoint_b2RevoluteJointDef","b2RevoluteJoint_b2RevoluteJoint","m_maxMotorTorque","m_lowerAngle","m_upperAngle","jointAngle","Cdot1","SolveVelocityConstraints_s_Cdot1","impulse_v3","SolveVelocityConstraints_s_impulse_v3","rhs_x","rhs_y","reduced_v2","SolveVelocityConstraints_s_reduced_v2","positionError","limitImpulse","C_v2","SolvePositionConstraints_s_C_v2","b2RopeJoint_b2RopeJointDef","e_ropeJoint","maxLength","b2RopeJoint_b2RopeJoint","m_maxLength","m_state","crA","crB","b2WeldJoint_b2WeldJointDef","e_weldJoint","b2WeldJoint_b2WeldJoint","GetInverse22","invM","GetSymInverse33","impulse2","MulM33XY","SolveVelocityConstraints_s_impulse1","MulM33XYZ","C1","SolvePositionConstraints_s_C1","b2WheelJoint_b2WheelJointDef","e_wheelJoint","b2WheelJoint_b2WheelJoint","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","m_springMass","dc","ay","sAy","sBy","GetPrismaticJointTranslation","GetRevoluteJointSpeed","b2JointFactory_b2JointFactory","allocator","b2MixFriction","friction1","friction2","b2MixRestitution","restitution1","restitution2","b2ContactEdge","b2Contact_b2Contact","m_touchingFlag","m_enabledFlag","m_filterFlag","m_bulletHitFlag","m_nodeA","m_nodeB","m_manifold","m_toiCount","m_toi","m_tangentSpeed","m_oldManifold","worldManifold","GetShape","listener","tManifold","touching","wasTouching","sensorA","IsSensor","sensorB","mp2","id2","mp1","BeginContact","EndContact","PreSolve","ComputeTOI_s_input","ComputeTOI_s_output","b2CircleContact_b2CircleContact","b2PolygonContact_b2PolygonContact","b2PolygonAndCircleContact_b2PolygonAndCircleContact","b2EdgeAndCircleContact_b2EdgeAndCircleContact","b2EdgeAndPolygonContact_b2EdgeAndPolygonContact","b2ChainAndCircleContact_b2ChainAndCircleContact","Evaluate_s_edge","b2ChainAndPolygonContact_b2ChainAndPolygonContact","b2ContactRegister","pool","createFcn","destroyFcn","primary","b2ContactFactory_b2ContactFactory","m_allocator","InitializeRegisters","type1","type2","poolCreateFcn","poolDestroyFcn","m_registers","e_shapeTypeCount","AddType","b2DestructionListener","system","b2WorldCallbacks_b2ContactFilter","filter1","filter2","b2_defaultFilter","b2WorldCallbacks_b2ContactImpulse","normalImpulses","tangentImpulses","b2_defaultListener","b2QueryCallback","b2RayCastCallback","b2ContactManager_b2ContactManager","m_contactCount","m_contactFilter","m_contactListener","m_contactFactory","fA","fB","GetChildIndexA","GetChildIndexB","UpdatePairs","IsTouching","cNuke","activeA","activeB","Update","b2Profile","solve","solveInit","solveVelocity","solvePosition","broadphase","solveTOI","b2TimeStep","velocityIterations","positionIterations","particleIterations","b2TimeStep_b2Position","b2TimeStep_b2Velocity","b2SolverData","b2ContactSolver_b2VelocityConstraintPoint","normalMass","tangentMass","velocityBias","b2ContactSolver_b2ContactVelocityConstraint","invMassA","invMassB","invIA","invIB","tangentSpeed","contactIndex","b2ContactSolver_b2ContactPositionConstraint","localPoints","localCenterA","localCenterB","b2ContactSolver_b2ContactSolverDef","contacts","b2ContactSolver_b2PositionSolverManifold","pc","b2ContactSolver_b2ContactSolver","m_step","m_positions","m_velocities","m_positionConstraints","m_velocityConstraints","m_contacts","new_length","GetManifold","vc","vcp","InitializeVelocityConstraints_s_xfA","InitializeVelocityConstraints_s_xfB","InitializeVelocityConstraints_s_worldManifold","rnA","rnB","kNormal","rtA","rtB","kTangent","vRel","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","WarmStart_s_P","dv","SolveVelocityConstraints_s_dv","dv1","SolveVelocityConstraints_s_dv1","dv2","SolveVelocityConstraints_s_dv2","SolveVelocityConstraints_s_a","SolveVelocityConstraints_s_b","SolveVelocityConstraints_s_x","SolveVelocityConstraints_s_d","P1","SolveVelocityConstraints_s_P1","P2","SolveVelocityConstraints_s_P2","P1P2","SolveVelocityConstraints_s_P1P2","vt","maxFriction","newImpulse","vn","cp1","cp2","vn1","vn2","SolvePositionConstraints_s_xfA","SolvePositionConstraints_s_xfB","psm","SolvePositionConstraints_s_psm","minSeparation","toiIndexA","toiIndexB","SolveTOIPositionConstraints_s_xfA","SolveTOIPositionConstraints_s_xfB","SolveTOIPositionConstraints_s_psm","SolveTOIPositionConstraints_s_rA","SolveTOIPositionConstraints_s_rB","SolveTOIPositionConstraints_s_P","b2Island_b2Island","m_listener","m_bodyCount","m_jointCount","m_bodyCapacity","m_contactCapacity","m_jointCapacity","bodyCapacity","contactCapacity","jointCapacity","profile","s_timer","solverData","s_solverData","contactSolverDef","s_contactSolverDef","contactSolver","s_contactSolver","InitializeVelocityConstraints","WarmStart","InitVelocityConstraints","SolveVelocityConstraints","StoreImpulses","s_translation","positionSolved","contactsOkay","SolvePositionConstraints","jointsOkay","jointOkay","SynchronizeTransform","Report","minSleepTime","linTolSqr","angTolSqr","subStep","SolveTOIPositionConstraints","constraints","s_impulse","PostSolve","b2ParticleFlag","b2ParticleGroupFlag","b2Particle_b2ParticleDef","lifetime","b2CalculateParticleIterations","timeStep","b2Particle_b2ParticleHandle","b2ParticleGroup_b2ParticleGroupDef","groupFlags","shapes","shapeCount","stride","positionData","b2ParticleGroup_b2ParticleGroup","m_system","m_groupFlags","m_strength","m_timestamp","m_inertia","m_center","m_transform","m_flagsBuffer","b2_particleGroupInternalMask","SetGroupFlags","UpdateStatistics","GetLinearVelocityFromWorldPoint_s_t0","ApplyForce","callDestructionListener","DestroyParticle","GetParticleMass","m_velocityBuffer","inv_mass","b2StackQueue_b2StackQueue","capacity","m_back","m_capacity","b2VoronoiDiagram_b2VoronoiDiagram","generatorCapacity","m_generatorBuffer","m_generatorCapacity","m_generatorCount","m_countX","m_countY","m_diagram","Generator","tag","necessary","margin","inverseRadius","necessary_count","queue","Task","Empty","Front","m_x","m_y","m_i","m_generator","ax","bx","std_iter_swap","array","default_compare","std_sort","len","cmp","pivot","std_stable_sort","std_remove_if","predicate","std_lower_bound","last","std_upper_bound","std_rotate","n_first","b2VoronoiDiagram","b2ParticleSystem_b2GrowableBuffer","Grow","newCapacity","Reserve","newEnd","newCount","pred","std_unique","b2ParticleSystem_b2FixtureParticleQueryCallback","childCount","GetAABB","enumerator","GetInsideBoundsEnumerator","GetNext","ReportFixtureAndParticle","b2ParticleSystem_b2ParticleContact","weight","rhs","IsEqual","b2ParticleSystem_b2ParticleBodyContact","b2ParticlePair","b2ParticleSystem_b2ParticleTriad","indexC","pa","pb","ka","kb","kc","b2ParticleSystemDef","strictContactCheck","maxCount","pressureStrength","dampingStrength","elasticStrength","springStrength","viscousStrength","surfaceTensionPressureStrength","surfaceTensionNormalStrength","repulsiveStrength","powderStrength","ejectionStrength","staticPressureStrength","staticPressureRelaxation","staticPressureIterations","colorMixingStrength","destroyByAge","lifetimeGranularity","b2ParticleSystem_b2ParticleSystem","m_paused","m_allParticleFlags","m_needsUpdateAllParticleFlags","m_allGroupFlags","m_needsUpdateAllGroupFlags","m_hasForce","m_iterationIndex","m_inverseDensity","m_particleDiameter","m_inverseDiameter","m_squaredDiameter","m_internalAllocatedCapacity","m_handleIndexBuffer","UserOverridableBuffer","m_forceBuffer","m_staticPressureBuffer","m_accumulationBuffer","m_accumulation2Buffer","m_depthBuffer","m_groupBuffer","m_userDataBuffer","m_stuckThreshold","m_lastBodyContactStepBuffer","m_bodyContactCountBuffer","m_consecutiveContactStepsBuffer","m_stuckParticleBuffer","m_proxyBuffer","Proxy","m_contactBuffer","m_bodyContactBuffer","m_triadBuffer","m_expirationTimeBuffer","m_indexByExpirationTimeBuffer","m_timeElapsed","m_expirationTimeBufferRequiresSorting","m_groupCount","m_def","SetStrictContactCheck","SetDensity","SetMaxParticleCount","SetDestructionByAge","yOffset","yShift","xScale","xOffset","xShift","DestroyParticleGroup","FreeUserOverridableBuffer","FreeBuffer","ReallocateInternalAllocatedBuffers","DestroyOldestParticle","SolveZombie","IsZero","RequestBuffer","Append","finiteLifetime","SetParticleLifetime","ExpirationTimeToLifetime","GetQuantizedTimeElapsed","RotateBuffer","SetParticleFlags","handle","SetIndex","b2_zombieParticle","b2_destructionListenerParticle","oldestFiniteLifetimeParticle","oldestInfiniteLifetimeParticle","DestroyParticlesInShape_s_aabb","DestroyParticlesInShapeCallback","Destroyed","groupDef","s_transform","CreateParticleGroup_s_transform","SetPositionAngle","firstIndex","CreateParticlesWithShapeForGroup","CreateParticlesWithShapesForGroup","CreateParticleForGroup","ConnectionFilter","UpdateContacts","UpdatePairsAndTriads","JoinParticleGroups","groupA","groupB","JoinParticleGroupsFilter","nodeBuffer","ParticleListNode","InitializeParticleLists","MergeParticleListsInContact","survivingList","FindLongestParticleList","MergeZombieParticleListNodes","CreateParticleGroupsFromParticleList","UpdatePairsAndTriadsWithParticleList","paused","damping","newFlags","b2_tensileParticle","buffer","SetUserOverridableBuffer","steps","Data","ComputeCollisionEnergy_s_v","vel_data","sum_v2","enabled","ValidateParticleIndex","initializeExpirationTimes","quantizedLifetime","newExpirationTime","GetExpirationTimeBuffer","expirationTime","GetParticleLifetime","totalMass","velocityDelta","IsSignificantForce","ForceCanBeApplied","PrepareForceBuffer","distributedForce","endProxy","firstProxy","computeTag","CompareProxyTag","lastProxy","CompareTagProxy","pos_data","ReportParticle","QueryShapeAABB_s_aabb","slop","QueryPointAABB_s_aabb","point1","point2","RayCast_s_aabb","s_p","RayCast_s_p","RayCast_s_v","RayCast_s_n","s_point","RayCast_s_point","determinant","sqrtDeterminant","userSuppliedCapacity","oldBuffer","oldCapacity","newBuffer","deferred","ReallocateBuffer3","ReallocateBuffer5","ReallocateBuffer4","LimitCapacity","ReallocateHandleBuffers","stuck","particleDef","CreateParticle","s_edge","CreateParticlesStrokeShapeForGroup_s_edge","s_d","CreateParticlesStrokeShapeForGroup_s_d","CreateParticlesStrokeShapeForGroup_s_p","GetParticleStride","positionOnEdge","edgeLength","CreateParticlesFillShapeForGroup_s_aabb","CreateParticlesFillShapeForGroup_s_p","identity","CreateParticlesStrokeShapeForGroup","CreateParticlesFillShapeForGroup","compositeShape","CompositeShape","oldIndex","newIndex","m_destructionListener","SayGoodbyeParticleGroup","b2_wallParticle","b2_springParticle","GetGroupFlags","b2_rigidParticleGroup","s_dab","UpdatePairsAndTriads_s_dab","s_dbc","UpdatePairsAndTriads_s_dbc","s_dca","UpdatePairsAndTriads_s_dca","particleFlags","k_pairFlags","af","bf","IsNecessary","ParticleCanBeConnected","ShouldCreatePair","ComparePairIndices","Unique","MatchPairIndices","k_triadFlags","diagram","AddGenerator","Generate","ShouldCreateTriad","dab","dbc","dca","maxDistanceSquared","groupC","triad","midPoint_x","midPoint_y","GetNodes","CompareTriadIndices","MatchTriadIndices","ReactiveFilter","b2_reactiveParticle","diffA","diffB","bufferIndex","ContainsParticle","listA","listB","_tmp","MergeParticleLists","nextB","MergeParticleListAndNode","newGroup","CloneParticle","contactGroups","contactGroupsCount","b2_particleGroupNeedsUpdateDepth","groupsToUpdate","groupsToUpdateCount","iterationCount","ap0","bp0","ap1","bp1","lowerTag","upperTag","InsideBoundsEnumerator","AddContact_s_d","distBtParticlesSq","invD","rightTag","computeRelativeTag","AddContact","bottomLeftTag","bottomRightTag","FindContacts_Reference","proxies","inv_diam","UpdateProxies_Reference","CompareProxyProxy","GetParticleContactFilter","RemoveIf","b2_particleContactFilterParticle","ShouldCollideParticleParticle","particlePairs","GetParticleContactListener","contactListener","itemIndex","Invalidate","BeginContactParticleParticle","exceptZombie","UpdateProxies","SortProxies","b2ParticlePairSet","NotifyContactListenerPreContact","FindContacts","FilterContacts","NotifyContactListenerPostContact","b2ParticleContactIsZombie","fixtureSet","GetFixtureContactListener","BeginContactFixtureParticle","UpdateBodyContacts_s_aabb","FixtureParticleSet","NotifyBodyContactListenerPreContact","SetCount","UpdateBodyContactsCallback","GetFixtureContactFilter","RemoveSpuriousBodyContacts","NotifyBodyContactListenerPostContact","s_subStep","Solve_s_subStep","SolveLifetimes","UpdateAllParticleFlags","UpdateAllGroupFlags","UpdateBodyContacts","ComputeWeight","ComputeDepth","UpdatePairsAndTriadsWithReactiveParticles","SolveForce","b2_viscousParticle","SolveViscous","b2_repulsiveParticle","SolveRepulsive","b2_powderParticle","SolvePowder","SolveTensile","b2_solidParticleGroup","SolveSolid","SolveColorMixing","SolveGravity","b2_staticPressureParticle","SolveStaticPressure","SolvePressure","SolveDamping","k_extraDampingFlags","SolveExtraDamping","SolveElastic","SolveSpring","LimitVelocity","SolveRigidDamping","b2_barrierParticle","SolveBarrier","SolveCollision","SolveRigid","SolveWall","SolveCollision_s_aabb","p2_x","p2_y","SolveCollisionCallback","criticalVelocitySquared","GetCriticalVelocitySquared","s_gravity","SolveGravity_s_gravity","SolveBarrier_s_aabb","s_va","SolveBarrier_s_va","s_vb","SolveBarrier_s_vb","s_pba","SolveBarrier_s_pba","s_vba","SolveBarrier_s_vba","s_vc","SolveBarrier_s_vc","s_pca","SolveBarrier_s_pca","s_vca","SolveBarrier_s_vca","s_qba","SolveBarrier_s_qba","s_qca","SolveBarrier_s_qca","s_dv","SolveBarrier_s_dv","s_f","SolveBarrier_s_f","k_barrierWallFlags","aGroup","bGroup","vb","pba","vba","cGroup","pca","vca","e0","qba","qca","sqrtDet","IsRigidGroup","inertia","GetInertia","ParticleApplyForce","criticalPressure","GetCriticalPressure","pressurePerWeight","maxPressure","relaxation","SolvePressure_s_f","k_noPressureFlags","velocityPerPressure","GetParticleInvMass","SolveDamping_s_v","SolveDamping_s_f","quadraticDamping","GetCriticalVelocity","SolveRigidDamping_s_t0","SolveRigidDamping_s_t1","SolveRigidDamping_s_p","SolveRigidDamping_s_v","invInertiaA","tangentDistanceA","invInertiaB","tangentDistanceB","InitDampingParameterWithRigidGroupOrParticle","InitDampingParameter","GetLocalCenter","ComputeDampingImpulse","ApplyDamping","aRigid","bRigid","SolveExtraDamping_s_v","SolveExtraDamping_s_f","s_position","SolveRigid_s_position","s_rotation","SolveRigid_s_rotation","SolveRigid_s_transform","s_velocityTransform","SolveRigid_s_velocityTransform","SetPositionRotation","MulXX","velocityTransform","s_pa","SolveElastic_s_pa","s_pb","SolveElastic_s_pb","s_pc","SolveElastic_s_pc","SolveElastic_s_r","SolveElastic_s_t0","oa","oc","invR","SolveSpring_s_pa","SolveSpring_s_pb","SolveSpring_s_d","SolveSpring_s_f","r0","r1","s_weightedNormal","SolveTensile_s_weightedNormal","s_s","SolveTensile_s_s","SolveTensile_s_f","weightedNormal","criticalVelocity","normalStrength","maxVelocityVariation","SolveViscous_s_v","SolveViscous_s_f","SolveRepulsive_s_f","SolvePowder_s_f","minWeight","SolveSolid_s_f","velocityPerForce","colorMixing","newIndices","allParticleFlags","destructionListener","SayGoodbyeParticle","Test","writeOffset","readOffset","modified","b2_particleGroupCanBeEmpty","b2_particleGroupWillBeDestroyed","LifetimeToExpirationTime","quantizedTimeElapsed","expirationTimes","expirationTimeIndices","particleIndexA","particleIndexB","expirationTimeA","expirationTimeB","infiniteExpirationTimeA","particleIndex","mid","end","GetIndex","indexByExpirationTime","inverseStride","b2_fixtureContactFilterParticle","b2_fixtureContactListenerParticle","b2_particleContactListenerParticle","newData","oldFlags","lhs","BodyContactCompare","RemoveSpuriousBodyContacts_s_n","s_pos","RemoveSpuriousBodyContacts_s_pos","s_normal","RemoveSpuriousBodyContacts_s_normal","currentContacts","invInertia","tangentDistance","isRigidGroup","normalVelocity","xTruncBits","yTruncBits","tagBits","yMask","xMask","b2ParticleSystem","m_xLower","m_xUpper","m_yLower","m_yUpper","m_first","m_last","xTag","FixedSetAllocator","itemSize","FixtureParticle","second","bodyContactBuffer","flagsBuffer","ParticlePair","particleA","particleB","contactBuffer","m_callDestructionListener","m_destroyed","particleSystem","threshold","m_threshold","m_shapeCount","m_shapes","s_subaabb","subaabb","Combine1","GetFlagsBuffer","ShouldCollideFixtureParticle","ReportFixtureAndParticle_s_n","s_rp","ReportFixtureAndParticle_s_rp","ap","bp","bm","bI","invBm","invBI","invAm","rp","rpn","DetectStuckParticle","s_p1","ReportFixtureAndParticle_s_p1","s_output","ReportFixtureAndParticle_s_output","s_input","ReportFixtureAndParticle_s_input","ReportFixtureAndParticle_s_p","ReportFixtureAndParticle_s_v","ReportFixtureAndParticle_s_f","av","b2World_b2World","m_clearForces","m_bodyList","m_particleSystemList","m_gravity","m_allowSleep","m_inv_dt0","m_warmStarting","m_continuousPhysics","m_subStepping","m_stepComplete","m_profile","m_island","je","je0","SayGoodbyeJoint","coe","coe0","nextController","RemoveBody","f0","SayGoodbyeFixture","smallestRadius","GetParticleSystemList","GetRadius","GetSmallestRadius","CalculateReasonableParticleIterations","stepTimer","Step_s_stepTimer","Step_s_step","Step_s_timer","SolveTOI","ClearForces","positionBuffer","colorBuffer","GetColorBuffer","DrawParticles","GetFlags","DrawDebugData_s_color","SetRGB","e_shapeBit","PushTransform","GetFixtureList","DrawShape","PopTransform","e_particleBit","DrawParticleSystem","e_jointBit","DrawJoint","e_aabbBit","DrawDebugData_s_vs","DrawPolygon","e_centerOfMassBit","DrawDebugData_s_xf","DrawTransform","e_controllerBit","Draw","ReportFixture","ShouldQueryParticleSystem","QueryShape_s_aabb","QueryPoint_s_aabb","RayCast_s_input","fixture_proxy","RayCast_s_output","min_fraction","GetProxyCount","GetTreeHeight","GetTreeBalance","GetTreeQuality","GetAnchorA","DrawJoint_s_p1","GetAnchorB","DrawJoint_s_p2","DrawJoint_s_color","DrawSegment","pulley","GetGroundAnchorA","GetGroundAnchorB","DrawSolidCircle","DrawCircle","poly","DrawSolidPolygon","island","seed","Clear","stackCount","AddBody","IsEnabled","AddJoint","minContact","minAlpha","collideA","IsBullet","collideB","SolveTOI_s_toi_input","SolveTOI_s_toi_output","backup1","SolveTOI_s_backup1","backup2","SolveTOI_s_backup2","backup","SolveTOI_s_backup","SolveTOI_s_subStep","b2Rope_b2RopeDef","masses","k2","k3","b2Rope_b2Rope","m_ps","m_p0s","m_vs","m_ims","m_Ls","m_as","m_damping","m_k2","m_k3","count3","d1","d2","exp","SolveC2","SolveC3","L","im1","im2","m1","s_d1","s_d2","L1sqr","L2sqr","Jd1","SelfSkew","s_Jd1","Jd2","s_Jd2","J1","s_J1","J2","s_J2","J3","Foothold_FootholdChain","map_footholds","FootholdType","Foothold_FootholdSingle","Foothold_FootholdChainChild","Physics","m_angle","next_a","next_a_deg","$showDebugInfo","body_xf","next_fh","prev_fh","is_empty","is_first","is_last","_is_horizontal_floor","x3","y3","piece","ta","$_text_pos","strokeText","GetVertex1","GetVertex2","MulVS","Foothold","CREATE_SOLID_FOOTHOLD","CREATE_SOLID_AND_EDGE_FOOTHOLD","USE_GHOST_VERTEX","FOOTHOLD_IS_BULLET","Ground_Ground","rectChains","segment","chains","chainId","_create_foothold","_create_chain","_chain","CreateLoop","Filter","endContact_bodyBase_oneway","preSolveGround_bodyBase_oneway","is_solid","create","nx1","ny1","nx2","ny2","hlen","numPoints","playerBody","getFootholdFromContact","$fh","player_pos","SetFriction","p$fh","foot","GetWorldManifold","relative_position","platformFaceY","cpoint","pointVelPlatform","pointVelOther","relativeVel","relativePosition","_which_foothold_contact","normal_contact","beginContact_bodyBase_oneway","lineJoin","lineCap","isShow","isHide","ActionAnimationFrameData","ActionAnimation","Adef","fdat","total","aadef","actName","_fdef","CharacterActionAnimationDefinition","_loadedItem","$loadedItem","TYPE_TO_SLOT_MAP","ItemBase","ItemEquip","ItemConsume","ItemEtc","ItemInstall","ItemCash","$createItem","_itemType","itemPrototype","ItemSlot","_ui_Basic_KeySlotData_js__WEBPACK_IMPORTED_MODULE_2__","itemSN","SN","iSlot","CharacterBaseStat","mp","mhp","mmp","str","luk","dex","int","symbol_onJobChange","$RemotePlayerData","equips_code","CharacterStat","_$sceneChara","symbolStatJob","cbfunc","_getTotalAttack","getNextExp","$PlayerData","mapId","fileName","blob","Blob","createObjectURL","revokeObjectURL","selection","createTextRange","moveToElementText","select","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","$temp","execCommand","_RenderingOption__WEBPACK_IMPORTED_MODULE_1__","_Layer_js__WEBPACK_IMPORTED_MODULE_0__","$sceneRenderer","reset_mouse","mouse_um","mouse_ur","components_ui_draggablevue_type_script_lang_js_","description","mouse_x0","mouse_y0","origin_x","origin_y","old_width","old_height","handle_mousemove","handle_mouseup","which","clientX","clientY","pw","parentElement","offsetWidth","ph","offsetHeight","ox","offsetLeft","offsetTop","ow","oh","mouseup","contains","get_relative_position","addEventListener","removeEventListener","ori_pos","_calc_origin_pos","position.x","position.y","component","PBullet_PBullet","bulletRenderer","bulletMoveFunc","bullet_default_preSolve","linearVelocityX","linearVelocityY","targetPlayer","targetChara","addAttack","Skill_SkillEffectAnimation","targetRenderer","update_p","update_r","render_p","render_r","SkillHitAnimation","EffectManager","_effects","$EffectManager","Skill_SkillAnimationBase","actType","_owner","_crr","_actani","_$is_end","is_launch","_applyDefaultAction","_owner_player","_applyAction","jobID","exec","_decide_type","_init","skill_anim","proto","effName","_effect_names","arrNd_texture","arrNd","arr2d","hit","tex","arr2d_texture","arr1d","arr1d_texture","inputKey","_addEffect","common","attackCount","effectName","launch","$BULLET_SPEED","isBullet","AddEffect","rapidAttack","_SkillAnimation_RapidAttack","casterMove","avaliableInJumpingState","_SkillAnimation_N_Jump","_SkillAnimation_Default","_default_update","_state_func","_prepare","current_effect","tick","fadeTotalTime","getTotalTime","_keydown","_keydownend","$FIRE_BULLET_T","$FIRE_BULLET_T2","createBullet","jump_max_count","$NJmpX","$NJmpY","_addDefaultEffect","jump2","Skill_SceneSkill","loaded_skill","__loaded_skill","_assign","$SceneSkill","setFlags","bit","DebugDraw","axis_length","viewRotation","flag_drawShape","flag_drawJoint","flag_drawAabb","flag_drawCenterOfMass","flag_drawController","flag_drawParticle","flag_drawAll","e_all","e_none","flag_drawPair","e_pairBit","flagNames","closePath","arc","cs","DrawPoint","hsize","DrawString","format","var_args","string","goog","s_color","DrawStringWorld","vr","cc","s_cc","m_canvas","DrawAABB","strokeRect","MapLadderRope","uf","LadderRope","calcHalfWidth","hheight","_Filter_js__WEBPACK_IMPORTED_MODULE_3__","leaveLadder","MapLadderRopeLoader","ladderRopes","idx","_$index","$MobAction_Move_Priority","$MobAction_Jump_Priority","MobActionController","_ani","pMob","onEnd","MobAction_Stand","_MobAction_Move","MobAction_MoveLeft","isValid","MobAction_MoveRight","MobAction_Jump","PMob","_PPlayer_js__WEBPACK_IMPORTED_MODULE_0__","attackTarget","_enable_rx","isFlyMob","activityRegion","$debugControl","param","act_map","_registerAction","hasBodyDamage","bodyAttack","_speed","_pushed","_fs","_category","_appleMobCategory","__setAsWalkOnlyMob","__setAsJumpDropMob","fhId","isCanMove","_control_basic","isAllowJump","limit_action","cbpos","dx1","fwpos","MobSkillBallDefinition","createDelay","collisionDelay","moveSpeed","_speed_x","_speed_y","MobSkillBallBase","_SceneObject_js__WEBPACK_IMPORTED_MODULE_2__","ballDef","animations","_BallDefinition","E_BEFORE_CREATE","E_CREATED","E_BEGIN_COLLISION","E_ENG_COLLISION","pWorld","begin_collision","end_collision","$stop","MobSkillBase","_anima_name_list","anima","locals","zIndices","components_ui_dialogvue_type_script_lang_js_","content_style","header_style","updateDialogPosition","contents","$children","compute_width","compute_height","__set_z_index","parseFloat","FairyDustBallDefinition","_MobSkillBase_js__WEBPACK_IMPORTED_MODULE_3__","FairyDustBall","FairyDustBallHit","randInt","nextInt","ball","SceneObjectMgr","_FairyDust","MOB_SKILL_RAW","LoginPacket","ChatPacket","CharacterPacket","loaded_skin","DamageNumberTextures","addedCanvasH","font_adv","draw_axis","Miss","guard","shot","DamageNumberRenderer","rand_y","max_display_digit","max_rand_y","_$promise","_default_base_path","_skin_base_path","sPath","loaded","_copy","str_damage","text_width","_display_axis","log10","MAX_SAFE_INTEGER","_Layer_js__WEBPACK_IMPORTED_MODULE_2__","damagePair","move_y","time_tt","recursive","$noRender","move_avy","time_d1","move_avy2","time_d2","DamageNumberTest","damageNumberLayer","_Common_AttackInfo_js__WEBPACK_IMPORTED_MODULE_4__","$damageNumberLayer","$DamageNumber","$DamageNumberTest","$DamageNumberRenderer","FlowerTrapBallDefinition","FlowerTrapBall","patterns","pattern","pats","pat","_invoke","nextBoolean","$RequestPacket_SelectChara","charaId","$ResponsePacket_SelectChara","charaData","remoteCharacters","$Packet_CharacterChat","$Packet_CharacterMove","getTime","phy","_Client_PMovePath__WEBPACK_IMPORTED_MODULE_0__","vel"],"mappings":"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","file":"11.js","sourcesContent":["﻿\r\nimport { Vec2 } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\n\r\n\r\nwindow.m_draw_animation_texture_info = false;\r\n\r\nclass IAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tthis._raw = null;\r\n\t\tthis._url = null;\r\n\t\t\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t_raw: {\r\n\t\t\t\tvalue: raw\r\n\t\t\t},\r\n\t\t\t_url: {\r\n\t\t\t\tvalue: url\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** elapsed time */\r\n\t\tthis.delta = 0;\r\n\r\n\t\t/** @type {Sprite[]} */\r\n\t\tthis.textures = [];\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_loop = true;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_end = false;\r\n\r\n\t\tif (!raw && !this._url) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.textures.reduce((pv, cv) => pv + cv.delay, 0);\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet newAnim = new this.constructor(this._raw, this._url);\r\n\t\tnewAnim.textures = this.textures;\r\n\t\treturn newAnim;\r\n\t}\r\n\t\r\n\tload() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** reset frame */\r\n\t_resetFrame() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t}\r\n\r\n\t/** restart */\r\n\treset() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.is_end = false;\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * remove at nextStep\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.is_loop = false;//防止重複\r\n\t\tthis.is_end = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * process animation\r\n */\r\nexport class AnimationBase extends IAnimation {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n\r\n\tload() {\r\n\t\tif (!this._raw) {\r\n\t\t\t//this._raw = await $get.data(this._url);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i in this._raw; ++i) {\r\n\t\t\t//let url = this._url + \"/\" + i;\r\n\r\n\t\t\tlet texture = new Sprite(this._raw[i]);\r\n\r\n\t\t\t//texture._url = url;\r\n\r\n\t\t\tthis.textures[i] = texture;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.textures[0]) {\r\n\t\t\tif (!this.textures[0].isLoaded()) {\r\n\t\t\t\tthis.textures[0].__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * aways loop\r\n\t * @param {number} stamp\r\n\t */\r\n\t_update(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame % fc;\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = this.frame + 1;\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tif (this.is_loop) {\r\n\t\t\t\t\t\tthis.reset();//make loop\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//防止錯誤\r\n\t\t\t\t\t\tthis.frame = fc - 1;//this._resetFrame();\r\n\r\n\t\t\t\t\t\tthis.is_end = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, x, y, angle, flip) {\r\n\t\tlet texture = this.texture;\r\n\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\treturn this.textures[this.frame];\r\n\t}\r\n}\r\n\r\n/**\r\n * animation rendering\r\n */\r\nexport class Animation extends AnimationBase {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tthis.draw = this._draw_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * draw and load next frame\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\t_draw_and_preload(renderer, x, y, angle, flip) {\r\n\t\tlet frame;\r\n\r\n\t\t// if current frame is not loaded then render prev frame\r\n\t\tfor (frame = this.frame; frame >= 0; --frame) {\r\n\t\t\tlet texture = this.textures[frame];\r\n\r\n\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//preload next frame\r\n\t\tlet texture = this.textures[++frame];\r\n\t\tif (texture) {//if frame < this.textures.length\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {//if all testure are loaded\r\n\t\t\tdelete this.draw;\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\nimport { CharacterRenderConfig, ItemCategoryInfo, ResourceManager } from '../../../public/javascripts/resource.js';\r\nimport { AddInitTask } from \"../../init.js\";\r\nimport { Animation } from \"../Animation\";\r\nimport { engine } from '../Engine.js';\r\nimport { IRenderer, ImageFilter } from '../IRenderer.js';\r\nimport { Sprite, SpriteBase } from '../Sprite.js';\r\nimport { Rectangle, Vec2 } from '../math.js';\r\nimport { ActionAnimation } from './CharacterActionAnimation.js';\r\n\r\n\r\nlet zMap = {};\r\nlet sMap = {};\r\n\r\n\r\n/**\r\n * 00026623.blink[1].brow has bug\r\n * 'Weapon/01702694' is Longcoat(islot)\r\n * how to use cash-weapon (ex: 01702504|0152)\r\n */\r\n\r\n/**\r\n * multi-image-sprite\r\n */\r\nclass FragmentTexture extends SpriteBase {\r\n\t/**\r\n\t * @param {wzproperty} raw\r\n\t * @param {string} full_path\r\n\t */\r\n\tconstructor(raw, full_path) {\r\n\t\tsuper(raw, full_path);\r\n\r\n\t\tif (this._raw.origin) {\r\n\t\t\tthis._raw.origin.__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\tfor (let i in this._raw.map) {\r\n\t\t\tthis._raw.map[i].__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * if this.relative == null then remove this\r\n\t\t * @type {Vec2}\r\n\t\t */\r\n\t\tthis.relative = new Vec2(0, 0);\r\n\t\t\r\n\t\tthis.calcRelative = this._calcRelative;//this._getRelativeFunction();//this.__old_calcRelative;//\r\n\r\n\t\tthis.filter = new ImageFilter();\r\n\t\tthis.opacity = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.visible = true;\r\n\r\n\r\n\t\t/** @type {string} - extra property. */\r\n\t\tthis._slot = null;\r\n\r\n\t\t/** @type {string} - extra property. 在哪個部位 */\r\n\t\tthis._place = null;\r\n\r\n\t\t/** @type {string} - extra property: _slot itemId, _place, _raw.z z */\r\n\t\tthis.classList = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget z() {\r\n\t\treturn zMap[this._raw.z] || 1;\r\n\t}\r\n\tset z(not_value) {\r\n\t\tconsole.error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\tdebugger;\r\n\t\treturn this.z;\r\n\t}\r\n\tset order(not_value) {\r\n\t\tdebugger;\r\n\t\tconsole.error(new TypeError(\"Not implement\"));\r\n\t}\r\n\r\n\t/** @returns {Vec2} */\r\n\tget origin() { return this._raw.origin || Vec2.empty; }\r\n\r\n\tisHasAnchor() { return !!this._raw.map; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget brow() { return this._raw.map.brow; }\r\n\tisAnchorBrow() { return !!this._raw.map.brow; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget neck() { return this._raw.map.neck; }\r\n\tisAnchorNeck() { return !!this._raw.map.neck; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget navel() { return this._raw.map.navel; }\r\n\tisAnchorNavel() { return !!this._raw.map.navel; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget hand() { return this._raw.map.hand; }\r\n\tisAnchorHand() { return !!this._raw.map.hand; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget handMove() { return this._raw.map.handMove; }\r\n\tisAnchorHandMove() { return !!this._raw.map.handMove; }\r\n\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earBelowHead() { return this._raw.map.earBelowHead; }\r\n\tisAnchor_EarBelowHead() { return !!this._raw.map.earBelowHead; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earOverHead() { return this._raw.map.earOverHead; }\r\n\tisAnchor_EarOverHead() { return !!this._raw.map.earOverHead; }\r\n\r\n\t/**\r\n\t * @param {FragmentTexture} that - this\r\n\t * @param {FragmentTexture} base - parent\r\n\t * @param {string} anchor - anchor name\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_anchor(that, base, anchor) {\r\n\t\treturn base[anchor].minus(that[anchor]).plus(base.origin.minus(that.origin));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative(chara, body, head) {\r\n\t\tthis.calcRelative = this._getRelativeFunction(chara);\r\n\t\treturn this.calcRelative(chara, body, head);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getRelativeFunction(chara) {\r\n\t\tif (!this.isHasAnchor()) {\r\n\t\t\treturn this._calcRelativeEmpty;\r\n\t\t}\r\n\t\tif (this.isAnchorNeck()) {\r\n\t\t\treturn this._calcRelative_neck;\r\n\t\t}\r\n\t\tif (this.isAnchorBrow()) {\r\n\t\t\treturn this._calcRelative_brow;\r\n\t\t}\r\n\t\tif (this.isAnchorNavel()) {\r\n\t\t\tif (this == chara.slots.body) {\r\n\t\t\t\treturn this._getOrigin;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_navel;\r\n\t\t}\r\n\t\tif (this.isAnchorHand()) {\r\n\t\t\treturn this._calcRelative_hand;\r\n\t\t}\r\n\t\tif (this.isAnchorHandMove()) {\r\n\t\t\tif (this._url.lastIndexOf(\"lHand\") > 0) {\r\n\t\t\t\treturn this._calcRelative_handMove_lHand;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_handMove;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelativeEmpty(chara, body, head) {\r\n\t\treturn Vec2.empty;\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getOrigin(chara, body, head) {\r\n\t\treturn this.origin;\r\n\t}\r\n\t/**\r\n\t * neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_neck(chara, body, head) {\r\n\t\treturn this._anchor(this, body, \"neck\").minus(body.origin);\r\n\t}\r\n\t/**\r\n\t * brow on the head & head on the neck & neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_brow(chara, body, head) {\r\n\t\treturn this._anchor(this, head, \"brow\").plus(this._anchor(head, body, \"neck\")).minus(body.origin);//anchor_brow+(-7,-33)\r\n\t}\r\n\t/**\r\n\t * this is origin point, no anchor\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_navel(chara, body, head) {\r\n\t\treturn body.navel.minus(this.navel).minus(this.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_hand(chara, body, head) {\r\n\t\tconst hand = chara.slots.body.fragments.arm.getTexture(chara);\r\n\t\tif (hand == null) {\r\n\t\t\treturn Vec2.empty.minus(this.hand).minus(this.origin).minus(body.origin);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this._anchor(this, hand, \"hand\").minus(this._anchor(body, hand, \"navel\")).minus(body.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove(chara, body, head) {\r\n\t\treturn Vec2.empty.minus(this.origin).minus(this.handMove);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove_lHand(chara, body, head) {\r\n\t\treturn Vec2.empty.minus(this.origin);\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tif (chara.slots.body && chara.slots.head) {\r\n\t\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\t\tconst head = chara.slots.head.fragments.head.getTexture(chara);\r\n\t\t\tif (body && head) {\r\n\t\t\t\tthis.relative = this.calcRelative(chara, body, head);\r\n\r\n\t\t\t\tconst tamingMob = chara.slots.tamingMob;\r\n\t\t\t\tif (tamingMob) {\r\n\t\t\t\t\tthis.relative = tamingMob.adj_pos(this.relative, body, chara);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!(this.relative && this.visible)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass BodyFragmentTexture extends FragmentTexture {\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tsuper.update(chara);\r\n\t\tthis.visible = !chara.hideBody;\r\n\t}\r\n}\r\n\r\nclass HairFragmentTexture extends FragmentTexture {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph2 = null;\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph3 = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tif (chara.slots.body && chara.slots.head) {\r\n\t\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\t\tconst head = chara.slots.head.fragments.head.getTexture(chara);\r\n\t\t\tif (body && head) {\r\n\t\t\t\tthis.relative = this.calcRelative(chara, body, head);\r\n\r\n\t\t\t\tconst tamingMob = chara.slots.tamingMob;\r\n\t\t\t\tif (tamingMob) {\r\n\t\t\t\t\tthis.relative = tamingMob.adj_pos(this.relative, body, chara);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.graph2) {\r\n\t\t\t\t\tthis.graph2.relative = this.relative;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.graph3) {\r\n\t\t\t\t\tthis.graph3.relative = this.relative;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!this.relative) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\trenderer.globalAlpha = this.opacity || 1;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\tthis._render(renderer);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\tthis._render(renderer);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n\t_render(renderer) {\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.drawGraph2(this, x, y);\r\n\r\n\t\tif (this.graph2 && this.graph2.opacity) {//color2\r\n\t\t\trenderer.globalAlpha = this.graph2.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph2, x, y);\r\n\t\t}\r\n\t\tif (this.graph3 && this.graph3.opacity) {//color3\r\n\t\t\trenderer.globalAlpha = this.graph3.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph3, x, y);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nclass ItemEffectAnimation extends Animation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t\t\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\t//this._url = this._url;\r\n\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"pos\", 1);\r\n\r\n\t\tsuper.load();\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} actionExceptRotation\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\trender(renderer, actionExceptRotation, angle, flip) {\r\n\t\tif (actionExceptRotation) {\r\n\t\t\tthis.draw(renderer, 0, 0, -angle, flip);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst oy = -this.texture.height * 0.25;\r\n\t\t\tthis.draw(renderer, 0, oy, 0, flip);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\t/data/Effect/ItemEff/1102918\r\nclass ItemEffect {\r\n\tconstructor() {\r\n\t\tthis._url = null;\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {{[animationName:string]:ItemEffectAnimation}} */\r\n\t\tthis.animation = {};\r\n\r\n\t\tthis.action = null;\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\r\n\t\tthis.fixed = 0;\r\n\t\tthis.z = -2;\r\n\t\tthis.action = 1;\r\n\t\tthis.actionExceptRotation = 0;\r\n\t\t\r\n\t\tthis.enable = true;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\ttry {\r\n\t\t\t/** @type {Set<string>} */\r\n\t\t\tlet itemEffectList = ItemEffect._list;\r\n\r\n\t\t\t/** @type {string[]} */\r\n\t\t\tlet raw = $get.list(\"/Effect/ItemEff\");\r\n\r\n\t\t\titemEffectList.clear();\r\n\r\n\t\t\traw.forEach(id => {\r\n\t\t\t\titemEffectList.add(parseInt(id, 10));\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<ItemEffect>}\r\n\t */\r\n\tstatic async load(equipID) {\r\n\t\tconst id = Number(equipID);\r\n\r\n\t\tif (ItemEffect._list.has(id)) {\r\n\t\t\tlet eff = new ItemEffect();\r\n\t\t\tawait eff.load(equipID);\r\n\t\t\treturn eff;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tasync load(equipID) {\r\n\t\tconst id = Number(equipID);\r\n\t\tconst url = `/Effect/ItemEff/${id}/effect`;\r\n\t\tlet raw;\r\n\r\n\t\ttry {\r\n\t\t\traw = await $get.data(url);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\r\n\t\tif (raw) {\r\n\t\t\treturn this._load(equipID, url, raw);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t * @param {string} action\r\n\t */\r\n\tupdate(stamp, action) {\r\n\t\tif (action in this.animation) {\r\n\t\t\tthis.action = action;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.action = \"default\";\r\n\t\t}\r\n\r\n\t\tif (this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterRenderer} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (this.animation && this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].render(renderer, this.actionExceptRotation, chara.angle, chara.front > 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} equipID\r\n\t * @param {object} raw_data\r\n\t */\r\n\t_load(equipID, url, raw) {\r\n\t\tthis.id = equipID;\r\n\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tthis.__construct();\r\n\t}\r\n\t__construct() {\r\n\t\tthis.__getAttr(\"fixed\", 0);\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"action\", 1);\r\n\t\tthis.__getAttr(\"actionExceptRotation\", 0);\r\n\r\n\t\tfor (let i in this._raw) {\r\n\t\t\tif (this._raw[i] && typeof this._raw[i] == \"object\" && '0' in this._raw[i]) {//animation has frames\r\n\t\t\t\tthis.animation[i] = new ItemEffectAnimation(this._raw[i], [this._url, i].join(\"/\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n}\r\n/** @type {Set<string>} */\r\nItemEffect._list = new Set();\r\n\r\nclass CharacterFragmentBase {\r\n\t/**\r\n\t * @param {{[action:string]: FragmentTexture[]}} textures\r\n\t */\r\n\tconstructor(textures) {\r\n\t\t/** @type {{[action:string]: FragmentTexture[]}} - textures[action:string][frame:number] */\r\n\t\tthis.textures = textures;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterBodyFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.action_frame);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.action in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst fc = this.textures[chara.action].length;\r\n\t\tlet ft = this.textures[chara.action][frame % fc];\r\n\t\treturn ft;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tif (this.textures[chara.action]) {\r\n\t\t\treturn this.textures[chara.action].length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterFaceFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.emotion_frame);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.emotion in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet ft = this.textures[chara.emotion][frame];\r\n\t\treturn ft;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tif (this.textures[chara.emotion]) {\r\n\t\t\treturn this.textures[chara.emotion].length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterTamingMobFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara._action_frame);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara._ride_action in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst fc = this.textures[chara._ride_action].length;\r\n\t\tlet ft = this.textures[chara._ride_action][frame % fc];\r\n\t\treturn ft;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tif (this.textures[chara._ride_action]) {\r\n\t\t\treturn this.textures[chara._ride_action].length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\nclass EquipImageFilter {\r\n\t/**\r\n\t * @param {CharacterAppearanceBase} equip\r\n\t */\r\n\tconstructor(equip) {\r\n\t\tthis.equip = equip;\r\n\t}\r\n\r\n\tget hue() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.hue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset hue(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget sat() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.sat;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset sat(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.sat = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget bri() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset bri(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.bri = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget contrast() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.contrast;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset contrast(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.contrast = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\thue: this.hue,\r\n\t\t\tsat: this.sat,\r\n\t\t\tbri: this.bri,\r\n\t\t\tcontrast: this.contrast,\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * @interface\r\n */\r\nclass ICharacterAppearanceBase {\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tisLoaded() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_unload() {\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\ttoJSON() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\treturn {\r\n\t\t\tid: -1,//invalid ID\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * ??\r\n */\r\nclass _CharacterAppearanceBaseSlotLink extends ICharacterAppearanceBase {\r\n\tconstructor(slot_link) {\r\n\t\tsuper();\r\n\t\tthis.slot_link = slot_link;//??\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: slot_link,//??\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * character loader\r\n */\r\nclass CharacterAppearanceBase extends ICharacterAppearanceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\t\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\t//this._url = null;\r\n\t\t\t\r\n\t\t/** @type {ItemEffect} */\r\n\t\tthis.effect = null;\r\n\r\n\t\t/**\r\n\t\t * @type {{[place:string]:CharacterFragmentBase}}\r\n\t\t */\r\n\t\tthis.fragments = null;\r\n\r\n\t\tthis._onload = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tthis.categoryInfo = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.slot_order = 0;\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.islot = {};\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.vslot = {};\r\n\r\n\t\tthis.filter = new EquipImageFilter(this);\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: this.id,\r\n\t\t\tfilter: this.filter.toJSON(),\r\n\t\t};\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn this.fragments != null;\r\n\t}\r\n\r\n\t/** @type {function(CharacterAppearanceBase):void} */\r\n\tget _onload() {\r\n\t\treturn this.__onload;\r\n\t}\r\n\tset _onload(func) {\r\n\t\tthis.__onload = func;\r\n\t\tif (this.isLoaded()) {\r\n\t\t\tthis.__onload.call(this, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {void} use_category - no use\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tlet raw;\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.categoryInfo = cateInfo;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (ResourceManager.isEquipExist(id, cateInfo)) {\r\n\t\t\t\traw = await ItemCategoryInfo.getItem(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!raw && load_extern_item_data) {\r\n\t\t\t\traw = await load_extern_item_data(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tthis.__load_slot();\r\n\r\n\t\tthis.__load_fragments();\r\n\r\n\t\tif (this._onload) {\r\n\t\t\tthis._onload.call(this, this);\r\n\t\t}\r\n\r\n\t\t//// if not body, head, face, hair then try load effect\r\n\t\t//if (id >= \"00050000\") {\r\n\t\t\t// load if exist\r\n\t\t\tItemEffect.load(this.id).then(a => this.effect = a);//01102918\t//01102915\r\n\t\t//}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tconst FragmentConstructor = this.FragmentConstructor;\r\n\r\n\t\t//Object.keys(this._raw_textures).map(k => { return '0' in this._raw_textures[k]; })\r\n\r\n\t\tlet action_list = Object.keys(this._raw_textures);\r\n\r\n\t\tlet textures = {};\r\n\t\tfor (let action of action_list) {\r\n\t\t\tif (typeof this._raw_textures[action] == \"object\" && \"0\" in this._raw_textures[action]) {\r\n\t\t\t\tlet _url = this._base_path + action;\r\n\r\n\t\t\t\ttextures[action] = this.__load_frame_textures(this._raw_textures[action], _url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragment_textures = {};\r\n\t\tfor (let action in textures) {\r\n\t\t\tfor (let frame in textures[action]) {\r\n\t\t\t\tfor (let place in textures[action][frame]) {\r\n\t\t\t\t\tif (!(place in fragment_textures)) {\r\n\t\t\t\t\t\tfragment_textures[place] = {};\r\n\t\t\t\t\t\t//fragment_textures[place].visible = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!(action in fragment_textures[place])) {\r\n\t\t\t\t\t\tfragment_textures[place][action] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfragment_textures[place][action][frame] = textures[action][frame][place];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragments = {};\r\n\t\tfor (let frag in fragment_textures) {\r\n\t\t\tfragments[frag] = new FragmentConstructor(fragment_textures[frag]);\r\n\t\t}\r\n\t\tthis.fragments = fragments;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {{[place:string]:FragmentTexture}[]} - array - textures[frame][place]\r\n\t */\r\n\t__load_frame_textures(_raw, _url) {\r\n\t\tlet textures = [];\r\n\t\tfor (let frame = 0; frame in _raw; ++frame) {\r\n\t\t\tlet url = `${_url}/${frame}`;\r\n\t\t\ttextures[frame] = this.__load_place_textures(_raw[frame], url);\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {{[place:string]:FragmentTexture}} - object - textures[place]\r\n\t */\r\n\t__load_place_textures(_raw, _url) {\r\n\t\tlet textures = {};\r\n\t\tfor (let place in _raw) {\r\n\t\t\tlet path = `${_url}/${place}`;\r\n\t\t\tlet raw = _raw[place];\r\n\r\n\t\t\tif (raw) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tconst FragmentTextureConstructor = this.FragmentTextureConstructor;\r\n\t\t\t\tlet ft;\r\n\t\t\t\tif (raw[\"\"] == \"\") {\r\n\t\t\t\t\tft._url = path;\r\n\t\t\t\t\t//ft._url = path;\r\n\t\t\t\t\ttextures[place] = ft\r\n\t\t\t\t}\r\n\t\t\t\telse if (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\tft = new FragmentTextureConstructor(raw);\r\n\t\t\t\t\t//ft._url = raw[\"\"];\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\telse if (place == \"hairShade\") {\r\n\t\t\t\t\tft = new FragmentTextureConstructor(raw[0]);\r\n\t\t\t\t\t//ft._url = path + \"/0\";\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tft._slot = this.categoryInfo.slot;\r\n\t\t\t\t\tft._place = place;\r\n\r\n\t\t\t\t\tft.classList = [\r\n\t\t\t\t\t\tft._slot,\r\n\t\t\t\t\t\t\"item\" + this.id,\r\n\t\t\t\t\t\tft._place,\r\n\t\t\t\t\t\tft._raw.z,\r\n\t\t\t\t\t\t'z' + ft.z\r\n\t\t\t\t\t].join(' ');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\t__load_slot() {\r\n\t\tif (!this._raw.info.islot) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet islots = this._raw.info.islot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in islots) {\r\n\t\t\tconst slot = islots[i];\r\n\t\t\tconst slot_order = zMap[slot];\r\n\t\t\tthis.islot[slot] = slot_order;\r\n\t\t\t\t\r\n\t\t\tif (slot_order > this.slot_order) {//this.slot_order = Math.max(this.slot_order, slot_order);\r\n\t\t\t\tthis.slot_order = slot_order;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet vslots = this._raw.info.vslot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in vslots) {\r\n\t\t\tconst slot = vslots[i];\r\n\t\t\tthis.vslot[slot] = slot;\r\n\t\t}\r\n\t}\r\n\r\n\t_unload() {\r\n\t\tthis.fragments = null;\r\n\t\tthis.effect == null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget opacity() {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} opacity\r\n\t */\r\n\tset opacity(opacity) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.opacity = opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t */\r\n\tsetFilter(hue, sat, bri) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = hue;\r\n\t\t\t\t\t\tft.filter.sat = sat;\r\n\t\t\t\t\t\tft.filter.bri = bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get icon url\r\n\t * @see {@link ItemCategoryInfo.getIconUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconUrl() {\r\n\t\treturn ItemCategoryInfo.getIconUrl(this.id);\r\n\t}\r\n\r\n\t/**\r\n\t * get iconRaw url\r\n\t * @see {@link ItemCategoryInfo.getIconRawUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconRawUrl() {\r\n\t\treturn ItemCategoryInfo.getIconRawUrl(this.id);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @type {string}\r\n\t */\r\n\tget _animation_type() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @returns {typeof CharacterFragmentBase}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @returns {typeof FragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {{[actions:string]:{[\"0\"]:Sprite,[frames:string]:Sprite}}} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw;\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass CharacterAppearance extends CharacterAppearanceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"face\" || k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn chara.slots.body.fragments.body.textures[chara.action].length;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tconst d = this._raw[chara.action][chara.action_frame].delay;\r\n\t\tif (Number.isSafeInteger(d)) {\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 120;\r\n\t}\r\n}\r\n\r\nclass CharacterBody extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof BodyFragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn BodyFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterEquip extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof BodyFragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn BodyFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipCashWeapon extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.use_category = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {string} use_category - cash-weapon as [category]\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tif (!use_category && use_category != \"\") {\r\n\t\t\tthrow new TypeError(\"use_category\");\r\n\t\t}\r\n\r\n\t\tthis.use_category = use_category.slice(2, 4);\r\n\r\n\t\treturn super.load(url, id, cateInfo);\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {object} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw[this.use_category];\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url + this.use_category;\r\n\t}\r\n}\r\n\r\n\r\nclass CharacterHeadBase extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof FragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn FragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterHead extends CharacterHeadBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.elfEarFragment = null;\r\n\t\tthis.lefEarFragment = null;\r\n\t\tthis.highlefEarFragment = null;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tsuper.__load_fragments()\r\n\t\t\r\n\t\tif (this.fragments) {\r\n\t\t\tif (this.fragments.ear) {\r\n\t\t\t\tthis.elfEarFragment = this.fragments.ear;\r\n\t\t\t\tdelete this.fragments.ear;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.lefEar) {\r\n\t\t\t\tthis.lefEarFragment = this.fragments.lefEar;\r\n\t\t\t\tdelete this.fragments.lefEar;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.highlefEar) {\r\n\t\t\t\tthis.highlefEarFragment = this.fragments.highlefEar;\r\n\t\t\t\tdelete this.fragments.highlefEar;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget elfEar() {\r\n\t\treturn this.fragments.ear != null;\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (!this.elfEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.ear = this.elfEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.ear;\r\n\t\t}\r\n\t}\r\n\r\n\tget lefEar() {\r\n\t\treturn this.fragments.lefEar != null;\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (!this.lefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.lefEar = this.lefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.lefEar;\r\n\t\t}\r\n\t}\r\n\r\n\tget highlefEar() {\r\n\t\treturn this.fragments.highlefEar != null;\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (!this.highlefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.highlefEar = this.highlefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.highlefEar;\r\n\t\t}\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterHair extends CharacterHeadBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterBodyFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * hair color mix\r\n\t * @override\r\n\t * @returns {typeof HairFragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn HairFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterFaceBase extends CharacterHeadBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn chara.slots.face.fragments.face.textures[chara.emotion].length;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tconst d = this._raw[chara.emotion][chara.emotion_frame].delay;\r\n\t\tif (d != null) {//!isNaN(d) && isFinite(d)\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n}\r\nclass CharacterFace extends CharacterFaceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"emotion\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterFaceFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterFaceFragment;\r\n\t}\r\n}\r\nclass CharacterFaceAcc extends CharacterFaceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"emotion\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterFaceFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterFaceFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterTamingMob extends CharacterAppearance {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget type() {\r\n\t\treturn this._raw.info.tamingMob;\r\n\t}\r\n\r\n\tget actionMap() {\r\n\t\treturn this._raw.characterAction;\r\n\t}\r\n\r\n\tget emotionMap() {\r\n\t\treturn this._raw.characterEmotion;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Vec2} relative\r\n\t * @param {FragmentTexture} body\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\tadj_pos(relative, body, chara) {\r\n\t\tconst frag = this.fragments[0];//default\r\n\t\tif (frag) {\r\n\t\t\tconst tm = frag.getTexture(chara);\r\n\t\t\tif (tm) {\r\n\t\t\t\treturn relative.plus(tm.navel.minus(body.navel));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn relative;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn chara.slots.body.fragments.body.textures[chara._ride_action].length;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tconst d = Math.trunc(this._raw[chara._ride_action][chara.action_frame].delay);//?? _ride_action_frame => action_frame\r\n\t\tif (Number.isSafeInteger(d)) {\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\treturn 120;\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"_ride_action\";\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof CharacterTamingMobFragment}\r\n\t */\r\n\tget FragmentConstructor() {\r\n\t\treturn CharacterTamingMobFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {typeof FragmentTexture}\r\n\t */\r\n\tget FragmentTextureConstructor() {\r\n\t\treturn FragmentTexture;\r\n\t}\r\n}\r\n\r\n\r\nItemCategoryInfo._info['0000'].FragmentType = CharacterBody;\t\t//\tbody\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0001'].FragmentType = CharacterHead;\t\t//\telfEar\t\t\t-> CharacterHeadBase -> CharacterHead\r\nItemCategoryInfo._info['0002'].FragmentType = CharacterFace;\t\t//\tFace\t\t\t-> CharacterHeadBase -> CharacterFaceBase -> CharacterFace\r\nItemCategoryInfo._info['0003'].FragmentType = CharacterHair;\t\t//\tHair\t\t\t-> CharacterHeadBase -> CharacterHair\r\nItemCategoryInfo._info['0004'].FragmentType = CharacterHair;\t\t//\tHair\t\t\t-> CharacterHeadBase -> CharacterHair\r\n\r\nItemCategoryInfo._info['0100'].FragmentType = CharacterEquip;\t\t//\tCap\t\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0101'].FragmentType = CharacterFaceAcc;\t\t//\taccessoryFace\t-> CharacterHeadBase -> CharacterFaceBase -> CharacterFaceAcc\r\nItemCategoryInfo._info['0102'].FragmentType = CharacterEquip;\t\t//\taccessoryEyes\t-> CharacterEquip\r\nItemCategoryInfo._info['0103'].FragmentType = CharacterEquip;\t\t//\taccessoryEars\t-> CharacterEquip\r\nItemCategoryInfo._info['0104'].FragmentType = CharacterEquip;\t\t//\tCoat\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0105'].FragmentType = CharacterEquip;\t\t//\tLongcoat\t\t-> CharacterBody\r\nItemCategoryInfo._info['0106'].FragmentType = CharacterEquip;\t\t//\tPants\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0107'].FragmentType = CharacterEquip;\t\t//\tShoes\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0108'].FragmentType = CharacterEquip;\t\t//\tGlove\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0109'].FragmentType = CharacterEquip;\t\t//\tShield\t\t\t-> CharacterBody\r\nItemCategoryInfo._info['0110'].FragmentType = CharacterEquip;\t\t//\tCape\t\t\t-> CharacterBody\r\n\r\nItemCategoryInfo._info['0170'].FragmentType = CharacterEquipCashWeapon;\t//\tcash-weapon\t-> CharacterEquip\r\n\r\nItemCategoryInfo._info['019'].FragmentType = CharacterTamingMob;\t//\tTamingMob\t\t-> CharacterTamingMob\r\n\r\n\r\nclass CharacterSlots {\r\n\tconstructor() {\r\n\t\t\t\r\n\t\t/** @type {CharacterAppearanceBase[]} */\r\n\t\tthis._ordered_slot = [];\r\n\r\n\r\n\t\t/** @type {CharacterHair} */\r\n\t\tthis._hair = null;\r\n\t\t/** @type {CharacterHair} */\r\n\t\tthis._hair2 = null;\r\n\t\t/** @type {CharacterHair} 0~1.0 */\r\n\t\tthis._hairMix2 = null;\r\n\t\t/** @type {CharacterHair} */\r\n\t\tthis._hair3 = null;\r\n\t\t/** @type {CharacterHair} 0~1.0 */\r\n\t\tthis._hairMix3 = null;\r\n\r\n\r\n\t\t/** @type {CharacterEquipBody} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.head = null;\r\n\r\n\t\t/** @type {CharacterFace} */\r\n\t\tthis.face = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.hair = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 1 */\r\n\t\tthis.cap = null;\r\n\r\n\t\t/** @type {CharacterFace} - 2 */\r\n\t\tthis.accessoryFace = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 3*/\r\n\t\tthis.accessoryEyes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 4 */\r\n\t\tthis.accessoryEars = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.coat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.longcoat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 6 */\r\n\t\tthis.pants = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 7 */\r\n\t\tthis.shoes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 8 */\r\n\t\tthis.glove = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 9 */\r\n\t\tthis.cape = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 10 */\r\n\t\tthis.shield = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 11 */\r\n\t\tthis.weapon = null;\r\n\t\t\r\n\t\t/** @type {CharacterTamingMob} */\r\n\t\tthis.tamingMob = null;\r\n\t\t\r\n\t\t{\r\n\t\t\tObject.defineProperty(this, \"_ordered_slot\", {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: []\r\n\t\t\t});\r\n\r\n\t\t\tObject.defineProperty(this, \"_hair\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair2\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix2\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair3\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix3\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {CharacterHair} */\r\n\tget hair() {\r\n\t\treturn this._hair;\r\n\t}\r\n\tset hair(value) {\r\n\t\tthis._hair = value;\r\n\t\tif (value) {\r\n\t\t\tif (this._hair2 && this._hairMix2) {\r\n\t\t\t\tthis.hairColor2 = this.hairColor2;\r\n\t\t\t\tthis.hairMix2 = this.hairMix2;\r\n\t\t\t}\r\n\t\t\tif (this._hair3 && this._hairMix3) {\r\n\t\t\t\tthis.hairColor3 = this.hairColor3;\r\n\t\t\t\tthis.hairMix3 = this.hairMix3;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync __loadColoredHair(color) {\r\n\t\tconst id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tconst url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\" : \"\") + id}`;\r\n\t\t\tconst use_category = undefined;\r\n\r\n\t\t\tlet hair = new CharacterHair();\r\n\r\n\t\t\tawait hair.load(url, id, cateInfo, use_category);\r\n\r\n\t\t\treturn hair;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget hairColor2() {\r\n\t\tif (this._hair2) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair2.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor2(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc2Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair2 || hc2Id != this._hair2.id) {\r\n\t\t\tif (hc2Id == this._hair.id) {\r\n\t\t\t\tthis._hair2 = null;\r\n\t\t\t\tthis.hairMix2 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair2 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair2.then(hair2 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair2;\r\n\r\n\t\t\t\t\tthis._hair2 = hair2;\r\n\t\t\t\t\tif (this._hair2 && this.hairMix2 != null) {\r\n\t\t\t\t\t\tthis.hairMix2 = this.hairMix2;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix2 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairMix2() {\r\n\t\treturn this._hairMix2;\r\n\t}\r\n\tset hairMix2(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair2).then(() => {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this._hair2;\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph2 = ft;\r\n\t\t\t\t\t\t\tori.graph2.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix2 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairColor3() {\r\n\t\tif (this._hair3) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair3.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor3(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc3Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair3 || this._hair3.id != hc3Id) {\r\n\t\t\tif (this._hair.id == hc3Id || this._hair2.id == hc3Id) {\r\n\t\t\t\tthis._hair3 = null;\r\n\t\t\t\tthis.hairMix3 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair3 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair3.then(hair3 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair3;\r\n\r\n\t\t\t\t\tthis._hair3 = hair3;\r\n\t\t\t\t\tif (this._hair3 && this.hairMix3 != null) {\r\n\t\t\t\t\t\tthis.hairMix3 = this.hairMix3;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix3 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hairMix3() {\r\n\t\treturn this._hairMix3;\r\n\t}\r\n\tset hairMix3(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair3).then(() => {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this._hair3;\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph3 = ft;\r\n\t\t\t\t\t\t\tori.graph3.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix3 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t//__order_slot() {\r\n\t//\tlet slot_map = new Map();\r\n\t//\r\n\t//\tfor (let i in this) {\r\n\t//\t\tlet equip = this[i];\r\n\t//\r\n\t//\t\tequip.cs\r\n\t//\t}\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {CharacterAppearanceBase} loadedEquip\r\n\t * @param {string} use_category - category which used of cash-weapon\r\n\t */\r\n\tasync _use(id, loadedEquip, use_category) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tlet url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\":\"\") + id}`;\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item;\r\n\r\n\t\t\tif (loadedEquip instanceof CharacterAppearanceBase) {\r\n\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\tdebugger;\r\n\t\t\t\titem = loadedEquip;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (loadedEquip) {\r\n\t\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tconst fragmentType = cateInfo.FragmentType || CharacterEquip;\r\n\r\n\t\t\t\titem = new fragmentType();\r\n\t\t\t}\r\n\t\t\t/** _use_loaded_equip */\r\n\t\t\tif (0) {\r\n\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t}\r\n\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t}\r\n\r\n\t\t\tlet is_exist = loadedEquip || await item.load(url, id, cateInfo, use_category);\r\n\t\t\tif (is_exist) {\r\n\t\t\t\t/** _use_loaded_equip */\r\n\t\t\t\tif (1) {\r\n\t\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.warn(\"item(\" + id + \") is not exist\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {boolean}\r\n\t */\r\n\t_unuse(id) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet cateInfo, equip;\r\n\r\n\t\tif (id instanceof CharacterAppearanceBase) {\r\n\t\t\tequip = id;\r\n\t\t\tid = equip.id;\r\n\t\t\tcateInfo = equip.categoryInfo;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcateInfo = ItemCategoryInfo.get(id);\r\n\t\t}\r\n\t\t\r\n\t\tconst slotName = cateInfo.slot;\r\n\r\n\t\tif (slotName != \"head\" && slotName != \"body\") {\r\n\t\t\tif (this[slotName] && this[slotName].id == id) {\r\n\t\t\t\tequip = this[slotName];\r\n\t\t\t\tfor (let slot in equip.islot) {\r\n\t\t\t\t\tlet order = equip.islot[slot];\r\n\t\t\t\t\tif (this._ordered_slot[order]) {\r\n\t\t\t\t\t\tthis._ordered_slot[order]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._ordered_slot[order];\r\n\t\t\t\t}\r\n\t\t\t\tthis[slotName] = null;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t_clear() {\r\n\t\t//this.body = null;\r\n\t\t//this.head = null;\r\n\t\tthis.face = null;\r\n\t\tthis.hair = null;\r\n\t\tthis.cap = null;\r\n\t\tthis.accessoryFace = null;\r\n\t\tthis.accessoryEyes = null;\r\n\t\tthis.accessoryEars = null;\r\n\t\tthis.coat = null;\r\n\t\tthis.longcoat = null;\r\n\t\tthis.pants = null;\r\n\t\tthis.shoes = null;\r\n\t\tthis.glove = null;\r\n\t\tthis.cape = null;\r\n\t\tthis.shield = null;\r\n\r\n\t\t//temp\r\n\t\tlet head = this.head;\r\n\t\tlet body = this.body;\r\n\r\n\t\t//clear\r\n\t\tthis._ordered_slot = [];\r\n\r\n\t\t//restore\r\n\t\tif (head) {\r\n\t\t\tthis._ordered_slot[head.slot_order] = head;\r\n\t\t}\r\n\t\tif (body) {\r\n\t\t\tthis._ordered_slot[body.slot_order] = body;\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify() {\r\n\t\tlet slots = [\"c\"];\r\n\t\t\t\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id + \"|\" + this.face.id);\r\n\t\tif (this.hair) {\r\n\t\t\tlet ha = [];\r\n\t\t\tha.push(this.hair.id);\r\n\t\t\tif (this.hairColor2 && this.hairMix2 > 0) ha.push(this.hairColor2 + \"%\" + Math.trunc(this.hairMix2 * 100));\r\n\t\t\tif (this.hairColor3 && this.hairMix3 > 0) ha.push(this.hairColor3 + \"%\" + Math.trunc(this.hairMix3 * 100));\r\n\t\t\tslots.push(ha.join(\"|\"));\r\n\t\t}\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots.join(\",\");\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\tlet slots = [];\r\n\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id);\r\n\t\tif (this.hair) slots.push(this.hair.id);\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots;\r\n\t}\r\n\r\n\t/**\r\n\t * returns: [face, hair, cap, ..., weapon]\r\n\t */\r\n\t*enumerate() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.hair) yield this.hair;\r\n\r\n\t\tyield* this.enumerate_equip();\r\n\t}\r\n\t*enumerate_equip() {\r\n\t\tif (this.cap) yield this.cap;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t\tif (this.accessoryEyes) yield this.accessoryEyes;\r\n\t\tif (this.accessoryEars) yield this.accessoryEars;\r\n\t\tif (this.coat) yield this.coat;\r\n\t\tif (this.longcoat) yield this.longcoat;\r\n\t\tif (this.pants) yield this.pants;\r\n\t\tif (this.shoes) yield this.shoes;\r\n\t\tif (this.glove) yield this.glove;\r\n\t\tif (this.shield) yield this.shield;\r\n\t\tif (this.cape) yield this.cape;\r\n\t\tif (this.weapon) yield this.weapon;\r\n\t}\r\n\t*enumerate_face() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t}\r\n}\r\n\r\nclass CharacterChangeLog {\r\n\tconstructor() {\r\n\t\t/** @type {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\t\tthis.ear = undefined;\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.useEquip = [];\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.unuseEquip = [];\r\n\t\t\r\n\t\t/** @type {string} - hair2 id */\r\n\t\tthis.hair2 = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.hairMix2 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hair3 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hairMix3 = undefined;\r\n\r\n\t\t/** @type {string} weapon => equip id */\r\n\t\tthis.weapon = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.ear = undefined;\r\n\t\tthis.useEquip = [];\r\n\t\tthis.unuseEquip = [];\r\n\t\tthis.hair2 = undefined;\r\n\t\tthis.hairMix2 = undefined;\r\n\t\t//this.hair3 = undefined;\r\n\t\t//this.hairMix3 = undefined;\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n}\r\n\r\nexport class CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tthis._$dirty = 0;//force update vue\r\n\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.job = null;\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.subJob = null;\r\n\r\n\t\t/** @type {ActionAnimation} */\r\n\t\tthis.actani = new ActionAnimation();\r\n\r\n\t\t/** @type {number} - animation speed rate */\r\n\t\tthis.speed = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.fixed_speed = false;\r\n\r\n\t\tthis.hideBody = false;\r\n\r\n\t\tthis._ride_action = \"stand1\";\r\n\t\t\r\n\t\tthis._action = \"stand1\";\r\n\t\tthis._action_frame = 0;\r\n\r\n\t\tthis._emotion = \"blink\";\r\n\t\tthis._emotion_frame = 0;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis._emotion_frame_sequence = [0, 1, 2, 1];\r\n\r\n\t\t/** @type {CharacterSlots} */\r\n\t\tthis.slots = new CharacterSlots();\r\n\r\n\t\t/**\r\n\t\t * is require update render data\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.__require_update = true;\r\n\r\n\t\t/** @type {FragmentTexture[]} */\r\n\t\tthis.__frag_list = [];\r\n\r\n\t\t/** @type {CharacterChangeLog} **/\r\n\t\tthis.$$changeLog = new CharacterChangeLog();\r\n\t}\r\n\r\n\t_clone() {\r\n\t\talert(this.constructor.name + \"::_clone\");\r\n\r\n\t\t/** @type {CharacterAnimationBase} */\r\n\t\tlet nc = new this.constructor();//not must CharacterRender\r\n\t\tif (!nc) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnc.speed = 0;\r\n\r\n\t\tnc.x = this.x;\r\n\t\tnc.y = this.y;\r\n\t\tnc.angle = this.angle;\r\n\r\n\t\tnc.action = this.action;\r\n\t\tnc.action_frame = this.action_frame;\r\n\r\n\t\tnc.emotion = this._emotion;\r\n\t\tnc.emotion_frame = this.emotion_frame;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tnc.slots[i] = this.slots[i];//not need colne ?\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nc;\r\n\t}\r\n\t\t\r\n\t_waitFrameTexturesLoaded() {\r\n\t\tlet tasks = [];\r\n\t\tfor (let i in this.slots) {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\t\tlet frag = item.fragments[j];\r\n\t\t\t\t\tlet count = frag.getFrameCount(this);\r\n\t\t\t\t\tfor (let k = 0; k < count; ++k) {\r\n\t\t\t\t\t\tlet ft = frag.getFrameTexture(this, k);\r\n\t\t\t\t\t\tif (ft && !ft._isLoaded_or_doload()) {\r\n\t\t\t\t\t\t\ttasks.push(ft.$promise);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * init animation status\r\n\t */\r\n\tinitAnimation() {\r\n\t\t/** @type {string} */\r\n\t\tthis.action = \"stand1\";\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._action_frame = 0;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.emotion = \"blink\";\r\n\t\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_frame = 0;\r\n\t}\r\n\r\n\t/** @type {number} - 0~1 */\r\n\tgetSpeed() {\r\n\t\treturn this.fixed_speed ? 1 : this.speed;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget elfEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.elfEar;\r\n\t\t}\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.elfEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget lefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar;\r\n\t\t}\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.lefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget highlefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.highlefEar;\r\n\t\t}\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.highlefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\tget ear() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar ? \"lef\" : (this.slots.head.elfEar ? \"elf\" : (this.slots.head.highlefEar ? \"highlef\" : \"human\"));\r\n\t\t}\r\n\t}\r\n\tset ear(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tif (value == \"elf\") {\r\n\t\t\t\tthis.slots.head.elfEar = true;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"lef\") {\r\n\t\t\t\tthis.slots.head.lefEar = true;\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"highlef\") {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = true;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = \"human\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.$$changeLog.ear = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget action() {\r\n\t\t//if (this.slots.tamingMob) {\r\n\t\t//\tconst actmap = this.slots.tamingMob.actionMap;\r\n\t\t//\tif (actmap) {\r\n\t\t//\t\treturn actmap[this._action];\r\n\t\t//\t}\r\n\t\t//\treturn \"sit\";//default\r\n\t\t//}\r\n\t\treturn this._action;\r\n\t}\r\n\tset action(act) {\r\n\t\tif (this.slots.tamingMob) {\r\n\t\t\tlet _act;\r\n\r\n\t\t\tthis._ride_action = act;\r\n\r\n\t\t\tif (this.slots.tamingMob.actionMap) {\r\n\t\t\t\t_act = this.slots.tamingMob.actionMap[act];\r\n\r\n\t\t\t\tif (_act == \"hideBody\") {\r\n\t\t\t\t\tthis.hideBody = true;\r\n\r\n\t\t\t\t\t//TODO: hideBody act=?\r\n\r\n\t\t\t\t\tthis._action = act;\r\n\t\t\t\t\tif (this.actani._action != act) {\r\n\t\t\t\t\t\tthis.actani.reload(act);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.__require_update |= true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.hideBody = false;\r\n\r\n\t\t\t\t\tthis._action = _act;\r\n\t\t\t\t\tif (this.actani._action != _act) {\r\n\t\t\t\t\t\tthis.actani.reload(_act);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.__require_update |= true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (act == \"rope\") {\r\n\t\t\t\t\tthis._action = \"rope\";//default\r\n\t\t\t\t}\r\n\t\t\t\telse if (act == \"ladder\") {\r\n\t\t\t\t\tthis._action = \"ladder\";//default\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._action = \"sit\";//default\r\n\t\t\t\t}\r\n\t\t\t\tif (this.actani._action != act) {\r\n\t\t\t\t\tthis.actani.reload(act);\r\n\t\t\t\t}\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.hideBody = false;\r\n\t\t\tthis._ride_action = null;\r\n\r\n\t\t\tif (this.actani._action != act && this.slots.body) {\r\n\t\t\t\tthis._action = act;\r\n\t\t\t\tthis.actani.reload(act);\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame() {\r\n\t\treturn this._action_frame;\r\n\t}\r\n\tset action_frame(value) {\r\n\t\tthis._action_frame = value;\r\n\t\tthis.__require_update |= true;\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._action_frame = Number(value) | 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget emotion() {\r\n\t\treturn this._emotion;\r\n\t}\r\n\tset emotion(emo) {\r\n\t\tif (this._emotion != emo && this.slots.face && this.slots.face.fragments.face.textures[emo]) {\r\n\t\t\tthis._emotion = emo;\r\n\t\t\tthis._emotion_frame = 0;\r\n\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\tthis._emotion_frame_sequence = [...circularSequence(this.emotion_frame_count)];\r\n\r\n\t\t\tthis.__require_update |= true;\r\n\t\t}\r\n\t}\r\n\r\n\t*emotion_frame_sequence_generator(length) {\r\n\t\tfor (; ;) {\r\n\t\t\t//TODO: random blink\r\n\t\t\tyield* circularSequence(length);\r\n\r\n\t\t\tfor (; Math.random() < 0.5;) {\r\n\t\t\t\tyield 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t/** @type {number} */\r\n\tget emotion_frame() {\r\n\t\tlet f = this._emotion_frame_sequence[this._emotion_frame % this._emotion_frame_sequence.length];\r\n\t\treturn f;\r\n\t}\r\n\tset emotion_frame(value) {\r\n\t\tthis._emotion_frame = value;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis.__require_update |= true;\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._emotion_frame = Number(value) | 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} next\r\n\t */\r\n\t_get_emotion_next_frame(next) {\r\n\t\tlet f = this._emotion_frame + next;\r\n\t\tf = f < 0 ? (this._emotion_frame_sequence.length - 1) : (f % this._emotion_frame_sequence.length);\r\n\t\treturn this._emotion_frame_sequence[f];\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_time() {\r\n\t\treturn this._emotion_time;\r\n\t}\r\n\tset emotion_time(time) {\r\n\t\tif (this.emotion_frame_count) {\r\n\t\t\tif (time < this.emotion_delay) {\r\n\t\t\t\tthis._emotion_time = time;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\t\t++this._emotion_frame;\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget emotion_delay() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn this.slots.face.getDelay(this);\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.face) {\r\n\t\t\t\treturn this.slots.face.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp - 0 <= stamp < Infinity\r\n\t */\r\n\t_update(_stamp) {\r\n\t\tlet stamp = _stamp * this.getSpeed();\r\n\t\t\r\n\t\tif (this.actani) {\r\n\t\t\tif (this.actani.isEnd() && this.actani.loop) {\r\n\t\t\t\tthis.actani.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.actani.update(stamp, this);\r\n\t\t}\r\n\r\n\t\tthis.emotion_time += _stamp;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet equip = this.slots[i];\r\n\t\t\tif (equip && equip.effect && equip.effect.enable) {\r\n\t\t\t\tequip.effect.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis._update(stamp);\r\n\t}\r\n\r\n\t__forceUpdate(stamp) {\r\n\t\tthis._$dirty = Math.random();\r\n\t\tthis._update(stamp | 0);\r\n\t\tthis.__update_frag_list();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} x\r\n\t * @param {number} y, \r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\t_draw(renderer, x, y, angle, flip) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\tif (this.__require_update) {\r\n\t\t\tthis.__update_frag_list();\r\n\t\t\tthis.__require_update = false;\r\n\t\t}\r\n\r\n\t\t//list.filter(a=>a&&a._raw.map).forEach(a=>{ for (let i in a._raw.map) { if (q[i]) { q[i].push(a); } else { q[i] = [a]; } } })\r\n\t\tthis.__draw_list(renderer, this.__frag_list, x, y, angle, flip);\r\n\r\n\t\trenderer.popGlobalAlpha();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {FragmentTexture[]} list\r\n\t */\r\n\t__draw_list(renderer, list, x, y, angle, flip) {\r\n\t\trenderer.pushMatrix();\r\n\r\n\t\trenderer.translate(x, y);\r\n\t\t\r\n\t\tif (0) {\r\n\t\t\tlet ctx = renderer.ctx;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(100, 0);\r\n\t\t\tctx.strokeStyle = \"#F00\";\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(0, 100);\r\n\t\t\tctx.strokeStyle = \"#0F0\";\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t\trenderer.rotate(window.m_a || angle);\r\n\r\n\t\tif (flip) {\r\n\t\t\trenderer.scale(-1, 1);\r\n\t\t}\r\n\t\t//{\r\n\t\t//\tlet ctx = renderer.ctx;\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(100, 0);\r\n\t\t//\tctx.strokeStyle = \"#F00\";\r\n\t\t//\tctx.stroke();\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(0, 100);\r\n\t\t//\tctx.strokeStyle = \"#0F0\";\r\n\t\t//\tctx.stroke();\r\n\t\t//}\r\n\r\n\t\t{\r\n\t\t\tfor (let i in this.slots) {\r\n\t\t\t\tlet equip = this.slots[i];\r\n\t\t\t\tif (equip && equip.effect) {\r\n\t\t\t\t\tequip.effect.render(renderer, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i in list) {\r\n\t\t\t\tlet ft = list[i];\r\n\t\t\t\tft.render(renderer, this);\r\n\t\t\t}\r\n\t\t}\r\n\t\trenderer.popMatrix();\r\n\t}\r\n\t__update_frag_list() {\r\n\t\tthis.__frag_list = [];\r\n\t\t\r\n\t\t/** @type {Array<CharacterAppearanceBase>[]} */\r\n\t\tlet slots = {};\r\n\t\t\r\n\t\tfor (let i = 2; i <= 3; ++i) {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this.slots[\"_hair\" + i];\r\n\t\t\t\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\t\tfor (let i in this.slots._ordered_slot) {\r\n\t\t\t/** @type {CharacterAppearanceBase} */\r\n\t\t\tlet item = this.slots._ordered_slot[i];\r\n\t\t\t\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\t\t\r\n\t\t{//back\r\n\t\t\tlet is_back = false;\r\n\t\t\t\r\n\t\t\tfor (let i in slots) {\r\n\t\t\t\t/** @type {FragmentTexture[]} */\r\n\t\t\t\tlet fts = slots[i];\r\n\t\t\t\tfor (let j in fts) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = fts[j];\r\n\t\t\t\t\tif (is_back) {\r\n\t\t\t\t\t\tif (ft._place.startsWith(\"face\")) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ft._place.startsWith(\"backHair\")) {\r\n\t\t\t\t\t\tis_back = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t{\r\n\t\t\tlet ae = this.__frag_list[114];//HACK: Ae\r\n\t\t\tif (ae) {\r\n\t\t\t\tthis.__frag_list.push(ae);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._calcBoundBox();\r\n\t}\r\n\t/**\r\n\t * @param {Array<CharacterAppearanceBase>[]} slots\r\n\t * @param {CharacterAppearanceBase} item\r\n\t */\r\n\t__add_equip_to_frag_list(slots, item) {\r\n\t\t// if equip not use then value is mumber(slot_order) where this.slots._ordered_slot\r\n\t\tif (item == null) {\r\n\t\t\treturn;//debugger;\r\n\t\t}\r\n\t\telse if (item > 0) {// typeof item == 'number'; item != null && (item instanceof CharacterAppearanceBase || item >= 0)\r\n\t\t\treturn;//continue;\r\n\t\t}\r\n\r\n\t\t// init slots\r\n\t\tfor (let j in item.vslot) {\r\n\t\t\tlet slot = item.vslot[j];\r\n\t\t\tslots[slot] = [];\r\n\t\t}\r\n\r\n\t\tfor (let j in item.fragments) {//foreach equip place\r\n\t\t\tlet slot = sMap[j];\r\n\t\t\tif (slot != null) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (j == \"default\") {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tslot = item._raw.info.islot;\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//item.fragments[j].visible = true;\r\n\t\t}\r\n\t}\r\n\t/** @param {FragmentTexture} ft */\r\n\t__add_frag_to_list(ft) {\r\n\t\tft.update(this);\r\n\t\tthis.__frag_list[ft.z] = ft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * calc current frame bound box and restore result\r\n\t * @returns {Rectangle}\r\n\t */\r\n\t_calcBoundBox() {\r\n\t\tlet left = 0, top = 0, right = 0, bottom = 0;\r\n\r\n\t\tfor (let i in this.__frag_list) {\r\n\t\t\tlet ft = this.__frag_list[i];\r\n\t\t\tif (ft.texture && ft.relative) {\r\n\t\t\t\tlet x0 = ft.relative.x;\r\n\t\t\t\tlet y0 = ft.relative.y;\r\n\t\t\t\tlet x1 = x0 + ft.width;\r\n\t\t\t\tlet y1 = y0 + ft.height;\r\n\r\n\t\t\t\tleft = Math.min(left, x0);\r\n\t\t\t\ttop = Math.min(top, y0);\r\n\t\t\t\tright = Math.max(right, x1);\r\n\t\t\t\tbottom = Math.max(bottom, y1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._boundBox = new Rectangle(\r\n\t\t\tMath.trunc(left),\r\n\t\t\tMath.trunc(top),\r\n\t\t\tMath.trunc(right - left),\r\n\t\t\tMath.trunc(bottom - top)\r\n\t\t);\r\n\t\treturn this._boundBox;\r\n\t}\r\n\t\r\n\ttoJSON() {\r\n\t\tlet obj = {\r\n\t\t\thair2: this.slots._hair2.id,\r\n\t\t\thairMix2: this.slots.hairMix2,\r\n\t\t\tslots: this.slots.toJSON(),\r\n\t\t};\r\n\r\n\t\tif (this.slots.head.elfEar) {\r\n\t\t\tobj.ear = \"elf\";\r\n\t\t}\r\n\t\telse if (this.slots.head.lefEar) {\r\n\t\t\tobj.ear = \"lef\";\r\n\t\t}\r\n\t\telse if (this.slots.head.highlefEar) {\r\n\t\t\tobj.ear = \"highlef\";\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nexport class CharacterRenderer extends CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {number} - position x */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} - position y */\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {number} - where layer */\r\n\t\tthis.z = 5;\r\n\r\n\t\t/** @type {number} - translate x once frame */\r\n\t\tthis.tx = 0;\r\n\t\t/** @type {number} - translate y once frame */\r\n\t\tthis.ty = 0;\r\n\t\t\r\n\t\tthis.angle = 0;\r\n\t\tthis.front = -1;\r\n\r\n\t\t/** @type {Promise<void>[]} */\r\n\t\tthis.__load_task = [];\r\n\r\n\t\t/** @type {function(IRenderer)} */\r\n\t\tthis.render = function (renderer) {\r\n\t\t\t//not ready to render\r\n\t\t\t//if load then set load render = _render\r\n\t\t}\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis._boundBox = null;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\tlet result = await Promise.all([\r\n\t\t\t$get.data(\"/zmap\"),\r\n\t\t\t$get.data(\"/smap\"),\r\n\t\t\tItemEffect.Init(),\r\n\t\t\tActionAnimation.Init(),//action definition\r\n\t\t]);\r\n\t\t\r\n\t\tzMap = {};\r\n\t\tObject.keys(result[0]).reverse().forEach((k, i) => zMap[k] = i + 1);\r\n\r\n\t\tsMap = result[1];\r\n\t}\r\n\r\n\tload() {\r\n\t\t//load body and head for calc relative position\r\n\t\tthis.use(\"00002012\");\r\n\t\tthis.use(\"00012012\");\r\n\r\n\t\tlet $promise = Promise.all([...this.__load_task]);\r\n\t\t(function (that, $promise) {\r\n\t\t\t$promise.then(function (result) {\r\n\t\t\t\tthat.initAnimation();\r\n\t\t\t\tthat.render = that._render;\r\n\t\t\t});\r\n\t\t})(this, $promise);\r\n\r\n\t\treturn $promise;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.waitLoaded();\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_render(renderer) {\r\n\t\tconst x = Math.trunc(this.x + this.tx);\r\n\t\tconst y = Math.trunc(this.y + this.ty);\r\n\t\t\r\n\t\tthis._draw(renderer, x, y, this.angle, this.front > 0);\r\n\t\t\r\n\t\t//this.tx = 0;//auto clear\r\n\t\t//this.ty = 0;//auto clear\r\n\t}\r\n\t\r\n\t_setup_test() {\r\n\t\tthis.use(\"00026509\");\r\n\r\n\t\tthis.use(\"00044041\");\r\n\r\n\t\t//this.use(\"01022274\");\r\n\r\n\t\tthis.use(\"01053169\");\r\n\r\n\t\tthis.use(\"01071077\");\r\n\r\n\t\t//this.use(\"01102960\");\r\n\t}\r\n\r\n\t\r\n\tasync __synchronize(stamp) {\r\n\t\tthis.__forceUpdate(stamp);\r\n\t\r\n\t\tawait this.waitLoaded();\r\n\t\tawait this._waitFrameTexturesLoaded();\r\n\t}\r\n\tasync waitLoaded() {\r\n\t\tlet tasks = this.__load_task;\r\n\t\tif (tasks && tasks.length) {\r\n\t\t\tawait Promise.all(tasks).then(() => {\r\n\t\t\t\tthis.__load_task = [];\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t//isLoading() {\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {string} category - category of cash-weapon\r\n\t */\r\n\tasync use(id, category) {\r\n\t\tif (!category) {\r\n\t\t\tcategory = ItemCategoryInfo.getJobWeaponCategory(this.job);\r\n\t\t}\r\n\t\tconst item_type = id[0];\r\n\t\tswitch (item_type) {\r\n\t\t\tcase \"0\"://equip\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ItemCategoryInfo.isCashWeapon(id)) {\r\n\t\t\t\t\t\t//this.$$changeLog.weaponType = ss[1];/??\r\n\t\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\r\n\t\t\t\t\tlet task = this.slots._use(id, null, category);\r\n\t\t\t\t\tthis.__load_task.push(task);\r\n\t\t\t\t\tawait task;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (id.startsWith(\"019\")) {\r\n\t\t\t\t\t\tthis.action = this.action;//force update action\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.__update_frag_list();\r\n\t\t\t\t\tthis._calcBoundBox();\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tunuse(id) {\r\n\t\tdebugger;\r\n\t\tif (id[0] == \"0\") {//equip\r\n\t\t\tlet result = this.slots._unuse(id);\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.$$changeLog.unuseEquip.push(id);\r\n\t\t\t\tthis._calcBoundBox();\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t_parse(code) {\r\n\t\tif (!code) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet es = code.split(\",\");\r\n\t\tthis.slots._clear();\r\n\t\tes.forEach((v, i, a) => {\r\n\t\t\tif (v.indexOf(\"|\") >= 0) {\r\n\t\t\t\tconst ss = v.split(\"|\");\r\n\t\t\t\tconst cate = ItemCategoryInfo.get(ss[0]);\r\n\t\t\t\tlet id;\r\n\t\t\t\tif (cate.slot == \"face\") {\r\n\t\t\t\t\tid = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"hair\") {\r\n\t\t\t\t\tconst slots = this.slots;\r\n\t\t\t\t\tlet h2 = ss[1];\r\n\t\t\t\t\tlet h3 = ss[2];\r\n\t\t\t\t\t//\r\n\t\t\t\t\tid = ss[0];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id).then(() => {\r\n\t\t\t\t\t\tif (h2 && h2.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h2.split(\"%\");\r\n\t\t\t\t\t\t\tconst c2 = hc[0];\r\n\t\t\t\t\t\t\tconst m2 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair2 = c2;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix2 = m2;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor2 = c2;\r\n\t\t\t\t\t\t\tslots.hairMix2 = m2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (h3 && h3.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h3.split(\"%\");\r\n\t\t\t\t\t\t\tconst c3 = hc[0];\r\n\t\t\t\t\t\t\tconst m3 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair3 = c3;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix3 = m3;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor3 = hc[0];\r\n\t\t\t\t\t\t\tslots.hairMix4 = hc[1] / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"weapon\") {\r\n\t\t\t\t\tthis.$$changeLog.weaponType = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t\tthis.use.apply(this, ss, ss[1]);//this.use(ss[0], ss[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (Number.isFinite(parseInt(v, 10))) {\r\n\t\t\t\tthis.use(v);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @type {string} col\r\n\t */\r\n\tget hairColor() {\r\n\t\tif (this.slots.hair) {\r\n\t\t\treturn CharacterRenderConfig.getHairColor(this.slots.hair.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset hairColor(col) {\r\n\t\tif (this.slots.hair && col != this.hairColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorHairID(this.slots.hair.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} col\r\n\t */\r\n\tget faceColor() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn CharacterRenderConfig.getFaceColor(this.slots.face.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset faceColor(col) {\r\n\t\tif (this.slots.face && col != this.faceColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorFaceID(this.slots.face.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterChangeLog} changeLog\r\n\t */\r\n\tcommitChange(changeLog) {\r\n\t\tif (changeLog.ear) {\r\n\t\t\tthis.ear = changeLog.ear;\r\n\t\t}\r\n\r\n\t\tif (this.useEquip) {\r\n\t\t\tfor (let id of this.useEquip) {\r\n\t\t\t\tthis.use(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.unuseEquip) {\r\n\t\t\tfor (let id of this.unuseEquip) {\r\n\t\t\t\tthis.unuse(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair2 && changeLog.hairMix2) {\r\n\t\t\tthis.slots.hairColor2 = changeLog.hair2;\r\n\t\t\tthis.slots.hairMix2 = changeLog.hairMix2;\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair3 && changeLog.hairMix3) {\r\n\t\t\t//this.slots.hairColor3 = changeLog.hair3;\r\n\t\t\t//this.slots.hairMix3 = changeLog.hairMix3;\r\n\t\t}\r\n\t\t\r\n\t\tif (changeLog.weapon && changeLog.weaponType) {\r\n\t\t\tthis.use(changeLog.weapon, changeLog.weaponType);\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify(genCode) {\r\n\t\tlet result = this.slots._stringify();\r\n\t\tif (genCode) {\r\n\t\t\treturn `chara._parse('${result}')`;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_outlink() {\r\n\t\tif (this.slots.body && this.slots.body.id && this.slots.face && this.slots.face.id && this.action && this.emotion) {\r\n\t\t\tlet link = \"https://labs.maplestory.io/api/GMS/latest/character/center/\" + this.slots.body.id + \"/\";\r\n\t\t\tlet slots = [...this.slots.enumerate()].map(a => parseInt(a.id, 10));\r\n\r\n\t\t\tslots[0] = this.slots.face.id + \":\" + this.emotion;\r\n\r\n\t\t\tlink += slots.join(\",\");\r\n\r\n\t\t\tlink += \"/\" + this.action + \"?showears=\" + (this.elfEar ? \"true\" : \"false\");\r\n\r\n\t\t\tlink += \"&showLefEars=\" + (this.lefEar ? \"true\" : \"false\");\r\n\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\tconsole.log(\"character need body, face, action, emotion\");\r\n\t}\r\n\r\n\t_download() {\r\n\t\twindow.open(this._outlink());\r\n\t}\r\n\r\n\t_save_as_svg() {\r\n\t\tthis.__texture_to_base64().then(frag_list => {\r\n\t\t\tlet file_name = this.id + \".svg\";\r\n\t\t\t//let frag_list = this.__frag_list;\r\n\t\r\n\t\t\tlet svg = '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" >';\r\n\r\n\t\t\tsvg += '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink= \"http://www.w3.org/1999/xlink\">\\n';// width=\"64\" height=\"96\"\r\n\r\n\t\t\tsvg += '<g transform=\"translate(32, 96)\">';\r\n\t\t\tfrag_list.forEach(function (ft) {\r\n\t\t\t\tif (ft && ft.relative) {\r\n\t\t\t\t\tlet clz = ft.classList;\r\n\t\t\t\t\tsvg += `\\t<image class=\"${clz}\" opacity=\"${ft.visible ? ft.opacity : 0}\" x=\"${ft.relative.x}\" y=\"${ft.relative.y}\" width=\"${ft.width}\" height=\"${ft.height}\" xlink:href=\"${ft._url}\"></image>\\n`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsvg += '</g>';\r\n\r\n\t\t\tsvg += '<text x=\"0\" y=\"122\" fill=\"transparent\">' + this._stringify(false) + '</text>';\r\n\r\n\t\t\tsvg += '</svg>';\r\n\r\n\t\t\t//let url = \"data:text/plain;utf8,\" + svg;\r\n\r\n\t\t\tdebugger;\r\n\r\n\t\t\t//window.open(url);\r\n\t\t\tDownloadData(svg, \"image/svg+xml;utf8\", file_name);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * \"data:image/png;base64,[...]\"\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} filename\r\n\t * @returns {string}\r\n\t */\r\n\t_save_as_png(renderer, filename) {\r\n\t\tlet bound = this._calcBoundBox();\r\n\t\tlet size = bound.size;\r\n\t\tlet x = -bound.left;\r\n\t\tlet y = bound.height;\r\n\t\tlet angle = 0;\r\n\t\tlet front = false;\r\n\r\n\t\t// use Canvas2, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//save Canvas2 size, current ctx is _ctx2\r\n\t\tconst c2w = renderer._ctx2.canvas.width;\r\n\t\tconst c2h = renderer._ctx2.canvas.height;\r\n\t\t//\r\n\t\trenderer.ctx.canvas.width = size.x;\r\n\t\trenderer.ctx.canvas.height = size.y;\r\n\r\n\t\ttry {\r\n\t\t\tthis._draw(renderer, x, y, angle, front);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\tlet base64 = renderer.ctx.canvas.toDataURL(\"image/png\");\r\n\t\t{\r\n\t\t\tlet elem = document.createElement(\"a\");\r\n\r\n\t\t\tlet name = `${filename ? (filename+\".\"):\"\"}${this.action}[${this.action_frame}].${this.emotion}[${this.emotion_frame}].png`;\r\n\r\n\t\t\telem.id = name;\r\n\t\t\telem.download = name;\r\n\t\t\telem.href = base64;\r\n\r\n\t\t\tdocument.body.appendChild(elem);\r\n\t\t\telem.click();\r\n\t\t\tdocument.body.removeChild(elem);\r\n\t\t}\r\n\r\n\t\t//restore Canvas2 size, current ctx is _ctx2\r\n\t\trenderer.ctx.canvas.width = c2w;\r\n\t\trenderer.ctx.canvas.height = c2h;\r\n\r\n\t\t// restore Canvas, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\treturn base64;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {Promise<FragmentTexture[]>}\r\n\t */\r\n\tasync __texture_to_base64() {\r\n\t\tlet frag_list = this.__frag_list;\r\n\t\tlet tasks = [];\r\n\r\n\t\tfrag_list.forEach(function (ft) {\r\n\t\t\tif (!ft) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!ft._url.startsWith(\"data:\")) {\r\n\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\tft._url = await toDataURL(ft._url);\r\n\t\t\t\t\treturn ft;\r\n\t\t\t\t})());\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttasks.push(ft);\r\n\t\t\t}\r\n\t\t\tif (ft.graph2) {\r\n\t\t\t\tlet src = ft.graph2._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph2._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph2;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ft.graph3) {\r\n\t\t\t\tlet src = ft.graph3._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph3._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph3;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n}\r\nAddInitTask(CharacterRenderer.Init());\r\n\r\nfunction* circularSequence(length) {\r\n\tlet i = 0;\r\n\tfor (; i < length; ++i) {//a: 0, 1, 2, 3, ...b\r\n\t\tyield i;\r\n\t}\r\n\tfor (i -= 2; i > 0; --i) {//b: 2, 1, ...a\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction* linearSequence(length) {\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction extract_number(input) {\r\n\treturn String(input).match(/(-?\\d+\\.?\\d*)|(\\.\\d*)/g);\r\n}\r\n\r\n/**\r\n * image href to data url\r\n */\r\nfunction toDataURL(url) {\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tlet xhr = new XMLHttpRequest();\r\n\t\txhr.onload = function () {\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\treader.onloadend = function () {\r\n\t\t\t\tresolve(reader.result);\r\n\t\t\t}\r\n\t\t\treader.onerror = function (ev) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treject(ev);\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(xhr.response);\r\n\t\t};\r\n\t\txhr.open('GET', url);\r\n\t\txhr.responseType = 'blob';\r\n\t\txhr.send();\r\n\t});\r\n}\r\n","\r\nimport jQuery from \"jquery\";\r\n\r\nimport \"jquery-ui/themes/base/core.css\";\r\nimport \"jquery-ui/themes/base/theme.css\";\r\nimport \"jquery-ui/themes/base/selectable.css\";\r\nimport \"jquery-ui/themes/base/sortable.css\";\r\nimport \"jquery-ui/themes/base/draggable.css\";\r\n\r\nimport \"jquery-ui/ui/core\";\r\nimport \"jquery-ui/ui/widgets/selectable\";\r\nimport \"jquery-ui/ui/widgets/sortable\";\r\nimport \"jquery-ui/ui/widgets/draggable\";\r\nimport \"jquery-ui/ui/disable-selection\";\r\nimport \"jquery-ui/ui/position\";\r\nimport \"jquery-ui/ui/effect\";\r\n\r\nimport { } from \"./util.js\";\r\n\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nwindow.jQuery = jQuery;\r\nwindow.$ = jQuery;\r\n\r\nVue.config.productionTip = false;\r\n\r\nVue.use(Vuex);\r\n\r\nif (!window.onwheel) {\r\n\twindow.onwheel = function () {\r\n\t}\r\n}\r\n\r\nlet init_tasks = [];\r\n\r\nexport function AddInitTask(task) {\r\n\tinit_tasks.push(task);\r\n}\r\n\r\nexport function InitAll() {\r\n\tlet a = Promise.all(init_tasks);\r\n\tinit_tasks = [];\r\n\treturn a;\r\n}\r\n","﻿\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\n\r\n\r\nexport class ChatBalloon {\r\n\tconstructor() {\r\n\t\tthis._raw = null;\r\n\t\tthis.style = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {any} style\r\n\t */\r\n\tasync load(style) {\r\n\t\tif (style == null) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tif (ChatBalloon.cache[style]) {\r\n\t\t\tlet cb = ChatBalloon.cache[style];\r\n\t\t\tObject.assign(this, cb);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst path = [this._base_path, style].join(\"/\");\r\n\r\n\t\t\tthis.style = style;\r\n\t\t\t\r\n\t\t\tlet promise = $get.data(path);\r\n\t\t\tChatBalloon.cache[style] = this;\r\n\t\t\tthis.$promise = promise;\r\n\t\t\t\r\n\t\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\t\tvalue: await promise,\r\n\t\t\t});\r\n\t\t\tdelete this.$promise;\r\n\r\n\t\t\tconst argb = Number(\"clr\" in this._raw ? this._raw.clr : defCol);\r\n\t\t\tconst rgba = (((argb & 0xFF000000) >>> 24) | ((argb & 0x00FFFFFF) << 8)) >>> 0;\r\n\t\t\tconst str_rgba = rgba.toString(16).padStart(8, \"0\");\r\n\t\t\tthis.color = (this._raw.clr == -1 || !this._raw.clr) ? (\"white\") : (\"#\" + str_rgba);\r\n\r\n\t\t\tthis.nw = new Sprite(this._raw.nw);\r\n\t\t\t//this.nw._url = path + \"/nw\";\r\n\r\n\t\t\tthis.n = new Sprite(this._raw.n);\r\n\t\t\t//this.n._url = path + \"/n\";\r\n\r\n\t\t\tthis.ne = new Sprite(this._raw.ne);\r\n\t\t\t//this.ne._url = path + \"/ne\";\r\n\r\n\t\t\tthis.w = new Sprite(this._raw.w);\r\n\t\t\t//this.w._url = path + \"/w\";\r\n\r\n\t\t\tthis.c = new Sprite(this._raw.c);\r\n\t\t\t//this.c._url = path + \"/c\";\r\n\r\n\t\t\tthis.e = new Sprite(this._raw.e);\r\n\t\t\t//this.e._url = path + \"/e\";\r\n\r\n\t\t\tthis.sw = new Sprite(this._raw.sw);\r\n\t\t\t//this.sw._url = path + \"/sw\";\r\n\r\n\t\t\tthis.s = new Sprite(this._raw.s);\r\n\t\t\t//this.s._url = path + \"/s\";\r\n\r\n\t\t\tthis.se = new Sprite(this._raw.se);\r\n\t\t\t//this.se._url = path + \"/se\";\r\n\r\n\t\t\tthis.arrow = new Sprite(this._raw.arrow);\r\n\t\t\t//this.arrow._url = path + \"/arrow\";\r\n\r\n\t\t\t//this._pat_c = ctx.createPattern(this.c, \"repeat\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/*\r\n\t1 12345 12345 1 : 5\r\n\t2 12345 12345 12345\r\n\t3 12345 12345 12345\r\n\t4 12345 12345 12345\r\n\t5 12345 12345 12345\r\n\t6 xxx12 34512 34\r\n\t */\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} text - length = chat.value.length + \" : \".length + name.length = 70 + 3 + name.length\r\n\t * @param {number} x - chat balloon arrow bottom pos.x\r\n\t * @param {number} y - chat balloon arrow bottom pos.y\r\n\t */\r\n\tdraw(renderer, text, x, y) {\r\n\t\tlet lines = text.match(/(.{1,12})/g);\r\n\t\tif (!lines.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst LINE_HEIGHT = this.c.height;// = fontSize(12) + PADDING_TOP(2)\r\n\t\tconst PADDING_LEFT = 0, PADDING_TOP = 0, PADDING_RIGHT = 0, PADDING_BOTTOM = 0;\r\n\r\n\t\tctx.fillStyle = this.color;\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"hanging\";//top\r\n\t\t\r\n\t\tconst min_width = this.n.width * 3;\r\n\t\tlet _tw = Math.max.apply(null, lines.map(line => ctx.measureText(line).width + PADDING_LEFT + PADDING_RIGHT));\r\n\t\tif (_tw < min_width) {\r\n\t\t\t_tw = min_width;\r\n\t\t}\r\n\t\tconst hw = Math.trunc((_tw / 2) / this.n.width) * this.n.width;\r\n\t\tconst tw = hw * 2;\r\n\t\tconst th = lines.length * LINE_HEIGHT + PADDING_TOP + PADDING_BOTTOM;\r\n\t\r\n\t\tx = (x - hw);\r\n\t\ty = (y - th) - this.arrow.height;\r\n\r\n\t\t{//top\r\n\t\t\tthis.nw.draw2(x, y);\r\n\t\t\tthis.n._drawPattern(x, y, tw, this.n.height);\r\n\t\t\tthis.ne.draw2(x + tw, y);\r\n\t\t}\r\n\t\t{//center\r\n\t\t\tconst xw = this.w.width - this.w.x;\r\n\r\n\t\t\tthis.w._drawPattern(x + xw, y, this.w.width, th);\r\n\t\t\tthis.c._drawPattern(x + xw, y, tw, th);\r\n\t\t\tthis.e._drawPattern(x + xw + tw, y, this.e.width, th);\r\n\t\t}\r\n\t\t{//bottom\r\n\t\t\tconst r_adj = this.arrow.width & 1;\r\n\t\t\tconst arrow_hw = Math.trunc(this.arrow.width / 2);\r\n\t\t\tconst hw_arrow_hw = hw - arrow_hw;\r\n\t\t\r\n\t\t\tthis.sw.draw2(x, y + th);\r\n\t\t\tthis.s._drawPattern(x, y + th, hw_arrow_hw, this.s.height);//clip\r\n\t\t\tthis.s._drawPattern(x + hw + arrow_hw + r_adj, y + th, hw_arrow_hw - r_adj, this.s.height);//clip\r\n\t\t\tthis.se.draw2(x + tw, y + th);\r\n\r\n\t\t\tthis.arrow.draw2(x - arrow_hw + hw, y + th);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0, cy = y; i < lines.length; ++i, cy += LINE_HEIGHT) {\r\n\t\t\tlet line = lines[i];\r\n\r\n\t\t\t//if (this.constructor.DEBUG) {\r\n\t\t\t//\tctx.beginPath();\r\n\t\t\t//\tctx.strokeStyle = \"red\";\r\n\t\t\t//\tctx.strokeRect(x + PADDING_LEFT, cy + PADDING_TOP, tw, LINE_HEIGHT);\r\n\t\t\t//}\r\n\t\t\t//ctx.fillStyle = \"black\";\r\n\r\n\t\t\tctx.fillText(line, x + hw + PADDING_LEFT, cy + PADDING_TOP);\r\n\t\t}\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn \"/UI/ChatBalloon\";\r\n\t}\r\n\r\n\t//static get DEBUG() {\r\n\t//\treturn false;\r\n\t//}\r\n}\r\n\r\n/** @type {{[style:number]:ChatBalloon}} */\r\nChatBalloon.cache = window.$images_ChatBalloon || {};\r\n\r\nwindow.$images_ChatBalloon = ChatBalloon.cache;\r\n\r\nif (module.hot) {\r\n\tObject.values(ChatBalloon.cache).forEach(a => {\r\n\t\ta.__proto__ = ChatBalloon.prototype;\r\n\t\t//a.load(a.style);\r\n\t});\r\n\tmodule.hot.accept();\r\n}\r\n","\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\n\r\n\r\nexport class PanelRenderer {\r\n\tconstructor() {\r\n\t\tthis._raw = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tasync _load(url) {\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: await $get.data(url),\r\n\t\t});\r\n\t}\r\n\t\r\n\t_load_top() {\r\n\t\tthis.nw = new Sprite(this._raw.nw);\r\n\t\t//this.nw._url = url + \"/nw\";\r\n\r\n\t\tthis.n = new Sprite(this._raw.n);\r\n\t\t//this.n._url = url + \"/n\";\r\n\r\n\t\tthis.ne = new Sprite(this._raw.ne);\r\n\t\t//this.ne._url = url + \"/ne\";\r\n\t}\r\n\t\r\n\t_load_center() {\r\n\t\tthis.w = new Sprite(this._raw.w);\r\n\t\t//this.w._url = url + \"/w\";\r\n\r\n\t\tthis.c = new Sprite(this._raw.c);\r\n\t\t//this.c._url = url + \"/c\";\r\n\r\n\t\tthis.e = new Sprite(this._raw.e);\r\n\t\t//this.e._url = url + \"/e\";\r\n\t}\r\n\t\r\n\t_load_bottom() {\r\n\t\tthis.sw = new Sprite(this._raw.sw);\r\n\t\t//this.sw._url = url + \"/sw\";\r\n\r\n\t\tthis.s = new Sprite(this._raw.s);\r\n\t\t//this.s._url = url + \"/s\";\r\n\r\n\t\tthis.se = new Sprite(this._raw.se);\r\n\t\t//this.se._url = url + \"/se\";\r\n\t}\r\n\t\r\n\t_load_arrow() {\r\n\t\tthis.arrow = new Sprite(this._raw.arrow);\r\n\t\t//this.arrow._url = url + \"/arrow\";\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} defCol\r\n\t */\r\n\t_load_color(defCol) {\r\n\t\tconst argb = Number(\"clr\" in this._raw ? this._raw.clr : defCol);\r\n\t\tconst rgba = (((argb & 0xFF000000) >>> 24) | ((argb & 0x00FFFFFF) << 8)) >>> 0;\r\n\t\tconst str_rgba = rgba.toString(16).padStart(8, \"0\");\r\n\t\tthis.color = (this._raw.clr == -1 || !this._raw.clr) ? (\"white\") : (\"#\" + str_rgba);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_top(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tthis.nw.draw2(cx, bottom);\r\n\t\tthis.n._drawPatterncx(x, bottom, tw, this.n.height);\r\n\t\tthis.ne.draw2(cx + tw, bottom);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_center(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tconst xw = this.w.width - this.w.x;\r\n\r\n\t\tthis.w._drawPattern(cx + xw, bottom, this.w.width, height);\r\n\t\tthis.c._drawPattern(cx + xw, bottom, tw, height);\r\n\t\tthis.e._drawPattern(cx + xw + tw, bottom, this.e.width, height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_bottom(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tthis.sw.draw2(cx, bottom + height);\r\n\t\tthis.s._drawPattern(cx, bottom + height, hwidth, this.s.height);\r\n\t\tthis.se.draw2(cx + tw, bottom + height);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} cx\r\n\t * @param {number} bottom\r\n\t * @param {number} hwidth\r\n\t * @param {number} height\r\n\t */\r\n\t_draw_bottom_and_arrow(renderer, cx, bottom, hwidth, height) {\r\n\t\tconst tw = hwidth * 2;\r\n\t\tconst r_adj = this.arrow.width & 1;\r\n\t\tconst arrow_hw = Math.trunc(this.arrow.width / 2);\r\n\t\tconst hw_arrow_hw = hwidth - arrow_hw;\r\n\t\r\n\t\tthis.sw.draw2(cx, bottom + height);\r\n\t\tthis.s._drawPattern(cx, bottom + height, hw_arrow_hw, this.s.height);\r\n\t\tthis.s._drawPattern(cx + hwidth + arrow_hw + r_adj, bottom + height, hw_arrow_hw - r_adj, this.s.height);\r\n\t\tthis.se.draw2(cx + tw, bottom + height);\r\n\r\n\t\tthis.arrow.draw2(cx - arrow_hw + hwidth, bottom + height);\r\n\t}\r\n}\r\n","\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\nimport { PanelRenderer } from './PanelRenderer.js';\r\n\r\n\r\nexport class NameLabel extends PanelRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.style = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.color = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.w = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.c = null;\r\n\t\t\r\n\t\t/** @type {Sprite} */\r\n\t\tthis.e = null;\r\n\t}\r\n\t\r\n\tasync load(style) {\r\n\t\tif (style == null) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tif (NameLabel.cache[style]) {\r\n\t\t\tlet label = NameLabel.cache[style];\r\n\t\t\tObject.assign(this, label);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst path = [this._base_path, style].join(\"/\");\r\n\t\t\t\r\n\t\t\tthis.style = style;\r\n\t\t\t\r\n\t\t\tlet promise = this._load(path);\r\n\t\t\tNameLabel.cache[style] = this;\r\n\t\t\tthis.$promise = promise;\r\n\t\t\t\r\n\t\t\tawait promise;\r\n\t\t\tdelete this.$promise;\r\n\t\t\t\r\n\t\t\tthis._load_center();\r\n\t\t\tthis._load_color(\"white\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} text\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, text, x, y) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\t\r\n\t\tctx.fillStyle = this.color;\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"hanging\";//top\r\n\t\t\r\n\t\tlet height = this.c.height;\r\n\t\tlet width = ctx.measureText(text).width;\r\n\t\twidth = Math.max(this.c.width * 2, width);\r\n\t\t\r\n\t\tconst hw = width / 2;\r\n\t\t\r\n\t\tconst cx = x - hw;\r\n\t\tconst cy = y + Math.min(this.w.y, this.e.y);\r\n\t\t\r\n\t\tthis.w.draw2(cx, cy);\r\n\t\tthis.c._drawPattern(cx, cy, width - this.e.x, height);\r\n\t\tthis.e.draw2(cx + width, cy);\r\n\t\t\r\n\t\tctx.fillText(text, x, cy);\r\n\t}\r\n\t\r\n\tget _base_path() {\r\n\t\treturn \"/UI/NameTag\";\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} NameLabel\r\n\t * @returns {NameLabel}\r\n\t */\r\n\tstatic get(labelStyle) {\r\n\t\tlet label = NameLabel.cache[labelStyle];\r\n\t\tif (!label) {\r\n\t\t\tlabel = new NameLabel();\r\n\t\t\tlabel.load(labelStyle);\r\n\t\t}\r\n\t\treturn label;\r\n\t}\r\n}\r\n\r\n/** @type {{[style:number]:NameLabel}} */\r\nNameLabel.cache = window.$images_NameLabel || {};\r\n\r\nwindow.$images_NameLabel = NameLabel.cache;\r\n\r\nif (module.hot) {\r\n\tObject.values(NameLabel.cache).forEach(a => {\r\n\t\ta.__proto__ = NameLabel.prototype;\r\n\t\t//a.load(a.style);\r\n\t});\r\n\tmodule.hot.accept();\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dialog-group Editor\",on:{\"contextmenu\":function($event){if($event.target !== $event.currentTarget){ return null; }$event.preventDefault();}}},[_c('ui-dialog',{attrs:{\"position\":_vm.wnds.menu.pos,\"width\":\"302px\"}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\tMenu\\n\\t\\t\")]),_vm._v(\" \"),[_c('details',{attrs:{\"open\":\"\"}},[_c('summary',[_vm._v(\"bgm\")]),_vm._v(\" \"),_c('div',{ref:\"bgm_outer\"})]),_vm._v(\" \"),_c('details',{attrs:{\"open\":\"\"}},[_c('summary',[_vm._v(\"window\")]),_vm._v(\" \"),_c('p'),_vm._l((_vm.wnds),function(wnd,key){return (!wnd.name.startsWith('$'))?_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(wnd.visable),expression:\"wnd.visable\"}],attrs:{\"type\":\"checkbox\",\"checked\":\"\"},domProps:{\"checked\":Array.isArray(wnd.visable)?_vm._i(wnd.visable,null)>-1:(wnd.visable)},on:{\"click\":function($event){_vm.$refs[key]?_vm.$refs[key].requireOrder($event):undefined},\"change\":function($event){var $$a=wnd.visable,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(wnd, \"visable\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(wnd, \"visable\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(wnd, \"visable\", $$c)}}}}),_vm._v(\" \"+_vm._s(wnd.name)+\"\\n\\t\\t\\t\\t\\t\\t\")])]):_vm._e()}),_vm._v(\" \"),_c('p')],2)],_vm._v(\" \"),[_c('details',[_c('summary',[_vm._v(\"scene\")]),_vm._v(\" \"),_c('p'),_c('div',[_c('label',[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t\\tMap \"),_c('input',{on:{\"keydown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }_vm.gv.scene_map.load($event.target.value.padStart(9, '0'))}}})])]),_vm._v(\" \"),_c('div',[_c('fieldset',[_c('legend',[_vm._v(\"map\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_is_rendering_map),expression:\"gv.m_is_rendering_map\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_is_rendering_map)?_vm._i(_vm.gv.m_is_rendering_map,null)>-1:(_vm.gv.m_is_rendering_map)},on:{\"change\":function($event){var $$a=_vm.gv.m_is_rendering_map,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_is_rendering_map\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_is_rendering_map\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_is_rendering_map\", $$c)}}}}),_vm._v(\"Map\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_back),expression:\"gv.m_display_back\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_back)?_vm._i(_vm.gv.m_display_back,null)>-1:(_vm.gv.m_display_back)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_back,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_back\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_back\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_back\", $$c)}}}}),_vm._v(\"back\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_front),expression:\"gv.m_display_front\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_front)?_vm._i(_vm.gv.m_display_front,null)>-1:(_vm.gv.m_display_front)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_front,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_front\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_front\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_front\", $$c)}}}}),_vm._v(\"front\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_mapobj),expression:\"gv.m_display_mapobj\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_mapobj)?_vm._i(_vm.gv.m_display_mapobj,null)>-1:(_vm.gv.m_display_mapobj)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_mapobj,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_mapobj\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_mapobj\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_mapobj\", $$c)}}}}),_vm._v(\"object\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_maptile),expression:\"gv.m_display_maptile\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_maptile)?_vm._i(_vm.gv.m_display_maptile,null)>-1:(_vm.gv.m_display_maptile)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_maptile,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_maptile\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_maptile\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_maptile\", $$c)}}}}),_vm._v(\"tile\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_portal),expression:\"gv.m_display_portal\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_portal)?_vm._i(_vm.gv.m_display_portal,null)>-1:(_vm.gv.m_display_portal)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_portal,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_portal\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_portal\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_portal\", $$c)}}}}),_vm._v(\"portal\")])]),_vm._v(\" \"),_c('fieldset',[_c('legend',[_vm._v(\"map\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_particle_system),expression:\"gv.m_display_particle_system\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_particle_system)?_vm._i(_vm.gv.m_display_particle_system,null)>-1:(_vm.gv.m_display_particle_system)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_particle_system,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_particle_system\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_particle_system\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_particle_system\", $$c)}}}}),_vm._v(\"particle system\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_skeletal_anim),expression:\"gv.m_display_skeletal_anim\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_skeletal_anim)?_vm._i(_vm.gv.m_display_skeletal_anim,null)>-1:(_vm.gv.m_display_skeletal_anim)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_skeletal_anim,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_skeletal_anim\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_skeletal_anim\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_skeletal_anim\", $$c)}}}}),_vm._v(\"skeletal animation\")])]),_vm._v(\" \"),_c('fieldset',[_c('legend',[_vm._v(\"life\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_life),expression:\"gv.m_display_life\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_life)?_vm._i(_vm.gv.m_display_life,null)>-1:(_vm.gv.m_display_life)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_life,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_life\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_life\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_life\", $$c)}}}}),_vm._v(\"life\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_player),expression:\"gv.m_display_player\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_player)?_vm._i(_vm.gv.m_display_player,null)>-1:(_vm.gv.m_display_player)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_player,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_player\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_player\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_player\", $$c)}}}}),_vm._v(\"player\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_other_player),expression:\"gv.m_display_other_player\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_other_player)?_vm._i(_vm.gv.m_display_other_player,null)>-1:(_vm.gv.m_display_other_player)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_other_player,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_other_player\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_other_player\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_other_player\", $$c)}}}}),_vm._v(\"other player\")])]),_vm._v(\" \"),_c('fieldset',[_c('legend',[_vm._v(\"character\")]),_vm._v(\" \"),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_name_label),expression:\"gv.m_display_name_label\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_name_label)?_vm._i(_vm.gv.m_display_name_label,null)>-1:(_vm.gv.m_display_name_label)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_name_label,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_name_label\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_name_label\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_name_label\", $$c)}}}}),_vm._v(\"顯示名牌\")])]),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"名牌\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.NameLabel_default_style),expression:\"gv.NameLabel_default_style\"}],attrs:{\"type\":\"number\",\"min\":\"0\"},domProps:{\"value\":(_vm.gv.NameLabel_default_style)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.gv, \"NameLabel_default_style\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"聊天\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.gv.ChatBalloon_default_style),expression:\"gv.ChatBalloon_default_style\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\"},domProps:{\"value\":(_vm.gv.ChatBalloon_default_style)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.gv, \"ChatBalloon_default_style\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])]),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"聊天顯示時間\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.gv.ChatBalloon_display_duration),expression:\"gv.ChatBalloon_display_duration\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\"},domProps:{\"value\":(_vm.gv.ChatBalloon_display_duration)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.gv, \"ChatBalloon_display_duration\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\"毫秒\")])])])]),_vm._v(\" \"),_c('p')]),_vm._v(\" \"),_c('details',[_c('summary',[_vm._v(\"editor\")]),_vm._v(\" \"),_c('p',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_foothold),expression:\"gv.m_display_foothold\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_foothold)?_vm._i(_vm.gv.m_display_foothold,null)>-1:(_vm.gv.m_display_foothold)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_foothold,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_foothold\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_foothold\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_foothold\", $$c)}}}}),_vm._v(\" foothold\")]),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_selected_object),expression:\"gv.m_display_selected_object\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_selected_object)?_vm._i(_vm.gv.m_display_selected_object,null)>-1:(_vm.gv.m_display_selected_object)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_selected_object,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_selected_object\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_selected_object\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_selected_object\", $$c)}}}}),_vm._v(\" selected object\")])])]),_vm._v(\" \"),_c('details',[_c('summary',[_vm._v(\"debug\")]),_vm._v(\" \"),_c('p'),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_debug_info),expression:\"gv.m_display_debug_info\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_debug_info)?_vm._i(_vm.gv.m_display_debug_info,null)>-1:(_vm.gv.m_display_debug_info)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_debug_info,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_debug_info\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_debug_info\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_debug_info\", $$c)}}}}),_vm._v(\" debug info\")])]),_vm._v(\" \"),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_display_physics_debug),expression:\"gv.m_display_physics_debug\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_display_physics_debug)?_vm._i(_vm.gv.m_display_physics_debug,null)>-1:(_vm.gv.m_display_physics_debug)},on:{\"change\":function($event){var $$a=_vm.gv.m_display_physics_debug,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv, \"m_display_physics_debug\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv, \"m_display_physics_debug\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv, \"m_display_physics_debug\", $$c)}}}}),_vm._v(\" physics debug\")])]),_vm._v(\" \"),_vm._l((_vm.gv.m_debugDraw.flagNames),function(flagName){return _c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.gv.m_debugDraw[flagName]),expression:\"gv.m_debugDraw[flagName]\",modifiers:{\"number\":true}}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.gv.m_debugDraw[flagName])?_vm._i(_vm.gv.m_debugDraw[flagName],null)>-1:(_vm.gv.m_debugDraw[flagName])},on:{\"change\":function($event){var $$a=_vm.gv.m_debugDraw[flagName],$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=_vm._n(null),$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.gv.m_debugDraw, flagName, $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.gv.m_debugDraw, flagName, $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.gv.m_debugDraw, flagName, $$c)}}}}),_vm._v(\" \"+_vm._s(flagName.slice(5)))])])}),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"axis length \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gv.m_debugDraw.axis_length),expression:\"gv.m_debugDraw.axis_length\"}],attrs:{\"type\":\"number\",\"step\":\"0.1\"},domProps:{\"value\":(_vm.gv.m_debugDraw.axis_length)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.gv.m_debugDraw, \"axis_length\", $event.target.value)}}})])]),_vm._v(\" \"),_c('p')],2)]],2),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.character_list.visable),expression:\"wnds.character_list.visable\"}],ref:\"character_list\",attrs:{\"position\":_vm.wnds.character_list.pos,\"width\":\"16.1em\",\"height\":\"50vh\"}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\t\\tCharacters\\n\\t\\t\\t\\t\"),(_vm.progressMaximum)?[_vm._v(\"\\n\\t\\t\\t\\t\\t[loading: \"+_vm._s(_vm.progressValue)+\" / \"+_vm._s(_vm.progressMaximum)+\"]\\n\\t\\t\\t\\t\")]:_vm._e()],2),_vm._v(\" \"),_c('template',{slot:\"content\"},[_c('div',{style:({filter: 'blur(' + (_vm.progressMaximum?3:0) + 'px)'})},[_c('div',[_c('span',[_vm._v(_vm._s(_vm.charaList.length)+\" characters\")]),_vm._v(\" \"),_c('div',{staticClass:\"chara-ls-btn-group\"},[_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Add new\"},on:{\"click\":_vm.addNewChara}},[_c('img',{attrs:{\"src\":\"images/toolstrip_character.png\",\"alt\":\"Add new\"}})]),_vm._v(\" \"),_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Add clone\"},on:{\"click\":_vm.addCloneChara}},[_c('img',{attrs:{\"src\":\"images/toolstrip_duplicate.png\",\"alt\":\"Add clone\"}})]),_vm._v(\" \"),_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Load\"},on:{\"click\":_vm.loadCharacters}},[_c('span',{staticClass:\"ui-icon ui-icon-folder-open\",attrs:{\"alt\":\"📂\"}})]),_vm._v(\" \"),_c('button',{staticClass:\"chara-ls-btn\",attrs:{\"title\":\"Save all\"},on:{\"click\":_vm.saveCharacters}},[_c('img',{attrs:{\"src\":\"images/toolstrip_save_all.png\",\"alt\":\"Save all\"}})])])]),_vm._v(\" \"),_c('ui-sortable',{staticClass:\"ui-character-list\",attrs:{\"items\":_vm.charaList},on:{\"input\":_vm.oninput_sort},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar item = ref.item;\nvar index = ref.index;\nreturn [_c('li',{key:item.id,class:[(_vm.selected == item.id ? 'active':''), item.id].join(' '),attrs:{\"id\":item.id,\"title\":item.id},on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.selectChara(item.id)}}},[_c('table',{staticStyle:{\"width\":\"100%\"}},[_c('tr',{on:{\"contextmenu\":function($event){$event.preventDefault();_vm.openCharacterDLMenu($event, item.id);}}},[_c('td',[_vm._v(_vm._s(index))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(item.id))]),_vm._v(\" \"),_c('td',{staticStyle:{\"position\":\"relative\"}},[_c('ui-character',{attrs:{\"chara\":item.renderer}})],1)])])])]}}])})],1),_vm._v(\" \"),(_vm.progressMaximum)?_c('div',{staticClass:\"loading\"},[_c('div',[_c('progress',{attrs:{\"max\":_vm.progressMaximum},domProps:{\"value\":_vm.progressValue}}),_vm._v(\" \"),_c('div',[_vm._v(\"loading [\"+_vm._s(_vm.progressValue)+\" / \"+_vm._s(_vm.progressMaximum)+\"]\")])])]):_vm._e()])],2)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.character_attribute.visable),expression:\"wnds.character_attribute.visable\"}],ref:\"character_list\",attrs:{\"position\":_vm.wnds.character_attribute.pos,\"width\":\"20em\",\"height\":\"50vh\"}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\t\\tCharacter attribute\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('template',{slot:\"content\"},[(_vm.chara!=null)?_c('div',[_c('ui-character-attribute',{attrs:{\"sceneChara\":_vm.chara}})],1):_vm._e()])],2)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.spawnpoint.visable),expression:\"wnds.spawnpoint.visable\"}],ref:\"spawnpoint\",attrs:{\"position\":_vm.wnds.spawnpoint.pos,\"height\":\"50vh\"},on:{\"update:position\":function($event){_vm.$set(_vm.wnds.spawnpoint, \"pos\", $event)}}},[_c('template',{slot:\"header\"},[_vm._v(\"\\n\\t\\t\\t\\tSpawn point\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('template',{slot:\"content\"},[_c('ui-mob-list',{on:{\"resize\":function($event){_vm.$refs.spawnpoint.reset_content_style()}}})],1)],2)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-equip-box',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.equip_box.visable),expression:\"wnds.equip_box.visable\"}],ref:\"equip_box\",attrs:{\"position\":_vm.wnds.equip_box.pos,\"width\":\"20em\",\"height\":400},on:{\"clickItem\":_vm.clickItem,\"hoverItem\":_vm.hoverItem,\"mouseleaveItem\":_vm.mouseleaveItem,\"faceColor\":_vm.faceColor,\"hairColor\":_vm.hairColor,\"hairColor2\":_vm.hairColor2,\"hairMix2\":_vm.hairMix2}})],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.mapEditorMode.startsWith('layered'))?[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.debug_window.visable),expression:\"wnds.debug_window.visable\"}],attrs:{\"position\":_vm.wnds.debug_window.pos,\"width\":\"40vw\",\"height\":\"70vh\"}},[_c('template',{slot:\"header\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mapEditorMode),expression:\"mapEditorMode\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.mapEditorMode=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"background\"}},[_vm._v(\"background\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"frontground\"}},[_vm._v(\"frontground\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredObject\"}},[_vm._v(\"layered object\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredTile\"}},[_vm._v(\"layered tile\")])]),_vm._v(\"\\n\\t\\t\\t\\t\\tmode \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.displayMode),expression:\"displayMode\"}],staticStyle:{\"width\":\"1.8em\"},attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"2\"},domProps:{\"value\":(_vm.displayMode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.displayMode=$event.target.value}}}),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){_vm.dirty++}}},[_vm._v(_vm._s(_vm.dirty))])]),_vm._v(\" \"),_c('template',{slot:\"content\"},[(_vm.scene_map() && _vm.scene_map()[_vm.mapEditorMode].length)?_c('div',{style:(_vm.wnd_debug_style)},[_c('div',{staticStyle:{\"background\":\"white\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.wnd_debug_style.background),expression:\"wnd_debug_style.background\"}],attrs:{\"type\":\"color\",\"title\":\"window background color\"},domProps:{\"value\":(_vm.wnd_debug_style.background)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.wnd_debug_style, \"background\", $event.target.value)}}}),_vm._v(\" \"),_c('label',[_vm._v(\"layer \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedLayer),expression:\"selectedLayer\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedLayer=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.scene_map()[_vm.mapEditorMode].length),function(layer){return _c('option',[_vm._v(_vm._s(layer - 1))])}))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.scene_map()[_vm.mapEditorMode][_vm.selectedLayer].length)+\" objs\")])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('ui-map-editor',{attrs:{\"objs\":_vm.scene_map()[_vm.mapEditorMode][_vm.selectedLayer],\"displayMode\":_vm.displayMode}})],1):_vm._e()])],2)]:[_c('ui-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.wnds.debug_window.visable),expression:\"wnds.debug_window.visable\"}],attrs:{\"position\":_vm.wnds.debug_window.pos,\"width\":\"40vw\",\"height\":\"70vh\"}},[_c('template',{slot:\"header\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mapEditorMode),expression:\"mapEditorMode\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.mapEditorMode=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"background\"}},[_vm._v(\"background\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"frontground\"}},[_vm._v(\"frontground\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredObject\"}},[_vm._v(\"layered object\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"layeredTile\"}},[_vm._v(\"layered tile\")])]),_vm._v(\"\\n\\t\\t\\t\\t\\ttex info \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.displayMode),expression:\"displayMode\"}],staticStyle:{\"width\":\"1.8em\"},attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"2\"},domProps:{\"value\":(_vm.displayMode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.displayMode=$event.target.value}}}),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){_vm.dirty--}}},[_vm._v(_vm._s(_vm.dirty))])]),_vm._v(\" \"),_c('template',{slot:\"content\"},[(_vm.scene_map() && _vm.scene_map()[_vm.mapEditorMode].length)?_c('div',{style:(_vm.wnd_debug_style)},[_c('div',{staticStyle:{\"background\":\"white\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.wnd_debug_style.background),expression:\"wnd_debug_style.background\"}],attrs:{\"type\":\"color\"},domProps:{\"value\":(_vm.wnd_debug_style.background)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.wnd_debug_style, \"background\", $event.target.value)}}})]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('ui-map-editor',{attrs:{\"objs\":_vm.scene_map()[_vm.mapEditorMode],\"displayMode\":_vm.displayMode}})],1):_vm._e()])],2)]],2),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('ui-menu',{ref:\"chara_dl_menu\",staticStyle:{\"position\":\"absolute\",\"width\":\"8em\",\"z-index\":\"99999\"},attrs:{\"show\":_vm.is_show_chara_dl_menu},on:{\"close\":_vm.closeCharacterDLMenu}},[(_vm.chara)?[_c('a',{on:{\"click\":_vm._save_as_png}},[_vm._v(\"Save as PNG\")]),_vm._v(\" \"),_c('a',{on:{\"click\":function($event){_vm.chara.renderer._save_as_svg()}}},[_vm._v(\"Save as SVG\")]),_vm._v(\" \"),(_vm.progressMaximum == 0 || _vm.progressValue >= _vm.progressMaximum)?[_c('a',{attrs:{\"href\":_vm.chara.renderer._outlink()}},[_vm._v(\"Outlink\")])]:[_c('div',{attrs:{\"title\":\"loading...\"}},[_vm._v(\"Outlink\")])],_vm._v(\" \"),_c('a',{on:{\"click\":_vm.copyCharaCode}},[_vm._v(\"Copy code\")])]:[_c('a',{staticClass:\"disable\"},[_vm._v(\"Save as SVG\")]),_vm._v(\" \"),_c('a',{staticClass:\"disable\",attrs:{\"href\":\"javascript:void(0)\"}},[_vm._v(\"Outlink\")]),_vm._v(\" \"),_c('a',{staticClass:\"disable\"},[_vm._v(\"Copy code\")])]],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<ul>\r\n\t\t<slot v-for=\"(item, index) in items\" :item=\"item\" :index=\"index\"></slot>\r\n\t</ul>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: ['items'],\r\n\t\t//render: function (createElement) {\r\n\t\t//\tlet es = [];\r\n\t\t//\tlet render = this.render;\r\n\t\t//\tif (render && this.order) {\r\n\t\t//\t\tfor (let i = 0; i < this.order.length; ++i) {\r\n\t\t//\t\t\tthis.i = i;\r\n\t\t//\t\t\tes.push(render.apply(this, arguments));\r\n\t\t//\t\t}\r\n\t\t//\t}\r\n\t\t//\treturn createElement(\"ul\", es);\r\n\t\t//},\r\n\t\tmethods: {\r\n\t\t\tgetValue: function () {\r\n\t\t\t\tlet order = $(this.$el).sortable(\"toArray\");\r\n\t\t\t\tif (order.length != this.items.length) {\r\n\t\t\t\t\tthrow new Error(\"Can't get value before update.\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet indices = {};\r\n\t\t\t\tfor (let i = 0; i < order.length; ++i) {\r\n\t\t\t\t\tindices[order[i]] = i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet new_list = [];\r\n\t\t\t\tfor (let i = 0; i < order.length; ++i) {\r\n\t\t\t\t\tconst id = order[i];\r\n\t\t\t\t\tnew_list[i] = this.items[indices[id]];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.$emit('update:items', new_list);\t//output value by async\r\n\t\t\t\tthis.$emit('input', new_list);\t\t\t//output value by event\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tlet that = this;\r\n\t\t\tlet $$el = $(this.$el);\r\n\t\t\t$$el.sortable({\r\n\t\t\t\tupdate: this.getValue.bind(this)\r\n\t\t\t});\r\n\t\t\t$$el.disableSelection();\r\n\t\t},\r\n\t\tbeforeUpdate: function () {\r\n\t\t\tthis.$nextTick(function () {//replace item from vue-component(<slot>) to jquery-ui-component($(this.$el))\r\n\t\t\t\tif (!this.items) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet $$el = $(this.$el);\r\n\t\t\t\tlet el = [];\r\n\t\t\t\tfor (let i = 0; i < this.items.length; ++i) {\r\n\t\t\t\t\tconst item = this.items[i];\r\n\t\t\t\t\tconst id = item.id;\r\n\t\t\t\t\tlet em = el[i] = $(\"#\" + id);\r\n\t\t\t\t\tem.remove();\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < el.length; ++i) {\r\n\t\t\t\t\t$$el.append(el);\r\n\t\t\t\t}\r\n\t\t\t\t$$el.sortable();\r\n\t\t\t});\r\n\t\t},\r\n\t\tupdated: function () {\r\n\t\t\t$(this.$el).sortable();//make sortable\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\titems: function (newValue) {\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-sortable.vue?vue&type=template&id=56a47896&\"\nimport script from \"./ui-sortable.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-sortable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-sortable.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_vm._l((_vm.items),function(item,index){return _vm._t(\"default\",null,{item:item,index:index})})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div :class=\"active ? 'active':''\"><slot></slot></div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tactive: false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\tdiv {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t.active {\r\n\t\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\r\n\t\tbackground-color: #ffec64;\r\n\t}\r\n</style>\r\n\r\n","import { render, staticRenderFns } from \"./ui-trigger.vue?vue&type=template&id=550d0e17&scoped=true&\"\nimport script from \"./ui-trigger.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-trigger.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"550d0e17\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.active ? 'active':''},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","﻿\r\nfunction default_position() {\r\n\treturn {\r\n\t\tx: 0,\t// my props\r\n\t\ty: 0,\t// my props\r\n\t\tmy: \"left top\",\t// my =\t`${h}+${x} ${v}+${y}`\r\n\t\tat: \"left top\",\r\n\t\t//of: selector,\r\n\t\tcollision: \"flip\",\r\n\t\t//using: null,\r\n\t\t//within: window,\r\n\t};\r\n}\r\n\r\nexport default {\r\n\tprops: {\r\n\t\tposition: {\r\n\t\t\tdefault: function () {\r\n\t\t\t\treturn default_position();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tcalcPosition: function (rel) {\r\n\t\t\tlet pos = Object.assign(default_position(), this.position);\r\n\t\t\tlet mypos;\r\n\r\n\t\t\tmypos = pos.my.replace(/[+-\\d]/g, \"\").split(\" \");\r\n\r\n\t\t\tif (mypos.length >= 2) {\r\n\t\t\t\tlet x = rel.x || pos.x;\r\n\t\t\t\tlet y = rel.y || pos.y;\r\n\r\n\t\t\t\tif (x > 0) {\r\n\t\t\t\t\tmypos[0] += \"+\" + x || \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (x < 0) {\r\n\t\t\t\t\tmypos[0] += x || \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (y > 0) {\r\n\t\t\t\t\tmypos[1] += \"+\" + y || \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < 0) {\r\n\t\t\t\t\tmypos[1] += y || \"\";\r\n\t\t\t\t}\r\n\t\t\t\tmypos = mypos.join(\" \");\r\n\t\t\t}\r\n\t\t\tpos.my = mypos;\r\n\r\n\t\t\t//if (!pos.of) {\r\n\t\t\t//\tpos.of = $(this.$el.parentElement);\r\n\t\t\t//}\r\n\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\tsetPosition: function (val) {\r\n\t\t\t$(this.$el).position(val);\r\n\t\t},\r\n\t},\r\n\twatch: {\r\n\t\t\"position\": {\r\n\t\t\thandler: function (val) {\r\n\t\t\t\tlet pos = this.calcPosition(val);\r\n\t\t\t\tif (!pos.of) {\r\n\t\t\t\t\tthis.setPosition(pos);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\talert(\"JQueryUI.position(option)\\nlost option.of:selector\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeep: true,\r\n\t\t},\r\n\t},\r\n};\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div class=\"menu-frame\"><!--outer element keep jquery-ui position-->\r\n\t\t<transition name=\"menu\">\r\n\t\t\t<div v-if=\"show\" class=\"menu\">\r\n\t\t\t\t<slot></slot>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport CorePosition from \"./CorePosition.js\"\r\n\t//function animation_show() {\r\n\t//\treturn {\r\n\t//\t\teffect: \"fade\",\r\n\t//\t\teasing: \"swing\",\r\n\t//\t\tduration: 400,\r\n\t//\t\t//complete: function () { },\r\n\t//\t\t//queue: function () { },\r\n\t//\t};\r\n\t//}\r\n\t//let CoreShow = {\r\n\t//\tprops: {\r\n\t//\t\tshow: {\r\n\t//\t\t\tdefault: true\r\n\t//\t\t},\r\n\t//\t\t\"opt-show\": {\r\n\t//\t\t\tdefault: function () {\r\n\t//\t\t\t\treturn animation_show();\r\n\t//\t\t\t}\r\n\t//\t\t},\r\n\t//\t\t\"opt-hide\": {\r\n\t//\t\t\tdefault: function () {\r\n\t//\t\t\t\treturn animation_show();\r\n\t//\t\t\t}\r\n\t//\t\t},\r\n\t//\t},\r\n\t//\twatch: {\r\n\t//\t\t\"show\": function (val) {\r\n\t//\t\t\tif (val) {\r\n\t//\t\t\t\t$(this.$el).show(this.optShow);\r\n\t//\t\t\t}\r\n\t//\t\t\telse {\r\n\t//\t\t\t\t$(this.$el).hide(this.optHide);\r\n\t//\t\t\t}\r\n\t//\t\t},\r\n\t//\t},\r\n\t//};\r\n\r\n\texport default {\r\n\t\tmixins: [CorePosition],\r\n\t\tprops: {\r\n\t\t\tshow: true\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\t_cp_onclick: null\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t\"show\": function (val) {\r\n\t\t\t\tif (val) {\r\n\t\t\t\t\tif (!this._cp_onclick) {\r\n\t\t\t\t\t\tthis._cp_onclick = (function () {\r\n\t\t\t\t\t\t\tthis.$emit(\"close\");\r\n\t\t\t\t\t\t}).bind(this);\r\n\t\t\t\t\t\t$(window).on(\"mousedown\", this._cp_onclick);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t$(window).off(\"mousedown\", this._cp_onclick);\r\n\t\t\t\t\tthis._cp_onclick = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\t//mounted: function () {\r\n\t\t//}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.menu-frame {\r\n\t\tuser-select: none;\r\n\t\tposition: absolute;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.menu {\r\n\t\tlist-style: none;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0em 0em;\r\n\t\tbackground: #f0f9ff;\r\n\t\tborder: 1px solid darkgray;\r\n\t\tbox-shadow: 0.2em 0.2em 0.2em darkgray;\r\n\t}\r\n\t.menu > *:not(hr) {\r\n\t\tdisplay: block;\r\n\t\tpadding: 0.25em 1em 0.25em 1em;\r\n\t\tbackground: #f0f9ff;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.menu > *.disable {\r\n\t\tcursor: not-allowed;\r\n\t\tcolor: darkgray;\r\n\t}\r\n\t.menu > *:not(.disable):not(hr):hover {\r\n\t\tbackground: linear-gradient(to bottom, #4096ee 0%,#4096ee 100%);\r\n\t\tbox-shadow: inset 0 0 1px #1e69de;\r\n\t}\r\n\t.menu > *:not(.disable):not(hr):active {\r\n\t\tbackground: linear-gradient(to bottom, #6db3f2 0%,#54a3ee 50%,#3690f0 51%,#1e69de 100%);\r\n\t\tbox-shadow: inset 0 0 1px #1e69de;\r\n\t}\r\n\t.menu > hr {\r\n\t\tmargin: 0.2em 0;\r\n\t}\r\n\r\n\t.menu-enter-active {\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\twhite-space: nowrap;\r\n\t\twidth: 100%;\r\n\t\theight: 5em;\r\n\t\ttransition: .3s;\r\n\t}\r\n\t.menu-enter {\r\n\t\topacity: 0;\r\n\t\theight: 0;\r\n\t\twidth: 0;\r\n\t}\r\n\t.menu-leave-active {\r\n\t\ttransition: .4s;\r\n\t}\r\n\t.menu-leave-to {\r\n\t\topacity: 0;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-menu.vue?vue&type=template&id=682e3945&\"\nimport script from \"./ui-menu.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-menu.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-menu.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"menu-frame\"},[_c('transition',{attrs:{\"name\":\"menu\"}},[(_vm.show)?_c('div',{staticClass:\"menu\"},[_vm._t(\"default\")],2):_vm._e()])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ui-draggable',{staticClass:\"ui-dialog ui-equip-box\",attrs:{\"zIndex\":_vm.zIndex,\"position\":_vm.position}},[(_vm.minimum)?_c('div',{staticClass:\"header\",style:(_vm.header_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[_vm._v(\"\\n\\t\\tEquip box\\n\\t\\t\"),_c('div',{staticClass:\"header-buttons\"},[_c('button',{staticClass:\"header-button\",on:{\"click\":function($event){_vm.minimum=!_vm.minimum}}},[_c('span',{staticClass:\"ui-icon ui-icon-plus\"})])])]):_c('div',{staticClass:\"header btn-group\",style:(_vm.header_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[_c('div',{staticClass:\"header\",staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"\\n\\t\\t\\tEquip box\\n\\t\\t\\t\"),_c('div',{staticClass:\"header-buttons\"},[_c('button',{staticClass:\"header-button\",on:{\"click\":function($event){_vm.minimum=!_vm.minimum}}},[_c('span',{staticClass:\"ui-icon ui-icon-minus\"})])])]),_vm._v(\" \"),_c('div',[_vm._m(0)]),_vm._v(\" \"),_c('div',{staticClass:\"button-area\",staticStyle:{\"background\":\"lightgray\"}},[_c('ui-button-group',{staticClass:\"filters\",attrs:{\"type\":\"checkbox\",\"buttons\":_vm.filter_buttons,\"active\":_vm.filters},on:{\"update:active\":function($event){_vm.filters=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('img',{attrs:{\"src\":(\"images/toolstrip_\" + value + \".png\"),\"alt\":text}})]}}])}),_vm._v(\" \"),(_vm._is_category_face())?_c('ui-button-group',{staticClass:\"face_color\",attrs:{\"type\":\"radio\",\"buttons\":_vm.face_color_buttons,\"active\":_vm.face_color},on:{\"update:active\":function($event){_vm.face_color=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('span',{style:({background: '#'+value}),attrs:{\"value\":value,\"title\":(value + \". \" + text + \"色臉型\")}},[_vm._v(_vm._s(text))])]}}])}):_vm._e(),_vm._v(\" \"),(_vm._is_category_hair())?[_c('ui-button-group',{staticClass:\"hair_color\",attrs:{\"type\":\"radio\",\"buttons\":_vm.hair_color_buttons,\"active\":_vm.hair_color},on:{\"update:active\":function($event){_vm.hair_color=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('span',{style:({background: '#'+value}),attrs:{\"value\":value,\"title\":(value + \". \" + text + \"色髮型 (\" + value + \")\")}},[_vm._v(_vm._s(text))])]}}])}),_vm._v(\" \"),_c('table',{staticClass:\"hair_color\",staticStyle:{\"font-family\":\"monospace\",\"text-shadow\":\"0 0 5px white\",\"border-spacing\":\"1px\"}},[_c('tr',[_c('td',{style:(_vm.getHairMixColor1CSS())},[_c('span',{staticStyle:{\"width\":\"3em\",\"display\":\"inline-block\"}},[_vm._v(_vm._s(String(100-_vm.hair_mix2))+\"%\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"100%\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.hair_mix2),expression:\"hair_mix2\",modifiers:{\"number\":true}}],staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"100\",\"step\":\"1\"},domProps:{\"value\":(_vm.hair_mix2)},on:{\"__r\":function($event){_vm.hair_mix2=_vm._n($event.target.value)},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',{style:(_vm.getHairMixColor2CSS())},[_c('span',{staticStyle:{\"width\":\"3em\",\"display\":\"inline-block\"}},[_vm._v(_vm._s(String(_vm.hair_mix2))+\"%\")])])])]),_vm._v(\" \"),_c('ui-button-group',{staticClass:\"hair_color\",attrs:{\"type\":\"radio\",\"buttons\":_vm.hair_color_buttons,\"active\":_vm.hair_color2},on:{\"update:active\":function($event){_vm.hair_color2=$event}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar text = ref.text;\nvar value = ref.value;\nreturn [_c('span',{style:({background: '#'+value}),attrs:{\"value\":value,\"title\":(value + \". \" + text + \"色髮型 (\" + value + \")\")}},[_vm._v(_vm._s(text))])]}}])})]:_vm._e()],2),_vm._v(\" \"),(_vm.__count_of_item_in_page > 0)?_c('div',{staticClass:\"header pagination top\"},[_vm._l((_vm.__count_of_page),function(i){return [(_vm.page == (i-1))?_c('a',{staticClass:\"active\",attrs:{\"title\":i - 1}},[_vm._v(_vm._s(i))]):_c('a',{attrs:{\"title\":i - 1,\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.change_page(i - 1)}}},[_vm._v(_vm._s(i))])]})],2):_vm._e()]),_vm._v(\" \"),_c('div',{ref:\"content\",staticClass:\"content\",style:(_vm.content_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[(_vm.__count_of_item_in_page > 0)?[(_vm.displayMode==false)?[_c('ul',{staticClass:\"item-list\",staticStyle:{\"width\":\"calc(6*48px)\"}},[_vm._l((_vm.__count_of_item_in_page),function(i){return [_c('li',{key:_vm.__get_item_id(i - 1),staticClass:\"list-item\",attrs:{\"id\":'item' + _vm.__get_item_id(i - 1)},on:{\"click\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.clickItem($event,i-1)},\"mousemove\":function($event){_vm.hoverItem($event,i-1)},\"mouseleave\":function($event){_vm.mouseleaveItem($event,i-1)}}},[_c('table',{staticClass:\"item-detail\",on:{\"contextmenu\":function($event){$event.preventDefault();}}},[_c('tr',[_c('td',{staticClass:\"item-icon-outer-frame\",attrs:{\"rowspan\":\"2\"}},[_c('div',{staticClass:\"item-icon-frame\",on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyImageUrl($event, _vm.__get_item_id(i - 1))}}},[_c('img',{attrs:{\"src\":_vm.__get_item_icon_url(i - 1)},on:{\"error\":function($event){_vm.__face_or_hair_img_onerror(i - 1)}}})])]),_vm._v(\" \"),_c('td',{on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyInnerText($event)}}},[_c('div',{staticClass:\"item-name\",style:(_vm.__get_item(i - 1).$foreign?'color: red':'')},[_vm._v(_vm._s(_vm.__get_item_name(i - 1)))])])]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"item-id\",on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyInnerText($event)}}},[_vm._v(_vm._s(_vm.__get_item_id(i - 1)))])])])])]})],2)]:[_c('div',{staticClass:\"item-list-sm\",style:({width: (\"calc(\" + (_vm.column_count + 1) + \"*48px)\")})},[_vm._l((_vm.__count_of_item_in_page),function(i){return [_c('div',{key:_vm.__get_item_id(i - 1),staticClass:\"list-item-sm\",attrs:{\"id\":'item' + _vm.__get_item_id(i - 1)},on:{\"contextmenu\":function($event){$event.preventDefault();},\"click\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.clickItem($event,i-1)},\"mousemove\":function($event){_vm.hoverItem($event,i-1)},\"mouseleave\":function($event){_vm.mouseleaveItem($event,i-1)}}},[_c('table',{staticClass:\"item-detail\"},[_c('tr',[_c('td',{staticClass:\"item-icon-outer-frame\"},[_c('div',{staticClass:\"item-icon-frame-sm\",on:{\"mousedown\":[function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.copyText($event, _vm.__get_item_name(i - 1))},function($event){if('button' in $event && $event.button !== 1){ return null; }$event.preventDefault();_vm.copyText($event, _vm.__get_item_id(i - 1))}]}},[_c('img',{attrs:{\"src\":_vm.__get_item_icon_url(i - 1)},on:{\"error\":function($event){_vm.__face_or_hair_img_onerror(i - 1)}}})])])])])])]})],2)]]:[_c('div',{pre:true,attrs:{\"style\":\"cursor: default;\"}},[_vm._v(\"\\n\\t\\t\\t\\tNo search item\\n\\t\\t\\t\")])]],2),_vm._v(\" \"),(!_vm.minimum)?_c('div',{staticClass:\"footer\",style:(_vm.header_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[(!_vm.minimum)?_c('div',{staticStyle:{\"text-align\":\"center\"}},[(_vm.__count_of_item_in_page > 0)?_c('div',{staticClass:\"pagination bottom\"},[_vm._l((_vm.__count_of_page),function(i){return [(_vm.page == (i-1))?_c('a',{staticClass:\"active\",attrs:{\"title\":i - 1}},[_vm._v(_vm._s(i))]):_c('a',{attrs:{\"title\":i - 1,\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.change_page(i - 1)}}},[_vm._v(_vm._s(i))])]})],2):_vm._e()]):_vm._e()]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"display\":\"inline-flex\",\"width\":\"100%\"}},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selected_category),expression:\"selected_category\"}],staticStyle:{\"flex\":\"1\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selected_category=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_vm._l((_vm.categoryGroupList),function(og,key){return [(og.length>1)?[_c('optgroup',{attrs:{\"label\":key}},_vm._l((og),function(cat){return _c('option',{domProps:{\"value\":cat.id_prefix}},[_vm._v(_vm._s(cat.categoryName))])}))]:[_c('option',{domProps:{\"value\":og[0].id_prefix}},[_vm._v(_vm._s(og[0].categoryName))])]]})],2),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search_text),expression:\"search_text\"}],ref:\"input_search\",attrs:{\"type\":\"search\",\"list\":\"search_param\"},domProps:{\"value\":(_vm.search_text)},on:{\"keydown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchNextText($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.search_text=$event.target.value}}}),_vm._v(\" \"),_c('datalist',{attrs:{\"id\":\"search_param\"}},[_c('option',{attrs:{\"value\":\"劍\"}},[_vm._v(\"item Name\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"01302000\"}},[_vm._v(\"item ID\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"<attr>:/<regexp>/\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"$style:/21158/\"}},[_vm._v(\"face | hair\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"$foreign:/true/\"}},[_vm._v(\"external resource\")]),_vm._v(\" \"),_c('option',{domProps:{\"value\":'__v:/'+_vm.DATA_TAG_VERSION+'/'}},[_vm._v(\"current version\")])]),_vm._v(\" \"),_c('div',{staticStyle:{\"position\":\"relative\",\"display\":\"inline-block\"}},[_c('button',{directives:[{name:\"ui\",rawName:\"v-ui:show.mouseenter\",value:(200),expression:\"200\",arg:\"show\",modifiers:{\"mouseenter\":true}},{name:\"ui\",rawName:\"v-ui:hide.mouseleave\",value:(200),expression:\"200\",arg:\"hide\",modifiers:{\"mouseleave\":true}},{name:\"ui\",rawName:\"v-ui:ref\",value:('setting'),expression:\"'setting'\",arg:\"ref\"}],staticStyle:{\"padding\":\"0\"}},[_c('span',{staticClass:\"ui-icon ui-icon-gear\"})]),_vm._v(\" \"),_c('div',{directives:[{name:\"ui\",rawName:\"v-ui:hide\",arg:\"hide\"},{name:\"ui\",rawName:\"v-ui:show.mouseenter\",value:(200),expression:\"200\",arg:\"show\",modifiers:{\"mouseenter\":true}},{name:\"ui\",rawName:\"v-ui:hide.mouseleave\",value:(200),expression:\"200\",arg:\"hide\",modifiers:{\"mouseleave\":true}},{name:\"ui\",rawName:\"v-ui:ref\",value:('setting'),expression:\"'setting'\",arg:\"ref\"}],ref:\"setting\",staticStyle:{\"position\":\"absolute\",\"left\":\"0\",\"top\":\"0\",\"background\":\"#e9e9e9\",\"border\":\"1px solid #ddd\",\"width\":\"12em\",\"text-align\":\"left\",\"padding\":\"0.25em 0.5em\"}},[_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.onlyShowSearchResult),expression:\"onlyShowSearchResult\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.onlyShowSearchResult)?_vm._i(_vm.onlyShowSearchResult,null)>-1:(_vm.onlyShowSearchResult)},on:{\"change\":function($event){var $$a=_vm.onlyShowSearchResult,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.onlyShowSearchResult=$$a.concat([$$v]))}else{$$i>-1&&(_vm.onlyShowSearchResult=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.onlyShowSearchResult=$$c}}}}),_vm._v(\"Only show result of search\")])]),_vm._v(\" \"),_c('div',[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.displayMode),expression:\"displayMode\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.displayMode)?_vm._i(_vm.displayMode,null)>-1:(_vm.displayMode)},on:{\"change\":function($event){var $$a=_vm.displayMode,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.displayMode=$$a.concat([$$v]))}else{$$i>-1&&(_vm.displayMode=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.displayMode=$$c}}}}),_vm._v(\"display: \"+_vm._s(_vm.displayMode ? \"plain\":\"list\"))])])])])])}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div class=\"ui-button-group\">\r\n\t\t<button v-for=\"(item, index) in buttons\" :data-id=\"index\" @click=\"onclick(index)\" :style=\"item.style\">\r\n\t\t\t<slot :text=\"item.text\" :value=\"item.value\" :index=\"index\"></slot>\r\n\t\t</button>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\tbuttons: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'checkbox'\r\n\t\t\t},\r\n\t\t\tactive: {\r\n\t\t\t\ttype: [Number, Array],\r\n\t\t\t\trequired: false\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tonclick: function (id) {\r\n\t\t\t\tlet selected;\r\n\r\n\t\t\t\tif (this.type == 'checkbox') {\r\n\t\t\t\t\tconst index = this.active.indexOf(id);\r\n\t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\tselected = [...this.active];\r\n\t\t\t\t\t\tselected.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tselected = [...this.active, id];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst buttons = this.buttons;\r\n\t\t\t\t\tlet btns = selected.map(function (id) {\r\n\t\t\t\t\t\treturn buttons[id];\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.$emit('update:active', selected);\r\n\t\t\t\t\tthis.$emit('change', btns);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.$emit('update:active', id);\r\n\t\t\t\t\tthis.$emit('change', this.buttons[id]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_update_element: function () {\r\n\t\t\t\tlet actives;\r\n\t\t\t\tif (this.type == 'checkbox') {\r\n\t\t\t\t\tif (!this.active) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactives = this.active;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!Number.isInteger(this.active)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactives = [this.active];\r\n\t\t\t\t}\r\n\t\t\t\tlet $el = this.$el;\r\n\r\n\t\t\t\tlet $all_active = [...this.$el.querySelectorAll(\".active\")];\r\n\t\t\t\tlet selected = $all_active.forEach(function (elem) {\r\n\t\t\t\t\telem.classList.remove(\"active\");\r\n\t\t\t\t});\r\n\r\n\t\t\t\tactives.forEach(function (id) {\r\n\t\t\t\t\tlet elem = $el.querySelector(`[data-id=\"${id}\"]`);\r\n\t\t\t\t\tif (elem) {\r\n\t\t\t\t\t\telem.classList.toggle(\"active\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tactive: function () {\r\n\t\t\t\tthis._update_element();\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis._update_element();\r\n\t\t},\r\n\t};\r\n\t//<slot v-for=\"(value, key) in buttons\" :value=\"value\" :key=\"key\"></slot>\r\n</script>\r\n\r\n<style>\r\n\t.ui-button-group input[type=\"radio\"] {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.ui-button-group {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.ui-button-group button {\r\n\t\tflex: 1;\r\n\t\tpadding: 0;\r\n\t\toutline: none;\r\n\t}\r\n\t/*.ui-button-group button > * {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}*/\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-button-group.vue?vue&type=template&id=44abfdf6&\"\nimport script from \"./ui-button-group.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-button-group.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-button-group.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ui-button-group\"},_vm._l((_vm.buttons),function(item,index){return _c('button',{style:(item.style),attrs:{\"data-id\":index},on:{\"click\":function($event){_vm.onclick(index)}}},[_vm._t(\"default\",null,{text:item.text,value:item.value,index:index})],2)}))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<ui-draggable class=\"ui-dialog ui-equip-box\" :zIndex=\"zIndex\" :position=\"position\">\r\n\t\t<div v-if=\"minimum\" @mousedown.left=\"requireOrder($event)\" class=\"header\" :style=\"header_style\">\r\n\t\t\tEquip box\r\n\t\t\t<div class=\"header-buttons\">\r\n\t\t\t\t<button @click=\"minimum=!minimum\"\r\n\t\t\t\t\t\tclass=\"header-button\">\r\n\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-plus\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div v-else @mousedown.left=\"requireOrder($event)\" class=\"header btn-group\" :style=\"header_style\">\r\n\t\t\t<div class=\"header\" style=\"text-align: left;\">\r\n\t\t\t\tEquip box\r\n\t\t\t\t<div class=\"header-buttons\">\r\n\t\t\t\t\t<button @click=\"minimum=!minimum\"\r\n\t\t\t\t\t\t\tclass=\"header-button\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-minus\"></span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<div v-once style=\"display: inline-flex; width: 100%;\">\r\n\t\t\t\t\t<select v-model=\"selected_category\" style=\"flex: 1;\">\r\n\t\t\t\t\t\t<template v-for=\"(og,key) in categoryGroupList\">\r\n\t\t\t\t\t\t\t<template v-if=\"og.length>1\">\r\n\t\t\t\t\t\t\t\t<optgroup :label=\"key\">\r\n\t\t\t\t\t\t\t\t\t<option v-for=\"cat in og\" :value=\"cat.id_prefix\">{{cat.categoryName}}</option>\r\n\t\t\t\t\t\t\t\t</optgroup>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t\t<option :value=\"og[0].id_prefix\">{{og[0].categoryName}}</option>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<input ref=\"input_search\" type=\"search\" v-model=\"search_text\" @keydown.enter=\"searchNextText\" list=\"search_param\" />\r\n\t\t\t\t\t<datalist id=\"search_param\">\r\n\t\t\t\t\t\t<option value=\"劍\">item Name</option>\r\n\t\t\t\t\t\t<option value=\"01302000\">item ID</option>\r\n\t\t\t\t\t\t<option value=\"<attr>:/<regexp>/\"></option>\r\n\t\t\t\t\t\t<option value=\"$style:/21158/\">face | hair</option>\r\n\t\t\t\t\t\t<option value=\"$foreign:/true/\">external resource</option>\r\n\t\t\t\t\t\t<option :value=\"'__v:/'+DATA_TAG_VERSION+'/'\">current version</option>\r\n\t\t\t\t\t</datalist>\r\n\t\t\t\t\t<div style=\"position: relative; display: inline-block;\">\r\n\t\t\t\t\t\t<button v-ui:show.mouseenter=\"200\" v-ui:hide.mouseleave=\"200\" v-ui:ref=\"'setting'\" style=\"padding: 0;\">\r\n\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-gear\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div v-ui:hide v-ui:show.mouseenter=\"200\" v-ui:hide.mouseleave=\"200\" v-ui:ref=\"'setting'\" ref=\"setting\"\r\n\t\t\t\t\t\t\t style=\"position: absolute; left: 0; top: 0; background: #e9e9e9; border: 1px solid #ddd; width: 12em; text-align:left; padding: 0.25em 0.5em;\">\r\n\t\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"onlyShowSearchResult\" />Only show result of search</label></div>\r\n\t\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"displayMode\" />display: {{displayMode ? \"plain\":\"list\"}}</label></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"button-area\" style=\"background: lightgray;\">\r\n\t\t\t\t<ui-button-group type=\"checkbox\" :buttons=\"filter_buttons\" :active.sync=\"filters\" class=\"filters\">\r\n\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t<img :src=\"`images/toolstrip_${value}.png`\" :alt=\"text\" />\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</ui-button-group>\r\n\r\n\t\t\t\t<ui-button-group v-if=\"_is_category_face()\" type=\"radio\" :buttons=\"face_color_buttons\" :active.sync=\"face_color\" class=\"face_color\">\r\n\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t<span :value=\"value\" :title=\"`${value}. ${text}色臉型`\" :style=\"{background: '#'+value}\">{{text}}</span>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</ui-button-group>\r\n\r\n\t\t\t\t<template v-if=\"_is_category_hair()\">\r\n\t\t\t\t\t<ui-button-group type=\"radio\" :buttons=\"hair_color_buttons\" :active.sync=\"hair_color\" class=\"hair_color\">\r\n\t\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t\t<span :value=\"value\" :title=\"`${value}. ${text}色髮型 (${value})`\" :style=\"{background: '#'+value}\">{{text}}</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</ui-button-group>\r\n\t\t\t\t\t<table class=\"hair_color\" style=\"font-family: monospace; text-shadow: 0 0 5px white; border-spacing: 1px;\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td :style=\"getHairMixColor1CSS()\"><span style=\"width: 3em; display: inline-block;\">{{String(100-hair_mix2)}}%</span></td>\r\n\t\t\t\t\t\t\t<td style=\"width: 100%;\"><input type=\"range\" min=\"0\" max=\"100\" step=\"1\" v-model.number=\"hair_mix2\" style=\"width: 100%;\" /></td>\r\n\t\t\t\t\t\t\t<td :style=\"getHairMixColor2CSS()\"><span style=\"width: 3em; display: inline-block;\">{{String(hair_mix2)}}%</span></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t<ui-button-group type=\"radio\" :buttons=\"hair_color_buttons\" :active.sync=\"hair_color2\" class=\"hair_color\">\r\n\t\t\t\t\t\t<template slot-scope=\"{text, value}\">\r\n\t\t\t\t\t\t\t<span :value=\"value\" :title=\"`${value}. ${text}色髮型 (${value})`\" :style=\"{background: '#'+value}\">{{text}}</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</ui-button-group>\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div v-if=\"__count_of_item_in_page > 0\" class=\"header pagination top\">\r\n\t\t\t\t<template v-for=\"i in __count_of_page\">\r\n\t\t\t\t\t<a v-if=\"page == (i-1)\" :title=\"i - 1\" class=\"active\">{{i}}</a>\r\n\t\t\t\t\t<a v-else @click.prevent=\"change_page(i - 1)\" :title=\"i - 1\" href=\"#\">{{i}}</a>\r\n\t\t\t\t</template>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div ref=\"content\" @mousedown.left=\"requireOrder($event)\" :style=\"content_style\" class=\"content\">\r\n\t\t\t<template v-if=\"__count_of_item_in_page > 0\">\r\n\t\t\t\t<template v-if=\"displayMode==false\">\r\n\t\t\t\t\t<ul class=\"item-list\" style=\"width: calc(6*48px);\">\r\n\t\t\t\t\t\t<template v-for=\"i in __count_of_item_in_page\">\r\n\t\t\t\t\t\t\t<li :key=\"__get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t:id=\"'item' + __get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t@click.left=\"clickItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t@mousemove=\"hoverItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t@mouseleave=\"mouseleaveItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\tclass=\"list-item\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<table @contextmenu.prevent class=\"item-detail\">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan=\"2\" class=\"item-icon-outer-frame\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div @mousedown.right=\"copyImageUrl($event, __get_item_id(i - 1))\" class=\"item-icon-frame\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img :src=\"__get_item_icon_url(i - 1)\" @error=\"__face_or_hair_img_onerror(i - 1)\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td @mousedown.right=\"copyInnerText($event)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"item-name\" :style=\"__get_item(i - 1).$foreign?'color: red':''\">{{__get_item_name(i - 1)}}</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td @mousedown.right=\"copyInnerText($event)\" class=\"item-id\">{{__get_item_id(i - 1)}}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t<div class=\"item-list-sm\" :style=\"{width: `calc(${column_count + 1}*48px)`}\">\r\n\t\t\t\t\t\t<template v-for=\"i in __count_of_item_in_page\">\r\n\t\t\t\t\t\t\t<div @contextmenu.prevent :key=\"__get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t :id=\"'item' + __get_item_id(i - 1)\"\r\n\t\t\t\t\t\t\t\t @click.left=\"clickItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t @mousemove=\"hoverItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t @mouseleave=\"mouseleaveItem($event,i-1)\"\r\n\t\t\t\t\t\t\t\t class=\"list-item-sm\"\r\n\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t<table class=\"item-detail\">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td class=\"item-icon-outer-frame\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div @mousedown.right=\"copyText($event, __get_item_name(i - 1))\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t @mousedown.middle.prevent=\"copyText($event, __get_item_id(i - 1))\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t class=\"item-icon-frame-sm\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img :src=\"__get_item_icon_url(i - 1)\" @error=\"__face_or_hair_img_onerror(i - 1)\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<div v-pre style=\"cursor: default;\">\r\n\t\t\t\t\tNo search item\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</div>\r\n\r\n\t\t<div v-if=\"!minimum\" @mousedown.left=\"requireOrder($event)\" class=\"footer\" :style=\"header_style\">\r\n\t\t\t<div v-if=\"!minimum\" style=\"text-align: center;\">\r\n\t\t\t\t<div v-if=\"__count_of_item_in_page > 0\" class=\"pagination bottom\">\r\n\t\t\t\t\t<template v-for=\"i in __count_of_page\">\r\n\t\t\t\t\t\t<a v-if=\"page == (i-1)\" :title=\"i - 1\" class=\"active\">{{i}}</a>\r\n\t\t\t\t\t\t<a v-else @click.prevent=\"change_page(i - 1)\" :title=\"i - 1\" href=\"#\">{{i}}</a>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!--<div style=\"background: lightgray;\">\r\n\t\t\t\t\t<p>selected_category: {{selected_category}}</p>\r\n\t\t\t\t\t<p>search_item: {{search_item}}</p>\r\n\t\t\t\t\t<p>filters: {{filters}}</p>\r\n\t\t\t\t\t<p>face_color: {{face_color}}</p>\r\n\t\t\t\t\t<p>hair_color: {{hair_color}}</p>\r\n\t\t\t\t</div>-->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ui-draggable>\r\n</template>\r\n\r\n<script>\r\n\timport Vuex from 'vuex';\r\n\r\n\timport UIDraggable from \"../components/ui-draggable.vue\";\r\n\timport UIDialog from \"../components/ui-dialog.vue\";\r\n\timport UIButtonGroup from '../components/ui-button-group.vue';\r\n\r\n\timport { ItemCategoryInfo, ResourceManager, ItemAttrNormalize, CharacterRenderConfig } from '../../public/javascripts/resource.js';\r\n\r\n\tfunction emSize(socpe) {\r\n\t\tlet scopeTest = document.createElement(\"div\");\r\n\t\tscopeTest.style.position = \"fixed\";\r\n\t\tscopeTest.style.left = \"0\";\r\n\t\tscopeTest.style.top = \"0\";\r\n\t\tscopeTest.style.height = \"1em\";\r\n\t\tscopeTest.style.width = \"1em\";\r\n\t\tsocpe.appendChild(scopeTest);\r\n\t\tlet scopeVal = scopeTest.clientHeight;\r\n\t\tdocument.body.remove(scopeTest);\r\n\t\treturn scopeVal;\r\n\t};\r\n\r\n\tlet filter_buttons = [\r\n\t\t{ text: \"Cash\", value: \"cash\", style: {} },\r\n\t\t{ text: \"Standard\", value: \"standard\", style: {} },\r\n\t\t{ text: \"Female\", value: \"female\", style: {} },\r\n\t\t{ text: \"Male\", value: \"male\", style: {} },\r\n\t\t{ text: \"Universal\", value: \"neutral\", style: {} },\r\n\t\t{ text: \"Unlimited\", value: \"unlimited\", style: {} },\r\n\t\t{ text: \"Beginner\", value: \"beginner\", style: {} },\r\n\t\t{ text: \"Warrior\", value: \"warrior\", style: {} },\r\n\t\t{ text: \"Magician\", value: \"magician\", style: {} },\r\n\t\t{ text: \"Bowman\", value: \"bowman\", style: {} },\r\n\t\t{ text: \"Thief\", value: \"thief\", style: {} },\r\n\t\t{ text: \"Pirate\", value: \"pirate\", style: {} },\r\n\t];\r\n\r\n\tconst face_color_buttons = [\r\n\t\t{ text: \"黑\", value: \"0\", style: { background: \"#333333\" } },\r\n\t\t{ text: \"藍\", value: \"1\", style: { background: \"#0000ff\" } },\r\n\t\t{ text: \"紅\", value: \"2\", style: { background: \"#ff0000\" } },\r\n\t\t{ text: \"綠\", value: \"3\", style: { background: \"#00ff00\" } },\r\n\t\t{ text: \"棕\", value: \"4\", style: { background: \"#804040\" } },\r\n\t\t{ text: \"青\", value: \"5\", style: { background: \"#00ffc0\" } },\r\n\t\t{ text: \"紫\", value: \"6\", style: { background: \"#8000ff\" } },\r\n\t\t{ text: \"粉\", value: \"7\", style: { background: \"#ff00ff\" } },\r\n\t\t{ text: \"銀\", value: \"8\", style: { background: \"#C0C0C0\" } },\r\n\t];\r\n\r\n\tconst hair_color_buttons = [\r\n\t\t{ text: \"黑\", value: \"0\", style: { background: \"#333333\" } },\r\n\t\t{ text: \"紅\", value: \"1\", style: { background: \"#ff0000\" } },\r\n\t\t{ text: \"橙\", value: \"2\", style: { background: \"#ff8040\" } },\r\n\t\t{ text: \"黃\", value: \"3\", style: { background: \"#ffff00\" } },\r\n\t\t{ text: \"綠\", value: \"4\", style: { background: \"#00ff00\" } },\r\n\t\t{ text: \"藍\", value: \"5\", style: { background: \"#0000ff\" } },\r\n\t\t{ text: \"紫\", value: \"6\", style: { background: \"#8000ff\" } },\r\n\t\t{ text: \"棕\", value: \"7\", style: { background: \"#804040\" } },\r\n\t];\r\n\r\n\tconst face_color_buttons_en = [\r\n\t\t{ text: \"Black\", value: \"0\", style: { background: \"#111111\" } },\r\n\t\t{ text: \"Blue\", value: \"1\", style: { background: \"#0000ff\" } },\r\n\t\t{ text: \"Red\", value: \"2\", style: { background: \"#ff0000\" } },\r\n\t\t{ text: \"Green\", value: \"3\", style: { background: \"#00ff00\" } },\r\n\t\t{ text: \"Hazel\", value: \"4\", style: { background: \"#804040\" } },\r\n\t\t{ text: \"Sapphire\", value: \"5\", style: { background: \"#00ffc0\" } },\r\n\t\t{ text: \"Violet\", value: \"6\", style: { background: \"#8000ff\" } },\r\n\t\t{ text: \"Amethyst\", value: \"7\", style: { background: \"#ff00ff\" } },\r\n\t\t{ text: \"White\", value: \"8\", style: { background: \"#C0C0C0\" } },\r\n\t];\r\n\r\n\tclass ItemFilter {\r\n\t\tstatic cash(item) {\r\n\t\t\t//return item.cash == 1;\r\n\t\t\treturn item.cash > 0;\r\n\t\t}\r\n\t\tstatic standard(item) {\r\n\t\t\t//return item.cash != 1;\r\n\t\t\treturn item.cash == null || item.cash == 0;\r\n\t\t}\r\n\r\n\t\tstatic female(item) {\r\n\t\t\treturn item.gender == 1;\r\n\t\t}\r\n\t\tstatic male(item) {\r\n\t\t\treturn item.gender == 0;\r\n\t\t}\r\n\t\tstatic neutral(item) {\r\n\t\t\treturn item.gender == 2;\r\n\t\t}\r\n\r\n\t\tstatic unlimited(item) {\r\n\t\t\treturn item.reqJob == 0 || item.reqJob == null;\r\n\t\t}\r\n\t\tstatic beginner(item) {\r\n\t\t\treturn item.reqJob == -1;\r\n\t\t}\r\n\t\tstatic warrior(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 1;\r\n\t\t}\r\n\t\tstatic magician(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 2;\r\n\t\t}\r\n\t\tstatic bowman(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 4;\r\n\t\t}\r\n\t\tstatic thief(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 8;\r\n\t\t}\r\n\t\tstatic pirate(item) {\r\n\t\t\treturn item.reqJob > 0 && item.reqJob & 16;\r\n\t\t}\r\n\t}\r\n\tItemFilter.list = [];\r\n\tfor (let i = 0; i < filter_buttons.length; ++i) {\r\n\t\tlet fn = ItemFilter[filter_buttons[i].value];\r\n\t\tItemFilter.list[i] = fn;\r\n\t}\r\n\r\n\tconst config = new (class {\r\n\t\tconstructor() {\r\n\t\t\tthis.pageSize = 100;\r\n\t\t}\r\n\t\tcalcPage(index) {\r\n\t\t\treturn Math.trunc(index / this.pageSize);\r\n\t\t}\r\n\t});\r\n\r\n\texport default {\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\t//config: config,\r\n\t\t\t\tsearch_text: \"\",\r\n\t\t\t\tsearch_next: -1,\r\n\r\n\t\t\t\tcolumn_count: 5,\r\n\r\n\t\t\t\tloaded_equip_list: [],\t// origin list (no filter)\r\n\t\t\t\tloaded_category: null,\r\n\t\t\t\tequip_list: [],\t\t\t// view list (final result)\r\n\t\t\t\tsearch_equip_result: [],// only search result\r\n\r\n\t\t\t\tselected_category: \"0000\",\r\n\t\t\t\tfilters: [],\r\n\t\t\t\tface_color: 0,\r\n\t\t\t\thair_color: 0,\r\n\t\t\t\thair_color2: 0,\r\n\t\t\t\thair_mix2: 0,\r\n\r\n\t\t\t\tpage: 0,\r\n\r\n\t\t\t\tface_names: null,\r\n\t\t\t\thair_names: null,\r\n\r\n\t\t\t\tonlyShowSearchResult: true,\r\n\t\t\t\tdisplayMode: true,\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tDATA_TAG_VERSION: () => window.DATA_TAG + window.DATA_VERSION,\r\n\t\t\tcategoryGroupList: function () {\r\n\t\t\t\t/** @type {ItemCategoryInfo[]} */\r\n\t\t\t\tconst cl = Object.values(ItemCategoryInfo._info);//ItemCategoryInfo._categoryList;\r\n\t\t\t\tlet ss = {};\r\n\t\t\t\tlet ks = {};\r\n\r\n\t\t\t\tcl.forEach(cat => {\r\n\t\t\t\t\tlet group;\r\n\t\t\t\t\tif (cat.slot) {\r\n\t\t\t\t\t\tlet _g = cat.slot.match(/^[0-9a-z]+/);\r\n\t\t\t\t\t\tgroup = _g ? _g[0].toLocaleLowerCase() : cat.slot;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet group = cat.categoryName;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!ss[group]) {\r\n\t\t\t\t\t\tss[group] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet key = cat.categoryName || cat.listPath;\r\n\t\t\t\t\tif (!ks[key]) {\r\n\t\t\t\t\t\tss[group].push(cat);\r\n\t\t\t\t\t\tks[key] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn ss;\r\n\t\t\t},\r\n\t\t\tfilter_buttons: () => filter_buttons,\r\n\t\t\tface_color_buttons: () => face_color_buttons,\r\n\t\t\thair_color_buttons: () => hair_color_buttons,\r\n\t\t\t__count_of_item_in_page: function () {\r\n\t\t\t\tconst start = this.page * config.pageSize;\r\n\t\t\t\tconst end = Math.min(start + config.pageSize, this.equip_list.length);\r\n\t\t\t\tconst count = end - start;\r\n\r\n\t\t\t\treturn Math.min(Math.max(0, count), this.equip_list.length);//return 0 < count < this.equip_list.length\r\n\t\t\t},\r\n\t\t\t__count_of_page: function () {\r\n\t\t\t\treturn Math.ceil(this.equip_list.length / config.pageSize);\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tgetHairMixColor1CSS() {\r\n\t\t\t\treturn Object.assign({ \"clip-path\": \"polygon(50% 0%, 0% 20%, 0% 90%, 100% 90%, 100% 20%)\" }, hair_color_buttons[this.hair_color].style);\r\n\t\t\t},\r\n\t\t\tgetHairMixColor2CSS() {\r\n\t\t\t\treturn Object.assign({ \"clip-path\": \"polygon(0% 10%, 0% 80%, 50% 100%, 100% 80%, 100% 10%)\" }, this.hair_color2 != null ? hair_color_buttons[this.hair_color2].style : {});\r\n\t\t\t},\r\n\t\t\tcopyImageUrl: function (e, id) {\r\n\t\t\t\tlet img = e.currentTarget.querySelector(\"img\");\r\n\t\t\t\tif (img) {\r\n\t\t\t\t\tif (img.src.startsWith(\"data:image/\")) {\r\n\t\t\t\t\t\tif (window.confirm(\"圖示可能不存在，確定要複製圖示位置？\")) {\r\n\t\t\t\t\t\t\tlet url = ItemCategoryInfo.getIconRawUrl(id);\r\n\t\t\t\t\t\t\tcopyToClipboard(url);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcopyToClipboard(img.src);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcopyInnerText: function (e) {\r\n\t\t\t\tlet el = e.currentTarget;\r\n\t\t\t\tlet text = el.innerText;\r\n\t\t\t\tcopyToClipboard(text);\r\n\r\n\t\t\t\tSelectText(el);\r\n\t\t\t},\r\n\t\t\tcopyText: function (e, text) {\r\n\t\t\t\tcopyToClipboard(text);\r\n\t\t\t},\r\n\t\t\tsearch_equip: async function (search_text) {\r\n\t\t\t\tthis.clearSearch();\r\n\r\n\t\t\t\tif (!search_text || search_text == \"\") {\r\n\t\t\t\t\tthis.search_equip_result = [];\r\n\t\t\t\t\tif (this.onlyShowSearchResult) {\r\n\t\t\t\t\t\tawait this.loadList();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tawait this.loadList();\r\n\r\n\t\t\t\t\tlet old_search_equip_result = this.search_equip_result;\r\n\t\t\t\t\tthis.search_equip_result = [];\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet rr = search_text.match(/^(.+):\\/(.+)\\/$/);\r\n\r\n\t\t\t\t\t\tif (rr) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet attr = rr[1];\r\n\r\n\t\t\t\t\t\t\t\tif (attr == \"$style\" && Number.isSafeInteger(Number(rr[2]))) {\r\n\t\t\t\t\t\t\t\t\tlet si = rr[2];\r\n\t\t\t\t\t\t\t\t\tif (this._is_category_hair()) {\r\n\t\t\t\t\t\t\t\t\t\tlet black = CharacterRenderConfig.getColorHairID(String(si), 0);\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet b1 = item.id == null || CharacterRenderConfig.getColorHairID(item.id, 0);\r\n\t\t\t\t\t\t\t\t\t\t\tif (b1 && b1.indexOf(black) != -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.$page = config.calcPage(index);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (this._is_category_face()) {\r\n\t\t\t\t\t\t\t\t\t\tlet black = CharacterRenderConfig.getColorFaceID(String(si), 0);\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet b1 = item.id == null || CharacterRenderConfig.getColorFaceID(item.id, 0);\r\n\t\t\t\t\t\t\t\t\t\t\tif (b1 && b1.indexOf(black) != -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.$page = config.calcPage(index);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.search_equip_result.length == 0) {\r\n\t\t\t\t\t\t\t\t\tlet regexp = RegExp(rr[2]);\r\n\t\t\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\t\t\tif (item[attr] != null && regexp.test(item[attr])) {\r\n\t\t\t\t\t\t\t\t\t\t\titem.$page = config.calcPage(index);\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (this.search_equip_result &&\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result[0] &&\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result[0][attr] &&\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result[0][attr].localeCompare\r\n\t\t\t\t\t\t\t\t\t) {//check attr is can compare\r\n\t\t\t\t\t\t\t\t\t\tthis.search_equip_result.sort(function (a, b) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet sa = a[attr], sb = b[attr];\r\n\t\t\t\t\t\t\t\t\t\t\treturn sa.localeCompare(sb);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\t\tthis.search_equip_result = [];\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.search_equip_result = this.equip_list.filter(function (item, index) {\r\n\t\t\t\t\t\t\t\tif (item.id && item.id.indexOf(search_text) >= 0 ||\r\n\t\t\t\t\t\t\t\t\titem.name && (\r\n\t\t\t\t\t\t\t\t\t\titem.name.indexOf(search_text) >= 0 ||\r\n\t\t\t\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(search_text.toLowerCase()) >= 0\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\titem.$page = config.calcPage(index);\r\n\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.search_equip_result.sort(function (a, b) {\r\n\t\t\t\t\t\t\t\tif (a.name && b.name) {\r\n\t\t\t\t\t\t\t\t\treturn a.name.localeCompare(b.name);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\tthis.search_equip_result = old_search_equip_result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\told_search_equip_result = null;\r\n\r\n\t\t\t\t\tif (this.search_equip_result.length) {\r\n\t\t\t\t\t\tthis.searchNextText();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log(\"no search: \" + search_text);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.onlyShowSearchResult) {\r\n\t\t\t\t\tthis.page = 0;\r\n\t\t\t\t\tthis.equip_list = this.search_equip_result;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsearchNextText: function (text) {\r\n\t\t\t\tif (this.onlyShowSearchResult) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t//if (e.keyCode == 13) {}\r\n\r\n\t\t\t\tlet next = (this.search_next + 1) % this.search_equip_result.length;\r\n\r\n\t\t\t\tlet item = this.search_equip_result[next];\r\n\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\tconst page = item.$page;\r\n\r\n\t\t\t\t\tthis.change_page(page);\r\n\r\n\t\t\t\t\tthis.$nextTick(function () {\r\n\t\t\t\t\t\twindow.location.hash = \"item\" + item.id;\r\n\r\n\t\t\t\t\t\tthis.$refs.input_search.focus();\r\n\r\n\t\t\t\t\t\t//console.log({\r\n\t\t\t\t\t\t//\tid: item.id,\r\n\t\t\t\t\t\t//\tname: item.name,\r\n\t\t\t\t\t\t//\tpage: page,\r\n\t\t\t\t\t\t//});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.search_next = next;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tclearSearch: function () {\r\n\t\t\t\tthis.search_next = -1;\r\n\t\t\t\twindow.location.hash = \"\";\r\n\t\t\t},\r\n\t\t\tchange_page: function (page) {\r\n\t\t\t\tif (this.page != page) {\r\n\t\t\t\t\tthis.$refs.content.scrollTop = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.page = page;\r\n\t\t\t\tthis.clearSearch();\r\n\t\t\t\t//console.log(\"change page: \" + page);\r\n\t\t\t},\r\n\t\t\t__get_category_slot: function () {\r\n\t\t\t\tconst cateinfo = ItemCategoryInfo.get(this.selected_category);\r\n\t\t\t\tif (cateinfo) {\r\n\t\t\t\t\treturn cateinfo.slot;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t_is_category_face: function () {\r\n\t\t\t\tconst slot = this.__get_category_slot();\r\n\t\t\t\treturn slot == \"face\";\r\n\t\t\t},\r\n\t\t\t_is_category_hair: function () {\r\n\t\t\t\tconst slot = this.__get_category_slot();\r\n\t\t\t\treturn slot == \"hair\";\r\n\t\t\t},\r\n\t\t\t__get_color: function () {\r\n\t\t\t\tif (this._is_category_face()) {\r\n\t\t\t\t\treturn this.face_color;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._is_category_hair()) {\r\n\t\t\t\t\treturn this.hair_color;\r\n\t\t\t\t}\r\n\t\t\t\treturn \"\";\r\n\t\t\t},\r\n\t\t\tloadList: async function () {\r\n\t\t\t\tif (this.selected_category == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.clearSearch();\r\n\r\n\t\t\t\tconst prefix = this.selected_category;\r\n\t\t\t\tconst cateinfo = ItemCategoryInfo.get(prefix);\r\n\t\t\t\tconst listPath = cateinfo.listPath || cateinfo.path || cateinfo.slot;\r\n\r\n\t\t\t\tconst coloredPath = listPath + this.__get_color();\r\n\r\n\t\t\t\t/** @type {EquipInfo[]} */\r\n\t\t\t\tlet equip_list = [];\r\n\r\n\t\t\t\tif (coloredPath != this.loaded_category || this.loaded_equip_list.length == 0) {\r\n\t\t\t\t\tequip_list = JSON.parse(await $get.asset(`equips/${coloredPath}.json`));\r\n\t\t\t\t\tif (!equip_list || !equip_list.length) {\r\n\t\t\t\t\t\talert(\"? \" + coloredPath);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tawait concat_external_resource(coloredPath, equip_list);\r\n\r\n\t\t\t\t\tif (cateinfo.slot == \"weapon\" && this.selected_category != \"0170\") {\r\n\t\t\t\t\t\tlet cash_weapon = JSON.parse(await $get.asset(`equips/0170.json`));\r\n\r\n\t\t\t\t\t\tlet wt = prefix.slice(2, 4);\r\n\t\t\t\t\t\tlet va = cash_weapon.filter(a => {\r\n\t\t\t\t\t\t\treturn a.__t.indexOf(wt) >= 0;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tequip_list = equip_list.concat(va);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tequip_list.forEach(ItemAttrNormalize[listPath] || ItemAttrNormalize._equip);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.loaded_equip_list = equip_list;\r\n\t\t\t\t\tthis.loaded_category = coloredPath;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tequip_list = [...this.loaded_equip_list];\r\n\t\t\t\t}\r\n\t\t\t\t//this.equip_list = equip_list;\r\n\r\n\t\t\t\tif (equip_list.length > 0) {\r\n\t\t\t\t\tlet fnFilter = this.__get_filter();\r\n\t\t\t\t\tif (fnFilter) {\r\n\t\t\t\t\t\tequip_list = equip_list.filter(fnFilter);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tthis.equip_list = equip_list;// for using this.__count_of_page\r\n\r\n\t\t\t\tif (equip_list.length > 0) {\r\n\t\t\t\t\tconst count_of_page = this.__count_of_page;\r\n\r\n\t\t\t\t\tif (count_of_page > 0) {\r\n\t\t\t\t\t\tif (this.page >= count_of_page) {\r\n\t\t\t\t\t\t\tthis.page = count_of_page - 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.page = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tequip_list.sort((a, b) => a.id - b.id);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tthis.equip_list = equip_list;\r\n\t\t\t},\r\n\t\t\t__get_filter: function () {\r\n\t\t\t\tif (!this.filters.length) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tconst list = ItemFilter.list;\r\n\t\t\t\tconst fnFilters = this.filters.map(function (i) {\r\n\t\t\t\t\treturn (a) => !list[i](a);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (fnFilters.length) {\r\n\t\t\t\t\treturn function (item) {\r\n\t\t\t\t\t\treturn fnFilters.every(function (fn) {\r\n\t\t\t\t\t\t\treturn fn(item);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//for (let i = 0; i < fnFilters.length; ++i) {\r\n\t\t\t\t\t\t//\tif (fnFilters[i](item)) {\r\n\t\t\t\t\t\t//\t\treturn false;\r\n\t\t\t\t\t\t//\t}\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t//return true;\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\treturn () => true;\r\n\t\t\t\t//}\r\n\t\t\t},\r\n\t\t\t//__get_face_color_filter: function () {\r\n\t\t\t//},\r\n\t\t\t//__get_hair_color_filter: function () {\r\n\t\t\t//},\r\n\t\t\t__get_item: function (index) {\r\n\t\t\t\tconst first = this.page * config.pageSize;\r\n\r\n\t\t\t\treturn this.equip_list[first + index];\r\n\t\t\t},\r\n\t\t\t__get_item_id: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item.id;\r\n\t\t\t},\r\n\t\t\t__get_item_name: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item.name || \"[null]\";\r\n\t\t\t},\r\n\t\t\t__get_item_name_ex: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item._name || \"[null]\";\r\n\t\t\t},\r\n\t\t\t__get_item_icon_url: function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\treturn item.icon && item.icon[\"\"] ? item.icon[\"\"] : \"images/warning.png\";\r\n\t\t\t},\r\n\t\t\t__face_or_hair_img_onerror: async function (index) {\r\n\t\t\t\tlet item = this.__get_item(index);\r\n\t\t\t\tif (!item) {\r\n\t\t\t\t\talert(\"error: this.__get_item(index)\\nindex=\" + index);\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (item.icon && item.icon[\"\"]) {\r\n\t\t\t\t\tlet src = item.icon[\"\"];\r\n\r\n\t\t\t\t\tif (src.startsWith(\"images/\")) {\r\n\t\t\t\t\t\tlet sp = src.split(\"/\");\r\n\t\t\t\t\t\tlet place = sp.splice(sp.length - 1, 1);\r\n\r\n\t\t\t\t\t\tsp[1] = \"ls\";\r\n\r\n\t\t\t\t\t\tlet ls = JSON.parse(await $get(sp.join(\"/\")));\r\n\r\n\t\t\t\t\t\tlet next = ls.indexOf(place) + 1;\r\n\t\t\t\t\t\tif (next < ls.length) {\r\n\t\t\t\t\t\t\tplace = ls[next];\r\n\t\t\t\t\t\t\tsp[1] = \"images\";\r\n\t\t\t\t\t\t\titem.icon[\"\"] = sp.join(\"/\") + \"/\" + place;\r\n\t\t\t\t\t\t\tdebugger\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\titem.icon[\"\"] = \"images/warning.png\";\r\n\t\t\t},\r\n\t\t\tclickItem: function (e, num) {\r\n\t\t\t\tif (this.selected_category == \"0170\") {\r\n\t\t\t\t\tlet item = this.__get_item(num);\r\n\t\t\t\t\tconsole.groupCollapsed(\"沒有設定職業，無法使用點裝武器\");\r\n\t\t\t\t\tconsole.log(\"click cash weapon: [%o] %o %o\", item.id, item.name, item);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet item = this.__get_item(num);\r\n\r\n\t\t\t\t\tthis.$emit(\"clickItem\", {\r\n\t\t\t\t\t\tevent: e,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tcategory: this.selected_category,\r\n\t\t\t\t\t\tequip: item,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconsole.log(\"Use equip: [%o] %o %o\", item.id, item.name, item);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thoverItem: function (e, num) {\r\n\t\t\t\tlet item = this.__get_item(num);\r\n\r\n\t\t\t\tthis.$emit(\"hoverItem\", {\r\n\t\t\t\t\tevent: e,\r\n\t\t\t\t\tid: item.id,\r\n\t\t\t\t\tcategory: this.selected_category,\r\n\t\t\t\t\tequip: item,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tmouseleaveItem: function (e, num) {\r\n\t\t\t\tlet item = this.__get_item(num);\r\n\r\n\t\t\t\tthis.$emit(\"mouseleaveItem\", {\r\n\t\t\t\t\tevent: e,\r\n\t\t\t\t\tid: item.id,\r\n\t\t\t\t\tcategory: this.selected_category,\r\n\t\t\t\t\tequip: item,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tselected_category_onchange: function (value) {\r\n\t\t\t\tif (value == \"0002\") {\r\n\t\t\t\t\tthis.face_color = Number(window.chara.renderer.faceColor);\r\n\t\t\t\t}\r\n\t\t\t\telse if (value == \"0003\" || value == \"0004\") {\r\n\t\t\t\t\tthis.hair_color = Number(window.chara.renderer.hairColor);\r\n\t\t\t\t\tif (window.chara.renderer.slots.hairColor2 && window.chara.renderer.slots.hairMix2) {\r\n\t\t\t\t\t\tthis.hair_color2 = Number(window.chara.renderer.slots.hairColor2);\r\n\t\t\t\t\t\tthis.hair_mix2 = Math.trunc(Number(window.chara.renderer.slots.hairMix2) * 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.search_equip(this.search_text);\r\n\t\t\t},\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tsearch_text: function (val, oldVal) {\r\n\t\t\t\tthis.search_equip(val);\r\n\t\t\t},\r\n\t\t\tonlyShowSearchResult: async function (val) {\r\n\t\t\t\tif (val) {\r\n\t\t\t\t\tthis.search_equip(this.search_text);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.search_text) {\r\n\t\t\t\t\tawait this.loadList();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselected_category: function (value) {\r\n\t\t\t\tthis.selected_category_onchange(value);\r\n\t\t\t},\r\n\t\t\tfilters: async function () {\r\n\t\t\t\t//console.log(JSON.stringify(this.filters));\r\n\t\t\t\tawait this.loadList();\r\n\t\t\t},\r\n\t\t\tface_color: async function () {\r\n\t\t\t\t//console.log(\"face: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"faceColor\", {\r\n\t\t\t\t\tcolor: this.face_color\r\n\t\t\t\t});\r\n\t\t\t\tawait this.loadList();\r\n\t\t\t},\r\n\t\t\thair_color: async function () {\r\n\t\t\t\t//console.log(\"hair: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"hairColor\", {\r\n\t\t\t\t\tcolor: this.hair_color\r\n\t\t\t\t});\r\n\t\t\t\tawait this.loadList();\r\n\t\t\t},\r\n\t\t\thair_color2: async function () {\r\n\t\t\t\t//console.log(\"hair: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"hairColor2\", {\r\n\t\t\t\t\tcolor: this.hair_color2,\r\n\t\t\t\t\tmix: this.hair_mix2 / 100\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\thair_mix2: async function () {\r\n\t\t\t\t//console.log(\"hair: \" + /*btn.text + \": \" +*/ btn.value);\r\n\t\t\t\tthis.$emit(\"hairMix2\", {\r\n\t\t\t\t\tcolor: this.hair_color2,\r\n\t\t\t\t\tmix: this.hair_mix2 / 100\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis.selected_category = \"0000\";\r\n\t\t\tthis.selected_category_onchange(this.selected_category);\r\n\t\t},\r\n\t\tdirectives: {\r\n\t\t\tfocus: {\r\n\t\t\t\tinserted: function (el) {\r\n\t\t\t\t\tel.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\t\"ui-draggable\": UIDraggable,\r\n\t\t\t\"ui-button-group\": UIButtonGroup,\r\n\t\t},\r\n\t\tmixins: [UIDialog]\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.ui-equip-box .header {\r\n\t\ttext-align: left;\r\n\t}\r\n\t.ui-equip-box .header.btn-group, .ui-equip-box .header .pagination {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.ui-equip-box .pagination {\r\n\t\theight: 2em;\r\n\t\toverflow: auto;\r\n\t\tfont-size: initial;\r\n\t}\r\n\r\n\t.ui-equip-box .item-list {\r\n\t\tlist-style: none;\r\n\t\tmargin: auto;\r\n\t\tpadding: 1px;\r\n\t}\r\n\t.ui-equip-box .item-list-sm {\r\n\t\tmargin: auto;\r\n\t\tpadding: 1px;\r\n\t\tline-height: 0;\r\n\t\ttext-align: center;\r\n\t}\r\n\t.ui-equip-box .item-detail {\r\n\t\twidth: 100%;\r\n\t\tborder-spacing: 1px;\r\n\t}\r\n\t.ui-equip-box .list-item, .ui-equip-box .list-item-sm {\r\n\t\tborder: 1px solid black;\r\n\t\tborder-bottom: none;\r\n\t\tbackground: linear-gradient(to bottom, rgba(240,249,255,0.9) 0%,rgba(203,235,255,0.9) 30%,rgba(201,234,255,0.9) 50%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 75%,rgba(240,249,255,0.9) 100%);\r\n\t}\r\n\t.ui-equip-box .list-item-sm {\r\n\t\tdisplay: inline-block;\r\n\t\tborder: none;\r\n\t\toutline: 1px solid black;\r\n\t\tbox-shadow: inset 1px 1px 0 lightblue;\r\n\t}\r\n\t.ui-equip-box .list-item:target, .ui-equip-box .list-item-sm:target {\r\n\t\tbox-shadow: inset 0 0 0 1px red;\r\n\t\toutline: 1px solid red;\r\n\t\tposition: relative;\r\n\t}\r\n\t.ui-equip-box .list-item:last-child {\r\n\t\tborder-bottom: 1px solid black;\r\n\t}\r\n\t.ui-equip-box .list-item:hover, .ui-equip-box .list-item-sm:hover {\r\n\t\tbackground: aliceblue;\r\n\t}\r\n\t.ui-equip-box .list-item:active, .ui-equip-box .list-item-sm:active {\r\n\t\tbackground: lightgray;\r\n\t}\r\n\r\n\t.ui-equip-box .item-name {\r\n\t\tuser-select: text;\r\n\t\twidth: 12em;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\t.ui-equip-box .list-item:target .item-name {\r\n\t\tcolor: red;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.ui-equip-box .item-id {\r\n\t\tuser-select: text;\r\n\t}\r\n\r\n\t.ui-equip-box .item-icon-outer-frame {\r\n\t\tposition: relative;\r\n\t\twidth: 48px;\r\n\t\theight: 48px;\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t.ui-equip-box .item-icon-frame > img, .ui-equip-box .item-icon-frame-sm > img {\r\n\t\tmax-width: 48px;\r\n\t\tmax-height: 48px;\r\n\t\tdisplay: block;\r\n\t\tmargin: auto;\r\n\t}\r\n\r\n\r\n\t.ui-equip-box .filters button:hover {\r\n\t\tborder: 1px solid blue;\r\n\t\tborder-radius: 3px;\r\n\t\tbackground: rgba(240, 249, 255, 0.9);\r\n\t}\r\n\t.ui-equip-box .filters button:hover, .face_color button:hover, .hair_color button:hover {\r\n\t\tfilter: contrast(150%) brightness(110%);\r\n\t}\r\n\t.ui-equip-box .filters button.active {\r\n\t\tborder-radius: 3px;\r\n\t\tbackground-color: hsl(203, 0%, 70%);\r\n\t}\r\n\t.ui-equip-box .filters button.active img {\r\n\t\tfilter: grayscale(100%) brightness(90%) contrast(150%);\r\n\t}\r\n\t.ui-equip-box .filters button.active:hover {\r\n\t\tborder: 1px solid blue;\r\n\t\tbackground: rgba(240, 249, 255, 0.9);\r\n\t}\r\n\t.ui-equip-box .filters button.active:hover {\r\n\t\tfilter: contrast(150%) grayscale(100%) brightness(110%);\r\n\t}\r\n\r\n\t.ui-equip-box .face_color, hair_color {\r\n\t\tborder: 1px solid transparent;\r\n\t\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\r\n\t}\r\n\t.ui-equip-box .face_color button.active, .hair_color button.active {\r\n\t\tborder: 1px solid white;\r\n\t\tbox-shadow: 0 0 0.5em 0 blue, 0 0 1em 0 yellow;\r\n\t\tcolor: white;\r\n\t\ttext-shadow: 0 0 0.1em black, 0 0 0.5em black;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area > * {\r\n\t\tpadding-top: 1px;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area {\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area button {\r\n\t\ttext-align: center;\r\n\t\tcursor: pointer;\r\n\t\tborder: 1px solid transparent;\r\n\t\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\r\n\t\tfont-family: 微軟正黑體;\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 1em;\r\n\t}\r\n\r\n\t.ui-equip-box .button-area button > img {\r\n\t\tdisplay: block;\r\n\t\tmargin: auto;\r\n\t}\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-equip-box.vue?vue&type=template&id=050f0798&\"\nimport script from \"./ui-equip-box.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-equip-box.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-equip-box.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div v-if=\"chara != null\" class=\"frame\">\r\n\t\t<div class=\"center\">\r\n\t\t\t<template v-for=\"ft in frag_list\">\r\n\t\t\t\t<img v-if=\"ft.relative\"\r\n\t\t\t\t\t :src=\"get_ft_src(ft)\"\r\n\t\t\t\t\t :class=\"ft.classList\"\r\n\t\t\t\t\t :style=\"get_ft_style(ft)\" />\r\n\t\t\t</template>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport Vue from 'vue';\r\n\r\n\t//class ItemCharacter {\r\n\t//\tconstructor() {\r\n\t//\t\tthis.type = \"\";\r\n\t//\t}\r\n\t//\r\n\t//\tstatic Type = {\r\n\t//\t\tmap: \"map\",\r\n\t//\t\tcharacter: \"character\"\r\n\t//\t}\r\n\t//}\r\n\r\n\t/*\r\n\t<ui-dialog title=\"Characters\">\r\n\t\t<ui-sortable :items=\"charas\" @input=\"ch\">\r\n\t\t\t<template scope=\"{item}\">\r\n\t\t\t\t<li :id=\"item.id\">\r\n\t\t\t\t\t<ui-character :chara=\"item\"></ui-character>\r\n\t\t\t\t</li>\r\n\t\t\t</template>\r\n\t\t</ui-sortable>\r\n\t</ui-dialog>\r\n\t*/\r\n\r\n\t/*\r\n\tchara = {\r\n\t\tid: <unique>\r\n\t\thtml: <element>\r\n\t}\r\n\t*/\r\n\r\n\r\n\t/*\r\n\t\tmounted: function () {\r\n\t\t},\r\n\r\n\t\tupdated: function () {\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t}\r\n\r\n\t\t//directives: {\r\n\t\t//\t'resource': function(el, binding) {\r\n\t\t//\t}\r\n\t\t//}\r\n\t\t//render: function (createElement) {\r\n\t\t//\treturn createElement(\r\n\t\t//\t\t\"div\", {\r\n\t\t//\t\t},\r\n\t\t//\t\t//this.$slots.default\r\n\t\t//\t)\r\n\t\t//},\r\n\t*/\r\n\r\n\texport default {\r\n\t\tprops: ['chara'],\r\n\t\tcomputed: {\r\n\t\t\tfrag_list: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconst chara = this.chara;\r\n\t\t\t\t\tlet arr = [];\r\n\r\n\t\t\t\t\tchara.__forceUpdate();\r\n\r\n\t\t\t\t\tfor (let i in this.chara.__frag_list) {\r\n\t\t\t\t\t\tlet ft = this.chara.__frag_list[i];\r\n\t\t\t\t\t\tif (ft.texture) {\r\n\t\t\t\t\t\t\tarr.push(ft);\r\n\t\t\t\t\t\t\tif (ft.graph2 && ft.graph2.texture) arr.push(ft.graph2);\r\n\t\t\t\t\t\t\tif (ft.graph3 && ft.graph3.texture) arr.push(ft.graph3);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (newVal) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tget_ft_src: function (ft) {\r\n\t\t\t\treturn ft.texture.src;\r\n\t\t\t},\r\n\t\t\tget_ft_style: function (ft) {\r\n\t\t\t\tlet style = {\r\n\t\t\t\t\tleft: ft.relative.x + 'px',\r\n\t\t\t\t\ttop: ft.relative.y + 'px',\r\n\t\t\t\t\topacity: ft.opacity,\r\n\t\t\t\t\twidth: ft.width + 'px',\r\n\t\t\t\t\theight: ft.height + 'px',\r\n\t\t\t\t\tfilter: ft.filter.toString(),\r\n\t\t\t\t\tvisibility: ft.visible ? \"visible\" : \"hidden\",\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn style;\r\n\t\t\t},\r\n\t\t//\tgetInnerHTML: function () {\r\n\t\t//\t\treturn this.getInner().innerHTML;\r\n\t\t//\t},\r\n\t\t//\tgetInner: function () {\r\n\t\t//\t\tlet chara = this.chara;\r\n\t\t//\r\n\t\t//\t\t//force update\r\n\t\t//\t\tchara.update(0);\r\n\t\t//\t\tchara.__update_frag_list();\r\n\t\t//\r\n\t\t//\t\tlet elem = chara._toHTML();\r\n\t\t//\t\tif (!elem) {\r\n\t\t//\t\t\tdebugger\r\n\t\t//\t\t}\r\n\t\t//\t\treturn elem;\r\n\t\t//\t}\r\n\t\t},\r\n\t\t//beforeUpdate: function () {\r\n\t\t//\tlet vm = this;\r\n\t\t//\r\n\t\t//\tthis.$nextTick(function () {\r\n\t\t//\t\tvm.$el.appendChild(vm.getInner());\r\n\t\t//\t});\r\n\t\t//}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\tdiv.frame {\r\n\t\tdisplay: inline-block;\r\n\t\tposition: relative;\r\n\t\twidth: 64px;\r\n\t\theight: 96px;\r\n\r\n\t\tuser-select: none;\r\n\t\tbackground-position: 0px 0px, 10px 10px;\r\n\t\tbackground-size: 20px 20px;\r\n\t\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\r\n\t}\r\n\tdiv.center {\r\n\t\tposition: absolute;\r\n\t\tleft: 32px;\r\n\t\ttop: 96px;\r\n\t}\r\n\timg {\r\n\t\tposition: absolute;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-character.vue?vue&type=template&id=370f889e&scoped=true&\"\nimport script from \"./ui-character.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-character.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-character.vue?vue&type=style&index=0&id=370f889e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"370f889e\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.chara != null)?_c('div',{staticClass:\"frame\"},[_c('div',{staticClass:\"center\"},[_vm._l((_vm.frag_list),function(ft){return [(ft.relative)?_c('img',{class:ft.classList,style:(_vm.get_ft_style(ft)),attrs:{\"src\":_vm.get_ft_src(ft)}}):_vm._e()]})],2)]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div v-if=\"chara != null\" class=\"ui-character-frame\">\r\n\t\t<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink= \"http://www.w3.org/1999/xlink\"\r\n\t\t\t\tx=\"0\" y=\"0\" width=\"64\" height=\"96\"\r\n\t\t\t\t>\r\n\t\t\t<g transform=\"translate(32, 96)\">\r\n\t\t\t\t<template v-for=\"ft in frag_list\">\r\n\t\t\t\t\t<image v-if=\"ft.relative\"\r\n\t\t\t\t\t\t   :class=\"ft.classList\"\r\n\t\t\t\t\t\t   :x=\"ft.relative.x\"\r\n\t\t\t\t\t\t   :y=\"ft.relative.y\"\r\n\t\t\t\t\t\t   :width=\"ft.width\"\r\n\t\t\t\t\t\t   :height=\"ft.height\"\r\n\t\t\t\t\t\t   :opacity=\"ft.opacity\"\r\n\t\t\t\t\t\t   :xlink:href=\"get_ft_src(ft)\"\r\n\t\t\t\t\t\t   >\r\n\t\t\t\t\t</image>\r\n\t\t\t\t</template>\r\n\t\t\t</g>\r\n\t\t</svg>\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<div v-if=\"is_loading\" class=\"ui-character-center\">\r\n\t\t\t\t<div class=\"ui-character-text\">\r\n\t\t\t\t\tloading...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<div v-if=\"is_processing\" class=\"ui-character-center\">\r\n\t\t\t\t<div class=\"ui-character-text\">\r\n\t\t\t\t\tprocess...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: ['chara'],\r\n\t\tcomputed: {\r\n\t\t\tfrag_list: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconst chara = this.chara;\r\n\t\t\t\t\tlet arr = [];\r\n\r\n\t\t\t\t\tchara.__forceUpdate();\r\n\r\n\t\t\t\t\tfor (let i in this.chara.__frag_list) {\r\n\t\t\t\t\t\tlet ft = this.chara.__frag_list[i];\r\n\t\t\t\t\t\tif (ft.texture) {\r\n\t\t\t\t\t\t\tarr.push(ft);\r\n\t\t\t\t\t\t\tif (ft.graph2 && ft.graph2.texture) arr.push(ft.graph2);\r\n\t\t\t\t\t\t\tif (ft.graph3 && ft.graph3.texture) arr.push(ft.graph3);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (newVal) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tis_loading: false,\r\n\t\t\t\tis_processing: false,\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tget_ft_src: function (ft) {\r\n\t\t\t\treturn ft.texture.src;\r\n\t\t\t},\r\n\t\t\tget_ft_style: function (ft) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tleft: ft.relative.x + 'px',\r\n\t\t\t\t\ttop: ft.relative.y + 'px',\r\n\t\t\t\t\topacity: ft.visible ? ft.opacity : 0,\r\n\t\t\t\t\twidth: ft.width + 'px',\r\n\t\t\t\t\theight: ft.height + 'px',\r\n\t\t\t\t\tfilter: ft.filter.toString(),\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tfake: function () {\r\n\t\t\t\tlet vm = this;\r\n\t\t\t\tvm.is_processing = true;\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tvm.is_processing = false;\r\n\t\t\t\t}, 1000);\r\n\t\t\t},\r\n\t\t\tdownload2: function () {\r\n\t\t\t\tlet svg = this.$el.innerHTML;\r\n\t\t\t\t//let url = \"data:image/svg+xml;base64,\" + btoa(svg);\r\n\t\t\t\tlet url = \"data:image/svg+xml;utf8,\" + (svg);\r\n\t\t\t\t//let url = \"data:text/html;charset=utf-8,\" + encodeURIComponent(svg);\r\n\r\n\t\t\t\tdebugger;\r\n\r\n\t\t\t\twindow.open(url);\r\n\r\n\t\t\t\t//let el = $(\"<a>svg</a>\");\r\n\t\t\t\t//el[0].href = url;\r\n\t\t\t\t//el.trigger(\"click\");\r\n\t\t\t},\r\n\t\t},\r\n\t\tupdate: function () {\r\n\t\t\tthis.$el.style.cursor = \"not-allowed\";\r\n\t\t\tthis.is_loading = true;\r\n\t\t},\r\n\t\tupdated: function () {\r\n\t\t\tthis.$el.style.cursor = \"default\";\r\n\t\t\tthis.is_loading = false;\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.ui-character-frame {\r\n\t\tdisplay: inline-block;\r\n\t\tposition: relative;\r\n\t\twidth: 64px;\r\n\t\theight: 96px;\r\n\r\n\t\tuser-select: none;\r\n\t\tbackground-position: 0px 0px, 10px 10px;\r\n\t\tbackground-size: 20px 20px;\r\n\t\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\r\n\t}\r\n\r\n\t.ui-character-center {\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(0,0,0,0.2);\r\n\t\toverflow: hidden;\r\n\t\ttext-align: center;\r\n\t}\r\n\t.ui-character-text {\r\n\t\ttext-align: center;\r\n\t\tposition: absolute;\r\n\t\ttop: calc(50% - 0.5em);\r\n\t\tfont-weight: bold;\r\n\t\tcolor: white;\r\n\t\ttext-shadow: 0 0 1px black, 0 0 2px black, 0 0 5px black;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-character-svg.vue?vue&type=template&id=08c5999c&\"\nimport script from \"./ui-character-svg.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-character-svg.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-character-svg.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.chara != null)?_c('div',{staticClass:\"ui-character-frame\"},[_c('svg',{attrs:{\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\",\"x\":\"0\",\"y\":\"0\",\"width\":\"64\",\"height\":\"96\"}},[_c('g',{attrs:{\"transform\":\"translate(32, 96)\"}},[_vm._l((_vm.frag_list),function(ft){return [(ft.relative)?_c('image',{class:ft.classList,attrs:{\"x\":ft.relative.x,\"y\":ft.relative.y,\"width\":ft.width,\"height\":ft.height,\"opacity\":ft.opacity,\"xlink:href\":_vm.get_ft_src(ft)}}):_vm._e()]})],2)]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.is_loading)?_c('div',{staticClass:\"ui-character-center\"},[_c('div',{staticClass:\"ui-character-text\"},[_vm._v(\"\\n\\t\\t\\t\\tloading...\\n\\t\\t\\t\")])]):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.is_processing)?_c('div',{staticClass:\"ui-character-center\"},[_c('div',{staticClass:\"ui-character-text\"},[_vm._v(\"\\n\\t\\t\\t\\tprocess...\\n\\t\\t\\t\")])]):_vm._e()])],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div class=\"UIEditCharacterAttribute\" style=\"display: inline-block;\">\r\n\t\t<div style=\"display: inline-block; vertical-align: top;\">\r\n\t\t\t<table style=\"border-collapse: collapse; border-spacing: 0px;\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<template v-if=\"chara.speed\">\t\r\n\t\t\t\t\t\t\t<button @click=\"pauseAnimation\" title=\"pause animation\">\r\n\t\t\t\t\t\t\t\t<img src=\"images/player_pause.png\" alt=\"pause\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else=\"\">\r\n\t\t\t\t\t\t\t<button @click=\"pauseAnimation\" title=\"play animation\">\r\n\t\t\t\t\t\t\t\t<img src=\"images/player_play.png\" alt=\"play\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td title=\"animation speed\">\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"chara.speed\" min=\"0\" max=\"5\" step=\"0.01\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button v-if=\"sceneChara.enablePhysics\" @click=\"sceneChara.enablePhysics=false\">禁用物理</button>\r\n\t\t\t\t\t\t<button v-else @click=\"sceneChara.enablePhysics=true\">啟用物理</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button @click=\"isShowDebug=!isShowDebug\">細節</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>動作</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"chara.action\" @clicl=\"update_frame_list('action')\">\r\n\t\t\t\t\t\t\t<option v-if=\"!actions.length\" disabled value=\"\">請選擇</option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"item in actions\">{{item}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model.number=\"chara.action_frame\">\r\n\t\t\t\t\t\t\t<option v-if=\"!actions.length\" disabled> ---- </option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"frame in chara.action_frame_count\" :value=\"frame - 1\">{{frame - 1}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>表情</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"chara.emotion\">\r\n\t\t\t\t\t\t\t<option v-if=\"!emotions.length\" disabled value=\"\">請選擇</option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"item in emotions\">{{item}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model.number=\"chara.emotion_frame\" @clicl=\"update_frame_list('emotion')\">\r\n\t\t\t\t\t\t\t<option v-if=\"!emotions.length\" disabled> ---- </option>\r\n\t\t\t\t\t\t\t<option v-else v-for=\"frame in chara.emotion_frame_count\" :value=\"frame - 1\">{{frame - 1}}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr title=\"禁用物理後可設定角色的位置\">\r\n\t\t\t\t\t<th>位置</th>\r\n\t\t\t\t\t<td colspan=\"3\" style=\"display: flex; position: absolute;\">\r\n\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"chara.x\" min=\"-9999\" max=\"9999\" />\r\n\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"chara.y\" min=\"-9999\" max=\"9999\" />\r\n\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"sceneChara.$layer\" min=\"0\" max=\"7\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr title=\"禁用物理後可設定角色的旋轉和方向\">\r\n\t\t\t\t\t<td colspan=\"4\">\r\n\t\t\t\t\t\t<label>旋轉：\r\n\t\t\t\t\t\t\t<input :disabled=\"sceneChara.enablePhysics\" type=\"number\" v-model.number=\"chara_angle\" min=\"-180\" max=\"180\" step=\"10\" />°\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label>方向：\r\n\t\t\t\t\t\t\t<select :disabled=\"sceneChara.enablePhysics\" v-model.number=\"chara.front\">\r\n\t\t\t\t\t\t\t\t<option value=\"1\">右</option>\r\n\t\t\t\t\t\t\t\t<option value=\"-1\">左</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th rowspan=\"2\">耳朵</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\">人類<input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"human\" checked /></label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\">妖精<input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"elf\" /></label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\">木雷普<input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"lef\" /></label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label class=\"chara_ear\">亥雷普<input type=\"radio\" name=\"chara_ear\" v-model=\"chara.ear\" value=\"highlef\" /></label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<!--<tr>\r\n\t\t\t\t\t<td></td>\r\n\t\t\t\t\t<td></td>\r\n\t\t\t\t\t<td></td>\r\n\t\t\t\t</tr>-->\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t\t<div v-if=\"isShowDebug\" style=\"width: 100%; display: inline-block; user-select: text;\">\r\n\t\t\t<hr />\r\n\t\t\t<table style=\"border-spacing: 0px; border-collapse: collapse; width: 100%;\">\r\n\t\t\t\t<template v-for=\"(equip,index) in chara.slots._ordered_slot\">\r\n\t\t\t\t\t<template v-if=\"equip\">\r\n\t\t\t\t\t\t<tr @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{{getEquipCategoryName(equip)}}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td style=\"width: 32px; height: 32px;\">\r\n\t\t\t\t\t\t\t\t<img :src=\"equip.getIconUrl()\" class=\"equip-icon\" />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<div>{{equip.name}}</div>\r\n\t\t\t\t\t\t\t\t<div>{{equip.id}}</div>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>opacity</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.opacity\" min=\"0.01\" max=\"1\" step=\"0.01\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.opacity\" min=\"0.01\" max=\"1\" step=\"0.01\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><button @click=\"equip.opacity=1;\" class=\"btn\">×</button></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>hue</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.hue\" min=\"0\" max=\"359\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.hue\" min=\"0\" max=\"359\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><button @click=\"equip.filter.hue=0;\" class=\"btn\">×</button></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>sat</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.sat\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.sat\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><button @click=\"equip.filter.sat=100;\" class=\"btn\">×</button></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>bri</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.bri\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.bri\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><button @click=\"equip.filter.bri=100;\" class=\"btn\">×</button></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t\t<transition name=\"fade\">\r\n\t\t\t\t\t\t\t<tr v-show=\"isShowEquipImageFilter[index]\" @mouseover=\"isShowEquipImageFilter[index]=true;\" @mouseleave=\"isShowEquipImageFilter[index]=false;\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>contrast</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"range\" v-model.number=\"equip.filter.contrast\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" v-model.number=\"equip.filter.contrast\" min=\"0\" max=\"999\" />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td><button @click=\"equip.filter.contrast=100;\" class=\"btn\">×</button></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</transition>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</template>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { ItemCategoryInfo } from \"../../public/javascripts/resource.js\";\r\n\r\n\texport default {\r\n\t\tprops: [\"sceneChara\"],\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tisShowDebug: false,\r\n\t\t\t\tisShowEquipImageFilter: [],\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tactions: () => character_action_list,\r\n\t\t\temotions: () => character_emotion_list,\r\n\t\t\tchara: function () {\r\n\t\t\t\treturn this.sceneChara.renderer;\r\n\t\t\t},\r\n\t\t\tchara_angle: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn Math.round(Math.degrees(this.sceneChara.renderer.angle));\r\n\t\t\t\t},\r\n\t\t\t\tset: function (deg) {\r\n\t\t\t\t\tthis.sceneChara.renderer.angle = Math.radians(deg);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tpauseAnimation: function () {\r\n\t\t\t\tthis.chara.speed = this.chara.speed ? 0 : 1;//this.pause ? 0 : 1;\r\n\t\t\t},\r\n\t\t\tisEquip: function (id) {\r\n\t\t\t\treturn ItemCategoryInfo.isEquip(id);\r\n\t\t\t},\r\n\t\t\tgetEquipCategoryName: function (equip) {\r\n\t\t\t\treturn ItemCategoryInfo.get(equip.id).categoryName;\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\t.UIEditCharacterAttribute td > * {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.btn {\r\n\t\tmargin: auto;\r\n\t\tpadding: 0;\r\n\t\tuser-select: none;\r\n\t}\r\n\t.chara_ear {\r\n\t\twidth: 100%;\r\n\t\tdisplay: block;\r\n\t}\r\n\t.equip-icon {\r\n\t\tmargin: auto;\r\n\t\tmax-width: 32px;\r\n\t\tmax-height: 32px;\r\n\t\twidth: auto !important;\r\n\t\theight: auto !important;\r\n\t}\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-character-attribute.vue?vue&type=template&id=10601658&scoped=true&\"\nimport script from \"./ui-character-attribute.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-character-attribute.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-character-attribute.vue?vue&type=style&index=0&id=10601658&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"10601658\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"UIEditCharacterAttribute\",staticStyle:{\"display\":\"inline-block\"}},[_c('div',{staticStyle:{\"display\":\"inline-block\",\"vertical-align\":\"top\"}},[_c('table',{staticStyle:{\"border-collapse\":\"collapse\",\"border-spacing\":\"0px\"}},[_c('tr',[_c('td',[(_vm.chara.speed)?[_c('button',{attrs:{\"title\":\"pause animation\"},on:{\"click\":_vm.pauseAnimation}},[_c('img',{attrs:{\"src\":\"images/player_pause.png\",\"alt\":\"pause\"}})])]:[_c('button',{attrs:{\"title\":\"play animation\"},on:{\"click\":_vm.pauseAnimation}},[_c('img',{attrs:{\"src\":\"images/player_play.png\",\"alt\":\"play\"}})])]],2),_vm._v(\" \"),_c('td',{attrs:{\"title\":\"animation speed\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.speed),expression:\"chara.speed\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"5\",\"step\":\"0.01\"},domProps:{\"value\":(_vm.chara.speed)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.chara, \"speed\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[(_vm.sceneChara.enablePhysics)?_c('button',{on:{\"click\":function($event){_vm.sceneChara.enablePhysics=false}}},[_vm._v(\"禁用物理\")]):_c('button',{on:{\"click\":function($event){_vm.sceneChara.enablePhysics=true}}},[_vm._v(\"啟用物理\")])]),_vm._v(\" \"),_c('td',[_c('button',{on:{\"click\":function($event){_vm.isShowDebug=!_vm.isShowDebug}}},[_vm._v(\"細節\")])])]),_vm._v(\" \"),_c('tr',[_c('th',[_vm._v(\"動作\")]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.action),expression:\"chara.action\"}],on:{\"clicl\":function($event){_vm.update_frame_list('action')},\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.chara, \"action\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.actions.length)?_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"請選擇\")]):_vm._l((_vm.actions),function(item){return _c('option',[_vm._v(_vm._s(item))])})],2)]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.action_frame),expression:\"chara.action_frame\",modifiers:{\"number\":true}}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.chara, \"action_frame\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.actions.length)?_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\" ---- \")]):_vm._l((_vm.chara.action_frame_count),function(frame){return _c('option',{domProps:{\"value\":frame - 1}},[_vm._v(_vm._s(frame - 1))])})],2)])]),_vm._v(\" \"),_c('tr',[_c('th',[_vm._v(\"表情\")]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.emotion),expression:\"chara.emotion\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.chara, \"emotion\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.emotions.length)?_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"請選擇\")]):_vm._l((_vm.emotions),function(item){return _c('option',[_vm._v(_vm._s(item))])})],2)]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.emotion_frame),expression:\"chara.emotion_frame\",modifiers:{\"number\":true}}],on:{\"clicl\":function($event){_vm.update_frame_list('emotion')},\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.chara, \"emotion_frame\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[(!_vm.emotions.length)?_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\" ---- \")]):_vm._l((_vm.chara.emotion_frame_count),function(frame){return _c('option',{domProps:{\"value\":frame - 1}},[_vm._v(_vm._s(frame - 1))])})],2)])]),_vm._v(\" \"),_c('tr',{attrs:{\"title\":\"禁用物理後可設定角色的位置\"}},[_c('th',[_vm._v(\"位置\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"display\":\"flex\",\"position\":\"absolute\"},attrs:{\"colspan\":\"3\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.x),expression:\"chara.x\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"-9999\",\"max\":\"9999\"},domProps:{\"value\":(_vm.chara.x)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.chara, \"x\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.y),expression:\"chara.y\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"-9999\",\"max\":\"9999\"},domProps:{\"value\":(_vm.chara.y)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.chara, \"y\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.sceneChara.$layer),expression:\"sceneChara.$layer\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"0\",\"max\":\"7\"},domProps:{\"value\":(_vm.sceneChara.$layer)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sceneChara, \"$layer\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])]),_vm._v(\" \"),_c('tr',{attrs:{\"title\":\"禁用物理後可設定角色的旋轉和方向\"}},[_c('td',{attrs:{\"colspan\":\"4\"}},[_c('label',[_vm._v(\"旋轉：\\n\\t\\t\\t\\t\\t\\t\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara_angle),expression:\"chara_angle\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics,\"type\":\"number\",\"min\":\"-180\",\"max\":\"180\",\"step\":\"10\"},domProps:{\"value\":(_vm.chara_angle)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.chara_angle=_vm._n($event.target.value)},\"blur\":function($event){_vm.$forceUpdate()}}}),_vm._v(\"°\\n\\t\\t\\t\\t\\t\")]),_vm._v(\" \"),_c('label',[_vm._v(\"方向：\\n\\t\\t\\t\\t\\t\\t\"),_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.chara.front),expression:\"chara.front\",modifiers:{\"number\":true}}],attrs:{\"disabled\":_vm.sceneChara.enablePhysics},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.chara, \"front\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"右\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"-1\"}},[_vm._v(\"左\")])])])])]),_vm._v(\" \"),_c('tr',[_c('th',{attrs:{\"rowspan\":\"2\"}},[_vm._v(\"耳朵\")]),_vm._v(\" \"),_c('td',[_c('label',{staticClass:\"chara_ear\"},[_vm._v(\"人類\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"human\",\"checked\":\"\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"human\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"human\")}}})])]),_vm._v(\" \"),_c('td',[_c('label',{staticClass:\"chara_ear\"},[_vm._v(\"妖精\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"elf\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"elf\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"elf\")}}})])]),_vm._v(\" \"),_c('td',[_c('label',{staticClass:\"chara_ear\"},[_vm._v(\"木雷普\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"lef\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"lef\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"lef\")}}})])])]),_vm._v(\" \"),_c('tr',[_c('td',[_c('label',{staticClass:\"chara_ear\"},[_vm._v(\"亥雷普\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chara.ear),expression:\"chara.ear\"}],attrs:{\"type\":\"radio\",\"name\":\"chara_ear\",\"value\":\"highlef\"},domProps:{\"checked\":_vm._q(_vm.chara.ear,\"highlef\")},on:{\"change\":function($event){_vm.$set(_vm.chara, \"ear\", \"highlef\")}}})])])])])]),_vm._v(\" \"),(_vm.isShowDebug)?_c('div',{staticStyle:{\"width\":\"100%\",\"display\":\"inline-block\",\"user-select\":\"text\"}},[_c('hr'),_vm._v(\" \"),_c('table',{staticStyle:{\"border-spacing\":\"0px\",\"border-collapse\":\"collapse\",\"width\":\"100%\"}},[_vm._l((_vm.chara.slots._ordered_slot),function(equip,index){return [(equip)?[_c('tr',{on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td',[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t\\t\"+_vm._s(_vm.getEquipCategoryName(equip))+\"\\n\\t\\t\\t\\t\\t\\t\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"32px\",\"height\":\"32px\"}},[_c('img',{staticClass:\"equip-icon\",attrs:{\"src\":equip.getIconUrl()}})]),_vm._v(\" \"),_c('td',[_c('div',[_vm._v(_vm._s(equip.name))]),_vm._v(\" \"),_c('div',[_vm._v(_vm._s(equip.id))])]),_vm._v(\" \"),_c('td')]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td'),_vm._v(\" \"),_c('td',[_vm._v(\"opacity\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.opacity),expression:\"equip.opacity\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0.01\",\"max\":\"1\",\"step\":\"0.01\"},domProps:{\"value\":(equip.opacity)},on:{\"__r\":function($event){_vm.$set(equip, \"opacity\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.opacity),expression:\"equip.opacity\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0.01\",\"max\":\"1\",\"step\":\"0.01\"},domProps:{\"value\":(equip.opacity)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(equip, \"opacity\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('button',{staticClass:\"btn\",on:{\"click\":function($event){equip.opacity=1;}}},[_vm._v(\"×\")])])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td'),_vm._v(\" \"),_c('td',[_vm._v(\"hue\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.hue),expression:\"equip.filter.hue\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"359\"},domProps:{\"value\":(equip.filter.hue)},on:{\"__r\":function($event){_vm.$set(equip.filter, \"hue\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.hue),expression:\"equip.filter.hue\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"359\"},domProps:{\"value\":(equip.filter.hue)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"hue\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('button',{staticClass:\"btn\",on:{\"click\":function($event){equip.filter.hue=0;}}},[_vm._v(\"×\")])])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td'),_vm._v(\" \"),_c('td',[_vm._v(\"sat\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.sat),expression:\"equip.filter.sat\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.sat)},on:{\"__r\":function($event){_vm.$set(equip.filter, \"sat\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.sat),expression:\"equip.filter.sat\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.sat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"sat\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('button',{staticClass:\"btn\",on:{\"click\":function($event){equip.filter.sat=100;}}},[_vm._v(\"×\")])])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td'),_vm._v(\" \"),_c('td',[_vm._v(\"bri\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.bri),expression:\"equip.filter.bri\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.bri)},on:{\"__r\":function($event){_vm.$set(equip.filter, \"bri\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.bri),expression:\"equip.filter.bri\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.bri)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"bri\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('button',{staticClass:\"btn\",on:{\"click\":function($event){equip.filter.bri=100;}}},[_vm._v(\"×\")])])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowEquipImageFilter[index]),expression:\"isShowEquipImageFilter[index]\"}],on:{\"mouseover\":function($event){_vm.isShowEquipImageFilter[index]=true;},\"mouseleave\":function($event){_vm.isShowEquipImageFilter[index]=false;}}},[_c('td'),_vm._v(\" \"),_c('td',[_vm._v(\"contrast\")]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.contrast),expression:\"equip.filter.contrast\",modifiers:{\"number\":true}}],attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.contrast)},on:{\"__r\":function($event){_vm.$set(equip.filter, \"contrast\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(equip.filter.contrast),expression:\"equip.filter.contrast\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"999\"},domProps:{\"value\":(equip.filter.contrast)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(equip.filter, \"contrast\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('button',{staticClass:\"btn\",on:{\"click\":function($event){equip.filter.contrast=100;}}},[_vm._v(\"×\")])])])])]:_vm._e()]})],2)]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<div class=\"ui-life-list\">\r\n\t\t<table>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td colspan=\"9\">\r\n\t\t\t\t\t\t<button @click=\"removeAll\" style=\"float: right;\" title=\"Issues: not work\">Remove all</button>\r\n\t\t\t\t\t\t<button @click=\"reload\" style=\"float: right;\" title=\"Issues: not work ??\">reload</button>\r\n\t\t\t\t\t\t<button @click=\"killAll\" style=\"float: right;\">Kill all</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-preview\">\r\n\t\t\t\t\t\t\t#\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-id\">ID</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-type\">type</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-x\">x</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-y\">y</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-flip\">flip</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-fh\">fh</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-rx0\">rx0</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<label for=\"mob-rx1\">rx1</label>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t\t<tr @mouseover=\"showPreview($event,m)\" @mouseleave=\"hidePreview\" class=\"item new-item\">\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button @click=\"addSpawn\" class=\"input\">add</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model=\"m.id\" id=\"mob-id\" min=\"1\" max=\"9999999\" class=\"input-mobid\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"m.type\" id=\"mob-type\">\r\n\t\t\t\t\t\t\t<option value=\"m\">Mob</option>\r\n\t\t\t\t\t\t\t<option value=\"n\">Npc</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.x\" id=\"mob-x\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.cy\" id=\"mob-y\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"m.f\" id=\"mob-flip\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.fh\" id=\"mob-fh\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<!-- <td> -->\r\n\t\t\t\t\t<!-- \t<input type=\"number\" v-model.number=\"m.cy\" id=\"mob-cy\" class=\"input\" /> -->\r\n\t\t\t\t\t<!-- </td> -->\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.rx0\" id=\"mob-rx0\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"m.rx1\" id=\"mob-rx1\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr v-for=\"(spawn, index) in spawns\" @mouseover=\"showPreview($event,spawn)\" @mouseleave=\"hidePreview\" class=\"item\">\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button title=\"preview\" style=\"text-align: center;\" class=\"input\">{{index}}</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model=\"spawn.id\" min=\"1\" max=\"9999999\" class=\"input-mobid\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select v-model=\"spawn.type\">\r\n\t\t\t\t\t\t\t<option value=\"m\">Mob</option>\r\n\t\t\t\t\t\t\t<option value=\"n\">Npc</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.x\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.cy\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"spawn.f\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.fh\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<!--<td>-->\r\n\t\t\t\t\t<!--\t<input type=\"number\" v-model.number=\"spawn.cy\" class=\"input\" />-->\r\n\t\t\t\t\t<!--</td>-->\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.rx0\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"number\" v-model.number=\"spawn.rx1\" class=\"input\" />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t<!--\t\t\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t-->\r\n\t\t</table>\r\n\t</div>\r\n\r\n</template>\r\n\r\n<script>\r\n\timport Vuex from \"vuex\";\r\n\timport { LifeSpawnPoint, MapLifeEntity } from \"../game/Map.js\"\r\n\t\r\n\tconst store = new Vuex.Store({\r\n\t\tstate: {\r\n\t\t},\r\n\t\t//mutations: {\r\n\t\t//},\r\n\t\tactions: {\r\n\t\t}\r\n\t});\r\n\r\n\texport default {\r\n\t\tstore,\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tspawns: [],\t//no hook source\r\n\t\t\t\tm: {\t\t// form table\r\n\t\t\t\t\ttype: \"m\",\r\n\t\t\t\t\tid: 8880141,\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\tmobTime: 0,\r\n\t\t\t\t\tf: 0,\r\n\t\t\t\t\thide: 0,\r\n\t\t\t\t\tfh: 1,\r\n\t\t\t\t\tcy: 0,\r\n\t\t\t\t\trx0: 0,\r\n\t\t\t\t\trx1: 0,\r\n\t\t\t\t},\r\n\t\t\t\tis_clear: true,\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tonCollapsed: function () {\r\n\t\t\t\tthis.hidePreview();\r\n\t\t\t},\r\n\t\t\tshowPreview: async function (event, m) {\r\n\t\t\t\tlet target = event.currentTarget;\r\n\t\t\t\tlet type = m.type == \"m\" ? \"Mob\":\"Npc\";\r\n\t\t\t\tlet smallTip = this.$root.$refs.smallTip;\r\n\t\t\t\t\r\n\t\t\t\tlet desc = await MapLifeEntity.loadLifeDesc(m);\r\n\r\n\t\t\t\tlet _url = $get.imageUrl(`/${type}/${m.id}/stand/0`);\r\n\t\t\t\t\r\n\t\t\t\tsmallTip.html = [\"<div>\" + desc.name + \"</div>\" + `<img src=\"${_url}\" />`];\r\n\t\t\t\t\r\n\t\t\t\tsmallTip.show(function () {\r\n\t\t\t\t\tsmallTip.setPosition({\r\n\t\t\t\t\t\tmy: \"right center\",\r\n\t\t\t\t\t\tat: \"left center\",\r\n\t\t\t\t\t\tof: target,\r\n\t\t\t\t\t\tcollision: \"fit\"\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\thidePreview: function (event) {\r\n\t\t\t\tlet smallTip = this.$root.$refs.smallTip;\r\n\t\t\t\tsmallTip.hide();\r\n\t\t\t},\r\n\t\t\taddSpawn: function () {\r\n\t\t\t\tif (scene_map && scene_map.lifeMgr) {\r\n\t\t\t\t\tif (!this.m.type.match(/m|n/)) {\r\n\t\t\t\t\t\twindow.alert(\"life type: 'm' or 'n'\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet d = new LifeSpawnPoint(this.m);\r\n\t\t\t\t\t\r\n\t\t\t\t\td.y = d.cy;//cy = position.y; y = ?\r\n\r\n\t\t\t\t\tscene_map.lifeMgr.spawnPoints.push(d);\r\n\t\t\t\t}\r\n\t\t\t\tthis.reload();\r\n\t\t\t},\r\n\t\t\treload: function () {\r\n\t\t\t\tconst src = scene_map.lifeMgr.spawnPoints;\r\n\t\t\t\tthis.spawns = new Array(src.length);\r\n\t\t\t\tfor (let i = 0; i < src.length; ++i) {\r\n\t\t\t\t\tthis.$set(this.spawns, i, src[i]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.is_clear = false;\r\n\t\t\t\tthis.$emit(\"resize\");\r\n\t\t\t},\r\n\t\t\tremoveAll: function () {\r\n\t\t\t\tthis.is_clear = true;\r\n\t\t\t\tthis.spawns = [];\r\n\t\t\t\tthis.$emit(\"resize\");\r\n\t\t\t},\r\n\t\t\tkillAll: function () {\r\n\t\t\t\tscene_map.lifeMgr.entities.forEach(life => life.die());\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis.$on(\"onCollapsed\", this.onCollapsed);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//8880141\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.ui-life-list {\r\n\tpadding: 0 1px;\r\n}\r\n\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n}\r\n\r\ntr.new-item {\r\n\tbackground: lightgray;\r\n}\r\ntr.item:hover {\r\n\tbackground: lightblue;\r\n\toutline: 1px auto rgb(77, 144, 254);\r\n}\r\n\r\n.button {\r\n\twidth: 100%;\r\n}\r\n\r\n.input {\r\n  width: 2.7em;\r\n}\r\n\r\n.input[type=text] {\r\n  width: 4em;\r\n}\r\n\r\n.input[type=number] {\r\n  width: 4em;\r\n}\r\n\r\n.input[type=checkbox] {\r\n  width: 1em;\r\n}\r\n\r\n.input-mobid[type=number] {\r\n  width: 5em;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-mob-list.vue?vue&type=template&id=ea11de16&scoped=true&\"\nimport script from \"./ui-mob-list.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-mob-list.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-mob-list.vue?vue&type=style&index=0&id=ea11de16&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ea11de16\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ui-life-list\"},[_c('table',[_c('thead',[_c('tr',[_c('td',{attrs:{\"colspan\":\"9\"}},[_c('button',{staticStyle:{\"float\":\"right\"},attrs:{\"title\":\"Issues: not work\"},on:{\"click\":_vm.removeAll}},[_vm._v(\"Remove all\")]),_vm._v(\" \"),_c('button',{staticStyle:{\"float\":\"right\"},attrs:{\"title\":\"Issues: not work ??\"},on:{\"click\":_vm.reload}},[_vm._v(\"reload\")]),_vm._v(\" \"),_c('button',{staticStyle:{\"float\":\"right\"},on:{\"click\":_vm.killAll}},[_vm._v(\"Kill all\")])])]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('tr',{staticClass:\"item new-item\",on:{\"mouseover\":function($event){_vm.showPreview($event,_vm.m)},\"mouseleave\":_vm.hidePreview}},[_c('td',[_c('button',{staticClass:\"input\",on:{\"click\":_vm.addSpawn}},[_vm._v(\"add\")])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.m.id),expression:\"m.id\"}],staticClass:\"input-mobid\",attrs:{\"type\":\"number\",\"id\":\"mob-id\",\"min\":\"1\",\"max\":\"9999999\"},domProps:{\"value\":(_vm.m.id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"id\", $event.target.value)}}})]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.m.type),expression:\"m.type\"}],attrs:{\"id\":\"mob-type\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.m, \"type\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"m\"}},[_vm._v(\"Mob\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"n\"}},[_vm._v(\"Npc\")])])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.x),expression:\"m.x\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-x\"},domProps:{\"value\":(_vm.m.x)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"x\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.cy),expression:\"m.cy\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-y\"},domProps:{\"value\":(_vm.m.cy)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"cy\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.m.f),expression:\"m.f\"}],staticClass:\"input\",attrs:{\"type\":\"checkbox\",\"id\":\"mob-flip\"},domProps:{\"checked\":Array.isArray(_vm.m.f)?_vm._i(_vm.m.f,null)>-1:(_vm.m.f)},on:{\"change\":function($event){var $$a=_vm.m.f,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.m, \"f\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.m, \"f\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.m, \"f\", $$c)}}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.fh),expression:\"m.fh\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-fh\"},domProps:{\"value\":(_vm.m.fh)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"fh\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.rx0),expression:\"m.rx0\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-rx0\"},domProps:{\"value\":(_vm.m.rx0)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"rx0\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.m.rx1),expression:\"m.rx1\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\",\"id\":\"mob-rx1\"},domProps:{\"value\":(_vm.m.rx1)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.m, \"rx1\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.spawns),function(spawn,index){return _c('tr',{staticClass:\"item\",on:{\"mouseover\":function($event){_vm.showPreview($event,spawn)},\"mouseleave\":_vm.hidePreview}},[_c('td',[_c('button',{staticClass:\"input\",staticStyle:{\"text-align\":\"center\"},attrs:{\"title\":\"preview\"}},[_vm._v(_vm._s(index))])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(spawn.id),expression:\"spawn.id\"}],staticClass:\"input-mobid\",attrs:{\"type\":\"number\",\"min\":\"1\",\"max\":\"9999999\"},domProps:{\"value\":(spawn.id)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"id\", $event.target.value)}}})]),_vm._v(\" \"),_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(spawn.type),expression:\"spawn.type\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(spawn, \"type\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"m\"}},[_vm._v(\"Mob\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"n\"}},[_vm._v(\"Npc\")])])]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.x),expression:\"spawn.x\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.x)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"x\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.cy),expression:\"spawn.cy\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.cy)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"cy\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(spawn.f),expression:\"spawn.f\"}],staticClass:\"input\",attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(spawn.f)?_vm._i(spawn.f,null)>-1:(spawn.f)},on:{\"change\":function($event){var $$a=spawn.f,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(spawn, \"f\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(spawn, \"f\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(spawn, \"f\", $$c)}}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.fh),expression:\"spawn.fh\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.fh)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"fh\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.rx0),expression:\"spawn.rx0\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.rx0)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"rx0\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(spawn.rx1),expression:\"spawn.rx1\",modifiers:{\"number\":true}}],staticClass:\"input\",attrs:{\"type\":\"number\"},domProps:{\"value\":(spawn.rx1)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(spawn, \"rx1\", _vm._n($event.target.value))},\"blur\":function($event){_vm.$forceUpdate()}}})])])}))])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',[_c('label',{attrs:{\"for\":\"mob-preview\"}},[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t#\\n\\t\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-id\"}},[_vm._v(\"ID\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-type\"}},[_vm._v(\"type\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-x\"}},[_vm._v(\"x\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-y\"}},[_vm._v(\"y\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-flip\"}},[_vm._v(\"flip\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-fh\"}},[_vm._v(\"fh\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-rx0\"}},[_vm._v(\"rx0\")])]),_vm._v(\" \"),_c('td',[_c('label',{attrs:{\"for\":\"mob-rx1\"}},[_vm._v(\"rx1\")])])])}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=script&lang=js&\"","\r\n<template>\r\n\t<div>\r\n\t\t<div style=\"display: none;\">{{aaaa}}</div>\r\n\t\t<template v-for=\"(obj, index) in objs\">\r\n\t\t\t<div>\r\n\t\t\t\t<div @click=\"scrollIntoView($event,obj)\" :style=\"get_ObjPath_style(obj)\" class=\"info sticky\" title=\"select it and scroll into view\">\r\n\t\t\t\t\t<span>[{{index}}]</span>\r\n\t\t\t\t\t<span @contextmenu.prevent=\"copyToClipboard($event,obj._url)\" class=\"text\" >{{obj._url}}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"view\">\r\n\t\t\t\t\t<div v-if=\"displayMode!=2\" class=\"info\">\r\n\t\t\t\t\t\t<table class=\"table\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>type(sign)</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.type\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>x</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.x\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>y</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.y\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>z</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.z\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>zM</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.zM\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>flip</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.f\" type=\"number\" min=\"0\" max=\"1\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<template v-if=\"obj.typeb!=null\">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>typeb</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<!--<input-number v-model.number=\"obj.typeb\" min=\"0\" max=\"7\" type=\"number\" class=\"input\" />-->\r\n\t\t\t\t\t\t\t\t\t\t<input-select v-model.number=\"obj.typeb\" class=\"input\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"0\" title=\"\">default</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\" title=\"horizontal fill\">repeat-x</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\" title=\"vertical fill\">repeat-y</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\" title=\"fill\">fill</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\" title=\"horizontal roll\">roll-x</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\" title=\"vertical roll\">roll-y</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\" title=\"horizontal fill roll\">fill roll-x</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\" title=\"vertical fill roll\">fill roll-y</option>\r\n\t\t\t\t\t\t\t\t\t\t</input-select>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>a</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.a\" min=\"0\" max=\"255\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowRX(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>rx</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.rx\" type=\"number\" class=\"input\" title=\"橫向滾動速度\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowRY(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>ry</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.ry\" type=\"number\" class=\"input\" title=\"縱向滾動速度\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowCX(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>cx</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.cx\" type=\"number\" min=\"0\" class=\"input\" title=\"橫向間隔\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr v-if=\"isShowCY(obj.typeb)\">\r\n\t\t\t\t\t\t\t\t\t<td>cy</td>\r\n\t\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.cy\" type=\"number\" min=\"0\" class=\"input\" title=\"縱向間隔\" /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-else class=\"info\">\r\n\t\t\t\t\t\t<div>{{obj.constructor.name}}</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<table class=\"tb\">\r\n\t\t\t\t\t\t\t\t<tr v-for=\"(val, key) in obj._raw\">\r\n\t\t\t\t\t\t\t\t\t<td>{{key}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{val}}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"obj.textures.length && obj.textures[obj.frame].texture\" class=\"imgbox\">\r\n\t\t\t\t\t\t<div class=\"info\">\r\n\t\t\t\t\t\t\t<template v-if=\"obj.textures[obj.frame]._url.length > 300\">\r\n\t\t\t\t\t\t\t\t<a>...</a>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t\t<a :href=\"obj.textures[obj.frame]._url\">\r\n\t\t\t\t\t\t\t\t\t{{obj._texture_base_path}}<span v-if=\"obj.constructor.name!='MapBackBase'\" class=\"red-text\">/{{obj.frame}}</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div><img :src=\"obj.textures[obj.frame].texture.src\" class=\"img\"></img></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"displayMode==1\" class=\"info\">\r\n\t\t\t\t\t\t<table v-if=\"obj.textures.length && obj.textures[obj.frame].texture\" class=\"table\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>frame</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.frame\" :min=\"0\" :max=\"obj.textures.length-1\" @input=\"fupdate\" type=\"number\" class=\"input-sm\" /> / {{obj.textures.length-1}}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>center:</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-xy\">\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].x\" type=\"number\" />\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].y\" type=\"number\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>size:</td>\r\n\t\t\t\t\t\t\t\t<td>{{obj.textures[obj.frame]._raw.__h}} * {{obj.textures[obj.frame]._raw.__h}}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>opacity</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-xy\">\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].a0\" type=\"number\" class=\"input\" />\r\n\t\t\t\t\t\t\t\t\t\t<input-number v-model.number=\"obj.textures[obj.frame].a1\" type=\"number\" class=\"input\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>delay</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].delay\" type=\"number\" class=\"input\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>move</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<!--<input-number v-model.number=\"obj.textures[obj.frame].movetype\" min=\"0\" max=\"3\" type=\"number\" class=\"input\" />-->\r\n\t\t\t\t\t\t\t\t\t<input-select v-model.number=\"obj.textures[obj.frame].movetype\" class=\"input\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"0\" title=\"\">static</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\" title=\"\">橫向移動</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\" title=\"\">縱向移動</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\" title=\"\">旋轉</option>\r\n\t\t\t\t\t\t\t\t\t</input-select>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-if=\"obj.textures[obj.frame].movetype==1\">\r\n\t\t\t\t\t\t\t\t<td>moveW</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].movew\" type=\"number\" class=\"input\" title=\"移動寬\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-else-if=\"obj.textures[obj.frame].movetype==2\">\r\n\t\t\t\t\t\t\t\t<td>moveH</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].moveh\" type=\"number\" class=\"input\" title=\"移動高\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-if=\"obj.textures[obj.frame].movetype==3\">\r\n\t\t\t\t\t\t\t\t<td>moveR</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].mover\" type=\"number\" class=\"input\" title=\"旋轉週期(ms/π)\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr v-else-if=\"obj.textures[obj.frame].movetype!=0\">\r\n\t\t\t\t\t\t\t\t<td>moveP</td>\r\n\t\t\t\t\t\t\t\t<td><input-number v-model.number=\"obj.textures[obj.frame].movep\" type=\"number\" class=\"input\" title=\"移動週期\" /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"displayMode==2 || obj.constructor.name.endsWith('SkeletalAnim')\" class=\"info\">\r\n\t\t\t\t\t\t<table class=\"tb\">\r\n\t\t\t\t\t\t\t<tr v-for=\"(val, key) in obj._raw\">\r\n\t\t\t\t\t\t\t\t<td>{{key}}</td>\r\n\t\t\t\t\t\t\t\t<td>{{val}}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t</template>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n\tprops: [\"objs\", \"displayMode\"],\r\n\t//props: {\r\n\t//\tobjs: {\r\n\t//\t\ttype: MapObjectBase,\r\n\t//\t\trequired: true\r\n\t//\t},\r\n\t//},\r\n\tdata: function () {\r\n\t\treturn {\r\n\t\t\taaaa: 0,\r\n\t\t};\r\n\t},\r\n\tmethods: {\r\n\t\tisShowRX: function (typeb) {\r\n\t\t\treturn typeb == 4 || typeb == 5;\r\n\t\t},\r\n\t\tisShowRY: function (typeb) {\r\n\t\t\treturn typeb == 5 || typeb == 7;\r\n\t\t},\r\n\t\tisShowCX: function (typeb) {\r\n\t\t\treturn typeb == 1 || typeb == 3 || typeb == 4 || typeb == 6 || typeb == 7;\r\n\t\t},\r\n\t\tisShowCY: function (typeb) {\r\n\t\t\treturn typeb == 2 || typeb == 3 || typeb == 5 || typeb == 6 || typeb == 7;\r\n\t\t},\r\n\t\tget_ObjPath_style: function (obj) {\r\n\t\t\tlet style = obj.display_aabb ? { background:obj.aabb_color } : { };\r\n\t\t\tstyle[\"border-bottom\"] = \"1px solid black\";\r\n\t\t\treturn style;\r\n\t\t},\r\n\t\tscrollIntoView: function(event, obj) {\r\n\t\t\tconst center = obj.aabb.center;\r\n\t\t\t$gv.m_viewRect.setCenter(center.x, center.y);\r\n\t\t\tobj.$select();\r\n\t\t\t\r\n\t\t\tevent.currentTarget.scrollIntoView();\r\n\r\n\t\t\tthis.aaaa++;\r\n\t\t},\r\n\t\tfupdate: function () {\r\n\t\t\tthis.$forceUpdate();\r\n\t\t},\r\n\t\tcopyToClipboard: function (event, text) {\r\n\t\t\t//window.copyToClipboard(text);\r\n\t\t\twindow.SelectText(event.currentTarget);\r\n\t\t},\r\n\t},\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.sticky {\r\n\tposition: sticky;\r\n\tleft: 0;\r\n\ttop: 0;\r\n}\r\n\r\n.info {\r\n\tbackground: #f5f5f5;\r\n}\r\n\r\n.view {\r\n\tdisplay: flex;\r\n}\r\n.view > div {\r\n\tflex: 100;\r\n}\r\n\r\n.imgbox {\r\n\tflex: 80;\r\n}\r\n\r\n.table {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n.input {\r\n\twidth: 5em;\r\n}\r\n\r\n.input-xy {\r\n\twidth: 8em;\r\n}\r\n.input-xy > * {\r\n\twidth: 4em;\r\n}\r\n\r\n.img {\r\n\tmax-width: 25vh;\r\n\tmax-height: 25vh;\r\n\tborder-bottom: 1px solid red;\r\n\tborder-left: 1px solid green;\r\n}\r\n\r\n.text {\r\n\tuser-select: text;\r\n}\r\n\r\n.red-text {\r\n\tcolor: red;\r\n}\r\n\r\n.tb, .tb td {\r\n\tborder: 1px solid black;\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n\tuser-select: text;\r\n}\r\n\r\n</style>\r\n","import { render, staticRenderFns } from \"./ui-map-editor.vue?vue&type=template&id=6e4fb2d8&scoped=true&\"\nimport script from \"./ui-map-editor.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-map-editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e4fb2d8\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"display\":\"none\"}},[_vm._v(_vm._s(_vm.aaaa))]),_vm._v(\" \"),_vm._l((_vm.objs),function(obj,index){return [_c('div',[_c('div',{staticClass:\"info sticky\",style:(_vm.get_ObjPath_style(obj)),attrs:{\"title\":\"select it and scroll into view\"},on:{\"click\":function($event){_vm.scrollIntoView($event,obj)}}},[_c('span',[_vm._v(\"[\"+_vm._s(index)+\"]\")]),_vm._v(\" \"),_c('span',{staticClass:\"text\",on:{\"contextmenu\":function($event){$event.preventDefault();_vm.copyToClipboard($event,obj._url)}}},[_vm._v(_vm._s(obj._url))])]),_vm._v(\" \"),_c('div',{staticClass:\"view\"},[(_vm.displayMode!=2)?_c('div',{staticClass:\"info\"},[_c('table',{staticClass:\"table\"},[_c('tr',[_c('td',[_vm._v(\"type(sign)\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.type),callback:function ($$v) {_vm.$set(obj, \"type\", _vm._n($$v))},expression:\"obj.type\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"x\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.x),callback:function ($$v) {_vm.$set(obj, \"x\", _vm._n($$v))},expression:\"obj.x\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"y\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.y),callback:function ($$v) {_vm.$set(obj, \"y\", _vm._n($$v))},expression:\"obj.y\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"z\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.z),callback:function ($$v) {_vm.$set(obj, \"z\", _vm._n($$v))},expression:\"obj.z\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"zM\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.zM),callback:function ($$v) {_vm.$set(obj, \"zM\", _vm._n($$v))},expression:\"obj.zM\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"flip\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"min\":\"0\",\"max\":\"1\"},model:{value:(obj.f),callback:function ($$v) {_vm.$set(obj, \"f\", _vm._n($$v))},expression:\"obj.f\"}})],1)]),_vm._v(\" \"),(obj.typeb!=null)?[_c('tr',[_c('td',[_vm._v(\"typeb\")]),_vm._v(\" \"),_c('td',[_c('input-select',{staticClass:\"input\",model:{value:(obj.typeb),callback:function ($$v) {_vm.$set(obj, \"typeb\", _vm._n($$v))},expression:\"obj.typeb\"}},[_c('option',{attrs:{\"value\":\"0\",\"title\":\"\"}},[_vm._v(\"default\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"1\",\"title\":\"horizontal fill\"}},[_vm._v(\"repeat-x\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\",\"title\":\"vertical fill\"}},[_vm._v(\"repeat-y\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"3\",\"title\":\"fill\"}},[_vm._v(\"fill\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"4\",\"title\":\"horizontal roll\"}},[_vm._v(\"roll-x\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"5\",\"title\":\"vertical roll\"}},[_vm._v(\"roll-y\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"6\",\"title\":\"horizontal fill roll\"}},[_vm._v(\"fill roll-x\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"7\",\"title\":\"vertical fill roll\"}},[_vm._v(\"fill roll-y\")])])],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"a\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"min\":\"0\",\"max\":\"255\",\"type\":\"number\"},model:{value:(obj.a),callback:function ($$v) {_vm.$set(obj, \"a\", _vm._n($$v))},expression:\"obj.a\"}})],1)]),_vm._v(\" \"),(_vm.isShowRX(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"rx\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"橫向滾動速度\"},model:{value:(obj.rx),callback:function ($$v) {_vm.$set(obj, \"rx\", _vm._n($$v))},expression:\"obj.rx\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.isShowRY(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"ry\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"縱向滾動速度\"},model:{value:(obj.ry),callback:function ($$v) {_vm.$set(obj, \"ry\", _vm._n($$v))},expression:\"obj.ry\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.isShowCX(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"cx\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"min\":\"0\",\"title\":\"橫向間隔\"},model:{value:(obj.cx),callback:function ($$v) {_vm.$set(obj, \"cx\", _vm._n($$v))},expression:\"obj.cx\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.isShowCY(obj.typeb))?_c('tr',[_c('td',[_vm._v(\"cy\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"min\":\"0\",\"title\":\"縱向間隔\"},model:{value:(obj.cy),callback:function ($$v) {_vm.$set(obj, \"cy\", _vm._n($$v))},expression:\"obj.cy\"}})],1)]):_vm._e()]:_vm._e()],2)]):_c('div',{staticClass:\"info\"},[_c('div',[_vm._v(_vm._s(obj.constructor.name))]),_vm._v(\" \"),_c('div',[_c('table',{staticClass:\"tb\"},_vm._l((obj._raw),function(val,key){return _c('tr',[_c('td',[_vm._v(_vm._s(key))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(val))])])}))])]),_vm._v(\" \"),(obj.textures.length && obj.textures[obj.frame].texture)?_c('div',{staticClass:\"imgbox\"},[_c('div',{staticClass:\"info\"},[(obj.textures[obj.frame]._url.length > 300)?[_c('a',[_vm._v(\"...\")])]:[_c('a',{attrs:{\"href\":obj.textures[obj.frame]._url}},[_vm._v(\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\"+_vm._s(obj._texture_base_path)),(obj.constructor.name!='MapBackBase')?_c('span',{staticClass:\"red-text\"},[_vm._v(\"/\"+_vm._s(obj.frame))]):_vm._e()])]],2),_vm._v(\" \"),_c('div',[_c('img',{staticClass:\"img\",attrs:{\"src\":obj.textures[obj.frame].texture.src}})])]):_vm._e(),_vm._v(\" \"),(_vm.displayMode==1)?_c('div',{staticClass:\"info\"},[(obj.textures.length && obj.textures[obj.frame].texture)?_c('table',{staticClass:\"table\"},[_c('tr',[_c('td',[_vm._v(\"frame\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input-sm\",attrs:{\"min\":0,\"max\":obj.textures.length-1,\"type\":\"number\"},on:{\"input\":_vm.fupdate},model:{value:(obj.frame),callback:function ($$v) {_vm.$set(obj, \"frame\", _vm._n($$v))},expression:\"obj.frame\"}}),_vm._v(\" / \"+_vm._s(obj.textures.length-1))],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"center:\")]),_vm._v(\" \"),_c('td',[_c('div',{staticClass:\"input-xy\"},[_c('input-number',{attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].x),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"x\", _vm._n($$v))},expression:\"obj.textures[obj.frame].x\"}}),_vm._v(\" \"),_c('input-number',{attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].y),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"y\", _vm._n($$v))},expression:\"obj.textures[obj.frame].y\"}})],1)])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"size:\")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(obj.textures[obj.frame]._raw.__h)+\" * \"+_vm._s(obj.textures[obj.frame]._raw.__h))])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"opacity\")]),_vm._v(\" \"),_c('td',[_c('div',{staticClass:\"input-xy\"},[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].a0),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"a0\", _vm._n($$v))},expression:\"obj.textures[obj.frame].a0\"}}),_vm._v(\" \"),_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].a1),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"a1\", _vm._n($$v))},expression:\"obj.textures[obj.frame].a1\"}})],1)])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"delay\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\"},model:{value:(obj.textures[obj.frame].delay),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"delay\", _vm._n($$v))},expression:\"obj.textures[obj.frame].delay\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"move\")]),_vm._v(\" \"),_c('td',[_c('input-select',{staticClass:\"input\",model:{value:(obj.textures[obj.frame].movetype),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"movetype\", _vm._n($$v))},expression:\"obj.textures[obj.frame].movetype\"}},[_c('option',{attrs:{\"value\":\"0\",\"title\":\"\"}},[_vm._v(\"static\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"1\",\"title\":\"\"}},[_vm._v(\"橫向移動\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\",\"title\":\"\"}},[_vm._v(\"縱向移動\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"3\",\"title\":\"\"}},[_vm._v(\"旋轉\")])])],1)]),_vm._v(\" \"),(obj.textures[obj.frame].movetype==1)?_c('tr',[_c('td',[_vm._v(\"moveW\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"移動寬\"},model:{value:(obj.textures[obj.frame].movew),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"movew\", _vm._n($$v))},expression:\"obj.textures[obj.frame].movew\"}})],1)]):(obj.textures[obj.frame].movetype==2)?_c('tr',[_c('td',[_vm._v(\"moveH\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"移動高\"},model:{value:(obj.textures[obj.frame].moveh),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"moveh\", _vm._n($$v))},expression:\"obj.textures[obj.frame].moveh\"}})],1)]):_vm._e(),_vm._v(\" \"),(obj.textures[obj.frame].movetype==3)?_c('tr',[_c('td',[_vm._v(\"moveR\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"旋轉週期(ms/π)\"},model:{value:(obj.textures[obj.frame].mover),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"mover\", _vm._n($$v))},expression:\"obj.textures[obj.frame].mover\"}})],1)]):(obj.textures[obj.frame].movetype!=0)?_c('tr',[_c('td',[_vm._v(\"moveP\")]),_vm._v(\" \"),_c('td',[_c('input-number',{staticClass:\"input\",attrs:{\"type\":\"number\",\"title\":\"移動週期\"},model:{value:(obj.textures[obj.frame].movep),callback:function ($$v) {_vm.$set(obj.textures[obj.frame], \"movep\", _vm._n($$v))},expression:\"obj.textures[obj.frame].movep\"}})],1)]):_vm._e(),_vm._v(\" \"),_vm._m(0,true)]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.displayMode==2 || obj.constructor.name.endsWith('SkeletalAnim'))?_c('div',{staticClass:\"info\"},[_c('table',{staticClass:\"tb\"},_vm._l((obj._raw),function(val,key){return _c('tr',[_c('td',[_vm._v(_vm._s(key))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(val))])])}))]):_vm._e()])]),_vm._v(\" \"),_c('hr')]})],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td'),_vm._v(\" \"),_c('td')])}]\n\nexport { render, staticRenderFns }","\r\n<template>\r\n\t<div @contextmenu.self.prevent=\"\" class=\"dialog-group Editor\">\r\n\t\t\r\n\t\t<ui-dialog :position=\"wnds.menu.pos\" width=\"302px\">\r\n\t\t\t<template slot=\"header\">\r\n\t\t\t\tMenu\r\n\t\t\t</template>\r\n\t\t\t<template>\r\n\t\t\t\t<details open>\r\n\t\t\t\t\t<summary>bgm</summary>\r\n\t\t\t\t\t<div ref=\"bgm_outer\"></div>\r\n\t\t\t\t</details>\r\n\t\t\t\t<details open>\r\n\t\t\t\t\t<summary>window</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<div v-for=\"(wnd, key) in wnds\" v-if=\"!wnd.name.startsWith('$')\">\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"wnd.visable\" @click=\"$refs[key]?$refs[key].requireOrder($event):undefined\" checked /> {{wnd.name}}\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t</template>\r\n\t\t\t<template>\r\n\t\t\t\t<details>\r\n\t\t\t\t\t<summary>scene</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\tMap <input @keydown.enter=\"gv.scene_map.load($event.target.value.padStart(9, '0'))\" />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>map</legend>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_is_rendering_map\" />Map</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_back\" />back</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_front\" />front</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_mapobj\" />object</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_maptile\" />tile</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_portal\" />portal</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>map</legend>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_particle_system\" />particle system</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_skeletal_anim\" />skeletal animation</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>life</legend>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_life\" />life</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_player\" />player</label>\r\n\t\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_other_player\" />other player</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t\t<legend>character</legend>\r\n\t\t\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"gv.m_display_name_label\" />顯示名牌</label></div>\r\n\t\t\t\t\t\t\t\t<div><label>名牌<input type=\"number\" min=\"0\" v-model=\"gv.NameLabel_default_style\" /></label></div>\r\n\t\t\t\t\t\t\t\t<div><label>聊天<input type=\"number\" min=\"0\" v-model.number=\"gv.ChatBalloon_default_style\" /></label></div>\r\n\t\t\t\t\t\t\t\t<div><label>聊天顯示時間<input type=\"number\" min=\"0\" v-model.number=\"gv.ChatBalloon_display_duration\" />毫秒</label></div>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t\t<details>\r\n\t\t\t\t\t<summary>editor</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_foothold\" /> foothold</label>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" v-model=\"gv.m_display_selected_object\" /> selected object</label>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t\t<details>\r\n\t\t\t\t\t<summary>debug</summary>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"gv.m_display_debug_info\" /> debug info</label></div>\r\n\r\n\t\t\t\t\t\t<div><label><input type=\"checkbox\" v-model=\"gv.m_display_physics_debug\" /> physics debug</label></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div v-for=\"flagName in gv.m_debugDraw.flagNames\">\r\n\t\t\t\t\t\t\t<label><input type=\"checkbox\" v-model.number=\"gv.m_debugDraw[flagName]\" /> {{flagName.slice(5)}}</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>axis length <input type=\"number\" v-model=\"gv.m_debugDraw.axis_length\" step=\"0.1\" /></label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</details>\r\n\t\t\t</template>\r\n\t\t</ui-dialog>\r\n\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-dialog ref=\"character_list\" v-show=\"wnds.character_list.visable\" :position=\"wnds.character_list.pos\" width=\"16.1em\" height=\"50vh\">\r\n\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\tCharacters\r\n\t\t\t\t\t<template v-if=\"progressMaximum\">\r\n\t\t\t\t\t\t[loading: {{progressValue}} / {{progressMaximum}}]\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t<div :style=\"{filter: 'blur(' + (progressMaximum?3:0) + 'px)'}\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>{{charaList.length}} characters</span>\r\n\t\t\t\t\t\t\t<div class=\"chara-ls-btn-group\">\r\n\t\t\t\t\t\t\t\t<button @click=\"addNewChara\" class=\"chara-ls-btn\" title=\"Add new\"><img src=\"images/toolstrip_character.png\" alt=\"Add new\" /></button>\r\n\t\t\t\t\t\t\t\t<button @click=\"addCloneChara\" class=\"chara-ls-btn\" title=\"Add clone\"><img src=\"images/toolstrip_duplicate.png\" alt=\"Add clone\" /></button>\r\n\t\t\t\t\t\t\t\t<button @click=\"loadCharacters\" class=\"chara-ls-btn\" title=\"Load\"><span class=\"ui-icon ui-icon-folder-open\" alt=\"📂\"></span></button>\r\n\t\t\t\t\t\t\t\t<button @click=\"saveCharacters\" class=\"chara-ls-btn\" title=\"Save all\"><img src=\"images/toolstrip_save_all.png\" alt=\"Save all\" /></button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ui-sortable :items=\"charaList\" @input=\"oninput_sort\" class=\"ui-character-list\">\r\n\t\t\t\t\t\t\t<template slot-scope=\"{item, index}\">\r\n\t\t\t\t\t\t\t\t<li :id=\"item.id\" @mousedown.left=\"selectChara(item.id)\" :class=\"[(selected == item.id ? 'active':''), item.id].join(' ')\" :title=\"item.id\" :key=\"item.id\">\r\n\t\t\t\t\t\t\t\t\t<table style=\"width:100%;\">\r\n\t\t\t\t\t\t\t\t\t\t<tr @contextmenu.prevent=\"openCharacterDLMenu($event, item.id);\">\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{{index}}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{{item.id}}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"position: relative;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ui-character :chara=\"item.renderer\"></ui-character>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</ui-sortable>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-if=\"progressMaximum\" class=\"loading\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<progress :value=\"progressValue\" :max=\"progressMaximum\"></progress>\r\n\t\t\t\t\t\t\t<div>loading [{{progressValue}} / {{progressMaximum}}]</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-dialog>\r\n\t\t</transition>\r\n\t\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-dialog ref=\"character_list\" v-show=\"wnds.character_attribute.visable\" :position=\"wnds.character_attribute.pos\" width=\"20em\" height=\"50vh\">\r\n\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\tCharacter attribute\r\n\t\t\t\t</template>\r\n\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t<div v-if=\"chara!=null\">\r\n\t\t\t\t\t\t<ui-character-attribute :sceneChara=\"chara\"></ui-character-attribute>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-dialog>\r\n\t\t</transition>\r\n\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-dialog ref=\"spawnpoint\" v-show=\"wnds.spawnpoint.visable\" :position.sync=\"wnds.spawnpoint.pos\" height=\"50vh\">\r\n\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\tSpawn point\r\n\t\t\t\t</template>\r\n\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t<ui-mob-list @resize=\"$refs.spawnpoint.reset_content_style()\"></ui-mob-list>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-dialog>\r\n\t\t</transition>\r\n\t\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-equip-box ref=\"equip_box\"\r\n\t\t\t\t\t\t  v-show=\"wnds.equip_box.visable\"\r\n\t\t\t\t\t\t  :position=\"wnds.equip_box.pos\"\r\n\t\t\t\t\t\t  width=\"20em\"\r\n\t\t\t\t\t\t  :height=\"400\"\r\n\t\t\t\t\t\t  @clickItem=\"clickItem\"\r\n\t\t\t\t\t\t  @hoverItem=\"hoverItem\"\r\n\t\t\t\t\t\t  @mouseleaveItem=\"mouseleaveItem\"\r\n\t\t\t\t\t\t  @faceColor=\"faceColor\"\r\n\t\t\t\t\t\t  @hairColor=\"hairColor\"\r\n\t\t\t\t\t\t  @hairColor2=\"hairColor2\"\r\n\t\t\t\t\t\t  @hairMix2=\"hairMix2\"\r\n\t\t\t\t\t\t  >\r\n\t\t\t</ui-equip-box>\r\n\t\t</transition>\r\n\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<template v-if=\"mapEditorMode.startsWith('layered')\">\r\n\t\t\t\t<ui-dialog v-show=\"wnds.debug_window.visable\" :position=\"wnds.debug_window.pos\" width=\"40vw\" height=\"70vh\">\r\n\t\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\t\t<select v-model=\"mapEditorMode\">\r\n\t\t\t\t\t\t\t<option value=\"background\">background</option>\r\n\t\t\t\t\t\t\t<option value=\"frontground\">frontground</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredObject\">layered object</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredTile\">layered tile</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\tmode <input v-model=\"displayMode\" type=\"number\" min=\"0\" max=\"2\" style=\"width: 1.8em;\">\r\n\t\t\t\t\t\t<button @click=\"dirty++\">{{dirty}}</button>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t\t<div v-if=\"scene_map() && scene_map()[mapEditorMode].length\" :style=\"wnd_debug_style\">\r\n\t\t\t\t\t\t\t<div style=\"background: white;\">\r\n\t\t\t\t\t\t\t\t<input v-model=\"wnd_debug_style.background\" type=\"color\" title=\"window background color\" />\r\n\t\t\t\t\t\t\t\t<label>layer <select v-model=\"selectedLayer\">\r\n\t\t\t\t\t\t\t\t\t\t<option v-for=\"layer in scene_map()[mapEditorMode].length\">{{layer - 1}}</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<span>{{scene_map()[mapEditorMode][selectedLayer].length}} objs</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<ui-map-editor :objs=\"scene_map()[mapEditorMode][selectedLayer]\" :displayMode=\"displayMode\"></ui-map-editor>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</ui-dialog>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<ui-dialog v-show=\"wnds.debug_window.visable\" :position=\"wnds.debug_window.pos\" width=\"40vw\" height=\"70vh\">\r\n\t\t\t\t\t<template slot=\"header\">\r\n\t\t\t\t\t\t<select v-model=\"mapEditorMode\">\r\n\t\t\t\t\t\t\t<option value=\"background\">background</option>\r\n\t\t\t\t\t\t\t<option value=\"frontground\">frontground</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredObject\">layered object</option>\r\n\t\t\t\t\t\t\t<option value=\"layeredTile\">layered tile</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\ttex info <input v-model=\"displayMode\" type=\"number\" min=\"0\" max=\"2\" style=\"width: 1.8em;\">\r\n\t\t\t\t\t\t<button @click=\"dirty--\">{{dirty}}</button>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template slot=\"content\">\r\n\t\t\t\t\t\t<div v-if=\"scene_map() && scene_map()[mapEditorMode].length\" :style=\"wnd_debug_style\">\r\n\t\t\t\t\t\t\t<div style=\"background: white;\">\r\n\t\t\t\t\t\t\t\t<input v-model=\"wnd_debug_style.background\" type=\"color\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<ui-map-editor :objs=\"scene_map()[mapEditorMode]\" :displayMode=\"displayMode\"></ui-map-editor>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</ui-dialog>\r\n\t\t\t</template>\r\n\t\t</transition>\r\n\t\t\t\r\n\t\t<transition name=\"fade\">\r\n\t\t\t<ui-menu :show=\"is_show_chara_dl_menu\" ref=\"chara_dl_menu\" @close=\"closeCharacterDLMenu\" style=\"position: absolute; width: 8em; z-index: 99999;\">\r\n\t\t\t\t<template v-if=\"chara\">\r\n\t\t\t\t\t<a @click=\"_save_as_png\">Save as PNG</a>\r\n\t\t\t\t\t<a @click=\"chara.renderer._save_as_svg()\">Save as SVG</a>\r\n\t\t\t\t\t<template v-if=\"progressMaximum == 0 || progressValue >= progressMaximum\">\r\n\t\t\t\t\t\t<a :href=\"chara.renderer._outlink()\">Outlink</a>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t<div title=\"loading...\">Outlink</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<a @click=\"copyCharaCode\">Copy code</a>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t<a class=\"disable\">Save as SVG</a>\r\n\t\t\t\t\t<a class=\"disable\" href=\"javascript:void(0)\">Outlink</a>\r\n\t\t\t\t\t<a class=\"disable\">Copy code</a>\r\n\t\t\t\t</template>\r\n\t\t\t</ui-menu>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport Vuex from 'vuex';\r\n\r\n\timport UIDraggable from '../components/ui-draggable.vue';\r\n\timport UIDialog from '../components/ui-dialog.vue';\r\n\timport UISortable from '../components/ui-sortable.vue';\r\n\timport UITrigger from '../components/ui-trigger.vue';\r\n\timport UIMenu from '../components/ui-menu.vue';\r\n\r\n\timport UIEquipBox from './ui-equip-box.vue';\r\n\timport UICharacter from './ui-character.vue';\r\n\timport UICharacterSVG from './ui-character-svg.vue';\r\n\timport UICharacterAttribute from './ui-character-attribute.vue';\r\n\r\n\timport UIMobList from \"./ui-mob-list.vue\";\r\n\timport UIMapEditor from \"./ui-map-editor.vue\";\r\n\r\n\t//import { GameStateManager } from '../game/GameState.js';\r\n\r\n\timport { ItemCategoryInfo } from '../../public/javascripts/resource.js';\r\n\timport { BaseSceneCharacter, SceneCharacter, SceneRemoteCharacter } from '../game/SceneCharacter.js';\r\n\r\n\timport { engine } from '../game/Engine.js';\r\n\r\n\tconst store = new Vuex.Store({\r\n\t\t//strict: process.env.NODE_ENV !== 'production',\r\n\t\tstate: {\r\n\t\t\tcharaList: [],\r\n\t\t\tchara: null,/** @type {BaseSceneCharacter} chara */\r\n\t\t\tselected: null,/** @type {string} id */\r\n\t\t\t_last_id: 0,\r\n\r\n\t\t\tprogressValue: 0,\r\n\t\t\tprogressMaximum: 0,\r\n\t\t},\r\n\t\tgetters: {\r\n\t\t\tlastId: function (state, getters) {\r\n\t\t\t\treturn \"chara_\" + state._last_id;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmutations: {\r\n\t\t\tclear: function (state) {\r\n\t\t\t\tstate.charaList = [];\r\n\t\t\t},\r\n\t\t\tincreaseId(state) {\r\n\t\t\t\tstate._last_id += 1;\r\n\t\t\t},\r\n\t\t\tincreaseProgress: function (state, payload) {\r\n\t\t\t\tstate.progressValue += payload.amount;\r\n\t\t\t\tif (state.progressValue >= state.progressMaximum) {\r\n\t\t\t\t\tstate.progressValue = 0;\r\n\t\t\t\t\tstate.progressMaximum = 0;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tincreaseProgressMax: function (state, payload) {\r\n\t\t\t\tstate.progressMaximum += payload.amount;\r\n\t\t\t},\r\n\t\t\t//decreaseProgress: function (state, payload) {\r\n\t\t\t//},\r\n\t\t},\r\n\t\tactions: {\r\n\t\t\tisIdExist: function (context, payload) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tif (payload && payload.id) {\r\n\t\t\t\t\tconst id = payload.id;\r\n\t\t\t\t\tfor (let i = 0; i < state.charaList.length; ++i) {\r\n\t\t\t\t\t\tlet chara = state.charaList[i];\r\n\t\t\t\t\t\tif (chara.id == id) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tsortCharaById: function (context, payload) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tstate.charaList = state.charaList.sort((a, b) => {\r\n\t\t\t\t\tconst na = get_n(a.id);\r\n\t\t\t\t\tconst nb = get_n(b.id);\r\n\r\n\t\t\t\t\treturn na - nb;\r\n\r\n\t\t\t\t\tfunction get_n(id) {\r\n\t\t\t\t\t\tif (!a) return 0;\r\n\t\t\t\t\t\tlet n = Number(id).split(\"_\")[1];\r\n\t\t\t\t\t\treturn n | 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tselectChara: function (context, payload) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tconst id = payload.id;\r\n\r\n\t\t\t\tlet index = -1;\r\n\t\t\t\tfor (let i = 0; i < state.charaList.length; ++i) {\r\n\t\t\t\t\tconst chara = state.charaList[i];\r\n\t\t\t\t\tif (chara.id == id) {\r\n\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t/** @type {SceneCharacter} */\r\n\t\t\t\t\tconst selected_chara = state.charaList[index];\r\n\t\t\t\t\tif (selected_chara.$remote) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (state.chara) {\r\n\t\t\t\t\t\t\tstate.chara.enablePhysics = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\tselected_chara.enablePhysics = true;\r\n\t\t\t\t\t\tif (selected_chara.$physics) {\r\n\t\t\t\t\t\t\tconst x = selected_chara.renderer.x / $gv.CANVAS_SCALE;\r\n\t\t\t\t\t\t\tconst y = selected_chara.renderer.y / $gv.CANVAS_SCALE;\r\n\t\t\t\t\t\t\tselected_chara.$physics.setPosition(x, y, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twindow.chara = state.chara = selected_chara;\r\n\t\t\t\t\t//\r\n\t\t\t\t\tstate.selected = id;\r\n\r\n\t\t\t\t\treturn id;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_addChara: async function (context, payload) {//add exist\r\n\t\t\t\tconst state = context.state;\r\n\r\n\t\t\t\tif (payload && payload.chara instanceof BaseSceneCharacter) {\r\n\t\t\t\t\tconst chara = payload.chara;\r\n\r\n\t\t\t\t\tawait chara.renderer.__synchronize();\r\n\r\n\t\t\t\t\tstate.charaList.push(chara);\r\n\r\n\t\t\t\t\tcontext.dispatch('selectChara', {\r\n\t\t\t\t\t\tid: chara.id,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tcontext.commit(\"increaseProgress\", { amount: 1 });\r\n\r\n\t\t\t\t\treturn chara;\r\n\t\t\t\t}\r\n\t\t\t\tdebugger;\r\n\t\t\t},\r\n\t\t\t_createChara: async function (context, payload) {\r\n\t\t\t\tif (window.$io && payload && payload.remote_chara) {\r\n\t\t\t\t\t//alert(\"dont use _createChara in online mode\");\r\n\t\t\t\t\t//return;\r\n\t\t\t\t\tpayload.emplace = payload.remote_chara;\r\n\t\t\t\t}\r\n\t\t\t\tconst state = context.state;\r\n\r\n\t\t\t\tcontext.commit(\"increaseId\");\r\n\t\t\t\tconst id = context.getters.lastId;\r\n\r\n\t\t\t\t/** @type {SceneCharacter} */\r\n\t\t\t\tlet chara;\r\n\r\n\t\t\t\t//const handler = {\r\n\t\t\t\t//\tdefineProperty(target, key, descriptor) {\r\n\t\t\t\t//\t\tif (key == \"$physics\") {\r\n\t\t\t\t//\t\t\tdebugger;\r\n\t\t\t\t//\t\t}\r\n\t\t\t\t//\t\treturn Reflect.defineProperty(...arguments);\r\n\t\t\t\t//\t},\r\n\t\t\t\t//\tset(target, key, descriptor) {\r\n\t\t\t\t//\t\tif (key == \"$physics\") {\r\n\t\t\t\t//\t\t\tdebugger;\r\n\t\t\t\t//\t\t}\r\n\t\t\t\t//\t\treturn Reflect.set(...arguments);\r\n\t\t\t\t//\t},\r\n\t\t\t\t//\townKeys(target, key, descriptor) {\r\n\t\t\t\t//\t\tif (key == \"$physics\") {\r\n\t\t\t\t//\t\t\tdebugger;\r\n\t\t\t\t//\t\t}\r\n\t\t\t\t//\t\treturn Reflect.ownKeys(...arguments);\r\n\t\t\t\t//\t},\r\n\t\t\t\t//};\r\n\t\t\t\tif (payload && payload.remote_chara) {\r\n\t\t\t\t\tchara = new SceneRemoteCharacter(window.scene_map);\r\n\t\t\t\t\t//chara = new Proxy(new SceneRemoteCharacter(window.scene_map), handler);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tchara = new SceneCharacter(window.scene_map);\r\n\t\t\t\t\t//chara = new Proxy(new SceneCharacter(window.scene_map), handler);\r\n\t\t\t\t}\r\n\t\t\t\tchara.id = id;\r\n\r\n\t\t\t\t//step 1: load base data\r\n\t\t\t\tawait chara.renderer.load();\r\n\t\t\t\tcontext.commit(\"increaseProgress\", { amount: 1 });\r\n\r\n\t\t\t\t//step 2: load equip...\r\n\t\t\t\tif (payload) {\r\n\t\t\t\t\tif (payload.chara instanceof BaseSceneCharacter) {//clone\r\n\t\t\t\t\t\tchara.renderer._parse(payload.chara.renderer._stringify(false));\r\n\r\n\t\t\t\t\t\tchara.renderer.x = payload.chara.renderer.x;\r\n\t\t\t\t\t\tchara.renderer.y = payload.chara.renderer.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (payload.emplace) {\r\n\t\t\t\t\t\tchara.id = payload.emplace.id;\r\n\t\t\t\t\t\tchara.renderer._parse(payload.emplace.code);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tchara.renderer._setup_test();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet result = await context.dispatch('_addChara', {\r\n\t\t\t\t\tchara: chara,\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (window.scene_map) {\r\n\t\t\t\t\t\twindow.scene_map.addChara(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ex) {\r\n\t\t\t\t\tconsole.error(ex);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\t\t\tcreateChara: async function (context, payload) {\r\n\t\t\t\tcontext.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\treturn await context.dispatch('_createChara', payload);\r\n\t\t\t},\r\n\t\t\t//replaceCharacter: async function (context) {\r\n\t\t\t//},\r\n\t\t\tloadCharacters: async function (context) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tlet list =  JSON.parse(window.localStorage.getItem(\"chara_list\"));\r\n\t\t\t\tif (!list) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//clear\r\n\t\t\t\tcontext.commit(\"clear\");\r\n\r\n\t\t\t\tcontext.commit(\"increaseProgressMax\", { amount: list.length * 2 });\r\n\r\n\t\t\t\tfor (let index = 0; index < list.length; ++index) {\r\n\t\t\t\t\tconst savedChara = list[index];\r\n\r\n\t\t\t\t\tlet isIdExist = await context.dispatch('isIdExist', {\r\n\t\t\t\t\t\tid: savedChara.id,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (isIdExist) {\r\n\t\t\t\t\t\t//console.log(\"replace character[\" + index + \"]: \" + savedChara.id);\r\n\t\t\t\t\t\tconsole.log(\"character: \" + savedChara.id + \"is exist\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log(\"load character[\" + index + \"]: \" + savedChara.id);\r\n\t\t\t\t\t\tawait context.dispatch('_createChara', {\r\n\t\t\t\t\t\t\templace: {\r\n\t\t\t\t\t\t\t\tid: savedChara.id,\r\n\t\t\t\t\t\t\t\tcode: savedChara.code,\r\n\t\t\t\t\t\t\t\t//index: index,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsaveCharacters: function (context) {\r\n\t\t\t\tconst state = context.state;\r\n\t\t\t\tlet ls_charaList = [];\r\n\r\n\t\t\t\tstate.charaList.forEach(function (chara, index) {\r\n\t\t\t\t\tconst id = chara.id;\r\n\t\t\t\t\tconst code = chara.renderer._stringify(false);\r\n\r\n\t\t\t\t\tls_charaList[index] = {\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tcode: code,\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\r\n\t\t\t\twindow.localStorage.setItem(\"chara_list\", JSON.stringify(ls_charaList));\r\n\t\t\t},\r\n\t\t}\r\n\t});\r\n\r\n\texport default {\r\n\t\tstore,\r\n\t\tdata: function () {\r\n\t\t\tlet scr_rat_x = window.innerWidth / 1366;\r\n\t\t\tlet scr_rat_y = window.innerHeight / 768;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdirty: 0,\r\n\r\n\t\t\t\t//chara: {},\r\n\t\t\t\t//windowOrder: [1, 2, 3],\r\n\t\t\t\tis_show_chara_dl_menu: false,\r\n\r\n\t\t\t\tmapEditorMode: \"layeredObject\",\r\n\t\t\t\tdisplayMode: 0,\r\n\t\t\t\tselectedLayer: 0,\r\n\t\t\t\twnd_debug_style: { background: \"#ffffff\", padding: \"0 0.5em\" },\r\n\r\n\t\t\t\twnds: {\r\n\t\t\t\t\tmenu: { name: \"$menu\", visable: true, pos: { x: 0, y: 0 } },\r\n\t\t\t\t\tcharacter_list: { name: \"Characters\", visable: true, pos: { x: 900 * scr_rat_x, y: 220 * scr_rat_y } },\r\n\t\t\t\t\tcharacter_attribute: { name: \"Character attribute\", visable: true, pos: { x: 900 * scr_rat_x, y: 0 * scr_rat_y } },\r\n\t\t\t\t\tequip_box: { name: \"Equip box\", visable: true, pos: { x: 0 * scr_rat_x, y: 50 * scr_rat_y } },\r\n\t\t\t\t\tspawnpoint: { name: \"Spawn point\", visable: false, pos: { x: 350 * scr_rat_x, y: 0 * scr_rat_y } },\r\n\t\t\t\t\tdebug_window: {\r\n\t\t\t\t\t\tname: \"Map editor (Debug)\",\r\n\t\t\t\t\t\tvisable: false,\r\n\t\t\t\t\t\tpos: { x: 0 * scr_rat_x, y: 100 * scr_rat_y },\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\r\n\t\t\t\tgv: $gv,\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: Object.assign(\r\n\t\t\tVuex.mapState({\r\n\t\t\t\tcharaList: \"charaList\",\t// chara[]\r\n\t\t\t\tselected: \"selected\",\t// charaId\r\n\t\t\t\tchara: \"chara\",\t\t\t// current chara\r\n\t\t\t\tprogressValue: \"progressValue\",\r\n\t\t\t\tprogressMaximum: \"progressMaximum\",\r\n\t\t\t}),\r\n\t\t\t{\r\n\t\t\t}\r\n\t\t),\r\n\t\tmethods: {\r\n\t\t\tscene_map: function () {\r\n\t\t\t\treturn window.scene_map;\r\n\t\t\t},\r\n\t\t\tloadCharacters: function () {\r\n\t\t\t\tconsole.log(\"load character\");\r\n\t\t\t\tthis.$store.dispatch('loadCharacters');\r\n\t\t\t},\r\n\t\t\tsaveCharacters: function () {\r\n\t\t\t\tconsole.log(\"save characters\");\r\n\t\t\t\talert(\"save characters\");\r\n\t\t\t\tthis.$store.dispatch('saveCharacters');\r\n\t\t\t},\r\n\t\t\tselectChara: function (id) {\r\n\t\t\t\tconsole.log(\"select character: \" + id);\r\n\t\t\t\tthis.$store.dispatch(\"selectChara\", {\r\n\t\t\t\t\tid: id\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\taddNewChara: function () {\r\n\t\t\t\tconsole.log(\"create new character\");\r\n\t\t\t\tthis.$store.dispatch('createChara');\r\n\t\t\t},\r\n\t\t\taddCloneChara: function () {\r\n\t\t\t\tif (!this.chara) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"clone character: \" + this.chara.id);\r\n\t\t\t\tthis.$store.dispatch('createChara', {\r\n\t\t\t\t\tchara: this.chara\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\toninput_sort: function (value) {\r\n\t\t\t\tthis.$store.state.charaList = value;\r\n\t\t\t},\r\n\r\n\t\t\tfaceColor: async function ({ color }) {\r\n\t\t\t\tif (this.chara) {\r\n\t\t\t\t\tif (this.chara && color != null) {\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\t\t\tthis.chara.renderer.faceColor = color;\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tawait this.chara.renderer.__synchronize(0);\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thairColor: async function ({ color }) {\r\n\t\t\t\tif (this.chara) {\r\n\t\t\t\t\tif (this.chara && color != null) {\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\t\t\tthis.chara.renderer.hairColor = color;\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tawait this.chara.renderer.__synchronize(0);\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t$hairMixColor2: function ({ color, mix }) {\r\n\t\t\t\tconst vm = this;\r\n\r\n\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 1 });\r\n\r\n\t\t\t\tthis.chara.renderer.slots.hairColor2 = color;\r\n\t\t\t\tPromise.all([this.chara.renderer.slots.hair.$promise_hair2, this.chara.renderer.slots.hair.$promise_hair3]).then(async function (hair2, hair3) {\r\n\t\t\t\t\tawait vm.chara.renderer.__synchronize(0);\r\n\t\t\t\t\tvm.chara.renderer.slots.hairMix2 = mix;\r\n\t\t\t\t\tapp.updateScreen();\r\n\r\n\t\t\t\t\tvm.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t}).catch(function (reason) {\r\n\t\t\t\t\tvm.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\thairColor2: function (params) {\r\n\t\t\t\tthis.$hairMixColor2(params);\r\n\t\t\t},\r\n\t\t\thairMix2: function (params) {\r\n\t\t\t\tthis.$hairMixColor2(params);\r\n\t\t\t},\r\n\r\n\t\t\tclickItem: function (payload) {\r\n\t\t\t\tlet { id, category, equip } = payload;\r\n\r\n\t\t\t\tif (this.chara) {\r\n\t\t\t\t\tif (window.$io) {\r\n\t\t\t\t\t\treturn this.chara.useItem(id, category).then(function (result) {\r\n\t\t\t\t\t\t\tconsole.log(\"can't use item: \" + id);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (!ItemCategoryInfo.isEquip(id) || !this.chara.renderer.unuse(id)) {\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: 2 });\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tthis.chara.useItem(id, category, equip);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\tthis.$store.commit(\"increaseProgressMax\", { amount: -2 });\r\n\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t\tthrow ex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t//TODO: synchronize chair\r\n\t\t\t\t\t\t\tthis.chara.renderer.__synchronize(0).then(() => {\r\n\t\t\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });\r\n\t\t\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\tthis.$store.commit(\"increaseProgress\", { amount: 1 });//force exit\r\n\t\t\t\t\t\t\tapp.updateScreen();\r\n\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t\tthrow ex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.$emit(\"hoverItem\", payload);\r\n\t\t\t},\r\n\t\t\thoverItem: function (payload) {\r\n\t\t\t\tthis.$emit(\"hoverItem\", payload);\r\n\t\t\t},\r\n\t\t\tmouseleaveItem: function (payload) {\r\n\t\t\t\tthis.$emit(\"mouseleaveItem\", payload);\r\n\t\t\t},\r\n\r\n\t\t\topenCharacterDLMenu: function (e, id) {\r\n\t\t\t\tlet vm = this;\r\n\t\t\t\tvm.$store.dispatch(\"selectChara\", {\r\n\t\t\t\t\tid: id\r\n\t\t\t\t}).then(function () {\r\n\t\t\t\t\tvm.is_show_chara_dl_menu = true;\r\n\r\n\t\t\t\t\tvm.$nextTick(function () {\r\n\t\t\t\t\t\tvm.$refs.chara_dl_menu.setPosition({\r\n\t\t\t\t\t\t\tmy: \"left top\",\r\n\t\t\t\t\t\t\tof: e,\r\n\t\t\t\t\t\t\t//collision: \"fit\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//console.log(\"openCharacterDLMenu\");\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tcloseCharacterDLMenu: function () {\r\n\t\t\t\tlet vm = this;\r\n\t\t\t\tvm.is_show_chara_dl_menu = false;\r\n\t\t\t\t//console.log(\"closeCharacterDLMenu\");\r\n\t\t\t},\r\n\t\t\tcopyCharaCode: function () {\r\n\t\t\t\tlet code = this.chara.renderer._stringify(false);\r\n\t\t\t\tcopyToClipboard(code);\r\n\t\t\t},\r\n\t\t\t_save_as_png: function () {\r\n\t\t\t\tthis.chara.renderer._save_as_png(engine, this.chara.id);\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tlet elem = document.getElementById(\"bgm\");\r\n\t\t\t\r\n\t\t\tthis.$refs.bgm_outer.appendChild(elem);\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\t\"ui-draggable\": UIDraggable,\r\n\t\t\t\"ui-dialog\": UIDialog,\r\n\t\t\t\"ui-sortable\": UISortable,\r\n\t\t\t\"ui-trigger\": UITrigger,\r\n\t\t\t\"ui-menu\": UIMenu,\r\n\r\n\t\t\t\"ui-character\": UICharacter,\r\n\t\t\t\"ui-character-svg\": UICharacterSVG,\r\n\t\t\t\"ui-character-attribute\": UICharacterAttribute,\r\n\t\t\t\"ui-equip-box\": UIEquipBox,\r\n\r\n\t\t\t\"ui-mob-list\": UIMobList,\r\n\t\t\t\"ui-map-editor\": UIMapEditor,\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.dialog-group {\r\n\t\tposition: fixed;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.ui-dialog .ui-equip-box-dialog.ui-dialog-content {\r\n\t\tpadding: 0;\r\n\t\twidth: 100% !important;\r\n\t}\r\n\r\n\t/*li.active {\r\n\t\tbackground-color: lightcyan;\r\n\t}\r\n\t*/\r\n\t.ui-character-list .active {\r\n\t\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\r\n\t\tbackground-color: #ffec64;\r\n\t}\r\n\r\n\t.ui-character-list {\r\n\t\tlist-style: none;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t.ui-character-list > li {\r\n\t\twidth: 16em;\r\n\t}\r\n\r\n\t.ui-character-list table {\r\n\t\twidth: 100%;\r\n\t\t/*border-collapse: collapse;*/\r\n\t}\r\n\t\r\n\t.ui-character-list td:nth-child(1) {\r\n\t\t/*border: 1px solid black;*/\r\n\t\twidth: 20%;\r\n\t}\r\n\r\n\t.ui-character-list td:nth-child(2) {\r\n\t\t/*border: 1px solid black;*/\r\n\t\twidth: 50%;\r\n\t}\r\n\r\n\t/*\r\n\t.ui-character-list td:first-child {\r\n\t}\r\n\t*/\r\n\r\n\t/*.ui-character-list td:last-child {\r\n\t\tfloat: right;\r\n\t}*/\r\n\t\r\n\t.chara-ls-btn-group {\r\n\t\tdisplay: inline;\r\n\t\tfloat: right;\r\n\t}\r\n\t.chara-ls-btn {\r\n\t    display: inline-flex;\r\n\t\twidth: 20px;\r\n\t\theight: 20px;\r\n\t\tpadding: 0;\r\n\t}\r\n\t.chara-ls-btn > * {\r\n\t\tmargin: auto;\r\n\t\tpadding: 0;\r\n\t}\r\n\t\r\n\t.loading {\r\n\t\tposition: absolute;\r\n\t\ttop:0;\r\n\t\tleft:0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: rgba(100, 100, 100, 0.5);\r\n\t\ttext-shadow: 1px 1px 0 white, 0 0 1px white;\r\n\t\t\r\n\t\tdisplay:flex;\r\n\t\talign-items:center;\r\n\t\tjustify-content:center;\r\n\t}\r\n\r\n\t/*\r\n\t\thttp://www.oxxostudio.tw/articles/201408/sticky-ball.html\r\n\t*/\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./editor.vue?vue&type=template&id=1e192451&scoped=true&\"\nimport script from \"./editor.vue?vue&type=script&lang=js&\"\nexport * from \"./editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./editor.vue?vue&type=style&index=0&id=1e192451&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1e192451\",\n  null\n  \n)\n\nexport default component.exports","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport function b2Assert(condition, ...args) {\r\n    if (!condition) {\r\n        debugger;\r\n    }\r\n}\r\nexport const b2_maxFloat = 1E+37; // FLT_MAX instead of Number.MAX_VALUE;\r\nexport const b2_epsilon = 1E-5; // FLT_EPSILON instead of Number.MIN_VALUE;\r\nexport const b2_epsilon_sq = (b2_epsilon * b2_epsilon);\r\nexport const b2_pi = 3.14159265359; // Math.PI;\r\n/// @file\r\n/// Global tuning constants based on meters-kilograms-seconds (MKS) units.\r\n///\r\n// Collision\r\n/// The maximum number of contact points between two convex shapes. Do\r\n/// not change this value.\r\nexport const b2_maxManifoldPoints = 2;\r\n/// The maximum number of vertices on a convex polygon. You cannot increase\r\n/// this too much because b2BlockAllocator has a maximum object size.\r\nexport const b2_maxPolygonVertices = 8;\r\n/// This is used to fatten AABBs in the dynamic tree. This allows proxies\r\n/// to move by a small amount without triggering a tree adjustment.\r\n/// This is in meters.\r\nexport const b2_aabbExtension = 0.1;\r\n/// This is used to fatten AABBs in the dynamic tree. This is used to predict\r\n/// the future position based on the current displacement.\r\n/// This is a dimensionless multiplier.\r\nexport const b2_aabbMultiplier = 2;\r\n/// A small length used as a collision and constraint tolerance. Usually it is\r\n/// chosen to be numerically significant, but visually insignificant.\r\nexport const b2_linearSlop = 0.008; // 0.005;\r\n/// A small angle used as a collision and constraint tolerance. Usually it is\r\n/// chosen to be numerically significant, but visually insignificant.\r\nexport const b2_angularSlop = 2 / 180 * b2_pi;\r\n/// The radius of the polygon/edge shape skin. This should not be modified. Making\r\n/// this smaller means polygons will have an insufficient buffer for continuous collision.\r\n/// Making it larger may create artifacts for vertex collision.\r\nexport const b2_polygonRadius = 2 * b2_linearSlop;\r\n/// Maximum number of sub-steps per contact in continuous physics simulation.\r\nexport const b2_maxSubSteps = 8;\r\n// Dynamics\r\n/// Maximum number of contacts to be handled to solve a TOI impact.\r\nexport const b2_maxTOIContacts = 32;\r\n/// A velocity threshold for elastic collisions. Any collision with a relative linear\r\n/// velocity below this threshold will be treated as inelastic.\r\nexport const b2_velocityThreshold = 1;\r\n/// The maximum linear position correction used when solving constraints. This helps to\r\n/// prevent overshoot.\r\nexport const b2_maxLinearCorrection = 0.2;\r\n/// The maximum angular position correction used when solving constraints. This helps to\r\n/// prevent overshoot.\r\nexport const b2_maxAngularCorrection = 8 / 180 * b2_pi;\r\n/// The maximum linear velocity of a body. This limit is very large and is used\r\n/// to prevent numerical problems. You shouldn't need to adjust this.\r\nexport const b2_maxTranslation = 2;\r\nexport const b2_maxTranslationSquared = b2_maxTranslation * b2_maxTranslation;\r\n/// The maximum angular velocity of a body. This limit is very large and is used\r\n/// to prevent numerical problems. You shouldn't need to adjust this.\r\nexport const b2_maxRotation = 0.5 * b2_pi;\r\nexport const b2_maxRotationSquared = b2_maxRotation * b2_maxRotation;\r\n/// This scale factor controls how fast overlap is resolved. Ideally this would be 1 so\r\n/// that overlap is removed in one time step. However using values close to 1 often lead\r\n/// to overshoot.\r\nexport const b2_baumgarte = 0.2;\r\nexport const b2_toiBaumgarte = 0.75;\r\n// #if B2_ENABLE_PARTICLE\r\n// Particle\r\n/// A symbolic constant that stands for particle allocation error.\r\nexport const b2_invalidParticleIndex = -1;\r\nexport const b2_maxParticleIndex = 0x7FFFFFFF;\r\n/// The default distance between particles, multiplied by the particle diameter.\r\nexport const b2_particleStride = 0.75;\r\n/// The minimum particle weight that produces pressure.\r\nexport const b2_minParticleWeight = 1.0;\r\n/// The upper limit for particle pressure.\r\nexport const b2_maxParticlePressure = 0.25;\r\n/// The upper limit for force between particles.\r\nexport const b2_maxParticleForce = 0.5;\r\n/// The maximum distance between particles in a triad, multiplied by the particle diameter.\r\nexport const b2_maxTriadDistance = 2.0;\r\nexport const b2_maxTriadDistanceSquared = (b2_maxTriadDistance * b2_maxTriadDistance);\r\n/// The initial size of particle data buffers.\r\nexport const b2_minParticleSystemBufferCapacity = 256;\r\n/// The time into the future that collisions against barrier particles will be detected.\r\nexport const b2_barrierCollisionTime = 2.5;\r\n// #endif\r\n// Sleep\r\n/// The time that a body must be still before it will go to sleep.\r\nexport const b2_timeToSleep = 0.5;\r\n/// A body cannot sleep if its linear velocity is above this tolerance.\r\nexport const b2_linearSleepTolerance = 0.01;\r\n/// A body cannot sleep if its angular velocity is above this tolerance.\r\nexport const b2_angularSleepTolerance = 2 / 180 * b2_pi;\r\n// Memory Allocation\r\n/// Implement this function to use your own memory allocator.\r\nexport function b2Alloc(size) {\r\n    return null;\r\n}\r\n/// If you implement b2Alloc, you should also implement this function.\r\nexport function b2Free(mem) {\r\n}\r\n/// Logging function.\r\nexport function b2Log(message, ...args) {\r\n    // console.log(message, ...args);\r\n}\r\n/// Version numbering scheme.\r\n/// See http://en.wikipedia.org/wiki/Software_versioning\r\nexport class b2Version {\r\n    constructor(major = 0, minor = 0, revision = 0) {\r\n        this.major = 0; ///< significant changes\r\n        this.minor = 0; ///< incremental changes\r\n        this.revision = 0; ///< bug fixes\r\n        this.major = major;\r\n        this.minor = minor;\r\n        this.revision = revision;\r\n    }\r\n    toString() {\r\n        return this.major + \".\" + this.minor + \".\" + this.revision;\r\n    }\r\n}\r\n/// Current version.\r\nexport const b2_version = new b2Version(2, 3, 2);\r\nexport const b2_changelist = 313;\r\nexport function b2ParseInt(v) {\r\n    return parseInt(v, 10);\r\n}\r\nexport function b2ParseUInt(v) {\r\n    return Math.abs(parseInt(v, 10));\r\n}\r\nexport function b2MakeArray(length, init) {\r\n    let a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(init(i));\r\n    }\r\n    return a;\r\n}\r\nexport function b2MakeNullArray(length) {\r\n    const a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(null);\r\n    }\r\n    return a;\r\n}\r\nexport function b2MakeNumberArray(length, init = 0) {\r\n    const a = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        a.push(init);\r\n    }\r\n    return a;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbW1vbi9iMlNldHRpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTSxVQUFVLFFBQVEsQ0FBQyxTQUFrQixFQUFFLEdBQUcsSUFBVztJQUN6RCxJQUFJLENBQUMsU0FBUyxFQUFFO1FBQ2QsUUFBUSxDQUFDO0tBQ1Y7QUFDSCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFXLEtBQUssQ0FBQyxDQUFDLHVDQUF1QztBQUNqRixNQUFNLENBQUMsTUFBTSxVQUFVLEdBQVcsSUFBSSxDQUFDLENBQUMsMkNBQTJDO0FBQ25GLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBVyxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUMsQ0FBQztBQUMvRCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQVcsYUFBYSxDQUFDLENBQUMsV0FBVztBQUV2RCxTQUFTO0FBQ1QsMEVBQTBFO0FBQzFFLEdBQUc7QUFFSCxZQUFZO0FBRVosc0VBQXNFO0FBQ3RFLDBCQUEwQjtBQUMxQixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBVyxDQUFDLENBQUM7QUFFOUMsMkVBQTJFO0FBQzNFLHFFQUFxRTtBQUNyRSxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBVyxDQUFDLENBQUM7QUFFL0MseUVBQXlFO0FBQ3pFLG1FQUFtRTtBQUNuRSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQVcsR0FBRyxDQUFDO0FBRTVDLDZFQUE2RTtBQUM3RSwwREFBMEQ7QUFDMUQsdUNBQXVDO0FBQ3ZDLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFXLENBQUMsQ0FBQztBQUUzQyw4RUFBOEU7QUFDOUUscUVBQXFFO0FBQ3JFLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBVyxLQUFLLENBQUMsQ0FBQyxTQUFTO0FBRXJELDZFQUE2RTtBQUM3RSxxRUFBcUU7QUFDckUsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFXLENBQUMsR0FBRyxHQUFHLEdBQUcsS0FBSyxDQUFDO0FBRXRELGtGQUFrRjtBQUNsRiwwRkFBMEY7QUFDMUYsK0RBQStEO0FBQy9ELE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFXLENBQUMsR0FBRyxhQUFhLENBQUM7QUFFMUQsNkVBQTZFO0FBQzdFLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBVyxDQUFDLENBQUM7QUFHeEMsV0FBVztBQUVYLG1FQUFtRTtBQUNuRSxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBVyxFQUFFLENBQUM7QUFFNUMscUZBQXFGO0FBQ3JGLCtEQUErRDtBQUMvRCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBVyxDQUFDLENBQUM7QUFFOUMsdUZBQXVGO0FBQ3ZGLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBVyxHQUFHLENBQUM7QUFFbEQsd0ZBQXdGO0FBQ3hGLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBVyxDQUFDLEdBQUcsR0FBRyxHQUFHLEtBQUssQ0FBQztBQUUvRCwrRUFBK0U7QUFDL0UscUVBQXFFO0FBQ3JFLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFXLENBQUMsQ0FBQztBQUMzQyxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBVyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztBQUV0RixnRkFBZ0Y7QUFDaEYscUVBQXFFO0FBQ3JFLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBVyxHQUFHLEdBQUcsS0FBSyxDQUFDO0FBQ2xELE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFXLGNBQWMsR0FBRyxjQUFjLENBQUM7QUFFN0UsdUZBQXVGO0FBQ3ZGLHdGQUF3RjtBQUN4RixpQkFBaUI7QUFDakIsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFXLEdBQUcsQ0FBQztBQUN4QyxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQVcsSUFBSSxDQUFDO0FBRzVDLHlCQUF5QjtBQUV6QixXQUFXO0FBRVgsa0VBQWtFO0FBQ2xFLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFXLENBQUMsQ0FBQyxDQUFDO0FBRWxELE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFXLFVBQVUsQ0FBQztBQUV0RCxnRkFBZ0Y7QUFDaEYsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQVcsSUFBSSxDQUFDO0FBRTlDLHVEQUF1RDtBQUN2RCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBVyxHQUFHLENBQUM7QUFFaEQsMENBQTBDO0FBQzFDLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFXLElBQUksQ0FBQztBQUVuRCxnREFBZ0Q7QUFDaEQsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQVcsR0FBRyxDQUFDO0FBRS9DLDJGQUEyRjtBQUMzRixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBVyxHQUFHLENBQUM7QUFDL0MsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBQVcsQ0FBQyxtQkFBbUIsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDO0FBRTlGLDhDQUE4QztBQUM5QyxNQUFNLENBQUMsTUFBTSxrQ0FBa0MsR0FBVyxHQUFHLENBQUM7QUFFOUQsd0ZBQXdGO0FBQ3hGLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFXLEdBQUcsQ0FBQztBQUVuRCxTQUFTO0FBR1QsUUFBUTtBQUVSLGtFQUFrRTtBQUNsRSxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQVcsR0FBRyxDQUFDO0FBRTFDLHVFQUF1RTtBQUN2RSxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBVyxJQUFJLENBQUM7QUFFcEQsd0VBQXdFO0FBQ3hFLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFXLENBQUMsR0FBRyxHQUFHLEdBQUcsS0FBSyxDQUFDO0FBRWhFLG9CQUFvQjtBQUVwQiw2REFBNkQ7QUFDN0QsTUFBTSxVQUFVLE9BQU8sQ0FBQyxJQUFZO0lBQ2xDLE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQUVELHNFQUFzRTtBQUN0RSxNQUFNLFVBQVUsTUFBTSxDQUFDLEdBQVE7QUFDL0IsQ0FBQztBQUVELHFCQUFxQjtBQUNyQixNQUFNLFVBQVUsS0FBSyxDQUFDLE9BQWUsRUFBRSxHQUFHLElBQVc7SUFDbkQsaUNBQWlDO0FBQ25DLENBQUM7QUFFRCw2QkFBNkI7QUFDN0Isd0RBQXdEO0FBQ3hELE1BQU0sT0FBTyxTQUFTO0lBS3BCLFlBQVksUUFBZ0IsQ0FBQyxFQUFFLFFBQWdCLENBQUMsRUFBRSxXQUFtQixDQUFDO1FBSi9ELFVBQUssR0FBVyxDQUFDLENBQUMsQ0FBQyx3QkFBd0I7UUFDM0MsVUFBSyxHQUFXLENBQUMsQ0FBQyxDQUFDLHdCQUF3QjtRQUMzQyxhQUFRLEdBQVcsQ0FBQyxDQUFDLENBQUMsY0FBYztRQUd6QyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0lBRU0sUUFBUTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUM3RCxDQUFDO0NBQ0Y7QUFFRCxvQkFBb0I7QUFDcEIsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFjLElBQUksU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFFNUQsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFXLEdBQUcsQ0FBQztBQUV6QyxNQUFNLFVBQVUsVUFBVSxDQUFDLENBQVM7SUFDbEMsT0FBTyxRQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ3pCLENBQUM7QUFFRCxNQUFNLFVBQVUsV0FBVyxDQUFDLENBQVM7SUFDbkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNuQyxDQUFDO0FBRUQsTUFBTSxVQUFVLFdBQVcsQ0FBSSxNQUFjLEVBQUUsSUFBeUI7SUFDdEUsSUFBSSxDQUFDLEdBQVEsRUFBRSxDQUFDO0lBQ2hCLEtBQUssSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUU7UUFDdkMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNqQjtJQUNELE9BQU8sQ0FBQyxDQUFDO0FBQ1gsQ0FBQztBQUVELE1BQU0sVUFBVSxlQUFlLENBQUksTUFBYztJQUMvQyxNQUFNLENBQUMsR0FBaUIsRUFBRSxDQUFDO0lBQzNCLEtBQUssSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUU7UUFDdkMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNkO0lBQ0QsT0FBTyxDQUFDLENBQUM7QUFDWCxDQUFDO0FBRUQsTUFBTSxVQUFVLGlCQUFpQixDQUFDLE1BQWMsRUFBRSxPQUFlLENBQUM7SUFDaEUsTUFBTSxDQUFDLEdBQWEsRUFBRSxDQUFDO0lBQ3ZCLEtBQUssSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUU7UUFDdkMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNkO0lBQ0QsT0FBTyxDQUFDLENBQUM7QUFDWCxDQUFDIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_epsilon, b2MakeArray } from \"./b2Settings\";\r\nexport const b2_pi_over_180 = b2_pi / 180;\r\nexport const b2_180_over_pi = 180 / b2_pi;\r\nexport const b2_two_pi = 2 * b2_pi;\r\nexport const b2Abs = Math.abs;\r\n// export function b2Abs(n: number): number {\r\n//   return (n < 0) ? (-n) : (n);\r\n// }\r\nexport const b2Min = Math.min;\r\n// export function b2Min(a: number, b: number): number {\r\n//   return (a < b) ? (a) : (b);\r\n// }\r\nexport const b2Max = Math.max;\r\n// export function b2Max(a: number, b: number): number {\r\n//   return (a > b) ? (a) : (b);\r\n// }\r\nexport function b2Clamp(a, lo, hi) {\r\n    return (a < lo) ? (lo) : ((a > hi) ? (hi) : (a));\r\n}\r\nexport function b2Swap(a, b) {\r\n    ///b2Assert(false);\r\n    const tmp = a[0];\r\n    a[0] = b[0];\r\n    b[0] = tmp;\r\n}\r\n/// This function is used to ensure that a floating point number is\r\n/// not a NaN or infinity.\r\nexport function b2IsValid(n) {\r\n    return isFinite(n);\r\n}\r\nexport function b2Sq(n) {\r\n    return n * n;\r\n}\r\n/// This is a approximate yet fast inverse square-root.\r\nexport function b2InvSqrt(n) {\r\n    return 1 / Math.sqrt(n);\r\n}\r\nexport const b2Sqrt = Math.sqrt;\r\n// export function b2Sqrt(n: number): number {\r\n//   return Math.sqrt(n);\r\n// }\r\nexport const b2Pow = Math.pow;\r\n// export function b2Pow(x: number, y: number): number {\r\n//   return Math.pow(x, y);\r\n// }\r\nexport function b2DegToRad(degrees) {\r\n    return degrees * b2_pi_over_180;\r\n}\r\nexport function b2RadToDeg(radians) {\r\n    return radians * b2_180_over_pi;\r\n}\r\nexport const b2Cos = Math.cos;\r\n// export function b2Cos(radians: number): number {\r\n//   return Math.cos(radians);\r\n// }\r\nexport const b2Sin = Math.sin;\r\n// export function b2Sin(radians: number): number {\r\n//   return Math.sin(radians);\r\n// }\r\nexport const b2Acos = Math.acos;\r\n// export function b2Acos(n: number): number {\r\n//   return Math.acos(n);\r\n// }\r\nexport const b2Asin = Math.asin;\r\n// export function b2Asin(n: number): number {\r\n//   return Math.asin(n);\r\n// }\r\nexport const b2Atan2 = Math.atan2;\r\n// export function b2Atan2(y: number, x: number): number {\r\n//   return Math.atan2(y, x);\r\n// }\r\nexport function b2NextPowerOfTwo(x) {\r\n    x |= (x >> 1) & 0x7FFFFFFF;\r\n    x |= (x >> 2) & 0x3FFFFFFF;\r\n    x |= (x >> 4) & 0x0FFFFFFF;\r\n    x |= (x >> 8) & 0x00FFFFFF;\r\n    x |= (x >> 16) & 0x0000FFFF;\r\n    return x + 1;\r\n}\r\nexport function b2IsPowerOfTwo(x) {\r\n    return x > 0 && (x & (x - 1)) === 0;\r\n}\r\nexport function b2Random() {\r\n    return Math.random() * 2 - 1;\r\n}\r\nexport function b2RandomRange(lo, hi) {\r\n    return (hi - lo) * Math.random() + lo;\r\n}\r\n/// A 2D column vector.\r\nexport class b2Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Clone() {\r\n        return new b2Vec2(this.x, this.y);\r\n    }\r\n    SetZero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n    Set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        return this;\r\n    }\r\n    SelfAdd(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        return this;\r\n    }\r\n    SelfAddXY(x, y) {\r\n        this.x += x;\r\n        this.y += y;\r\n        return this;\r\n    }\r\n    SelfSub(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        return this;\r\n    }\r\n    SelfSubXY(x, y) {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        return this;\r\n    }\r\n    SelfMul(s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        return this;\r\n    }\r\n    SelfMulAdd(s, v) {\r\n        this.x += s * v.x;\r\n        this.y += s * v.y;\r\n        return this;\r\n    }\r\n    SelfMulSub(s, v) {\r\n        this.x -= s * v.x;\r\n        this.y -= s * v.y;\r\n        return this;\r\n    }\r\n    Dot(v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n    Cross(v) {\r\n        return this.x * v.y - this.y * v.x;\r\n    }\r\n    Length() {\r\n        const x = this.x, y = this.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n    LengthSquared() {\r\n        const x = this.x, y = this.y;\r\n        return (x * x + y * y);\r\n    }\r\n    Normalize() {\r\n        const length = this.Length();\r\n        if (length >= b2_epsilon) {\r\n            const inv_length = 1 / length;\r\n            this.x *= inv_length;\r\n            this.y *= inv_length;\r\n        }\r\n        return length;\r\n    }\r\n    SelfNormalize() {\r\n        const length = this.Length();\r\n        if (length >= b2_epsilon) {\r\n            const inv_length = 1 / length;\r\n            this.x *= inv_length;\r\n            this.y *= inv_length;\r\n        }\r\n        return this;\r\n    }\r\n    SelfRotate(radians) {\r\n        const c = Math.cos(radians);\r\n        const s = Math.sin(radians);\r\n        const x = this.x;\r\n        this.x = c * x - s * this.y;\r\n        this.y = s * x + c * this.y;\r\n        return this;\r\n    }\r\n    IsValid() {\r\n        return isFinite(this.x) && isFinite(this.y);\r\n    }\r\n    SelfCrossVS(s) {\r\n        const x = this.x;\r\n        this.x = s * this.y;\r\n        this.y = -s * x;\r\n        return this;\r\n    }\r\n    SelfCrossSV(s) {\r\n        const x = this.x;\r\n        this.x = -s * this.y;\r\n        this.y = s * x;\r\n        return this;\r\n    }\r\n    SelfMinV(v) {\r\n        this.x = b2Min(this.x, v.x);\r\n        this.y = b2Min(this.y, v.y);\r\n        return this;\r\n    }\r\n    SelfMaxV(v) {\r\n        this.x = b2Max(this.x, v.x);\r\n        this.y = b2Max(this.y, v.y);\r\n        return this;\r\n    }\r\n    SelfAbs() {\r\n        this.x = b2Abs(this.x);\r\n        this.y = b2Abs(this.y);\r\n        return this;\r\n    }\r\n    SelfNeg() {\r\n        this.x = (-this.x);\r\n        this.y = (-this.y);\r\n        return this;\r\n    }\r\n    SelfSkew() {\r\n        const x = this.x;\r\n        this.x = -this.y;\r\n        this.y = x;\r\n        return this;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Vec2());\r\n    }\r\n    static AbsV(v, out) { return b2AbsV(v, out); }\r\n    static MinV(a, b, out) { return b2MinV(a, b, out); }\r\n    static MaxV(a, b, out) { return b2MaxV(a, b, out); }\r\n    static ClampV(v, lo, hi, out) { return b2ClampV(v, lo, hi, out); }\r\n    static RotateV(v, radians, out) { return b2RotateV(v, radians, out); }\r\n    static DotVV(a, b) { return b2DotVV(a, b); }\r\n    static CrossVV(a, b) { return b2CrossVV(a, b); }\r\n    static CrossVS(v, s, out) { return b2CrossVS(v, s, out); }\r\n    static CrossVOne(v, out) { return b2CrossVOne(v, out); }\r\n    static CrossSV(s, v, out) { return b2CrossSV(s, v, out); }\r\n    static CrossOneV(v, out) { return b2CrossOneV(v, out); }\r\n    static AddVV(a, b, out) { return b2AddVV(a, b, out); }\r\n    static SubVV(a, b, out) { return b2SubVV(a, b, out); }\r\n    static MulSV(s, v, out) { return b2MulSV(s, v, out); }\r\n    static MulVS(v, s, out) { return b2MulVS(v, s, out); }\r\n    static AddVMulSV(a, s, b, out) { return b2AddVMulSV(a, s, b, out); }\r\n    static SubVMulSV(a, s, b, out) { return b2SubVMulSV(a, s, b, out); }\r\n    static AddVCrossSV(a, s, v, out) { return b2AddVCrossSV(a, s, v, out); }\r\n    static MidVV(a, b, out) { return b2MidVV(a, b, out); }\r\n    static ExtVV(a, b, out) { return b2ExtVV(a, b, out); }\r\n    static IsEqualToV(a, b) { return b2IsEqualToV(a, b); }\r\n    static DistanceVV(a, b) { return b2DistanceVV(a, b); }\r\n    static DistanceSquaredVV(a, b) { return b2DistanceSquaredVV(a, b); }\r\n    static NegV(v, out) { return b2NegV(v, out); }\r\n}\r\nb2Vec2.ZERO = new b2Vec2(0, 0);\r\nb2Vec2.UNITX = new b2Vec2(1, 0);\r\nb2Vec2.UNITY = new b2Vec2(0, 1);\r\nb2Vec2.s_t0 = new b2Vec2();\r\nb2Vec2.s_t1 = new b2Vec2();\r\nb2Vec2.s_t2 = new b2Vec2();\r\nb2Vec2.s_t3 = new b2Vec2();\r\nexport const b2Vec2_zero = new b2Vec2(0, 0);\r\nfunction b2AbsV(v, out) {\r\n    out.x = b2Abs(v.x);\r\n    out.y = b2Abs(v.y);\r\n    return out;\r\n}\r\nfunction b2MinV(a, b, out) {\r\n    out.x = b2Min(a.x, b.x);\r\n    out.y = b2Min(a.y, b.y);\r\n    return out;\r\n}\r\nfunction b2MaxV(a, b, out) {\r\n    out.x = b2Max(a.x, b.x);\r\n    out.y = b2Max(a.y, b.y);\r\n    return out;\r\n}\r\nfunction b2ClampV(v, lo, hi, out) {\r\n    out.x = b2Clamp(v.x, lo.x, hi.x);\r\n    out.y = b2Clamp(v.y, lo.y, hi.y);\r\n    return out;\r\n}\r\nfunction b2RotateV(v, radians, out) {\r\n    const v_x = v.x, v_y = v.y;\r\n    const c = Math.cos(radians);\r\n    const s = Math.sin(radians);\r\n    out.x = c * v_x - s * v_y;\r\n    out.y = s * v_x + c * v_y;\r\n    return out;\r\n}\r\nfunction b2DotVV(a, b) {\r\n    return a.x * b.x + a.y * b.y;\r\n}\r\nfunction b2CrossVV(a, b) {\r\n    return a.x * b.y - a.y * b.x;\r\n}\r\nfunction b2CrossVS(v, s, out) {\r\n    const v_x = v.x;\r\n    out.x = s * v.y;\r\n    out.y = -s * v_x;\r\n    return out;\r\n}\r\nfunction b2CrossVOne(v, out) {\r\n    const v_x = v.x;\r\n    out.x = v.y;\r\n    out.y = -v_x;\r\n    return out;\r\n}\r\nfunction b2CrossSV(s, v, out) {\r\n    const v_x = v.x;\r\n    out.x = -s * v.y;\r\n    out.y = s * v_x;\r\n    return out;\r\n}\r\nfunction b2CrossOneV(v, out) {\r\n    const v_x = v.x;\r\n    out.x = -v.y;\r\n    out.y = v_x;\r\n    return out;\r\n}\r\nfunction b2AddVV(a, b, out) { out.x = a.x + b.x; out.y = a.y + b.y; return out; }\r\nfunction b2SubVV(a, b, out) { out.x = a.x - b.x; out.y = a.y - b.y; return out; }\r\nfunction b2MulSV(s, v, out) { out.x = v.x * s; out.y = v.y * s; return out; }\r\nfunction b2MulVS(v, s, out) { out.x = v.x * s; out.y = v.y * s; return out; }\r\nfunction b2AddVMulSV(a, s, b, out) { out.x = a.x + (s * b.x); out.y = a.y + (s * b.y); return out; }\r\nfunction b2SubVMulSV(a, s, b, out) { out.x = a.x - (s * b.x); out.y = a.y - (s * b.y); return out; }\r\nfunction b2AddVCrossSV(a, s, v, out) {\r\n    const v_x = v.x;\r\n    out.x = a.x - (s * v.y);\r\n    out.y = a.y + (s * v_x);\r\n    return out;\r\n}\r\nfunction b2MidVV(a, b, out) { out.x = (a.x + b.x) * 0.5; out.y = (a.y + b.y) * 0.5; return out; }\r\nfunction b2ExtVV(a, b, out) { out.x = (b.x - a.x) * 0.5; out.y = (b.y - a.y) * 0.5; return out; }\r\nfunction b2IsEqualToV(a, b) {\r\n    return a.x === b.x && a.y === b.y;\r\n}\r\nfunction b2DistanceVV(a, b) {\r\n    const c_x = a.x - b.x;\r\n    const c_y = a.y - b.y;\r\n    return Math.sqrt(c_x * c_x + c_y * c_y);\r\n}\r\nfunction b2DistanceSquaredVV(a, b) {\r\n    const c_x = a.x - b.x;\r\n    const c_y = a.y - b.y;\r\n    return (c_x * c_x + c_y * c_y);\r\n}\r\nfunction b2NegV(v, out) { out.x = -v.x; out.y = -v.y; return out; }\r\n/// A 2D column vector with 3 elements.\r\nexport class b2Vec3 {\r\n    constructor(x = 0, y = 0, z = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    Clone() {\r\n        return new b2Vec3(this.x, this.y, this.z);\r\n    }\r\n    SetZero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        return this;\r\n    }\r\n    SetXYZ(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        this.z = other.z;\r\n        return this;\r\n    }\r\n    SelfNeg() {\r\n        this.x = (-this.x);\r\n        this.y = (-this.y);\r\n        this.z = (-this.z);\r\n        return this;\r\n    }\r\n    SelfAdd(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n        return this;\r\n    }\r\n    SelfAddXYZ(x, y, z) {\r\n        this.x += x;\r\n        this.y += y;\r\n        this.z += z;\r\n        return this;\r\n    }\r\n    SelfSub(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n        return this;\r\n    }\r\n    SelfSubXYZ(x, y, z) {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        this.z -= z;\r\n        return this;\r\n    }\r\n    SelfMul(s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        this.z *= s;\r\n        return this;\r\n    }\r\n    static DotV3V3(a, b) { return b2DotV3V3(a, b); }\r\n    static CrossV3V3(a, b, out) { return b2CrossV3V3(a, b, out); }\r\n}\r\nb2Vec3.ZERO = new b2Vec3(0, 0, 0);\r\nb2Vec3.s_t0 = new b2Vec3();\r\nfunction b2DotV3V3(a, b) {\r\n    return a.x * b.x + a.y * b.y + a.z * b.z;\r\n}\r\nfunction b2CrossV3V3(a, b, out) {\r\n    const a_x = a.x, a_y = a.y, a_z = a.z;\r\n    const b_x = b.x, b_y = b.y, b_z = b.z;\r\n    out.x = a_y * b_z - a_z * b_y;\r\n    out.y = a_z * b_x - a_x * b_z;\r\n    out.z = a_x * b_y - a_y * b_x;\r\n    return out;\r\n}\r\n/// A 2-by-2 matrix. Stored in column-major order.\r\nexport class b2Mat22 {\r\n    constructor() {\r\n        this.ex = new b2Vec2(1, 0);\r\n        this.ey = new b2Vec2(0, 1);\r\n    }\r\n    Clone() {\r\n        return new b2Mat22().Copy(this);\r\n    }\r\n    static FromVV(c1, c2) {\r\n        return new b2Mat22().SetVV(c1, c2);\r\n    }\r\n    static FromSSSS(r1c1, r1c2, r2c1, r2c2) {\r\n        return new b2Mat22().SetSSSS(r1c1, r1c2, r2c1, r2c2);\r\n    }\r\n    static FromAngle(radians) {\r\n        return new b2Mat22().SetAngle(radians);\r\n    }\r\n    SetSSSS(r1c1, r1c2, r2c1, r2c2) {\r\n        this.ex.Set(r1c1, r2c1);\r\n        this.ey.Set(r1c2, r2c2);\r\n        return this;\r\n    }\r\n    SetVV(c1, c2) {\r\n        this.ex.Copy(c1);\r\n        this.ey.Copy(c2);\r\n        return this;\r\n    }\r\n    SetAngle(radians) {\r\n        const c = Math.cos(radians);\r\n        const s = Math.sin(radians);\r\n        this.ex.Set(c, s);\r\n        this.ey.Set(-s, c);\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.ex.Copy(other.ex);\r\n        this.ey.Copy(other.ey);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.ex.Set(1, 0);\r\n        this.ey.Set(0, 1);\r\n        return this;\r\n    }\r\n    SetZero() {\r\n        this.ex.SetZero();\r\n        this.ey.SetZero();\r\n        return this;\r\n    }\r\n    GetAngle() {\r\n        return Math.atan2(this.ex.y, this.ex.x);\r\n    }\r\n    GetInverse(out) {\r\n        const a = this.ex.x;\r\n        const b = this.ey.x;\r\n        const c = this.ex.y;\r\n        const d = this.ey.y;\r\n        let det = a * d - b * c;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.ex.x = det * d;\r\n        out.ey.x = (-det * b);\r\n        out.ex.y = (-det * c);\r\n        out.ey.y = det * a;\r\n        return out;\r\n    }\r\n    Solve(b_x, b_y, out) {\r\n        const a11 = this.ex.x, a12 = this.ey.x;\r\n        const a21 = this.ex.y, a22 = this.ey.y;\r\n        let det = a11 * a22 - a12 * a21;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (a22 * b_x - a12 * b_y);\r\n        out.y = det * (a11 * b_y - a21 * b_x);\r\n        return out;\r\n    }\r\n    SelfAbs() {\r\n        this.ex.SelfAbs();\r\n        this.ey.SelfAbs();\r\n        return this;\r\n    }\r\n    SelfInv() {\r\n        return this.GetInverse(this);\r\n    }\r\n    SelfAddM(M) {\r\n        this.ex.SelfAdd(M.ex);\r\n        this.ey.SelfAdd(M.ey);\r\n        return this;\r\n    }\r\n    SelfSubM(M) {\r\n        this.ex.SelfSub(M.ex);\r\n        this.ey.SelfSub(M.ey);\r\n        return this;\r\n    }\r\n    static AbsM(M, out) { return b2AbsM(M, out); }\r\n    static MulMV(M, v, out) { return b2MulMV(M, v, out); }\r\n    static MulTMV(M, v, out) { return b2MulTMV(M, v, out); }\r\n    static AddMM(A, B, out) { return b2AddMM(A, B, out); }\r\n    static MulMM(A, B, out) { return b2MulMM(A, B, out); }\r\n    static MulTMM(A, B, out) { return b2MulTMM(A, B, out); }\r\n}\r\nb2Mat22.IDENTITY = new b2Mat22();\r\nfunction b2AbsM(M, out) {\r\n    const M_ex = M.ex, M_ey = M.ey;\r\n    out.ex.x = b2Abs(M_ex.x);\r\n    out.ex.y = b2Abs(M_ex.y);\r\n    out.ey.x = b2Abs(M_ey.x);\r\n    out.ey.y = b2Abs(M_ey.y);\r\n    return out;\r\n}\r\nfunction b2MulMV(M, v, out) {\r\n    const M_ex = M.ex, M_ey = M.ey;\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = M_ex.x * v_x + M_ey.x * v_y;\r\n    out.y = M_ex.y * v_x + M_ey.y * v_y;\r\n    return out;\r\n}\r\nfunction b2MulTMV(M, v, out) {\r\n    const M_ex = M.ex, M_ey = M.ey;\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = M_ex.x * v_x + M_ex.y * v_y;\r\n    out.y = M_ey.x * v_x + M_ey.y * v_y;\r\n    return out;\r\n}\r\nfunction b2AddMM(A, B, out) {\r\n    const A_ex = A.ex, A_ey = A.ey;\r\n    const B_ex = B.ex, B_ey = B.ey;\r\n    out.ex.x = A_ex.x + B_ex.x;\r\n    out.ex.y = A_ex.y + B_ex.y;\r\n    out.ey.x = A_ey.x + B_ey.x;\r\n    out.ey.y = A_ey.y + B_ey.y;\r\n    return out;\r\n}\r\nfunction b2MulMM(A, B, out) {\r\n    const A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n    const A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n    const B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n    const B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n    out.ex.x = A_ex_x * B_ex_x + A_ey_x * B_ex_y;\r\n    out.ex.y = A_ex_y * B_ex_x + A_ey_y * B_ex_y;\r\n    out.ey.x = A_ex_x * B_ey_x + A_ey_x * B_ey_y;\r\n    out.ey.y = A_ex_y * B_ey_x + A_ey_y * B_ey_y;\r\n    return out;\r\n}\r\nfunction b2MulTMM(A, B, out) {\r\n    const A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n    const A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n    const B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n    const B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n    out.ex.x = A_ex_x * B_ex_x + A_ex_y * B_ex_y;\r\n    out.ex.y = A_ey_x * B_ex_x + A_ey_y * B_ex_y;\r\n    out.ey.x = A_ex_x * B_ey_x + A_ex_y * B_ey_y;\r\n    out.ey.y = A_ey_x * B_ey_x + A_ey_y * B_ey_y;\r\n    return out;\r\n}\r\n/// A 3-by-3 matrix. Stored in column-major order.\r\nexport class b2Mat33 {\r\n    constructor() {\r\n        this.ex = new b2Vec3(1, 0, 0);\r\n        this.ey = new b2Vec3(0, 1, 0);\r\n        this.ez = new b2Vec3(0, 0, 1);\r\n    }\r\n    Clone() {\r\n        return new b2Mat33().Copy(this);\r\n    }\r\n    SetVVV(c1, c2, c3) {\r\n        this.ex.Copy(c1);\r\n        this.ey.Copy(c2);\r\n        this.ez.Copy(c3);\r\n        return this;\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.ex.Copy(other.ex);\r\n        this.ey.Copy(other.ey);\r\n        this.ez.Copy(other.ez);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.ex.SetXYZ(1, 0, 0);\r\n        this.ey.SetXYZ(0, 1, 0);\r\n        this.ez.SetXYZ(0, 0, 1);\r\n        return this;\r\n    }\r\n    SetZero() {\r\n        this.ex.SetZero();\r\n        this.ey.SetZero();\r\n        this.ez.SetZero();\r\n        return this;\r\n    }\r\n    SelfAddM(M) {\r\n        this.ex.SelfAdd(M.ex);\r\n        this.ey.SelfAdd(M.ey);\r\n        this.ez.SelfAdd(M.ez);\r\n        return this;\r\n    }\r\n    Solve33(b_x, b_y, b_z, out) {\r\n        const a11 = this.ex.x, a21 = this.ex.y, a31 = this.ex.z;\r\n        const a12 = this.ey.x, a22 = this.ey.y, a32 = this.ey.z;\r\n        const a13 = this.ez.x, a23 = this.ez.y, a33 = this.ez.z;\r\n        let det = a11 * (a22 * a33 - a32 * a23) + a21 * (a32 * a13 - a12 * a33) + a31 * (a12 * a23 - a22 * a13);\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (b_x * (a22 * a33 - a32 * a23) + b_y * (a32 * a13 - a12 * a33) + b_z * (a12 * a23 - a22 * a13));\r\n        out.y = det * (a11 * (b_y * a33 - b_z * a23) + a21 * (b_z * a13 - b_x * a33) + a31 * (b_x * a23 - b_y * a13));\r\n        out.z = det * (a11 * (a22 * b_z - a32 * b_y) + a21 * (a32 * b_x - a12 * b_z) + a31 * (a12 * b_y - a22 * b_x));\r\n        return out;\r\n    }\r\n    Solve22(b_x, b_y, out) {\r\n        const a11 = this.ex.x, a12 = this.ey.x;\r\n        const a21 = this.ex.y, a22 = this.ey.y;\r\n        let det = a11 * a22 - a12 * a21;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (a22 * b_x - a12 * b_y);\r\n        out.y = det * (a11 * b_y - a21 * b_x);\r\n        return out;\r\n    }\r\n    GetInverse22(M) {\r\n        const a = this.ex.x, b = this.ey.x, c = this.ex.y, d = this.ey.y;\r\n        let det = a * d - b * c;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        M.ex.x = det * d;\r\n        M.ey.x = -det * b;\r\n        M.ex.z = 0;\r\n        M.ex.y = -det * c;\r\n        M.ey.y = det * a;\r\n        M.ey.z = 0;\r\n        M.ez.x = 0;\r\n        M.ez.y = 0;\r\n        M.ez.z = 0;\r\n    }\r\n    GetSymInverse33(M) {\r\n        let det = b2DotV3V3(this.ex, b2CrossV3V3(this.ey, this.ez, b2Vec3.s_t0));\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        const a11 = this.ex.x, a12 = this.ey.x, a13 = this.ez.x;\r\n        const a22 = this.ey.y, a23 = this.ez.y;\r\n        const a33 = this.ez.z;\r\n        M.ex.x = det * (a22 * a33 - a23 * a23);\r\n        M.ex.y = det * (a13 * a23 - a12 * a33);\r\n        M.ex.z = det * (a12 * a23 - a13 * a22);\r\n        M.ey.x = M.ex.y;\r\n        M.ey.y = det * (a11 * a33 - a13 * a13);\r\n        M.ey.z = det * (a13 * a12 - a11 * a23);\r\n        M.ez.x = M.ex.z;\r\n        M.ez.y = M.ey.z;\r\n        M.ez.z = det * (a11 * a22 - a12 * a12);\r\n    }\r\n    static MulM33V3(A, v, out) { return b2MulM33V3(A, v, out); }\r\n    static MulM33XYZ(A, x, y, z, out) { return b2MulM33XYZ(A, x, y, z, out); }\r\n    static MulM33V2(A, v, out) { return b2MulM33V2(A, v, out); }\r\n    static MulM33XY(A, x, y, out) { return b2MulM33XY(A, x, y, out); }\r\n}\r\nb2Mat33.IDENTITY = new b2Mat33();\r\nfunction b2MulM33V3(A, v, out) {\r\n    const v_x = v.x, v_y = v.y, v_z = v.z;\r\n    out.x = A.ex.x * v_x + A.ey.x * v_y + A.ez.x * v_z;\r\n    out.y = A.ex.y * v_x + A.ey.y * v_y + A.ez.y * v_z;\r\n    out.z = A.ex.z * v_x + A.ey.z * v_y + A.ez.z * v_z;\r\n    return out;\r\n}\r\nfunction b2MulM33XYZ(A, x, y, z, out) {\r\n    out.x = A.ex.x * x + A.ey.x * y + A.ez.x * z;\r\n    out.y = A.ex.y * x + A.ey.y * y + A.ez.y * z;\r\n    out.z = A.ex.z * x + A.ey.z * y + A.ez.z * z;\r\n    return out;\r\n}\r\nfunction b2MulM33V2(A, v, out) {\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = A.ex.x * v_x + A.ey.x * v_y;\r\n    out.y = A.ex.y * v_x + A.ey.y * v_y;\r\n    return out;\r\n}\r\nfunction b2MulM33XY(A, x, y, out) {\r\n    out.x = A.ex.x * x + A.ey.x * y;\r\n    out.y = A.ex.y * x + A.ey.y * y;\r\n    return out;\r\n}\r\n/// Rotation\r\nexport class b2Rot {\r\n    constructor(angle = 0) {\r\n        this.s = 0;\r\n        this.c = 1;\r\n        if (angle) {\r\n            this.s = Math.sin(angle);\r\n            this.c = Math.cos(angle);\r\n        }\r\n    }\r\n    Clone() {\r\n        return new b2Rot().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.s = other.s;\r\n        this.c = other.c;\r\n        return this;\r\n    }\r\n    SetAngle(angle) {\r\n        this.s = Math.sin(angle);\r\n        this.c = Math.cos(angle);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.s = 0;\r\n        this.c = 1;\r\n        return this;\r\n    }\r\n    GetAngle() {\r\n        return Math.atan2(this.s, this.c);\r\n    }\r\n    GetXAxis(out) {\r\n        out.x = this.c;\r\n        out.y = this.s;\r\n        return out;\r\n    }\r\n    GetYAxis(out) {\r\n        out.x = -this.s;\r\n        out.y = this.c;\r\n        return out;\r\n    }\r\n    static MulRR(q, r, out) { return b2MulRR(q, r, out); }\r\n    static MulTRR(q, r, out) { return b2MulTRR(q, r, out); }\r\n    static MulRV(q, v, out) { return b2MulRV(q, v, out); }\r\n    static MulTRV(q, v, out) { return b2MulTRV(q, v, out); }\r\n}\r\nb2Rot.IDENTITY = new b2Rot();\r\nfunction b2MulRR(q, r, out) {\r\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\r\n    // [qs  qc]   [rs  rc]   [qs*rc+qc*rs -qs*rs+qc*rc]\r\n    // s = qs * rc + qc * rs\r\n    // c = qc * rc - qs * rs\r\n    const q_c = q.c, q_s = q.s;\r\n    const r_c = r.c, r_s = r.s;\r\n    out.s = q_s * r_c + q_c * r_s;\r\n    out.c = q_c * r_c - q_s * r_s;\r\n    return out;\r\n}\r\nfunction b2MulTRR(q, r, out) {\r\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\r\n    // [-qs qc]   [rs  rc]   [-qs*rc+qc*rs qs*rs+qc*rc]\r\n    // s = qc * rs - qs * rc\r\n    // c = qc * rc + qs * rs\r\n    const q_c = q.c, q_s = q.s;\r\n    const r_c = r.c, r_s = r.s;\r\n    out.s = q_c * r_s - q_s * r_c;\r\n    out.c = q_c * r_c + q_s * r_s;\r\n    return out;\r\n}\r\nfunction b2MulRV(q, v, out) {\r\n    const q_c = q.c, q_s = q.s;\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = q_c * v_x - q_s * v_y;\r\n    out.y = q_s * v_x + q_c * v_y;\r\n    return out;\r\n}\r\nfunction b2MulTRV(q, v, out) {\r\n    const q_c = q.c, q_s = q.s;\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = q_c * v_x + q_s * v_y;\r\n    out.y = -q_s * v_x + q_c * v_y;\r\n    return out;\r\n}\r\n/// A transform contains translation and rotation. It is used to represent\r\n/// the position and orientation of rigid frames.\r\nexport class b2Transform {\r\n    constructor() {\r\n        this.p = new b2Vec2();\r\n        this.q = new b2Rot();\r\n    }\r\n    Clone() {\r\n        return new b2Transform().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.p.Copy(other.p);\r\n        this.q.Copy(other.q);\r\n        return this;\r\n    }\r\n    SetIdentity() {\r\n        this.p.SetZero();\r\n        this.q.SetIdentity();\r\n        return this;\r\n    }\r\n    SetPositionRotation(position, q) {\r\n        this.p.Copy(position);\r\n        this.q.Copy(q);\r\n        return this;\r\n    }\r\n    SetPositionAngle(pos, a) {\r\n        this.p.Copy(pos);\r\n        this.q.SetAngle(a);\r\n        return this;\r\n    }\r\n    SetPosition(position) {\r\n        this.p.Copy(position);\r\n        return this;\r\n    }\r\n    SetPositionXY(x, y) {\r\n        this.p.Set(x, y);\r\n        return this;\r\n    }\r\n    SetRotation(rotation) {\r\n        this.q.Copy(rotation);\r\n        return this;\r\n    }\r\n    SetRotationAngle(radians) {\r\n        this.q.SetAngle(radians);\r\n        return this;\r\n    }\r\n    GetPosition() {\r\n        return this.p;\r\n    }\r\n    GetRotation() {\r\n        return this.q;\r\n    }\r\n    GetRotationAngle() {\r\n        return this.q.GetAngle();\r\n    }\r\n    GetAngle() {\r\n        return this.q.GetAngle();\r\n    }\r\n    static MulXV(T, v, out) { return b2MulXV(T, v, out); }\r\n    static MulTXV(T, v, out) { return b2MulTXV(T, v, out); }\r\n    static MulXX(A, B, out) { return b2MulXX(A, B, out); }\r\n    static MulTXX(A, B, out) { return b2MulTXX(A, B, out); }\r\n}\r\nb2Transform.IDENTITY = new b2Transform();\r\nfunction b2MulXV(T, v, out) {\r\n    //  float32 x = (T.q.c * v.x - T.q.s * v.y) + T.p.x;\r\n    //  float32 y = (T.q.s * v.x + T.q.c * v.y) + T.p.y;\r\n    //\r\n    //  return b2Vec2(x, y);\r\n    const T_q_c = T.q.c, T_q_s = T.q.s;\r\n    const v_x = v.x, v_y = v.y;\r\n    out.x = (T_q_c * v_x - T_q_s * v_y) + T.p.x;\r\n    out.y = (T_q_s * v_x + T_q_c * v_y) + T.p.y;\r\n    return out;\r\n}\r\nfunction b2MulTXV(T, v, out) {\r\n    //  float32 px = v.x - T.p.x;\r\n    //  float32 py = v.y - T.p.y;\r\n    //  float32 x = (T.q.c * px + T.q.s * py);\r\n    //  float32 y = (-T.q.s * px + T.q.c * py);\r\n    //\r\n    //  return b2Vec2(x, y);\r\n    const T_q_c = T.q.c, T_q_s = T.q.s;\r\n    const p_x = v.x - T.p.x;\r\n    const p_y = v.y - T.p.y;\r\n    out.x = (T_q_c * p_x + T_q_s * p_y);\r\n    out.y = (-T_q_s * p_x + T_q_c * p_y);\r\n    return out;\r\n}\r\nfunction b2MulXX(A, B, out) {\r\n    b2MulRR(A.q, B.q, out.q);\r\n    b2AddVV(b2MulRV(A.q, B.p, out.p), A.p, out.p);\r\n    return out;\r\n}\r\nfunction b2MulTXX(A, B, out) {\r\n    b2MulTRR(A.q, B.q, out.q);\r\n    b2MulTRV(A.q, b2SubVV(B.p, A.p, out.p), out.p);\r\n    return out;\r\n}\r\n/// This describes the motion of a body/shape for TOI computation.\r\n/// Shapes are defined with respect to the body origin, which may\r\n/// no coincide with the center of mass. However, to support dynamics\r\n/// we must interpolate the center of mass position.\r\nexport class b2Sweep {\r\n    constructor() {\r\n        this.localCenter = new b2Vec2();\r\n        this.c0 = new b2Vec2();\r\n        this.c = new b2Vec2();\r\n        this.a0 = 0;\r\n        this.a = 0;\r\n        this.alpha0 = 0;\r\n    }\r\n    Clone() {\r\n        return new b2Sweep().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.localCenter.Copy(other.localCenter);\r\n        this.c0.Copy(other.c0);\r\n        this.c.Copy(other.c);\r\n        this.a0 = other.a0;\r\n        this.a = other.a;\r\n        this.alpha0 = other.alpha0;\r\n        return this;\r\n    }\r\n    GetTransform(xf, beta) {\r\n        const one_minus_beta = (1 - beta);\r\n        xf.p.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n        xf.p.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n        const angle = one_minus_beta * this.a0 + beta * this.a;\r\n        xf.q.SetAngle(angle);\r\n        xf.p.SelfSub(b2MulRV(xf.q, this.localCenter, b2Vec2.s_t0));\r\n        return xf;\r\n    }\r\n    Advance(alpha) {\r\n        ///b2Assert(this.alpha0 < 1);\r\n        const beta = (alpha - this.alpha0) / (1 - this.alpha0);\r\n        const one_minus_beta = (1 - beta);\r\n        this.c0.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n        this.c0.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n        this.a0 = one_minus_beta * this.a0 + beta * this.a;\r\n        this.alpha0 = alpha;\r\n    }\r\n    Normalize() {\r\n        const d = b2_two_pi * Math.floor(this.a0 / b2_two_pi);\r\n        this.a0 -= d;\r\n        this.a -= d;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_maxFloat, b2_epsilon, b2_epsilon_sq, b2_maxManifoldPoints, b2MakeArray, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Distance, b2DistanceInput, b2DistanceOutput, b2SimplexCache } from \"./b2Distance\";\r\n/// @file\r\n/// Structures and functions used for computing contact points, distance\r\n/// queries, and TOI queries.\r\nexport var b2ContactFeatureType;\r\n(function (b2ContactFeatureType) {\r\n    b2ContactFeatureType[b2ContactFeatureType[\"e_vertex\"] = 0] = \"e_vertex\";\r\n    b2ContactFeatureType[b2ContactFeatureType[\"e_face\"] = 1] = \"e_face\";\r\n})(b2ContactFeatureType || (b2ContactFeatureType = {}));\r\n/// The features that intersect to form the contact point\r\n/// This must be 4 bytes or less.\r\nexport class b2ContactFeature {\r\n    constructor() {\r\n        this._key = 0;\r\n        this._key_invalid = false;\r\n        this._indexA = 0;\r\n        this._indexB = 0;\r\n        this._typeA = 0;\r\n        this._typeB = 0;\r\n    }\r\n    get key() {\r\n        if (this._key_invalid) {\r\n            this._key_invalid = false;\r\n            this._key = this._indexA | (this._indexB << 8) | (this._typeA << 16) | (this._typeB << 24);\r\n        }\r\n        return this._key;\r\n    }\r\n    set key(value) {\r\n        this._key = value;\r\n        this._key_invalid = false;\r\n        this._indexA = this._key & 0xff;\r\n        this._indexB = (this._key >> 8) & 0xff;\r\n        this._typeA = (this._key >> 16) & 0xff;\r\n        this._typeB = (this._key >> 24) & 0xff;\r\n    }\r\n    get indexA() {\r\n        return this._indexA;\r\n    }\r\n    set indexA(value) {\r\n        this._indexA = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get indexB() {\r\n        return this._indexB;\r\n    }\r\n    set indexB(value) {\r\n        this._indexB = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get typeA() {\r\n        return this._typeA;\r\n    }\r\n    set typeA(value) {\r\n        this._typeA = value;\r\n        this._key_invalid = true;\r\n    }\r\n    get typeB() {\r\n        return this._typeB;\r\n    }\r\n    set typeB(value) {\r\n        this._typeB = value;\r\n        this._key_invalid = true;\r\n    }\r\n}\r\n/// Contact ids to facilitate warm starting.\r\nexport class b2ContactID {\r\n    constructor() {\r\n        this.cf = new b2ContactFeature();\r\n    }\r\n    Copy(o) {\r\n        this.key = o.key;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2ContactID().Copy(this);\r\n    }\r\n    get key() {\r\n        return this.cf.key;\r\n    }\r\n    set key(value) {\r\n        this.cf.key = value;\r\n    }\r\n}\r\n/// A manifold point is a contact point belonging to a contact\r\n/// manifold. It holds details related to the geometry and dynamics\r\n/// of the contact points.\r\n/// The local point usage depends on the manifold type:\r\n/// -e_circles: the local center of circleB\r\n/// -e_faceA: the local center of cirlceB or the clip point of polygonB\r\n/// -e_faceB: the clip point of polygonA\r\n/// This structure is stored across time steps, so we keep it small.\r\n/// Note: the impulses are used for internal caching and may not\r\n/// provide reliable contact forces, especially for high speed collisions.\r\nexport class b2ManifoldPoint {\r\n    constructor() {\r\n        this.localPoint = new b2Vec2(); ///< usage depends on manifold type\r\n        this.normalImpulse = 0; ///< the non-penetration impulse\r\n        this.tangentImpulse = 0; ///< the friction impulse\r\n        this.id = new b2ContactID(); ///< uniquely identifies a contact point between two shapes\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ManifoldPoint());\r\n    }\r\n    Reset() {\r\n        this.localPoint.SetZero();\r\n        this.normalImpulse = 0;\r\n        this.tangentImpulse = 0;\r\n        this.id.key = 0;\r\n    }\r\n    Copy(o) {\r\n        this.localPoint.Copy(o.localPoint);\r\n        this.normalImpulse = o.normalImpulse;\r\n        this.tangentImpulse = o.tangentImpulse;\r\n        this.id.Copy(o.id);\r\n        return this;\r\n    }\r\n}\r\nexport var b2ManifoldType;\r\n(function (b2ManifoldType) {\r\n    b2ManifoldType[b2ManifoldType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2ManifoldType[b2ManifoldType[\"e_circles\"] = 0] = \"e_circles\";\r\n    b2ManifoldType[b2ManifoldType[\"e_faceA\"] = 1] = \"e_faceA\";\r\n    b2ManifoldType[b2ManifoldType[\"e_faceB\"] = 2] = \"e_faceB\";\r\n})(b2ManifoldType || (b2ManifoldType = {}));\r\n/// A manifold for two touching convex shapes.\r\n/// Box2D supports multiple types of contact:\r\n/// - clip point versus plane with radius\r\n/// - point versus point with radius (circles)\r\n/// The local point usage depends on the manifold type:\r\n/// -e_circles: the local center of circleA\r\n/// -e_faceA: the center of faceA\r\n/// -e_faceB: the center of faceB\r\n/// Similarly the local normal usage:\r\n/// -e_circles: not used\r\n/// -e_faceA: the normal on polygonA\r\n/// -e_faceB: the normal on polygonB\r\n/// We store contacts in this way so that position correction can\r\n/// account for movement, which is critical for continuous physics.\r\n/// All contact scenarios must be expressed in one of these types.\r\n/// This structure is stored across time steps, so we keep it small.\r\nexport class b2Manifold {\r\n    constructor() {\r\n        this.points = b2ManifoldPoint.MakeArray(b2_maxManifoldPoints);\r\n        this.localNormal = new b2Vec2();\r\n        this.localPoint = new b2Vec2();\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.pointCount = 0;\r\n    }\r\n    Reset() {\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            ///b2Assert(this.points[i] instanceof b2ManifoldPoint);\r\n            this.points[i].Reset();\r\n        }\r\n        this.localNormal.SetZero();\r\n        this.localPoint.SetZero();\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.pointCount = 0;\r\n    }\r\n    Copy(o) {\r\n        this.pointCount = o.pointCount;\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            ///b2Assert(this.points[i] instanceof b2ManifoldPoint);\r\n            this.points[i].Copy(o.points[i]);\r\n        }\r\n        this.localNormal.Copy(o.localNormal);\r\n        this.localPoint.Copy(o.localPoint);\r\n        this.type = o.type;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2Manifold().Copy(this);\r\n    }\r\n}\r\nexport class b2WorldManifold {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.points = b2Vec2.MakeArray(b2_maxManifoldPoints);\r\n        this.separations = b2MakeNumberArray(b2_maxManifoldPoints);\r\n    }\r\n    Initialize(manifold, xfA, radiusA, xfB, radiusB) {\r\n        if (manifold.pointCount === 0) {\r\n            return;\r\n        }\r\n        switch (manifold.type) {\r\n            case b2ManifoldType.e_circles:\r\n                {\r\n                    this.normal.Set(1, 0);\r\n                    const pointA = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_pointA);\r\n                    const pointB = b2Transform.MulXV(xfB, manifold.points[0].localPoint, b2WorldManifold.Initialize_s_pointB);\r\n                    if (b2Vec2.DistanceSquaredVV(pointA, pointB) > b2_epsilon_sq) {\r\n                        b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\r\n                    }\r\n                    const cA = b2Vec2.AddVMulSV(pointA, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                    const cB = b2Vec2.SubVMulSV(pointB, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                    b2Vec2.MidVV(cA, cB, this.points[0]);\r\n                    this.separations[0] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\r\n                }\r\n                break;\r\n            case b2ManifoldType.e_faceA:\r\n                {\r\n                    b2Rot.MulRV(xfA.q, manifold.localNormal, this.normal);\r\n                    const planePoint = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\r\n                    for (let i = 0; i < manifold.pointCount; ++i) {\r\n                        const clipPoint = b2Transform.MulXV(xfB, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\r\n                        const s = radiusA - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\r\n                        const cA = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                        const cB = b2Vec2.SubVMulSV(clipPoint, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                        b2Vec2.MidVV(cA, cB, this.points[i]);\r\n                        this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\r\n                    }\r\n                }\r\n                break;\r\n            case b2ManifoldType.e_faceB:\r\n                {\r\n                    b2Rot.MulRV(xfB.q, manifold.localNormal, this.normal);\r\n                    const planePoint = b2Transform.MulXV(xfB, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\r\n                    for (let i = 0; i < manifold.pointCount; ++i) {\r\n                        const clipPoint = b2Transform.MulXV(xfA, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\r\n                        const s = radiusB - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\r\n                        const cB = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                        const cA = b2Vec2.SubVMulSV(clipPoint, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                        b2Vec2.MidVV(cA, cB, this.points[i]);\r\n                        this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cA, cB, b2Vec2.s_t0), this.normal); // b2Dot(cA - cB, normal);\r\n                    }\r\n                    // Ensure normal points from A to B.\r\n                    this.normal.SelfNeg();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\nb2WorldManifold.Initialize_s_pointA = new b2Vec2();\r\nb2WorldManifold.Initialize_s_pointB = new b2Vec2();\r\nb2WorldManifold.Initialize_s_cA = new b2Vec2();\r\nb2WorldManifold.Initialize_s_cB = new b2Vec2();\r\nb2WorldManifold.Initialize_s_planePoint = new b2Vec2();\r\nb2WorldManifold.Initialize_s_clipPoint = new b2Vec2();\r\n/// This is used for determining the state of contact points.\r\nexport var b2PointState;\r\n(function (b2PointState) {\r\n    b2PointState[b2PointState[\"b2_nullState\"] = 0] = \"b2_nullState\";\r\n    b2PointState[b2PointState[\"b2_addState\"] = 1] = \"b2_addState\";\r\n    b2PointState[b2PointState[\"b2_persistState\"] = 2] = \"b2_persistState\";\r\n    b2PointState[b2PointState[\"b2_removeState\"] = 3] = \"b2_removeState\"; ///< point was removed in the update\r\n})(b2PointState || (b2PointState = {}));\r\n/// Compute the point states given two manifolds. The states pertain to the transition from manifold1\r\n/// to manifold2. So state1 is either persist or remove while state2 is either add or persist.\r\nexport function b2GetPointStates(state1, state2, manifold1, manifold2) {\r\n    // Detect persists and removes.\r\n    let i;\r\n    for (i = 0; i < manifold1.pointCount; ++i) {\r\n        const id = manifold1.points[i].id;\r\n        const key = id.key;\r\n        state1[i] = b2PointState.b2_removeState;\r\n        for (let j = 0, jct = manifold2.pointCount; j < jct; ++j) {\r\n            if (manifold2.points[j].id.key === key) {\r\n                state1[i] = b2PointState.b2_persistState;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for (; i < b2_maxManifoldPoints; ++i) {\r\n        state1[i] = b2PointState.b2_nullState;\r\n    }\r\n    // Detect persists and adds.\r\n    for (i = 0; i < manifold2.pointCount; ++i) {\r\n        const id = manifold2.points[i].id;\r\n        const key = id.key;\r\n        state2[i] = b2PointState.b2_addState;\r\n        for (let j = 0, jct = manifold1.pointCount; j < jct; ++j) {\r\n            if (manifold1.points[j].id.key === key) {\r\n                state2[i] = b2PointState.b2_persistState;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for (; i < b2_maxManifoldPoints; ++i) {\r\n        state2[i] = b2PointState.b2_nullState;\r\n    }\r\n}\r\n/// Used for computing contact manifolds.\r\nexport class b2ClipVertex {\r\n    constructor() {\r\n        this.v = new b2Vec2();\r\n        this.id = new b2ContactID();\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ClipVertex());\r\n    }\r\n    Copy(other) {\r\n        this.v.Copy(other.v);\r\n        this.id.Copy(other.id);\r\n        return this;\r\n    }\r\n}\r\n/// Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\r\nexport class b2RayCastInput {\r\n    constructor() {\r\n        this.p1 = new b2Vec2();\r\n        this.p2 = new b2Vec2();\r\n        this.maxFraction = 1;\r\n    }\r\n    Copy(o) {\r\n        this.p1.Copy(o.p1);\r\n        this.p2.Copy(o.p2);\r\n        this.maxFraction = o.maxFraction;\r\n        return this;\r\n    }\r\n}\r\n/// Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and p2\r\n/// come from b2RayCastInput.\r\nexport class b2RayCastOutput {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.fraction = 0;\r\n    }\r\n    Copy(o) {\r\n        this.normal.Copy(o.normal);\r\n        this.fraction = o.fraction;\r\n        return this;\r\n    }\r\n}\r\n/// An axis aligned bounding box.\r\nexport class b2AABB {\r\n    constructor() {\r\n        this.lowerBound = new b2Vec2(); ///< the lower vertex\r\n        this.upperBound = new b2Vec2(); ///< the upper vertex\r\n        this.m_cache_center = new b2Vec2(); // access using GetCenter()\r\n        this.m_cache_extent = new b2Vec2(); // access using GetExtents()\r\n    }\r\n    Copy(o) {\r\n        this.lowerBound.Copy(o.lowerBound);\r\n        this.upperBound.Copy(o.upperBound);\r\n        return this;\r\n    }\r\n    /// Verify that the bounds are sorted.\r\n    IsValid() {\r\n        const d_x = this.upperBound.x - this.lowerBound.x;\r\n        const d_y = this.upperBound.y - this.lowerBound.y;\r\n        let valid = d_x >= 0 && d_y >= 0;\r\n        valid = valid && this.lowerBound.IsValid() && this.upperBound.IsValid();\r\n        return valid;\r\n    }\r\n    /// Get the center of the AABB.\r\n    GetCenter() {\r\n        return b2Vec2.MidVV(this.lowerBound, this.upperBound, this.m_cache_center);\r\n    }\r\n    /// Get the extents of the AABB (half-widths).\r\n    GetExtents() {\r\n        return b2Vec2.ExtVV(this.lowerBound, this.upperBound, this.m_cache_extent);\r\n    }\r\n    /// Get the perimeter length\r\n    GetPerimeter() {\r\n        const wx = this.upperBound.x - this.lowerBound.x;\r\n        const wy = this.upperBound.y - this.lowerBound.y;\r\n        return 2 * (wx + wy);\r\n    }\r\n    /// Combine an AABB into this one.\r\n    Combine1(aabb) {\r\n        this.lowerBound.x = b2Min(this.lowerBound.x, aabb.lowerBound.x);\r\n        this.lowerBound.y = b2Min(this.lowerBound.y, aabb.lowerBound.y);\r\n        this.upperBound.x = b2Max(this.upperBound.x, aabb.upperBound.x);\r\n        this.upperBound.y = b2Max(this.upperBound.y, aabb.upperBound.y);\r\n        return this;\r\n    }\r\n    /// Combine two AABBs into this one.\r\n    Combine2(aabb1, aabb2) {\r\n        this.lowerBound.x = b2Min(aabb1.lowerBound.x, aabb2.lowerBound.x);\r\n        this.lowerBound.y = b2Min(aabb1.lowerBound.y, aabb2.lowerBound.y);\r\n        this.upperBound.x = b2Max(aabb1.upperBound.x, aabb2.upperBound.x);\r\n        this.upperBound.y = b2Max(aabb1.upperBound.y, aabb2.upperBound.y);\r\n        return this;\r\n    }\r\n    static Combine(aabb1, aabb2, out) {\r\n        out.Combine2(aabb1, aabb2);\r\n        return out;\r\n    }\r\n    /// Does this aabb contain the provided AABB.\r\n    Contains(aabb) {\r\n        let result = true;\r\n        result = result && this.lowerBound.x <= aabb.lowerBound.x;\r\n        result = result && this.lowerBound.y <= aabb.lowerBound.y;\r\n        result = result && aabb.upperBound.x <= this.upperBound.x;\r\n        result = result && aabb.upperBound.y <= this.upperBound.y;\r\n        return result;\r\n    }\r\n    // From Real-time Collision Detection, p179.\r\n    RayCast(output, input) {\r\n        let tmin = (-b2_maxFloat);\r\n        let tmax = b2_maxFloat;\r\n        const p_x = input.p1.x;\r\n        const p_y = input.p1.y;\r\n        const d_x = input.p2.x - input.p1.x;\r\n        const d_y = input.p2.y - input.p1.y;\r\n        const absD_x = b2Abs(d_x);\r\n        const absD_y = b2Abs(d_y);\r\n        const normal = output.normal;\r\n        if (absD_x < b2_epsilon) {\r\n            // Parallel.\r\n            if (p_x < this.lowerBound.x || this.upperBound.x < p_x) {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            const inv_d = 1 / d_x;\r\n            let t1 = (this.lowerBound.x - p_x) * inv_d;\r\n            let t2 = (this.upperBound.x - p_x) * inv_d;\r\n            // Sign of the normal vector.\r\n            let s = (-1);\r\n            if (t1 > t2) {\r\n                const t3 = t1;\r\n                t1 = t2;\r\n                t2 = t3;\r\n                s = 1;\r\n            }\r\n            // Push the min up\r\n            if (t1 > tmin) {\r\n                normal.x = s;\r\n                normal.y = 0;\r\n                tmin = t1;\r\n            }\r\n            // Pull the max down\r\n            tmax = b2Min(tmax, t2);\r\n            if (tmin > tmax) {\r\n                return false;\r\n            }\r\n        }\r\n        if (absD_y < b2_epsilon) {\r\n            // Parallel.\r\n            if (p_y < this.lowerBound.y || this.upperBound.y < p_y) {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            const inv_d = 1 / d_y;\r\n            let t1 = (this.lowerBound.y - p_y) * inv_d;\r\n            let t2 = (this.upperBound.y - p_y) * inv_d;\r\n            // Sign of the normal vector.\r\n            let s = (-1);\r\n            if (t1 > t2) {\r\n                const t3 = t1;\r\n                t1 = t2;\r\n                t2 = t3;\r\n                s = 1;\r\n            }\r\n            // Push the min up\r\n            if (t1 > tmin) {\r\n                normal.x = 0;\r\n                normal.y = s;\r\n                tmin = t1;\r\n            }\r\n            // Pull the max down\r\n            tmax = b2Min(tmax, t2);\r\n            if (tmin > tmax) {\r\n                return false;\r\n            }\r\n        }\r\n        // Does the ray start inside the box?\r\n        // Does the ray intersect beyond the max fraction?\r\n        if (tmin < 0 || input.maxFraction < tmin) {\r\n            return false;\r\n        }\r\n        // Intersection.\r\n        output.fraction = tmin;\r\n        return true;\r\n    }\r\n    TestOverlap(other) {\r\n        const d1_x = other.lowerBound.x - this.upperBound.x;\r\n        const d1_y = other.lowerBound.y - this.upperBound.y;\r\n        const d2_x = this.lowerBound.x - other.upperBound.x;\r\n        const d2_y = this.lowerBound.y - other.upperBound.y;\r\n        if (d1_x > 0 || d1_y > 0)\r\n            return false;\r\n        if (d2_x > 0 || d2_y > 0)\r\n            return false;\r\n        return true;\r\n    }\r\n}\r\nexport function b2TestOverlapAABB(a, b) {\r\n    const d1_x = b.lowerBound.x - a.upperBound.x;\r\n    const d1_y = b.lowerBound.y - a.upperBound.y;\r\n    const d2_x = a.lowerBound.x - b.upperBound.x;\r\n    const d2_y = a.lowerBound.y - b.upperBound.y;\r\n    if (d1_x > 0 || d1_y > 0)\r\n        return false;\r\n    if (d2_x > 0 || d2_y > 0)\r\n        return false;\r\n    return true;\r\n}\r\n/// Clipping for contact manifolds.\r\nexport function b2ClipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\r\n    // Start with no output points\r\n    let numOut = 0;\r\n    const vIn0 = vIn[0];\r\n    const vIn1 = vIn[1];\r\n    // Calculate the distance of end points to the line\r\n    const distance0 = b2Vec2.DotVV(normal, vIn0.v) - offset;\r\n    const distance1 = b2Vec2.DotVV(normal, vIn1.v) - offset;\r\n    // If the points are behind the plane\r\n    if (distance0 <= 0)\r\n        vOut[numOut++].Copy(vIn0);\r\n    if (distance1 <= 0)\r\n        vOut[numOut++].Copy(vIn1);\r\n    // If the points are on different sides of the plane\r\n    if (distance0 * distance1 < 0) {\r\n        // Find intersection point of edge and plane\r\n        const interp = distance0 / (distance0 - distance1);\r\n        const v = vOut[numOut].v;\r\n        v.x = vIn0.v.x + interp * (vIn1.v.x - vIn0.v.x);\r\n        v.y = vIn0.v.y + interp * (vIn1.v.y - vIn0.v.y);\r\n        // VertexA is hitting edgeB.\r\n        const id = vOut[numOut].id;\r\n        id.cf.indexA = vertexIndexA;\r\n        id.cf.indexB = vIn0.id.cf.indexB;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        id.cf.typeB = b2ContactFeatureType.e_face;\r\n        ++numOut;\r\n    }\r\n    return numOut;\r\n}\r\n/// Determine if two generic shapes overlap.\r\nconst b2TestOverlapShape_s_input = new b2DistanceInput();\r\nconst b2TestOverlapShape_s_simplexCache = new b2SimplexCache();\r\nconst b2TestOverlapShape_s_output = new b2DistanceOutput();\r\nexport function b2TestOverlapShape(shapeA, indexA, shapeB, indexB, xfA, xfB) {\r\n    const input = b2TestOverlapShape_s_input.Reset();\r\n    input.proxyA.SetShape(shapeA, indexA);\r\n    input.proxyB.SetShape(shapeB, indexB);\r\n    input.transformA.Copy(xfA);\r\n    input.transformB.Copy(xfB);\r\n    input.useRadii = true;\r\n    const simplexCache = b2TestOverlapShape_s_simplexCache.Reset();\r\n    simplexCache.count = 0;\r\n    const output = b2TestOverlapShape_s_output.Reset();\r\n    b2Distance(output, simplexCache, input);\r\n    return output.distance < 10 * b2_epsilon;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Vec2 } from \"../../Common/b2Math\";\r\n/// This holds the mass data computed for a shape.\r\nexport class b2MassData {\r\n    constructor() {\r\n        /// The mass of the shape, usually in kilograms.\r\n        this.mass = 0;\r\n        /// The position of the shape's centroid relative to the shape's origin.\r\n        this.center = new b2Vec2(0, 0);\r\n        /// The rotational inertia of the shape about the local origin.\r\n        this.I = 0;\r\n    }\r\n}\r\nexport var b2ShapeType;\r\n(function (b2ShapeType) {\r\n    b2ShapeType[b2ShapeType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2ShapeType[b2ShapeType[\"e_circleShape\"] = 0] = \"e_circleShape\";\r\n    b2ShapeType[b2ShapeType[\"e_edgeShape\"] = 1] = \"e_edgeShape\";\r\n    b2ShapeType[b2ShapeType[\"e_polygonShape\"] = 2] = \"e_polygonShape\";\r\n    b2ShapeType[b2ShapeType[\"e_chainShape\"] = 3] = \"e_chainShape\";\r\n    b2ShapeType[b2ShapeType[\"e_shapeTypeCount\"] = 4] = \"e_shapeTypeCount\";\r\n})(b2ShapeType || (b2ShapeType = {}));\r\n/// A shape is used for collision detection. You can create a shape however you like.\r\n/// Shapes used for simulation in b2World are created automatically when a b2Fixture\r\n/// is created. Shapes may encapsulate a one or more child shapes.\r\nexport class b2Shape {\r\n    constructor(type, radius) {\r\n        this.m_type = b2ShapeType.e_unknown;\r\n        this.m_radius = 0;\r\n        this.m_type = type;\r\n        this.m_radius = radius;\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this.m_type === other.m_type);\r\n        this.m_radius = other.m_radius;\r\n        return this;\r\n    }\r\n    /// Get the type of this shape. You can use this to down cast to the concrete shape.\r\n    /// @return the shape type.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTaGFwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbGxpc2lvbi9TaGFwZXMvYjJTaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLE9BQU8sRUFBRSxNQUFNLEVBQWUsTUFBTSxxQkFBcUIsQ0FBQztBQUkxRCxrREFBa0Q7QUFDbEQsTUFBTSxPQUFPLFVBQVU7SUFBdkI7UUFDRSxnREFBZ0Q7UUFDekMsU0FBSSxHQUFXLENBQUMsQ0FBQztRQUV4Qix3RUFBd0U7UUFDakUsV0FBTSxHQUFXLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUV6QywrREFBK0Q7UUFDeEQsTUFBQyxHQUFXLENBQUMsQ0FBQztJQUN2QixDQUFDO0NBQUE7QUFFRCxNQUFNLENBQU4sSUFBWSxXQU9YO0FBUEQsV0FBWSxXQUFXO0lBQ3JCLHdEQUFjLENBQUE7SUFDZCwrREFBaUIsQ0FBQTtJQUNqQiwyREFBZSxDQUFBO0lBQ2YsaUVBQWtCLENBQUE7SUFDbEIsNkRBQWdCLENBQUE7SUFDaEIscUVBQW9CLENBQUE7QUFDdEIsQ0FBQyxFQVBXLFdBQVcsS0FBWCxXQUFXLFFBT3RCO0FBRUQscUZBQXFGO0FBQ3JGLG9GQUFvRjtBQUNwRixrRUFBa0U7QUFDbEUsTUFBTSxPQUFnQixPQUFPO0lBSTNCLFlBQVksSUFBaUIsRUFBRSxNQUFjO1FBSHRDLFdBQU0sR0FBZ0IsV0FBVyxDQUFDLFNBQVMsQ0FBQztRQUM1QyxhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBRzFCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLENBQUM7SUFLTSxJQUFJLENBQUMsS0FBYztRQUN4QiwwQ0FBMEM7UUFDMUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDO1FBQy9CLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELG9GQUFvRjtJQUNwRiwyQkFBMkI7SUFDcEIsT0FBTztRQUNaLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0NBMkNGIn0=","﻿\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGrpah, IRenderer, IGraph } from \"./IRenderer.js\";\r\n\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\n\r\n/**\r\n * @extends {IGraph}\r\n */\r\nexport class SpriteBase extends Graph {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tif (raw) {\r\n\t\t\tsuper(url, {\r\n\t\t\t\twidth: raw.__w,\r\n\t\t\t\theight: raw.__h,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\t//this.src is broken;\r\n\r\n\t\tif (url) {\r\n\t\t\tdebugger\r\n\t\t\tthis._url = url;\r\n\t\t\t//this._loadTexture(url);//_loadTexture: undefined\r\n\t\t}\r\n\t\telse if (SpriteBase.isTexture(raw) !== false) {\r\n\t\t\tthis._url = raw[\"\"];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isTexture(raw) {\r\n\t\tif (raw) {\r\n\t\t\tif (raw.hasOwnProperty(\"\")) {\r\n\t\t\t\tif (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!raw.__isEmpty) {\r\n\t\t\t\t\tconsole.group(\"no texture\");\r\n\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\tthrow new Error(\"no texture\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic isTextureHasData(raw) {\r\n\t\treturn raw && typeof raw[\"\"] == 'string' && raw[\"\"].startsWith(\"data:image/\");\r\n\t}\r\n\r\n\tset z(value) {\r\n\t\tthis._order = value;\r\n\t}\r\n\tget z() {\r\n\t\treturn this._order;\r\n\t}\r\n\t\r\n\t/**\r\n\t * try construct value from raw data\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (!this._raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\telse if (propertyName in this._raw) {\r\n\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis._engine.drawGraph(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthis._engine.drawGraph2(this, x - this.x, y - this.y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t */\r\n\tdraw2i(x, y) {\r\n\t\tthis._engine.drawGraph2(this, Math.trunc(x - this.x + 0.5), Math.trunc(y - this.y + 0.5));\r\n\t}\r\n}\r\n\r\n\r\nexport class Sprite extends SpriteBase {\r\n\t/**\r\n\t * sprite = new Sprite(rawData);//不會載入image\r\n\t * sprite._url = img_url;//不會載入image\r\n\t *\r\n\t * 會觸發載入image的method\r\n\t * draw(), isLoaded(), get width(), get height()\r\n\t * \r\n\t * 手動載入image: __loadTexture()\r\n\t * \r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tvar origin = this._get(new Vec2(0, 0), \"origin\", Vec2.get);\r\n\t\tthis.x = origin.x;\r\n\t\tthis.y = origin.y;\r\n\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\tthis.delay = this._get(100, \"delay\", Number);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tctx.rect(x, y, w, h);\r\n\t\t\tctx.clip();\r\n\r\n\t\t\tlet left = x;\r\n\t\t\tlet top = y;\r\n\t\t\tlet right = x + w;\r\n\t\t\tlet bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\tdrawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst left = x;\r\n\t\t\tconst right = x + w;\r\n\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\tdrawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst top = y;\r\n\t\t\tconst bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tthis.draw2(x, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\t_drawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t\r\n\t\tconst sw = Math.trunc(w / this.width) * this.width;\r\n\t\tconst sh = Math.trunc(h / this.height) * this.height;\r\n\t\t\r\n\t\tconst left = x;\r\n\t\tconst top = y;\r\n\t\tconst right = x + sw;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tlet i, j;\r\n\r\n\t\tif (h >= this.height) {\r\n\t\t\tfor (i = top; i < bottom; i += this.height) {\r\n\t\t\t\tif (w >= this.width) {\r\n\t\t\t\t\tfor (j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet sx = w - sw;\r\n\t\t\t\t\tif (sx > 0) {\r\n\t\t\t\t\t\tthis._engine._drawImage(this, 0, 0, sx, this.height, j - this.x, i - this.y, sx, this.height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._engine._drawImage(this, 0, 0, w, this.height, left - this.x, i - this.y, w, this.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet sy = h - sh;\r\n\t\t\tif (sy > 0) {\r\n\t\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\t\tthis._engine._drawImage(this, 0, 0, this.width, sy, left - this.x, i - this.y, this.width, sy);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\tthis._engine._drawImage(this, 0, 0, this.width, h, left - this.x, top - this.y, this.width, h);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\t_drawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst right = x + w;\r\n\r\n\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\tthis.draw2(j, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\t_drawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst top = y;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tthis.draw2(x, i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawPattern4i(x, y, w, h) {\r\n\t\tthis.drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\tdrawHorizontalPattern3i(x, y, w) {\r\n\t\tthis.drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawVerticalPattern3i(x, y, h) {\r\n\t\tthis.drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawPattern4i(x, y, w, h) {\r\n\t\tthis._drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\t_drawHorizontalPattern3i(x, y, w) {\r\n\t\tthis._drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawVerticalPattern3i(x, y, h) {\r\n\t\tthis._drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n}\r\n\r\nexport class _$PatternSprite_Loaded extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._direction = null;\r\n\r\n\t\t/** @type {CanvasPattern} */\r\n\t\tthis._pattern = null;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget direction() {\r\n\t\treturn this._direction;\r\n\t}\r\n\tset direction(value) {\r\n\t\tif (value && this._direction != value) {\r\n\t\t\tthis._direction = value;\r\n\t\r\n\t\t\t//reload;\r\n\t\t\tthis._pattern = null;\r\n\t\t\tthis.__proto__ = $PatternSprite.prototype;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(-this.x, -this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(x - this.x, y - this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"repeat\"} */\r\n\tget e_repeat() {\r\n\t\treturn \"repeat\";\r\n\t}\r\n\t/** @returns {\"repeat-x\"} */\r\n\tget e_repeat_x() {\r\n\t\treturn \"repeat-x\";\r\n\t}\r\n\t/** @returns {\"repeat-y\"} */\r\n\tget e_repeat_y() {\r\n\t\treturn \"repeat-y\";\r\n\t}\r\n\t/** @returns {\"no-repeat\"} */\r\n\tget e_noRepeat() {\r\n\t\treturn \"no-repeat\";\r\n\t}\r\n}\r\n\r\nexport class $PatternSprite extends _$PatternSprite_Loaded {\r\n\tdrawPattern(w, h) {\r\n\t\tthis.drawPattern2(0, 0, w, h);\r\n\t}\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.isLoaded()) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t{\r\n\t\t\t\tctx.rect(x, y, w, h);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tlet left = x;\r\n\t\t\t\tlet top = y;\r\n\t\t\t\tlet right = x + w;\r\n\t\t\t\tlet bottom = y + h;\r\n\r\n\t\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern(w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern2(x, y, w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","﻿\r\nconst $failed_urls = [];\r\n\r\nconst $archive = {};\r\n\r\n\r\nwindow.character_emotion_list = [\"blink\", \"hit\", \"smile\", \"troubled\", \"cry\", \"angry\", \"bewildered\", \"stunned\",\r\n\t\"vomit\", \"oops\", \"cheers\", \"chu\", \"wink\", \"pain\", \"glitter\", \"despair\", \"love\", \"shine\", \"blaze\", \"hum\",\r\n\t\"bowing\", \"hot\", \"dam\", \"qBlue\"];\r\n\r\nwindow.character_action_list = [\"walk1\", \"walk2\", \"stand1\", \"stand2\", \"alert\", \"swingO1\", \"swingO2\", \"swingO3\", \"swingOF\", \"swingT1\",\r\n\t\"swingT2\", \"swingT3\", \"swingTF\", \"swingP1\", \"swingP2\", \"swingPF\", \"stabO1\", \"stabO2\", \"stabOF\", \"stabT1\",\r\n\t\"stabT2\", \"stabTF\", \"shoot1\", \"shoot2\", \"shootF\", \"proneStab\", \"prone\", \"heal\", \"fly\", \"jump\", \"sit\", \"ladder\",\r\n\t\"rope\"/*, \"dead\", \"ghostwalk\", \"ghoststand\", \"ghostjump\", \"ghostproneStab\", \"ghostladder\", \"ghostrope\", \"ghostfly\",\r\n\t\t\"ghostsit\"*/];\r\n\r\nexport class ItemCategoryInfo {\r\n\t/**\r\n\t * @param {string} id_prefix\r\n\t * @param {string} path\r\n\t * @param {boolean} isOnFace\r\n\t * @param {string} slot - property name\r\n\t * @param {string} categoryName\r\n\t * @param {string} type\r\n\t * @param {string} [stringPath]\r\n\t */\r\n\tconstructor(id_prefix, imgDir, listPath, slot, categoryName, type, stringPath) {\r\n\t\tthis.id_prefix = id_prefix;\r\n\r\n\t\t/** data path */\r\n\t\tthis.path = imgDir;\r\n\r\n\t\t/** equip window */\r\n\t\tthis.slot = slot;\r\n\r\n\t\t/** item list file name */\r\n\t\tthis.listPath = listPath;\r\n\r\n\t\t/** display category name */\r\n\t\tthis.categoryName = categoryName;\r\n\r\n\t\t/** renderer */\r\n\t\tthis.FragmentType = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.dataDir = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.stringDir = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconPath = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconRawPath = null;\r\n\t\t{\r\n\t\t\tlet dataDir, stringDir, iconPath, iconRawPath;\r\n\r\n\t\t\tswitch (slot) {\r\n\t\t\t\tcase \"head\":\r\n\t\t\t\t\ticonPath = \"stand1/0/head\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/head\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"body\":\r\n\t\t\t\t\ticonPath = \"stand1/0/body\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/body\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"hair\":\r\n\t\t\t\t\ticonPath = \"stand1/0/hair\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/hair\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"face\":\r\n\t\t\t\t\ticonPath = \"blink/0/face\";\r\n\t\t\t\t\ticonRawPath = \"blink/0/face\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: // typeId: 0|1|2|3|4\r\n\t\t\t\t\ticonPath = \"info/icon\";\r\n\t\t\t\t\ticonRawPath = \"info/iconRaw\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (id_prefix == \"5\") {\r\n\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\tstringDir = \"/String/Pet/\";\r\n\t\t\t\talert(\"Pet\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch (id_prefix[1]) {\r\n\t\t\t\t\tcase \"0\":\r\n\t\t\t\t\t\tif (Math.trunc(id_prefix) <= 1) {\r\n\t\t\t\t\t\t\tdataDir = \"/Character/\";\r\n\t\t\t\t\t\t\tstringDir = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase \"1\":\r\n\t\t\t\t\t\tlet s = imgDir + (imgDir ? \"/\" : \"\");\r\n\t\t\t\t\t\tdataDir = \"/Character/\" + s;\r\n\t\t\t\t\t\tstringDir = \"/String/Eqp/Eqp/\" + (stringPath || s);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"2\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Consume/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"3\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Ins/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"4\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Etc/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"5\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Cash/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new Error(\"unknow item type, param: %o\", [id_prefix, imgDir, listPath, slot, categoryName, type]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.defineProperties(this, {\r\n\t\t\t\t\"type\": {\r\n\t\t\t\t\tvalue: type,\r\n\t\t\t\t},\r\n\t\t\t\t\"dataDir\": {\r\n\t\t\t\t\tvalue: dataDir,\r\n\t\t\t\t},\r\n\t\t\t\t\"stringDir\": {\r\n\t\t\t\t\tvalue: stringDir,\r\n\t\t\t\t},\r\n\t\t\t\t\"iconPath\": {\r\n\t\t\t\t\tvalue: iconPath,\r\n\t\t\t\t},\r\n\t\t\t\t\"iconRawPath\": {\r\n\t\t\t\t\tvalue: iconRawPath,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * load equip or item, name and desc\r\n\t * @param {string} itemId\r\n\t * @returns {{info:{icon:{[\"\"]:string},iconRaw:{[\"\"]:string}},name:string,desc:string,[prop:string]:any}}\r\n\t */\r\n\tstatic async getItem(itemId) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(itemId);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet id = itemId.padStart(8, \"0\");\r\n\t\tif (id[0] != \"0\") {\r\n\t\t\tthrow new Error(\"itemId: \" + itemId);\r\n\t\t}\r\n\r\n\t\tlet results;\r\n\t\ttry {\r\n\t\t\tresults = await Promise.all([\r\n\t\t\t\t$get.data(info.dataDir + itemId),\r\n\t\t\t\tinfo.stringDir ? $get.data(info.stringDir + Number(itemId)).then(\r\n\t\t\t\t\ta => a, // have name or desc\r\n\t\t\t\t\t() => { return { name: \"<\" + itemId + \">\" }; } // no name and desc\r\n\t\t\t\t) : { name: \"<\" + itemId + \">\" } // no name and desc\r\n\t\t\t]);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow new ex;\r\n\t\t}\r\n\r\n\t\tlet data = Object.assign(results[0], results[1]);\r\n\t\t\r\n\t\tdata.id = itemId;\r\n\r\n\t\tif (data.info) {\r\n\t\t\t{//editor mode data\r\n\t\t\t\tdata.info.id = itemId;\r\n\t\t\t\tdata.info.name = data.name;\r\n\t\t\t\tif (data.desc) {\r\n\t\t\t\t\tdata.info.desc = data.desc;\r\n\t\t\t\t}\r\n\t\t\t\tdata.info.__v = window.DATA_TAG + window.DATA_VERSION;\r\n\t\t\t}\r\n\r\n\t\t\tif (!data.info.icon) {\r\n\t\t\t\tdata.info.icon = {};\r\n\t\t\t}\r\n\t\t\tif (!data.info.iconRaw) {\r\n\t\t\t\tdata.info.iconRaw = {};\r\n\t\t\t}\r\n\t\t\tif (!data.info.icon[\"\"]) {\r\n\t\t\t\tdata.info.icon[\"\"] = ItemCategoryInfo.getIconUrl(itemId);\r\n\t\t\t}\r\n\t\t\tif (data.info.iconRaw[\"\"]) {\r\n\t\t\t\tdata.info.iconRaw[\"\"] = ItemCategoryInfo.getIconRawUrl(itemId);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconRawUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\treturn $get.imageUrl(info.dataDir + id + \"/\" + info.iconRawPath);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\treturn $get.imageUrl(info.dataDir + id + \"/\" + info.iconPath);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - 4+ digit string\r\n\t * @returns {ItemCategoryInfo}\r\n\t */\r\n\tstatic get(id) {\r\n\t\tlet info;\r\n\r\n\t\tif (id == null || id == \"\") {\r\n\t\t\tdebugger;\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\tif (id.length == 4) {\r\n\t\t\t\tinfo = ItemCategoryInfo._info[id];\r\n\t\t\t\tif (info) {\r\n\t\t\t\t\treturn info;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (id.length == 6) {\r\n\t\t\t\treturn ItemCategoryInfo._info[id];\r\n\t\t\t}\r\n\t\t\telse if (id.length == 3) {\r\n\t\t\t\treturn ItemCategoryInfo._info[id];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 4)];\r\n\t\t\t\tif (info) {\r\n\t\t\t\t\treturn info;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 6)];\r\n\t\t\t\t\tif (info) {\r\n\t\t\t\t\t\treturn info;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 3)];//019\r\n\t\t\t\t\t\tif (info) {\r\n\t\t\t\t\t\t\treturn info;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.warn(\"unknow item type, itemId: \" + id);\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getTypeId() {\r\n\t\treturn Math.trunc(_id / 1000000);\r\n\t}\r\n\r\n\tstatic getCategory() {\r\n\t\treturn Math.trunc(_id / 10000);// % 100;// 0105 // 01 + 05 // type + category\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isItem(id) {\r\n\t\tlet type = Math.trunc(id / 1000000);//id.startsWith(\"00\");\r\n\t\treturn type != 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isEquip(id) {\r\n\t\tif (!id) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\t\tlet _id = Number(id);\r\n\r\n\t\tif (!Number.isSafeInteger(_id)) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\r\n\t\t//let cate = Number(id.length == 4 ? id : id.slice(0, 4));\r\n\t\t//return (cate >= \"0100\" && cate < \"0180\");\r\n\r\n\t\t//let cate = Math.trunc(_id / 10000);\r\n\t\t//if (cate >= 180 && cate < 2000) {\r\n\t\t//\tconsole.warn(\"?? equip: \" + id);\r\n\t\t//\tdebugger;\r\n\t\t//}\r\n\r\n\t\tlet type = Math.trunc(_id / 1000000);\r\n\r\n\t\treturn type == 1;\r\n\t}\r\n\r\n\tstatic isChair(id) {\r\n\t\tif (!id) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\t\tlet _id = Number(id);\r\n\r\n\t\tif (!Number.isSafeInteger(_id)) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\r\n\t\tlet cate = Math.trunc(_id / 10000);\r\n\r\n\t\treturn cate == 301;//0301xxxx\r\n\t}\r\n\r\n\t/**\r\n\t * 1~4 digit number\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic getSubCategory(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic isCashWeapon(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000) == 170;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} job\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getJobWeaponCategory(job) {\r\n\t\t//TODO: getJobWeaponCategory\r\n\t\tconsole.warn(\"getJobWeaponCategory: 未完成\");\r\n\t}\r\n}\r\nwindow.$ItemCategoryInfo = ItemCategoryInfo;\r\nItemCategoryInfo.type = {\r\n\tEquip: \"Equip\",\r\n\tConsume: \"Consume\",\r\n\tEtc: \"Etc\",\r\n\tInstall: \"Install\",\r\n\tCash: \"Cash\"\r\n};\r\nItemCategoryInfo.typeName = {\r\n\t0: \"Equip\",\r\n\t1: \"Consume\",\r\n\t2: \"Etc\",\r\n\t3: \"Install\",\r\n\t4: \"Cash\"\r\n};\r\nItemCategoryInfo.typeId = {\r\n\tEquip: 0,\r\n\tConsume: 1,\r\n\tEtc: 2,\r\n\tInstall: 3,\r\n\tCash: 4,\r\n};\r\nItemCategoryInfo._info = {\r\n\t\"0000\": new ItemCategoryInfo(\"0000\", \"\",\t\t\t\"body\",\t\t\t\t\"body\",\t\t\t\"<body>\", \"Equip\"),\r\n\t\"0001\": new ItemCategoryInfo(\"0001\", \"\",\t\t\t\"head\",\t\t\t\t\"head\",\t\t\t\"<head>\", \"Equip\"),\r\n\r\n\t\"0002\": new ItemCategoryInfo(\"0002\", \"Face\",\t\t\"Face\",\t\t\t\t\"face\",\t\t\t\"臉型\", \"Equip\"),\r\n\t\"0003\": new ItemCategoryInfo(\"0003\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\", \"Equip\"),\r\n\t\"0004\": new ItemCategoryInfo(\"0004\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\", \"Equip\"),\r\n\r\n\t\"0100\": new ItemCategoryInfo(\"0100\", \"Cap\",\t\t\t\"Cap\",\t\t\t\t\"cap\",\t\t\t\"帽子\", \"Equip\"),\r\n\t\"0101\": new ItemCategoryInfo(\"0101\", \"Accessory\",\t\"accessoryFace\",\t\"accessoryFace\", \"臉飾\", \"Equip\"),\r\n\t\"0102\": new ItemCategoryInfo(\"0102\", \"Accessory\",\t\"accessoryEyes\",\t\"accessoryEyes\", \"眼飾\", \"Equip\"),\r\n\t\"0103\": new ItemCategoryInfo(\"0103\", \"Accessory\",\t\"accessoryEars\",\t\"accessoryEars\", \"耳環\", \"Equip\"),\r\n\t\"0104\": new ItemCategoryInfo(\"0104\", \"Coat\",\t\t\"Coat\",\t\t\t\t\"coat\",\t\t\t\"上衣\", \"Equip\"),\r\n\t\"0105\": new ItemCategoryInfo(\"0105\", \"Longcoat\",\t\"Longcoat\",\t\t\t\"longcoat\",\t\t\"套服\", \"Equip\"),\r\n\t\"0106\": new ItemCategoryInfo(\"0106\", \"Pants\",\t\t\"Pants\",\t\t\t\"pants\",\t\t\"褲子\", \"Equip\"),\r\n\t\"0107\": new ItemCategoryInfo(\"0107\", \"Shoes\",\t\t\"Shoes\",\t\t\t\"shoes\",\t\t\"鞋子\", \"Equip\"),\r\n\t\"0108\": new ItemCategoryInfo(\"0108\", \"Glove\",\t\t\"Glove\",\t\t\t\"glove\",\t\t\"手套\", \"Equip\"),\r\n\t\"0109\": new ItemCategoryInfo(\"0109\", \"Shield\",\t\t\"Shield\",\t\t\t\"shield\",\t\t\"盾牌\", \"Equip\"),\r\n\t\"0110\": new ItemCategoryInfo(\"0110\", \"Cape\",\t\t\"Cape\",\t\t\t\t\"cape\",\t\t\t\"披風\", \"Equip\"),\r\n\r\n\t\"0121\": new ItemCategoryInfo(\"0121\", \"Weapon\", \"閃亮克魯\", \"weapon\", \"閃亮克魯\", \"Equip\"),\r\n\t\"0122\": new ItemCategoryInfo(\"0122\", \"Weapon\", \"靈魂射手\", \"weapon\", \"靈魂射手\", \"Equip\"),\r\n\t\"0123\": new ItemCategoryInfo(\"0123\", \"Weapon\", \"魔劍\", \"weapon\", \"魔劍\", \"Equip\"),\r\n\t\"0124\": new ItemCategoryInfo(\"0124\", \"Weapon\", \"能量劍\", \"weapon\", \"能量劍\", \"Equip\"),\r\n\t\"0125\": new ItemCategoryInfo(\"0125\", \"Weapon\", \"幻獸棒\", \"weapon\", \"幻獸棒\", \"Equip\"),\r\n\t\"0126\": new ItemCategoryInfo(\"0126\", \"Weapon\", \"ESP限制器\", \"weapon\", \"ESP限制器\", \"Equip\"),\r\n\t\"0127\": new ItemCategoryInfo(\"0127\", \"Weapon\", \"鎖鏈\", \"weapon\", \"鎖鏈\", \"Equip\"),\r\n\t\"0128\": new ItemCategoryInfo(\"0128\", \"Weapon\", \"魔力護腕\", \"weapon\", \"魔力護腕\", \"Equip\"),\r\n\r\n\t\"0130\": new ItemCategoryInfo(\"0130\", \"Weapon\", \"單手劍\", \"weapon\", \"單手劍\", \"Equip\"),\r\n\t\"0131\": new ItemCategoryInfo(\"0131\", \"Weapon\", \"單手斧\", \"weapon\", \"單手斧\", \"Equip\"),\r\n\t\"0132\": new ItemCategoryInfo(\"0132\", \"Weapon\", \"單手錘\", \"weapon\", \"單手錘\", \"Equip\"),\r\n\t\"0133\": new ItemCategoryInfo(\"0133\", \"Weapon\", \"短劍\", \"weapon\", \"短劍\", \"Equip\"),\r\n\t\"0134\": new ItemCategoryInfo(\"0134\", \"Weapon\", \"雙刀\", \"weapon\", \"雙刀\", \"Equip\"),\r\n\t\"013526\": new ItemCategoryInfo(\"013526\", \"Weapon\", \"靈魂之環\", \"weapon\", \"靈魂之環\", \"Equip\"),\r\n\t\"013530\": new ItemCategoryInfo(\"013530\", \"Weapon\", \"控制器\", \"weapon\", \"控制器\", \"Equip\"),\r\n\t\"0136\": new ItemCategoryInfo(\"0136\", \"Weapon\", \"手杖\", \"weapon\", \"手杖\", \"Equip\"),\r\n\t\"0137\": new ItemCategoryInfo(\"0137\", \"Weapon\", \"短杖\", \"weapon\", \"短杖\", \"Equip\"),\r\n\t\"0138\": new ItemCategoryInfo(\"0138\", \"Weapon\", \"長杖\", \"weapon\", \"長杖\", \"Equip\"),\r\n\t\r\n\t\"0140\": new ItemCategoryInfo(\"0140\", \"Weapon\", \"雙手劍\", \"weapon\", \"雙手劍\", \"Equip\"),\r\n\t\"0141\": new ItemCategoryInfo(\"0141\", \"Weapon\", \"雙手斧\", \"weapon\", \"雙手斧\", \"Equip\"),\r\n\t\"0142\": new ItemCategoryInfo(\"0142\", \"Weapon\", \"雙手棍\", \"weapon\", \"雙手棍\", \"Equip\"),\r\n\t\"0143\": new ItemCategoryInfo(\"0143\", \"Weapon\", \"槍\", \"weapon\", \"槍\", \"Equip\"),\r\n\t\"0144\": new ItemCategoryInfo(\"0144\", \"Weapon\", \"矛\", \"weapon\", \"矛\", \"Equip\"),\r\n\t\"0145\": new ItemCategoryInfo(\"0145\", \"Weapon\", \"弓\", \"weapon\", \"弓\", \"Equip\"),\r\n\t\"0146\": new ItemCategoryInfo(\"0146\", \"Weapon\", \"弩\", \"weapon\", \"弩\", \"Equip\"),\r\n\t\"0147\": new ItemCategoryInfo(\"0147\", \"Weapon\", \"拳套\", \"weapon\", \"拳套\", \"Equip\"),\r\n\t\"0148\": new ItemCategoryInfo(\"0148\", \"Weapon\", \"指虎\", \"weapon\", \"指虎\", \"Equip\"),\r\n\t\"0149\": new ItemCategoryInfo(\"0149\", \"Weapon\", \"火槍\", \"weapon\", \"火槍\", \"Equip\"),\r\n\t\"0150\": new ItemCategoryInfo(\"0150\", \"Weapon\", \"鏟\", \"weapon\", \"鏟\", \"Equip\"),\r\n\t\"0151\": new ItemCategoryInfo(\"0151\", \"Weapon\", \"鎬\", \"weapon\", \"鎬\", \"Equip\"),\r\n\t\"0152\": new ItemCategoryInfo(\"0152\", \"Weapon\", \"雙弩槍\", \"weapon\", \"雙弩槍\", \"Equip\"),\r\n\t\"0153\": new ItemCategoryInfo(\"0153\", \"Weapon\", \"加農砲\", \"weapon\", \"加農砲\", \"Equip\"),\r\n\t\"0154\": new ItemCategoryInfo(\"0154\", \"Weapon\", \"太刀\", \"weapon\", \"太刀\", \"Equip\"),\r\n\t\"0155\": new ItemCategoryInfo(\"0155\", \"Weapon\", \"扇子\", \"weapon\", \"扇子\", \"Equip\"),\r\n\t\"0156\": new ItemCategoryInfo(\"0156\", \"Weapon\", \"琉\", \"weapon\", \"琉\", \"Equip\"),\r\n\t\"0157\": new ItemCategoryInfo(\"0157\", \"Weapon\", \"璃\", \"weapon\", \"璃\", \"Equip\"),\r\n\t\"0158\": new ItemCategoryInfo(\"0158\", \"Weapon\", \"重拳槍\", \"weapon\", \"重拳槍\", \"Equip\"),\r\n\t\"0170\": new ItemCategoryInfo(\"0170\", \"Weapon\", \"0170\", \"weapon\", \"點裝武器\", \"Equip\"),\r\n\t\"019\": new ItemCategoryInfo(\"019\", \"TamingMob\", \"TamingMob\", \"tamingMob\", \"騎寵\", \"Equip\", \"Taming/\"),\r\n\r\n\t\"0301\": new ItemCategoryInfo(\"0301\", \"Install\", \"Chair\", \"install\", \"椅子\", \"Item\"),\r\n};\r\n\r\nItemCategoryInfo._categoryList = (function (info_map) {\r\n\tlet list = [];\r\n\tlet set = new Set();\r\n\tfor (let i in info_map) {\r\n\t\tlet cat = info_map[i];\r\n\t\tlet key = cat.categoryName || cat.listPath;\r\n\r\n\t\tif (!set.has(key)) {\r\n\t\t\tset.add(key);\r\n\r\n\t\t\tlist.push({\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalue: i,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn list;\r\n})(ItemCategoryInfo._info);\r\n\r\nexport class ResourceManager {\r\n\tstatic isEquipExist(id, cateInfo) {\r\n\t\tconst dp = cateInfo.listPath;\r\n\t\tconst es = ResourceManager.equip_map[dp];\r\n\t\treturn !es || es.has(id);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic async loadArchive(url) {\r\n\t\t$setValue($archive, \"/\", JSON.parse(await ResourceManager.get(url)));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic get(url) {\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\txhr.open(\"GET\", url, true);\r\n\r\n\t\t\txhr.timeout = 10 * 60 * 1000;//20000;\r\n\r\n\t\t\txhr.onload = function () {\r\n\t\t\t\tif (this.status == 404 || this.status == 500) {\r\n\t\t\t\t\t$failed_urls.push(url);\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\t//resolve(null);\r\n\t\t\t\t\treject(this.status + \": \" + url);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 200) {\r\n\t\t\t\t\tresolve(this.responseText);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 304) {\r\n\t\t\t\t\tdebugger\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\txhr.ontimeout = function (e) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\t// XMLHttpRequest 超时。在此做某事。\r\n\t\t\t\t//resolve(null);\r\n\t\t\t\treject(\"timeout: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.onabort = function (e) {\r\n\t\t\t\treject(\"abort: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.send();\r\n\t\t});\r\n\t}\r\n\r\n\tstatic get root_path() {\r\n\t\treturn window.$ROOT_PATH;\r\n\t}\r\n\r\n\tstatic get archive() {\r\n\t\treturn $archive;\r\n\t}\r\n\r\n\tstatic get failed_urls() {\r\n\t\treturn $failed_urls;\r\n\t}\r\n}\r\nwindow.$ResourceManager = ResourceManager;\r\n\r\n/**\r\n * @param {{}} obj\r\n * @param {string} path\r\n * @param {any} value\r\n */\r\nfunction $setValue(obj, path, value) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key] == null) {\r\n\t\t\ttarget[key] = {};\r\n\t\t}\r\n\t\ttarget = target[key];\r\n\t}\r\n\tlet origin_value = target[ps[lastIndex]];\r\n\tif (origin_value instanceof Promise) {\r\n\t\tdelete target[ps[lastIndex]];\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n\telse if (origin_value && typeof origin_value == \"object\") {\r\n\t\t//if (value instanceof Promise) {\r\n\t\t//\tdebugger;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t\tfor (let key in value) {\r\n\t\t\t\torigin_value[key] = value[key] || origin_value[key];\r\n\t\t\t}\r\n\t\t//}\r\n\t}\r\n\telse if (typeof value != \"undefined\") {\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n}\r\nfunction $getValue(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key]) {\r\n\t\t\t\ttarget = target[key];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\treturn target[ps[lastIndex]];\r\n}\r\n\r\nconst symbol_isPack = Symbol(\"$pack\");\r\n\r\nconst url_startsWith_protocol = RegExp.prototype.test.bind(/^(([a-zA-Z^\\:]+)(\\:.*)$|\\/\\/)/);\r\nfunction _setValueByPath(path, value, is_pack) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn;\r\n\t}\r\n\telse if (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\tif (is_pack) {\r\n\t\t\tvalue[symbol_isPack] = true;\r\n\t\t}\r\n\t\tpath = path.slice(window.$ROOT_PATH.length);\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n\telse {\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n}\r\nfunction _getValueFromArchiveByPath(path, value) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tif (_path) {\r\n\t\treturn $getValue($archive, _path);\r\n\t}\r\n\treturn undefined;\r\n}\r\nfunction _getDataPathByUrl(path) {\r\n\tif (!url_startsWith_protocol(path)) {\r\n\t\tif (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\t\treturn path.slice(window.$ROOT_PATH.length);\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @returns {Promise<any>|any}\r\n */\r\nfunction $getValueAsync(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\t\r\n\t// try get value sync\r\n\tlet value = $getValue(obj, path);\r\n\t\r\n\t// if value exist\r\n\tif (value) {\r\n\t\tif (value instanceof Promise) {\r\n\t\t\t// ??\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait value;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\telse {// if value not exist, try await parent node\r\n\t\tlet ps = path.split(\"/\");\r\n\t\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\t\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\t\tlet key = ps[i];\r\n\t\t\tif (target[key] instanceof Promise) {\r\n\t\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\t\tawait target[key];\r\n\t\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (target[key]) {\r\n\t\t\t\t\ttarget = target[key];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet result = target[ps[lastIndex]];\r\n\t\tif (result instanceof Promise) {\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait result;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} url\r\n * @returns {Promise<any>}\r\n */\r\nexport let $get = function $get(url) {\r\n\treturn ResourceManager.get(url);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.pack = async function $get_pack(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj && obj[symbol_isPack]) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tif (process.env.NODE_ENV !== \"production\") {\r\n\t\t\tif (obj && !obj[symbol_isPack]) {\r\n\t\t\t\tthrow new TypeError(\"data: \" + path);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst url = $get.packUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, true);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, true);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.packSync = function get_packSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.data = async function $get_data(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.dataUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {any}\r\n */\r\n$get.dataSync = function get_dataSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.list = async function $get_list(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.listUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.listSync = function $get_listSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn Object.keys(obj);\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.dataUrl = function $get_dataUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"data\")) {\r\n\t\treturn `${window.$ROOT_PATH}data${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game data: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.packUrl = function $get_packUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"pack\")) {\r\n\t\treturn `${window.$ROOT_PATH}pack${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game pack: \" + path);\r\n}\r\n$get.listUrl = function $get_listUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"ls\")) {\r\n\t\treturn `${window.$ROOT_PATH}ls${path}.json`;\r\n\t}\r\n\tthrow new Error(path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.imageUrl = function $get_imagesUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"images\")) {\r\n\t\treturn `${window.$ROOT_PATH}images${path}.png`;\r\n\t}\r\n\tthrow new Error(\"Not game images: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundMp3Url = function $get_soundMp3Url(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.mp3`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundWavUrl = function $get_soundWavUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.wav`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.assetUrl = function $get_assetUrl(path) {\r\n\treturn `${window.$ROOT_PATH}${path}`;\r\n}\r\n$get.asset = function $get_asset(path) {\r\n\treturn $get($get.assetUrl(path));\r\n}\r\n\r\nwindow.$get = $get;\r\n\r\n\r\nexport class ItemAttrNormalize {\r\n\tstatic head(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic body(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic Face(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 4 ? 1 : 0;\r\n\t}\r\n\tstatic Hair(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 2 || g == 4 || g == 7 ? 1 : 0;\r\n\t}\r\n\tstatic Cap(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryFace(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEyes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEars(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Coat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Longcoat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Pants(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shoes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Glove(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shield(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Cape(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic _equip(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 0 ? 0 : (g == 1 ? 1 : 2);\r\n\t}\r\n}\r\n\r\nconst regexp_getHairStyleID = /(\\d{4,7})\\d$/;\r\nconst regexp_getFaceStyleID = /(\\d{2,5})\\d(\\d{2})$/;\r\n\r\nconst regexp_getHairColor = /\\d{4,7}(\\d)$/;\r\nconst regexp_getFaceColor = /\\d{2,5}(\\d)\\d{2}$/;\r\n\r\nexport class CharacterRenderConfig {\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumHairColor(style) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i;\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumFaceColor(style) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i + m[2];\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorHairID(style, color) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tlet id = m[1] + (color % 10);\r\n\t\treturn id;\r\n\t}\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorFaceID(style, color) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tlet id = m[1] + (color % 10) + m[2];\r\n\t\treturn id;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHairStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorHairID(id_1, 0) == CharacterRenderConfig.getColorHairID(id_2, 0);\r\n\t}\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFaceStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorFaceID(id_1, 0) == CharacterRenderConfig.getColorFaceID(id_2, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getHairColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getHairColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getFaceColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getFaceColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar _external_data = {\r\n\t\"requiredJobs\": [\r\n\t\t\"Beginner\"\r\n\t],\r\n\t\"requiredLevel\": 0,\r\n\t\"isCash\": true,\r\n\t\"name\": \"Blue Beanie\",\r\n\t\"desc\": null,\r\n\t\"id\": 1000000,\r\n\t\"requiredGender\": 0,\r\n\t\"typeInfo\": {\r\n\t\t\"overallCategory\": \"Equip\",\r\n\t\t\"category\": \"Armor\",\r\n\t\t\"subCategory\": \"Hat\"\r\n\t}\r\n};\r\n\r\nvar ItemTypeInfo = {\r\n\t\"Equip\": {\r\n\t\t\"Hat\": \"Cap\",\r\n\t\t\"Cape\": \"Cape\",\r\n\t\t\"Top\": \"Coat\",\r\n\t\t\"Overall\": \"Longcoat\",\r\n\t\t\"Glove\": \"Glove\",\r\n\t\t\"Bottom\": \"Pants\",\r\n\r\n\t\t\"Shield\": \"Shield\",\r\n\t\t\"Shoes\": \"Shoes\",\r\n\t\t\"Eye Decoration\": \"accessoryEyes\",\r\n\t\t\"Earrings\": \"accessoryEars\",\r\n\t\t//\"Ring\": \"\",\r\n\r\n\t\t//\"Pendant\": \"\",\r\n\t\t\"Face Accessory\": \"accessoryFace\",\r\n\t\t//\"Belt\": \"\",\r\n\t\t//\"Medal\": \"\",\r\n\t\t//\"Shoulder Accessory\": \"\",\r\n\t\t//\"Badge\": \"\",\r\n\r\n\t\t//\"Dragon Equipment\": \"\",\r\n\t\t//\"Mechanic Equipment\": \"\",\r\n\t\t//\"Pet Equipment\": \"\",\r\n\t\t//\"Android\": \"\",\r\n\t\t//\"Mechanical Heart\": \"\",\r\n\t\t//\"Bits\": \"\",\r\n\r\n\t\t\"Face\": \"Face\",\r\n\t\t\"Hair\": \"Hair\",\r\n\t},\r\n};\r\n\r\nResourceManager.external = {\r\n\tequip: {\r\n\t},\r\n};\r\n\r\nResourceManager.equip_map = {\r\n};\r\n\r\nfor (let i in ItemTypeInfo.Equip) {\r\n\tlet cate = ItemTypeInfo.Equip[i];\r\n\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 9; ++i) {\r\n\tlet cate = \"Face\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 8; ++i) {\r\n\tlet cate = \"Hair\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\n\r\nasync function load_external_resource(url) {\r\n\turl = url || \"/items.json\";\r\n\tlet raw;\r\n\r\n\ttry {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get.asset(\"equip.json\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\tthrow Error(\"'/equip' is empty\");\r\n\t\t}\r\n\t}\r\n\tcatch (ex) {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get(\"//labs.maplestory.io/api/gms/latest/item/category/equip\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < raw.length; ++i) {\r\n\t\tconst item = raw[i];\r\n\t\tconst id = String(item.id).padStart(8, \"0\");\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!(item.typeInfo && ItemTypeInfo[item.typeInfo.overallCategory])) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet clz = item.typeInfo.overallCategory.toLowerCase();\r\n\t\t\tlet cate = ItemTypeInfo[item.typeInfo.overallCategory][item.typeInfo.subCategory];\r\n\t\t\tif (!cate) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Face\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getFaceColor(id);\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Hair\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getHairColor(id);\r\n\t\t\t}\r\n\r\n\t\t\tlet it = {\r\n\t\t\t\tid: id,\r\n\t\t\t\tname: item.name,\r\n\t\t\t\tdesc: item.desc,\r\n\t\t\t\tcash: item.isCash ? 1 : 0,\r\n\t\t\t\ticon: {\r\n\t\t\t\t\t\"\": `//labs.maplestory.io/api/gms/latest/item/${item.id}/icon`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tResourceManager.external[clz][cate].push(it);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(\"external resource: id(\" + id + \")\");\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction update_external_equip_list() {\r\n\tconst url = \"https://labs.maplestory.io/api/gms/latest/item/category/equip\";\r\n\tload_external_resource(url).then(() => {\r\n\t\t_concat_external_resource(category, origin_data);\r\n\t\tconcat_external_resource = _concat_external_resource;\r\n\t\tconsole.log(\"done: update_external_equip_list\");\r\n\t});\r\n}\r\n\r\nlet external_resource_promise = load_external_resource();\r\n\r\nwindow.concat_external_resource = _concat_external_resource_p;\r\n\r\nwindow.trigger_update_external_equip_list = function () {\r\n\texternal_resource_promise = load_external_resource();\r\n\twindow.concat_external_resource = _concat_external_resource_p;\r\n}\r\n\r\nasync function _concat_external_resource_p(category, origin_data) {\r\n\tawait external_resource_promise;\r\n\t_concat_external_resource(category, origin_data);\r\n\tconcat_external_resource = _concat_external_resource;\r\n}\r\n\r\nfunction _concat_external_resource(category, origin_data) {\r\n\ttry {\r\n\t\tconst list = ResourceManager.external.equip[category];\r\n\t\tif (!list) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet id_map = ResourceManager.equip_map[category];\r\n\r\n\t\tif (!id_map) {\r\n\t\t\tid_map = new Map();\r\n\t\t\t\r\n\t\t\torigin_data.forEach(item => {\r\n\t\t\t\tid_map.set(item.id, item);\r\n\t\t\t});\r\n\r\n\t\t\tResourceManager.equip_map[category] = id_map;\r\n\t\t}\r\n\r\n\t\tlist.forEach((item) => {\r\n\t\t\tlet id = item.id;\r\n\t\t\tif (!id_map.has(id)) {\r\n\t\t\t\titem.$foreign = true;\r\n\t\t\t\torigin_data.push(item);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet ori_item = id_map.get(id);\r\n\t\t\t\tori_item._name = item.name || \"\";\r\n\t\t\t\tori_item._desc = item.desc || \"\";\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcatch (ex) {\r\n\t\tconsole.error(ex);\r\n\t\tdebugger;\r\n\t}\r\n}\r\n\r\nwindow.load_extern_item_data = async function (id) {\r\n\tlet _raw = JSON.parse(await $get(`//labs.maplestory.io/api/gms/latest/item/${id}`));\r\n\tlet raw = {};\r\n\r\n\tlet default_ = _raw.frameBooks.default ? _raw.frameBooks.default.frames[0]:null;\r\n\r\n\tfor (let i in _raw.frameBooks) {\r\n\t\tlet _act = _raw.frameBooks[i];\r\n\t\tlet act = [];\r\n\r\n\t\tfor (let j = 0; j < _act.frames.length; ++j) {\r\n\t\t\tlet frame = _act.frames[j] || default_;\r\n\t\t\tif (!frame || !frame.effects) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet _frags = frame.effects;\r\n\t\t\tlet frags = {};\r\n\t\t\tfor (let k in _frags) {\r\n\t\t\t\tlet _frag = _frags[k];\r\n\t\t\t\tif (_frag.image) {\r\n\t\t\t\t\tfrags[k] = {\r\n\t\t\t\t\t\t\"\": \"data:image/png;base64,\" + _frag.image,\r\n\t\t\t\t\t\t\"origin\": _frag.originOrZero || _frag.origin || _frag.center,\r\n\t\t\t\t\t\t\"map\": _frag.mapOffset,\r\n\t\t\t\t\t\t\"z\": _frag.position\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tact[j] = frags;\r\n\t\t}\r\n\r\n\t\traw[i] = act;\r\n\t}\r\n\r\n\traw.info = {\r\n\t\tislot: _raw.metaInfo.equip.islot,\r\n\t\tvslot: _raw.metaInfo.equip.vslot,\r\n\t\ticon: _raw.metaInfo.icon ? (\"data:image/png;base64,\" + _raw.metaInfo.icon.iconRaw) : \"\",\r\n\t\tcash: (_raw.metaInfo.cash && _raw.metaInfo.cash.cash) ? 1 : 0,\r\n\t};\r\n\r\n\treturn raw;\r\n}\r\n","﻿\r\nimport {\r\n\tb2_linearSlop,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2Body, b2Fixture,\r\n\tb2PolygonShape, b2CircleShape,\r\n\tb2WheelJointDef, b2RevoluteJointDef, b2PrismaticJointDef, b2MouseJointDef,\r\n\tb2Joint, b2RevoluteJoint, b2PrismaticJoint, b2MouseJoint,\r\n\tb2Contact,\r\n} from \"./Physics.js\";\r\n\r\nimport { Foothold } from \"./Ground.js\";\r\n\r\nimport { World } from \"./World.js\";\r\n\r\nimport { CharacterMoveElem } from \"../../Client/PMovePath.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { SceneMap } from \"../Map.js\";\r\nimport { LadderRope } from \"./LadderRope.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nconst DEGTORAD = Math.PI / 180;\r\n\r\nlet b2Vec2_temp = new b2Vec2();\r\n\r\n/**\r\n * physics profile\r\n */\r\nconst chara_profile = {\r\n\twidth: 25 / $gv.CANVAS_SCALE,\r\n\theight: 48 / $gv.CANVAS_SCALE,\r\n\tdensity: 1,\r\n\t/** radius */\r\n\tget foot_width() {\r\n\t\treturn (chara_profile.width * 0.5);\r\n\t},\r\n\t/** radius */\r\n\tget foot_j_width() {\r\n\t\treturn (chara_profile.width * 0.4);\r\n\t},\r\n};\r\n\r\n(function () {\r\n\tconst jumpSpeed = 555;//??\r\n\tconst fallSpeed = 670;//px/s\r\n\tconst walkSpeed = 125;//px/s\r\n\t\r\n\twindow.JUMP_FORCE = jumpSpeed;\r\n\r\n\twindow.MOVEMENT_VELOCITY = walkSpeed / $gv.CANVAS_SCALE;\r\n\twindow.$LADDER_SPEED = walkSpeed / $gv.CANVAS_SCALE;\r\n\r\n\twindow.PLAYER_USE_WHEEL_WALKER = false;\r\n\r\n\twindow.FOOT_FRICTION = 1;\r\n\r\n\twindow.MOVEMENT_POWER = 140000;\r\n\twindow.MOVEMENT_STOP_POWER = 140000;\r\n\r\n\twindow.PORTAL_COOLDOWN = 1000;\r\n})();\r\n\r\n\r\nexport class PPlayerState {\r\n\tconstructor() {\r\n\t\t/** @type {boolean} - ApplyForce(jump_force) until leave foothold */\r\n\t\tthis._begin_jump = false;\r\n\r\n\t\t/** jump_count = jump ? jump_count : 0 */\r\n\t\tthis.jump = true;\r\n\r\n\t\t/** jump_count = jump ? jump_count : 0 */\r\n\t\tthis.jump_count = 0;\r\n\r\n\t\t/** ?? */\r\n\t\tthis._drop = true;\r\n\r\n\t\tthis.walk = false;\r\n\r\n\t\tthis.prone = false;\r\n\r\n\t\t/** TODO: fallDown */\r\n\t\tthis.dropDown = false;\r\n\r\n\t\tthis._fly = false;//not jump \r\n\t\t\r\n\t\tthis.brake = true;//??\r\n\t\t\r\n\t\t/** @type {-1|1} */\r\n\t\tthis.front = -1;\r\n\r\n\t\t/** @type {boolean} - is use ladder */\r\n\t\tthis.ladder = false;\r\n\r\n\t\t/**\r\n\t\t * action animation\r\n\t\t * @type {-1|0|1} - up: -1, down: 1, stop: 0\r\n\t\t */\r\n\t\tthis.ladder_move_dir = 0;\r\n\r\n\t\t/** @type {number} - 無敵時間，unit is millisecond */\r\n\t\tthis.invincible = 0;\r\n\t\t\r\n\t\t/** @type {boolean} - can not move or jump */\r\n\t\tthis.freeze = false;\r\n\r\n\t\t/** @type {boolean} - can not move or jump */\r\n\t\tthis.invokeSkill = false;\r\n\r\n\t\t/** @type {number} - use portal cooldown time，unit is millisecond */\r\n\t\tthis.portal_cooldown = 0;\r\n\t\t\r\n\t\t//\r\n\r\n\t\t/** @type {number} - knockback time，unit is millisecond */\r\n\t\tthis.knockback = 0;\r\n\r\n\t\t/** @type {boolean} - off walker power */\r\n\t\tthis.outOfControl = false;\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {number} jump_height\r\n * @param {b2Vec2} gravity\r\n */\r\nfunction _CalcJumpImpulse(jump_height, gravity) {\r\n\tlet impulse = Math.sqrt(jump_height * 2.0 * Math.abs(gravity.y));\r\n\t//(impulse = m * v) => (F = ∫ Mass * dVel)\r\n\treturn impulse;\r\n}\r\n\r\n\r\nclass ControlKeys {\r\n\tconstructor() {\r\n\t\tthis.up = 0;\r\n\t\tthis.left = 0;\r\n\t\tthis.down = 0;\r\n\t\tthis.right = 0;\r\n\t\tthis.jump = 0;\r\n\t\tthis.enterPortal = 0;//TODO: key: enterPortal\r\n\t}\r\n}\r\n\r\nexport class FootContact {\r\n\t/**\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} position\r\n\t * @param {number} priority\r\n\t */\r\n\tconstructor(foothold, position, priority) {\r\n\t\t/** @type {Foothold} */\r\n\t\tthis.foothold = foothold;\r\n\r\n\t\t/** @type {b2Vec2} */\r\n\t\tthis.position = position;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.priority = priority;\r\n\t}\r\n}\r\n\r\nclass PCharacterBase {\r\n\tconstructor() {\r\n\t\t/** @type {boolean} */\r\n\t\tthis.disable = false;\r\n\r\n\t\tthis.chara_profile = Object.assign({}, chara_profile);\r\n\t\t\r\n\t\tthis.setMovementSpeed(100);\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.foot_walk = null;\r\n\r\n\t\t/** @type {b2Joint|b2RevoluteJoint} */\r\n\t\tthis.walker = null;\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tthis.$foothold = null;\r\n\r\n\t\t/**\r\n\t\t * this.$foothold old value\r\n\t\t * @type {Foothold}\r\n\t\t */\r\n\t\tthis.prev_$fh = null;\r\n\r\n\t\t/**\r\n\t\t * no contact leave_$fh\r\n\t\t * where foothold chara dropDown\r\n\t\t * @type {Foothold}\r\n\t\t */\r\n\t\tthis.leave_$fh = null;\r\n\r\n\r\n\t\t/** @type {Foothold} - in World::Setp */\r\n\t\tthis._foothold = null;\r\n\r\n\t\t/** @type {b2Vec2} - contact foothold point */\r\n\t\tthis._foot_at = new b2Vec2();\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._foothold_priority = 0;\r\n\t\t\r\n\t\t/** @type {FootContact[]} */\r\n\t\tthis._foot_contact_list = [];\r\n\r\n\r\n\t\t/** @type {MapPortal} */\r\n\t\tthis.portal = null;\r\n\r\n\r\n\t\t/** @type {LadderRope} */\r\n\t\tthis.ladder = null;\r\n\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._walker_omega = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.jump_force = JUMP_FORCE;\r\n\r\n\t\tthis.state = new PPlayerState();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {boolean} clearForce\r\n\t */\r\n\tsetPosition(x, y, clearForce) {\r\n\t\tconst by = y - this.chara_profile.foot_width - this.chara_profile.height * 0.75 * 0.5;\r\n\t\tconst fy = y - this.chara_profile.foot_width;\r\n\r\n\t\tthis.body.SetPositionXY(x, by);\r\n\r\n\t\ttry {\r\n\t\t\tif (this.foot_walk)\r\n\t\t\t\tthis.foot_walk.SetPositionXY(x, fy);\r\n\r\n\t\t\tif (clearForce) {\r\n\t\t\t\tconst speed = new b2Vec2(0, 0);\r\n\t\t\t\tthis.body.ConstantVelocity(speed);\r\n\t\t\t\tif (this.foot_walk)\r\n\t\t\t\t\tthis.foot_walk.ConstantVelocity(speed);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * get bottom position\r\n\t * @returns {{x: number, y: number}}\r\n\t */\r\n\tgetPosition() {\r\n\t\tconst pos = this.foot_walk.GetPosition();\r\n\t\treturn new b2Vec2(pos.x, pos.y + this.chara_profile.foot_width);\r\n\t}\r\n\r\n\t/**\r\n\t * from.tn(hp00_1) == to.pn(hp00_1) && from.pn(hp00) == to.tn(hp00)\r\n\t * @param {MapPortal} portal\r\n\t * @returns {boolean} true if enter portal\r\n\t */\r\n\t_usePortal(portal) {\r\n\t\tif (!portal.enable || this.state.portal_cooldown > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t/** @type {SceneMap} */\r\n\t\tconst mapRenderer = portal.mapRenderer;\r\n\r\n\t\tconst mapController = mapRenderer.controller;\r\n\t\t\r\n\t\tconst map_id = portal.getMap();\r\n\t\t\r\n\t\tif (portal.exeScript) {//TODO: portal script\r\n\t\t\tportal.exeScript(this);\r\n\t\t}\r\n\t\telse if (map_id) {\r\n\t\t\tif (map_id == mapRenderer.map_id) {\r\n\t\t\t\tconst reg = portal.tn.match(/(^[a-z_]+)(\\d+$)/) || portal.tn.match(/(^[a-z]+)\\d+_\\d+$/);//pn?tn?\r\n\t\t\t\tconst cmd = reg[1];\r\n\r\n\t\t\t\tif (cmd == \"hp\") {\r\n\t\t\t\t\tlet fromTn = portal.tn;\r\n\t\t\t\t\tlet toPortal = mapRenderer.portalMgr.portals.find(function (toPortal) {\r\n\t\t\t\t\t\treturn fromTn == toPortal.pn;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._gotoPortal(toPortal);\r\n\t\t\t\t}\r\n\t\t\t\telse if (cmd == \"pt_go\") {\r\n\t\t\t\t\tdebugger;//??\r\n\r\n\t\t\t\t\tconst tpid = parseInt(reg[2], 10);\r\n\t\t\t\t\tconst tp = mapRenderer.portalMgr.portals[tpid];\r\n\r\n\t\t\t\t\tthis._gotoPortal(tp);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(`portal.pn: ${portal.pn}, portal.tn: ${portal.tn}, %o`, portal);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmapController.doAfterStep(function () {\r\n\t\t\t\t\tmapRenderer.unload();\r\n\t\t\t\t\tmapRenderer.load(map_id);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"portal: $o\", portal);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.state.portal_cooldown = PORTAL_COOLDOWN;//防止重複\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * @param {MapPortal} portal\r\n\t */\r\n\t_gotoPortal(portal) {\r\n\t\t/** @type {SceneMap} */\r\n\t\tconst mapRenderer = portal.mapRenderer;\r\n\t\tconst mapController = mapRenderer.controller;\r\n\r\n\t\t//not in world.Step\r\n\t\tmapController.doAfterStep(() => {\r\n\t\t\tconst x = portal.x / $gv.CANVAS_SCALE;\r\n\t\t\tconst y = (portal.y - 3) / $gv.CANVAS_SCALE;//adj portal pos\r\n\t\t\tthis.setPosition(x, y, true);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * set ladder, not use\r\n\t * @param {LadderRope} ladder\r\n\t */\r\n\tcontactLadder(ladder) {\r\n\t\tif (ladder) {\r\n\t\t\tthis.ladder = ladder;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.ladder = null;\r\n\t\t}\r\n\t}\r\n\tleaveLadder() {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tthis._useLadder(false);\r\n\t\t\tthis.contactLadder(null, null);//set no contact\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {boolean} flag - true: use, false: no use\r\n\t */\r\n\tuseLadder(flag) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tthis._useLadder(flag);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @param {boolean} flag - true: use, false: no use\r\n\t */\r\n\t_useLadder(flag) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tif (flag) {\r\n\t\t\tif (this.ladder && !this.$ladder_pj) {\r\n\t\t\t\tconst ladderBody = this.ladder.body;\r\n\r\n\t\t\t\tif (ladderBody.GetAngle() || ladderBody.GetAngularVelocity()) {\r\n\t\t\t\t\tthis.body.SetAngle(ladderBody.GetAngle());\r\n\t\t\t\t\tthis.body.SetFixedRotation(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state.ladder = true;\r\n\t\t\t\tthis.state.jump = false;\r\n\t\t\t\tthis.state.jump_count = 0;\r\n\r\n\t\t\t\tthis.body.SetAwake(true);\r\n\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\tthis.body.m_type = b2BodyType.b2_kinematicBody;\r\n\t\t\t\t//\r\n\t\t\t\tthis.foot_walk.SetAwake(true);\r\n\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t\tthis.foot_walk.m_type = b2BodyType.b2_kinematicBody;\r\n\r\n\t\t\t\tthis.walker.SetMotorSpeed(0);\r\n\r\n\t\t\t\t// create joint\r\n\r\n\t\t\t\tlet height = this.ladder.calcHeight() / $gv.CANVAS_SCALE;\r\n\r\n\t\t\t\t//let ground = world.ground.bodies[0];\r\n\r\n\t\t\t\tthis.setPosition(ladderBody.GetPosition().x, this.getPosition().y);\r\n\r\n\t\t\t\tlet pjd = new b2PrismaticJointDef();\r\n\t\t\t\t//pjd.Initialize(ladderBody, this.body, anchor, new b2Vec2(0, 1));\r\n\t\t\t\t{\r\n\t\t\t\t\tpjd.bodyA = ladderBody;\r\n\t\t\t\t\tpjd.bodyB = this.foot_walk;//this.body;\r\n\t\t\t\t\t//pjd.localAnchorA.Set(0, 0);\r\n\t\t\t\t\t//pjd.localAnchorB.Set(0, 0);\r\n\t\t\t\t\tpjd.localAxisA.Set(0, 1);\r\n\t\t\t\t\t//pjd.referenceAngle = 0;\r\n\t\t\t\t}\r\n\t\t\t\tpjd.lowerTranslation = -this.chara_profile.foot_width;\r\n\t\t\t\tpjd.upperTranslation = height + this.chara_profile.foot_width;\r\n\t\t\t\tpjd.enableLimit = true;\r\n\t\t\t\tpjd.maxMotorForce = this._getMass() * 1000;\r\n\r\n\t\t\t\t/** @type {b2PrismaticJoint} */\r\n\t\t\t\tlet pj = world.CreateJoint(pjd);\r\n\r\n\t\t\t\tthis.$ladder_pj = pj;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.ladder) {\r\n\t\t\t\t//this.ladder = null;\r\n\r\n\t\t\t\tif (this.state.ladder) {\r\n\t\t\t\t\tthis.state.ladder = false;\r\n\r\n\t\t\t\t\tthis.body.SetAwake(true);\r\n\t\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\t\tthis.body.m_type = b2BodyType.b2_dynamicBody;\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.foot_walk.SetAwake(true);\r\n\t\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t\t\tthis.foot_walk.m_type = b2BodyType.b2_dynamicBody;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.$ladder_pj) {\r\n\t\t\t\tworld.DestroyJoint(this.$ladder_pj);\r\n\t\t\t\tdelete this.$ladder_pj;\r\n\r\n\t\t\t\tthis.body.SetAngle(0);\r\n\t\t\t\tthis.body.SetFixedRotation(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremove_sticky() {\r\n\t\tif (this.$sticky_pj) {\r\n\t\t\tthis.body.m_world.DestroyJoint(this.$sticky_pj);\r\n\t\t\tthis.$sticky_pj = null;\r\n\t\t}\r\n\t}\r\n\r\n\tactionJump() {\r\n\t\tthis.state._begin_jump = true;\r\n\t\t++this.state.jump_count;\r\n\t}\r\n\t//actionWalk(front) {\r\n\t//}\r\n\tactionDropdown() {\r\n\t\tthis.leave_$fh = this.$foothold;\r\n\t\tthis.$foothold = null;\r\n\t\tthis.state.dropDown = true;\r\n\t\tthis.body.SetAwake(true);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Partial<ControlKeys>} keys\r\n\t */\r\n\tcontrol(keys) {\r\n\t\tif (!this._isCanMove()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.state.ladder && this.$ladder_pj) {\r\n\t\t\tconst ladderBody = this.ladder.body;\r\n\t\t\tconst speed = (window.$LADDER_SPEED || 1);\r\n\r\n\t\t\tif (ladderBody) {\r\n\t\t\t\tif (ladderBody.GetAngle() || ladderBody.GetAngularVelocity()) {\r\n\t\t\t\t\tthis.body.SetAngle(ladderBody.GetAngle());\r\n\t\t\t\t\tthis.body.SetFixedRotation(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//else {\r\n\t\t\t//\tdebugger;\r\n\t\t\t//}\r\n\r\n\t\t\tif (keys.up && !keys.down) {\r\n\t\t\t\tthis.state.ladder_move_dir = -1;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(true);\r\n\t\t\t\tthis.$ladder_pj.SetMotorSpeed(-speed);\r\n\t\t\t}\r\n\t\t\telse if (keys.down && !keys.up) {\r\n\t\t\t\tthis.state.ladder_move_dir = 1;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(true);\r\n\t\t\t\tthis.$ladder_pj.SetMotorSpeed(speed);\r\n\t\t\t}\r\n\t\t\telse {//stop\r\n\t\t\t\tthis.state.ladder_move_dir = 0;//action animation\r\n\r\n\t\t\t\tthis.$ladder_pj.EnableMotor(false);\r\n\r\n\t\t\t\tthis.body.SetLinearVelocity2(0, 0);\r\n\t\t\t\t//\r\n\t\t\t\tthis.foot_walk.SetLinearVelocity2(0, 0);\r\n\t\t\t}\r\n\t\t\tif (keys.jump) {\r\n\t\t\t\tconst world = this.body.m_world;\r\n\t\t\t\tconst mass = this._getMass();\r\n\r\n\t\t\t\tif (keys.left && keys.right) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t\telse if (keys.left) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t\tworld.doAfterStep(() => {\r\n\t\t\t\t\t\t//const f = new b2Vec2(0, -world.m_gravity.y * mass);\r\n\t\t\t\t\t\t//this.body.ApplyForceToCenter(f, true);\r\n\t\t\t\t\t\tthis.body.ApplyLinearImpulseToCenter2(-speed * mass, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if (keys.right) {\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t\tworld.doAfterStep(() => {\r\n\t\t\t\t\t\t//const f = new b2Vec2(0, -world.m_gravity.y * mass);\r\n\t\t\t\t\t\t//this.body.ApplyForceToCenter(f, true);\r\n\t\t\t\t\t\tthis.body.ApplyLinearImpulseToCenter2(speed * mass, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.$ladder_pj) {\r\n\t\t\tdebugger\r\n\t\t\tthis.useLadder(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state.outOfControl) {\r\n\t\t\t\tthis.walker.EnableMotor(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.walker.EnableMotor(true);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.portal && keys.up) {\r\n\t\t\t\t//TODO: enter portal key: keys.enterPortal\r\n\t\t\t\tlet portal = this.portal;\r\n\t\t\t\tif (this._usePortal(portal)) {\r\n\t\t\t\t\tthis.portal = null;//使用完畢\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.ladder && (\r\n\t\t\t\t(keys.down && this.$foothold && this.ladder.body.GetLocalPoint(this.getPosition(), b2Vec2_temp).y <= 0) ||\r\n\t\t\t\t(keys.up && !this.$foothold && this.ladder.body.GetLocalPoint(this.getPosition(), b2Vec2_temp).y > 0))\r\n\t\t\t) {\r\n\t\t\t\tthis.state.ladder_move_dir = 0;//reset\r\n\t\t\t\tthis.useLadder(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst wheel_sp = this._walker_omega;\r\n\t\t\tconst velocity = this.body.GetLinearVelocity();//foot_walk\r\n\r\n\t\t\tif (!this.state.jump && !this.state.dropDown) {\r\n\t\t\t\t//dropDown\r\n\t\t\t\tif (keys.down && keys.jump) {\r\n\t\t\t\t\tthis.actionDropdown();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//趴下\r\n\t\t\t\tif (keys.down) {\r\n\t\t\t\t\tthis.state.prone = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.prone = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.state.prone = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (keys.left && !keys.right) {\r\n\t\t\t\tthis.state.walk = true;\r\n\t\t\t\tthis.state.front = -1;\r\n\t\t\t\tthis.walker.SetMotorSpeed(-wheel_sp);\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(true);//power on\r\n\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t}\r\n\t\t\telse if (keys.right && !keys.left) {\r\n\t\t\t\tthis.state.walk = true;\r\n\t\t\t\tthis.state.front = 1;\r\n\t\t\t\tthis.walker.SetMotorSpeed(wheel_sp);\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(true);//power on\r\n\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.state.walk = false;\r\n\r\n\t\t\t\tif (!this.state.jump) {\r\n\t\t\t\t\tlet vx = velocity.x;\r\n\t\t\t\t\tif (vx > 50 * b2_linearSlop) {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(-vx * Math.PI / 2 / Math.PI / this.chara_profile.width / 2);//煞車但無法止滑\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (vx < -50 * b2_linearSlop) {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(-vx * Math.PI / 2 / Math.PI / this.chara_profile.width / 2);//煞車但無法止滑\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.walker.SetMotorSpeed(0);//stop motor\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.walker.SetMotorSpeed(0);//stop motor\r\n\t\t\t\t}\r\n\t\t\t\tthis.walker.SetMaxMotorTorque(MOVEMENT_STOP_POWER);\r\n\t\t\t\t//this.walker.EnableMotor(false);//power off\r\n\r\n\t\t\t\tif (this.state.止滑) {\r\n\t\t\t\t\tthis.sticky(this.getPosition());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (keys.jump && this._isCanJump()) {\r\n\t\t\t\tthis.remove_sticky();\r\n\t\t\t\tthis.actionJump();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_isCanJump() {\r\n\t\treturn !this.state.jump && !this.isDrop();\r\n\t}\r\n\r\n\t_isCanMove() {\r\n\t\treturn !this.state.freeze && !this.state.knockback;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} increment_percent - increment_percent >= -100\r\n\t */\r\n\tsetMovementSpeed(increment_percent) {\r\n\t\tif (!(Number.isSafeInteger(increment_percent) || (!Number.isNaN(increment_percent) && Number.isFinite(increment_percent)))) {\r\n\t\t\tdebugger\r\n\t\t\tif (process.env.NODE_ENV !== '') {\r\n\t\t\t\tthrow new TypeError(\"increment_percent must is number\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet scale = (100 + increment_percent) / 100;\r\n\t\tif (scale > 0) {\r\n\t\t\tthis._setWalkerOmegaFromVelocity(MOVEMENT_VELOCITY * scale);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._setWalkerOmegaFromVelocity(0);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} speed - speed = pixel / second\r\n\t */\r\n\tsetMovementSpeedPixel(speed) {\r\n\t\tlet v = speed / $gv.CANVAS_SCALE;\r\n\t\tif (v > 0) {\r\n\t\t\tthis._walker_omega = v;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._walker_omega = 0;\r\n\t\t}\r\n\t}\r\n\t_setWalkerOmegaFromVelocity(movement_velocity) {\r\n\t\tthis._walker_omega = movement_velocity / (Math.PI * this.chara_profile.width) * Math.PI;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} increment_percent - increment_percent >= -100\r\n\t */\r\n\tsetjumpForce(increment_percent) {\r\n\t\tif (!(Number.isSafeInteger(increment_percent) || (!Number.isNaN(increment_percent) && Number.isFinite(increment_percent)))) {\r\n\t\t\tdebugger\r\n\t\t\tthrow new TypeError(\"increment_percent must is number\");\r\n\t\t}\r\n\r\n\t\tlet scale = (100 + increment_percent) / 100;\r\n\t\tif (scale <= 0) {\r\n\t\t\tthis.jump_force = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst gravity = this.body.GetWorld().GetGravity();\r\n\t\t\tthis.jump_force = JUMP_FORCE * scale;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\t_getMass() {\r\n\t\treturn this.body.GetMass() + this.foot_walk.GetMass();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} s\r\n\t */\r\n\tsetGravityScale(s) {\r\n\t\tthis.body.SetGravityScale(s);\r\n\t\tthis.foot_walk.SetGravityScale(s);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @returns {string}\r\n\t */\r\n\tget _body_category() {\r\n\t\treturn \"body\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tlet first_pos = new b2Vec2(1 / $gv.CANVAS_SCALE, -2 / $gv.CANVAS_SCALE);\r\n\t\tlet jmp_body_pos_y = first_pos.y + this.chara_profile.height * 0.75 * 0.5;\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tbdef.type = b2BodyType.b2_dynamicBody;\r\n\t\tbdef.bullet = true;//get real contact point\r\n\t\tbdef.position.Set(first_pos.x, first_pos.y);\r\n\t\tbdef.userData = this;\r\n\r\n\t\tfdef.userData = this;\r\n\r\n\t\t//create body\r\n\t\t{\r\n\t\t\tthis.body = world.CreateBody(bdef);\r\n\t\t\tthis.body.SetFixedRotation(true);\r\n\t\t}\r\n\t\tthis.body.$type = \"player\";\r\n\r\n\t\tfdef.filter.Copy(FilterHelper.get(this._body_category));\r\n\r\n\t\t//head\r\n\t\t{\r\n\t\t\tshape.SetAsBox(\r\n\t\t\t\tthis.chara_profile.width * 0.5,\r\n\t\t\t\tthis.chara_profile.height * 0.75 * 0.5,\r\n\t\t\t\tb2Vec2.ZERO,//new b2Vec2(0, 0),//\r\n\t\t\t\t0);\r\n\r\n\t\t\tfdef.density = this.chara_profile.density;\r\n\t\t\tfdef.friction = 0;\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tfdef.shape = shape;\r\n\t\t\t//\r\n\t\t\tthis.fixture = this.body.CreateFixture(fdef);\r\n\t\t\tthis.fixture.$type = \"player\";\r\n\t\t}\r\n\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"foot\"));\r\n\t\t//\r\n\t\t//create walker\r\n\t\t{\r\n\t\t\tbdef.type = b2BodyType.b2_dynamicBody;\r\n\t\t\tbdef.position.Set(first_pos.x, jmp_body_pos_y);\r\n\t\t\tthis.foot_walk = world.CreateBody(bdef);\r\n\r\n\t\t\tlet circle = new b2CircleShape();\r\n\t\t\tcircle.m_p.Set(0, 0);\r\n\t\t\tcircle.m_radius = this.chara_profile.foot_width;\r\n\t\t\tfdef.shape = circle;\r\n\t\t\tfdef.density = this.chara_profile.density;\r\n\t\t\t//fdef.filter = world.getFilterDefine(\"pl_ft_walk\");\r\n\t\t\tfdef.friction = FOOT_FRICTION;//walk\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tlet fixture = this.foot_walk.CreateFixture(fdef);\r\n\t\t\tfixture.$type = \"pl_ft_walk\";\r\n\r\n\t\t\tthis._set_foot_listener(fixture);\r\n\t\t}\r\n\t\tthis.foot_walk.$type = \"pl_ft_walk\";\r\n\r\n\t\t//j2\r\n\t\t{\r\n\t\t\tlet jd;\r\n\r\n\t\t\tif (PLAYER_USE_WHEEL_WALKER) {\r\n\t\t\t\tjd = new b2WheelJointDef();//b2WheelJointDef//b2RevoluteJointDef\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tjd = new b2RevoluteJointDef();//b2WheelJointDef//b2RevoluteJointDef\r\n\t\t\t}\r\n\r\n\t\t\tif (jd instanceof b2RevoluteJointDef) {\r\n\t\t\t\tjd.Initialize(this.body, this.foot_walk, new b2Vec2(first_pos.x, jmp_body_pos_y));\r\n\t\t\t}\r\n\t\t\tif (jd instanceof b2WheelJointDef) {\r\n\t\t\t\tjd.Initialize(this.body, this.foot_walk, new b2Vec2(first_pos.x, jmp_body_pos_y), new b2Vec2(0, -1));\r\n\t\t\t}\r\n\t\t\tjd.enableMotor = true;\r\n\t\t\tjd.maxMotorTorque = MOVEMENT_POWER;\r\n\t\t\t//jd.motorSpeed = 40;\r\n\t\t\tif (jd instanceof b2RevoluteJointDef) {\r\n\t\t\t\tjd.enableLimit = false;\r\n\t\t\t\tjd.lowerAngle = 0 * DEGTORAD;\r\n\t\t\t\tjd.upperAngle = -0 * DEGTORAD;\r\n\t\t\t\tjd.referenceAngle = 0;\r\n\t\t\t}\r\n\t\t\tif (jd instanceof b2WheelJointDef) {\r\n\t\t\t\tjd.frequencyHz = 10;//springs\r\n\t\t\t\tjd.dampingRatio = 1;//springs\r\n\t\t\t}\r\n\t\t\tthis.walker = world.CreateJoint(jd);\r\n\t\t}\r\n\t\t\r\n\t\tthis.body.addStep(this.Step.bind(this));\r\n\t\tthis.body.addAfterStep(this.AfterStep.bind(this));\r\n\t\t\r\n\t\tthis.setMovementSpeed(0);\r\n\t\tthis.setjumpForce(0);\r\n\t}\r\n\t\r\n\t/**\r\n\t * destroy this\r\n\t * @returns {void}\r\n\t */\r\n\t_destroy() {\r\n\t\t/** @type {World} world */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tif (this.body) {\r\n\t\t\tworld.DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"this already dead\");\r\n\t\t}\r\n\t\tif (this.foot_walk) {\r\n\t\t\tworld.DestroyBody(this.foot_walk);\r\n\t\t\tthis.foot_walk = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Fixture} fa - self\r\n\t * @param {b2Fixture} fb - other\r\n\t * @returns {boolean}\r\n\t */\r\n\t_isFromSelfContact(fa, fb) {\r\n\t\tlet a = fa.GetBody().GetUserData();\t// A data\r\n\t\tlet b = fb.GetBody().GetUserData();\t// B data\r\n\r\n\t\tif (a && b && a.body && b.body && a.body == b.body) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa - self\r\n\t * @param {b2Fixture} fb - other\r\n\t * @returns {boolean} - return true if from self and disable this contact\r\n\t */\r\n\t_ignoreSelfContact(contact, fa, fb) {\r\n\t\tif (this._isFromSelfContact(fa, fb)) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t_set_foot_listener(foot_fixture) {\r\n\t\tfoot_fixture.beginContact = this.__beginContact_walker;\r\n\t\tfoot_fixture.endContact = this.__endContact_walker;\r\n\t\tfoot_fixture.preSolve = this.__preSolve_walker;\r\n\t}\r\n\t\r\n\t__beginContact_walker(contact, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet targetBody = fb.m_body;\r\n\t\tif (targetBody) {\r\n\t\t\tswitch (targetBody.$type) {\r\n\t\t\t\tcase \"portal\":\r\n\t\t\t\t\tthis._beginContactPortal(fb.m_userData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__endContact_walker(contact, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet targetBody = fb.m_body;\r\n\t\tif (targetBody) {\r\n\t\t\tswitch (targetBody.$type) {\r\n\t\t\t\tcase \"portal\":\r\n\t\t\t\t\tthis._endContactPortal(fb.m_userData);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__preSolve_walker(contact, oldManifold, fa, fb) {\r\n\t\tif (this._ignoreSelfContact(contact, fa, fb)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (fa.$type == \"pl_ft_walk\" && fb.$type == \"pl_ft_walk\") {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {MapPortal} portal */\r\n\t_beginContactPortal(portal) {\r\n\t\tthis.portal = portal;\r\n\r\n\t\tif (portal.enable) {\r\n\t\t\tif (portal.script) {\r\n\t\t\t\tconsole.log(\"goto map: \" + portal.getMap() + \"; \" + portal.script);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"goto map: \" + portal.getMap());\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"contact portal: %o\", portal);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {MapPortal} portal */\r\n\t_endContactPortal(portal) {\r\n\t\tif (this.portal == portal) {\r\n\t\t\tthis.portal = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 決定接觸哪一個foothold，忽略牆壁\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} foot_at\r\n\t * @returns {number}\r\n\t */\r\n\t__priority_foothold_contact(foothold, foot_at) {\r\n\t\tif (foothold.is_wall) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif (this.$foothold && this.$foothold.chain != foothold.chain) {\r\n\t\t\tif (this.$foothold != foothold && !this.state.dropDown) {\r\n\t\t\t\t// 接觸多個 foothold 以 \"下面\" 的為主，上坡時以 \"下(上)一個\" 為主\r\n\t\t\t\t// 忽略連續 foothold 重疊的點\r\n\t\t\t\tif (this._foot_at && foot_at.y < this._foot_at.y) {\r\n\t\t\t\t\tif ((!this.$foothold.prev || (this.$foothold.prev == foothold.id && foothold.y1 < this.$foothold.y1)) ||\r\n\t\t\t\t\t\t(!this.$foothold.next || (this.$foothold.next == foothold.id && foothold.y2 < this.$foothold.y2))\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//新的接觸\r\n\t\treturn 2;\r\n\t}\r\n\r\n\t/**\r\n\t * 決定接觸哪一個foothold，忽略牆壁\r\n\t * if foothold is wall then return true\r\n\t * @param {Foothold} foothold\r\n\t * @param {b2Vec2} foot_at\r\n\t */\r\n\t_which_foothold_contact(foothold, foot_at) {\r\n\t\tif (foothold.is_wall) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet priority = this.__priority_foothold_contact(foothold, foot_at);\r\n\t\tif (priority > 0) {\r\n\t\t\tif (!this._foothold_priority || priority >= this._foothold_priority) {\r\n\t\t\t\tthis._foothold = foothold;\r\n\t\t\t\tthis._foot_at = foot_at.Clone();\r\n\t\t\t\tthis._foothold_priority = priority;\r\n\t\t\t\t//this.sticky(foot_at);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor (let fc of this._foot_contact_list) {\r\n\t\t\t\t\tif (foothold == fc.foothold) {\r\n\t\t\t\t\t\tfc.priority = priority;\r\n\t\t\t\t\t\tfc.position = foot_at;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet foot_contact = new FootContact(foothold, foot_at, priority);\r\n\t\t\t\tthis._foot_contact_list.push(foot_contact);\r\n\t\t\t\tthis._foot_contact_list.sort((a, b) => a.priority - b.priority);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Vec2} anchor\r\n\t */\r\n\tsticky(anchor) {\r\n\t\t/** @type {World} */\r\n\t\tconst world = this.body.m_world;\r\n\r\n\t\tworld.onceUnlock(() => {\r\n\t\t\tif (this.$sticky_pj) {\r\n\t\t\t\treturn;\r\n\r\n\t\t\t\tworld.DestroyJoint(this.$sticky_pj);\r\n\t\t\t}\r\n\r\n\t\t\t//this.setPosition(anchor.x, anchor.y);\r\n\r\n\t\t\tlet pjd = new b2PrismaticJointDef();\r\n\t\t\tpjd.Initialize(world.mapBound_body, this.body, anchor, new b2Vec2(0, 1));\r\n\t\t\tif (0) {\r\n\t\t\t\tpjd.bodyA = world.mapBound_body;\r\n\t\t\t\tpjd.bodyB = this.foot_walk;//this.body;\r\n\t\t\t\t//pjd.localAnchorA.Set(0, 0);\r\n\t\t\t\t//pjd.localAnchorB.Set(0, 0);\r\n\t\t\t\tpjd.localAxisA.Set(0, 1);\r\n\t\t\t\t//pjd.referenceAngle = 0;\r\n\t\t\t}\r\n\t\t\tpjd.lowerTranslation = 0;\r\n\t\t\tpjd.upperTranslation = 0;\r\n\t\t\tpjd.enableLimit = true;\r\n\t\t\tpjd.maxMotorForce = this._getMass() * 1000;\r\n\r\n\t\t\t/** @type {b2PrismaticJoint} */\r\n\t\t\tlet pj = world.CreateJoint(pjd);\r\n\r\n\t\t\tthis.$sticky_pj = pj;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {boolean}\r\n\t */\r\n\tisDrop() {\r\n\t\treturn this.state.dropDown || this.state._drop;\r\n\t}\r\n\r\n\t_endContactFoothold() {\r\n\t\tfor (let i = 0; i < this._endContactFootholdList.length; ++i) {\r\n\t\t\tlet fh = this._endContactFootholdList[i];\r\n\r\n\t\t\tif (fh == this._$fallEdge) {\r\n\t\t\t\tthis._$fallEdge = null;\r\n\t\t\t}\r\n\t\t\telse if (fh == this._foothold) {\r\n\t\t\t\tthis._foothold = null;\r\n\t\t\t\tthis._foot_at = null;\r\n\t\t\t}\r\n\t\t\t//else if (fh.id == this._foothold.id) {\r\n\t\t\t//\tthis._foothold = null;\r\n\t\t\t//\tthis._foot_at = null;\r\n\t\t\t//}\r\n\r\n\t\t\tif (this.$foothold && fh == this.$foothold) {\r\n\t\t\t\tthis.prev_$fh = this.$foothold;\r\n\t\t\t\tthis.$foothold = null;\r\n\t\t\t}\r\n\t\t\tif (this.leave_$fh && this.leave_$fh == fh) {\r\n\t\t\t\tthis.leave_$fh = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._endContactFootholdList.length = 0;//clear\r\n\t}\r\n\r\n\t/**\r\n\t * before world::step\r\n\t * @param {number} stamp\r\n\t */\r\n\tStep(stamp) {\r\n\t\t// prepare contact\r\n\t\tthis.state._drop = false;\r\n\t\tthis._foothold = null;\r\n\t\tthis._foot_at = null;\r\n\r\n\t\t// apply state\r\n\t\tif (this.state.ladder) {\r\n\t\t\tthis.state.jump = false;\r\n\t\t\tthis.state.jump_count = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state._begin_jump) {\r\n\t\t\t\tconst mass = this._getMass();\r\n\t\t\t\tconst force = new b2Vec2(0, -mass * this.jump_force);\r\n\t\t\t\tthis.body.ApplyForceToCenter(force);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.knockback > 0) {\r\n\t\t\t\tthis.state.knockback -= stamp;\r\n\r\n\t\t\t\tif (this.state.knockback > 0) {\r\n\t\t\t\t\tthis.state.outOfControl = true;\r\n\t\t\t\t\tthis.walker.EnableMotor(false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.knockback = 0;\r\n\t\t\t\t\tthis.state.outOfControl = false;\r\n\t\t\t\t\tthis.walker.EnableMotor(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.state.invincible > 0) {\r\n\t\t\t\tthis.state.invincible -= stamp;\r\n\t\t\t\tif (this.state.invincible > 0) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.invincible = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.state.portal_cooldown) {\r\n\t\t\t\tthis.state.portal_cooldown -= stamp;\r\n\t\t\t\tif (this.state.portal_cooldown > 0) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.portal_cooldown = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * after world::step\r\n\t */\r\n\tAfterStep() {\r\n\t\t//this._endContactFoothold();\r\n\r\n\t\tif (this.state.ladder) {\r\n\t\t\tif (this.$ladder_pj) {\r\n\t\t\t\tconst upper = this.$ladder_pj.GetUpperLimit();\r\n\t\t\t\tconst lower =this.$ladder_pj.GetLowerLimit();\r\n\t\t\t\tconst translation = this.$ladder_pj.GetJointTranslation();\r\n\r\n\t\t\t\tif (this.state.ladder_move_dir > 0 && translation > upper) {//down\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.state.ladder_move_dir < 0 && translation < lower) {//up\r\n\t\t\t\t\tthis.useLadder(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this.state.dropDown) {\r\n\t\t\t\tif (this.body.m_awakeFlag && this.foot_walk.m_awakeFlag) {\r\n\t\t\t\t\tthis.$foothold = this._foothold;//set or clear\r\n\t\t\t\t}\r\n\t\t\t\tif (!this._foothold && this._foot_contact_list.length) {//目前沒用，永遠不會被執行 ??\r\n\t\t\t\t\tlet max = this._foot_contact_list.pop();\r\n\t\t\t\t\tthis.$foothold = max.foothold;\r\n\t\t\t\t\tthis._foothold = max.foothold;\r\n\t\t\t\t\tthis._foot_at = max.position;\r\n\t\t\t\t\tthis._foothold_priority = max.priority;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.$foothold) {\r\n\t\t\t\t//this.body.SetAwake(false);\r\n\t\t\t\t//this.foot_walk.SetAwake(false);\r\n\r\n\t\t\t\tthis.state.jump = false;\r\n\t\t\t\tthis.state.jump_count = 0;\r\n\t\t\t\tif (this.$foothold == this._foothold) {\r\n\t\t\t\t\t//console.log(\"stable contact\");\r\n\t\t\t\t\t//debugger;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._foot_contact_list.length = 0;\r\n\r\n\t\t\t\tthis.state.jump = true;\r\n\t\t\t\tthis.state._begin_jump = false;\r\n\t\t\t\t\r\n\t\t\t\tif (!this._foothold) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//console.log(\"no stable contact\");\r\n\t\t\t\t\t//debugger;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tgetLayer() {\r\n\t\tlet layer = this.$foothold ? this.$foothold.layer : (this.prev_$fh ? this.prev_$fh.layer : (this.leave_$fh ? this.leave_$fh.layer : 5));\r\n\t\treturn this.state.ladder ? (layer + 1) : layer;\r\n\t}\r\n}\r\n\r\nclass PCharacter extends PCharacterBase {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tthis.chara = null;\r\n\t}\r\n\r\n\t/**\r\n\t * need set this.state.outOfControl = true\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tforceMove(moveX, moveY) {\r\n\t\t//TODO: calc move\r\n\t\tconst mass = this._getMass();\r\n\t\tconst move = new b2Vec2(moveX * mass, moveY * mass);\r\n\t\tthis.body.ApplyLinearImpulseToCenter(move);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t * @param {number} [kbTime=1000] - knockback time, unit is millisecond\r\n\t */\r\n\tknockback(moveX, moveY, kbTime = 1000) {\r\n\t\tconst front = this.state.front;\r\n\t\tlet fx, fy;\r\n\t\t\r\n\t\tfx = -moveX * front;\r\n\t\t//fy = this.state.jump ? moveY : -moveY;\r\n\t\tfy = -moveY;\r\n\r\n\t\tthis.forceMove(fx, fy);\r\n\t\tthis.state.knockback = kbTime;\r\n\t\tthis.state.outOfControl = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\t_create_anchor(world) {\r\n\t\tlet md = new b2MouseJointDef();\r\n\t\tmd.bodyA = world.ground.bodies[0];\r\n\t\tmd.bodyB = this.body;\r\n\t\tmd.target.Copy(this.getPosition());\r\n\t\tmd.maxForce = 1000 * this._getMass();\r\n\t\treturn world.CreateJoint(md);\r\n\t}\r\n\r\n\t/**\r\n\t * no anchor\r\n\t * experimental\r\n\t * @param {CharacterMoveElem} moveElem\r\n\t */\r\n\tmoveTo(moveElem) {\r\n\t\tconst body = this.body;\r\n\r\n\t\tif (moveElem.elapsed == 0) {\r\n\t\t\tbody.ConstantVelocityWorldCenter2(vx, vy);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst ALPHA = 0.7;\r\n\t\t\tconst ONE_MINUS_ALPHA = 1 - ALPHA;\r\n\t\t\tlet dx = moveElem.x - pos.x;\r\n\t\t\tlet dy = moveElem.y - pos.y;\r\n\t\t\tlet sx = dx / (moveElem.elapsed / $gv.FRAME_ELAPSED);//speed = pixel / second\r\n\t\t\tlet sy = dy / (moveElem.elapsed / $gv.FRAME_ELAPSED);\r\n\t\t\tlet oldVel = body.GetLinearVelocity();\r\n\r\n\t\t\tlet vx, vy;\r\n\r\n\t\t\tif (moveElem.pState.jump) {\r\n\t\t\t\tthis.setGravityScale(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setGravityScale(1);\r\n\t\t\t\t\r\n\t\t\t\tif (moveElem.pState.walk || sx) {\r\n\t\t\t\t\tthis.walker.EnableMotor(false);//this.$physics.walker.IsMotorEnabled() == true\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.walker.EnableMotor(true);//keep stop\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (sx) {\r\n\t\t\t\tif (moveElem.vx) {\r\n\t\t\t\t\tif (Math.sign(moveElem.vx) == Math.sign(sx)) {\r\n\t\t\t\t\t\tvx = oldVel.x * ONE_MINUS_ALPHA + moveElem.vx * ALPHA;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvx = oldVel.x * ONE_MINUS_ALPHA + sx * ALPHA;//修正座標\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvx = sx;//修正座標\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvx = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (sy) {\r\n\t\t\t\tif (moveElem.vy) {\r\n\t\t\t\t\tif (Math.sign(moveElem.vy) == Math.sign(sy)) {\r\n\t\t\t\t\t\tvy = oldVel.y * ONE_MINUS_ALPHA + moveElem.vy * ALPHA;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvy = oldVel.y * ONE_MINUS_ALPHA + sy * ALPHA;//修正座標\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvy = sy;//修正座標\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvy = 0;\r\n\t\t\t}\r\n\r\n\t\t\tbody.ConstantVelocityWorldCenter2(vx, vy);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\t/** @type {PPlayer[]} */\r\n\tvar PPlayer_instance_list = window.PPlayer_instance_list || [];\r\n\r\n\tif (PPlayer_instance_list) {\r\n\t\tfor (let pl of PPlayer_instance_list) {\r\n\t\t\tpl.__proto__ = PPlayer.prototype;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PPlayer extends PCharacter {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\tif (module.hot) {\r\n\t\t\tPPlayer_instance_list.push(this);\r\n\r\n\t\t\tconst super_destroy = super._destroy;\r\n\r\n\t\t\tthis._destroy = function () {\r\n\t\t\t\tsuper_destroy();\r\n\t\t\t\tPPlayer_instance_list.splice(PPlayer_instance_list.indexOf(this), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"x\", () => this.getPosition().x.toFixed(3) + \" * \" + $gv.CANVAS_SCALE + \" = \" + (this.getPosition().x * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"y\", () => this.getPosition().y.toFixed(3) + \" * \" + $gv.CANVAS_SCALE + \" = \" + (this.getPosition().y * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"jump\", () => this.state.jump);\r\n\t\twindow.SCREEN_PRINTLN(() => \"_drop\", () => this.state._drop);\r\n\t\twindow.SCREEN_PRINTLN(() => \"ddrop\", () => this.state.dropDown);\r\n\t\twindow.SCREEN_PRINTLN(() => \"$fh\", () => this.$foothold ? this.$foothold.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"$fh->c\", () => this.$foothold ? this.$foothold.chain.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"_fh\", () => this._foothold ? this._foothold.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"p$fh\", () => this.prev_$fh ? this.prev_$fh.id : null);\r\n\t\twindow.SCREEN_PRINTLN(() => \"leave_$fh\", () => this.leave_$fh ? this.leave_$fh.id : null);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"(jump && !$fh)\", () => this.state.jump && !this.$foothold);\r\n\r\n\t\twindow.SCREEN_PRINTLN(() => \"vel.x\", () => (this.body.m_linearVelocity.x * $gv.CANVAS_SCALE).toFixed(0));\r\n\t\twindow.SCREEN_PRINTLN(() => \"vel.y\", () => (this.body.m_linearVelocity.y * $gv.CANVAS_SCALE).toFixed(0));\r\n\t}\r\n\r\n\t/**\r\n\t * before world::step\r\n\t * @param {number} stamp\r\n\t */\r\n\tStep(stamp) {\r\n\t\tsuper.Step(stamp);\r\n\t\t\r\n\t\tif ($gv.input_keyDown['B'] == 1 && !$gv.mouse_dl) {\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y;\r\n\r\n\t\t\tthis.setPosition(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE, true);\r\n\t\t}\r\n\t\telse if ($gv.input_keyDown['B'] > 0 && $gv.mouse_dl) {\r\n\t\t\tconst center = $gv.m_viewRect.center;\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x - center.x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y - center.y;\r\n\r\n\t\t\tthis.body.SetLinearVelocity(new b2Vec2(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE));\r\n\t\t\tthis.foot_walk.SetLinearVelocity(new b2Vec2(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE));\r\n\t\t}\r\n\t\telse if ($gv.mouse_dm && $gv.mouse_dm % 12 == 1) {\r\n\t\t\tconst px = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\t\tconst py = $gv.m_viewRect.top + $gv.mouse_y;\r\n\t\t\tthis.setPosition(px / $gv.CANVAS_SCALE, py / $gv.CANVAS_SCALE, true);\r\n\t\t}\r\n\t}\r\n\r\n\tget renderer() {\r\n\t\tdebugger\r\n\t\treturn this._$renderer;\r\n\t}\r\n\tset renderer(value) {\r\n\t\tthis._$renderer = value;\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\t/** @type {PRemoteCharacter[]} */\r\n\tvar PRemoteCharacter_instance_list = window.PRemoteCharacter_instance_list || [];\r\n\r\n\tif (PRemoteCharacter_instance_list) {\r\n\t\tfor (let pl of PRemoteCharacter_instance_list) {\r\n\t\t\tpl.__proto__ = PRemoteCharacter.prototype;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PRemoteCharacter extends PCharacter {\r\n\tconstructor() {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/** @type {b2MouseJoint} */\r\n\t\tthis._anchor = null;\r\n\r\n\t\tif (module.hot) {\r\n\t\t\tPRemoteCharacter_instance_list.push(this);\r\n\r\n\t\t\tconst super_destroy = super._destroy;\r\n\r\n\t\t\tthis._destroy = function () {\r\n\t\t\t\tsuper_destroy();\r\n\t\t\t\tPRemoteCharacter_instance_list.splice(PRemoteCharacter_instance_list.indexOf(this), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\r\n\t\tif (window.$io) {\r\n\t\t\tthis._anchor = this._create_anchor(world);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.moveTo = super.moveTo;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterMoveElem} moveElem\r\n\t */\r\n\tmoveTo(moveElem) {\r\n\t\t//if (this._anchor) {\r\n\t\t\tthis._anchor.m_targetA.x = moveElem.x;\r\n\t\t\tthis._anchor.m_targetA.y = moveElem.y;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\tsuper.moveTo(moveElem);\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nif (module.hot) {\r\n\tmodule.hot.accept();\r\n}\r\n","﻿\r\nimport { IRenderer } from './IRenderer.js';\r\nimport { PPlayer } from './Physics/PPlayer.js';\r\nimport { NameLabel } from './Renderer/NameLabel.js';\r\n\r\n/**\r\n * Game object\r\n */\r\nexport class SceneObject {\r\n\tconstructor() {\r\n\t\t/** @type {string|number} */\r\n\t\tthis.$objectid = null;\t// playerName or objectID; ?? null if not in scene\r\n\r\n\t\t/** @type {number} - layer id */\r\n\t\tthis.$layer = null;\t//maybe override\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = null;\r\n\t\tObject.defineProperty(this, \"$physics\", {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: false,\r\n\t\t\twritable: true,\r\n\t\t\tvalue: null,\r\n\t\t});\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\t\r\n\t/** create physics, load resource, ... */\r\n\tcreate() {\r\n\t}\r\n\t/** destroy physics, ... */\r\n\tdestroy() {\r\n\t}\r\n\t\r\n\tset enablePhysics(value) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.$physics.enable = value;\r\n\t\t\tthis.$physics.state.freeze = !value;\r\n\t\t}\r\n\t}\r\n\tget enablePhysics() {\r\n\t\tif (this.$physics) {\r\n\t\t\treturn this.$physics.enable;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t_applyState() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tthis.renderer.render(renderer);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tconsole.log(this.$objectid + \" 被 \" + chara.$objectid + \" 攻擊，減少 \" + damage + \" HP\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * if (chara == null) ??\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} name\r\n\t * @param {string} labelStyle\r\n\t */\r\n\t__drawName(renderer, name, labelStyle) {\r\n\t\tif (!$gv.m_display_name_label) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (labelStyle && labelStyle != \"0\") {\r\n\t\t\tlet label = NameLabel.get(labelStyle);\r\n\t\t\tif (label && !label.$promise) {\r\n\t\t\t\tconst crr = this.renderer;\r\n\t\t\t\tlabel.draw(renderer, name, crr.x, crr.y);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.__drawName_default(renderer, name);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} name\r\n\t * @param {string} color\r\n\t * @param {string} bgColor\r\n\t */\r\n\t__drawName_default(renderer, name, color=\"#FFF\", bgColor=\"#000B\") {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst crr = this.renderer;\r\n\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\tctx.textAlign = \"start\";\r\n\r\n\t\tconst r = 2, h = 12;\r\n\t\tconst w = ctx.measureText(name).width + 3;\r\n\t\tconst x = Math.trunc(crr.x/* + crr.tx*/) - w * 0.5;//TODO: crr.tx and crr.ty ??\r\n\t\tconst y = Math.trunc(crr.y/* + crr.ty*/);\r\n\r\n\t\tconst left = x + r;\r\n\t\tconst _left = x;\r\n\t\tconst top = y;\r\n\t\tconst _top = y + r;\r\n\t\tconst _right = x + w;\r\n\t\tconst right = _right + r;\r\n\t\tconst bottom = y + r + h + r;\r\n\t\tconst _bottom = y + r + h;\r\n\r\n\t\tctx.beginPath();\r\n\t\t{\r\n\t\t\tctx.moveTo(left, top);\r\n\r\n\t\t\tctx.lineTo(_right, top);\r\n\t\t\tctx.arcTo(right, top, right, _top, r);\r\n\r\n\t\t\tctx.lineTo(right, _bottom);\r\n\t\t\tctx.arcTo(right, bottom, _right, bottom, r);\r\n\r\n\t\t\tctx.lineTo(left, bottom);\r\n\t\t\tctx.arcTo(_left, bottom, _left, _bottom, r);\r\n\r\n\t\t\tctx.lineTo(_left, _top);\r\n\t\t\tctx.arcTo(_left, top, left, top, r);\r\n\t\t}\r\n\t\tctx.fillStyle = bgColor;\r\n\t\tctx.fill();\r\n\t\t//ctx.strokeStyle = \"#000F\";\r\n\t\t//ctx.stroke();\r\n\r\n\t\tif (0) {//inner\r\n\t\t\tctx.fillStyle = \"yellow\";\r\n\t\t\tctx.strokeStyle = \"yellow\";\r\n\t\t\tctx.beginPath();\r\n\t\t\t{\r\n\t\t\t\tctx.moveTo(left, _top);\r\n\r\n\t\t\t\tctx.lineTo(_right, _top);\r\n\r\n\t\t\t\tctx.lineTo(_right, _bottom);\r\n\r\n\t\t\t\tctx.lineTo(left, _bottom);\r\n\r\n\t\t\t\tctx.closePath();\r\n\t\t\t}\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t\t\r\n\t\tctx.fillStyle = color;\r\n\t\tctx.fillText(name, left, (top + bottom) * 0.5);\r\n\t}\r\n}\r\n\r\n\r\n","﻿\r\nconst box2d = require(\"../../Box2D/build/Box2D/Box2D/Box2D.js\");\r\n\r\nconst { FilterHelper } = require(\"./Filter.js\");\r\n\r\nconst {\r\n\tb2Vec2,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact, b2Manifold, b2ContactImpulse,\r\n\tb2ContactListener\r\n} = box2d;\r\n\r\n\r\nwindow.$box2d = box2d;\r\n\r\nlet b2Vec2_temp = new b2Vec2();\r\n\r\n/** @type {string} */\r\nb2Body.prototype.$type = null;\r\n\r\nb2Body.prototype.Step = function (stamp) {\r\n\tif (this._on_step) {\r\n\t\tfor (let fn of this._on_step) {\r\n\t\t\tfn(stamp);\r\n\t\t}\r\n\t}\r\n}\r\nb2Body.prototype.AfterStep = function (stamp) {\r\n\tif (this._on_after_step) {\r\n\t\tfor (let fn of this._on_after_step) {\r\n\t\t\tfn(stamp);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {function():void} func\r\n */\r\nb2Body.prototype.addStep = function (func) {\r\n\tthis._on_step = this._on_step || [];\r\n\tthis._on_step.push(func);\r\n}\r\n\r\n/**\r\n * @param {function():void} func\r\n */\r\nb2Body.prototype.addAfterStep = function (func) {\r\n\tthis._on_after_step = this._on_after_step || [];\r\n\tthis._on_after_step.push(func);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.SetLinearVelocity2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.SetLinearVelocity(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.ApplyForceToCenter2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.ApplyForceToCenter(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nb2Body.prototype.ApplyLinearImpulseToCenter2 = function (x, y) {\r\n\tb2Vec2_temp.x = x;\r\n\tb2Vec2_temp.y = y;\r\n\tthis.ApplyLinearImpulseToCenter(b2Vec2_temp, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVel)快速加速到'指定速度'(desiredVel)\r\n * @param {b2Vec2} desiredVel\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.Acceleration = function (desiredVel, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, b2Vec2_temp);\r\n\tlet m = this.GetMass();\r\n\tlet ix = m * velChange.x;\r\n\tlet iy = m * velChange.y;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(ix, iy);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVelX)快速加速到'指定速度'(desiredVel)\r\n * @param {number} desiredVelX\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.AccelerationX = function (desiredVelX, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChangeX = desiredVelX - sourceVel.x;\r\n\tlet m = this.GetMass();\r\n\tlet ix = m * velChangeX;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(ix, 0);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * '原速度'(sourceVelY)快速加速到'指定速度'(desiredVel)\r\n * @param {number} desiredVelY\r\n * @param {b2Vec2} sourceVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.AccelerationY = function (desiredVelY, sourceVel, point) {\r\n\tif (!point) {\r\n\t\tpoint = this.GetWorldCenter();\r\n\t}\r\n\r\n\tlet velChangeY = desiredVelY - sourceVel.y;\r\n\tlet m = this.GetMass();\r\n\tlet iy = m * velChangeY;\r\n\r\n\tlet impulse = b2Vec2_temp.Set(0, iy);\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * 等速度運動\r\n * @param {b2Vec2} desiredVel\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocity = function (desiredVel, point) {\r\n\tthis.Acceleration(desiredVel, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * @param {number} desiredVelX\r\n * @param {number} desiredVelY\r\n * @param {number} pointX\r\n * @param {number} pointY\r\n */\r\nb2Body.prototype.ConstantVelocity2 = function (desiredVelX, desiredVelY, pointX, pointY) {\r\n\tconst desiredVel = new b2Vec2(desiredVelX, desiredVelY);\r\n\tconst point = new b2Vec2(pointX, pointY);\r\n\r\n\tconst sourceVel = this.GetLinearVelocity();\r\n\tconst m = this.GetMass();\r\n\r\n\tlet impulse = new b2Vec2();\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, impulse);\r\n\timpulse.x = m * velChange.x;\r\n\timpulse.y = m * velChange.y;\r\n\r\n\tthis.ApplyLinearImpulse(impulse, point, true);\r\n}\r\n\r\n/**\r\n * @param {number} desiredVelX\r\n * @param {number} desiredVelY\r\n */\r\nb2Body.prototype.ConstantVelocityWorldCenter2 = function (desiredVelX, desiredVelY) {\r\n\tconst desiredVel = new b2Vec2(desiredVelX, desiredVelY);\r\n\r\n\tconst sourceVel = this.GetLinearVelocity();\r\n\tconst m = this.GetMass();\r\n\r\n\tlet impulse = new b2Vec2();\r\n\r\n\tlet velChange = b2Vec2.SubVV(desiredVel, sourceVel, impulse);\r\n\timpulse.x = m * velChange.x;\r\n\timpulse.y = m * velChange.y;\r\n\r\n\tthis.ApplyLinearImpulseToCenter(impulse, true);\r\n}\r\n\r\n/**\r\n * 等速度運動 X\r\n * @param{number} desiredVelX\r\n * @param{b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocityX = function (desiredVelX, point) {\r\n\tthis.AccelerationX(desiredVelX, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * 等速度運動 Y\r\n * @param {number} desiredVelY\r\n * @param {b2Vec2} point\r\n */\r\nb2Body.prototype.ConstantVelocityY = function (desiredVelY, point) {\r\n\tthis.AccelerationY(desiredVelY, this.GetLinearVelocity(), point || this.GetWorldCenter());\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.beginContact = function (contact, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.endContact = function (contact, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Manifold} oldManifold\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.preSolve = function (contact, oldManifold, fa, fb) {\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2ContactImpulse} impulse\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nb2Fixture.prototype.postSolve = function (contact, impulse, fa, fb) {\r\n}\r\n\r\n/** @returns {string} */\r\nb2Fixture.prototype.getOwnerID = function () {\r\n\tlet host = this.GetUserData();\r\n\tif (host && host.owner) {\r\n\t\treturn host.owner.id;\r\n\t}\r\n}\r\n\r\nclass FixtureContactListener {\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tbeginContact (contact, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tendContact (contact, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tpreSolve (contact, oldManifold, fa, fb) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2ContactImpulse} impulse\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tpostSolve (contact, impulse, fa, fb) {\r\n\t}\r\n}\r\n\r\n\r\n\r\nmodule.exports = Object.assign(box2d, {\r\n\tFixtureContactListener, FilterHelper\r\n});\r\n","﻿\r\nimport { b2Filter } from \"../../Box2D/build/Box2D/Box2D/Dynamics/b2Fixture\";\r\nimport { b2ContactFilter } from \"../../Box2D/build/Box2D/Box2D/Box2D\";\r\n\r\n\r\n/** @type {{[string]:FilterHelper}} */\r\nlet filter_preset = {\r\n};\r\n\r\nlet next_category = 1;\r\n\r\nexport class FilterHelper extends b2Filter {\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\tignore(categoryName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.maskBits = (this.maskBits & ~preset.categoryBits) >>> 0;\r\n\r\n\t\tpreset.maskBits = (preset.maskBits & ~this.categoryBits) >>> 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\taddCategory(categoryName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.categoryBits = this.categoryBits | preset.categoryBits;\r\n\t}\r\n\r\n\t/**\r\n\t * @template T\r\n\t * @param {T extends keyof filter_preset} categoryName\r\n\t * @param {string} debugName\r\n\t */\r\n\tstatic get(categoryName, debugName) {\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName];\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!preset) {\r\n\t\t\t\tlet msg = \"not found filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\treturn filter_preset.s_default;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (debugName) {\r\n\t\t\tlet debugCategory = filter_preset[\"s_\" + debugName];\r\n\t\t\tconsole.warn(\"filter: \" + debugName + \"%o\", debugCategory);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn preset;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} categoryName\r\n\t */\r\n\tstatic registerCategory(categoryName) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (filter_preset[\"s_\" + categoryName]) {\r\n\t\t\t\tlet msg = \"exist filter preset: \" + categoryName;\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (next_category > 0x80000000) {\r\n\t\t\t\tlet msg = \"no empty filter preset\";\r\n\t\t\t\tconsole.error(msg);\r\n\t\t\t\talert(msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet preset = filter_preset[\"s_\" + categoryName] = new FilterHelper();\r\n\r\n\t\tpreset.groupIndex = 0;\r\n\t\tpreset.categoryBits = next_category;\r\n\t\tpreset.maskBits = 0xFFFFFFFF;//all\r\n\r\n\t\tpreset.name = categoryName;\r\n\r\n\t\tnext_category = next_category << 1;\r\n\r\n\t\treturn preset;\r\n\t}\r\n\r\n\tstatic get next_category() {\r\n\t\treturn filter_preset;\r\n\t}\r\n\tstatic get filter_preset() {\r\n\t\treturn filter_preset;\r\n\t}\r\n}\r\n\r\nconst filter_table = [\r\n/*                 default  body  foothold  foot  bullet  pvp_bullet  mob  mob_bullet  portal  ladder  map_obj  map_border */\r\n/* default */    [ 1,       1,    1,        1,    1,      1,          1,   1,          1,      1,      1,       1,     ],\r\n/* body */       [ 1,       0,    0,        0,    0,      1,          1,   1,          0,      1,      1,       1,     ],\r\n/* foothold */   [ 1,       0,    0,        1,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* foot */       [ 1,       0,    1,        0,    0,      0,          0,   0,          1,      0,      0,       1,     ],\r\n/* bullet */     [ 1,       0,    0,        0,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/* pvp_bullet */ [ 1,       1,    0,        0,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/* mob */        [ 1,       1,    0,        0,    1,      1,          0,   0,          0,      0,      0,       0,     ],\r\n/* mob_bullet */ [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* portal */     [ 1,       0,    0,        1,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* ladder */     [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* map_obj */    [ 1,       1,    0,        0,    0,      0,          0,   0,          0,      0,      0,       0,     ],\r\n/* map_border */ [ 1,       1,    0,        1,    0,      0,          1,   0,          0,      0,      0,       0,     ],\r\n/*  */\r\n];\r\n\r\n(function init() {\r\n\tlet filter_list = [\r\n\t\tFilterHelper.registerCategory(\"default\"),\r\n\t\tFilterHelper.registerCategory(\"body\"),\r\n\t\tFilterHelper.registerCategory(\"foothold\"),\r\n\t\tFilterHelper.registerCategory(\"foot\"),\r\n\t\tFilterHelper.registerCategory(\"bullet\"),\r\n\t\tFilterHelper.registerCategory(\"pvp_bullet\"),\r\n\t\tFilterHelper.registerCategory(\"mob\"),\r\n\t\tFilterHelper.registerCategory(\"mob_bullet\"),\r\n\t\tFilterHelper.registerCategory(\"portal\"),\r\n\t\tFilterHelper.registerCategory(\"ladder\"),\r\n\t\tFilterHelper.registerCategory(\"map_obj\"),\r\n\t\tFilterHelper.registerCategory(\"map_border\"),\r\n\t];\r\n\r\n\tfor (let i = 0; i < filter_table.length; ++i) {\r\n\t\tfor (let j = 0; j < filter_table[i].length; ++j) {\r\n\t\t\tif (!filter_table[i][j]) {\r\n\t\t\t\tfilter_list[i].maskBits = (filter_list[i].maskBits & ~(1 << j)) >>> 0;//uint32\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n\r\n(function test() {\r\n\tlet contactFilter = new b2ContactFilter();\r\n\t\r\n\tfunction Fixture(filterName) {\r\n\t\treturn {\r\n\t\t\tGetFilterData: () => FilterHelper.get(filterName),\r\n\t\t\tGetBody: () => { return {\r\n\t\t\t\tGetType: () => 2,\r\n\t\t\t\tShouldCollideConnected: () => true,\r\n\t\t\t} },\r\n\t\t};\r\n\t}\r\n\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"body\"), Fixture(\"ladder\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"ladder\"), Fixture(\"body\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"foot\"), Fixture(\"portal\"))) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!contactFilter.ShouldCollide(Fixture(\"portal\"), Fixture(\"foot\"))) {\r\n\t\tdebugger;\r\n\t}\r\n})();\r\n\r\n","﻿\r\nimport {\r\n\tb2Vec2, b2AABB,\r\n\tb2World,\r\n\tb2Body,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2EdgeShape, b2PolygonShape, b2CircleShape,\r\n\tb2MouseJointDef,\r\n\tb2ContactListener, b2Contact,\r\n\tb2ParticleSystemDef, b2ParticleSystem, b2ParticleFlag, b2ParticleGroupDef\r\n} from \"./Physics.js\";\r\n\r\nimport DebugDraw from \"./DebugDraw.js\";\r\nimport { Ground } from \"./Ground.js\";\r\nimport { LadderRope, MapLadderRopeLoader } from \"./LadderRope.js\";\r\nimport { PPlayer, PRemoteCharacter } from \"./PPlayer.js\";\r\nimport { PMob } from \"./PMob.js\";\r\n\r\nimport { CharacterAnimationBase } from \"../Renderer/CharacterRenderer\";\r\n\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nwindow.$gravityAcc = 2000;\r\n\r\nwindow.$positionIterations = 3;\r\nwindow.$velocityIterations = 8;\r\nwindow.$particleIterations = 1;\r\n\r\nwindow.$particleRadius = 10;//unit is pixel\r\n\r\nexport const GRAVITY = new b2Vec2(0, window.$gravityAcc / $gv.CANVAS_SCALE);\r\n\r\n\r\nclass ContactListener extends b2ContactListener {\r\n\t/** @param {b2Contact} contact */\r\n\tBeginContact(contact) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.beginContact.call(fa.m_userData, contact, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.beginContact.call(fb.m_userData, contact, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/** @param {b2Contact} contact */\r\n\tEndContact(contact) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.endContact.call(fa.m_userData, contact, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.endContact.call(fb.m_userData, contact, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t */\r\n\tPreSolve(contact, oldManifold) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.preSolve.call(fa.m_userData, contact, oldManifold, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.preSolve.call(fb.m_userData, contact, oldManifold, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2ContactImpulse} impulse\r\n\t */\r\n\tPostSolve(contact, impulse) {\r\n\t\tconst fa = contact.m_fixtureA;\r\n\t\tconst fb = contact.m_fixtureB;\r\n\t\tconst childIndexA = contact.m_indexA;\r\n\t\tconst childIndexB = contact.m_indexB;\r\n\r\n\t\tfa.postSolve.call(fa.m_userData, contact, impulse, fa, fb, childIndexA, childIndexB);\r\n\t\tfb.postSolve.call(fb.m_userData, contact, impulse, fb, fa, childIndexB, childIndexA);\r\n\t}\r\n}\r\n\r\nexport class World extends b2World {\r\n\tconstructor() {\r\n\t\tsuper(GRAVITY);\r\n\r\n\t\t/** @type {DebugDraw} */\r\n\t\tthis.m_debugDraw = $gv.m_debugDraw;\r\n\t\tthis.SetDebugDraw(this.m_debugDraw);\r\n\r\n\t\tthis.SetContactListener(new ContactListener());\r\n\r\n\t\t//if (!window.io) {\r\n\t\t//\tthis.player = null;\r\n\t\t//\tthis._player_rebirth();\r\n\t\t//\tthis.player.setPosition(0, 0, true);\r\n\t\t//}\r\n\r\n\t\tthis.ground = new Ground();\r\n\r\n\t\t/** @type {LadderRope[]} */\r\n\t\tthis.ladderRope = [];\r\n\t\t\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.mapBound_body = null;\r\n\t\t\r\n\t\tthis.stop = false;\r\n\t\t\r\n\t\tthis.$_mouseJoint = null;\r\n\r\n\t\t/** @type {(function():void)[]} */\r\n\t\tthis._onceAfterStep = [];\r\n\r\n\t\t/** @type {b2Body[]} */\r\n\t\tthis._destryBodyList = [];\r\n\r\n\t\tthis._DestroyBody = this.DestroyBody;\r\n\r\n\t\t/**\r\n\t\t * @param {b2Body} b\r\n\t\t */\r\n\t\tthis.DestroyBody = b => {\r\n\t\t\tif (this.m_locked) {\r\n\t\t\t\tthis._destryBodyList.push(b);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._DestroyBody(b);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.draw_foothold_path_count = 1;\r\n\t}\r\n\r\n\t$test_b2ParticleSystem() {\r\n\t\tconst particleType = b2ParticleFlag.b2_elasticParticle;//b2_waterParticle;\r\n\t\tconst particleSystemDef = new b2ParticleSystemDef();\r\n\t\t\r\n\t\t/** @type {b2ParticleSystem} */\r\n\t\tthis.m_particleSystem = this.CreateParticleSystem(particleSystemDef);\r\n\t\t\r\n\t\tthis.m_particleSystem.SetGravityScale(0);\r\n\t\tthis.m_particleSystem.SetRadius(10 / $gv.CANVAS_SCALE);\r\n\t\tthis.m_particleSystem.SetDamping(0.2);\r\n\t\t{\r\n\t\t\tconst shape = new b2CircleShape();\r\n\t\t\tshape.m_p.Set(0, 2);\r\n\t\t\tshape.m_radius = 3;\r\n\t\t\tconst pd = new b2ParticleGroupDef();\r\n\t\t\tpd.flags = particleType;\r\n\t\t\tpd.shape = shape;\r\n\t\t\tconst group = this.m_particleSystem.CreateParticleGroup(pd);\r\n\t\t\tif (pd.flags & b2ParticleFlag.b2_colorMixingParticle) {\r\n\t\t\t\tthis.ColorParticleGroup(group, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow.m_particleSystem = this.m_particleSystem;\r\n\t\t\r\n\t\tthis.$vbo_ps = null;\r\n\t}\r\n\r\n\t/**\r\n\t * after load map\r\n\t */\r\n\tasync load(map_raw_data) {\r\n\t\tthis.ground.load(map_raw_data, this);\r\n\t\tthis.ladderRope = MapLadderRopeLoader.load(map_raw_data, this);\r\n\t}\r\n\tunload() {\r\n\t\tif (this.IsLocked()) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.error(\"world is locked, world can not unload\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.ground.unload(this);\r\n\t\t\tthis.ladderRope.length = 0;\r\n\t\t\tthis.DestroyBody(this.mapBound_body);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {MapMob} mapMob\r\n\t */\r\n\tcreateMob(mapMob) {\r\n\t\tlet mob = new PMob(mapMob);\r\n\t\tmob._create(this);\r\n\t\treturn mob;\r\n\t}\r\n\tdestroyMob(mapMob) {\r\n\t\t//if (this != mapMob.$physics) {\r\n\t\t//\tdebugger;\r\n\t\t//\treturn false;\r\n\t\t//}\r\n\t\t\r\n\t\tmapMob.$physics._destroy(this);\r\n\t\tmapMob.$physics = null;\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tcreateNpc(mapNpc) {\r\n\t\treturn null;\r\n\t}\r\n\tdestroyNpc(mapNpc) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tcreatePortal(portal) {\r\n\t\tconst rect = portal.compute_rectangle(0);\r\n\t\tif (rect) {\r\n\t\t\tconst width = rect.width / 2 / $gv.CANVAS_SCALE * 0.4;\r\n\t\t\tconst height = rect.height / 2 / $gv.CANVAS_SCALE * 0.2;\r\n\r\n\t\t\tlet bdef = new b2BodyDef();\r\n\t\t\tlet fdef = new b2FixtureDef();\r\n\t\t\tlet shape;\r\n\r\n\t\t\tfdef.filter.Copy(FilterHelper.get(\"portal\"));\r\n\r\n\t\t\tbdef.userData = portal;\r\n\t\t\tbdef.type = b2BodyType.b2_staticBody;//b2_staticBody//b2_kinematicBody//b2_dynamicBody\r\n\t\t\tbdef.position.Set(\r\n\t\t\t\tportal.x / $gv.CANVAS_SCALE,\r\n\t\t\t\tportal.y / $gv.CANVAS_SCALE);\r\n\r\n\t\t\tlet body = this.CreateBody(bdef);\r\n\t\t\tbody.$type = \"portal\";\r\n\r\n\t\t\tshape = new b2PolygonShape();\r\n\r\n\t\t\tif (window.MAP_PORTAL_FULL_SIZE) {\r\n\t\t\t\tshape.SetAsBox(\r\n\t\t\t\t\trect.width / 2 / $gv.CANVAS_SCALE,\r\n\t\t\t\t\trect.height / 2 / $gv.CANVAS_SCALE,\r\n\t\t\t\t\tnew b2Vec2(-portal.textures[0].x / $gv.CANVAS_SCALE, -portal.textures[0].y / $gv.CANVAS_SCALE),\r\n\t\t\t\t\t0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.SetAsBox(\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\theight,\r\n\t\t\t\t\tnew b2Vec2(0, -height),\r\n\t\t\t\t\t0);\r\n\t\t\t}\r\n\r\n\t\t\tfdef.isSensor = true;\r\n\t\t\tfdef.shape = shape;\r\n\t\t\tfdef.filter = FilterHelper.get(\"portal\");\r\n\t\t\tfdef.userData = portal;\r\n\t\t\tfdef.$type = \"portal\";\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\tportal.body = body;\r\n\r\n\t\t\treturn body;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Rectangle} rect\r\n\t */\r\n\t_createMapBound(rect) {\r\n\t\tlet { left, top, right, bottom } = rect;\r\n\t\t\r\n\t\tleft /= $gv.CANVAS_SCALE;\r\n\t\tright /= $gv.CANVAS_SCALE;\r\n\t\ttop /= $gv.CANVAS_SCALE;\r\n\t\tbottom /= $gv.CANVAS_SCALE;\r\n\t\t\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\t//bdef.type = b2BodyType.b2_dynamicBody;\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2EdgeShape();\r\n\r\n\t\tfdef.$type = \"MapBorder\";\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"map_border\"));\r\n\r\n\t\tlet bb = this.CreateBody(bdef);\r\n\t\tbb.$type = \"MapBorder\";\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, top);\r\n\t\tshape.m_vertex2.Set(right, top);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, bottom);\r\n\t\tshape.m_vertex2.Set(right, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tshape.m_vertex1.Set(left, top);\r\n\t\tshape.m_vertex2.Set(left, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\r\n\t\tshape.m_vertex1.Set(right, top);\r\n\t\tshape.m_vertex2.Set(right, bottom);\r\n\t\tbb.CreateFixture(fdef);\r\n\t\t\r\n\t\tif (this.player) {\r\n\t\t\tthis.player.setPosition((right + left) * 0.5, (bottom + top) * 0.5, true);\r\n\t\t}\r\n\r\n\t\tthis.mapBound_body = bb;\r\n\t}\r\n\r\n\t//_player_rebirth() {\r\n\t//\twindow.$player = this.player = new PPlayer(window.chara ? window.chara.renderer:null);\r\n\t//\tthis.player._create(this);\r\n\t//\r\n\t//\tdelete this.player.renderer;\r\n\t//\tObject.defineProperty(this.player, \"renderer\", {\r\n\t//\t\tget: function () {\r\n\t//\t\t\treturn window.chara ? window.chara.renderer : null;\r\n\t//\t\t}\r\n\t//\t});\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {SceneObject} sceneObject\r\n\t * @param {CharacterAnimationBase} renderer\r\n\t */\r\n\t$createPlayer(sceneObject, renderer) {\r\n\t\tif (!sceneObject || !renderer) {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"$createPlayer(sceneObject, renderer)\");\r\n\t\t}\r\n\t\tlet player = new PPlayer();\r\n\r\n\t\tplayer._create(this);\r\n\r\n\t\t//init ?\r\n\t\tplayer.chara = sceneObject;\r\n\t\tplayer.renderer = renderer;//??\r\n\r\n\t\tthis.player = player;\r\n\r\n\t\treturn player;\r\n\t}\r\n\t/**\r\n\t * @param {SceneObject} sceneObject\r\n\t * @param {CharacterAnimationBase} renderer\r\n\t */\r\n\t$createRemotePlayer(sceneObject, renderer) {\r\n\t\tif (!sceneObject || !renderer) {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"$createRemotePlayer(sceneObject, renderer)\");\r\n\t\t}\r\n\t\tlet player = new PRemoteCharacter();\r\n\r\n\t\tplayer._create(this);\r\n\r\n\t\t//init ?\r\n\t\tplayer.renderer = renderer;\r\n\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {function():void} func\r\n\t */\r\n\tonceUnlock(func) {\r\n\t\tif (this.m_locked) {\r\n\t\t\tthis._onceAfterStep.push(func);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfunc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * do once AfterStep\r\n\t * @param {function():void} func\r\n\t */\r\n\tdoAfterStep(func) {\r\n\t\tthis._onceAfterStep.push(func);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseDown(p) {\r\n\t\tif (this.$_mouseJoint != null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make a small box.\r\n\t\tlet aabb = new b2AABB();\r\n\t\tlet d = new b2Vec2();\r\n\t\td.Set(0.001, 0.001);\r\n\t\tb2Vec2.SubVV(p, d, aabb.lowerBound);\r\n\t\tb2Vec2.AddVV(p, d, aabb.upperBound);\r\n\r\n\t\tlet that = this;\r\n\t\tlet hit_fixture = null;\r\n\r\n\t\t// Query the world for overlapping shapes.\r\n\t\tthis.QueryAABB(function (fixture) {\r\n\t\t\tlet body = fixture.GetBody();\r\n\t\t\tif (body.GetType() != b2BodyType.b2_staticBody) {\r\n\t\t\t\tlet inside = fixture.TestPoint(p);\r\n\t\t\t\tif (inside) {\r\n\t\t\t\t\thit_fixture = fixture;\r\n\r\n\t\t\t\t\t// We are done, terminate the query.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Continue the query.\r\n\t\t\treturn true;\r\n\t\t}, aabb);\r\n\r\n\t\tif (hit_fixture) {\r\n\t\t\tlet body = hit_fixture.GetBody();\r\n\t\t\tlet md = new b2MouseJointDef();\r\n\t\t\tmd.bodyA = this.ground.bodies[0];\r\n\t\t\tmd.bodyB = body;\r\n\t\t\tmd.target.Copy(p);\r\n\t\t\tmd.maxForce = 1000 * body.GetMass();\r\n\t\t\tthis.$_mouseJoint = this.CreateJoint(md);\r\n\t\t\tbody.SetAwake(true);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseUp(p) {\r\n\t\tif (this.$_mouseJoint) {\r\n\t\t\tthis.DestroyJoint(this.$_mouseJoint);\r\n\t\t\tthis.$_mouseJoint = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {b2Vec2} p\r\n\t */\r\n\t$_mouseMove(p) {\r\n\t\tif (this.$_mouseJoint) {\r\n\t\t\tthis.$_mouseJoint.SetTarget(p);\r\n\t\t}\r\n\t}\r\n\t\r\n\t$_onMouseEvent() {\r\n\t\tconst x = ($gv.m_viewRect.left + $gv.mouse_x) / $gv.CANVAS_SCALE;\r\n\t\tconst y = ($gv.m_viewRect.top + $gv.mouse_y) / $gv.CANVAS_SCALE;\r\n\t\tconst p = new b2Vec2(x, y);\r\n\t\t\r\n\t\tif ($gv.mouse_dl) {\r\n\t\t\tthis.$_mouseDown(p);\r\n\t\t}\r\n\t\tif ($gv.mouse_ul) {\r\n\t\t\t$gv.mouse_ul = 0;\r\n\t\t\tthis.$_mouseUp(p);\r\n\t\t}\r\n\t\tif ($gv.mouse_move) {\r\n\t\t\t$gv.mouse_move = 0;\r\n\t\t\tthis.$_mouseMove(p);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.stop) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.$_onMouseEvent();\r\n\t\t\r\n\t\tfor (let body = this.GetBodyList(); body; body = body.m_next) {\r\n\t\t\tbody.Step(stamp);\r\n\t\t}\r\n\r\n\t\tsuper.Step(1 / $gv.MAX_FPS, window.$velocityIterations, window.$positionIterations, window.$particleIterations);\r\n\t\tfor (let body = this.GetBodyList(); body; body = body.m_next) {\r\n\t\t\tbody.AfterStep(stamp);\r\n\t\t}\r\n\t\tif (this._onceAfterStep) {\r\n\t\t\tthis._onceAfterStep.forEach(f => f());\r\n\t\t\tthis._onceAfterStep.length = 0;\r\n\t\t}\r\n\t\tif (this._destryBodyList) {\r\n\t\t\tthis._destryBodyList.forEach(b => this._DestroyBody(b));\r\n\t\t\tthis._destryBodyList.length = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = window.chara ? window.chara.$physics : this.player;\r\n\r\n\t\tif ($gv.m_display_physics_debug) {\r\n\t\t\tconst debugDraw = this.m_debugDraw;\r\n\t\t\tthis.m_debugDraw.m_ctx = ctx;\r\n\r\n\t\t\tconst w = ctx.canvas.width;\r\n\t\t\tconst h = ctx.canvas.height;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t\r\n\t\t\tctx.scale(debugDraw.canvasScale, debugDraw.canvasScale);\r\n\t\t\tctx.lineWidth /= debugDraw.canvasScale;\r\n\r\n\t\t\t// apply camera\r\n\t\t\tctx.scale(debugDraw.viewZoom, debugDraw.viewZoom);\r\n\t\t\tctx.lineWidth /= debugDraw.viewZoom;\r\n\r\n\t\t\tthis.DrawDebugData();\r\n\r\n\t\t\t//display player's front\r\n\t\t\tif (player && player.body) {\r\n\t\t\t\tconst pos = player.getPosition();\r\n\t\t\t\tctx.fillStyle = \"#F00A\";\r\n\t\t\t\t\r\n\t\t\t\t//test debugDraw.canvasScale\r\n\t\t\t\tif (player.state.front > 0) {\r\n\t\t\t\t\tctx.fillRect(pos.x, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse if (player.state.front < 0) {\r\n\t\t\t\t\tctx.fillRect(pos.x - 1, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tctx.fillRect(pos.x - 0.5, pos.y, 1, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\r\n\t\tif ($gv.m_display_particleSystem) {\r\n\t\t\tif (renderer.gl) {\r\n\t\t\t\t/** @type {WebGLRenderingContext} */\r\n\t\t\t\tconst gl = this.gl;\r\n\r\n\t\t\t\tif (!this.$vbo_ps) {\r\n\t\t\t\t\tlet vbo = gl.createBuffer();\r\n\r\n\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbo);\r\n\r\n\t\t\t\t\tconst count = this.m_particleSystem.GetParticleCount();\r\n\t\t\t\t\tconst buf = this.m_particleSystem.GetPositionBuffer();\r\n\r\n\t\t\t\t\tlet vertices = new Float32Array(count * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < count; i += 2) {\r\n\t\t\t\t\t\tvertices[i + 0] = buf[i].x;\r\n\t\t\t\t\t\tvertices[i + 1] = buf[i].y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n\r\n\t\t\t\t\tthis.$vbo_ps = vbo;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst count = this.m_particleSystem.GetParticleCount();\r\n\t\t\t\t\tconst buf = this.m_particleSystem.GetPositionBuffer();\r\n\r\n\t\t\t\t\tlet vertices = new Float32Array(count * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < count; i += 2) {\r\n\t\t\t\t\t\tvertices[i + 0] = buf[i].x;\r\n\t\t\t\t\t\tvertices[i + 1] = buf[i].y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let group = this.m_particleSystem.m_groupList; group; group = group.m_next) {\r\n\t\t\t\t\tlet particleCount = group.GetParticleCount();\r\n\t\t\t\t\tlet instanceOffset = group.GetBufferIndex();\r\n\t\t\t\t\tgl.drawArrays(gl.POINTS, instanceOffset, particleCount);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (ctx) {\r\n\t\t\t\tif ($gv.func) {\r\n\t\t\t\t\t$gv.func.call(this, ctx, renderer);\r\n\t\t\t\t\t//$gv.func = function (ctx) {\r\n\t\t\t\t\t//\tctx = ctx || $engine.ctx;\r\n\t\t\t\t\t//\tconst vertices = this.m_particleSystem.m_positionBuffer.data;\r\n\t\t\t\t\t//\tconst colorBuffer = this.m_particleSystem.m_colorBuffer.data;\r\n\t\t\t\t\t//\tconst weightBuffer = this.m_particleSystem.m_weightBuffer;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\tlet minWeight = Math.min.apply(this, weightBuffer.slice(0, 128));\r\n\t\t\t\t\t//\tlet maxWeight = Math.max.apply(this, weightBuffer.slice(0, 128)) - minWeight;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\tif (vertices.length > 2) {\r\n\t\t\t\t\t//\t\tlet length = vertices.length / 2;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\t\tctx.fillStyle = \"#0747\";\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\t\tfor (let i = 0; i < length - 2; i += 1) {\r\n\t\t\t\t\t//\t\t\tctx.beginPath();\r\n\t\t\t\t\t//\t\t\tctx.moveTo(vertices[i + 0].x * $gv.CANVAS_SCALE, vertices[i + 0].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.lineTo(vertices[i + 1].x * $gv.CANVAS_SCALE, vertices[i + 1].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.lineTo(vertices[i + 2].x * $gv.CANVAS_SCALE, vertices[i + 2].y * $gv.CANVAS_SCALE);\r\n\t\t\t\t\t//\t\t\tctx.fillStyle = `hsla(87deg,${(weightBuffer[i] / maxWeight * 100).toFixed(0)}%,${(weightBuffer[i] / maxWeight * 50).toFixed(0)}%,${(weightBuffer[i] / maxWeight / 2).toFixed(2)})`\r\n\t\t\t\t\t//\t\t\t//ctx.fillStyle = colorBuffer[i].MakeStyleString();\r\n\t\t\t\t\t//\t\t\tctx.fill();\r\n\t\t\t\t\t//\t\t}\r\n\t\t\t\t\t//\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst vertices = this.m_particleSystem.m_positionBuffer.data;\r\n\t\t\t\t\tconst colorBuffer = this.m_particleSystem.m_colorBuffer.data;\r\n\t\t\t\t\tconst weightBuffer = this.m_particleSystem.m_weightBuffer.data;\r\n\r\n\t\t\t\t\trenderer.pushMatrix();\r\n\r\n\t\t\t\t\tconst r = window.$particleRadius;\r\n\t\t\t\t\tconst r2 = r * 2;\r\n\r\n\t\t\t\t\tif (!this.$particle_grd) {\r\n\t\t\t\t\t\tlet grd = ctx.createRadialGradient(r, r, 0, r, r, r2);\r\n\t\t\t\t\t\tgrd.addColorStop(0, \"#0744\");\r\n\t\t\t\t\t\tgrd.addColorStop(1, \"#07440\");\r\n\t\t\t\t\t\tthis.$particle_grd = grd;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let group = this.m_particleSystem.m_groupList; group; group = group.m_next) {\r\n\t\t\t\t\t\tfor (let i = group.m_firstIndex; i < group.m_lastIndex; ++i) {\r\n\t\t\t\t\t\t\tlet x1 = vertices[i].x * $gv.CANVAS_SCALE - r;\r\n\t\t\t\t\t\t\tlet y1 = vertices[i].y * $gv.CANVAS_SCALE - r;\r\n\r\n\t\t\t\t\t\t\trenderer.setTransform(1, 0, 0, 1, $gv.m_viewRect.left + x1, $gv.m_viewRect.top + y1);\r\n\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t\t\t\t//texture\r\n\r\n\t\t\t\t\t\t\t//ctx.arc(0, 0, r2, 0, 2 * Math.PI);\r\n\t\t\t\t\t\t\t//ctx.fillStyle = this.$particle_grd;\r\n\t\t\t\t\t\t\t//ctx.fill();\r\n\r\n\t\t\t\t\t\t\tctx.fillStyle = this.$particle_grd;\r\n\t\t\t\t\t\t\tctx.fillRect(r, r, r2 * 2, r2 * 2);\r\n\r\n\t\t\t\t\t\t\t//center\r\n\t\t\t\t\t\t\t//ctx.fillStyle = \"red\";\r\n\t\t\t\t\t\t\t//ctx.fillRect(0, 0, 1, 1);\r\n\r\n\t\t\t\t\t\t\t//border\r\n\t\t\t\t\t\t\t//ctx.strokeRect(-r, -r, r2, r2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.popMatrix();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($gv.m_display_foothold) {\r\n\t\t\tctx.save();\r\n\t\t\tthis.ground.$drawDebugInfo(renderer);\r\n\t\t\tif (player && player._foothold) {\r\n\t\t\t\tplayer._foothold.$drawDebugInfo2(renderer, \"#FF0\");\r\n\t\t\t}\r\n\r\n\t\t\tlet $foothold, $ladderRope;\r\n\t\t\tif (player) {\r\n\t\t\t\t$foothold = player.$foothold;\r\n\t\t\t\t$ladderRope = player.ladder;\r\n\t\t\t}\r\n\t\t\tif ($foothold && this.draw_foothold_path_count) {\r\n\t\t\t\t$foothold.$drawDebugInfo2(renderer, \"#F00\");\r\n\r\n\t\t\t\t//draw path\r\n\t\t\t\tlet count = this.draw_foothold_path_count;\r\n\t\t\t\tctx.lineWidth = 2.5;\r\n\t\t\t\tctx.strokeStyle = \"#00FE\";\r\n\t\t\t\tif (player.state.front > 0) {\r\n\t\t\t\t\t$foothold = this.ground.footholds[$foothold.next];\r\n\t\t\t\t\tfor (; $foothold; $foothold = this.ground.footholds[$foothold.next]) {\r\n\t\t\t\t\t\t$foothold._drawLine(ctx);\r\n\t\t\t\t\t\tif ((--count) <= 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (player.state.front < 0) {\r\n\t\t\t\t\t$foothold = this.ground.footholds[$foothold.prev];\r\n\t\t\t\t\tfor (; $foothold; $foothold = this.ground.footholds[$foothold.prev]) {\r\n\t\t\t\t\t\t$foothold._drawLine(ctx);\r\n\t\t\t\t\t\tif ((--count) <= 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ladderRope.forEach(lr => {\r\n\t\t\t\tconst width = lr.calcWidth();\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(lr.x - width * 0.5, lr.y1, width, lr.y2 - lr.y1);\r\n\t\t\t\tctx.fillStyle = lr == $ladderRope ? \"#E117\":\"#EB17\";\r\n\t\t\t\tctx.fill();\r\n\t\t\t});\r\n\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * https://github.com/google/LiquidFunPaint/blob/develop/src/com/google/fpl/liquidfunpaint/ParticleRenderer.java#L43\r\n * Renderer to draw particle water, objects, and wall. It draws particles as\r\n * fluid (or objects) by following three steps:\r\n * 1) Draws particles to a texture\r\n * 2) Blurs it out\r\n * 3) Applies threshold.\r\n */\r\n\r\n","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_maxFloat, b2_epsilon, b2_epsilon_sq } from \"../Common/b2Settings\";\r\nimport { b2Max, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\n/// A distance proxy is used by the GJK algorithm.\r\n/// It encapsulates any shape.\r\nexport class b2DistanceProxy {\r\n    constructor() {\r\n        this.m_buffer = b2Vec2.MakeArray(2);\r\n        this.m_vertices = this.m_buffer;\r\n        this.m_count = 0;\r\n        this.m_radius = 0;\r\n    }\r\n    Reset() {\r\n        this.m_vertices = this.m_buffer;\r\n        this.m_count = 0;\r\n        this.m_radius = 0;\r\n        return this;\r\n    }\r\n    SetShape(shape, index) {\r\n        shape.SetupDistanceProxy(this, index);\r\n    }\r\n    GetSupport(d) {\r\n        let bestIndex = 0;\r\n        let bestValue = b2Vec2.DotVV(this.m_vertices[0], d);\r\n        for (let i = 1; i < this.m_count; ++i) {\r\n            const value = b2Vec2.DotVV(this.m_vertices[i], d);\r\n            if (value > bestValue) {\r\n                bestIndex = i;\r\n                bestValue = value;\r\n            }\r\n        }\r\n        return bestIndex;\r\n    }\r\n    GetSupportVertex(d) {\r\n        let bestIndex = 0;\r\n        let bestValue = b2Vec2.DotVV(this.m_vertices[0], d);\r\n        for (let i = 1; i < this.m_count; ++i) {\r\n            const value = b2Vec2.DotVV(this.m_vertices[i], d);\r\n            if (value > bestValue) {\r\n                bestIndex = i;\r\n                bestValue = value;\r\n            }\r\n        }\r\n        return this.m_vertices[bestIndex];\r\n    }\r\n    GetVertexCount() {\r\n        return this.m_count;\r\n    }\r\n    GetVertex(index) {\r\n        ///b2Assert(0 <= index && index < this.m_count);\r\n        return this.m_vertices[index];\r\n    }\r\n}\r\nexport class b2SimplexCache {\r\n    constructor() {\r\n        this.metric = 0;\r\n        this.count = 0;\r\n        this.indexA = [0, 0, 0];\r\n        this.indexB = [0, 0, 0];\r\n    }\r\n    Reset() {\r\n        this.metric = 0;\r\n        this.count = 0;\r\n        return this;\r\n    }\r\n}\r\nexport class b2DistanceInput {\r\n    constructor() {\r\n        this.proxyA = new b2DistanceProxy();\r\n        this.proxyB = new b2DistanceProxy();\r\n        this.transformA = new b2Transform();\r\n        this.transformB = new b2Transform();\r\n        this.useRadii = false;\r\n    }\r\n    Reset() {\r\n        this.proxyA.Reset();\r\n        this.proxyB.Reset();\r\n        this.transformA.SetIdentity();\r\n        this.transformB.SetIdentity();\r\n        this.useRadii = false;\r\n        return this;\r\n    }\r\n}\r\nexport class b2DistanceOutput {\r\n    constructor() {\r\n        this.pointA = new b2Vec2();\r\n        this.pointB = new b2Vec2();\r\n        this.distance = 0;\r\n        this.iterations = 0; ///< number of GJK iterations used\r\n    }\r\n    Reset() {\r\n        this.pointA.SetZero();\r\n        this.pointB.SetZero();\r\n        this.distance = 0;\r\n        this.iterations = 0;\r\n        return this;\r\n    }\r\n}\r\nexport let b2_gjkCalls = 0;\r\nexport let b2_gjkIters = 0;\r\nexport let b2_gjkMaxIters = 0;\r\nexport function b2_gjk_reset() {\r\n    b2_gjkCalls = 0;\r\n    b2_gjkIters = 0;\r\n    b2_gjkMaxIters = 0;\r\n}\r\nexport class b2SimplexVertex {\r\n    constructor() {\r\n        this.wA = new b2Vec2(); // support point in proxyA\r\n        this.wB = new b2Vec2(); // support point in proxyB\r\n        this.w = new b2Vec2(); // wB - wA\r\n        this.a = 0; // barycentric coordinate for closest point\r\n        this.indexA = 0; // wA index\r\n        this.indexB = 0; // wB index\r\n    }\r\n    Copy(other) {\r\n        this.wA.Copy(other.wA); // support point in proxyA\r\n        this.wB.Copy(other.wB); // support point in proxyB\r\n        this.w.Copy(other.w); // wB - wA\r\n        this.a = other.a; // barycentric coordinate for closest point\r\n        this.indexA = other.indexA; // wA index\r\n        this.indexB = other.indexB; // wB index\r\n        return this;\r\n    }\r\n}\r\nexport class b2Simplex {\r\n    constructor() {\r\n        this.m_v1 = new b2SimplexVertex();\r\n        this.m_v2 = new b2SimplexVertex();\r\n        this.m_v3 = new b2SimplexVertex();\r\n        this.m_vertices = [ /*3*/];\r\n        this.m_count = 0;\r\n        this.m_vertices[0] = this.m_v1;\r\n        this.m_vertices[1] = this.m_v2;\r\n        this.m_vertices[2] = this.m_v3;\r\n    }\r\n    ReadCache(cache, proxyA, transformA, proxyB, transformB) {\r\n        ///b2Assert(0 <= cache.count && cache.count <= 3);\r\n        // Copy data from cache.\r\n        this.m_count = cache.count;\r\n        const vertices = this.m_vertices;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const v = vertices[i];\r\n            v.indexA = cache.indexA[i];\r\n            v.indexB = cache.indexB[i];\r\n            const wALocal = proxyA.GetVertex(v.indexA);\r\n            const wBLocal = proxyB.GetVertex(v.indexB);\r\n            b2Transform.MulXV(transformA, wALocal, v.wA);\r\n            b2Transform.MulXV(transformB, wBLocal, v.wB);\r\n            b2Vec2.SubVV(v.wB, v.wA, v.w);\r\n            v.a = 0;\r\n        }\r\n        // Compute the new simplex metric, if it is substantially different than\r\n        // old metric then flush the simplex.\r\n        if (this.m_count > 1) {\r\n            const metric1 = cache.metric;\r\n            const metric2 = this.GetMetric();\r\n            if (metric2 < 0.5 * metric1 || 2 * metric1 < metric2 || metric2 < b2_epsilon) {\r\n                // Reset the simplex.\r\n                this.m_count = 0;\r\n            }\r\n        }\r\n        // If the cache is empty or invalid ...\r\n        if (this.m_count === 0) {\r\n            const v = vertices[0];\r\n            v.indexA = 0;\r\n            v.indexB = 0;\r\n            const wALocal = proxyA.GetVertex(0);\r\n            const wBLocal = proxyB.GetVertex(0);\r\n            b2Transform.MulXV(transformA, wALocal, v.wA);\r\n            b2Transform.MulXV(transformB, wBLocal, v.wB);\r\n            b2Vec2.SubVV(v.wB, v.wA, v.w);\r\n            v.a = 1;\r\n            this.m_count = 1;\r\n        }\r\n    }\r\n    WriteCache(cache) {\r\n        cache.metric = this.GetMetric();\r\n        cache.count = this.m_count;\r\n        const vertices = this.m_vertices;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            cache.indexA[i] = vertices[i].indexA;\r\n            cache.indexB[i] = vertices[i].indexB;\r\n        }\r\n    }\r\n    GetSearchDirection(out) {\r\n        switch (this.m_count) {\r\n            case 1:\r\n                return b2Vec2.NegV(this.m_v1.w, out);\r\n            case 2: {\r\n                const e12 = b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, out);\r\n                const sgn = b2Vec2.CrossVV(e12, b2Vec2.NegV(this.m_v1.w, b2Vec2.s_t0));\r\n                if (sgn > 0) {\r\n                    // Origin is left of e12.\r\n                    return b2Vec2.CrossOneV(e12, out);\r\n                }\r\n                else {\r\n                    // Origin is right of e12.\r\n                    return b2Vec2.CrossVOne(e12, out);\r\n                }\r\n            }\r\n            default:\r\n                ///b2Assert(false);\r\n                return out.SetZero();\r\n        }\r\n    }\r\n    GetClosestPoint(out) {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                ///b2Assert(false);\r\n                return out.SetZero();\r\n            case 1:\r\n                return out.Copy(this.m_v1.w);\r\n            case 2:\r\n                return out.Set(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);\r\n            case 3:\r\n                return out.SetZero();\r\n            default:\r\n                ///b2Assert(false);\r\n                return out.SetZero();\r\n        }\r\n    }\r\n    GetWitnessPoints(pA, pB) {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                ///b2Assert(false);\r\n                break;\r\n            case 1:\r\n                pA.Copy(this.m_v1.wA);\r\n                pB.Copy(this.m_v1.wB);\r\n                break;\r\n            case 2:\r\n                pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;\r\n                pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;\r\n                pB.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;\r\n                pB.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;\r\n                break;\r\n            case 3:\r\n                pB.x = pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;\r\n                pB.y = pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;\r\n                break;\r\n            default:\r\n                ///b2Assert(false);\r\n                break;\r\n        }\r\n    }\r\n    GetMetric() {\r\n        switch (this.m_count) {\r\n            case 0:\r\n                ///b2Assert(false);\r\n                return 0;\r\n            case 1:\r\n                return 0;\r\n            case 2:\r\n                return b2Vec2.DistanceVV(this.m_v1.w, this.m_v2.w);\r\n            case 3:\r\n                return b2Vec2.CrossVV(b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, b2Vec2.s_t0), b2Vec2.SubVV(this.m_v3.w, this.m_v1.w, b2Vec2.s_t1));\r\n            default:\r\n                ///b2Assert(false);\r\n                return 0;\r\n        }\r\n    }\r\n    Solve2() {\r\n        const w1 = this.m_v1.w;\r\n        const w2 = this.m_v2.w;\r\n        const e12 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\r\n        // w1 region\r\n        const d12_2 = (-b2Vec2.DotVV(w1, e12));\r\n        if (d12_2 <= 0) {\r\n            // a2 <= 0, so we clamp it to 0\r\n            this.m_v1.a = 1;\r\n            this.m_count = 1;\r\n            return;\r\n        }\r\n        // w2 region\r\n        const d12_1 = b2Vec2.DotVV(w2, e12);\r\n        if (d12_1 <= 0) {\r\n            // a1 <= 0, so we clamp it to 0\r\n            this.m_v2.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v2);\r\n            return;\r\n        }\r\n        // Must be in e12 region.\r\n        const inv_d12 = 1 / (d12_1 + d12_2);\r\n        this.m_v1.a = d12_1 * inv_d12;\r\n        this.m_v2.a = d12_2 * inv_d12;\r\n        this.m_count = 2;\r\n    }\r\n    Solve3() {\r\n        const w1 = this.m_v1.w;\r\n        const w2 = this.m_v2.w;\r\n        const w3 = this.m_v3.w;\r\n        // Edge12\r\n        // [1      1     ][a1] = [1]\r\n        // [w1.e12 w2.e12][a2] = [0]\r\n        // a3 = 0\r\n        const e12 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\r\n        const w1e12 = b2Vec2.DotVV(w1, e12);\r\n        const w2e12 = b2Vec2.DotVV(w2, e12);\r\n        const d12_1 = w2e12;\r\n        const d12_2 = (-w1e12);\r\n        // Edge13\r\n        // [1      1     ][a1] = [1]\r\n        // [w1.e13 w3.e13][a3] = [0]\r\n        // a2 = 0\r\n        const e13 = b2Vec2.SubVV(w3, w1, b2Simplex.s_e13);\r\n        const w1e13 = b2Vec2.DotVV(w1, e13);\r\n        const w3e13 = b2Vec2.DotVV(w3, e13);\r\n        const d13_1 = w3e13;\r\n        const d13_2 = (-w1e13);\r\n        // Edge23\r\n        // [1      1     ][a2] = [1]\r\n        // [w2.e23 w3.e23][a3] = [0]\r\n        // a1 = 0\r\n        const e23 = b2Vec2.SubVV(w3, w2, b2Simplex.s_e23);\r\n        const w2e23 = b2Vec2.DotVV(w2, e23);\r\n        const w3e23 = b2Vec2.DotVV(w3, e23);\r\n        const d23_1 = w3e23;\r\n        const d23_2 = (-w2e23);\r\n        // Triangle123\r\n        const n123 = b2Vec2.CrossVV(e12, e13);\r\n        const d123_1 = n123 * b2Vec2.CrossVV(w2, w3);\r\n        const d123_2 = n123 * b2Vec2.CrossVV(w3, w1);\r\n        const d123_3 = n123 * b2Vec2.CrossVV(w1, w2);\r\n        // w1 region\r\n        if (d12_2 <= 0 && d13_2 <= 0) {\r\n            this.m_v1.a = 1;\r\n            this.m_count = 1;\r\n            return;\r\n        }\r\n        // e12\r\n        if (d12_1 > 0 && d12_2 > 0 && d123_3 <= 0) {\r\n            const inv_d12 = 1 / (d12_1 + d12_2);\r\n            this.m_v1.a = d12_1 * inv_d12;\r\n            this.m_v2.a = d12_2 * inv_d12;\r\n            this.m_count = 2;\r\n            return;\r\n        }\r\n        // e13\r\n        if (d13_1 > 0 && d13_2 > 0 && d123_2 <= 0) {\r\n            const inv_d13 = 1 / (d13_1 + d13_2);\r\n            this.m_v1.a = d13_1 * inv_d13;\r\n            this.m_v3.a = d13_2 * inv_d13;\r\n            this.m_count = 2;\r\n            this.m_v2.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // w2 region\r\n        if (d12_1 <= 0 && d23_2 <= 0) {\r\n            this.m_v2.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v2);\r\n            return;\r\n        }\r\n        // w3 region\r\n        if (d13_1 <= 0 && d23_1 <= 0) {\r\n            this.m_v3.a = 1;\r\n            this.m_count = 1;\r\n            this.m_v1.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // e23\r\n        if (d23_1 > 0 && d23_2 > 0 && d123_1 <= 0) {\r\n            const inv_d23 = 1 / (d23_1 + d23_2);\r\n            this.m_v2.a = d23_1 * inv_d23;\r\n            this.m_v3.a = d23_2 * inv_d23;\r\n            this.m_count = 2;\r\n            this.m_v1.Copy(this.m_v3);\r\n            return;\r\n        }\r\n        // Must be in triangle123\r\n        const inv_d123 = 1 / (d123_1 + d123_2 + d123_3);\r\n        this.m_v1.a = d123_1 * inv_d123;\r\n        this.m_v2.a = d123_2 * inv_d123;\r\n        this.m_v3.a = d123_3 * inv_d123;\r\n        this.m_count = 3;\r\n    }\r\n}\r\nb2Simplex.s_e12 = new b2Vec2();\r\nb2Simplex.s_e13 = new b2Vec2();\r\nb2Simplex.s_e23 = new b2Vec2();\r\nconst b2Distance_s_simplex = new b2Simplex();\r\nconst b2Distance_s_saveA = [0, 0, 0];\r\nconst b2Distance_s_saveB = [0, 0, 0];\r\nconst b2Distance_s_p = new b2Vec2();\r\nconst b2Distance_s_d = new b2Vec2();\r\nconst b2Distance_s_normal = new b2Vec2();\r\nconst b2Distance_s_supportA = new b2Vec2();\r\nconst b2Distance_s_supportB = new b2Vec2();\r\nexport function b2Distance(output, cache, input) {\r\n    ++b2_gjkCalls;\r\n    const proxyA = input.proxyA;\r\n    const proxyB = input.proxyB;\r\n    const transformA = input.transformA;\r\n    const transformB = input.transformB;\r\n    // Initialize the simplex.\r\n    const simplex = b2Distance_s_simplex;\r\n    simplex.ReadCache(cache, proxyA, transformA, proxyB, transformB);\r\n    // Get simplex vertices as an array.\r\n    const vertices = simplex.m_vertices;\r\n    const k_maxIters = 20;\r\n    // These store the vertices of the last simplex so that we\r\n    // can check for duplicates and prevent cycling.\r\n    const saveA = b2Distance_s_saveA;\r\n    const saveB = b2Distance_s_saveB;\r\n    let saveCount = 0;\r\n    let distanceSqr1 = b2_maxFloat;\r\n    let distanceSqr2 = distanceSqr1;\r\n    // Main iteration loop.\r\n    let iter = 0;\r\n    while (iter < k_maxIters) {\r\n        // Copy simplex so we can identify duplicates.\r\n        saveCount = simplex.m_count;\r\n        for (let i = 0; i < saveCount; ++i) {\r\n            saveA[i] = vertices[i].indexA;\r\n            saveB[i] = vertices[i].indexB;\r\n        }\r\n        switch (simplex.m_count) {\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                simplex.Solve2();\r\n                break;\r\n            case 3:\r\n                simplex.Solve3();\r\n                break;\r\n            default:\r\n                ///b2Assert(false);\r\n                break;\r\n        }\r\n        // If we have 3 points, then the origin is in the corresponding triangle.\r\n        if (simplex.m_count === 3) {\r\n            break;\r\n        }\r\n        // Compute closest point.\r\n        const p = simplex.GetClosestPoint(b2Distance_s_p);\r\n        distanceSqr2 = p.LengthSquared();\r\n        // Ensure progress\r\n        /*\r\n        TODO: to fix compile warning\r\n        if (distanceSqr2 > distanceSqr1) {\r\n          //break;\r\n        }\r\n        */\r\n        distanceSqr1 = distanceSqr2;\r\n        // Get search direction.\r\n        const d = simplex.GetSearchDirection(b2Distance_s_d);\r\n        // Ensure the search direction is numerically fit.\r\n        if (d.LengthSquared() < b2_epsilon_sq) {\r\n            // The origin is probably contained by a line segment\r\n            // or triangle. Thus the shapes are overlapped.\r\n            // We can't return zero here even though there may be overlap.\r\n            // In case the simplex is a point, segment, or triangle it is difficult\r\n            // to determine if the origin is contained in the CSO or very close to it.\r\n            break;\r\n        }\r\n        // Compute a tentative new simplex vertex using support points.\r\n        const vertex = vertices[simplex.m_count];\r\n        vertex.indexA = proxyA.GetSupport(b2Rot.MulTRV(transformA.q, b2Vec2.NegV(d, b2Vec2.s_t0), b2Distance_s_supportA));\r\n        b2Transform.MulXV(transformA, proxyA.GetVertex(vertex.indexA), vertex.wA);\r\n        vertex.indexB = proxyB.GetSupport(b2Rot.MulTRV(transformB.q, d, b2Distance_s_supportB));\r\n        b2Transform.MulXV(transformB, proxyB.GetVertex(vertex.indexB), vertex.wB);\r\n        b2Vec2.SubVV(vertex.wB, vertex.wA, vertex.w);\r\n        // Iteration count is equated to the number of support point calls.\r\n        ++iter;\r\n        ++b2_gjkIters;\r\n        // Check for duplicate support points. This is the main termination criteria.\r\n        let duplicate = false;\r\n        for (let i = 0; i < saveCount; ++i) {\r\n            if (vertex.indexA === saveA[i] && vertex.indexB === saveB[i]) {\r\n                duplicate = true;\r\n                break;\r\n            }\r\n        }\r\n        // If we found a duplicate support point we must exit to avoid cycling.\r\n        if (duplicate) {\r\n            break;\r\n        }\r\n        // New vertex is ok and needed.\r\n        ++simplex.m_count;\r\n    }\r\n    b2_gjkMaxIters = b2Max(b2_gjkMaxIters, iter);\r\n    // Prepare output.\r\n    simplex.GetWitnessPoints(output.pointA, output.pointB);\r\n    output.distance = b2Vec2.DistanceVV(output.pointA, output.pointB);\r\n    output.iterations = iter;\r\n    // Cache the simplex.\r\n    simplex.WriteCache(cache);\r\n    // Apply radii if requested.\r\n    if (input.useRadii) {\r\n        const rA = proxyA.m_radius;\r\n        const rB = proxyB.m_radius;\r\n        if (output.distance > (rA + rB) && output.distance > b2_epsilon) {\r\n            // Shapes are still no overlapped.\r\n            // Move the witness points to the outer surface.\r\n            output.distance -= rA + rB;\r\n            const normal = b2Vec2.SubVV(output.pointB, output.pointA, b2Distance_s_normal);\r\n            normal.Normalize();\r\n            output.pointA.SelfMulAdd(rA, normal);\r\n            output.pointB.SelfMulSub(rB, normal);\r\n        }\r\n        else {\r\n            // Shapes are overlapped when radii are considered.\r\n            // Move the witness points to the middle.\r\n            const p = b2Vec2.MidVV(output.pointA, output.pointB, b2Distance_s_p);\r\n            output.pointA.Copy(p);\r\n            output.pointB.Copy(p);\r\n            output.distance = 0;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2AABB } from \"../Collision/b2Collision\";\r\nimport { b2MassData } from \"../Collision/Shapes/b2Shape\";\r\n/// This holds contact filtering data.\r\nexport class b2Filter {\r\n    constructor() {\r\n        /// The collision category bits. Normally you would just set one bit.\r\n        this.categoryBits = 0x0001;\r\n        /// The collision mask bits. This states the categories that this\r\n        /// shape would accept for collision.\r\n        this.maskBits = 0xFFFF;\r\n        /// Collision groups allow a certain group of objects to never collide (negative)\r\n        /// or always collide (positive). Zero means no collision group. Non-zero group\r\n        /// filtering always wins against the mask bits.\r\n        this.groupIndex = 0;\r\n    }\r\n    Clone() {\r\n        return new b2Filter().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        ///b2Assert(this !== other);\r\n        this.categoryBits = other.categoryBits;\r\n        this.maskBits = other.maskBits;\r\n        this.groupIndex = other.groupIndex;\r\n        return this;\r\n    }\r\n}\r\n/// A fixture definition is used to create a fixture. This class defines an\r\n/// abstract fixture definition. You can reuse fixture definitions safely.\r\nexport class b2FixtureDef {\r\n    constructor() {\r\n        /// The shape, this must be set. The shape will be cloned, so you\r\n        /// can create the shape on the stack.\r\n        this.shape = null;\r\n        /// Use this to store application specific fixture data.\r\n        this.userData = null;\r\n        /// The friction coefficient, usually in the range [0,1].\r\n        this.friction = 0.2;\r\n        /// The restitution (elasticity) usually in the range [0,1].\r\n        this.restitution = 0;\r\n        /// The density, usually in kg/m^2.\r\n        this.density = 0;\r\n        /// A sensor shape collects contact information but never generates a collision\r\n        /// response.\r\n        this.isSensor = false;\r\n        /// Contact filtering data.\r\n        this.filter = new b2Filter();\r\n    }\r\n}\r\n/// This proxy is used internally to connect fixtures to the broad-phase.\r\nexport class b2FixtureProxy {\r\n    // public static MakeArray(length: number): b2FixtureProxy[] {\r\n    //   return b2MakeArray(length, (i) => new b2FixtureProxy());\r\n    // }\r\n    constructor(fixture) {\r\n        this.aabb = new b2AABB();\r\n        this.childIndex = 0;\r\n        this.treeNode = null;\r\n        this.fixture = fixture;\r\n    }\r\n}\r\n/// A fixture is used to attach a shape to a body for collision detection. A fixture\r\n/// inherits its transform from its parent. Fixtures hold additional non-geometric data\r\n/// such as friction, collision filters, etc.\r\n/// Fixtures are created via b2Body::CreateFixture.\r\n/// @warning you cannot reuse fixtures.\r\nexport class b2Fixture {\r\n    constructor(def, body) {\r\n        this.m_density = 0;\r\n        this.m_next = null;\r\n        this.m_friction = 0;\r\n        this.m_restitution = 0;\r\n        this.m_proxies = null;\r\n        this.m_proxyCount = 0;\r\n        this.m_filter = new b2Filter();\r\n        this.m_isSensor = false;\r\n        this.m_userData = null;\r\n        this.m_body = body;\r\n        this.m_shape = def.shape.Clone();\r\n    }\r\n    /// Get the type of the child shape. You can use this to down cast to the concrete shape.\r\n    /// @return the shape type.\r\n    GetType() {\r\n        return this.m_shape.GetType();\r\n    }\r\n    /// Get the child shape. You can modify the child shape, however you should not change the\r\n    /// number of vertices because this will crash some collision caching mechanisms.\r\n    /// Manipulating the shape may lead to non-physical behavior.\r\n    GetShape() {\r\n        return this.m_shape;\r\n    }\r\n    /// Set if this fixture is a sensor.\r\n    SetSensor(sensor) {\r\n        if (sensor !== this.m_isSensor) {\r\n            this.m_body.SetAwake(true);\r\n            this.m_isSensor = sensor;\r\n        }\r\n    }\r\n    /// Is this fixture a sensor (non-solid)?\r\n    /// @return the true if the shape is a sensor.\r\n    IsSensor() {\r\n        return this.m_isSensor;\r\n    }\r\n    /// Set the contact filtering data. This will not update contacts until the next time\r\n    /// step when either parent body is active and awake.\r\n    /// This automatically calls Refilter.\r\n    SetFilterData(filter) {\r\n        this.m_filter.Copy(filter);\r\n        this.Refilter();\r\n    }\r\n    /// Get the contact filtering data.\r\n    GetFilterData() {\r\n        return this.m_filter;\r\n    }\r\n    /// Call this if you want to establish collision that was previously disabled by b2ContactFilter::ShouldCollide.\r\n    Refilter() {\r\n        if (this.m_body) {\r\n            return;\r\n        }\r\n        // Flag associated contacts for filtering.\r\n        let edge = this.m_body.GetContactList();\r\n        while (edge) {\r\n            const contact = edge.contact;\r\n            const fixtureA = contact.GetFixtureA();\r\n            const fixtureB = contact.GetFixtureB();\r\n            if (fixtureA === this || fixtureB === this) {\r\n                contact.FlagForFiltering();\r\n            }\r\n            edge = edge.next;\r\n        }\r\n        const world = this.m_body.GetWorld();\r\n        if (world === null) {\r\n            return;\r\n        }\r\n        // Touch each proxy so that new pairs may be created\r\n        const broadPhase = world.m_contactManager.m_broadPhase;\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            broadPhase.TouchProxy(this.m_proxies[i].treeNode);\r\n        }\r\n    }\r\n    /// Get the parent body of this fixture. This is NULL if the fixture is not attached.\r\n    /// @return the parent body.\r\n    GetBody() {\r\n        return this.m_body;\r\n    }\r\n    /// Get the next fixture in the parent body's fixture list.\r\n    /// @return the next shape.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data that was assigned in the fixture definition. Use this to\r\n    /// store your application specific data.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data. Use this to store your application specific data.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Test a point for containment in this fixture.\r\n    /// @param p a point in world coordinates.\r\n    TestPoint(p) {\r\n        return this.m_shape.TestPoint(this.m_body.GetTransform(), p);\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ComputeDistance(p, normal, childIndex) {\r\n        return this.m_shape.ComputeDistance(this.m_body.GetTransform(), p, normal, childIndex);\r\n    }\r\n    // #endif\r\n    /// Cast a ray against this shape.\r\n    /// @param output the ray-cast results.\r\n    /// @param input the ray-cast input parameters.\r\n    RayCast(output, input, childIndex) {\r\n        return this.m_shape.RayCast(output, input, this.m_body.GetTransform(), childIndex);\r\n    }\r\n    /// Get the mass data for this fixture. The mass data is based on the density and\r\n    /// the shape. The rotational inertia is about the shape's origin. This operation\r\n    /// may be expensive.\r\n    GetMassData(massData = new b2MassData()) {\r\n        this.m_shape.ComputeMass(massData, this.m_density);\r\n        return massData;\r\n    }\r\n    /// Set the density of this fixture. This will _not_ automatically adjust the mass\r\n    /// of the body. You must call b2Body::ResetMassData to update the body's mass.\r\n    SetDensity(density) {\r\n        this.m_density = density;\r\n    }\r\n    /// Get the density of this fixture.\r\n    GetDensity() {\r\n        return this.m_density;\r\n    }\r\n    /// Get the coefficient of friction.\r\n    GetFriction() {\r\n        return this.m_friction;\r\n    }\r\n    /// Set the coefficient of friction. This will _not_ change the friction of\r\n    /// existing contacts.\r\n    SetFriction(friction) {\r\n        this.m_friction = friction;\r\n    }\r\n    /// Get the coefficient of restitution.\r\n    GetRestitution() {\r\n        return this.m_restitution;\r\n    }\r\n    /// Set the coefficient of restitution. This will _not_ change the restitution of\r\n    /// existing contacts.\r\n    SetRestitution(restitution) {\r\n        this.m_restitution = restitution;\r\n    }\r\n    /// Get the fixture's AABB. This AABB may be enlarge and/or stale.\r\n    /// If you need a more accurate AABB, compute it using the shape and\r\n    /// the body transform.\r\n    GetAABB(childIndex) {\r\n        ///b2Assert(0 <= childIndex && childIndex < this.m_proxyCount);\r\n        return this.m_proxies[childIndex].aabb;\r\n    }\r\n    /// Dump this fixture to the log file.\r\n    Dump(log, bodyIndex) {\r\n        log(\"    const fd: b2FixtureDef = new b2FixtureDef();\\n\");\r\n        log(\"    fd.friction = %.15f;\\n\", this.m_friction);\r\n        log(\"    fd.restitution = %.15f;\\n\", this.m_restitution);\r\n        log(\"    fd.density = %.15f;\\n\", this.m_density);\r\n        log(\"    fd.isSensor = %s;\\n\", (this.m_isSensor) ? (\"true\") : (\"false\"));\r\n        log(\"    fd.filter.categoryBits = %d;\\n\", this.m_filter.categoryBits);\r\n        log(\"    fd.filter.maskBits = %d;\\n\", this.m_filter.maskBits);\r\n        log(\"    fd.filter.groupIndex = %d;\\n\", this.m_filter.groupIndex);\r\n        this.m_shape.Dump(log);\r\n        log(\"\\n\");\r\n        log(\"    fd.shape = shape;\\n\");\r\n        log(\"\\n\");\r\n        log(\"    bodies[%d].CreateFixture(fd);\\n\", bodyIndex);\r\n    }\r\n    // We need separation create/destroy functions from the constructor/destructor because\r\n    // the destructor cannot access the allocator (no destructor arguments allowed by C++).\r\n    Create(/*body: b2Body,*/ def) {\r\n        this.m_userData = def.userData;\r\n        this.m_friction = def.friction;\r\n        this.m_restitution = def.restitution;\r\n        // this.m_body = body;\r\n        this.m_next = null;\r\n        this.m_filter.Copy(def.filter);\r\n        this.m_isSensor = def.isSensor;\r\n        // this.m_shape = def.shape.Clone();\r\n        // Reserve proxy space\r\n        // const childCount = m_shape->GetChildCount();\r\n        // m_proxies = (b2FixtureProxy*)allocator->Allocate(childCount * sizeof(b2FixtureProxy));\r\n        // for (int32 i = 0; i < childCount; ++i)\r\n        // {\r\n        //   m_proxies[i].fixture = NULL;\r\n        //   m_proxies[i].proxyId = b2BroadPhase::e_nullProxy;\r\n        // }\r\n        // this.m_proxies = b2FixtureProxy.MakeArray(this.m_shape.GetChildCount());\r\n        this.m_proxies = b2MakeArray(this.m_shape.GetChildCount(), (i) => new b2FixtureProxy(this));\r\n        this.m_proxyCount = 0;\r\n        this.m_density = def.density;\r\n    }\r\n    Destroy() {\r\n        // The proxies must be destroyed before calling this.\r\n        ///b2Assert(this.m_proxyCount === 0);\r\n        // Free the proxy array.\r\n        // int32 childCount = m_shape->GetChildCount();\r\n        // allocator->Free(m_proxies, childCount * sizeof(b2FixtureProxy));\r\n        // m_proxies = NULL;\r\n        // this.m_shape = null;\r\n    }\r\n    // These support body activation/deactivation.\r\n    CreateProxies(broadPhase, xf) {\r\n        ///b2Assert(this.m_proxyCount === 0);\r\n        // Create proxies in the broad-phase.\r\n        this.m_proxyCount = this.m_shape.GetChildCount();\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i] = new b2FixtureProxy(this);\r\n            this.m_shape.ComputeAABB(proxy.aabb, xf, i);\r\n            proxy.treeNode = broadPhase.CreateProxy(proxy.aabb, proxy);\r\n            // proxy.fixture = this;\r\n            proxy.childIndex = i;\r\n        }\r\n    }\r\n    DestroyProxies(broadPhase) {\r\n        // Destroy proxies in the broad-phase.\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i];\r\n            proxy.treeNode.userData = null;\r\n            broadPhase.DestroyProxy(proxy.treeNode);\r\n            proxy.treeNode = null;\r\n        }\r\n        this.m_proxyCount = 0;\r\n    }\r\n    Synchronize(broadPhase, transform1, transform2) {\r\n        if (this.m_proxyCount === 0) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.m_proxyCount; ++i) {\r\n            const proxy = this.m_proxies[i];\r\n            // Compute an AABB that covers the swept shape (may miss some rotation effect).\r\n            const aabb1 = b2Fixture.Synchronize_s_aabb1;\r\n            const aabb2 = b2Fixture.Synchronize_s_aabb2;\r\n            this.m_shape.ComputeAABB(aabb1, transform1, i);\r\n            this.m_shape.ComputeAABB(aabb2, transform2, i);\r\n            proxy.aabb.Combine2(aabb1, aabb2);\r\n            const displacement = b2Vec2.SubVV(transform2.p, transform1.p, b2Fixture.Synchronize_s_displacement);\r\n            broadPhase.MoveProxy(proxy.treeNode, proxy.aabb, displacement);\r\n        }\r\n    }\r\n}\r\nb2Fixture.Synchronize_s_aabb1 = new b2AABB();\r\nb2Fixture.Synchronize_s_aabb2 = new b2AABB();\r\nb2Fixture.Synchronize_s_displacement = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","﻿\r\n//import BigInt from \"big-integer\";//bitwise operation\r\n\r\nimport { SkillAnimation } from \"../game/Skill.js\";\r\nimport { SceneObject } from \"../game/SceneObject.js\";\r\n\r\n\r\nexport class AttackInfo {\r\n\tconstructor() {\r\n\t\t/** @type {AttackPair[]} - { objectid, attack }[each monster] */\r\n\t\tthis.allAttack = [];\r\n\r\n\t\t/** @type {SkillAnimation} */\r\n\t\tthis.skill = null;\r\n\t}\r\n\t///**\r\n\t// * @param {number} objectid\r\n\t// * @returns {AttackPair}\r\n\t// */\r\n\t//addAttack(objectid) {\r\n\t//\tlet attack = new AttackPair();\r\n\t//\tattack.objectid = objectid;\r\n\t//\tthis.allAttack.push(attack);\r\n\t//}\r\n}\r\n\r\nconst symbol_targetObject = Symbol(\"targetObject\");\r\n\r\nexport class AttackPair {\r\n\tconstructor() {\r\n\t\t/** @type {SceneObject} */\r\n\t\tthis[symbol_targetObject] = null;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.objectid = null;\r\n\r\n\t\t/** @type {DamagePair[]} - { realDamage, critical }[attackCount] */\r\n\t\tthis.allDamage = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {SceneObject}\r\n\t */\r\n\tgetTargetObject() {\r\n\t\treturn this[symbol_targetObject];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneObject} targetObject\r\n\t */\r\n\tsetTargetObject(targetObject) {\r\n\t\tthis[symbol_targetObject] = targetObject;\r\n\t}\r\n\r\n\t/**\r\n\t * targetObject # $objectid\r\n\t * @returns {number}\r\n\t */\r\n\tget objectid() {\r\n\t\t/** @type {SceneObject} */\r\n\t\tlet obj = this[symbol_targetObject];\r\n\t\treturn obj.$objectid;\r\n\t}\r\n\t/**\r\n\t * set targetObject by objectid\r\n\t * @param {number} objectid\r\n\t */\r\n\tset objectid(objectid) {\r\n\t\tif (Number.isSafeInteger(objectid)) {\r\n\t\t\t/** @type {SceneObject} */\r\n\t\t\tlet obj = scene_map.lifeMgr.entities[objectid];\r\n\r\n\t\t\tthis.setTargetObject(obj);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//TODO: targetObject is player's character\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {boolean} critical\r\n\t * @returns {DamagePair}\r\n\t */\r\n\taddDamage(realDamage, critical) {\r\n\t\tthis.allDamage.push(new DamagePair(realDamage, critical));\r\n\t}\r\n}\r\n\r\nexport class DamagePair {\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {boolean} critical\r\n\t */\r\n\tconstructor(realDamage, critical) {\r\n\t\t/** @type {number} */\r\n\t\tthis.realDamage = realDamage;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.critical = critical;\r\n\t}\r\n\r\n\t_validating() {\r\n\t\treturn Number.isSafeInteger(this.realDamage);\r\n\t}\r\n\r\n\t/** @param {IRenderer} */\r\n\t_draw(renderer) {\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tif (Number.isSafeInteger(this.realDamage)) {\r\n\t\t\t//draw\r\n\t\t}\r\n\t\telse {// debug, invalid damage\r\n\t\t\tctx.filter = \"gray-scale(1)\";\r\n\t\t\t//draw\r\n\t\t\tctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","\r\nimport { IRenderer } from \"../IRenderer.js\";\r\n\r\n\r\nexport class RenderingOption {\r\n\t/**\r\n\t * @param {Partial<RenderingOption>} [option]\r\n\t */\r\n\tconstructor(option) {\r\n\t\tif (option) {\r\n\t\t\tthis.opacity = option.opacity || 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.opacity = 1;\r\n\t\t}\r\n\t}\r\n\tclone() {\r\n\t\treturn new RenderingOption(this);\r\n\t}\r\n\t/**\r\n\t * multiply property, return new RenderingOption\r\n\t * @param {RenderingOption} other\r\n\t * @returns {RenderingOption}\r\n\t */\r\n\tmul(other) {\r\n\t\tif (other) {\r\n\t\t\treturn new RenderingOption({\r\n\t\t\t\topacity: this.opacity * other.opacity,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.clone();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * multiply property\r\n\t * @param {RenderingOption} other\r\n\t * @returns {void}\r\n\t */\r\n\tselfMultiply(other) {\r\n\t\tif (other) {\r\n\t\t\tthis.opacity * other.opacity;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { LifeRenderer } from \"./LifeRenderer.js\";\r\n\r\n\r\nwindow.MobAnimationSpeed = 1;\r\n\r\nwindow.$mob_name = {};\r\n\r\n/**\r\n * Mob basic infomation\r\n * Mob antion(animation) collection\r\n */\r\nexport class MobRenderer extends LifeRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t//[\"info\",\"stand\",\"hit1\",\"die1\",\"skill1\",\"skill2\",\"skill3\",\"skill4\",\"skill5\",\"attack1\",\"attack2\",\"attack3\",\"attack4\",\"attack5\"]\r\n\t}\r\n\r\n\tstatic get __info() {\r\n\t\treturn {\r\n\t\t\t\"noFlip\": 1,\r\n\t\t\t\"level\": 230,\r\n\t\t\t\"maxHP\": \"??????\",\r\n\t\t\t\"maxMP\": 100000,\r\n\t\t\t\"speed\": 0,\r\n\t\t\t\"PADamage\": 22000,\r\n\t\t\t\"PDRate\": 300,\r\n\t\t\t\"MADamage\": 24000,\r\n\t\t\t\"MDRate\": 30,\r\n\t\t\t\"acc\": 9999,\r\n\t\t\t\"eva\": 750,\r\n\t\t\t\"pushed\": 1000000000,\r\n\t\t\t\"fs\": 10,\r\n\t\t\t\"summonType\": 1,\r\n\t\t\t\"category\": 1,\r\n\t\t\t\"elemAttr\": \"P2H2F2I2S2L2D2\",\r\n\t\t\t\"mobType\": \"3N\",\r\n\t\t\t\"firstAttack\": 1,\r\n\t\t\t\"hideHP\": 1,\r\n\t\t\t\"boss\": 1,\r\n\t\t\t\"hpTagColor\": 1,\r\n\t\t\t\"hpTagBgcolor\": 5,\r\n\t\t\t\"showNotRemoteDam\": 1,\r\n\t\t\t\"defaultHP\": \"측정불가\",\r\n\t\t\t\"defaultMP\": \"측정불가\",\r\n\t\t\t\"ignoreMoveImpact\": 1\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\tif (!MobRenderer._desc[id]) {\r\n\t\t\tlet base = MobRenderer._get_desc_base_path();\r\n\t\t\tlet url = [base, Number(id)].join(\"/\");\r\n\t\t\tlet desc = await $get.data(url);\r\n\t\t\tMobRenderer._desc[id] = desc;\r\n\t\t\treturn desc;\r\n\t\t}\r\n\t\treturn MobRenderer._desc[id];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t * @param {!string} id\r\n\t */\r\n\tasync load(id) {\r\n\t\tlet result = await super.load.apply(this, arguments);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tisFlyMob() {\r\n\t\treturn !!this._raw.flySpeed;\r\n\t}\r\n\t//get info() {\r\n\t//\treturn this._raw.info;\r\n\t//}\r\n\t\r\n\t_getFirstAttackName() {\r\n\t\tconst firstAttack = this._raw.info.firstAttack;\r\n\t\treturn \"skill\" + firstAttack;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tstamp *= window.MobAnimationSpeed;\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\t\r\n\tstatic get _animations() {\r\n\t\treturn ['\"stand\"', '\"fly\"', '\"move\"', '\"jump\"', \"`hit${$index}`\", \"`die${$index}`\", \"`skill${$index}`\"/*, \"`attack${$index}`\"*/];\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\treturn \"/String/Mob\";\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Mob\";\r\n\t}\r\n}\r\nMobRenderer._desc = {};\r\n\r\n","﻿\r\nimport { LifeRenderer } from './LifeRenderer.js';\r\n\r\nwindow.NpcAnimationSpeed = 1;\r\n\r\n//Npc: 9090004 => ad-tv\r\n\r\nexport class NpcRenderer extends LifeRenderer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\tif (!NpcRenderer._desc[id]) {\r\n\t\t\tlet base = NpcRenderer._get_desc_base_path();\r\n\t\t\tlet url = [base, Number(id)].join(\"/\");\r\n\t\t\tlet desc = await $get.data(url);\r\n\t\t\tNpcRenderer._desc[id] = desc;\r\n\t\t\treturn desc;\r\n\t\t}\r\n\t\treturn NpcRenderer._desc[id];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tstamp *= window.NpcAnimationSpeed;\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\tstatic get _animations() {\r\n\t\treturn ['\"stand\"'/*, \"`condition${$index}`\"*/];\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\treturn \"/String/Npc\";\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Npc\";\r\n\t}\r\n};\r\nNpcRenderer._desc = {};\r\n","\r\nimport { ColorRGB, ImageDataHelper } from \"../IRenderer.js\";\r\nimport { Vec2, Rectangle } from \"../math.js\";\r\nimport { Sprite } from \"../Sprite.js\";\r\n\r\n\r\n/**\r\n * @param {HTMLImageElement} image\r\n */\r\nfunction whiteToRed(image) {\r\n\tlet helper = new ImageDataHelper();\r\n\tlet imagedata = helper.imageToImagedata(image);\r\n\r\n\tfor (let y = 0; y < imagedata.height; ++y) {\r\n\t\tfor (let x = 0; x < imagedata.width * 4; ++x) {\r\n\t\t\t//imagedata.data[y * imagedata.width * 4 + x * 4 + 0] = 0;\r\n\t\t\timagedata.data[y * imagedata.width * 4 + x * 4 + 1] = 0;\r\n\t\t\timagedata.data[y * imagedata.width * 4 + x * 4 + 2] = 0;\r\n\t\t\t//imagedata.data[y * imagedata.width * 4 + x * 4 + 3] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\treturn helper.imagedataToDataURL(imagedata);\r\n}\r\n\r\n/**\r\n * @param {number} min\r\n * @param {number} range\r\n * @returns {number} min + Random(-1, 1) * range\r\n */\r\nfunction rand_r(min, range) {\r\n\treturn min - range + Math.random() * range * 2;\r\n}\r\n\r\n/**\r\n * @param {ColorRGB} color\r\n * @param {ColorRGB} colorVar\r\n * @returns {ColorRGB}\r\n */\r\nfunction rand_color2i(color, colorVar) {\r\n\tconst col = ColorRGB.fromInt24(color);\r\n\tconst cv = ColorRGB.fromInt24(colorVar);\r\n\tconst r = Math.max(0, Math.min(rand_r(col.r, cv.r), 255));\r\n\tconst g = Math.max(0, Math.min(rand_r(col.g, cv.g), 255));\r\n\tconst b = Math.max(0, Math.min(rand_r(col.b, cv.b), 255));\r\n\t\r\n\treturn new ColorRGB(r, g, b);\r\n}\r\nfunction _rand_color2i(color, colorVar) {\r\n\treturn ColorRGB.fromInt24(Math.max(0, Math.min(rand_r(color, colorVar), 255)));\r\n}\r\n\r\nexport class Particle {\r\n\t/** @param {ParticleSystem} ps */\r\n\tconstructor(ps) {\r\n\t\tthis._initParam(ps);\r\n\r\n\t\tthis.life = 0;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.pos = new Vec2(0, 0);\r\n\t\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.scale = this.startScale;\r\n\t\tthis.color = new ColorRGB(255, 255, 255);\r\n\t}\r\n\t\r\n\t/** @param {ParticleSystem} ps */\r\n\t_initParam(ps) {\r\n\t\tthis.lifeMax = rand_r(ps.life, ps.lifeVar);\r\n\r\n\t\tconst angle = rand_r(ps.angle, ps.angleVar) * Math.PI / 180;//?rand_r\r\n\r\n\t\tif (1) {\r\n\t\t\tthis.startColor = rand_color2i(ps.startColor, ps.startColorVar);\r\n\t\t\tthis.color_d = rand_color2i(ps.endColor, ps.endColorVar).selfSub(this.startColor);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.startColor = _rand_color2i(ps.startColor, ps.startColorVar);\r\n\t\t\tthis.color_d = _rand_color2i(ps.endColor, ps.endColorVar).selfSub(this.startColor);\r\n\t\t}\r\n\r\n\t\t//unit: px\r\n\t\tconst sizeX = Math.max(1, ps.texture.width);\r\n\t\tconst sizeY = Math.max(1, ps.texture.height);\r\n\t\t//const size = Math.sqrt(sizeX ** 2 + sizeY ** 2);\r\n\t\tconst size = sizeX == 1 ? sizeY:(sizeY == 1 ? 1 : Math.min(sizeX, sizeY));\r\n\r\n\t\tthis.startScale = rand_r(ps.startSize, ps.startSizeVar) / size;\r\n\t\tconst endScale = rand_r(ps.endSize, ps.endSizeVar) / size;\r\n\t\tthis.scale_d = endScale - this.startScale;\r\n\r\n\t\tthis.startX = rand_r(ps.posX, ps.posVarX);\r\n\t\tthis.startY = rand_r(ps.posY, ps.posVarY);\r\n\r\n\t\tthis.emitterMode = ps.emitterType ? 1 : 0;\r\n\r\n\t\t// Mode A: Gravity + tangential accel + radial accel\r\n\t\tif (!this.emitterMode) {//Particle.EMITTER_MODE.GRAVITY\r\n\t\t\t// gravity\r\n\t\t\tthis.gravity = new Vec2(ps.GRAVITY.x, ps.GRAVITY.y);\r\n\r\n\t\t\t// speed\r\n\t\t\tconst speed = rand_r(ps.GRAVITY.speed, ps.GRAVITY.speedVar);\r\n\t\t\t\r\n\t\t\t/** @type {Vec2} - velocity */\r\n\t\t\tthis.dir = new Vec2(Math.cos(angle) * speed, -Math.sin(angle) * speed);\r\n\r\n\t\t\t// radial acceleration\r\n\t\t\tthis.radialAccel = rand_r(ps.GRAVITY.radialAccel || 0, ps.GRAVITY.radialAccelVar || 0);\r\n\r\n\t\t\t// tangential acceleration\r\n\t\t\tthis.tangentialAccel = rand_r(ps.GRAVITY.tangentialAccel || 0, ps.GRAVITY.tangentialAccelVar || 0);\r\n\r\n\t\t\t// rotation is dir\r\n\t\t\tthis.rotationIsDir = ps.GRAVITY.rotationIsDir ? true : false;\r\n\t\t}\r\n\t\telse if (this.emitterMode == 1) {\r\n\t\t\talert(\"Particle.EMITTER_MODE.RADIUS\");\r\n\t\t}\r\n\t}\r\n\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tconst dt = stamp / 1000;\r\n\t\tconst tp = Math.max(0, Math.min(this.life / this.lifeMax, 1));\r\n\r\n\t\t// update position\r\n\t\t{\r\n\t\t\tlet radial;\r\n\r\n\t\t\t// radial acceleration\r\n\t\t\tif (this.pos.x || this.pos.y) {\r\n\t\t\t\tradial = (new Vec2(this.pos.x, this.pos.y)).normalize();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tradial = new Vec2(0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tlet tangential = radial.clone();\r\n\t\t\tradial = radial.mul(this.radialAccel);\r\n\r\n\t\t\t// tangential acceleration\r\n\t\t\tlet newy = tangential.x;\r\n\t\t\ttangential.x = -tangential.y;\r\n\t\t\ttangential.y = newy;\r\n\r\n\t\t\ttangential = tangential.mul(this.tangentialAccel);\r\n\r\n\t\t\tlet _radial = radial.add(tangential);\r\n\t\t\t_radial = _radial.add(this.gravity);\r\n\t\t\t_radial = _radial.mul(dt);\r\n\t\t\t\r\n\t\t\tthis.dir = this.dir.add(_radial);\r\n\r\n\t\t\tlet _dir = this.dir.mul(dt);\r\n\t\t\tthis.pos = this.pos.add(_dir);\r\n\t\t}\r\n\r\n\t\tthis.scale = Math.max(0, this.startScale + this.scale_d * tp);\r\n\t\tthis.color = ColorRGB.add(this.startColor, ColorRGB.scale(this.color_d, tp));\r\n\t\tthis.opacity = 1 - tp;\r\n\t\t\r\n\t\tthis.life += stamp;\r\n\t}\r\n\tisEnd() {\r\n\t\treturn this.life >= this.lifeMax;\r\n\t}\r\n\tdraw(renderer, texture, mx, my) {\r\n\t\tconst scale = this.scale;\r\n\t\tconst x = (this.startX + this.pos.x + mx);\r\n\t\tconst y = (this.startY + this.pos.y + my);\r\n\t\t\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\r\n\t\tlet color = this.color.toHSV();\r\n\t\trenderer.drawColoredGraph2(texture, x, y, scale, scale, color);\r\n\t}\r\n}\r\n\r\nclass _ParticleGroupData {\r\n\tconstructor() {\r\n\t\tthis.GRAVITY = new Vec2();\r\n\t\tthis.life = 0;\r\n\t\tthis.lifeVar = 0;\r\n\t\tthis.duration = 0;\r\n\t\tthis.totalParticle = 0;\r\n\t}\r\n}\r\n\r\nexport class ParticleGroup extends _ParticleGroupData {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {Particle[]} */\r\n\t\tthis.particles = [];\r\n\r\n\t\t/** @type {number} time_in_ms:float */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} timeElapsed_in_ms:float */\r\n\t\tthis.delta = 0;\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = Infinity;\r\n\t\t\r\n\t\tthis.duration = -1;//Infinity\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet pg = new ParticleGroup();\r\n\t\tObject.assign(pg, this);\r\n\t\tpg.particles = [];\r\n\t\tpg.time = 0;\r\n\t\tpg.delta = 0;\r\n\t\treturn pg;\r\n\t}\r\n\r\n\tevaluate() {\r\n\t\tlet totalTime = this.totalParticle * this.delay;\r\n\r\n\t\tfor (let i = 0; i < this.totalParticle; ++i) {\r\n\t\t\tconst particle = new Particle(this);\r\n\t\t\tconst t = totalTime - i * this.delay;\r\n\t\t\tparticle.life += t;\r\n\t\t\tparticle.update(t);\r\n\t\t\tparticle.life = t;\r\n\t\t\tthis.particles.push(particle);\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync load(particle_name) {\r\n\t\tthis.particleName = particle_name;\r\n\r\n\t\t/** @type ParticleGroupData */\r\n\t\tlet data = await $get.data(this._particle_path);\r\n\t\t\r\n\t\tObject.assign(this, data);\r\n\r\n\t\tthis.GRAVITY.x = data.GRAVITY.x;\r\n\t\tthis.GRAVITY.y = data.GRAVITY.y;\r\n\r\n\t\tthis.life = data.life * 1000;\r\n\t\tthis.lifeVar = data.lifeVar * 1000;\r\n\t\tthis.duration = data.duration * 1000;\r\n\r\n\t\t//this.totalParticle = 2;//debug\r\n\t\tthis.delay = this.life / this.totalParticle;\r\n\r\n\t\tif (_experimental_particle) {\r\n\t\t\tconst that = this;\r\n\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\tlet image = new Image();\r\n\t\t\t\timage.onload = function () {\r\n\t\t\t\t\tlet texture = new Sprite(data.texture);\r\n\t\t\t\t\tif (_experimental_particle === true) {\r\n\t\t\t\t\t\ttexture._url = whiteToRed(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttexture._url = \"data:image/svg+xml;utf-8,\" + encodeURIComponent(`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${this.naturalWidth}\" height=\"${this.naturalHeight}\">\r\n\t<defs>\r\n\t\t<mask id=\"Mask\">\r\n\t\t\t<image xlink:href=\"${new URL(\"images\" + that._texture_base_path, window.location).href}\"/>\r\n\t\t</mask>\r\n\t</defs>\r\n\t<g>\r\n\t\t<rect width=\"${this.naturalWidth}\" height=\"${this.naturalHeight}\" fill=\"red\" mask=\"url(#Mask)\"/>\r\n\t</g>\r\n</svg>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.texture = texture;\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t\timage.src = \"images\" + that._texture_base_path;\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.texture = new Sprite(data.texture);\r\n\t\t\tthis.texture._url = \"images\" + this._texture_base_path;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tif (this.particles.length < this.totalParticle && (!this.time || this.time > this.delay)) {\r\n\t\t\tthis.particles.push(new Particle(this));\r\n\t\t\tthis.time = 0;\r\n\t\t}\r\n\t\t\r\n\t\tthis.particles = this.particles.filter(particle => {\r\n\t\t\tif (particle.isEnd()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparticle.update(stamp);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.time += stamp;\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn (this.delta > this.duration && this.duration != -1);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Rectangle} viewRect\r\n\t * @param {number} mx - translate x\r\n\t * @param {number} my - translate y\r\n\t */\r\n\trender(renderer, viewRect, mx, my) {\r\n\t\tconst ctx = renderer.ctx;\r\n\r\n\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x), Math.trunc(-$gv.m_viewRect.y));\r\n\t\tif (this.blendFuncDst != 6 || this.blendFuncSrc != 5) {\r\n\t\t\tctx.globalCompositeOperation = \"lighter\";\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < this.particles.length; ++i) {\r\n\t\t\tconst particle = this.particles[i];\r\n\t\t\tif (!particle.isEnd()) {\r\n\t\t\t\tconst x = this.x + mx;\r\n\t\t\t\tconst y = this.y + my;\r\n\t\t\t\tconst hw = this.texture.width * particle.scale;\r\n\t\t\t\tconst hh = this.texture.height * particle.scale;\r\n\t\t\t\t\r\n\t\t\t\tif (!viewRect || viewRect.collide4f2(x + particle.startX + particle.pos.x, y + particle.startY + particle.pos.y, hw, hh)) {\r\n\t\t\t\t\tparticle.draw(renderer, this.texture, x, y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//reset\r\n\t\tctx.globalCompositeOperation = \"source-over\";\r\n\t\trenderer.globalAlpha = 1;\r\n\t}\r\n\t\r\n\tget _particle_path() {\r\n\t\treturn [\"/Effect/particle\", this.particleName].join(\"/\");\r\n\t}\r\n\tget _texture_base_path() {\r\n\t\treturn [this._particle_path, \"texture\"].join(\"/\");\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n","﻿\r\nimport { AddInitTask } from \"../init.js\";\r\n\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\nimport { LifeRenderer } from \"./Renderer/LifeRenderer.js\";\r\nimport { MobRenderer } from \"./Renderer/MobRenderer.js\";\r\nimport { NpcRenderer } from \"./Renderer/NpcRenderer.js\";\r\n\r\nimport { ParticleGroup } from \"./Renderer/ParticleSystem.js\";\r\n\r\nimport { World } from \"./Physics/World.js\";\r\nimport { Ground } from \"./Physics/Ground.js\";\r\nimport { PMob } from \"./Physics/PMob.js\";\r\nimport { SceneObject } from \"./SceneObject.js\";\r\n\r\n\r\nwindow.enable_skeletal_anim = true;\r\n\r\n/**\r\n * map sprite data\r\n */\r\nconst map_sprite = {\r\n\tBack: {},\r\n\tObj: {},\r\n\tTile: {},\r\n};\r\n\r\nwindow.$map_sprite = map_sprite;\r\n\r\n$gv.allQuest = {};\r\n\r\nasync function map_load_package(cat, pack) {\r\n\tif (!cat || !pack) {\r\n\t\tdebugger;\r\n\t}\r\n\tif (!map_sprite[cat][pack]) {\r\n\t\tlet url = `/Map/${cat}/${pack}`;\r\n\t\t\r\n\t\tmap_sprite[cat][pack] = await $get.data(url);\r\n\r\n\t\tif (map_sprite[cat][pack] == null) {\r\n\t\t\tconsole.warn(\"Empty package: \" + url);\r\n\t\t}\r\n\t}\r\n\tif (map_sprite[cat][pack]) {\r\n\t\treturn map_sprite[cat][pack];\r\n\t}\r\n\t//throw new Error();\r\n}\r\n\r\n\r\n/**\r\n * Map texture\r\n */\r\nclass MapTexture extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t * @param {!MapTexture} texture0\r\n\t */\r\n\tconstructor(_raw, url, texture0) {\r\n\t\tsuper(_raw, url);\r\n\t\t//this.className = _path;\r\n\r\n\t\ttexture0 = texture0 || MapTexture.raw_default;\r\n\t\t\r\n\t\tthis.a0 = this._get(-1, \"a0\", Number);\r\n\t\tthis.a1 = this._get(-1, \"a1\", Number);\r\n\r\n\t\tthis.movetype = this._get(texture0.movetype, \"moveType\", Number);\r\n\t\tthis.movew = this._get(texture0.movew, \"moveW\", Number);\r\n\t\tthis.moveh = this._get(texture0.moveh, \"moveH\", Number);\r\n\t\tthis.movep = this._get(texture0.movep, \"moveP\", Number);\r\n\t\tthis.mover = this._get(texture0.mover, \"moveR\", Number);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} f - flip\r\n\t * @param {number} px - position.x:int\r\n\t * @param {number} py - position.y:int\r\n\t * @param {number} time - movement_animation:float\r\n\t * @param {number} delta - graph_animation:float\r\n\t * @param {maple_scene_label} border\r\n\t */\r\n\tdraw(renderer, f, px, py, time, delta) {\r\n\t\tlet ratio = time / this.delay;\r\n\t\tlet alpha = (0 <= this.a0 || 0 <= this.a1 ? ((0 > this.a0 ? 0 : this.a0) * (1.0 - ratio) + (0 > this.a1 ? 0 : this.a1) * ratio) : 255.0);\r\n\t\tlet angle = 0;\r\n\r\n\t\tswitch (this.movetype) {\r\n\t\t\tcase 1: px = px + this.movew * Math.sin(0 == this.movep ? (delta / 1000.0) : (delta * 2.0 * Math.PI / this.movep)); break;\r\n\t\t\tcase 2: py = py + this.moveh * Math.sin(0 == this.movep ? (delta / 1000.0) : (delta * 2.0 * Math.PI / this.movep)); break;\r\n\t\t\tcase 3: if (0 != this.mover) angle = delta / this.mover; break;\r\n\t\t}\r\n\t\t\r\n\t\tlet ctx = renderer.ctx;\r\n\t\tfunction axis(x, y, w, h, c1, c2) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t\tctx.lineTo(x + w, y);\r\n\t\t\tstroke(c1, c2);\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t\tctx.lineTo(x, y + h);\r\n\t\t\tstroke(c2, c1);\r\n\t\t}\r\n\t\tfunction stroke(c1, c2) {\r\n\t\t\tctx.lineWidth = 3;\r\n\t\t\tctx.strokeStyle = c1;\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t\trenderer.loadIdentity();\r\n\t\trenderer.translate(Math.trunc(-$gv.m_viewRect.x + 0.5), Math.trunc(-$gv.m_viewRect.y + 0.5));\r\n\t\t{\r\n\t\t\trenderer.globalAlpha = Math.max(0, Math.min(alpha / 255, 1));\r\n\r\n\t\t\trenderer._drawRotaGraph(this, px, py, angle, f);\r\n\t\t}\r\n\t}\r\n}\r\nMapTexture.raw_default = {\r\n\ta0: -1,\r\n\ta1: -1,\r\n\tmovetype: 0,\r\n\tmovew: 0,\r\n\tmoveh: 0,\r\n\tmovep: 0,\r\n\tmover: 0,\r\n};\r\n\r\n/**\r\n * Map clip-texture\r\n */\r\nclass MapTextureClip extends MapTexture {\r\n\tconstructor(_raw, url) {\r\n\t\tsuper(_raw, url);\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.clip = new Rectangle();//zero Rectangle\r\n\t}\r\n}\r\n\r\nclass MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tif (_raw == null) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.error(_raw);\r\n\t\t}\r\n\t\tthis._raw = _raw;\r\n\r\n\r\n\t\t/** @type {MapTexture[]} */\r\n\t\tthis.textures = [];\r\n\r\n\t\t/** @type {number} int */\r\n\t\tthis.frame = 0;\r\n\r\n\t\t/** @type {number} time_in_ms:float */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} timeElapsed_in_ms:float */\r\n\t\tthis.delta = 0;\r\n\r\n\r\n\t\t/** @type {{[questId:string]: number}} */\r\n\t\tthis.quest = _raw.quest;\r\n\r\n\t\tfor (let qid in _raw.quest) {\r\n\t\t\tif (!$gv.allQuest[qid]) {\r\n\t\t\t\t$gv.allQuest[qid] = new Set();\r\n\t\t\t}\r\n\t\t\t$gv.allQuest[qid].add(_raw.quest[qid]);\r\n\t\t}\r\n\t\t\r\n\t\tthis._load_object_info();\r\n\t\tthis._load_back_info();\r\n\t\tthis._load_tile_info();\r\n\r\n\t\tthis.aabb = null;\r\n\t\tthis.display_aabb = false;\r\n\t\tthis.aabb_color = null;\r\n\t\t\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tthis.__max_repeat_count = 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_load_object_info() {\r\n\t\t/** @type{number} obj-type */\r\n\t\tthis.type = this._get(0, \"sign\", Number);\r\n\r\n\t\t/** @type{number} x */\r\n\t\tthis.x = this._get(0, \"x\", Number);\r\n\r\n\t\t/** @type{number} y */\r\n\t\tthis.y = this._get(0, \"y\", Number);\r\n\r\n\t\t/** @type{number} z */\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\t/** @type{number} zM */\r\n\t\tthis.zM = this._get(0, \"zM\", Number);\r\n\r\n\t\t/** @type{number} flip */\r\n\t\tthis.f = this._get(0, \"f\", Number);\r\n\t\t\r\n\t\t/** @type{name} named object */\r\n\t\tthis.name = this._raw.name;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;//data url //debug\r\n\t}\r\n\t_load_back_info() {\r\n\t\t/** @type {number} move type */\r\n\t\tthis.typeb = this._get(0, \"type\", Number);\r\n\t\tif (this.typeb < 0 || this.typeb > 7) {\r\n\t\t\talert(\"MapBackBase.typeb: \" + this.typeb);\r\n\t\t\tconsole.warn(\"MapBackBase.typeb: \" + this.typeb);\r\n\t\t}\r\n\r\n\t\t/** @type {number} a */\r\n\t\tthis.a = this._get(0, \"a\", Number);\r\n\r\n\t\t/** @type {number} rx */\r\n\t\tthis.rx = this._get(0, \"rx\", Number);\r\n\r\n\t\t/** @type {number} ry */\r\n\t\tthis.ry = this._get(0, \"ry\", Number);\r\n\r\n\t\t/** @type {number} center y */\r\n\t\tthis.cx = this._get(0, \"cx\", Number);\r\n\r\n\t\t/** @type {number} center y */\r\n\t\tthis.cy = this._get(0, \"cy\", Number);\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.backTags = this._raw.backTags;\r\n\t}\r\n\t_load_tile_info() {\r\n\t\t/** @type{number} flow */\r\n\t\tthis.flow = this._get(0, \"flow\", Number);\r\n\t\t\r\n\t\tif (this.flow & 1 && !this.cx) {\r\n\t\t\tthis.cx = 1000;\r\n\t\t}\r\n\t\tif (this.flow & 2 && !this.cy) {\r\n\t\t\tthis.cy = 1000;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {Promise}\r\n\t */\r\n\tload() {\r\n\t\tlet texture0 = this._load_texture(0, null);\r\n\t\tthis.textures[0] = texture0;\r\n\r\n\t\tfor (let i = 1; i in this._texture_raw; ++i) {//not array\r\n\t\t\tthis.textures[i] = this._load_texture(i, texture0);\r\n\t\t}\r\n\t\tthis.__calc_aabb();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t */\r\n\t_load_texture() {\r\n\t\t//nothing\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tunload() {\r\n\t\tthis.textures = [];\r\n\t}\r\n\t\r\n\t__calc_aabb() {\r\n\t\tif (this.textures.length >= 1) {\r\n\t\t\tlet mover = 0;\r\n\t\t\tfor (let i = 0; i < this.textures.length; ++i) {\r\n\t\t\t\tlet texture = this.textures[i];\r\n\t\t\t\tmover = mover | texture.mover;\r\n\t\t\t}\r\n\t\t\tconst aabb = this.compute_max_rectangle();\r\n\t\t\tif (mover) {\r\n\t\t\t\tconst r = Math.round(Math.sqrt(aabb.width ** 2 + aabb.height ** 2));\r\n\t\t\t\tconst hr = Math.round(r * 0.5);\r\n\t\t\t\tthis.aabb = new Rectangle(this.x - hr, this.y - hr, r, r);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.aabb = aabb;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (propertyName in this._raw) {\r\n\t\t\tif (converter) {\r\n\t\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this._raw[propertyName];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 1) {\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.textures[this.frame].delay) {\r\n\t\t\t\tthis.frame = ++this.frame;\r\n\r\n\t\t\t\tthis.time = 0;\r\n\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tthis.frame = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\r\n\t\tif ($gv.m_editor_mode && this.aabb) {\r\n\t\t\tthis.$editor_mouse();\r\n\t\t}\r\n\t}\r\n\t_update_and_preload(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\t\t\r\n\t\tif (fc > 1) {\r\n\t\t\tconst texture = this.textures[this.frame];\r\n\r\n\t\t\tthis.time = this.time + stamp;\r\n\t\t\t\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.time > texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame;\r\n\r\n\t\t\t\tthis.time = 0;\r\n\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tthis.frame = 0;\r\n\r\n\t\t\t\t\tdelete this.update;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst next_texture = this.textures[this.frame + 1];\r\n\t\t\tif (next_texture && !next_texture.isLoaded()) {\r\n\t\t\t\tnext_texture.__loadTexture();\r\n\t\t\t}\r\n\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t\t\r\n\t\tif ($gv.m_editor_mode && this.aabb) {\r\n\t\t\tthis.$editor_mouse();\r\n\t\t}\r\n\t}\r\n\t$editor_mouse() {\r\n\t\tconst vrect = $gv.m_viewRect;\r\n\t\tconst mcx = $gv.m_viewRect.left + $gv.mouse_x;\r\n\t\tconst mcy = $gv.m_viewRect.top + $gv.mouse_y;\r\n\t\tif (this.typeb == 0 && this.aabb.collide4f2(mcx, mcy, 1, 1))\r\n\t\t{\r\n\t\t\tthis.display_aabb = true;\r\n\t\t\tif ($gv.mouse_dl == 1 && (window.m_selected_object != this || window.m_selected_object == null)) {\r\n\t\t\t\tthis.$select();\r\n\t\t\t}\r\n\t\t\telse if (window.m_hover_object == null) {\r\n\t\t\t\twindow.m_hover_object = this;\r\n\t\t\t\tthis.aabb_color = \"rgba(0,255,0,0.25)\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.aabb_color = \"rgba(0,0,255,0.25)\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.$unselect();\r\n\t\t}\r\n\t\tif (window.m_selected_object == this) {\r\n\t\t\tthis.display_aabb = true;\r\n\t\t\tthis.aabb_color = \"rgba(255,0,0,0.5)\";\r\n\t\t}\r\n\t}\r\n\t$select() {\r\n\t\tif (window.m_selected_object) {\r\n\t\t\twindow.m_selected_object.$unselect();//prev\r\n\t\t}\r\n\t\twindow.m_selected_object = this;\r\n\t\twindow.m_hover_object = null;\r\n\t\t$gv.mouse_dl = 0;\r\n\t}\r\n\t$unselect() {\r\n\t\tthis.display_aabb = false;\r\n\t}\r\n\t$isRepeatX() {\r\n\t\treturn this.typeb == 1 || this.typeb == 4;\r\n\t}\r\n\t$isRepeatY() {\r\n\t\treturn this.typeb == 2 || this.typeb == 5;\r\n\t}\r\n\t\r\n\tcompute_rectangle(index) {\r\n\t\tconst texture = this.textures[index];\r\n\t\tif (texture) {\r\n\t\t\tconst width = texture.width;\r\n\t\t\tconst height = texture.height;\r\n\r\n\t\t\treturn new Rectangle(this.x - (this.f ? -texture.x + width : texture.x), this.y - texture.y, width, height);\r\n\t\t}\r\n\t}\r\n\tcompute_max_rectangle() {\r\n\t\tif (this.textures.length > 0) {\r\n\t\t\tlet { left, top, right, bottom } = this.compute_rectangle(0);\r\n\t\t\t\t\r\n\t\t\tfor (let j = 1; j < this.textures.length; ++j) {\r\n\t\t\t\tlet rect = this.compute_rectangle(j);\r\n\t\t\t\t\r\n\t\t\t\tleft = Math.min(left, rect.left);\r\n\t\t\t\ttop = Math.min(top, rect.top);\r\n\t\t\t\tright = Math.max(right, rect.right);\r\n\t\t\t\tbottom = Math.max(bottom, rect.bottom);\r\n\t\t\t}\r\n\t\t\treturn Rectangle.parse(left, top, right, bottom);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} index_of_texture\r\n\t * @param {number} mx - move x\r\n\t * @param {number} my - move x\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t__draw_texture(renderer, index_of_texture, mx, my, viewRect) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((--this.__max_repeat_count) <= 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this.typeb != 0 || (!this.aabb || this.aabb.collide(viewRect))) {\r\n\t\t\tlet texture = this.textures[index_of_texture];\r\n\r\n\t\t\tif (index_of_texture && !texture.isLoaded()) {\r\n\t\t\t\t// find loaded texture\r\n\t\t\t\tfor (let i = index_of_texture - 1; i >= 0; --i) {\r\n\t\t\t\t\ttexture = this.textures[index_of_texture];\r\n\t\t\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttexture.draw(renderer, this.f, this.x + mx, this.y + my, this.time, this.delta);//MapleSceneTexture#draw\r\n\t\t}\r\n\t\t\r\n\t\tif ($gv.m_display_selected_object && $gv.m_editor_mode && this.aabb && this.display_aabb) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\t\t\tconst x = Math.trunc((-viewRect.left + 0.5) + this.aabb.left);\r\n\t\t\tconst y = Math.trunc((-viewRect.top + 0.5) + this.aabb.top);\r\n\t\t\t\r\n\t\t\trenderer.loadIdentity();\r\n\r\n\t\t\trenderer.globalAlpha = 1;\r\n\t\t\t\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x, y, this.aabb.width, this.aabb.height);\r\n\t\t\tctx.fillStyle = this.aabb_color || \"rgba(20,255,20,0.5)\";//\r\n\t\t\tctx.fill();\r\n\t\t\t\r\n\t\t\tctx.lineWidth = 3;\r\n\t\t\t//ctx.lineCap = \"round\";\r\n\r\n\t\t\tctx.setLineDash([3, 3]);\r\n\t\t\tctx.lineDashOffset = 0;\r\n\t\t\tctx.strokeStyle = \"rgba(0,0,0,0.5)\";\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.setLineDash([3, 3]);\r\n\t\t\tctx.lineDashOffset = 3;\r\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.5)\";\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.setLineDash([]);\r\n\t\t\tctx.lineWidth = 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @protected\r\n\t * @param {IRenderer} renderer\r\n\t * @param {int} mx\r\n\t * @param {int} my\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t__draw(renderer, mx, my, viewRect) {\r\n\t\tthis.__draw_texture(renderer, this.frame, mx, my, viewRect);//MapleSceneTexture#draw\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} horizontal\r\n\t * @param {boolean} vertical\r\n\t * @param {number} mx - int\r\n\t * @param {number} my - int\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\t_draw(renderer, horizontal, vertical, mx, my, viewRect) {\r\n\t\tlet texture = this.textures[this.frame];\r\n\t\tif (texture == null) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// viewRect - canvas rectangle\r\n\t\tlet { left, top, right, bottom } = viewRect;\r\n\t\t// image position\r\n\t\tlet ix = this.x - (this.f ? -texture.x + texture.width : texture.x);\r\n\t\tlet iy = this.y - texture.y;\r\n\t\t// tile size\r\n\t\tlet tw = 0 == this.cx ? texture.width : this.cx;\r\n\t\tlet th = 0 == this.cy ? texture.height : this.cy;\r\n\t\t// tile area\r\n\t\tlet x1 = left - (tw + (left - mx - ix) % tw);\r\n\t\tlet y1 = top - (th + (top - my - iy) % th);\r\n\t\tlet x2 = right + (tw - (right - mx - ix) % tw);\r\n\t\tlet y2 = bottom + (th - (bottom - my - iy) % th);\r\n\t\t\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tthis.__max_repeat_count = 1024;\r\n\t\t}\r\n\r\n\t\tif (horizontal)\r\n\t\t\tif (vertical)\r\n\t\t\t\tfor (let yy = y1; yy < y2; yy = yy + th)\r\n\t\t\t\t\tfor (let xx = x1; xx < x2; xx = xx + tw)\r\n\t\t\t\t\t\tthis.__draw(renderer, xx - ix, yy - iy, viewRect);\r\n\t\t\telse\r\n\t\t\t\tfor (let xx = x1; xx < x2; xx = xx + tw)\r\n\t\t\t\t\tthis.__draw(renderer, xx - ix, my, viewRect);\r\n\t\telse if (vertical)\r\n\t\t\tfor (let yy = y1; yy < y2; yy = yy + th)\r\n\t\t\t\tthis.__draw(renderer, mx, yy - iy, viewRect);\r\n\t\telse\r\n\t\t\tthis.__draw(renderer, mx, my, viewRect);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif (!this.textures.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet mrx = (this.rx + 100) * center.x / 100;\r\n\t\tlet mry = (this.ry + 100) * center.y / 100;\r\n\r\n\t\tswitch (this.typeb) {\r\n\t\t\tcase 0: this._draw(renderer, false, false, mrx, mry, viewRect); break;\r\n\t\t\tcase 1: this._draw(renderer, true, false, mrx, mry, viewRect); break;\r\n\t\t\tcase 2: this._draw(renderer, false, true, mrx, mry, viewRect); break;\r\n\t\t\tcase 3: this._draw(renderer, true, true, mrx, mry, viewRect); break;\r\n\t\t\tcase 4: this._draw(renderer, true, false, Math.trunc(this.delta / 200 * this.rx), mry, viewRect); break;\r\n\t\t\tcase 5: this._draw(renderer, false, true, mrx, Math.trunc(this.delta / 200 * this.ry), viewRect); break;\r\n\t\t\tcase 6: this._draw(renderer, true, true, Math.trunc(this.delta / 200 * this.rx), mry, viewRect); break;\r\n\t\t\tcase 7: this._draw(renderer, true, true, mrx, Math.trunc(this.delta / 200 * this.ry), viewRect); break;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _texture_base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nclass MapObject extends MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t\r\n\t\tif (this._raw.cx != null && (!this._raw.ry || this._raw.ry == -100)) {\r\n\t\t\tif (this._raw.rx) {//!= null && != 0\r\n\t\t\t\tif (this._raw.cy != null) {\r\n\t\t\t\t\tthis.typeb = 6;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.typeb = 4;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.typeb = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._raw.cy != null && (!this._raw.rx || this._raw.rx == -100)) {\r\n\t\t\tif (this._raw.ry) {//!= null && != 0\r\n\t\t\t\tif (this._raw.cx != null) {\r\n\t\t\t\t\tthis.typeb = 7;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.typeb = 5;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.typeb = 2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t * @returns {MapTexture}\r\n\t */\r\n\t_load_texture(i, texture0) {\r\n\t\tconst null_url = undefined;\r\n\t\tlet path = [\"/Map\", \"Obj\", this._texture_base_path, i].join(\"/\");\r\n\r\n\t\tlet texture = new MapTexture(this._texture_raw[i], null_url, texture0);\r\n\t\ttexture._url = path;\r\n\r\n\t\treturn texture;\r\n\t}\r\n\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.oS, this._raw.l0, this._raw.l1, this._raw.l2].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * textures; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry {\r\n\t\t\treturn map_sprite.Obj[this._raw.oS][this._raw.l0][this._raw.l1][this._raw.l2];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass MapParticle extends MapObject {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {ParticleGroup[]} */\r\n\t\tthis.groups = [];\r\n\t}\r\n\t\r\n\tasync load(particle_name) {\r\n\t\tlet pg = new ParticleGroup();\r\n\t\t\r\n\t\tawait pg.load(particle_name);\r\n\r\n\t\tlet keys = Object.keys(this._raw)\r\n\t\t\t.map(i => {\r\n\t\t\t\tlet n = parseInt(i, 10);\r\n\t\t\t\tif (Number.isSafeInteger(n)) {\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.warn(\"MapParticle.\" + particle_name + \".id: \" + i);\r\n\t\t\t\treturn null;\r\n\t\t\t})\r\n\t\t\t.filter(i => i != null);\r\n\t\t\t\r\n\t\tfor (let i of keys) {\r\n\t\t\tthis.groups[i] = pg.clone();\r\n\t\t\tthis.groups[i].x = this._raw[i].x;\r\n\t\t\tthis.groups[i].y = this._raw[i].y;\r\n\t\t\tthis.groups[i].evaluate();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @param {number} stamp - time in millisecond */\r\n\tupdate(stamp) {\r\n\t\tfor (let i = 0; i < this.groups.length; ++i) {\r\n\t\t\tconst pg = this.groups[i];\r\n\t\t\tpg.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tfor (let i = 0; i < this.groups.length; ++i) {\r\n\t\t\tconst pg = this.groups[i];\r\n\t\t\tlet mx = (this.rx + 100) * center.x / 100;\r\n\t\t\tlet my = (this.ry + 100) * center.y / 100;\r\n\t\t\tpg.render(renderer, viewRect, mx, my);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{particle:{[name:string]:{}}}} mapRawData\r\n\t * @param {SceneMap} sceneMap\r\n\t */\r\n\tstatic construct(mapRawData, sceneMap) {\r\n\t\tlet tasks = [];\r\n\t\tlet particleList = [];\r\n\t\tfor (let particleName in mapRawData.particle) {\r\n\t\t\tlet particleRaw = mapRawData.particle[particleName];\r\n\t\t\tlet mpp = new MapParticle(particleRaw);\r\n\t\t\ttasks.push(mpp.load(particleName));\r\n\t\t\tparticleList.push(mpp);\r\n\t\t}\r\n\t\tsceneMap.particleList = particleList;\r\n\t\treturn tasks;\r\n\t}\r\n}\r\n\r\nclass MapObjectSkeletalAnim extends MapObject {\r\n\tconstructor(_raw, url) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {SSAnim} */\r\n\t\tthis.ssanim = null;\r\n\t\t/** @type {string} */\r\n\t\tthis._fname = null;\r\n\t\t\r\n\t\t///** @type{number} tags */\r\n\t\t//this._tags = this._get(0, \"tags\", String);\r\n\t}\r\n\t/** @type {string} */\r\n\tget _folder() {\r\n\t\tconst raw = this._raw;\r\n\t\t//[\"Obj\"\t ][obj.oS][obj.l0][obj.l1][obj.l2][0    ][\"\"]\r\n\t\treturn `/Map/Obj/${raw.oS}/${raw.l0}/${raw.l1}/${raw.l2}`;\r\n\t}\r\n\tasync load() {\r\n\t\tif (SSAnim) {\r\n\t\t\tconst raw = this._raw;\r\n\t\t\tlet ssanim;\r\n\t\t\t\r\n\t\t\tssanim = new SSAnim();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tawait ssanim.load(this._folder);\r\n\t\t\t\tssanim.update(0);//init pos data\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (raw.spineRandomStart) {\r\n\t\t\t\tlet t = ssanim.anim_length * Math.random();\r\n\t\t\t\tssanim.setAnimTime(t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst r = Math.round(Math.sqrt(ssanim.width ** 2 + ssanim.height ** 2));\r\n\t\t\tconst hr = Math.round(r * 0.5);\r\n\t\t\tthis.aabb = new Rectangle(this.x - hr, this.y - hr, r, r);\r\n\t\t\t\r\n\t\t\tthis.ssanim = ssanim;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tunload() {\r\n\t\tif (this.ssanim) {\r\n\t\t\tthis.ssanim.unload();\r\n\t\t\tthis.ssanim = null;\r\n\t\t}\r\n\t}\r\n\tupdate(stamp) {\r\n\t\tthis.delta += stamp;\r\n\t\t\r\n\t\tif (this.ssanim && window.enable_skeletal_anim) {\r\n\t\t\tthis.ssanim.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect - ?? no use\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif ($gv.m_display_skeletal_anim) {\r\n\t\t\tconst x = Math.trunc((-$gv.m_viewRect.x + 0.5) + this.x);\r\n\t\t\tconst y = Math.trunc((-$gv.m_viewRect.y + 0.5) + this.y);\r\n\r\n\t\t\trenderer.ctx.setTransform(1, 0, 0, -1, x, y);\r\n\r\n\t\t\tif (this.ssanim) {\r\n\t\t\t\tthis.ssanim.render();\r\n\t\t\t}\r\n\t\t\tif (this.display_aabb) {\r\n\t\t\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x + 0.5), Math.trunc(-$gv.m_viewRect.y + 0.5));\r\n\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(this.x - this.ssanim.width * 0.5, this.y - this.ssanim.height, this.ssanim.width, this.ssanim.height);\r\n\t\t\t\tctx.fillStyle = \"rgba(20,255,20,0.5)\";\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass MapTile extends MapObject {\r\n\tconstructor(_raw, info) {\r\n\t\tsuper(_raw);\r\n\t\tthis._info = info;\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\tload() {\r\n\t\tlet texture = new MapTexture(this._texture_raw);\r\n\r\n\t\tthis.textures[0] = texture;\r\n\t\tthis.textures[0]._url = [\"/Map\", \"Tile\", this._info.tS, this._raw.u, this._raw.no].join(\"/\");\r\n\r\n\t\tthis.__calc_aabb();\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * textures; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry{\r\n\t\t\treturn map_sprite.Tile[this._info.tS][this._raw.u][this._raw.no];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._info.tS, this._raw.u, this._raw.no].join(\"/\");\r\n\t}\r\n}\r\n\r\n/**\r\n * MapEditor: Map Portal\r\n * Map graph (struct): \"Map/Map/Graph/\"\r\n */\r\nclass MapPortal extends MapObject {\r\n\tconstructor(_raw, mapRenderer) {\r\n\t\tsuper(_raw);//load x, y\r\n\t\t\r\n\t\tthis.mapRenderer = mapRenderer;\r\n\t\t\r\n\t\t/** @type {number} - to mapId */\r\n\t\tthis.tm = null;\r\n\t\t\r\n\t\t/** @type {string} - tn to pn */\r\n\t\tthis.tn = null;\r\n\r\n\t\t/** @type {string} - pn to tn */\r\n\t\tthis.pn = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.script = null;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.enable = null;\r\n\t\t\r\n\t\t/** @type {\"portalStart\"|\"portalContinue\"|\"portalExit\"} */\r\n\t\tthis.state = null;\r\n\r\n\t\t/** @type {[\"portalStart\",\"portalContinue\",\"portalExit\"]} */\r\n\t\tthis.states = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.skin = null;\r\n\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\t\r\n\t//sync\r\n\tload() {\r\n\t\tthis.tm = this._get(\"\", \"tm\", String).padStart(9, \"0\");//??\r\n\t\tthis.tn = this._get(\"\", \"tn\", String);//??\r\n\t\tthis.pn = this._get(\"\", \"pn\", String);//pt_go01 => goto portal_01\r\n\t\tthis.script = this._get(null, \"script\", String);\r\n\t\t\r\n\t\tthis.enable = this.tm != \"\" && this.tm != \"999999999\";\r\n\r\n\t\tthis._loadTexture();\r\n\t}\r\n\tunload() {\r\n\t\tif (this.body) {\r\n\t\t\tthis.body.GetWorld().DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetMap() {\r\n\t\tif (this.enable) {\r\n\t\t\treturn this.tm;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif (this.enable) {\r\n\t\t\tsuper.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t\telse if (this.__display_mode) {\r\n\t\t\tsuper.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t}\r\n\r\n\t_loadTexture() {\r\n\t\t///** @type {number} */\r\n\t\t//let type = this._raw.pt;\r\n\t\t//\r\n\t\t//let skins = this._loaded_portals[this.__display_mode][type];\r\n\t\t//\r\n\t\t//this.textures = skins.default || skins[0];\r\n\r\n\t\t//MapObject::type\r\n\t\tif (this.__display_mode == \"game\") {\r\n\t\t\tthis.type = \"p\";//??\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.type = \"q\";//??\r\n\t\t}\r\n\r\n\t\tconst _raw = MapPortal._portals_raw;\r\n\r\n\t\tthis.textures.length = 0;//clear\r\n\r\n\t\tconst type = MapPortal._type_map[this._raw.pt];\r\n\t\t\r\n\t\tif (this.__display_mode == \"editor\") {\r\n\t\t\tlet texture = new MapTexture(_raw.editor[type]);\r\n\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type].join(\"/\");\r\n\t\t\tthis.textures[0] = texture;\r\n\t\t}\r\n\t\telse if (_raw.game[type]) {\r\n\t\t\tlet skin = this.skin != null ? this.skin : \"default\";\r\n\t\t\tif (\"0\" in _raw.game[type][skin]) {//is animation frames\r\n\t\t\t\tlet textures = _raw.game[type][skin];\r\n\t\t\t\tfor (let i in textures) {\r\n\t\t\t\t\tlet texture = new MapTexture(textures[i]);\r\n\t\t\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type, skin, i].join(\"/\");\r\n\t\t\t\t\tthis.textures.push(texture);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: need default state\r\n\t\t\t\tthis.states = Object.keys(_raw.game[type][skin]);\r\n\t\t\t\tthis.state = this.states[1 % this.states.length];\r\n\r\n\t\t\t\tlet textures = _raw.game[type][skin][this.state];\r\n\t\t\t\tfor (let i in textures) {\r\n\t\t\t\t\tlet texture = new MapTexture(textures[i]);\r\n\t\t\t\t\ttexture._url = [this._texture_base_path, this.__display_mode, type, skin, this.state, i].join(\"/\");\r\n\t\t\t\t\tthis.textures.push(texture);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//reset\r\n\t\tthis.delta = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\t}\r\n\r\n\tget _texture_base_path() {\r\n\t\treturn \"/Map/MapHelper/portal\";\r\n\t}\r\n\tget _getTexturePath() {\r\n\t\tif (this.__display_mode == \"editor\") {\r\n\t\t\treturn [\"/Map/MapHelper/portal\", this.__display_mode].join(\"/\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn [\"/Map/MapHelper/portal\", this.__display_mode].join(\"/\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {\"editor\"|\"game\"}\r\n\t */\r\n\tget __display_mode() {\r\n\t\treturn $gv.m_editor_mode ? \"editor\" : \"game\";\r\n\t}\r\n\r\n\t///**\r\n\t// * @type {{editor:{[pt:number]:{[skin:number]:MapTexture}},game:{[pt:number]:{[skin:number]:MapTexture[],default:MapTexture[]}}}}\r\n\t// */\r\n\t//get _loaded_portals() {\r\n\t//\treturn MapPortal._portals;\r\n\t//}\r\n\t\r\n\tstatic async Init() {\r\n\t\tMapPortal._portals_raw = await $get.data(\"/Map/MapHelper/portal\");\r\n\r\n\t\tMapPortal._type_map = Object.keys(MapPortal._portals_raw.editor);\r\n\t}\r\n}\r\nMapPortal._portals_raw = {};\r\nMapPortal._type_map = {};\r\n//MapPortal._portals = {};\r\nMapPortal._script = {};\r\n\r\nclass MapPortalManager {\r\n\tconstructor() {\r\n\t\t/** @type {MapPortal[]} */\r\n\t\tthis.portals = null;\r\n\r\n\t\tthis.__display_mode = this.__display_mode;\r\n\t}\r\n\t\r\n\tasync load(map_raw_data, mapRenderer) {\r\n\t\tlet portals = [];\r\n\t\tfor (let i = 0; i in map_raw_data.portal; ++i) {\r\n\t\t\tlet raw = map_raw_data.portal[i];\r\n\t\t\tlet pt = new MapPortal(raw, mapRenderer);\r\n\t\t\t\r\n\t\t\tpt.load();//sync\r\n\t\t\t\r\n\t\t\t//if (pt.enable) {\r\n\t\t\t\tmapRenderer.controller.createPortal(pt);//inject body\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tportals.push(pt);\r\n\t\t}\r\n\t\tthis.portals = portals;\r\n\t}\r\n\tunload() {\r\n\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\tlet ptl = this.portals[i];\r\n\t\t\tptl.unload();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.__display_mode != $gv.m_editor_mode) {\r\n\t\t\tthis.__display_mode = $gv.m_editor_mode;\r\n\r\n\t\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\t\tlet portal = this.portals[i];\r\n\t\t\t\tportal._loadTexture();\r\n\t\t\t\tportal.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\t\tlet portal = this.portals[i];\r\n\t\t\t\tportal.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tfor (let i = 0; i < this.portals.length; ++i) {\r\n\t\t\tlet portal = this.portals[i];\r\n\t\t\tportal.draw(renderer, center, viewRect);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//          [category][source]\r\n//\r\n//static back\r\n//imgBack = [category][source][class ][number][\"\"]\r\n//imgBack = [\"Back\"  ][obj.bS][\"bacK\"][obj.no][\"\"]\r\n//\r\n//animation back\r\n//imgBack = [category][source][class ][number][frame][\"\"]\r\n//imgBack = [\"Back\"  ][obj.bS][\"ani\" ][obj.no][0    ][\"\"]\r\n//\r\n//object\r\n//imgObj  = [category][source][path_0][path_1][path_2][frame][\"\"]\r\n//imgObj  = [\"Obj\"\t ][obj.oS][obj.l0][obj.l1][obj.l2][0    ][\"\"]\r\n\r\nclass MapBackBase extends MapObjectBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IAsyncLoading}\r\n */\r\nclass MapBack extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\tload() {\r\n\t\tlet path = [\"/Map\", \"Back\", this._texture_base_path].join(\"/\");\r\n\r\n\t\tif (this._raw.bS) {\r\n\t\t\tconst raw = this._texture_raw;\r\n\t\t\tif (raw) {\r\n\t\t\t\tthis.textures[0] = new MapTexture(this._texture_raw);\r\n\t\t\t\tthis.textures[0]._url = path;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn(\"MapBack path ?: \" + path);\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.bS, \"back\", this._raw.no].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * texture; info & data\r\n\t */\r\n\tget _texture_raw() {\r\n\t\tif (this._raw.bS && this._raw.no) {\r\n\t\t\treturn map_sprite.Back[this._raw.bS][\"back\"][this._raw.no];\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {IAsyncLoading}\r\n */\r\nclass MapBackAnimation extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\tthis.update = this._update_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} i - texture index\r\n\t * @param {MapTexture} texture0\r\n\t * @returns {MapTexture}\r\n\t */\r\n\t_load_texture(i, texture0) {\r\n\t\tlet path = [\"/Map\", \"Back\", this._texture_base_path, i].join(\"/\");\r\n\r\n\t\tlet texture = new MapTexture(this._texture_raw[i]);\r\n\t\ttexture._url = path;\r\n\r\n\t\treturn texture;\r\n\t}\r\n\t\r\n\tget _texture_base_path() {\r\n\t\treturn [this._raw.bS, \"ani\", this._raw.no].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * raw data\r\n\t * texture set; info & data\r\n\t * not array\r\n\t */\r\n\tget _texture_raw() {\r\n\t\ttry {\r\n\t\t\treturn map_sprite.Back[this._raw.bS][\"ani\"][this._raw.no];\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass MapBackSkeletalAnim extends MapBackBase {\r\n\tconstructor(_raw) {\r\n\t\tsuper(_raw);\r\n\t\t/** @type {SSAnim} */\r\n\t\tthis.ssanim = null;\r\n\t}\r\n\t/** @type {string} */\r\n\tget _folder() {\r\n\t\tconst ob = this._raw;\r\n\t\t//[\"Back\"  ][obj.bS][\"ani\" ][obj.no][0    ][\"\"]\r\n\t\treturn `/Map/Back/${ob.bS}/spine/${ob.no}`;\r\n\t}\r\n\tasync load() {\r\n\t\tif (SSAnim) {\r\n\t\t\tlet ssanim = new SSAnim();\r\n\t\t\ttry {\r\n\t\t\t\tawait ssanim.load(this._folder);\r\n\t\t\t\tssanim.update(0);//init pos data\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.ssanim = ssanim;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tunload() {\r\n\t\tif (this.ssanim) {\r\n\t\t\tthis.ssanim.unload();\r\n\t\t\tthis.ssanim = null;\r\n\t\t}\r\n\t}\r\n\tupdate(stamp) {\r\n\t\tif (this.ssanim && window.enable_skeletal_anim) {\r\n\t\t\tthis.ssanim.update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect - ?? no use\r\n\t */\r\n\tdraw(renderer, center, viewRect) {\r\n\t\tif ($gv.m_display_skeletal_anim) {\r\n\t\t\tif (this.ssanim) {\r\n\t\t\t\tconst x = Math.trunc((-$gv.m_viewRect.x + 0.5) + this.x);\r\n\t\t\t\tconst y = Math.trunc((-$gv.m_viewRect.y + 0.5) + this.y);\r\n\r\n\t\t\t\trenderer.ctx.setTransform(1, 0, 0, -1, x, y);\r\n\r\n\t\t\t\tthis.ssanim.render();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class LifeSpawnPoint {\r\n\t/**\r\n\t * @param {object} raw\r\n\t * @param {string} spawnId - spawn index\r\n\t */\r\n\tconstructor(raw, spawnId) {\r\n\t\tObject.assign(this, raw);\r\n\t\t\r\n\t\tthis.spawnId = spawnId;\r\n\t\t\r\n\t\t/**\r\n\t\t * millisecond elapsed after life spawn\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/**\r\n\t\t * now count of life was spawn\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.count = 0;\r\n\r\n\t\tif (!(raw instanceof LifeSpawnPoint)) {\r\n\t\t\tthis.fh = raw.fh - 1;\r\n\t\t}\r\n\t}\r\n\tincreaseLife() {\r\n\t\t++this.count;\r\n\t\tthis.time = 0;\r\n\t}\r\n\tdecreaseLife() {\r\n\t\t--this.count;\r\n\t\tthis.time = 0;\r\n\t}\r\n\tgetTimeElapsedAfterLifeSpawn() {\r\n\t\treturn this.time;\r\n\t}\r\n\tgetNowCountOfLifeWasSpawn() {\r\n\t\treturn this.count;\r\n\t}\r\n\t/**\r\n\t * @returns {LifeSpawnPoint}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor(this);\r\n\t}\r\n}\r\n\r\n/**\r\n * Mob / NPC controller\r\n */\r\nexport class MapLifeEntity extends SceneObject {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper();\r\n\t\tlet a = {\r\n\t\t\ttype: \"m\",\r\n\t\t\tid: 8643000,\r\n\t\t\tx: 720,\r\n\t\t\ty: -771,\r\n\t\t\tmobTime: 0,\r\n\t\t\tf: 0,\r\n\t\t\thide: 0,\r\n\t\t\tfh: 41 - 1,\r\n\t\t\tcy: -761,\r\n\t\t\trx0: 647,\r\n\t\t\trx1: 720,\r\n\t\t};\r\n\r\n\t\t/** @type {LifeRenderer} LifeRenderer|MobRenderer|NpcRenderer */\r\n\t\tthis.renderer = null;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_dead = false;\r\n\r\n\t\t/** @type {LifeSpawnPoint} */\r\n\t\tthis.spawn = lifeSpawnPoint;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.x = lifeSpawnPoint.x;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y = lifeSpawnPoint.cy;//lifeSpawnPoint.y\r\n\t\t\r\n\t\tthis.z = 5;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.angle = 0;\r\n\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis.front = Number(lifeSpawnPoint.f) ? 1 : -1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.opacity = Number(lifeSpawnPoint.hide) ? 0.5 : 1;\r\n\t\t\r\n\t\tthis.lifeId = lifeId;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.type = lifeSpawnPoint.type;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.id = lifeSpawnPoint.id;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.mobTime = lifeSpawnPoint.mobTime;\r\n\r\n\t\t/////** @type {number} */\r\n\t\t////this.cy = lifeSpawnPoint.cy;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.rx0 = lifeSpawnPoint.rx0;\r\n\r\n\t\t///** @type {number} */\r\n\t\t//this.rx1 = lifeSpawnPoint.rx1;\r\n\t}\r\n\r\n\t//AfterStep\r\n\t//get x() {\r\n\t//\treturn this._x;\r\n\t//}\r\n\t//set x(x) {\r\n\t//\tthis._x = x;\r\n\t//}\r\n\t//get y() {\r\n\t//\treturn this._y;\r\n\t//}\r\n\t//set y(y) {\r\n\t//\tthis._y = y;\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {World} mapController\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tstatic Create(lifeSpawnPoint, mapController, lifeId) {\r\n\t\tlet life;\r\n\r\n\t\tif (lifeSpawnPoint.type == \"m\") {\r\n\t\t\tlife = new MapMob(lifeSpawnPoint, lifeId);\r\n\t\t}\r\n\t\telse if (lifeSpawnPoint.type == \"n\") {\r\n\t\t\tlife = new MapNpc(lifeSpawnPoint, lifeId);\r\n\t\t\t//return;\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert(\"map life type: \" + lifeSpawnPoint.type);\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (life) {\r\n\t\t\tlife.load(lifeSpawnPoint.id, mapController);\r\n\t\t}\r\n\r\n\t\treturn life;\r\n\t}\r\n\t\r\n\t/**\r\n\t * load life description\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint - {id: string, type:\"m\"||\"n\"}\r\n\t */\r\n\tstatic async loadLifeDesc(lifeSpawnPoint) {\r\n\t\tlet desc, id = lifeSpawnPoint.id;\r\n\t\t\r\n\t\tswitch (lifeSpawnPoint.type) {\r\n\t\t\tcase \"m\":\r\n\t\t\t\tdesc = MobRenderer.loadDescription(id);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"n\":\r\n\t\t\t\tdesc = NpcRenderer.loadDescription(id);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\talert(\"map life type: \" + lifeSpawnPoint.type);\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\treturn desc;\r\n\t}\r\n\r\n\t/**\r\n\t * create entity, load data\r\n\t * @param {string} id -  npc or mob id\r\n\t * @param {World} mapController - no use\r\n\t */\r\n\tasync load(id, mapController) {//??: rename to create\r\n\t\tif (this.renderer) {\r\n\t\t\tawait this.renderer.load(id);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t\talert(\"Unknow type of life in map\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t_destroy(mapController) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number} type\r\n\t */\r\n\tdie(type) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\tthis.is_dead = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\trenderer.globalAlpha = Math.max(0, Math.min(this.opacity, 1));\r\n\t\tthis.renderer.draw(renderer, this.x, this.y, this.angle, this.front < 0);\r\n\t}\r\n}\r\nclass MapMob extends MapLifeEntity {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper(lifeSpawnPoint, lifeId);\r\n\t\tthis.renderer = new MobRenderer();\r\n\r\n\t\t/** @type {PMob} */\r\n\t\tthis.$physics = null;\r\n\t\t\r\n\t\t/** @type {{[x:string]: object}} - {[level]: skill} */\r\n\t\tthis.skills = {};\r\n\r\n\t\t//TODO: load mob info\r\n\t\tthis.hp = 100000;\r\n\t}\r\n\t/**\r\n\t * @param {string} id mobId\r\n\t * @param {World} mapController\r\n\t */\r\n\tasync load(id, mapController) {//??: rename to create\r\n\t\tawait super.load(id);\r\n\r\n\t\tthis.$physics = mapController.createMob(this);\r\n\t\tthis.$physics._loadAction(this.renderer.actions);\r\n\t\t\r\n\t\tawait this._load_skill_by_mob_id(id);\r\n\r\n\t\t// experiment\r\n\t\ttry {\r\n\t\t\tthis._load_skill_info();\r\n\r\n\t\t\tconst firstAttack = this.renderer._raw.info.attack[this.renderer._raw.info.firstAttack].info;\r\n\t\t\tif (this.skill_map[firstAttack]) {\r\n\t\t\t\tconst firstSkillInfo = this.skill_map[firstAttack].skill_list[0];\r\n\r\n\t\t\t\tthis.invokeSkill(firstSkillInfo.skill, firstSkillInfo.level);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\t//not thing\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {SceneObject} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tif (!this.is_dead) {\r\n\t\t\tthis.hp -= damage;\r\n\r\n\t\t\tconsole.log(`Mob(${this.$objectid}) 被 ${chara.$objectid} 攻擊，減少 ${damage} HP，剩下 ${this.hp}`);\r\n\t\t\t\r\n\t\t\tif (this.hp <= 0) {\r\n\t\t\t\tthis.die();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * if (chara == null) ??\r\n\t * @param {SceneObject|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PPlayerState} pState\r\n\t */\r\n\t_applyState(pState) {\r\n\t\t//move stand jump hit1 die1\r\n\r\n\t\tif (pState.jump) {\r\n\t\t\tthis.renderer.action = \"jump\";\r\n\t\t}\r\n\t\telse if (pState.walk) {\r\n\t\t\tthis.renderer.action = \"move\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderer.action = \"stand\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$physics) {\r\n\t\t\tif (!this.is_dead) {\r\n\t\t\t\tthis._applyState(this.$physics.state);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.$physics.stop();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.renderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\tif ($gv.m_display_mob) {\r\n\t\t\tsuper.draw(renderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* skill need map to action */\r\n\t_load_skill_info() {\r\n\t\tconst _raw = this.renderer._raw;\r\n\t\tlet attack = _raw.info.attack;\r\n\t\tlet skill = _raw.info.skill;\r\n\t\t\r\n\t\tattack[1].info == _raw.info.skill[0].info\r\n\t\tattack[1].info == _raw.skill1.info\r\n\t\t\r\n\t\tvar skill_map = {};\r\n\t\tfor (let i = 1, sname; (sname = \"skill\" + i) in _raw; ++i) {\r\n\t\t\tlet s = _raw[sname];\r\n\t\t\tif (s.info) {\r\n\t\t\t\tskill_map[s.info] = {\r\n\t\t\t\t\tanim: sname,\r\n\t\t\t\t\tskill_list: [],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar skill_info = {};\r\n\t\tfor (let i in _raw.info.skill) {\r\n\t\t\tlet si = _raw.info.skill[i];\r\n\t\t\tskill_info[si.skill + \".\" + si.level] = si;\r\n\t\t\tif (skill_map[si.info]) {\r\n\t\t\t\tskill_info[si.skill + \".\" + si.level].$anim = skill_map[si.info].anim;\r\n\t\t\t\tskill_map[si.info].skill_list.push(si);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.skill_map = skill_map;\r\n\t\tthis.skill_info = skill_info;\r\n\t}\r\n\t\r\n\t_load_skill_by_mob_id(mob_id) {\r\n\t\tlet tasks = [];\r\n\t\tswitch(mob_id) {\r\n\t\t\tcase \"8880140\":\r\n\t\t\tcase \"8880141\": {\r\n\t\t\t\t\tconst FlowerTrap = require(\"./MobSkill/238.FlowerTrap.js\").FlowerTrap;\r\n\t\t\t\t\tconst FairyDust = require(\"./MobSkill/238.FairyDust.js\").FairyDust;\r\n\t\t\t\t\tthis.skills = {\r\n\t\t\t\t\t\t[1]: new FlowerTrap(),\r\n\t\t\t\t\t\t[2]: new FlowerTrap(),\r\n\t\t\t\t\t\t[3]: new FlowerTrap(),\r\n\t\t\t\t\t\t[4]: new FairyDust(null, null),\r\n\t\t\t\t\t\t[5]: { load() {}, invoke: function (level) { console.info(\"invoke LaserRain\"); } },\r\n\t\t\t\t\t\t[6]: { load() {}, invoke: function (level) { console.info(\"invoke ForcedTelepor\"); } },\r\n\t\t\t\t\t\t[7]: { load() {}, invoke: function (level) { console.info(\"invoke Dragon\"); } },\r\n\t\t\t\t\t\t[8]: { load() {}, invoke: function (level) { console.info(\"invoke Rush\"); } },\r\n\t\t\t\t\t\t[9]: { load() {}, invoke: function (level) { console.info(\"invoke WelcomeBarrage\"); } },\r\n\t\t\t\t\t\t[10]: new FairyDust(null, null),\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.skill_map_action = [];\r\n\t\t\t\t\tfor (let i = 1; i <= 10; ++i) {\r\n\t\t\t\t\t\tswitch (i) {\r\n\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\tcase 10:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill1\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill4\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t\t\tthis.skill_map_action[i] = \"skill2\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 8:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 9:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor (let lev in this.skills) {\r\n\t\t\tconst skill = this.skills[lev];\r\n\t\t\ttasks.push(skill.load(lev));\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\t\r\n\tinvokeSkill(skill_id, level) {\r\n\t\tconst skill = this.skills[level];\r\n\t\tif (skill) {\r\n\t\t\tconst anim = this.skill_map_action[level];\r\n\t\t\tif (anim) {\r\n\t\t\t\tthis.renderer.action = anim;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tskill.invoke(level);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn({ \"unknow skill\": skill_id, \"level\": level });\r\n\t\t}\r\n\t}\r\n\t\r\n\t_destroy(mapController) {\r\n\t\tlet lifeSpawnPoint = this.spawn;\r\n\t\tif (lifeSpawnPoint instanceof LifeSpawnPoint) {\r\n\t\t\tlifeSpawnPoint.decreaseLife();\r\n\t\t}\r\n\t\tmapController.destroyMob(this);\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number=1} type\r\n\t */\r\n\tdie(type = 1) {\r\n\t\tthis.renderer.action = \"die\" + type;\r\n\t\tthis.is_dead = true;\r\n\t}\r\n}\r\n\r\nclass MapNpc extends MapLifeEntity {\r\n\t/**\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t * @param {number} lifeId - life index\r\n\t */\r\n\tconstructor(lifeSpawnPoint, lifeId) {\r\n\t\tsuper(lifeSpawnPoint, lifeId);\r\n\t\tthis.renderer = new NpcRenderer();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tdraw(renderer) {\r\n\t\tif ($gv.m_display_npc) {\r\n\t\t\tsuper.draw(renderer);\r\n\t\t}\r\n\t}\r\n\r\n\t_destroy(mapController) {\r\n\t\tlet lifeSpawnPoint = this.spawn;\r\n\t\tlifeSpawnPoint.decreaseLife();\r\n\t\tmapController.destroyNpc(this);\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t/**\r\n\t * set die animation\r\n\t * @param {number} type\r\n\t */\r\n\tdie(type) {\r\n\t\t//TODO: npc die ??\r\n\t\tthis.is_dead = true;\r\n\t}\r\n}\r\n\r\nlet MapLifeEntityCapacityRate = 1;\r\n\r\nclass MapLifeManager {\r\n\t/**\r\n\t * @param {World} mapController\r\n\t */\r\n\tconstructor(mapController) {\r\n\t\t/** @type {object} */\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {LifeSpawnPoint[]} */\r\n\t\tthis.spawnPoints = [];\r\n\r\n\t\t/** @type {MapMob[]} */\r\n\t\tthis.entities = [];\r\n\r\n\t\t/** @type {World} */\r\n\t\tthis.mapController = mapController;\r\n\t}\r\n\r\n\t/**\r\n\t * @async\r\n\t * @param {{life:{[spawnId:number]:{}}}} mapRawData\r\n\t * @returns {Promise<undefined[]>}\r\n\t */\r\n\tload(mapRawData) {\r\n\t\tlet tasks = [];\r\n\t\tthis._raw = mapRawData.life;\r\n\r\n\t\tlet keys = Object.keys(this._raw)\r\n\t\t\t.map(i => {\r\n\t\t\t\tlet n = parseInt(i, 10);\r\n\t\t\t\tif (Number.isSafeInteger(n)) {\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.warn(\"MapLife.spawnId: \" + i);\r\n\t\t\t\treturn null;\r\n\t\t\t})\r\n\t\t\t.filter(i => i != null);\r\n\r\n\t\tfor (let spawnId of keys) {\r\n\t\t\tlet d = new LifeSpawnPoint(this._raw[spawnId], spawnId);\r\n\t\t\ttasks.push(MapLifeEntity.loadLifeDesc(d));\r\n\t\t\tthis.spawnPoints.push(d);\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\tunload() {\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tconst entity = this.entities[i];\r\n\t\t\tif (entity.spawn.type == \"m\") {\r\n\t\t\t\tentity.$physics._destroy(this.mapController);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.spawnPoints = [];\r\n\t\tthis.entities = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tfor (let i = 0; i < this.spawnPoints.length; ++i) {\r\n\t\t\tlet lifeSpawnPoint = this.spawnPoints[i];\r\n\r\n\t\t\tlifeSpawnPoint.time += stamp;\r\n\r\n\t\t\tif (lifeSpawnPoint.time >= 1000 && lifeSpawnPoint.count < MapLifeEntityCapacityRate) {\r\n\t\t\t\tlifeSpawnPoint.increaseLife();\r\n\t\t\t\tthis.spawn(lifeSpawnPoint);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tlet entity = this.entities[i];\r\n\t\t\tif (entity) {\r\n\t\t\t\tif (entity.renderer.action && entity.renderer.action.startsWith(\"die\")) {\r\n\t\t\t\t\tconst act = entity.renderer.actions[entity.renderer.action];\r\n\t\t\t\t\tif (act && act.isEnd()) {\r\n\t\t\t\t\t\tthis.destroyLife(entity);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tentity.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * spawn life(npc / mob) by spawner\r\n\t * @param {LifeSpawnPoint} lifeSpawnPoint\r\n\t */\r\n\tspawn(lifeSpawnPoint) {\r\n\t\tlet lifeId = 0;\r\n\r\n\t\tfor (; lifeId < this.entities.length; ++lifeId) {\r\n\t\t\tif (!this.entities[lifeId]) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet entity = MapLifeEntity.Create(lifeSpawnPoint, this.mapController, lifeId);\r\n\t\t\r\n\t\tif (lifeId < this.entities.length) {\r\n\t\t\tthis.entities[lifeId] = entity;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.entities.push(entity);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * directly spawn npc\r\n\t * @param {string} npcID\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tspawnNpc(npcID, x, y, flip=false, fh=0) {\r\n\t\tlet lifeSpawnPoint = new LifeSpawnPoint({\r\n\t\t\ttype: \"n\",\r\n\t\t\tx: x | 0, y: y | 0, cy: y | 0,\r\n\t\t\tid: npcID,\r\n\t\t\tfh: fh,\r\n\t\t\tis_dummy: true,\r\n\t\t});\r\n\t\tthis.spawn(lifeSpawnPoint);\r\n\t}\r\n\t/**\r\n\t * directly spawn mob\r\n\t * @param {string} mobID\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tspawnMob(mobID, x, y, flip=false, fh=0) {\r\n\t\tlet lifeSpawnPoint = new LifeSpawnPoint({\r\n\t\t\ttype: \"m\",\r\n\t\t\tx: x | 0, y: y | 0, cy: y | 0,\r\n\t\t\tid: mobID,\r\n\t\t\tfh: fh,\r\n\t\t\tis_dummy: true,\r\n\t\t});\r\n\t\tthis.spawn(lifeSpawnPoint);\r\n\t}\r\n\t\r\n\tdestroyLife(entity) {\r\n\t\tif (!(entity instanceof MapLifeEntity)) {\r\n\t\t\talert(\"MapLifeManager.killLife: can't kill non life\");\r\n\t\t\tconsole.error(\"MapLifeManager.killLife: can't kill non life\");\r\n\t\t}\r\n\t\tentity._destroy(this.mapController);\r\n\t\tdelete this.entities[entity.lifeId];\r\n\t}\r\n\tdestroyAll() {\r\n\t\tthis.entities.forEach(a => this.destroyLife(a))\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Vec2} center\r\n\t * @param {Rectangle} viewRect\r\n\t * @param {number} whereLayer - where layer index\r\n\t */\r\n\tdraw(renderer, center, viewRect, whereLayer) {\r\n\t\tfor (let i = 0; i < this.entities.length; ++i) {\r\n\t\t\tlet entity = this.entities[i];\r\n\t\t\tif (entity && ((entity.z != null && entity.z == whereLayer) || whereLayer == null)) {\r\n\t\t\t\tentity.draw(renderer);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * require Renderer\r\n * @implements {IAsyncLoading}\r\n */\r\nexport class SceneMap {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.stamp = 0;\r\n\r\n\t\t/** @type {MapBack[]} */\r\n\t\tthis.background = [];\r\n\r\n\t\t/** @type {MapBack[]} */\r\n\t\tthis.frontground = [];\r\n\r\n\t\t/** @type {MapObject[]} */\r\n\t\tthis.layeredObject = [];\r\n\r\n\t\t/** @type {MapTile[]} */\r\n\t\tthis.layeredTile = [];\r\n\t\t\r\n\t\t/** @type {{[tag:string]:MapBackBase}} */\r\n\t\tthis.backTags = {};\r\n\t\t\r\n\t\t/** @type {{[name:string]:MapObject}} */\r\n\t\tthis.namedObject = {};\r\n\r\n\t\t/** @type {World} */\r\n\t\tthis.controller = new World();\r\n\r\n\t\t/** @type {MapLifeManager} */\r\n\t\tthis.lifeMgr = new MapLifeManager(this.controller);\r\n\t\t\r\n\t\t/** @type {MapPortalManager} */\r\n\t\tthis.portalMgr = new MapPortalManager();\r\n\t\t\r\n\t\t/** @type {MapParticle[]} */\r\n\t\tthis.particleList = null;\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.mapBound = null;\r\n\r\n\t\t/** @type {{[questId:string]: number}} */\r\n\t\tthis.quest = {};\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;//data url //debug\r\n\r\n\t\t/** @type {Promise<any>[]} */\r\n\t\tthis.$load_tasks = [];\r\n\r\n\t\t/** @type {Promise<any>} */\r\n\t\tthis.$promise = null;\r\n\r\n\t\tthis.$loading_status = \"loading\";\r\n\t\t\r\n\t\tthis.onload = null;\r\n\t}\r\n\r\n\tstatic async _Init() {\r\n\t\tlet $_mapString = null;\r\n\t\tlet $mapString = {};\r\n\r\n\t\t$_mapString = await $get.data(\"/String/Map\");\r\n\r\n\t\tfor (let i in $_mapString) {\r\n\t\t\tfor (let j in $_mapString[i]) {\r\n\t\t\t\t$mapString[j] = $_mapString[i][j];\r\n\t\t\t\t$mapString[j].$region = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tSceneMap._map_names = $mapString;\r\n\r\n\t\twindow.$MapNames = SceneMap._map_names;\r\n\t}\r\n\tstatic Init() {\r\n\t\treturn Promise.all([\r\n\t\t\tthis._Init(),\r\n\t\t\tMapPortal.Init(),\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{[questId:string]: number}} quest\r\n\t */\r\n\tisActivated(quest) {\r\n\t\tif (quest) {\r\n\t\t\tfor (let id in quest) {\r\n\t\t\t\tif (this.quest[id] != quest[id]) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tget $map_sprite() {\r\n\t\treturn window.$map_sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{back:{[backId:string]:any}}} raw\r\n\t */\r\n\tasync _constructBack(raw) {\r\n\t\tif (!(\"back\" in raw)) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet loading_task_map = new Map();\r\n\t\tfor (let i = 0; i in raw.back; ++i) {\r\n\t\t\tlet ob = raw.back[i];\r\n\t\t\tconst url = this._url + `back/${i}`;\r\n\r\n\t\t\t/** @type {MapBack|MapBackAnimation} */\r\n\t\t\tlet back;\r\n\r\n\t\t\tif (ob.ani == 0) {\r\n\t\t\t\tback = new MapBack(ob);\r\n\t\t\t}\r\n\t\t\telse if (ob.ani == 1) {\r\n\t\t\t\tback = new MapBackAnimation(ob);\r\n\t\t\t}\r\n\t\t\telse if (ob.ani == 2) {//Spine skeletal animation\r\n\t\t\t\tback = new MapBackSkeletalAnim(ob);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"ob.ani: \" + ob.ani);\r\n\t\t\t}\r\n\t\t\tback._url = url;\r\n\t\t\tif (back.backTags != null) {\r\n\t\t\t\tthis.backTags[back.backTags] = back;\r\n\t\t\t}\r\n\r\n\t\t\tif (ob.ani != 2) {\r\n\t\t\t\t// add loading task\r\n\t\t\t\tif (back._raw.bS) {\r\n\t\t\t\t\tlet ps = \"Back/\" + back._raw.bS;\r\n\t\t\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\t\t\tloading_task_map.set(ps, map_load_package(\"Back\", back._raw.bS));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.warn(\"MapBack: map.back[\" + i + \"].bS = \" + back._raw.bS);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (ob.front != 0) {\r\n\t\t\t\tthis.frontground.push(back);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.background.push(back);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait Promise.all([...loading_task_map.values()]);\r\n\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tlet back = this.frontground[i];\r\n\t\t\tback.load();\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tlet back = this.background[i];\r\n\t\t\tback.load();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{[layer:number]:{objs:{},tiles:{},info:{}}}} mapRawData\r\n\t */\r\n\tasync _constructLayeredObject(mapRawData) {\r\n\t\tlet loading_task_map = new Map();\r\n\r\n\t\tfor (let i = 0, layer = mapRawData[i]; !objIsEmpty(layer); i++ , layer = mapRawData[i]) {//layer[1...8]\r\n\t\t\tlet objs = this.__constructLayeredObject_obj(i, layer, loading_task_map);\r\n\t\t\tlet tiles = this.__constructLayeredObject_tile(i, layer, loading_task_map);\r\n\r\n\t\t\t// ?? map:867116550 雷射在 tiles 前面\r\n\t\t\ttiles.sort((a, b) => { return a.z - b.z; });\r\n\t\t\tobjs.sort((a, b) => { return a.z - b.z; });\r\n\r\n\t\t\t//this.layeredObject[i] = objs.concat(tiles);//(objs.concat(tiles)).sort(function (a, b) { return a.z - b.z; });\r\n\t\t\t\r\n\t\t\tthis.layeredObject[i] = objs;\r\n\t\t\tthis.layeredTile[i] = tiles;\r\n\t\t}\r\n\r\n\t\t//wait all texture package loaded\r\n\t\tawait Promise.all([...loading_task_map.values()]);\r\n\r\n\t\tfor (let i = 0; i < this.layeredObject.length; ++i) {\r\n\t\t\tconst objs = this.layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\t/**\r\n\t\t\t\t * @type {MapObject}\r\n\t\t\t\t */\r\n\t\t\t\tlet obj = objs[j];\r\n\t\t\t\tif (process.env.NODE_ENV !== 'production') {//is debug\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tobj.load();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\tconsole.error(\"load textures failed: \" + new URL(\"xml2\" + obj._url, window.location).href);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tobj.load();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.layeredTile.length; ++i) {\r\n\t\t\tconst tiles = this.layeredTile[i];\r\n\t\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\t\tlet tile = tiles[j];\r\n\t\t\t\ttile.load();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__constructLayeredObject_tile(i, layer, loading_task_map) {\r\n\t\tconst info = layer.info;\r\n\t\tlet tiles = [];\r\n\r\n\t\tif (info.tS) {\r\n\t\t\tlet ps = \"Tile/\" + info.tS;\r\n\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\tloading_task_map.set(ps, map_load_package(\"Tile\", info.tS));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (Object.keys(layer.tile).length) {\r\n\t\t\tdebugger;\r\n\t\t\tconsole.warn(\"[\" + i + \"].tile = \" + JSON.stringify(layer.tile));\r\n\t\t}\r\n\t\tfor (let j = 0, ti = layer.tile[j]; !objIsEmpty(ti); j++ , ti = layer.tile[j]) {\r\n\t\t\tlet tile = new MapTile(ti, info);\r\n\r\n\t\t\ttile._url = this._url + `${i}/tile/${j}`;\r\n\r\n\t\t\ttiles.push(tile);\r\n\t\t}\r\n\r\n\t\treturn tiles;\r\n\t}\r\n\t__constructLayeredObject_obj(i, layer, loading_task_map) {\r\n\t\tlet objs = [];\r\n\r\n\t\tfor (let j = 0, raw = layer.obj[j]; !objIsEmpty(raw); j++ , raw = layer.obj[j]) {\r\n\t\t\tlet obj;\r\n\r\n\t\t\tif (raw.spineAni) {\r\n\t\t\t\tswitch (raw.spineAni) {\r\n\t\t\t\t\tcase \"animation\":\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"idle\":\r\n\t\t\t\t\t\tconsole.warn(\"spine animation: idle ??\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.groupCollapsed(\"unknow spine:\" + raw.spineAni);\r\n\t\t\t\t\t\tconsole.warn(`LayeredObject[${i}][${j}]`);\r\n\t\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tobj = new MapObjectSkeletalAnim(raw);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tobj = new MapObject(raw);\r\n\r\n\t\t\t\tlet ps = \"Obj/\" + obj._raw.oS;\r\n\t\t\t\tif (!loading_task_map.has(ps)) {\r\n\t\t\t\t\tloading_task_map.set(ps, map_load_package(\"Obj\", obj._raw.oS));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tobj._url = this._url + `${i}/obj/${j}`;\r\n\t\t\t\r\n\t\t\tif (obj.name != null) {\r\n\t\t\t\tthis.namedObject[obj.name] = obj;\r\n\t\t\t}\r\n\r\n\t\t\tobjs.push(obj);\r\n\t\t}\r\n\r\n\t\treturn objs;\r\n\t}\r\n\r\n\t/**\r\n\t * top-bottom-border compute by visible mapObject\r\n\t */\r\n\t__compute_top_bottom_border(layeredObject) {\r\n\t\tlet top = null, bottom = null;//left, right,\r\n\t\t//let i = 0;\r\n\t\t\r\n\t\tfor (let i = 0; i < layeredObject.length; ++i) {\r\n\t\t\tconst objs = layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\tconst obj = objs[j];\r\n\t\t\t\tlet rect = obj.compute_max_rectangle();\r\n\t\t\t\tif (rect && top != null && bottom != null) {\r\n\t\t\t\t\t//left = Math.min(left, rect.left);\r\n\t\t\t\t\ttop = Math.min(top, rect.top);\r\n\t\t\t\t\t//right = Math.max(right, rect.right);\r\n\t\t\t\t\tbottom = Math.max(bottom, rect.bottom);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//left = rect.left;\r\n\t\t\t\t\ttop = rect.top;\r\n\t\t\t\t\t//right = rect.right;\r\n\t\t\t\t\tbottom = rect.bottom;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn { top, bottom };\r\n\t}\r\n\t\r\n\t/**\r\n\t * top-bottom-border compute by visible mapObject\r\n\t */\r\n\t_compute_top_bottom_border() {\r\n\t\tlet objtb = this.__compute_top_bottom_border(this.layeredObject);\r\n\t\tlet tiletb = this.__compute_top_bottom_border(this.layeredTile);\r\n\t\tlet top = Math.min(objtb.top, tiletb.top);\r\n\t\tlet bottom = Math.max(objtb.bottom, tiletb.bottom);\r\n\t\treturn { top, bottom };\r\n\t}\r\n\r\n\t//_compute_view_rectangle\r\n\t\r\n\t_compute_map_bound(reCalc) {\r\n\t\tif (this.mapBound && !reCalc) {\r\n\t\t\treturn this.mapBound;\r\n\t\t}\r\n\r\n\t\tconst info = this._raw.info;\r\n\t\tlet top, bottom;\r\n\r\n\t\tif (info.VRLeft != null && info.VRTop != null && info.VRRight != null && info.VRBottom != null) {\r\n\t\t\ttop = info.VRTop;\r\n\t\t\tbottom = info.VRBottom;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tb = this._compute_top_bottom_border();\r\n\t\t\ttop = tb.top;\r\n\t\t\tbottom = tb.bottom;\r\n\t\t}\r\n\r\n\t\tconst lr = this.controller.ground._compute_left_right_border();\r\n\r\n\t\tlet rect = Rectangle.parse(lr.left, top, lr.right, bottom);\r\n\t\tthis.mapBound = rect;//store\r\n\r\n\t\treturn rect;\r\n\t}\r\n\t\r\n\tget _window_title() {\r\n\t\tif (this.mapName) {\r\n\t\t\treturn `${[this.mapName, this.streetName].join(\"·\")} (${this.map_id})`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `${this.map_id}`;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_get_map_data_url(map_id) {\r\n\t\treturn `/Map/Map/Map${map_id.slice(0, 1)}/${map_id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * loading: map data\r\n\t * @param {string} map_id\r\n\t * @param {boolean} reload - download\r\n\t */\r\n\tasync load(map_id, reload) {\r\n\t\tif (!reload && map_id != null && this.map_id == map_id && this._raw != null) {\r\n\t\t\tif (this.isLoaded()) {\r\n\t\t\t\tthis.unload();\r\n\t\t\t}\r\n\t\t\tthis._load(this._raw);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst url = this._get_map_data_url(map_id);\r\n\r\n\t\tlet raw = await $get.data(url);\r\n\t\tif (!raw) {\r\n\t\t\talert(\"map not exit\");\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (raw.info && raw.info.link) {\r\n\t\t\tconst url2 = this._get_map_data_url(raw.info.link);\r\n\t\t\t\t\r\n\t\t\traw = await $get.data(url2);\r\n\t\t\tif (!raw) {\r\n\t\t\t\talert(\"map-link not exit\");\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.isLoaded()) {\r\n\t\t\tthis.unload();\r\n\t\t}\r\n\t\tthis._url = url;\r\n\t\tthis.map_id = map_id;\r\n\t\t\r\n\t\tthis._load(raw);\r\n\t}\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{[prop:string]:{}}} raw\r\n\t */\r\n\t_load(raw) {\r\n\t\tconst map_id = this.map_id;\r\n\r\n\t\tthis.$loading_status = \"loading\";\r\n\r\n\t\t$gv.allQuest = {};\r\n\t\t\r\n\t\tthis.controller.stop = true;//begin load\r\n\t\t\r\n\t\tif (SceneMap._map_names[map_id]) {\r\n\t\t\tthis.mapName = SceneMap._map_names[map_id].mapName;\r\n\t\t\tthis.streetName = SceneMap._map_names[map_id].streetName;\r\n\t\t}\r\n\r\n\t\tthis.$load_tasks = [];\r\n\r\n\t\tthis._loadBgm(raw);\r\n\r\n\t\tthis.$load_tasks.push(this._constructBack(raw, this));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this._constructLayeredObject(raw, this).then((mapobj) => {\r\n\t\t\t//this.layeredObject\r\n\t\t\t//this.layeredTile\r\n\t\t}));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this.portalMgr.load(raw, this).then((portals) => {\r\n\t\t}));\r\n\t\t\r\n\t\tthis.$load_tasks.push(this.__constructMiniMap(raw, this));\r\n\r\n\t\tthis.$load_tasks.push(this.controller.load(raw, this));//load foothold...\r\n\t\tthis.$load_tasks.push(this.lifeMgr.load(raw, this));\r\n\t\t\r\n\t\tthis.$load_tasks.push(MapParticle.construct(raw, this));\r\n\r\n\t\tthis.$promise = Promise.all(this.$load_tasks);\r\n\t\tthis.$promise.then((results) => {\r\n\t\t\tconst viewRect = this._compute_map_bound();\r\n\t\t\tconst viewCenter = viewRect.center;\r\n\t\t\t\r\n\t\t\t$gv.m_viewRect.setCenter(viewCenter.x, viewCenter.y);\r\n\t\t\t\r\n\t\t\tthis.controller._createMapBound(viewRect);\r\n\t\t\t\r\n\t\t\tthis.controller.stop = false;//end load\r\n\t\t\t\r\n\t\t\tthis.$load_tasks = [];\r\n\t\t\tthis.$promise = null;\r\n\t\t\tdelete this.$loading_status;\r\n\t\t\tconsole.log(\"completed scene_map.waitLoaded: [...]\");\r\n\t\t});\r\n\t\t\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\tthis._script();\r\n\t\t\r\n\t\tif (this.onload) {\r\n\t\t\tthis.onload.call(this);//history.pushState\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(\"End scene_map.load\");\r\n\t}\r\n\t_script() {\r\n\t\tswitch (this.map_id) {\r\n\t\t\tcase \"450004150\":\r\n\t\t\tcase \"450004450\":\r\n\t\t\tcase \"450004750\":\r\n\t\t\t\tthis.lifeMgr.spawnMob(\"8880166\", 1000, 47, false, 0);//from /Etc/BossLucid\r\n\t\t\t\tthis.lifeMgr.spawnMob(\"8880140\", 1000, 47, false, 0);//from /Etc/BossLucid\r\n\t\t\t\t//this.lifeMgr.spawnMob(\"8880176\", 1000, 47, false, 0);\r\n\t\t\t\t//this.lifeMgr.spawnMob(\"8880141\", 1000, 47, false, 0);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treload() {\r\n\t\tthis.unload();\r\n\t\tthis._load(this._raw);\r\n\t}\r\n\t\r\n\tunload() {\r\n\t\tthis.$loading_status = \"loading\";\r\n\t\t\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tthis.background[i].unload();\r\n\t\t}\r\n\t\tthis.background = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tthis.frontground[i].unload();\r\n\t\t}\r\n\t\tthis.frontground = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.layeredObject.length; ++i) {\r\n\t\t\tlet objs = this.layeredObject[i];\r\n\t\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\t\tobjs[j].unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.layeredObject = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < this.layeredTile.length; ++i) {\r\n\t\t\tlet tiles = this.layeredTile[i];\r\n\t\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\t\ttiles[j].unload();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.layeredTile = [];\r\n\t\t\r\n\t\tthis.backTags = {};\r\n\t\t\r\n\t\tthis.particleList = null;\r\n\t\t\r\n\t\tthis.controller.unload();\r\n\t\tthis.lifeMgr.unload();\r\n\t\tthis.portalMgr.unload();\r\n\t\t\r\n\t\tmap_sprite.Back = {};\r\n\t\tmap_sprite.Obj = {};\r\n\t\tmap_sprite.Tile = {};\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{info:{bgm:string}}} mapRawData\r\n\t */\r\n\t_getBgmPath(mapRawData) {\r\n\t\tlet bgmPath = mapRawData.info.bgm;\r\n\t\tlet i = bgmPath.indexOf(\"/\"), path = bgmPath.slice(0, i) + bgmPath.slice(i);\r\n\t\t//let m = bgmPath.match(/([^\\/]+)(\\/.*)/), path = [m[1], m[2]].join(\"/\");\r\n\t\treturn [\"\", \"Sound\", path].join(\"/\");\r\n\t}\r\n\r\n\t/**\r\n\t * load map from loaded data\r\n\t * @param {{info:{bgm:string}}} mapRawData\r\n\t */\r\n\t_loadBgm(mapRawData) {\r\n\t\tconst elem_bgm = document.getElementById(\"bgm\");\r\n\t\tif (elem_bgm) {\r\n\t\t\tconst path = this._getBgmPath(mapRawData);\r\n\t\t\tthis._bgm_path = path;\r\n\r\n\t\t\tconst url = $get.soundMp3Url(path);\r\n\t\t\t\r\n\t\t\telem_bgm.innerHTML = `<source src=\"${url}\" type=\"audio/mpeg\">`;\r\n\t\t\t\r\n\t\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\t\telem_bgm.autoplay = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telem_bgm.autoplay = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new TypeError(\"#bgm\"));\r\n\t\t}\r\n\t}\r\n\r\n\tplayBgm() {\r\n\t\tdocument.getElementById(\"bgm\").play();\r\n\t}\r\n\r\n\tpauseBgm() {\r\n\t\tdocument.getElementById(\"bgm\").pause();\r\n\t}\r\n\t\r\n\t__constructMiniMap(raw) {\r\n\t\tif (raw.miniMap) {\r\n\t\t\t//const hw = raw.miniMap.width * 0.5;\r\n\t\t\t//const hh = raw.miniMap.height * 0.5;\r\n\t\t\t//const cx = raw.miniMap.centerX;\r\n\t\t\t//const cy = raw.miniMap.centerY;\r\n\t\t\tthis.width = raw.miniMap.width;\r\n\t\t\tthis.height = raw.miniMap.height;\r\n\t\t\tthis.centerX = raw.miniMap.centerX;\r\n\t\t\tthis.centerY = raw.miniMap.centerY;\r\n\t\t\t//this.boundRect = new Rectangle(cx - hw, cy - hh, raw.miniMap.width, raw.miniMap.height);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.width = 0;\r\n\t\t\tthis.height = 0;\r\n\t\t\tthis.centerX = 0;\r\n\t\t\tthis.centerY = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_miniMap_src() {\r\n\t\treturn this._url + \"miniMap/canvas\";\r\n\t\tconst a = {\r\n\t\t\t\"canvas\": {\r\n\t\t\t\t\"\": \"\"\r\n\t\t\t},\r\n\t\t\t\"width\": 4483,\r\n\t\t\t\"height\": 1244,\r\n\t\t\t\"centerX\": 1030,\r\n\t\t\t\"centerY\": 781,\r\n\t\t\t\"mag\": 4\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * wait all task: return true if nothing to loading else list of loaded object\r\n\t * loading: texture...\r\n\t * @returns {Promise<true>|Promise<any[]>}\r\n\t */\r\n\tasync waitLoaded() {\r\n\t\tawait this.$promise;\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn ((!this.$load_tasks || !this.$load_tasks.length) && this._raw && !this.$loading_status);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\twindow.m_hover_object = null;\r\n\t\tif ($gv.mouse_dm || $gv.mouse_dr) {\r\n\t\t\twindow.m_selected_object = null;\r\n\t\t}\r\n\t\t\r\n\t\tif (stamp != null) {\r\n\t\t\tthis.stamp = stamp;\r\n\r\n\t\t\tthis.lifeMgr.update(stamp);\r\n\r\n\t\t\tif (this.isLoaded()) {\r\n\t\t\t\tthis.controller.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t */\r\n\t_addChara(chara) {\r\n\t\ttry {\r\n\t\t\tlet player_spawns = this.portalMgr.portals.filter(a => a.pn == \"sp\");\r\n\t\t\tlet spawn = player_spawns[Math.trunc(Math.random() * 100) % player_spawns.length];\r\n\t\t\tconst $physics = chara.$physics;\r\n\t\t\tconst x = spawn.x / $gv.CANVAS_SCALE;\r\n\t\t\tconst y = spawn.y / $gv.CANVAS_SCALE;\r\n\t\t\t$physics.setPosition(x, y);\r\n\t\t\t$physics.body.SetAwake(true);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {SceneCharacter} chara\r\n\t */\r\n\taddChara(chara) {\r\n\t\tif (this.$promise) {\r\n\t\t\tthis.$promise.then(() => {\r\n\t\t\t\tthis._addChara(chara);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._addChara(chara);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tapplyCamera(renderer) {\r\n\t\trenderer.ctx.setTransform(1, 0, 0, 1, Math.trunc(-$gv.m_viewRect.x), Math.trunc(-$gv.m_viewRect.y));\r\n\t}\r\n\r\n\t/**\r\n\t * pushGlobalAlpha\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tbeginRender(renderer) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tendRender(renderer) {\r\n\t\trenderer.popGlobalAlpha();\r\n\t\t//renderer.popMatrix();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} whereLayer - where layer index\r\n\t */\r\n\trenderLife(renderer, whereLayer) {\r\n\t\tif (!$gv.m_display_life) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tthis.lifeMgr.draw(renderer, center, viewRect, whereLayer);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderPortal(renderer) {\r\n\t\tif (!$gv.m_display_portal) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\r\n\t\tthis.portalMgr.update(this.stamp);\r\n\t\tthis.portalMgr.draw(renderer, center, viewRect);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderFrontground(renderer) {\r\n\t\tif (!$gv.m_display_front) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.frontground.length; ++i) {\r\n\t\t\tlet back = this.frontground[i];\r\n\t\t\tif (this.isActivated(back.quest)) {\r\n\t\t\t\tback.update(this.stamp);\r\n\t\t\t\tback.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderLayeredObject(renderer, layerIndex) {\r\n\t\tif (!$gv.m_display_mapobj) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tconst objs = this.layeredObject[layerIndex];\r\n\t\tfor (let j = 0; j < objs.length; ++j) {\r\n\t\t\tlet obj = objs[j];\r\n\t\t\tif (this.isActivated(obj.quest)) {\r\n\t\t\t\tobj.update(this.stamp);\r\n\t\t\t\tobj.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderLayeredTile(renderer, layerIndex) {\r\n\t\tif (!$gv.m_display_maptile) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = Vec2.empty;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tconst tiles = this.layeredTile[layerIndex];\r\n\t\tfor (let j = 0; j < tiles.length; ++j) {\r\n\t\t\tlet tile = tiles[j];\r\n\t\t\tif (this.isActivated(tile.quest)) {\r\n\t\t\t\ttile.update(this.stamp);\r\n\t\t\t\ttile.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderBackground(renderer) {\r\n\t\tif (!$gv.m_display_back) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.background.length; ++i) {\r\n\t\t\tlet back = this.background[i];\r\n\t\t\tif (this.isActivated(back.quest)) {\r\n\t\t\t\tback.update(this.stamp);\r\n\t\t\t\tback.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trenderParticle(renderer) {\r\n\t\tif (!$gv.m_display_particle_system) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//const center = Vec2.empty;\r\n\t\tconst center = $gv.m_viewRect.center;\r\n\t\tconst viewRect = $gv.m_viewRect;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.particleList.length; ++i) {\r\n\t\t\tlet particle = this.particleList[i];\r\n\t\t\tif (this.isActivated(particle.quest)) {\r\n\t\t\t\tparticle.update(this.stamp);\r\n\t\t\t\tparticle.draw(renderer, center, viewRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nAddInitTask(SceneMap.Init());\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction objIsEmpty(x) {\r\n\tif (typeof x == 'object' && x == null)\r\n\t\tthrow new Error();\r\n\treturn typeof x == 'undefined' || x == null;\r\n}\r\n","﻿\r\nimport { KeySlotData } from \"./KeySlotData\";\r\nimport { ItemSlot } from \"../../game/Item\";\r\n\r\n\r\nexport class KeySlot {\r\n\t/**\r\n\t * @param {\"Command\"|\"Action\"|\"Item\"|\"Skill\"} type\r\n\t * @param {KeySlotData} data\r\n\t */\r\n\tconstructor(type, data) {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((type + \"Slot\") != data.constructor.name) {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.type = type;\r\n\t\tthis.data = data;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * open/close ui, command...\r\n */\r\nexport class CommandSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} command\r\n\t */\r\n\tconstructor(command) {\r\n\t\tsuper();\r\n\t\tthis.command = command;\r\n\t}\r\n}\r\n\r\n/**\r\n * charaction action key\r\n */\r\nexport class ActionSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} action\r\n\t */\r\n\tconstructor(action) {\r\n\t\tsuper();\r\n\t\tthis.action = action;\r\n\t}\r\n}\r\n\r\n\r\n//TODO: SkillSlot.js 未完成\r\nexport class SkillSlot extends KeySlotData {\r\n\t/**\r\n\t * @param {string} skill_id\r\n\t */\r\n\tconstructor(skill_id) {\r\n\t\tsuper();\r\n\t\tthis.skill_id = skill_id;\r\n\t}\r\n}\r\n\r\n\r\n\r\n","\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { Animation } from \"../Animation.js\";\r\nimport { LayerObject, Layer } from \"./Layer.js\";\r\nimport { SceneRenderer } from \"./SceneRenderer.js\";\r\nimport { RenderingOption } from \"./RenderingOption.js\";\r\n\r\nimport { CharacterRenderer } from \"./CharacterRenderer.js\";\r\nimport { SceneCharacter } from \"../SceneCharacter.js\";\r\nimport { Vec2 } from \"../math.js\";\r\nimport { ItemCategoryInfo } from \"../../../public/javascripts/resource.js\";\r\n\r\n\r\nclass _ChairInfo {\r\n\tconstructor() {\r\n\t\t/** @param {{x:number,y:number}} */\r\n\t\tthis.bodyRelMove = null;\r\n\t\tthis.price = 1;\r\n\t\tthis.slotMax = 1;\r\n\t\tthis.recoveryHP = 100;\r\n\t\tthis.recoveryMP = 60;\r\n\t\tthis.sitEmotion = 10;\r\n\t\tthis.tradeBlock = 1;\r\n\t\tthis.invisibleWeapon = 1;\r\n\t}\r\n}\r\n\r\nclass _ChairEffect extends Array {\r\n\tconstructor() {\r\n\t\tthis.z = -1;\r\n\t\tthis.pos = 1;\r\n\t\t\r\n\t\t///** @type {_SpriteData} */\r\n\t\t//this[0..N] = null;\r\n\t}\r\n}\r\n\r\nclass _ChairData {\r\n\tconstructor() {\r\n\t\t/** @type {_ChairInfo} */\r\n\t\tthis.info = null;\r\n\t\t/** @type {_ChairEffect} */\r\n\t\tthis.effect = null;\r\n\t\t/** @type {_ChairEffect} */\r\n\t\tthis.effect2 = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {LayerObject}\r\n */\r\nclass ChairEffect extends Animation {\r\n\tconstructor(raw) {\r\n\t\tsuper(raw);\r\n\t\t\r\n\t\tthis.is_loop = true;\r\n\t\t\r\n\t\tthis.z = raw.z;\r\n\t\tthis.pos = raw.pos;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis._offset = null;\r\n\t\t\r\n\t\t/** @type {Chair} */\r\n\t\tthis._host = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Chair} host\r\n\t * @param {Vec2} offset\r\n\t */\r\n\tinit(host, offset) {\r\n\t\tthis._host = host;\r\n\t\tthis._offset = offset;\r\n\t}\r\n\t\r\n\t/** @override */\r\n\tisEnd() {\r\n\t\tconst player = this._host._player;\r\n\t\treturn !player.chair;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneRenderer} sceneRenderer\r\n\t */\r\n\t_addToScene(sceneRenderer) {\r\n\t\tconst player = this._host._player;\r\n\t\tlet layerIndex = player.$layer + this.z;\r\n\t\tlayerIndex = layerIndex >= 0 ? layerIndex : 0;\r\n\t\tconst layer = sceneRenderer.layers[layerIndex];\r\n\t\tlayer.add(this);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\tconst crr = this._host._player.renderer;\r\n\t\tconst x = crr.x;\r\n\t\tconst y = crr.y;\r\n\t\tconst angle = crr.angle;\r\n\t\tconst flip = crr.front > 0;\r\n\t\t\r\n\t\t//renderer.globalAlpha = this.opacity * option.opacity;\r\n\t\trenderer.globalAlpha = option.opacity;\r\n\r\n\t\tif (this._offset) {\r\n\t\t\tconst offset = this._offset;\r\n\t\t\tthis.draw(renderer, x + offset.x, y + offset.y, 0, flip);\r\n\t\t}\r\n\t\telse if (this.pos == 1) {\r\n\t\t\tconst oy = -this.texture.height * 0.5;\r\n\t\t\tthis.draw(renderer, x, y + oy, 0, flip);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.draw(renderer, x, y, angle, flip);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Chair {\r\n\tconstructor() {\r\n\t\t/** @type {_ChairData} */\r\n\t\tthis._raw = null;\r\n\t\t\r\n\t\t/** @type {SceneCharacter} - owner */\r\n\t\tthis._player = null;\r\n\t\t\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.bodyRelMove = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\t\t\r\n\t\t/** @type {ChairEffect[]} */\r\n\t\tthis.effects = [];\r\n\t\t\r\n\t\tthis.$promise = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneCharacter} player\r\n\t */\r\n\tinit(player) {\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t_player: {\r\n\t\t\t\tvalue: player,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tasync load(id) {//\"03010377\"\r\n\t\tif (!id.startsWith(\"0301\")) {\r\n\t\t\tthrow new TypeError(\"Not chair\");\r\n\t\t}\r\n\t\tthis.id = id;\r\n\t\t\r\n\t\tthis.$promise = ItemCategoryInfo.getItem(id);\r\n\t\tconst raw = await this.$promise;\r\n\t\tdelete this.$promise;\r\n\r\n\t\tdelete this._raw;\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t_raw: {\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\twritable: false,\r\n\t\t\t\tvalue: raw,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tlet offset;\r\n\r\n\t\tif (this._raw.info.bodyRelMove) {\r\n\t\t\tthis.bodyRelMove = new Vec2(this._raw.info.bodyRelMove.x, this._raw.info.bodyRelMove.y);\r\n\t\t}\r\n\t\telse if (raw.effect && raw.effect[0].origin.y < 0) {\r\n\t\t\t//let w = raw.effect[0].__w;\r\n\t\t\tlet h = raw.effect[0].__h;\r\n\t\t\toffset = new Vec2(0, -h * 1.5);\r\n\t\t}\r\n\t\tif (raw.effect[0].origin.y == 0) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\t\r\n\t\tfor (let key in raw) {\r\n\t\t\tif (key.startsWith(\"effect\")) {\r\n\t\t\t\tconst eff = new ChairEffect(raw[key]);\r\n\t\t\t\teff.init(this, offset);\r\n\t\t\t\teff.load();//Animation#load => load texture\r\n\t\t\t\tthis.effects.push(eff);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {SceneRenderer} sceneRenderer\r\n\t */\r\n\taddToScene(sceneRenderer) {\r\n\t\tfor (let eff of this.effects) {\r\n\t\t\teff._addToScene(sceneRenderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetIconUrl() {\r\n\t\treturn this._raw.info.icon[\"\"];\r\n\t}\r\n\tgetIconRawUrl() {\r\n\t\treturn this._raw.info.iconRaw[\"\"];\r\n\t}\r\n}\r\n","﻿\r\nimport { ItemCategoryInfo } from '../../public/javascripts/resource.js';\r\n\r\nimport { IRenderer } from './IRenderer.js';\r\n\r\nimport { SceneObject } from \"./SceneObject.js\";\r\nimport { CharacterRenderer } from \"./Renderer/CharacterRenderer.js\";\r\nimport { ChatBalloon } from \"./Renderer/ChatBalloon.js\";\r\nimport { PPlayer, PPlayerState } from \"./Physics/PPlayer.js\";\r\n\r\nimport { $createItem, ItemEquip, ItemSlot, ItemBase } from \"./Item.js\";\r\nimport { SceneSkill } from \"./Skill.js\";\r\n\r\nimport { CharacterStat } from \"../Common/PlayerData.js\";\r\nimport { CharacterMoveElem } from \"../Client/PMovePath.js\";\r\nimport { $Packet_CharacterMove } from \"../Common/Packet\";\r\nimport { AttackInfo, DamagePair } from \"../Common/AttackInfo.js\";\r\n\r\nimport { KeySlot, CommandSlot, ActionSlot, SkillSlot } from '../ui/Basic/KeySlot.js';\r\n\r\nimport { SceneMap } from './Map.js';\r\nimport { damageNumberLayer } from './Renderer/DamageNumber.js';\r\nimport { Chair } from './Renderer/Chair.js';\r\nimport { sceneRenderer, SceneRenderer } from \"./Renderer/SceneRenderer.js\";\r\n\r\n\r\n// SceneCharacter的更新流程\r\n//\r\n// chatCtrl.update (順序無關)\r\n//\r\n// <...controller>\r\n// activeSkills.forEach(skill => skill.update)\r\n// chara._handleAttack\r\n// chara._player_control => { inputKey.forEach(key => key ? activeSkills.forEach(skill => skill.control)); ... }\r\n// chara._applyState\r\n//\r\n// <renderer>\r\n// set chara.renderer.position\r\n// chara.renderer.update\r\n\r\n\r\nwindow.$addItem_repeatEquip = false;\r\n\r\n\r\nclass TimeElapsed {\r\n\tconstructor() {\r\n\t\t/** @type {Date} */\r\n\t\tthis._date = new Date();\r\n\t}\r\n\treset() {\r\n\t\tthis._date = new Date();\r\n\t}\r\n\tget elapsed() {\r\n\t\tconst elapsed = (new Date()).getMilliseconds() - this._date.getMilliseconds();\r\n\t\treturn elapsed;\r\n\t}\r\n}\r\n\r\n\r\nclass ChatController {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.style = 0;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.text = \"\";\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.$outputText = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.elapsed = 0;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis._isDisplay = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t */\r\n\tenter(text) {\r\n\t\tthis.text = String(text);\r\n\t\tthis.$outputText = null;\r\n\t\tthis.isDisplay = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst $displayDuration = this.displayDuration;\r\n\r\n\t\tif (this.elapsed > $displayDuration) {\r\n\t\t\tthis.isDisplay = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.elapsed += stamp;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {BaseSceneCharacter} chara\r\n\t */\r\n\tasync draw(renderer, chara) {\r\n\t\tif (this._isDisplay) {\r\n\t\t\tconst style = this.style || $gv.ChatBalloon_default_style;\r\n\r\n\t\t\t/** @type {ChatBalloon} */\r\n\t\t\tlet cb = ChatBalloon.cache[style];\r\n\t\t\tif (!cb) {\r\n\t\t\t\tcb = new ChatBalloon();\r\n\t\t\t\tawait cb.load(style);\r\n\t\t\t}\r\n\r\n\t\t\tconst $colon = this.colon;\r\n\t\t\tconst crr = chara.renderer;\r\n\t\t\tconst boundBox = crr._boundBox;\r\n\r\n\t\t\tif (!this.$outputText) {\r\n\t\t\t\tthis.$outputText = chara.id + $colon + this.text;\r\n\t\t\t}\r\n\t\t\tcb.draw(renderer, this.$outputText, crr.x, crr.y - boundBox.height);\r\n\t\t}\r\n\t}\r\n\r\n\tget isDisplay() {\r\n\t\treturn this._isDisplay;\r\n\t}\r\n\tset isDisplay(value) {\r\n\t\tthis._isDisplay = !!value;\r\n\t\tthis.elapsed = 0;\r\n\t}\r\n\r\n\t/** @type {\" : \"} */\r\n\tget colon() {\r\n\t\treturn \" : \";\r\n\t}\r\n\tget $maxLength() {\r\n\t\treturn 70;\r\n\t}\r\n\tget displayDuration() {\r\n\t\treturn $gv.ChatBalloon_display_duration;\r\n\t}\r\n}\r\n\r\n\r\nconst keyboard_map = [\r\n\t{\r\n\t\tArrowUp: new KeySlot(\"Action\", new ActionSlot(\"up\")),\r\n\t\tArrowLeft: new KeySlot(\"Action\", new ActionSlot(\"left\")),\r\n\t\tArrowDown: new KeySlot(\"Action\", new ActionSlot(\"down\")),\r\n\t\tArrowRight: new KeySlot(\"Action\", new ActionSlot(\"right\")),\r\n\t\t//z: new KeySlot(\"Action\", new ActionSlot(\"jump\")),\r\n\t\tz: new KeySlot(\"Skill\", new SkillSlot(\"23001002\")),//二段跳取代跳躍鍵\r\n\t\tx: new KeySlot(\"Skill\", new SkillSlot(\"1001005\")),\r\n\t\tc: new KeySlot(\"Skill\", new SkillSlot(\"64120000\")),\r\n\t\tv: new KeySlot(\"Skill\", new SkillSlot(\"23121000\")),//152001001\r\n\t},\r\n\t{//editor mode\r\n\t\tw: new KeySlot(\"Action\", new ActionSlot(\"up\")),\r\n\t\ta: new KeySlot(\"Action\", new ActionSlot(\"left\")),\r\n\t\ts: new KeySlot(\"Action\", new ActionSlot(\"down\")),\r\n\t\td: new KeySlot(\"Action\", new ActionSlot(\"right\")),\r\n\t\tq: new KeySlot(\"Action\", new ActionSlot(\"jump\")),\r\n\t\tf: new KeySlot(\"Skill\", new SkillSlot(\"23001002\")),//debug\r\n\t\tx: new KeySlot(\"Skill\", new SkillSlot(\"1001005\")),\r\n\t\tc: new KeySlot(\"Skill\", new SkillSlot(\"64120000\")),\r\n\t\tv: new KeySlot(\"Skill\", new SkillSlot(\"23121000\")),//152001001\r\n\t}\r\n];\r\n\r\n\r\nexport class BaseSceneCharacter extends SceneObject {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t///** @type {PPlayer} */\r\n\t\t//this.$physics = null;//new PPlayer();\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = null;\r\n\r\n\t\tthis.$layer = 5;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.name = null;\r\n\r\n\t\tthis.stat = new CharacterStat();\r\n\r\n\t\t/** @type {Map<string,SceneSkill>} */\r\n\t\tthis.activeSkills = new Map();\r\n\t\t\r\n\t\t/** @type {Chair} */\r\n\t\tthis.chair = null;\r\n\t\t\r\n\t\t/** @type {ChatController} */\r\n\t\tthis.chatCtrl = new ChatController();\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.labelStyle = 0;\r\n\r\n\t\t/** @type {{move:$Packet_CharacterMove}} */\r\n\t\tthis.$inPacket = {};\r\n\t\tthis.$inPacket.move = null;\r\n\r\n\t\t/** @type {{move:$Packet_CharacterMove}} */\r\n\t\tthis.$outPacket = {};\r\n\t\tthis.$outPacket.move = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @alias name\r\n\t * @type {string}\r\n\t */\r\n\tget id() {\r\n\t\treturn this.name;\r\n\t}\r\n\tset id(value) {\r\n\t\tthis.name = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @alias name\r\n\t * @type {string}\r\n\t */\r\n\tget $objectid() {\r\n\t\treturn this.name;\r\n\t}\r\n\tset $objectid(value) {\r\n\t\tthis.name = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {BaseSceneCharacter|null} chara - 被 chara 攻擊\r\n\t * @param {number} damage - 傷害\r\n\t */\r\n\tdamage(chara, damage) {\r\n\t\tconsole.log(\"Player(\" + this.$objectid + \") 被 \" + chara.$objectid + \" 攻擊，減少 \" + damage + \" HP\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {BaseSceneCharacter|null} chara - 被 chara 攻擊\r\n\t * @param {number} moveX - unit is pixel\r\n\t * @param {number} moveY - unit is pixel\r\n\t */\r\n\tknockback(chara, moveX, moveY) {\r\n\t\tthis.$physics.knockback(moveX, moveY, 1000);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {$Packet_CharacterMove} _move\r\n\t */\r\n\t$move(_move) {\r\n\t\tlet move = _move || this.$inPacket.move;\r\n\t\tthis.$inPacket.move = move;\r\n\t}\r\n\r\n\t_remote_control() {\r\n\t\tlet move = this.$inPacket.move;\r\n\r\n\t\tif (move && move.path && move.path.length) {\r\n\t\t\tconst crr = this.renderer;\r\n\t\t\tlet elem = move.path.shift();\r\n\r\n\t\t\tif (elem.isAwake) {\r\n\t\t\t\tthis.$physics.moveTo(elem);\r\n\t\t\t\tthis.$physics.state = elem.pState;//??\r\n\r\n\t\t\t\tcrr.front = elem.pState.front;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (elem.action) {\r\n\t\t\t\tcrr.action = elem.action;\r\n\t\t\t\t//crr.action_frame = elem.action_frame;\r\n\t\t\t}\r\n\t\t\tif (elem.emotion) {\r\n\t\t\t\tcrr.emotion = elem.emotion;\r\n\t\t\t\t//crr.emotion_frame = elem.emotion_frame;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} equipId\r\n\t * @param {number} from\r\n\t * @param {number} to\r\n\t */\r\n\t$moveItem(equipId, from, to) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} chairId\r\n\t */\r\n\tsitChair(chairId) {\r\n\t\tif (!this.chair) {\r\n\t\t\tthis.chair = new Chair();\r\n\t\t\tthis.chair.init(this);\r\n\t\t\tthis.chair.load(chairId).then(() => {\r\n\t\t\t\tthis.chair.addToScene(sceneRenderer);\r\n\t\t\t\t{// Chair#update\r\n\t\t\t\t\tconst bodyRelMove = this.chair.bodyRelMove;\r\n\t\t\t\t\tif (bodyRelMove) {\r\n\t\t\t\t\t\t//this.renderer.tx = bodyRelMove.x;\r\n\t\t\t\t\t\t//this.renderer.ty = bodyRelMove.y;\r\n\t\t\t\t\t\tthis.renderer.x += bodyRelMove.x;\r\n\t\t\t\t\t\tthis.renderer.y += bodyRelMove.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this.chair._raw.info.sitAction) {\r\n\t\t\t\t\t\tthis.renderer.action = this.chair._raw.info.sitAction;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.renderer.action = \"sit\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.chair._raw.info.sitEmotion) {\r\n\t\t\t\t\t\tthis.renderer.emotion = window.character_emotion_list[this.chair._raw.info.sitEmotion];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.enablePhysics = false;\r\n\t\t\t\tthis.$physics.body.SetAwake(false);\r\n\t\t\t\tthis.$physics.foot_walk.SetAwake(false);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"already sit\");\r\n\t\t}\r\n\t}\r\n\tnoSit() {\r\n\t\tthis.enablePhysics = true;\r\n\t\tthis.$physics.body.SetAwake(true);\r\n\t\tthis.$physics.foot_walk.SetAwake(true);\r\n\t\t\r\n\t\t{// Chair#update\r\n\t\t\t//this.renderer.tx = 0;\r\n\t\t\t//this.renderer.ty = 0;\r\n\t\t\tconst bodyRelMove = this.chair.bodyRelMove;\r\n\t\t\tif (bodyRelMove) {\r\n\t\t\t\tthis.renderer.x -= bodyRelMove.x;\r\n\t\t\t\tthis.renderer.y -= bodyRelMove.y;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderer.action = \"stand1\";\r\n\t\t\tthis.renderer.emotion = \"blink\";\r\n\t\t}\r\n\t\t\r\n\t\tthis.chair = null;//TODO: remove chair\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @returns {SceneSkill}\r\n\t */\r\n\tinvokeSkill(skillId) {\r\n\t\tlet skill = new SceneSkill();\r\n\t\tskill.load(skillId, this);\r\n\t\tthis.activeSkills.set(skillId, skill);\r\n\t\treturn skill;\r\n\t}\r\n\r\n\t/**\r\n\t * after step, before rendering\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst renderer = this.renderer;\r\n\r\n\t\tthis.chatCtrl.update(stamp);\r\n\r\n\t\tthis.activeSkills.forEach(skill => {\r\n\t\t\tif (skill) {\r\n\t\t\t\tif (skill.isEnd()) {\r\n\t\t\t\t\tthis.activeSkills.delete(skill.skillId);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tskill.update(stamp, this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//TODO: 結算攻擊傷害，skill.attackInfo\r\n\t\t\t\tthis._handleAttack();\r\n\r\n\t\t\t\t//clear all attack\r\n\t\t\t\tskill.attackInfo.allAttack.length = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._player_control();\r\n\r\n\t\tif ($gv.m_editor_mode) {\r\n\t\t\tif (renderer.speed > 0 && this.$physics && this.enablePhysics) {\r\n\t\t\t\tthis._applyState({\r\n\t\t\t\t\tfront: this.$physics.state.front,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.$physics) {\r\n\t\t\tthis._applyState(this.$physics.state);\r\n\t\t}\r\n\r\n\t\tif (this.$physics) {\r\n\t\t\tif (renderer && this.enablePhysics) {\r\n\t\t\t\tconst pos = this.$physics.getPosition();\r\n\t\t\t\tconst px = Math.trunc(pos.x * $gv.CANVAS_SCALE + 0.5);\r\n\t\t\t\tconst py = Math.trunc(pos.y * $gv.CANVAS_SCALE + 0.5);\r\n\r\n\t\t\t\t//position\r\n\t\t\t\trenderer.x = px;\r\n\t\t\t\trenderer.y = py;\r\n\t\t\t\t\r\n\t\t\t\t//rotate\r\n\t\t\t\tif (this.$physics.body.GetAngle() || this.$physics.body.GetAngularVelocity()) {\r\n\t\t\t\t\trenderer.angle = this.$physics.body.GetAngle();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trenderer.angle = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//layer\r\n\t\t\t\tthis.$layer = this.$physics.getLayer();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trenderer.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_$drawName(renderer) {\r\n\t\tconst name = this.id;\r\n\t\tthis.__drawName(renderer, name, this.labelStyle || $gv.NameLabel_default_style);\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_$drawChatBalloon(renderer) {\r\n\t\tthis.chatCtrl.draw(renderer, this);//this.chatText || \"123451234512345123451234512345123451234512345123451234512345123451234512345123451234\", 84\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_player_control() {\r\n\t}\r\n\r\n\t/**\r\n\t * 'character physics state' to 'character renderer state'\r\n\t * @param {PPlayerState} player_state\r\n\t */\r\n\t_applyState(player_state) {\r\n\t\tconst renderer = this.renderer;\r\n\t\tconst pState = this.$physics.state;\r\n\r\n\t\t// renderer: apply default action\r\n\t\tif (!pState.invokeSkill) {\r\n\t\t\tconst { front, jump, walk, prone, fly, ladder } = player_state;\r\n\t\t\tconst enablePhysics = chara.enablePhysics;\r\n\r\n\t\t\tif (front != null) {\r\n\t\t\t\trenderer.front = front;\r\n\t\t\t}\r\n\r\n\t\t\tif (ladder) {\r\n\t\t\t\tif (enablePhysics && this.$physics.ladder) {\r\n\t\t\t\t\tif (this.$physics.ladder.isLadder()) {\r\n\t\t\t\t\t\trenderer.action = \"ladder\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trenderer.action = \"rope\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (pState.ladder_move_dir) {\r\n\t\t\t\t\t\tif (chara.renderer.actani.isEnd()) {\r\n\t\t\t\t\t\t\tchara.renderer.actani.reset();\r\n\t\t\t\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trenderer.actani._is_end = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (jump) {\r\n\t\t\t\trenderer.action = \"jump\";\r\n\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t}\r\n\t\t\telse if (walk) {\r\n\t\t\t\trenderer.action = \"walk1\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\t\t\telse if (prone) {\r\n\t\t\t\trenderer.action = \"prone\";\r\n\t\t\t\trenderer.actani.loop = false;\r\n\t\t\t}\r\n\t\t\telse if (fly) {\r\n\t\t\t\trenderer.action = \"fly\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderer.action = \"stand1\";\r\n\t\t\t\trenderer.actani.loop = true;\r\n\t\t\t}\r\n\r\n\t\t\t//TODO: keyboard: emotion key\r\n\t\t\tfor (let i = 0; i <= 9; ++i) {\r\n\t\t\t\tif ($gv.input_keyDown[i]) {\r\n\t\t\t\t\tlet a = [\r\n\t\t\t\t\t\t\"blink\", \"hit\", \"smile\",\r\n\t\t\t\t\t\t\"troubled\", \"cry\", \"angry\",\r\n\t\t\t\t\t\t\"bewildered\", \"stunned\", \"vomit\",\r\n\t\t\t\t\t\t\"oops\"\r\n\t\t\t\t\t];\r\n\t\t\t\t\tlet e = a[i % a.length];\r\n\t\t\t\t\trenderer.emotion = e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 結算攻擊傷害\r\n\t */\r\n\t_handleAttack() {\r\n\t\tif (window.$io) {\r\n\t\t\tthrow new Error(\"未完成\");\r\n\r\n\t\t\tlet attackInfoList = [];\r\n\r\n\t\t\tthis.activeSkills.forEach(skill => {\r\n\t\t\t\tattackInfoList.push(skill.attackInfo);\r\n\t\t\t});\r\n\r\n\t\t\twindow.$io\r\n\t\t\t\t.emit(\"attack\", {\r\n\t\t\t\t\t//TODO: online mode: packet_attack\r\n\t\t\t\t\tattack: attackInfoList\r\n\t\t\t\t})\r\n\t\t\t\t.then(result => {\r\n\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\t//TODO: online mode: attack ??\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.activeSkills.forEach(skill => {\r\n\t\t\t\tconst attackInfo = skill.attackInfo;\r\n\r\n\t\t\t\tfor (let i = 0; i < attackInfo.allAttack.length; ++i) {\r\n\t\t\t\t\tconst attack = attackInfo.allAttack[i];\r\n\r\n\t\t\t\t\tconst targetObject = attack.getTargetObject();\r\n\r\n\t\t\t\t\tfor (let j = 0; j < attack.allDamage.length; ++j) {\r\n\t\t\t\t\t\tlet damVar = this.stat.getCurrentMaxBaseDamage() - this.stat.getCurrentMinBaseDamage();\r\n\t\t\t\t\t\tlet realDamage = this.stat.getCurrentMinBaseDamage() + Math.random() * damVar;\r\n\t\t\t\t\t\tlet damage = attack.allDamage[j] = new DamagePair();\r\n\t\t\t\t\t\tlet style;\r\n\r\n\t\t\t\t\t\tif (Math.trunc(Math.random() * 100) < this.stat.critRate) {\r\n\t\t\t\t\t\t\trealDamage = realDamage * (1 + this.stat.critDamage / 100);\r\n\t\t\t\t\t\t\tdamage.critical = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trealDamage = Math.trunc(realDamage);\r\n\t\t\t\t\t\tdamage.realDamage = realDamage;\r\n\r\n\t\t\t\t\t\ttargetObject.damage(this, realDamage);\r\n\r\n\t\t\t\t\t\tif (damage.critical) {\r\n\t\t\t\t\t\t\tstyle = \"NoCri\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tstyle = \"NoRed\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//TODO: ?? target position\r\n\t\t\t\t\t\tdamageNumberLayer.addDamagePair(this.m_damageSkin || \"default\", style, damage, targetObject.x + (attack.allDamage.length > 1 ? (25 - (1 - j & 1) * 25) : 0), targetObject.y, j * 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\r\n\t\t\t\t\ttargetObject.knockback(this, 16, 16);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * client player\r\n */\r\nexport class SceneCharacter extends BaseSceneCharacter {\r\n\t/**\r\n\t * @param {SceneMap} scene\r\n\t */\r\n\tconstructor(scene) {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = new CharacterRenderer();\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = scene.controller.$createPlayer(this, this.renderer);//new PPlayer();\r\n\r\n\t\tthis.$layer = 5;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {ItemSlot[][]} - item inventory */\r\n\t\tthis.items = new Array(5);\r\n\t\tfor (let i = 0; i < 5; ++i) {\r\n\t\t\tthis.items[i] = new Array(128);\r\n\t\t\tfor (let j = 0; j < 128; ++j) {\r\n\t\t\t\tthis.items[i][j] = new ItemSlot(j, null, null, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//this.addItem(\"01005177\", 1);\r\n\t\t//this.addItem(\"01053322\", 1);\r\n\t\t//this.addItem(\"01073284\", 1);\r\n\r\n\t\tthis.stat.onJobChange(this._onJobChange.bind(this));\r\n\t}\r\n\r\n\t_onJobChange() {\r\n\t\t//TODO: register buf, debuf, autofire skill\r\n\t\t//TODO: 二段跳取代跳躍鍵\r\n\t\tconst newJob = this.stat.job;\r\n\r\n\t\tconsole.log(\"Player(\" + this.$objectid + \") change job: \" + newJob);\r\n\t}\r\n\r\n\t/**\r\n\t * 'character physics state' to 'character renderer state'\r\n\t * @param {PPlayerState} player_state\r\n\t */\r\n\t_applyState(player_state) {\r\n\t\tsuper._applyState(player_state);\r\n\r\n\t\tthis.$recMove();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_player_control() {\r\n\t\tif (!this.$physics) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//if (!this.$physics.state.jump && this.$$jump_state) {\r\n\t\t//\tdelete this.$$jump_state;\r\n\t\t//}\r\n\t\tconst key_map = keyboard_map[$gv.m_editor_mode ? 1 : 0];\r\n\t\t/** @type {{[key:string]:number}} */\r\n\t\tlet ikey = {};\r\n\r\n\t\tlet can_use_skill = this.activeSkills.size == 0;//TODO: 以查表法檢查不同技能是否可以同時使用\r\n\r\n\t\tfor (let keyName in key_map) {\r\n\t\t\t/** @type {KeySlot} */\r\n\t\t\tconst keySlot = key_map[keyName];\r\n\t\t\tif (!keySlot) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst keyDown = $gv.input_keyDown[keyName];\r\n\t\t\tconst keyUp = $gv.input_keyUp[keyName];\r\n\r\n\t\t\tswitch (keySlot.type) {\r\n\t\t\t\tcase \"Command\"://open or close UI, ...\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Action\":\r\n\t\t\t\t\tif (keyDown) {\r\n\t\t\t\t\t\t/** @type {ActionSlot} */\r\n\t\t\t\t\t\tconst ck = keySlot.data;\r\n\t\t\t\t\t\tif (this.chair) {\r\n\t\t\t\t\t\t\tif (ck.action == \"left\" ||\r\n\t\t\t\t\t\t\t\tck.action == \"right\" ||\r\n\t\t\t\t\t\t\t\tck.action == \"jump\"\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tthis.noSit();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tikey[ck.action] = keyDown;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Item\":\r\n\t\t\t\t\tif (keyDown) {\r\n\t\t\t\t\t\t/** @type {ItemSlot} */\r\n\t\t\t\t\t\tconst itemSlot = keySlot.data;\r\n\t\t\t\t\t\tthis.useItem(itemSlot.data.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.chair) {\r\n\t\t\tfor (let keyName in key_map) {\r\n\t\t\t\t/** @type {KeySlot} */\r\n\t\t\t\tconst keySlot = key_map[keyName];\r\n\t\t\t\tif (!keySlot) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst keyDown = $gv.input_keyDown[keyName];\r\n\t\t\t\tconst keyUp = $gv.input_keyUp[keyName];\r\n\r\n\t\t\t\tif (keySlot.type == \"Skill\") {\r\n\t\t\t\t\t/** @type {SkillSlot} */\r\n\t\t\t\t\tconst sk = keySlot.data;\r\n\t\t\t\t\tconst skill_id = sk.skill_id;\r\n\t\t\t\t\tlet skill = this.activeSkills.get(skill_id);\r\n\t\t\t\t\tif (keyDown && can_use_skill) {\r\n\t\t\t\t\t\tskill = this.invokeSkill(sk.skill_id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (skill) {\r\n\t\t\t\t\t\tskill.control(ikey, keyDown, keyUp);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.$physics.control(ikey);//apply action control\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} itemId\r\n\t * @param {number} amount\r\n\t */\r\n\taddItem(itemId, amount) {\r\n\t\tif (window.$io) {//TODO: online mode: addItem\r\n\t\t\tthrow new Error(\"未完成\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/** @type {Partial<ItemEquip>} */\r\n\t\t\tlet props = {//test attr\r\n\t\t\t\tincDEXr: Math.trunc(Math.random() * 3),\r\n\t\t\t\ttimeLimited: Date(),\r\n\t\t\t};\r\n\r\n\t\t\t$createItem(itemId, props).then(item => {\r\n\t\t\t\tthis._addItem(item, amount);\r\n\t\t\t}, function (err) {\r\n\t\t\t\tconsole.warn(err);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @template T\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\t_addItem(itemData, amount) {\r\n\t\tlet SN = 123;\r\n\t\tlet itemId = itemData.id;\r\n\t\tlet slotType = itemData.getSlot();\r\n\t\tfor (let i = 0; i < this.items[slotType].length; ++i) {\r\n\t\t\tif (this.items[slotType][i].isEmpty()) {\r\n\t\t\t\tif (window.$addItem_repeatEquip) {\r\n\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, slotType ? amount : 1);\r\n\t\t\t\t\tconsole.info(`give ${this.id}: ${itemId} * ${amount}`);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (slotType == 0) {\r\n\t\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, 1);\r\n\t\t\t\t\t\tamount--;\r\n\t\t\t\t\t\tif (amount == 0) {\r\n\t\t\t\t\t\t\tconsole.info(`repeat give ${this.id}: ${itemId}`);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.items[slotType][i].assign(i, SN, itemData, amount);\r\n\t\t\t\t\t\tconsole.info(`give ${this.id}: ${itemId} * ${amount}`);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;//item inventory was full\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} type - item type\r\n\t * @param {number} slot\r\n\t */\r\n\tasync removeItem(type, slot) {\r\n\t\tif (window.$io) {//TODO: online mode: removeItem\r\n\t\t\tthrow new Error(\"未完成\");\r\n\r\n\t\t\tlet result = await window.$io.emit(\"removeItem\", {\r\n\t\t\t\ttype: type,\r\n\t\t\t\tslot: slot,\r\n\t\t\t});\r\n\t\t\tif (result) {\r\n\t\t\t\tthis._removeItem(type, slot);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._removeItem(type, slot);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} type - item type\r\n\t * @param {number} slot\r\n\t */\r\n\t_removeItem(type, slot) {\r\n\t\tthis.items[type][slot]._clear();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} from\r\n\t * @param {number} to\r\n\t */\r\n\tmoveItemToSlot(from, to) {\r\n\t\t//TODO: (\"./ui/Basic/UISlotItem.vue\").methods.drop\r\n\t\tdebugger;\r\n\t}\r\n\r\n\t///**\r\n\t// * @param {any} id\r\n\t// */\r\n\t//$getItem(id) {\r\n\t//\tthis.itemSlot\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {number} itemId\r\n\t */\r\n\tfindItem(itemId) {\r\n\t\tfor (let i = 0; i < this.items.length; ++i) {\r\n\t\t\tfor (let j = 0; j < this.items[i].length; ++j) {\r\n\t\t\t\tlet itemSlot = this.items[i][j];\r\n\r\n\t\t\t\tif (itemSlot && itemSlot.data && (itemSlot.data.id == itemId)) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttypeName: ItemCategoryInfo.typeName[i],\r\n\t\t\t\t\t\titemSlot: itemSlot,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\ttypeName: null,\r\n\t\t\titemSlot: null,\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} itemId\r\n\t */\r\n\tuseItem(itemId) {\r\n\t\tif (window.$io) {\r\n\t\t\twindow.$io.emit(\"useItem\", {\r\n\t\t\t\titemId: itemId\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst args = arguments;\r\n\t\t\tlet existItem = this.findItem(itemId).itemSlot;\r\n\r\n\t\t\tif (existItem) {\r\n\t\t\t\tif (!$gv.m_editor_mode) {\r\n\t\t\t\t\tconsole.log(`消耗道具：${itemId}。未完成`);\r\n\t\t\t\t\tthis._consume(itemId, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(`使用道具：${itemId}。`);\r\n\t\t\t\t}\r\n\t\t\t\tif (ItemCategoryInfo.isChair(itemId)) {\r\n\t\t\t\t\tthis.sitChair(itemId);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tupdate_renderer.call(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ($gv.m_editor_mode) {\r\n\t\t\t\t\tthis.addItem(itemId, 1);\r\n\t\t\t\t\tif (ItemCategoryInfo.isChair(itemId)) {\r\n\t\t\t\t\t\tthis.sitChair(itemId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tupdate_renderer.call(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"無法使用不存在的道具。\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction update_renderer() {\r\n\t\t\t\t//TODO: implement job\r\n\t\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\t\tconst category = args[1], equipInfo = args[2];\r\n\t\t\t\t\tthis.renderer.use(itemId, category, equipInfo);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.renderer.use(itemId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tasync say(text) {\r\n\t\tif (window.$io) {\r\n\t\t\tlet result = await window.$io.emit(\"chat\", {\r\n\t\t\t\t$style: this.chatCtrl.style,\r\n\t\t\t\ttext: text,\r\n\t\t\t});\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.chatCtrl.enter(text);\r\n\t\t\t}\r\n\t\t\treturn result;//boolean\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.chatCtrl.enter(text);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\t$emit(socket) {\r\n\t\tif (this.$outPacket.move) {\r\n\t\t\tsocket.emit(\"charaMove\", this.$outPacket.move);\r\n\t\t\tthis.$outPacket.move = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet charaMove = new $Packet_CharacterMove();\r\n\r\n\t\t\tcharaMove.capture(this);\r\n\r\n\t\t\tsocket.emit(\"charaMove\", charaMove);\r\n\t\t}\r\n\r\n\t\tthis.$outPacket.move = null;\r\n\t}\r\n\t\r\n\t$recMove() {\r\n\t\tlet move = this.$outPacket.move || new $Packet_CharacterMove();\r\n\t\tmove.capture(this);\r\n\t\tthis.$outPacket.move = move;\r\n\t}\r\n}\r\n\r\n/**\r\n * remote player\r\n */\r\nexport class SceneRemoteCharacter extends BaseSceneCharacter {\r\n\t/**\r\n\t * @param {SceneMap} scene\r\n\t */\r\n\tconstructor(scene) {\r\n\t\tsuper();\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tdelete this.$physics;\r\n\t\t\tObject.defineProperty(this, \"$physics\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this.$$physics;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tif (value == null) {\r\n\t\t\t\t\t\tconsole.error(\"can not set SceneRemoteCharacter.$physics = null;\");\r\n\t\t\t\t\t\talert(\"can not set SceneRemoteCharacter.$physics = null;\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$$physics = value;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tdelete this.renderer;\r\n\t\t\tObject.defineProperty(this, \"renderer\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn this.$$renderer;\r\n\t\t\t\t},\r\n\t\t\t\tset: function (value) {\r\n\t\t\t\t\tif (value == null) {\r\n\t\t\t\t\t\tconsole.error(\"can not set SceneRemoteCharacter.renderer = null;\");\r\n\t\t\t\t\t\talert(\"can not set SceneRemoteCharacter.renderer = null;\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$$renderer = value;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/** @type {CharacterRenderer} */\r\n\t\tthis.renderer = new CharacterRenderer();\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.$physics = scene.controller.$createPlayer(this, this.renderer);\r\n\t}\r\n\r\n\tget $remote() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_player_control() {\r\n\t\tthis._remote_control();\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { PPlayerState } from \"../game/Physics/PPlayer.js\";//debug\r\n\r\n\r\nexport class BaseMoveElem {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.x = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y = null;\r\n\r\n\t\t/** @type {number} - linear velocity x */\r\n\t\tthis.vx = undefined;\r\n\r\n\t\t/** @type {number} - linear velocity y */\r\n\t\tthis.vy = undefined;\r\n\r\n\t\t/** @type {number} - force x */\r\n\t\tthis.fx = undefined;\r\n\r\n\t\t/** @type {number} - force y */\r\n\t\tthis.fy = undefined;\r\n\r\n\t\t/** @type {PPlayerState} - player physics state */\r\n\t\tthis.pState = null;\r\n\r\n\t\t/** @type {number} - time elapsed */\r\n\t\tthis.elapsed = 0;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.isAwake = undefined;// value = ?\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = undefined;\r\n\t\t/** @type {number} */\r\n\t\tthis.action_frame = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.emotion = undefined;\r\n\t\t/** @type {number} */\r\n\t\tthis.emotion_frame = undefined;\r\n\t}\r\n}\r\n\r\nexport class CharacterMoveElem extends BaseMoveElem {\r\n}\r\n\r\nexport class MobMoveElem extends BaseMoveElem {\r\n}\r\n\r\n","﻿\r\nimport { Sprite } from \"../Sprite.js\";\r\nimport { Animation } from \"../Animation.js\";\r\n\r\n\r\nexport class LifeRenderer /*extends SceneObject*/ {\r\n\tconstructor() {\r\n\t\t//super();\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._url = \"\";\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {{[action:string]:Animation}} */\r\n\t\tthis.actions = {};\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._action = \"stand\";//static default\r\n\t\t\r\n\t\tthis._raw = null;\r\n\t}\r\n\t\r\n\tget name() {\r\n\t\treturn this.constructor._desc[this.id].name;\r\n\t}\r\n\t\r\n\tgetDefaultAction() {\r\n\t\tif (this.actions.stand) {\r\n\t\t\treturn \"stand\";\r\n\t\t}\r\n\t\telse if(this.actions.fly) {\r\n\t\t\treturn \"fly\";\r\n\t\t}\r\n\t\talert(this.constructor.name + \" (\" + this.id + \") default must is 'stand' or 'fly'\");\r\n\t\treturn new Error(this.constructor.name + \" (\" + this.id + \") default must is 'stand' or 'fly'\");\r\n\t}\r\n\t\r\n\t/** @type {string} */\r\n\tget action() {\r\n\t\treturn this._action;\r\n\t}\r\n\tset action(act) {\r\n\t\tif (this._action != act) {\r\n\t\t\tthis._action = act;\r\n\t\t\tif (this.actions[act]) {\r\n\t\t\t\tthis.actions[act].reset();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t///**\r\n\t// * @param {string} act\r\n\t// */\r\n\t//setAction(act) {\r\n\t//\tthrow new Error(\"Not implement\");\r\n\t//}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tasync load(id) {\r\n\t\tlet tasks = [];\r\n\t\tlet that = this;\r\n\t\tthis.id = id;//\"8880140\";//\"8880141\";//\"8880150\";//\"8880151\";\r\n\t\tthis._url = [this.constructor._base_path, this.id].join(\"/\");\r\n\t\t\r\n\t\tif (!this.constructor._desc[id]) {\r\n\t\t\tlet task = this.constructor.loadDescription(id);\r\n\t\t\ttasks.push(task);\r\n\t\t}\r\n\r\n\t\tlet task = $get.data(this._url).then(async function (raw) {\r\n\t\t\tthat._raw = raw;\r\n\t\t\tif (that._raw) {\r\n\t\t\t\tawait that._construct_actions();\r\n\t\t\t\t\r\n\t\t\t\tthat._action = that.getDefaultAction();//set default action; is fly mob ?\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t});\r\n\t\ttasks.push(task);\r\n\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\tasync _construct_actions() {\r\n\t\tvar tasks = [];\r\n\r\n\t\tfor (var i = 0; i < this.constructor._animations.length; ++i) {\r\n\t\t\tvar t = this.constructor._animations[i];\r\n\r\n\t\t\tfor (var $index = 1; ; ++$index) {\r\n\t\t\t\tlet action;\r\n\t\t\t\tvar name = eval(t);\r\n\r\n\t\t\t\tif (!(name in this._raw)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taction = new Animation(this._raw[name], [this._url, name].join(\"/\"));\r\n\t\t\t\taction.is_loop = false;\r\n\t\t\t\t\r\n\t\t\t\ttasks.push(action.load());\r\n\t\t\t\t\r\n\t\t\t\tthis.actions[name] = action;\r\n\r\n\t\t\t\tif (!name.endsWith($index)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.actions[this.action]) {\r\n\t\t\tconst ani = this.actions[this.action];\r\n\t\t\t\r\n\t\t\tani.update(stamp);\r\n\t\t\t\t\r\n\t\t\t//TODO: move this code to: MapLifeEntity.prototype._applyState\r\n\t\t\t//if (ani.isEnd()) {\r\n\t\t\t//\tthis.action = this.getDefaultAction();//default loop action: stand\r\n\t\t\t//\tthis.actions[this.action].update(stamp);\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * paint\r\n\t * @param {Engine} engine\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\tdraw(engine, x, y, angle, flip) {\r\n\t\tif (this.actions[this.action]) {\r\n\t\t\t/** @type {Animation} */\r\n\t\t\tconst act = this.actions[this.action];\r\n\t\t\tact.draw(engine, x, y, angle, flip);\r\n\t\t}\r\n\t}\r\n\tpaint(engine) {\r\n\t\tdebugger;\r\n\t\talert(\"Not Implement\");\r\n\t\trender(engine);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tstatic async loadDescription(id) {\r\n\t\talert(\"Not Implement\");\r\n\t}\r\n\r\n\tstatic get _animations() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\tstatic _get_desc_base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n","﻿\r\nimport { Animation } from \"../Animation.js\"\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { RenderingOption } from \"./RenderingOption\";\r\n\r\n/**\r\n * @interface\r\n */\r\nexport class LayerObject {\r\n\tconstructor() {\r\n\t\t/** @type {number} = 0~1 */\r\n\t\tthis.opacity = 1;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\tconsole.error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\tthrow new Error();\r\n\t}\r\n}\r\n\r\n/**\r\n * @implements {LayerObject}\r\n */\r\nexport class Layer {\r\n\tconstructor() {\r\n\t\t/** @type {LayerObject[]} */\r\n\t\tthis.objects = [];\r\n\t\t\r\n\t\tthis.rendering_option = new RenderingOption();\r\n\t}\r\n\t\r\n\tadd(obj) {\r\n\t\tthis.objects.push(obj);\r\n\t}\r\n\t\r\n\tclear() {\r\n\t\tthis.objects.length = 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.objects = this.objects.filter(function (obj) {\r\n\t\t\tif (!obj.isEnd || !obj.destroy) {\r\n\t\t\t\tconsole.error(\"%o: %o\", obj.constructor ? obj.constructor.name : (typeof obj), obj);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (obj.isEnd()) {\r\n\t\t\t\tobj.destroy();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tobj.update(stamp);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\tconst opt = this.rendering_option.mul(option);\r\n\t\t\r\n\t\tif (opt.opacity > 0) {\r\n\t\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\t\tthis.objects.forEach(function (obj) {\r\n\t\t\t\tobj.render(renderer, opt);\r\n\t\t\t});\r\n\r\n\t\t\trenderer.popGlobalAlpha();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// Color for debug drawing. Each value has the range [0,1].\r\nexport class b2Color {\r\n    constructor(rr = 0.5, gg = 0.5, bb = 0.5, aa = 1.0) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n    }\r\n    Clone() {\r\n        return new b2Color().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        this.r = other.r;\r\n        this.g = other.g;\r\n        this.b = other.b;\r\n        this.a = other.a;\r\n        return this;\r\n    }\r\n    IsEqual(color) {\r\n        return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\r\n    }\r\n    IsZero() {\r\n        return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\r\n    }\r\n    GetColor(out) {\r\n        out.Copy(this);\r\n        return out;\r\n    }\r\n    SetColor(color) {\r\n        this.Copy(color);\r\n    }\r\n    Set(a0, a1, a2, a3 = 1.0) {\r\n        if (a0 instanceof b2Color) {\r\n            this.Copy(a0);\r\n        }\r\n        else {\r\n            this.SetRGBA(a0, a1, a2, a3);\r\n        }\r\n    }\r\n    SetByteRGB(r, g, b) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        return this;\r\n    }\r\n    SetByteRGBA(r, g, b, a) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        this.a = a / 0xff;\r\n        return this;\r\n    }\r\n    SetRGB(rr, gg, bb) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        return this;\r\n    }\r\n    SetRGBA(rr, gg, bb, aa) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n        return this;\r\n    }\r\n    SelfAdd(color) {\r\n        this.r += color.r;\r\n        this.g += color.g;\r\n        this.b += color.b;\r\n        this.a += color.a;\r\n        return this;\r\n    }\r\n    Add(color, out) {\r\n        out.r = this.r + color.r;\r\n        out.g = this.g + color.g;\r\n        out.b = this.b + color.b;\r\n        out.a = this.a + color.a;\r\n        return out;\r\n    }\r\n    SelfSub(color) {\r\n        this.r -= color.r;\r\n        this.g -= color.g;\r\n        this.b -= color.b;\r\n        this.a -= color.a;\r\n        return this;\r\n    }\r\n    Sub(color, out) {\r\n        out.r = this.r - color.r;\r\n        out.g = this.g - color.g;\r\n        out.b = this.b - color.b;\r\n        out.a = this.a - color.a;\r\n        return out;\r\n    }\r\n    SelfMul_0_1(s) {\r\n        this.r *= s;\r\n        this.g *= s;\r\n        this.b *= s;\r\n        this.a *= s;\r\n        return this;\r\n    }\r\n    Mul_0_1(s, out) {\r\n        out.r = this.r * s;\r\n        out.g = this.g * s;\r\n        out.b = this.b * s;\r\n        out.a = this.a * s;\r\n        return this;\r\n    }\r\n    Mix(mixColor, strength) {\r\n        b2Color.MixColors(this, mixColor, strength);\r\n    }\r\n    static MixColors(colorA, colorB, strength) {\r\n        const dr = (strength * (colorB.r - colorA.r));\r\n        const dg = (strength * (colorB.g - colorA.g));\r\n        const db = (strength * (colorB.b - colorA.b));\r\n        const da = (strength * (colorB.a - colorA.a));\r\n        colorA.r += dr;\r\n        colorA.g += dg;\r\n        colorA.b += db;\r\n        colorA.a += da;\r\n        colorB.r -= dr;\r\n        colorB.g -= dg;\r\n        colorB.b -= db;\r\n        colorB.a -= da;\r\n    }\r\n    MakeStyleString(alpha = this.a) {\r\n        return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\r\n    }\r\n    static MakeStyleString(r, g, b, a = 1.0) {\r\n        // function clamp(x: number, lo: number, hi: number) { return x < lo ? lo : hi < x ? hi : x; }\r\n        r *= 255; // r = clamp(r, 0, 255);\r\n        g *= 255; // g = clamp(g, 0, 255);\r\n        b *= 255; // b = clamp(b, 0, 255);\r\n        // a = clamp(a, 0, 1);\r\n        if (a < 1) {\r\n            return `rgba(${r},${g},${b},${a})`;\r\n        }\r\n        else {\r\n            return `rgb(${r},${g},${b})`;\r\n        }\r\n    }\r\n}\r\nb2Color.RED = new b2Color(1, 0, 0);\r\nb2Color.GREEN = new b2Color(0, 1, 0);\r\nb2Color.BLUE = new b2Color(0, 0, 1);\r\nexport var b2DrawFlags;\r\n(function (b2DrawFlags) {\r\n    b2DrawFlags[b2DrawFlags[\"e_none\"] = 0] = \"e_none\";\r\n    b2DrawFlags[b2DrawFlags[\"e_shapeBit\"] = 1] = \"e_shapeBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_jointBit\"] = 2] = \"e_jointBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_aabbBit\"] = 4] = \"e_aabbBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_pairBit\"] = 8] = \"e_pairBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_centerOfMassBit\"] = 16] = \"e_centerOfMassBit\";\r\n    // #if B2_ENABLE_PARTICLE\r\n    b2DrawFlags[b2DrawFlags[\"e_particleBit\"] = 32] = \"e_particleBit\";\r\n    // #endif\r\n    b2DrawFlags[b2DrawFlags[\"e_controllerBit\"] = 64] = \"e_controllerBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_all\"] = 63] = \"e_all\";\r\n})(b2DrawFlags || (b2DrawFlags = {}));\r\n/// Implement and register this class with a b2World to provide debug drawing of physics\r\n/// entities in your game.\r\nexport class b2Draw {\r\n    constructor() {\r\n        this.m_drawFlags = 0;\r\n    }\r\n    SetFlags(flags) {\r\n        this.m_drawFlags = flags;\r\n    }\r\n    GetFlags() {\r\n        return this.m_drawFlags;\r\n    }\r\n    AppendFlags(flags) {\r\n        this.m_drawFlags |= flags;\r\n    }\r\n    ClearFlags(flags) {\r\n        this.m_drawFlags &= ~flags;\r\n    }\r\n    PushTransform(xf) { }\r\n    PopTransform(xf) { }\r\n    DrawPolygon(vertices, vertexCount, color) { }\r\n    DrawSolidPolygon(vertices, vertexCount, color) { }\r\n    DrawCircle(center, radius, color) { }\r\n    DrawSolidCircle(center, radius, axis, color) { }\r\n    // #if B2_ENABLE_PARTICLE\r\n    DrawParticles(centers, radius, colors, count) { }\r\n    // #endif\r\n    DrawSegment(p1, p2, color) { }\r\n    DrawTransform(xf) { }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJEcmF3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvQ29tbW9uL2IyRHJhdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUlGLDREQUE0RDtBQUM1RCxNQUFNLE9BQU8sT0FBTztJQVVsQixZQUFZLEtBQWEsR0FBRyxFQUFFLEtBQWEsR0FBRyxFQUFFLEtBQWEsR0FBRyxFQUFFLEtBQWEsR0FBRztRQUNoRixJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNaLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ1osSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDWixJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNkLENBQUM7SUFFTSxLQUFLO1FBQ1YsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRU0sSUFBSSxDQUFDLEtBQWM7UUFDeEIsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLE9BQU8sQ0FBQyxLQUFjO1FBQzNCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJ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","/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// Timer for profiling. This has platform specific code and may\r\n/// not work on every platform.\r\nexport class b2Timer {\r\n    constructor() {\r\n        this.m_start = Date.now();\r\n    }\r\n    /// Reset the timer.\r\n    Reset() {\r\n        this.m_start = Date.now();\r\n        return this;\r\n    }\r\n    /// Get the time since construction or the last reset.\r\n    GetMilliseconds() {\r\n        return Date.now() - this.m_start;\r\n    }\r\n}\r\nexport class b2Counter {\r\n    constructor() {\r\n        this.m_count = 0;\r\n        this.m_min_count = 0;\r\n        this.m_max_count = 0;\r\n    }\r\n    GetCount() {\r\n        return this.m_count;\r\n    }\r\n    GetMinCount() {\r\n        return this.m_min_count;\r\n    }\r\n    GetMaxCount() {\r\n        return this.m_max_count;\r\n    }\r\n    ResetCount() {\r\n        const count = this.m_count;\r\n        this.m_count = 0;\r\n        return count;\r\n    }\r\n    ResetMinCount() {\r\n        this.m_min_count = 0;\r\n    }\r\n    ResetMaxCount() {\r\n        this.m_max_count = 0;\r\n    }\r\n    Increment() {\r\n        this.m_count++;\r\n        if (this.m_max_count < this.m_count) {\r\n            this.m_max_count = this.m_count;\r\n        }\r\n    }\r\n    Decrement() {\r\n        this.m_count--;\r\n        if (this.m_min_count > this.m_count) {\r\n            this.m_min_count = this.m_count;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJUaW1lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbW1vbi9iMlRpbWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsZ0VBQWdFO0FBQ2hFLCtCQUErQjtBQUMvQixNQUFNLE9BQU8sT0FBTztJQUFwQjtRQUNTLFlBQU8sR0FBVyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFZdEMsQ0FBQztJQVZDLG9CQUFvQjtJQUNiLEtBQUs7UUFDVixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUMxQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxzREFBc0Q7SUFDL0MsZUFBZTtRQUNwQixPQUFPLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ25DLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxTQUFTO0lBQXRCO1FBQ1MsWUFBTyxHQUFXLENBQUMsQ0FBQztRQUNwQixnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUN4QixnQkFBVyxHQUFXLENBQUMsQ0FBQztJQTJDakMsQ0FBQztJQXpDUSxRQUFRO1FBQ2IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFTSxXQUFXO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBRU0sV0FBVztRQUNoQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVNLFVBQVU7UUFDZixNQUFNLEtBQUssR0FBVyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVNLGFBQWE7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUVNLGFBQWE7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUVNLFNBQVM7UUFDZCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFFZixJQUFJLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNuQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7U0FDakM7SUFDSCxDQUFDO0lBRU0sU0FBUztRQUNkLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUVmLElBQUksSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztTQUNqQztJQUNILENBQUM7Q0FDRiJ9","/*\r\n* Copyright (c) 2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/// This is a growable LIFO stack with an initial capacity of N.\r\n/// If the stack size exceeds the initial capacity, the heap is used\r\n/// to increase the size of the stack.\r\nexport class b2GrowableStack {\r\n    constructor(N) {\r\n        this.m_stack = [];\r\n        this.m_count = 0;\r\n        this.m_stack = [ /*N*/];\r\n        this.m_count = 0;\r\n    }\r\n    Reset() {\r\n        this.m_count = 0;\r\n        return this;\r\n    }\r\n    Push(element) {\r\n        this.m_stack[this.m_count] = element;\r\n        this.m_count++;\r\n    }\r\n    Pop() {\r\n        ///b2Assert(this.m_count > 0);\r\n        this.m_count--;\r\n        const element = this.m_stack[this.m_count];\r\n        this.m_stack[this.m_count] = null;\r\n        return element;\r\n    }\r\n    GetCount() {\r\n        return this.m_count;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJHcm93YWJsZVN0YWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvQ29tbW9uL2IyR3Jvd2FibGVTdGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLGdFQUFnRTtBQUNoRSxvRUFBb0U7QUFDcEUsc0NBQXNDO0FBRXRDLE1BQU0sT0FBTyxlQUFlO0lBSTFCLFlBQVksQ0FBUztRQUhkLFlBQU8sR0FBUSxFQUFFLENBQUM7UUFDbEIsWUFBTyxHQUFXLENBQUMsQ0FBQztRQUd6QixJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDbkIsQ0FBQztJQUVNLEtBQUs7UUFDVixJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztRQUNqQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxJQUFJLENBQUMsT0FBVTtRQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxPQUFPLENBQUM7UUFDckMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFTSxHQUFHO1FBQ1IsOEJBQThCO1FBQzlCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNmLE1BQU0sT0FBTyxHQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsQyxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDO0lBRU0sUUFBUTtRQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport class b2BlockAllocator {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJCbG9ja0FsbG9jYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbW1vbi9iMkJsb2NrQWxsb2NhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTSxPQUFPLGdCQUFnQjtDQUFHIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexport class b2StackAllocator {\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTdGFja0FsbG9jYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbW1vbi9iMlN0YWNrQWxsb2NhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsTUFBTSxPQUFPLGdCQUFnQjtDQUFHIn0=","/*\r\n* Copyright (c) 2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_aabbExtension, b2_aabbMultiplier } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2GrowableStack } from \"../Common/b2GrowableStack\";\r\nimport { b2AABB, b2RayCastInput, b2TestOverlapAABB } from \"./b2Collision\";\r\nfunction verify(value) {\r\n    if (value === null) {\r\n        throw new Error();\r\n    }\r\n    return value;\r\n}\r\n/// A node in the dynamic tree. The client does not interact with this directly.\r\nexport class b2TreeNode {\r\n    constructor(id = 0) {\r\n        this.m_id = 0;\r\n        this.aabb = new b2AABB();\r\n        this.userData = null;\r\n        this.parent = null; // or next\r\n        this.child1 = null;\r\n        this.child2 = null;\r\n        this.height = 0; // leaf = 0, free node = -1\r\n        this.m_id = id;\r\n    }\r\n    IsLeaf() {\r\n        return this.child1 === null;\r\n    }\r\n}\r\nexport class b2DynamicTree {\r\n    constructor() {\r\n        this.m_root = null;\r\n        // b2TreeNode* public m_nodes;\r\n        // int32 public m_nodeCount;\r\n        // int32 public m_nodeCapacity;\r\n        this.m_freeList = null;\r\n        this.m_path = 0;\r\n        this.m_insertionCount = 0;\r\n    }\r\n    GetUserData(proxy) {\r\n        ///b2Assert(proxy !== null);\r\n        return proxy.userData;\r\n    }\r\n    GetFatAABB(proxy) {\r\n        ///b2Assert(proxy !== null);\r\n        return proxy.aabb;\r\n    }\r\n    Query(callback, aabb) {\r\n        if (this.m_root === null)\r\n            return;\r\n        const stack = b2DynamicTree.s_stack.Reset();\r\n        stack.Push(this.m_root);\r\n        while (stack.GetCount() > 0) {\r\n            const node = stack.Pop();\r\n            if (node === null) {\r\n                continue;\r\n            }\r\n            if (node.aabb.TestOverlap(aabb)) {\r\n                if (node.IsLeaf()) {\r\n                    const proceed = callback(node);\r\n                    if (!proceed) {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    stack.Push(node.child1);\r\n                    stack.Push(node.child2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    RayCast(callback, input) {\r\n        if (this.m_root === null)\r\n            return;\r\n        const p1 = input.p1;\r\n        const p2 = input.p2;\r\n        const r = b2Vec2.SubVV(p2, p1, b2DynamicTree.s_r);\r\n        ///b2Assert(r.LengthSquared() > 0);\r\n        r.Normalize();\r\n        // v is perpendicular to the segment.\r\n        const v = b2Vec2.CrossOneV(r, b2DynamicTree.s_v);\r\n        const abs_v = b2Vec2.AbsV(v, b2DynamicTree.s_abs_v);\r\n        // Separating axis for segment (Gino, p80).\r\n        // |dot(v, p1 - c)| > dot(|v|, h)\r\n        let maxFraction = input.maxFraction;\r\n        // Build a bounding box for the segment.\r\n        const segmentAABB = b2DynamicTree.s_segmentAABB;\r\n        let t_x = p1.x + maxFraction * (p2.x - p1.x);\r\n        let t_y = p1.y + maxFraction * (p2.y - p1.y);\r\n        segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\r\n        segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\r\n        segmentAABB.upperBound.x = b2Max(p1.x, t_x);\r\n        segmentAABB.upperBound.y = b2Max(p1.y, t_y);\r\n        const stack = b2DynamicTree.s_stack.Reset();\r\n        stack.Push(this.m_root);\r\n        while (stack.GetCount() > 0) {\r\n            const node = stack.Pop();\r\n            if (node === null) {\r\n                continue;\r\n            }\r\n            if (!b2TestOverlapAABB(node.aabb, segmentAABB)) {\r\n                continue;\r\n            }\r\n            // Separating axis for segment (Gino, p80).\r\n            // |dot(v, p1 - c)| > dot(|v|, h)\r\n            const c = node.aabb.GetCenter();\r\n            const h = node.aabb.GetExtents();\r\n            const separation = b2Abs(b2Vec2.DotVV(v, b2Vec2.SubVV(p1, c, b2Vec2.s_t0))) - b2Vec2.DotVV(abs_v, h);\r\n            if (separation > 0) {\r\n                continue;\r\n            }\r\n            if (node.IsLeaf()) {\r\n                const subInput = b2DynamicTree.s_subInput;\r\n                subInput.p1.Copy(input.p1);\r\n                subInput.p2.Copy(input.p2);\r\n                subInput.maxFraction = maxFraction;\r\n                const value = callback(subInput, node);\r\n                if (value === 0) {\r\n                    // The client has terminated the ray cast.\r\n                    return;\r\n                }\r\n                if (value > 0) {\r\n                    // Update segment bounding box.\r\n                    maxFraction = value;\r\n                    t_x = p1.x + maxFraction * (p2.x - p1.x);\r\n                    t_y = p1.y + maxFraction * (p2.y - p1.y);\r\n                    segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\r\n                    segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\r\n                    segmentAABB.upperBound.x = b2Max(p1.x, t_x);\r\n                    segmentAABB.upperBound.y = b2Max(p1.y, t_y);\r\n                }\r\n            }\r\n            else {\r\n                stack.Push(node.child1);\r\n                stack.Push(node.child2);\r\n            }\r\n        }\r\n    }\r\n    AllocateNode() {\r\n        // Expand the node pool as needed.\r\n        if (this.m_freeList) {\r\n            const node = this.m_freeList;\r\n            this.m_freeList = node.parent; // this.m_freeList = node.next;\r\n            node.parent = null;\r\n            node.child1 = null;\r\n            node.child2 = null;\r\n            node.height = 0;\r\n            node.userData = null;\r\n            return node;\r\n        }\r\n        return new b2TreeNode(b2DynamicTree.s_node_id++);\r\n    }\r\n    FreeNode(node) {\r\n        node.parent = this.m_freeList; // node.next = this.m_freeList;\r\n        node.child1 = null;\r\n        node.child2 = null;\r\n        node.height = -1;\r\n        node.userData = null;\r\n        this.m_freeList = node;\r\n    }\r\n    CreateProxy(aabb, userData) {\r\n        const node = this.AllocateNode();\r\n        // Fatten the aabb.\r\n        const r_x = b2_aabbExtension;\r\n        const r_y = b2_aabbExtension;\r\n        node.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\r\n        node.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\r\n        node.aabb.upperBound.x = aabb.upperBound.x + r_x;\r\n        node.aabb.upperBound.y = aabb.upperBound.y + r_y;\r\n        node.userData = userData;\r\n        node.height = 0;\r\n        this.InsertLeaf(node);\r\n        return node;\r\n    }\r\n    DestroyProxy(proxy) {\r\n        ///b2Assert(proxy.IsLeaf());\r\n        this.RemoveLeaf(proxy);\r\n        this.FreeNode(proxy);\r\n    }\r\n    MoveProxy(proxy, aabb, displacement) {\r\n        ///b2Assert(proxy.IsLeaf());\r\n        if (proxy.aabb.Contains(aabb)) {\r\n            return false;\r\n        }\r\n        this.RemoveLeaf(proxy);\r\n        // Extend AABB.\r\n        // Predict AABB displacement.\r\n        const r_x = b2_aabbExtension + b2_aabbMultiplier * (displacement.x > 0 ? displacement.x : (-displacement.x));\r\n        const r_y = b2_aabbExtension + b2_aabbMultiplier * (displacement.y > 0 ? displacement.y : (-displacement.y));\r\n        proxy.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\r\n        proxy.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\r\n        proxy.aabb.upperBound.x = aabb.upperBound.x + r_x;\r\n        proxy.aabb.upperBound.y = aabb.upperBound.y + r_y;\r\n        this.InsertLeaf(proxy);\r\n        return true;\r\n    }\r\n    InsertLeaf(leaf) {\r\n        ++this.m_insertionCount;\r\n        if (this.m_root === null) {\r\n            this.m_root = leaf;\r\n            this.m_root.parent = null;\r\n            return;\r\n        }\r\n        // Find the best sibling for this node\r\n        const leafAABB = leaf.aabb;\r\n        ///const center: b2Vec2 = leafAABB.GetCenter();\r\n        let index = this.m_root;\r\n        let child1;\r\n        let child2;\r\n        while (!index.IsLeaf()) {\r\n            child1 = index.child1;\r\n            child2 = index.child2;\r\n            const area = index.aabb.GetPerimeter();\r\n            const combinedAABB = b2DynamicTree.s_combinedAABB;\r\n            combinedAABB.Combine2(index.aabb, leafAABB);\r\n            const combinedArea = combinedAABB.GetPerimeter();\r\n            // Cost of creating a new parent for this node and the new leaf\r\n            const cost = 2 * combinedArea;\r\n            // Minimum cost of pushing the leaf further down the tree\r\n            const inheritanceCost = 2 * (combinedArea - area);\r\n            // Cost of descending into child1\r\n            let cost1;\r\n            const aabb = b2DynamicTree.s_aabb;\r\n            let oldArea;\r\n            let newArea;\r\n            if (child1.IsLeaf()) {\r\n                aabb.Combine2(leafAABB, child1.aabb);\r\n                cost1 = aabb.GetPerimeter() + inheritanceCost;\r\n            }\r\n            else {\r\n                aabb.Combine2(leafAABB, child1.aabb);\r\n                oldArea = child1.aabb.GetPerimeter();\r\n                newArea = aabb.GetPerimeter();\r\n                cost1 = (newArea - oldArea) + inheritanceCost;\r\n            }\r\n            // Cost of descending into child2\r\n            let cost2;\r\n            if (child2.IsLeaf()) {\r\n                aabb.Combine2(leafAABB, child2.aabb);\r\n                cost2 = aabb.GetPerimeter() + inheritanceCost;\r\n            }\r\n            else {\r\n                aabb.Combine2(leafAABB, child2.aabb);\r\n                oldArea = child2.aabb.GetPerimeter();\r\n                newArea = aabb.GetPerimeter();\r\n                cost2 = newArea - oldArea + inheritanceCost;\r\n            }\r\n            // Descend according to the minimum cost.\r\n            if (cost < cost1 && cost < cost2) {\r\n                break;\r\n            }\r\n            // Descend\r\n            if (cost1 < cost2) {\r\n                index = child1;\r\n            }\r\n            else {\r\n                index = child2;\r\n            }\r\n        }\r\n        const sibling = index;\r\n        // Create a parent for the siblings.\r\n        const oldParent = sibling.parent;\r\n        const newParent = this.AllocateNode();\r\n        newParent.parent = oldParent;\r\n        newParent.userData = null;\r\n        newParent.aabb.Combine2(leafAABB, sibling.aabb);\r\n        newParent.height = sibling.height + 1;\r\n        if (oldParent) {\r\n            // The sibling was not the root.\r\n            if (oldParent.child1 === sibling) {\r\n                oldParent.child1 = newParent;\r\n            }\r\n            else {\r\n                oldParent.child2 = newParent;\r\n            }\r\n            newParent.child1 = sibling;\r\n            newParent.child2 = leaf;\r\n            sibling.parent = newParent;\r\n            leaf.parent = newParent;\r\n        }\r\n        else {\r\n            // The sibling was the root.\r\n            newParent.child1 = sibling;\r\n            newParent.child2 = leaf;\r\n            sibling.parent = newParent;\r\n            leaf.parent = newParent;\r\n            this.m_root = newParent;\r\n        }\r\n        // Walk back up the tree fixing heights and AABBs\r\n        index = leaf.parent;\r\n        while (index !== null) {\r\n            index = this.Balance(index);\r\n            child1 = index.child1;\r\n            child2 = index.child2;\r\n            ///b2Assert(child1 !== null);\r\n            ///b2Assert(child2 !== null);\r\n            index.height = 1 + b2Max(child1.height, child2.height);\r\n            index.aabb.Combine2(child1.aabb, child2.aabb);\r\n            index = index.parent;\r\n        }\r\n        // this.Validate();\r\n    }\r\n    RemoveLeaf(leaf) {\r\n        if (leaf === this.m_root) {\r\n            this.m_root = null;\r\n            return;\r\n        }\r\n        const parent = leaf.parent;\r\n        const grandParent = parent && parent.parent;\r\n        let sibling;\r\n        if (parent.child1 === leaf) {\r\n            sibling = parent.child2;\r\n        }\r\n        else {\r\n            sibling = parent.child1;\r\n        }\r\n        if (grandParent) {\r\n            // Destroy parent and connect sibling to grandParent.\r\n            if (grandParent.child1 === parent) {\r\n                grandParent.child1 = sibling;\r\n            }\r\n            else {\r\n                grandParent.child2 = sibling;\r\n            }\r\n            sibling.parent = grandParent;\r\n            this.FreeNode(parent);\r\n            // Adjust ancestor bounds.\r\n            let index = grandParent;\r\n            while (index) {\r\n                index = this.Balance(index);\r\n                const child1 = index.child1;\r\n                const child2 = index.child2;\r\n                index.aabb.Combine2(child1.aabb, child2.aabb);\r\n                index.height = 1 + b2Max(child1.height, child2.height);\r\n                index = index.parent;\r\n            }\r\n        }\r\n        else {\r\n            this.m_root = sibling;\r\n            sibling.parent = null;\r\n            this.FreeNode(parent);\r\n        }\r\n        // this.Validate();\r\n    }\r\n    Balance(A) {\r\n        ///b2Assert(A !== null);\r\n        if (A.IsLeaf() || A.height < 2) {\r\n            return A;\r\n        }\r\n        const B = verify(A.child1);\r\n        const C = verify(A.child2);\r\n        const balance = C.height - B.height;\r\n        // Rotate C up\r\n        if (balance > 1) {\r\n            const F = verify(C.child1);\r\n            const G = verify(C.child2);\r\n            // Swap A and C\r\n            C.child1 = A;\r\n            C.parent = A.parent;\r\n            A.parent = C;\r\n            // A's old parent should point to C\r\n            if (C.parent !== null) {\r\n                if (C.parent.child1 === A) {\r\n                    C.parent.child1 = C;\r\n                }\r\n                else {\r\n                    ///b2Assert(C.parent.child2 === A);\r\n                    C.parent.child2 = C;\r\n                }\r\n            }\r\n            else {\r\n                this.m_root = C;\r\n            }\r\n            // Rotate\r\n            if (F.height > G.height) {\r\n                C.child2 = F;\r\n                A.child2 = G;\r\n                G.parent = A;\r\n                A.aabb.Combine2(B.aabb, G.aabb);\r\n                C.aabb.Combine2(A.aabb, F.aabb);\r\n                A.height = 1 + b2Max(B.height, G.height);\r\n                C.height = 1 + b2Max(A.height, F.height);\r\n            }\r\n            else {\r\n                C.child2 = G;\r\n                A.child2 = F;\r\n                F.parent = A;\r\n                A.aabb.Combine2(B.aabb, F.aabb);\r\n                C.aabb.Combine2(A.aabb, G.aabb);\r\n                A.height = 1 + b2Max(B.height, F.height);\r\n                C.height = 1 + b2Max(A.height, G.height);\r\n            }\r\n            return C;\r\n        }\r\n        // Rotate B up\r\n        if (balance < -1) {\r\n            const D = verify(B.child1);\r\n            const E = verify(B.child2);\r\n            // Swap A and B\r\n            B.child1 = A;\r\n            B.parent = A.parent;\r\n            A.parent = B;\r\n            // A's old parent should point to B\r\n            if (B.parent !== null) {\r\n                if (B.parent.child1 === A) {\r\n                    B.parent.child1 = B;\r\n                }\r\n                else {\r\n                    ///b2Assert(B.parent.child2 === A);\r\n                    B.parent.child2 = B;\r\n                }\r\n            }\r\n            else {\r\n                this.m_root = B;\r\n            }\r\n            // Rotate\r\n            if (D.height > E.height) {\r\n                B.child2 = D;\r\n                A.child1 = E;\r\n                E.parent = A;\r\n                A.aabb.Combine2(C.aabb, E.aabb);\r\n                B.aabb.Combine2(A.aabb, D.aabb);\r\n                A.height = 1 + b2Max(C.height, E.height);\r\n                B.height = 1 + b2Max(A.height, D.height);\r\n            }\r\n            else {\r\n                B.child2 = E;\r\n                A.child1 = D;\r\n                D.parent = A;\r\n                A.aabb.Combine2(C.aabb, D.aabb);\r\n                B.aabb.Combine2(A.aabb, E.aabb);\r\n                A.height = 1 + b2Max(C.height, D.height);\r\n                B.height = 1 + b2Max(A.height, E.height);\r\n            }\r\n            return B;\r\n        }\r\n        return A;\r\n    }\r\n    GetHeight() {\r\n        if (this.m_root === null) {\r\n            return 0;\r\n        }\r\n        return this.m_root.height;\r\n    }\r\n    static GetAreaNode(node) {\r\n        if (node === null) {\r\n            return 0;\r\n        }\r\n        if (node.IsLeaf()) {\r\n            return 0;\r\n        }\r\n        let area = node.aabb.GetPerimeter();\r\n        area += b2DynamicTree.GetAreaNode(node.child1);\r\n        area += b2DynamicTree.GetAreaNode(node.child2);\r\n        return area;\r\n    }\r\n    GetAreaRatio() {\r\n        if (this.m_root === null) {\r\n            return 0;\r\n        }\r\n        const root = this.m_root;\r\n        const rootArea = root.aabb.GetPerimeter();\r\n        const totalArea = b2DynamicTree.GetAreaNode(this.m_root);\r\n        /*\r\n        float32 totalArea = 0.0;\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          const b2TreeNode* node = m_nodes + i;\r\n          if (node.height < 0) {\r\n            // Free node in pool\r\n            continue;\r\n          }\r\n    \r\n          totalArea += node.aabb.GetPerimeter();\r\n        }\r\n        */\r\n        return totalArea / rootArea;\r\n    }\r\n    ComputeHeightNode(node) {\r\n        if (node.IsLeaf()) {\r\n            return 0;\r\n        }\r\n        const height1 = this.ComputeHeightNode(node.child1);\r\n        const height2 = this.ComputeHeightNode(node.child2);\r\n        return 1 + b2Max(height1, height2);\r\n    }\r\n    ComputeHeight() {\r\n        const height = this.ComputeHeightNode(this.m_root);\r\n        return height;\r\n    }\r\n    ValidateStructure(index) {\r\n        if (index === null) {\r\n            return;\r\n        }\r\n        if (index === this.m_root) {\r\n            ///b2Assert(index.parent === null);\r\n        }\r\n        const node = index;\r\n        const child1 = node.child1;\r\n        const child2 = node.child2;\r\n        if (node.IsLeaf()) {\r\n            ///b2Assert(child1 === null);\r\n            ///b2Assert(child2 === null);\r\n            ///b2Assert(node.height === 0);\r\n            return;\r\n        }\r\n        ///b2Assert(child1.parent === index);\r\n        ///b2Assert(child2.parent === index);\r\n        this.ValidateStructure(child1);\r\n        this.ValidateStructure(child2);\r\n    }\r\n    ValidateMetrics(index) {\r\n        if (index === null) {\r\n            return;\r\n        }\r\n        const node = index;\r\n        const child1 = node.child1;\r\n        const child2 = node.child2;\r\n        if (node.IsLeaf()) {\r\n            ///b2Assert(child1 === null);\r\n            ///b2Assert(child2 === null);\r\n            ///b2Assert(node.height === 0);\r\n            return;\r\n        }\r\n        ///const height1: number = child1.height;\r\n        ///const height2: number = child2.height;\r\n        ///const height: number = 1 + b2Max(height1, height2);\r\n        ///b2Assert(node.height === height);\r\n        const aabb = b2DynamicTree.s_aabb;\r\n        aabb.Combine2(child1.aabb, child2.aabb);\r\n        ///b2Assert(aabb.lowerBound === node.aabb.lowerBound);\r\n        ///b2Assert(aabb.upperBound === node.aabb.upperBound);\r\n        this.ValidateMetrics(child1);\r\n        this.ValidateMetrics(child2);\r\n    }\r\n    Validate() {\r\n        this.ValidateStructure(this.m_root);\r\n        this.ValidateMetrics(this.m_root);\r\n        // let freeCount: number = 0;\r\n        let freeIndex = this.m_freeList;\r\n        while (freeIndex !== null) {\r\n            freeIndex = freeIndex.parent; // freeIndex = freeIndex.next;\r\n            // ++freeCount;\r\n        }\r\n        ///b2Assert(this.GetHeight() === this.ComputeHeight());\r\n    }\r\n    static GetMaxBalanceNode(node, maxBalance) {\r\n        if (node === null) {\r\n            return maxBalance;\r\n        }\r\n        if (node.height <= 1) {\r\n            return maxBalance;\r\n        }\r\n        ///b2Assert(!node.IsLeaf());\r\n        const child1 = node.child1;\r\n        const child2 = node.child2;\r\n        const balance = b2Abs(child2.height - child1.height);\r\n        return b2Max(maxBalance, balance);\r\n    }\r\n    GetMaxBalance() {\r\n        const maxBalance = b2DynamicTree.GetMaxBalanceNode(this.m_root, 0);\r\n        /*\r\n        int32 maxBalance = 0;\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          const b2TreeNode* node = m_nodes + i;\r\n          if (node.height <= 1) {\r\n            continue;\r\n          }\r\n    \r\n          b2Assert(!node.IsLeaf());\r\n    \r\n          int32 child1 = node.child1;\r\n          int32 child2 = node.child2;\r\n          int32 balance = b2Abs(m_nodes[child2].height - m_nodes[child1].height);\r\n          maxBalance = b2Max(maxBalance, balance);\r\n        }\r\n        */\r\n        return maxBalance;\r\n    }\r\n    RebuildBottomUp() {\r\n        /*\r\n        int32* nodes = (int32*)b2Alloc(m_nodeCount * sizeof(int32));\r\n        int32 count = 0;\r\n    \r\n        // Build array of leaves. Free the rest.\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          if (m_nodes[i].height < 0) {\r\n            // free node in pool\r\n            continue;\r\n          }\r\n    \r\n          if (m_nodes[i].IsLeaf()) {\r\n            m_nodes[i].parent = b2_nullNode;\r\n            nodes[count] = i;\r\n            ++count;\r\n          } else {\r\n            FreeNode(i);\r\n          }\r\n        }\r\n    \r\n        while (count > 1) {\r\n          float32 minCost = b2_maxFloat;\r\n          int32 iMin = -1, jMin = -1;\r\n          for (int32 i = 0; i < count; ++i) {\r\n            b2AABB aabbi = m_nodes[nodes[i]].aabb;\r\n    \r\n            for (int32 j = i + 1; j < count; ++j) {\r\n              b2AABB aabbj = m_nodes[nodes[j]].aabb;\r\n              b2AABB b;\r\n              b.Combine(aabbi, aabbj);\r\n              float32 cost = b.GetPerimeter();\r\n              if (cost < minCost) {\r\n                iMin = i;\r\n                jMin = j;\r\n                minCost = cost;\r\n              }\r\n            }\r\n          }\r\n    \r\n          int32 index1 = nodes[iMin];\r\n          int32 index2 = nodes[jMin];\r\n          b2TreeNode* child1 = m_nodes + index1;\r\n          b2TreeNode* child2 = m_nodes + index2;\r\n    \r\n          int32 parentIndex = AllocateNode();\r\n          b2TreeNode* parent = m_nodes + parentIndex;\r\n          parent.child1 = index1;\r\n          parent.child2 = index2;\r\n          parent.height = 1 + b2Max(child1.height, child2.height);\r\n          parent.aabb.Combine(child1.aabb, child2.aabb);\r\n          parent.parent = b2_nullNode;\r\n    \r\n          child1.parent = parentIndex;\r\n          child2.parent = parentIndex;\r\n    \r\n          nodes[jMin] = nodes[count-1];\r\n          nodes[iMin] = parentIndex;\r\n          --count;\r\n        }\r\n    \r\n        m_root = nodes[0];\r\n        b2Free(nodes);\r\n        */\r\n        this.Validate();\r\n    }\r\n    static ShiftOriginNode(node, newOrigin) {\r\n        if (node === null) {\r\n            return;\r\n        }\r\n        if (node.height <= 1) {\r\n            return;\r\n        }\r\n        ///b2Assert(!node.IsLeaf());\r\n        const child1 = node.child1;\r\n        const child2 = node.child2;\r\n        b2DynamicTree.ShiftOriginNode(child1, newOrigin);\r\n        b2DynamicTree.ShiftOriginNode(child2, newOrigin);\r\n        node.aabb.lowerBound.SelfSub(newOrigin);\r\n        node.aabb.upperBound.SelfSub(newOrigin);\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        b2DynamicTree.ShiftOriginNode(this.m_root, newOrigin);\r\n        /*\r\n        // Build array of leaves. Free the rest.\r\n        for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n          m_nodes[i].aabb.lowerBound -= newOrigin;\r\n          m_nodes[i].aabb.upperBound -= newOrigin;\r\n        }\r\n        */\r\n    }\r\n}\r\nb2DynamicTree.s_stack = new b2GrowableStack(256);\r\nb2DynamicTree.s_r = new b2Vec2();\r\nb2DynamicTree.s_v = new b2Vec2();\r\nb2DynamicTree.s_abs_v = new b2Vec2();\r\nb2DynamicTree.s_segmentAABB = new b2AABB();\r\nb2DynamicTree.s_subInput = new b2RayCastInput();\r\nb2DynamicTree.s_combinedAABB = new b2AABB();\r\nb2DynamicTree.s_aabb = new b2AABB();\r\nb2DynamicTree.s_node_id = 0;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJEeW5hbWljVHJlZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbGxpc2lvbi9iMkR5bmFtaWNUcmVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDM0UsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsTUFBTSxFQUFFLGNBQWMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxRSxTQUFTLE1BQU0sQ0FBSSxLQUFlO0lBQ2hDLElBQUksS0FBSyxLQUFLLElBQUksRUFBRTtRQUFFLE1BQU0sSUFBSSxLQUFLLEVBQUUsQ0FBQztLQUFFO0lBQzFDLE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUVELGdGQUFnRjtBQUNoRixNQUFNLE9BQU8sVUFBVTtJQVNyQixZQUFZLEtBQWEsQ0FBQztRQVJuQixTQUFJLEdBQVcsQ0FBQyxDQUFDO1FBQ2pCLFNBQUksR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQzVCLGFBQVEsR0FBUSxJQUFJLENBQUM7UUFDckIsV0FBTSxHQUFzQixJQUFJLENBQUMsQ0FBQyxVQUFVO1FBQzVDLFdBQU0sR0FBc0IsSUFBSSxDQUFDO1FBQ2pDLFdBQU0sR0FBc0IsSUFBSSxDQUFDO1FBQ2pDLFdBQU0sR0FBVyxDQUFDLENBQUMsQ0FBQywyQkFBMkI7UUFHcEQsSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVNLE1BQU07UUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDO0lBQzlC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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2TestOverlapAABB } from \"./b2Collision\";\r\nimport { b2DynamicTree } from \"./b2DynamicTree\";\r\nexport class b2Pair {\r\n    constructor() {\r\n        this.proxyA = null;\r\n        this.proxyB = null;\r\n    }\r\n}\r\n/// The broad-phase is used for computing pairs and performing volume queries and ray casts.\r\n/// This broad-phase does not persist pairs. Instead, this reports potentially new pairs.\r\n/// It is up to the client to consume the new pairs and to track subsequent overlap.\r\nexport class b2BroadPhase {\r\n    constructor() {\r\n        this.m_tree = new b2DynamicTree();\r\n        this.m_proxyCount = 0;\r\n        // public m_moveCapacity: number = 16;\r\n        this.m_moveCount = 0;\r\n        this.m_moveBuffer = [];\r\n        // public m_pairCapacity: number = 16;\r\n        this.m_pairCount = 0;\r\n        this.m_pairBuffer = [];\r\n    }\r\n    // public m_queryProxyId: number = 0;\r\n    /// Create a proxy with an initial AABB. Pairs are not reported until\r\n    /// UpdatePairs is called.\r\n    CreateProxy(aabb, userData) {\r\n        const proxy = this.m_tree.CreateProxy(aabb, userData);\r\n        ++this.m_proxyCount;\r\n        this.BufferMove(proxy);\r\n        return proxy;\r\n    }\r\n    /// Destroy a proxy. It is up to the client to remove any pairs.\r\n    DestroyProxy(proxy) {\r\n        this.UnBufferMove(proxy);\r\n        --this.m_proxyCount;\r\n        this.m_tree.DestroyProxy(proxy);\r\n    }\r\n    /// Call MoveProxy as many times as you like, then when you are done\r\n    /// call UpdatePairs to finalized the proxy pairs (for your time step).\r\n    MoveProxy(proxy, aabb, displacement) {\r\n        const buffer = this.m_tree.MoveProxy(proxy, aabb, displacement);\r\n        if (buffer) {\r\n            this.BufferMove(proxy);\r\n        }\r\n    }\r\n    /// Call to trigger a re-processing of it's pairs on the next call to UpdatePairs.\r\n    TouchProxy(proxy) {\r\n        this.BufferMove(proxy);\r\n    }\r\n    /// Get the fat AABB for a proxy.\r\n    GetFatAABB(proxy) {\r\n        return this.m_tree.GetFatAABB(proxy);\r\n    }\r\n    /// Get user data from a proxy. Returns NULL if the id is invalid.\r\n    GetUserData(proxy) {\r\n        return this.m_tree.GetUserData(proxy);\r\n    }\r\n    /// Test overlap of fat AABBs.\r\n    TestOverlap(proxyA, proxyB) {\r\n        const aabbA = this.m_tree.GetFatAABB(proxyA);\r\n        const aabbB = this.m_tree.GetFatAABB(proxyB);\r\n        return b2TestOverlapAABB(aabbA, aabbB);\r\n    }\r\n    /// Get the number of proxies.\r\n    GetProxyCount() {\r\n        return this.m_proxyCount;\r\n    }\r\n    /// Update the pairs. This results in pair callbacks. This can only add pairs.\r\n    UpdatePairs(contactManager) {\r\n        // Reset pair buffer\r\n        this.m_pairCount = 0;\r\n        // Perform tree queries for all moving proxies.\r\n        for (let i = 0; i < this.m_moveCount; ++i) {\r\n            const queryProxy = this.m_moveBuffer[i];\r\n            if (queryProxy === null) {\r\n                continue;\r\n            }\r\n            // This is called from box2d.b2DynamicTree::Query when we are gathering pairs.\r\n            // boolean b2BroadPhase::QueryCallback(int32 proxyId);\r\n            const QueryCallback = (proxy) => {\r\n                // A proxy cannot form a pair with itself.\r\n                if (proxy.m_id === queryProxy.m_id) {\r\n                    return true;\r\n                }\r\n                // Grow the pair buffer as needed.\r\n                if (this.m_pairCount === this.m_pairBuffer.length) {\r\n                    this.m_pairBuffer[this.m_pairCount] = new b2Pair();\r\n                }\r\n                const pair = this.m_pairBuffer[this.m_pairCount];\r\n                // pair.proxyA = proxy < queryProxy ? proxy : queryProxy;\r\n                // pair.proxyB = proxy >= queryProxy ? proxy : queryProxy;\r\n                if (proxy.m_id < queryProxy.m_id) {\r\n                    pair.proxyA = proxy;\r\n                    pair.proxyB = queryProxy;\r\n                }\r\n                else {\r\n                    pair.proxyA = queryProxy;\r\n                    pair.proxyB = proxy;\r\n                }\r\n                ++this.m_pairCount;\r\n                return true;\r\n            };\r\n            // We have to query the tree with the fat AABB so that\r\n            // we don't fail to create a pair that may touch later.\r\n            const fatAABB = this.m_tree.GetFatAABB(queryProxy);\r\n            // Query tree, create pairs and add them pair buffer.\r\n            this.m_tree.Query(QueryCallback, fatAABB);\r\n        }\r\n        // Reset move buffer\r\n        this.m_moveCount = 0;\r\n        // Sort the pair buffer to expose duplicates.\r\n        this.m_pairBuffer.length = this.m_pairCount;\r\n        this.m_pairBuffer.sort(b2PairLessThan);\r\n        // Send the pairs back to the client.\r\n        let i = 0;\r\n        while (i < this.m_pairCount) {\r\n            const primaryPair = this.m_pairBuffer[i];\r\n            const userDataA = this.m_tree.GetUserData(primaryPair.proxyA);\r\n            const userDataB = this.m_tree.GetUserData(primaryPair.proxyB);\r\n            contactManager.AddPair(userDataA, userDataB);\r\n            ++i;\r\n            // Skip any duplicate pairs.\r\n            while (i < this.m_pairCount) {\r\n                const pair = this.m_pairBuffer[i];\r\n                if (pair.proxyA.m_id !== primaryPair.proxyA.m_id || pair.proxyB.m_id !== primaryPair.proxyB.m_id) {\r\n                    break;\r\n                }\r\n                ++i;\r\n            }\r\n        }\r\n        // Try to keep the tree balanced.\r\n        // this.m_tree.Rebalance(4);\r\n    }\r\n    /// Query an AABB for overlapping proxies. The callback class\r\n    /// is called for each proxy that overlaps the supplied AABB.\r\n    Query(callback, aabb) {\r\n        this.m_tree.Query(callback, aabb);\r\n    }\r\n    /// Ray-cast against the proxies in the tree. This relies on the callback\r\n    /// to perform a exact ray-cast in the case were the proxy contains a shape.\r\n    /// The callback also performs the any collision filtering. This has performance\r\n    /// roughly equal to k * log(n), where k is the number of collisions and n is the\r\n    /// number of proxies in the tree.\r\n    /// @param input the ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\r\n    /// @param callback a callback class that is called for each proxy that is hit by the ray.\r\n    RayCast(callback, input) {\r\n        this.m_tree.RayCast(callback, input);\r\n    }\r\n    /// Get the height of the embedded tree.\r\n    GetTreeHeight() {\r\n        return this.m_tree.GetHeight();\r\n    }\r\n    /// Get the balance of the embedded tree.\r\n    GetTreeBalance() {\r\n        return this.m_tree.GetMaxBalance();\r\n    }\r\n    /// Get the quality metric of the embedded tree.\r\n    GetTreeQuality() {\r\n        return this.m_tree.GetAreaRatio();\r\n    }\r\n    /// Shift the world origin. Useful for large worlds.\r\n    /// The shift formula is: position -= newOrigin\r\n    /// @param newOrigin the new origin with respect to the old origin\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_tree.ShiftOrigin(newOrigin);\r\n    }\r\n    BufferMove(proxy) {\r\n        this.m_moveBuffer[this.m_moveCount] = proxy;\r\n        ++this.m_moveCount;\r\n    }\r\n    UnBufferMove(proxy) {\r\n        const i = this.m_moveBuffer.indexOf(proxy);\r\n        this.m_moveBuffer[i] = null;\r\n    }\r\n}\r\n/// This is used to sort pairs.\r\nexport function b2PairLessThan(pair1, pair2) {\r\n    if (pair1.proxyA.m_id === pair2.proxyA.m_id) {\r\n        return pair1.proxyB.m_id - pair2.proxyB.m_id;\r\n    }\r\n    return pair1.proxyA.m_id - pair2.proxyA.m_id;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJCcm9hZFBoYXNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvQ29sbGlzaW9uL2IyQnJvYWRQaGFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUdGLE9BQU8sRUFBMEIsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUUsT0FBTyxFQUFjLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBSTVELE1BQU0sT0FBTyxNQUFNO0lBQW5CO1FBQ1MsV0FBTSxHQUFvQixJQUFJLENBQUM7UUFDL0IsV0FBTSxHQUFvQixJQUFJLENBQUM7SUFDeEMsQ0FBQztDQUFBO0FBRUQsNEZBQTRGO0FBQzVGLHlGQUF5RjtBQUN6RixvRkFBb0Y7QUFDcEYsTUFBTSxPQUFPLFlBQVk7SUFBekI7UUFDUyxXQUFNLEdBQWtCLElBQUksYUFBYSxFQUFFLENBQUM7UUFDNUMsaUJBQVksR0FBVyxDQUFDLENBQUM7UUFDaEMsc0NBQXNDO1FBQy9CLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ3hCLGlCQUFZLEdBQWlCLEVBQUUsQ0FBQztRQUN2QyxzQ0FBc0M7UUFDL0IsZ0JBQVcsR0FBVyxDQUFDLENBQUM7UUFDeEIsaUJBQVksR0FBYSxFQUFFLENBQUM7SUFzTHJDLENBQUM7SUFyTEMscUNBQXFDO0lBRXJDLHFFQUFxRTtJQUNyRSwwQkFBMEI7SUFDbkIsV0FBVyxDQUFDLElBQVksRUFBRSxRQUFhO1FBQzVDLE1BQU0sS0FBSyxHQUFlLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNsRSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDcEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2QixPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFRCxnRUFBZ0U7SUFDekQsWUFBWSxDQUFD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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxPolygonVertices } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Max, b2Vec2, b2Rot, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2Distance, b2DistanceInput, b2DistanceOutput, b2DistanceProxy, b2SimplexCache } from \"./b2Distance\";\r\nexport let b2_toiTime = 0;\r\nexport let b2_toiMaxTime = 0;\r\nexport let b2_toiCalls = 0;\r\nexport let b2_toiIters = 0;\r\nexport let b2_toiMaxIters = 0;\r\nexport let b2_toiRootIters = 0;\r\nexport let b2_toiMaxRootIters = 0;\r\nexport function b2_toi_reset() {\r\n    b2_toiTime = 0;\r\n    b2_toiMaxTime = 0;\r\n    b2_toiCalls = 0;\r\n    b2_toiIters = 0;\r\n    b2_toiMaxIters = 0;\r\n    b2_toiRootIters = 0;\r\n    b2_toiMaxRootIters = 0;\r\n}\r\nconst b2TimeOfImpact_s_xfA = new b2Transform();\r\nconst b2TimeOfImpact_s_xfB = new b2Transform();\r\nconst b2TimeOfImpact_s_pointA = new b2Vec2();\r\nconst b2TimeOfImpact_s_pointB = new b2Vec2();\r\nconst b2TimeOfImpact_s_normal = new b2Vec2();\r\nconst b2TimeOfImpact_s_axisA = new b2Vec2();\r\nconst b2TimeOfImpact_s_axisB = new b2Vec2();\r\n/// Input parameters for b2TimeOfImpact\r\nexport class b2TOIInput {\r\n    constructor() {\r\n        this.proxyA = new b2DistanceProxy();\r\n        this.proxyB = new b2DistanceProxy();\r\n        this.sweepA = new b2Sweep();\r\n        this.sweepB = new b2Sweep();\r\n        this.tMax = 0; // defines sweep interval [0, tMax]\r\n    }\r\n}\r\nexport var b2TOIOutputState;\r\n(function (b2TOIOutputState) {\r\n    b2TOIOutputState[b2TOIOutputState[\"e_unknown\"] = 0] = \"e_unknown\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_failed\"] = 1] = \"e_failed\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_overlapped\"] = 2] = \"e_overlapped\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_touching\"] = 3] = \"e_touching\";\r\n    b2TOIOutputState[b2TOIOutputState[\"e_separated\"] = 4] = \"e_separated\";\r\n})(b2TOIOutputState || (b2TOIOutputState = {}));\r\nexport class b2TOIOutput {\r\n    constructor() {\r\n        this.state = b2TOIOutputState.e_unknown;\r\n        this.t = 0;\r\n    }\r\n}\r\nexport var b2SeparationFunctionType;\r\n(function (b2SeparationFunctionType) {\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_points\"] = 0] = \"e_points\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_faceA\"] = 1] = \"e_faceA\";\r\n    b2SeparationFunctionType[b2SeparationFunctionType[\"e_faceB\"] = 2] = \"e_faceB\";\r\n})(b2SeparationFunctionType || (b2SeparationFunctionType = {}));\r\nexport class b2SeparationFunction {\r\n    constructor() {\r\n        this.m_sweepA = new b2Sweep();\r\n        this.m_sweepB = new b2Sweep();\r\n        this.m_type = b2SeparationFunctionType.e_unknown;\r\n        this.m_localPoint = new b2Vec2();\r\n        this.m_axis = new b2Vec2();\r\n    }\r\n    Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1) {\r\n        this.m_proxyA = proxyA;\r\n        this.m_proxyB = proxyB;\r\n        const count = cache.count;\r\n        ///b2Assert(0 < count && count < 3);\r\n        this.m_sweepA.Copy(sweepA);\r\n        this.m_sweepB.Copy(sweepB);\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t1);\r\n        this.m_sweepB.GetTransform(xfB, t1);\r\n        if (count === 1) {\r\n            this.m_type = b2SeparationFunctionType.e_points;\r\n            const localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n            const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n            b2Vec2.SubVV(pointB, pointA, this.m_axis);\r\n            const s = this.m_axis.Normalize();\r\n            // #if B2_ENABLE_PARTICLE\r\n            this.m_localPoint.SetZero();\r\n            // #endif\r\n            return s;\r\n        }\r\n        else if (cache.indexA[0] === cache.indexA[1]) {\r\n            // Two points on B and one on A.\r\n            this.m_type = b2SeparationFunctionType.e_faceB;\r\n            const localPointB1 = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const localPointB2 = this.m_proxyB.GetVertex(cache.indexB[1]);\r\n            b2Vec2.CrossVOne(b2Vec2.SubVV(localPointB2, localPointB1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\r\n            const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n            b2Vec2.MidVV(localPointB1, localPointB2, this.m_localPoint);\r\n            const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n            const localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n            let s = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n            if (s < 0) {\r\n                this.m_axis.SelfNeg();\r\n                s = -s;\r\n            }\r\n            return s;\r\n        }\r\n        else {\r\n            // Two points on A and one or two points on B.\r\n            this.m_type = b2SeparationFunctionType.e_faceA;\r\n            const localPointA1 = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n            const localPointA2 = this.m_proxyA.GetVertex(cache.indexA[1]);\r\n            b2Vec2.CrossVOne(b2Vec2.SubVV(localPointA2, localPointA1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\r\n            const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n            b2Vec2.MidVV(localPointA1, localPointA2, this.m_localPoint);\r\n            const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n            const localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n            const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n            let s = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n            if (s < 0) {\r\n                this.m_axis.SelfNeg();\r\n                s = -s;\r\n            }\r\n            return s;\r\n        }\r\n    }\r\n    FindMinSeparation(indexA, indexB, t) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t);\r\n        this.m_sweepB.GetTransform(xfB, t);\r\n        switch (this.m_type) {\r\n            case b2SeparationFunctionType.e_points: {\r\n                const axisA = b2Rot.MulTRV(xfA.q, this.m_axis, b2TimeOfImpact_s_axisA);\r\n                const axisB = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(this.m_axis, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\r\n                indexA[0] = this.m_proxyA.GetSupport(axisA);\r\n                indexB[0] = this.m_proxyB.GetSupport(axisB);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA[0]);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB[0]);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceA: {\r\n                const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n                const axisB = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\r\n                indexA[0] = -1;\r\n                indexB[0] = this.m_proxyB.GetSupport(axisB);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB[0]);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceB: {\r\n                const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n                const axisA = b2Rot.MulTRV(xfA.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisA);\r\n                indexB[0] = -1;\r\n                indexA[0] = this.m_proxyA.GetSupport(axisA);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA[0]);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            default:\r\n                ///b2Assert(false);\r\n                indexA[0] = -1;\r\n                indexB[0] = -1;\r\n                return 0;\r\n        }\r\n    }\r\n    Evaluate(indexA, indexB, t) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        this.m_sweepA.GetTransform(xfA, t);\r\n        this.m_sweepB.GetTransform(xfB, t);\r\n        switch (this.m_type) {\r\n            case b2SeparationFunctionType.e_points: {\r\n                const localPointA = this.m_proxyA.GetVertex(indexA);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceA: {\r\n                const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n                const localPointB = this.m_proxyB.GetVertex(indexB);\r\n                const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            case b2SeparationFunctionType.e_faceB: {\r\n                const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n                const localPointA = this.m_proxyA.GetVertex(indexA);\r\n                const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n                return separation;\r\n            }\r\n            default:\r\n                ///b2Assert(false);\r\n                return 0;\r\n        }\r\n    }\r\n}\r\nconst b2TimeOfImpact_s_timer = new b2Timer();\r\nconst b2TimeOfImpact_s_cache = new b2SimplexCache();\r\nconst b2TimeOfImpact_s_distanceInput = new b2DistanceInput();\r\nconst b2TimeOfImpact_s_distanceOutput = new b2DistanceOutput();\r\nconst b2TimeOfImpact_s_fcn = new b2SeparationFunction();\r\nconst b2TimeOfImpact_s_indexA = [0];\r\nconst b2TimeOfImpact_s_indexB = [0];\r\nconst b2TimeOfImpact_s_sweepA = new b2Sweep();\r\nconst b2TimeOfImpact_s_sweepB = new b2Sweep();\r\nexport function b2TimeOfImpact(output, input) {\r\n    const timer = b2TimeOfImpact_s_timer.Reset();\r\n    ++b2_toiCalls;\r\n    output.state = b2TOIOutputState.e_unknown;\r\n    output.t = input.tMax;\r\n    const proxyA = input.proxyA;\r\n    const proxyB = input.proxyB;\r\n    const sweepA = b2TimeOfImpact_s_sweepA.Copy(input.sweepA);\r\n    const sweepB = b2TimeOfImpact_s_sweepB.Copy(input.sweepB);\r\n    // Large rotations can make the root finder fail, so we normalize the\r\n    // sweep angles.\r\n    sweepA.Normalize();\r\n    sweepB.Normalize();\r\n    const tMax = input.tMax;\r\n    const totalRadius = proxyA.m_radius + proxyB.m_radius;\r\n    const target = b2Max(b2_linearSlop, totalRadius - 3 * b2_linearSlop);\r\n    const tolerance = 0.25 * b2_linearSlop;\r\n    ///b2Assert(target > tolerance);\r\n    let t1 = 0;\r\n    const k_maxIterations = 20; // TODO_ERIN b2Settings\r\n    let iter = 0;\r\n    // Prepare input for distance query.\r\n    const cache = b2TimeOfImpact_s_cache;\r\n    cache.count = 0;\r\n    const distanceInput = b2TimeOfImpact_s_distanceInput;\r\n    distanceInput.proxyA = input.proxyA;\r\n    distanceInput.proxyB = input.proxyB;\r\n    distanceInput.useRadii = false;\r\n    // The outer loop progressively attempts to compute new separating axes.\r\n    // This loop terminates when an axis is repeated (no progress is made).\r\n    for (;;) {\r\n        const xfA = b2TimeOfImpact_s_xfA;\r\n        const xfB = b2TimeOfImpact_s_xfB;\r\n        sweepA.GetTransform(xfA, t1);\r\n        sweepB.GetTransform(xfB, t1);\r\n        // Get the distance between shapes. We can also use the results\r\n        // to get a separating axis.\r\n        distanceInput.transformA.Copy(xfA);\r\n        distanceInput.transformB.Copy(xfB);\r\n        const distanceOutput = b2TimeOfImpact_s_distanceOutput;\r\n        b2Distance(distanceOutput, cache, distanceInput);\r\n        // If the shapes are overlapped, we give up on continuous collision.\r\n        if (distanceOutput.distance <= 0) {\r\n            // Failure!\r\n            output.state = b2TOIOutputState.e_overlapped;\r\n            output.t = 0;\r\n            break;\r\n        }\r\n        if (distanceOutput.distance < target + tolerance) {\r\n            // Victory!\r\n            output.state = b2TOIOutputState.e_touching;\r\n            output.t = t1;\r\n            break;\r\n        }\r\n        // Initialize the separating axis.\r\n        const fcn = b2TimeOfImpact_s_fcn;\r\n        fcn.Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\r\n        /*\r\n        #if 0\r\n            // Dump the curve seen by the root finder {\r\n              const int32 N = 100;\r\n              float32 dx = 1.0f / N;\r\n              float32 xs[N+1];\r\n              float32 fs[N+1];\r\n        \r\n              float32 x = 0.0f;\r\n        \r\n              for (int32 i = 0; i <= N; ++i) {\r\n                sweepA.GetTransform(&xfA, x);\r\n                sweepB.GetTransform(&xfB, x);\r\n                float32 f = fcn.Evaluate(xfA, xfB) - target;\r\n        \r\n                printf(\"%g %g\\n\", x, f);\r\n        \r\n                xs[i] = x;\r\n                fs[i] = f;\r\n        \r\n                x += dx;\r\n              }\r\n            }\r\n        #endif\r\n        */\r\n        // Compute the TOI on the separating axis. We do this by successively\r\n        // resolving the deepest point. This loop is bounded by the number of vertices.\r\n        let done = false;\r\n        let t2 = tMax;\r\n        let pushBackIter = 0;\r\n        for (;;) {\r\n            // Find the deepest point at t2. Store the witness point indices.\r\n            const indexA = b2TimeOfImpact_s_indexA;\r\n            const indexB = b2TimeOfImpact_s_indexB;\r\n            let s2 = fcn.FindMinSeparation(indexA, indexB, t2);\r\n            // Is the final configuration separated?\r\n            if (s2 > (target + tolerance)) {\r\n                // Victory!\r\n                output.state = b2TOIOutputState.e_separated;\r\n                output.t = tMax;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Has the separation reached tolerance?\r\n            if (s2 > (target - tolerance)) {\r\n                // Advance the sweeps\r\n                t1 = t2;\r\n                break;\r\n            }\r\n            // Compute the initial separation of the witness points.\r\n            let s1 = fcn.Evaluate(indexA[0], indexB[0], t1);\r\n            // Check for initial overlap. This might happen if the root finder\r\n            // runs out of iterations.\r\n            if (s1 < (target - tolerance)) {\r\n                output.state = b2TOIOutputState.e_failed;\r\n                output.t = t1;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Check for touching\r\n            if (s1 <= (target + tolerance)) {\r\n                // Victory! t1 should hold the TOI (could be 0.0).\r\n                output.state = b2TOIOutputState.e_touching;\r\n                output.t = t1;\r\n                done = true;\r\n                break;\r\n            }\r\n            // Compute 1D root of: f(x) - target = 0\r\n            let rootIterCount = 0;\r\n            let a1 = t1;\r\n            let a2 = t2;\r\n            for (;;) {\r\n                // Use a mix of the secant rule and bisection.\r\n                let t = 0;\r\n                if (rootIterCount & 1) {\r\n                    // Secant rule to improve convergence.\r\n                    t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\r\n                }\r\n                else {\r\n                    // Bisection to guarantee progress.\r\n                    t = 0.5 * (a1 + a2);\r\n                }\r\n                ++rootIterCount;\r\n                ++b2_toiRootIters;\r\n                const s = fcn.Evaluate(indexA[0], indexB[0], t);\r\n                if (b2Abs(s - target) < tolerance) {\r\n                    // t2 holds a tentative value for t1\r\n                    t2 = t;\r\n                    break;\r\n                }\r\n                // Ensure we continue to bracket the root.\r\n                if (s > target) {\r\n                    a1 = t;\r\n                    s1 = s;\r\n                }\r\n                else {\r\n                    a2 = t;\r\n                    s2 = s;\r\n                }\r\n                if (rootIterCount === 50) {\r\n                    break;\r\n                }\r\n            }\r\n            b2_toiMaxRootIters = b2Max(b2_toiMaxRootIters, rootIterCount);\r\n            ++pushBackIter;\r\n            if (pushBackIter === b2_maxPolygonVertices) {\r\n                break;\r\n            }\r\n        }\r\n        ++iter;\r\n        ++b2_toiIters;\r\n        if (done) {\r\n            break;\r\n        }\r\n        if (iter === k_maxIterations) {\r\n            // Root finder got stuck. Semi-victory.\r\n            output.state = b2TOIOutputState.e_failed;\r\n            output.t = t1;\r\n            break;\r\n        }\r\n    }\r\n    b2_toiMaxIters = b2Max(b2_toiMaxIters, iter);\r\n    const time = timer.GetMilliseconds();\r\n    b2_toiMaxTime = b2Max(b2_toiMaxTime, time);\r\n    b2_toiTime += time;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","import { b2_maxFloat, b2_epsilon } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ManifoldType } from \"./b2Collision\";\r\nconst b2CollideCircles_s_pA = new b2Vec2();\r\nconst b2CollideCircles_s_pB = new b2Vec2();\r\nexport function b2CollideCircles(manifold, circleA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    const pA = b2Transform.MulXV(xfA, circleA.m_p, b2CollideCircles_s_pA);\r\n    const pB = b2Transform.MulXV(xfB, circleB.m_p, b2CollideCircles_s_pB);\r\n    const distSqr = b2Vec2.DistanceSquaredVV(pA, pB);\r\n    const radius = circleA.m_radius + circleB.m_radius;\r\n    if (distSqr > radius * radius) {\r\n        return;\r\n    }\r\n    manifold.type = b2ManifoldType.e_circles;\r\n    manifold.localPoint.Copy(circleA.m_p);\r\n    manifold.localNormal.SetZero();\r\n    manifold.pointCount = 1;\r\n    manifold.points[0].localPoint.Copy(circleB.m_p);\r\n    manifold.points[0].id.key = 0;\r\n}\r\nconst b2CollidePolygonAndCircle_s_c = new b2Vec2();\r\nconst b2CollidePolygonAndCircle_s_cLocal = new b2Vec2();\r\nconst b2CollidePolygonAndCircle_s_faceCenter = new b2Vec2();\r\nexport function b2CollidePolygonAndCircle(manifold, polygonA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    // Compute circle position in the frame of the polygon.\r\n    const c = b2Transform.MulXV(xfB, circleB.m_p, b2CollidePolygonAndCircle_s_c);\r\n    const cLocal = b2Transform.MulTXV(xfA, c, b2CollidePolygonAndCircle_s_cLocal);\r\n    // Find the min separating edge.\r\n    let normalIndex = 0;\r\n    let separation = (-b2_maxFloat);\r\n    const radius = polygonA.m_radius + circleB.m_radius;\r\n    const vertexCount = polygonA.m_count;\r\n    const vertices = polygonA.m_vertices;\r\n    const normals = polygonA.m_normals;\r\n    for (let i = 0; i < vertexCount; ++i) {\r\n        const s = b2Vec2.DotVV(normals[i], b2Vec2.SubVV(cLocal, vertices[i], b2Vec2.s_t0));\r\n        if (s > radius) {\r\n            // Early out.\r\n            return;\r\n        }\r\n        if (s > separation) {\r\n            separation = s;\r\n            normalIndex = i;\r\n        }\r\n    }\r\n    // Vertices that subtend the incident face.\r\n    const vertIndex1 = normalIndex;\r\n    const vertIndex2 = (vertIndex1 + 1) % vertexCount;\r\n    const v1 = vertices[vertIndex1];\r\n    const v2 = vertices[vertIndex2];\r\n    // If the center is inside the polygon ...\r\n    if (separation < b2_epsilon) {\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        manifold.localNormal.Copy(normals[normalIndex]);\r\n        b2Vec2.MidVV(v1, v2, manifold.localPoint);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n        return;\r\n    }\r\n    // Compute barycentric coordinates\r\n    const u1 = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v1, b2Vec2.s_t0), b2Vec2.SubVV(v2, v1, b2Vec2.s_t1));\r\n    const u2 = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v2, b2Vec2.s_t0), b2Vec2.SubVV(v1, v2, b2Vec2.s_t1));\r\n    if (u1 <= 0) {\r\n        if (b2Vec2.DistanceSquaredVV(cLocal, v1) > radius * radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        b2Vec2.SubVV(cLocal, v1, manifold.localNormal).SelfNormalize();\r\n        manifold.localPoint.Copy(v1);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n    else if (u2 <= 0) {\r\n        if (b2Vec2.DistanceSquaredVV(cLocal, v2) > radius * radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        b2Vec2.SubVV(cLocal, v2, manifold.localNormal).SelfNormalize();\r\n        manifold.localPoint.Copy(v2);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n    else {\r\n        const faceCenter = b2Vec2.MidVV(v1, v2, b2CollidePolygonAndCircle_s_faceCenter);\r\n        separation = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, faceCenter, b2Vec2.s_t1), normals[vertIndex1]);\r\n        if (separation > radius) {\r\n            return;\r\n        }\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        manifold.localNormal.Copy(normals[vertIndex1]).SelfNormalize();\r\n        manifold.localPoint.Copy(faceCenter);\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        manifold.points[0].id.key = 0;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb2xsaWRlQ2lyY2xlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvQ29sbGlzaW9uL2IyQ29sbGlkZUNpcmNsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdkQsT0FBTyxFQUFjLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzRCxNQUFNLHFCQUFxQixHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7QUFDbkQsTUFBTSxxQkFBcUIsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO0FBQ25ELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxRQUFvQixFQUFFLE9BQXNCLEVBQUUsR0FBZ0IsRUFBRSxPQUFzQixFQUFFLEdBQWdCO0lBQ3ZJLFFBQVEsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBRXhCLE1BQU0sRUFBRSxHQUFXLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHLEVBQUUscUJBQXFCLENBQUMsQ0FBQztJQUM5RSxNQUFNLEVBQUUsR0FBVyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsR0FBRyxFQUFFLHFCQUFxQixDQUFDLENBQUM7SUFFOUUsTUFBTSxPQUFPLEdBQVcsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN6RCxNQUFNLE1BQU0sR0FBVyxPQUFPLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDM0QsSUFBSSxPQUFPLEdBQUcsTUFBTSxHQUFHLE1BQU0sRUFBRTtRQUM3QixPQUFPO0tBQ1I7SUFFRCxRQUFRLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQyxTQUFTLENBQUM7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","import { b2_maxFloat, b2_maxManifoldPoints } from \"../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ContactFeatureType } from \"./b2Collision\";\r\nimport { b2ManifoldType, b2ClipVertex, b2ClipSegmentToLine } from \"./b2Collision\";\r\nconst b2EdgeSeparation_s_normal1World = new b2Vec2();\r\nconst b2EdgeSeparation_s_normal1 = new b2Vec2();\r\nconst b2EdgeSeparation_s_v1 = new b2Vec2();\r\nconst b2EdgeSeparation_s_v2 = new b2Vec2();\r\nfunction b2EdgeSeparation(poly1, xf1, edge1, poly2, xf2) {\r\n    ///const count1: number = poly1.m_count;\r\n    const vertices1 = poly1.m_vertices;\r\n    const normals1 = poly1.m_normals;\r\n    const count2 = poly2.m_count;\r\n    const vertices2 = poly2.m_vertices;\r\n    ///b2Assert(0 <= edge1 && edge1 < count1);\r\n    // Convert normal from poly1's frame into poly2's frame.\r\n    const normal1World = b2Rot.MulRV(xf1.q, normals1[edge1], b2EdgeSeparation_s_normal1World);\r\n    const normal1 = b2Rot.MulTRV(xf2.q, normal1World, b2EdgeSeparation_s_normal1);\r\n    // Find support vertex on poly2 for -normal.\r\n    let index = 0;\r\n    let minDot = b2_maxFloat;\r\n    for (let i = 0; i < count2; ++i) {\r\n        const dot = b2Vec2.DotVV(vertices2[i], normal1);\r\n        if (dot < minDot) {\r\n            minDot = dot;\r\n            index = i;\r\n        }\r\n    }\r\n    const v1 = b2Transform.MulXV(xf1, vertices1[edge1], b2EdgeSeparation_s_v1);\r\n    const v2 = b2Transform.MulXV(xf2, vertices2[index], b2EdgeSeparation_s_v2);\r\n    const separation = b2Vec2.DotVV(b2Vec2.SubVV(v2, v1, b2Vec2.s_t0), normal1World);\r\n    return separation;\r\n}\r\nconst b2FindMaxSeparation_s_d = new b2Vec2();\r\nconst b2FindMaxSeparation_s_dLocal1 = new b2Vec2();\r\nfunction b2FindMaxSeparation(edgeIndex, poly1, xf1, poly2, xf2) {\r\n    const count1 = poly1.m_count;\r\n    const normals1 = poly1.m_normals;\r\n    // Vector pointing from the centroid of poly1 to the centroid of poly2.\r\n    const d = b2Vec2.SubVV(b2Transform.MulXV(xf2, poly2.m_centroid, b2Vec2.s_t0), b2Transform.MulXV(xf1, poly1.m_centroid, b2Vec2.s_t1), b2FindMaxSeparation_s_d);\r\n    const dLocal1 = b2Rot.MulTRV(xf1.q, d, b2FindMaxSeparation_s_dLocal1);\r\n    // Find edge normal on poly1 that has the largest projection onto d.\r\n    let edge = 0;\r\n    let maxDot = (-b2_maxFloat);\r\n    for (let i = 0; i < count1; ++i) {\r\n        const dot = b2Vec2.DotVV(normals1[i], dLocal1);\r\n        if (dot > maxDot) {\r\n            maxDot = dot;\r\n            edge = i;\r\n        }\r\n    }\r\n    // Get the separation for the edge normal.\r\n    let s = b2EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n    // Check the separation for the previous edge normal.\r\n    const prevEdge = (edge + count1 - 1) % count1;\r\n    const sPrev = b2EdgeSeparation(poly1, xf1, prevEdge, poly2, xf2);\r\n    // Check the separation for the next edge normal.\r\n    const nextEdge = (edge + 1) % count1;\r\n    const sNext = b2EdgeSeparation(poly1, xf1, nextEdge, poly2, xf2);\r\n    // Find the best edge and the search direction.\r\n    let bestEdge = 0;\r\n    let bestSeparation = 0;\r\n    let increment = 0;\r\n    if (sPrev > s && sPrev > sNext) {\r\n        increment = -1;\r\n        bestEdge = prevEdge;\r\n        bestSeparation = sPrev;\r\n    }\r\n    else if (sNext > s) {\r\n        increment = 1;\r\n        bestEdge = nextEdge;\r\n        bestSeparation = sNext;\r\n    }\r\n    else {\r\n        edgeIndex[0] = edge;\r\n        return s;\r\n    }\r\n    // Perform a local search for the best edge normal.\r\n    while (true) {\r\n        if (increment === -1)\r\n            edge = (bestEdge + count1 - 1) % count1;\r\n        else\r\n            edge = (bestEdge + 1) % count1;\r\n        s = b2EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n        if (s > bestSeparation) {\r\n            bestEdge = edge;\r\n            bestSeparation = s;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    edgeIndex[0] = bestEdge;\r\n    return bestSeparation;\r\n}\r\nconst b2FindIncidentEdge_s_normal1 = new b2Vec2();\r\nfunction b2FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\r\n    ///const count1: number = poly1.m_count;\r\n    const normals1 = poly1.m_normals;\r\n    const count2 = poly2.m_count;\r\n    const vertices2 = poly2.m_vertices;\r\n    const normals2 = poly2.m_normals;\r\n    ///b2Assert(0 <= edge1 && edge1 < count1);\r\n    // Get the normal of the reference edge in poly2's frame.\r\n    const normal1 = b2Rot.MulTRV(xf2.q, b2Rot.MulRV(xf1.q, normals1[edge1], b2Vec2.s_t0), b2FindIncidentEdge_s_normal1);\r\n    // Find the incident edge on poly2.\r\n    let index = 0;\r\n    let minDot = b2_maxFloat;\r\n    for (let i = 0; i < count2; ++i) {\r\n        const dot = b2Vec2.DotVV(normal1, normals2[i]);\r\n        if (dot < minDot) {\r\n            minDot = dot;\r\n            index = i;\r\n        }\r\n    }\r\n    // Build the clip vertices for the incident edge.\r\n    const i1 = index;\r\n    const i2 = (i1 + 1) % count2;\r\n    const c0 = c[0];\r\n    b2Transform.MulXV(xf2, vertices2[i1], c0.v);\r\n    const cf0 = c0.id.cf;\r\n    cf0.indexA = edge1;\r\n    cf0.indexB = i1;\r\n    cf0.typeA = b2ContactFeatureType.e_face;\r\n    cf0.typeB = b2ContactFeatureType.e_vertex;\r\n    const c1 = c[1];\r\n    b2Transform.MulXV(xf2, vertices2[i2], c1.v);\r\n    const cf1 = c1.id.cf;\r\n    cf1.indexA = edge1;\r\n    cf1.indexB = i2;\r\n    cf1.typeA = b2ContactFeatureType.e_face;\r\n    cf1.typeB = b2ContactFeatureType.e_vertex;\r\n}\r\nconst b2CollidePolygons_s_incidentEdge = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_clipPoints1 = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_clipPoints2 = b2ClipVertex.MakeArray(2);\r\nconst b2CollidePolygons_s_edgeA = [0];\r\nconst b2CollidePolygons_s_edgeB = [0];\r\nconst b2CollidePolygons_s_localTangent = new b2Vec2();\r\nconst b2CollidePolygons_s_localNormal = new b2Vec2();\r\nconst b2CollidePolygons_s_planePoint = new b2Vec2();\r\nconst b2CollidePolygons_s_normal = new b2Vec2();\r\nconst b2CollidePolygons_s_tangent = new b2Vec2();\r\nconst b2CollidePolygons_s_ntangent = new b2Vec2();\r\nconst b2CollidePolygons_s_v11 = new b2Vec2();\r\nconst b2CollidePolygons_s_v12 = new b2Vec2();\r\nexport function b2CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\r\n    manifold.pointCount = 0;\r\n    const totalRadius = polyA.m_radius + polyB.m_radius;\r\n    const edgeA = b2CollidePolygons_s_edgeA;\r\n    edgeA[0] = 0;\r\n    const separationA = b2FindMaxSeparation(edgeA, polyA, xfA, polyB, xfB);\r\n    if (separationA > totalRadius)\r\n        return;\r\n    const edgeB = b2CollidePolygons_s_edgeB;\r\n    edgeB[0] = 0;\r\n    const separationB = b2FindMaxSeparation(edgeB, polyB, xfB, polyA, xfA);\r\n    if (separationB > totalRadius)\r\n        return;\r\n    let poly1; // reference polygon\r\n    let poly2; // incident polygon\r\n    let xf1, xf2;\r\n    let edge1 = 0; // reference edge\r\n    let flip = 0;\r\n    const k_relativeTol = 0.98;\r\n    const k_absoluteTol = 0.001;\r\n    if (separationB > k_relativeTol * separationA + k_absoluteTol) {\r\n        poly1 = polyB;\r\n        poly2 = polyA;\r\n        xf1 = xfB;\r\n        xf2 = xfA;\r\n        edge1 = edgeB[0];\r\n        manifold.type = b2ManifoldType.e_faceB;\r\n        flip = 1;\r\n    }\r\n    else {\r\n        poly1 = polyA;\r\n        poly2 = polyB;\r\n        xf1 = xfA;\r\n        xf2 = xfB;\r\n        edge1 = edgeA[0];\r\n        manifold.type = b2ManifoldType.e_faceA;\r\n        flip = 0;\r\n    }\r\n    const incidentEdge = b2CollidePolygons_s_incidentEdge;\r\n    b2FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\r\n    const count1 = poly1.m_count;\r\n    const vertices1 = poly1.m_vertices;\r\n    const iv1 = edge1;\r\n    const iv2 = (edge1 + 1) % count1;\r\n    const local_v11 = vertices1[iv1];\r\n    const local_v12 = vertices1[iv2];\r\n    const localTangent = b2Vec2.SubVV(local_v12, local_v11, b2CollidePolygons_s_localTangent);\r\n    localTangent.Normalize();\r\n    const localNormal = b2Vec2.CrossVOne(localTangent, b2CollidePolygons_s_localNormal);\r\n    const planePoint = b2Vec2.MidVV(local_v11, local_v12, b2CollidePolygons_s_planePoint);\r\n    const tangent = b2Rot.MulRV(xf1.q, localTangent, b2CollidePolygons_s_tangent);\r\n    const normal = b2Vec2.CrossVOne(tangent, b2CollidePolygons_s_normal);\r\n    const v11 = b2Transform.MulXV(xf1, local_v11, b2CollidePolygons_s_v11);\r\n    const v12 = b2Transform.MulXV(xf1, local_v12, b2CollidePolygons_s_v12);\r\n    // Face offset.\r\n    const frontOffset = b2Vec2.DotVV(normal, v11);\r\n    // Side offsets, extended by polytope skin thickness.\r\n    const sideOffset1 = -b2Vec2.DotVV(tangent, v11) + totalRadius;\r\n    const sideOffset2 = b2Vec2.DotVV(tangent, v12) + totalRadius;\r\n    // Clip incident edge against extruded edge1 side edges.\r\n    const clipPoints1 = b2CollidePolygons_s_clipPoints1;\r\n    const clipPoints2 = b2CollidePolygons_s_clipPoints2;\r\n    let np;\r\n    // Clip to box side 1\r\n    const ntangent = b2Vec2.NegV(tangent, b2CollidePolygons_s_ntangent);\r\n    np = b2ClipSegmentToLine(clipPoints1, incidentEdge, ntangent, sideOffset1, iv1);\r\n    if (np < 2)\r\n        return;\r\n    // Clip to negative box side 1\r\n    np = b2ClipSegmentToLine(clipPoints2, clipPoints1, tangent, sideOffset2, iv2);\r\n    if (np < 2) {\r\n        return;\r\n    }\r\n    // Now clipPoints2 contains the clipped points.\r\n    manifold.localNormal.Copy(localNormal);\r\n    manifold.localPoint.Copy(planePoint);\r\n    let pointCount = 0;\r\n    for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n        const cv = clipPoints2[i];\r\n        const separation = b2Vec2.DotVV(normal, cv.v) - frontOffset;\r\n        if (separation <= totalRadius) {\r\n            const cp = manifold.points[pointCount];\r\n            b2Transform.MulTXV(xf2, cv.v, cp.localPoint);\r\n            cp.id.Copy(cv.id);\r\n            if (flip) {\r\n                // Swap features\r\n                const cf = cp.id.cf;\r\n                cp.id.cf.indexA = cf.indexB;\r\n                cp.id.cf.indexB = cf.indexA;\r\n                cp.id.cf.typeA = cf.typeB;\r\n                cp.id.cf.typeB = cf.typeA;\r\n            }\r\n            ++pointCount;\r\n        }\r\n    }\r\n    manifold.pointCount = pointCount;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","import { b2_maxFloat, b2_angularSlop, b2_maxPolygonVertices, b2_polygonRadius, b2_maxManifoldPoints } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2ContactFeatureType, b2ContactID } from \"./b2Collision\";\r\nimport { b2ManifoldType, b2ClipVertex, b2ClipSegmentToLine } from \"./b2Collision\";\r\nconst b2CollideEdgeAndCircle_s_Q = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_d = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e1 = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_e2 = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_P = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_n = new b2Vec2();\r\nconst b2CollideEdgeAndCircle_s_id = new b2ContactID();\r\nexport function b2CollideEdgeAndCircle(manifold, edgeA, xfA, circleB, xfB) {\r\n    manifold.pointCount = 0;\r\n    // Compute circle in frame of edge\r\n    const Q = b2Transform.MulTXV(xfA, b2Transform.MulXV(xfB, circleB.m_p, b2Vec2.s_t0), b2CollideEdgeAndCircle_s_Q);\r\n    const A = edgeA.m_vertex1;\r\n    const B = edgeA.m_vertex2;\r\n    const e = b2Vec2.SubVV(B, A, b2CollideEdgeAndCircle_s_e);\r\n    // Barycentric coordinates\r\n    const u = b2Vec2.DotVV(e, b2Vec2.SubVV(B, Q, b2Vec2.s_t0));\r\n    const v = b2Vec2.DotVV(e, b2Vec2.SubVV(Q, A, b2Vec2.s_t0));\r\n    const radius = edgeA.m_radius + circleB.m_radius;\r\n    // const cf: b2ContactFeature = new b2ContactFeature();\r\n    const id = b2CollideEdgeAndCircle_s_id;\r\n    id.cf.indexB = 0;\r\n    id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n    // Region A\r\n    if (v <= 0) {\r\n        const P = A;\r\n        const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n        const dd = b2Vec2.DotVV(d, d);\r\n        if (dd > radius * radius) {\r\n            return;\r\n        }\r\n        // Is there an edge connected to A?\r\n        if (edgeA.m_hasVertex0) {\r\n            const A1 = edgeA.m_vertex0;\r\n            const B1 = A;\r\n            const e1 = b2Vec2.SubVV(B1, A1, b2CollideEdgeAndCircle_s_e1);\r\n            const u1 = b2Vec2.DotVV(e1, b2Vec2.SubVV(B1, Q, b2Vec2.s_t0));\r\n            // Is the circle in Region AB of the previous edge?\r\n            if (u1 > 0) {\r\n                return;\r\n            }\r\n        }\r\n        id.cf.indexA = 0;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_circles;\r\n        manifold.localNormal.SetZero();\r\n        manifold.localPoint.Copy(P);\r\n        manifold.points[0].id.Copy(id);\r\n        // manifold.points[0].id.key = 0;\r\n        // manifold.points[0].id.cf = cf;\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        return;\r\n    }\r\n    // Region B\r\n    if (u <= 0) {\r\n        const P = B;\r\n        const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n        const dd = b2Vec2.DotVV(d, d);\r\n        if (dd > radius * radius) {\r\n            return;\r\n        }\r\n        // Is there an edge connected to B?\r\n        if (edgeA.m_hasVertex3) {\r\n            const B2 = edgeA.m_vertex3;\r\n            const A2 = B;\r\n            const e2 = b2Vec2.SubVV(B2, A2, b2CollideEdgeAndCircle_s_e2);\r\n            const v2 = b2Vec2.DotVV(e2, b2Vec2.SubVV(Q, A2, b2Vec2.s_t0));\r\n            // Is the circle in Region AB of the next edge?\r\n            if (v2 > 0) {\r\n                return;\r\n            }\r\n        }\r\n        id.cf.indexA = 1;\r\n        id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n        manifold.pointCount = 1;\r\n        manifold.type = b2ManifoldType.e_circles;\r\n        manifold.localNormal.SetZero();\r\n        manifold.localPoint.Copy(P);\r\n        manifold.points[0].id.Copy(id);\r\n        // manifold.points[0].id.key = 0;\r\n        // manifold.points[0].id.cf = cf;\r\n        manifold.points[0].localPoint.Copy(circleB.m_p);\r\n        return;\r\n    }\r\n    // Region AB\r\n    const den = b2Vec2.DotVV(e, e);\r\n    ///b2Assert(den > 0);\r\n    const P = b2CollideEdgeAndCircle_s_P;\r\n    P.x = (1 / den) * (u * A.x + v * B.x);\r\n    P.y = (1 / den) * (u * A.y + v * B.y);\r\n    const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n    const dd = b2Vec2.DotVV(d, d);\r\n    if (dd > radius * radius) {\r\n        return;\r\n    }\r\n    const n = b2CollideEdgeAndCircle_s_n.Set(-e.y, e.x);\r\n    if (b2Vec2.DotVV(n, b2Vec2.SubVV(Q, A, b2Vec2.s_t0)) < 0) {\r\n        n.Set(-n.x, -n.y);\r\n    }\r\n    n.Normalize();\r\n    id.cf.indexA = 0;\r\n    id.cf.typeA = b2ContactFeatureType.e_face;\r\n    manifold.pointCount = 1;\r\n    manifold.type = b2ManifoldType.e_faceA;\r\n    manifold.localNormal.Copy(n);\r\n    manifold.localPoint.Copy(A);\r\n    manifold.points[0].id.Copy(id);\r\n    // manifold.points[0].id.key = 0;\r\n    // manifold.points[0].id.cf = cf;\r\n    manifold.points[0].localPoint.Copy(circleB.m_p);\r\n}\r\nclass b2EPAxis {\r\n    constructor() {\r\n        this.type = 0 /* e_unknown */;\r\n        this.index = 0;\r\n        this.separation = 0;\r\n    }\r\n}\r\nclass b2TempPolygon {\r\n    constructor() {\r\n        this.vertices = b2Vec2.MakeArray(b2_maxPolygonVertices);\r\n        this.normals = b2Vec2.MakeArray(b2_maxPolygonVertices);\r\n        this.count = 0;\r\n    }\r\n}\r\nclass b2ReferenceFace {\r\n    constructor() {\r\n        this.i1 = 0;\r\n        this.i2 = 0;\r\n        this.v1 = new b2Vec2();\r\n        this.v2 = new b2Vec2();\r\n        this.normal = new b2Vec2();\r\n        this.sideNormal1 = new b2Vec2();\r\n        this.sideOffset1 = 0;\r\n        this.sideNormal2 = new b2Vec2();\r\n        this.sideOffset2 = 0;\r\n    }\r\n}\r\nclass b2EPCollider {\r\n    constructor() {\r\n        this.m_polygonB = new b2TempPolygon();\r\n        this.m_xf = new b2Transform();\r\n        this.m_centroidB = new b2Vec2();\r\n        this.m_v0 = new b2Vec2();\r\n        this.m_v1 = new b2Vec2();\r\n        this.m_v2 = new b2Vec2();\r\n        this.m_v3 = new b2Vec2();\r\n        this.m_normal0 = new b2Vec2();\r\n        this.m_normal1 = new b2Vec2();\r\n        this.m_normal2 = new b2Vec2();\r\n        this.m_normal = new b2Vec2();\r\n        this.m_type1 = 0 /* e_isolated */;\r\n        this.m_type2 = 0 /* e_isolated */;\r\n        this.m_lowerLimit = new b2Vec2();\r\n        this.m_upperLimit = new b2Vec2();\r\n        this.m_radius = 0;\r\n        this.m_front = false;\r\n    }\r\n    Collide(manifold, edgeA, xfA, polygonB, xfB) {\r\n        b2Transform.MulTXX(xfA, xfB, this.m_xf);\r\n        b2Transform.MulXV(this.m_xf, polygonB.m_centroid, this.m_centroidB);\r\n        this.m_v0.Copy(edgeA.m_vertex0);\r\n        this.m_v1.Copy(edgeA.m_vertex1);\r\n        this.m_v2.Copy(edgeA.m_vertex2);\r\n        this.m_v3.Copy(edgeA.m_vertex3);\r\n        const hasVertex0 = edgeA.m_hasVertex0;\r\n        const hasVertex3 = edgeA.m_hasVertex3;\r\n        const edge1 = b2Vec2.SubVV(this.m_v2, this.m_v1, b2EPCollider.s_edge1);\r\n        edge1.Normalize();\r\n        this.m_normal1.Set(edge1.y, -edge1.x);\r\n        const offset1 = b2Vec2.DotVV(this.m_normal1, b2Vec2.SubVV(this.m_centroidB, this.m_v1, b2Vec2.s_t0));\r\n        let offset0 = 0;\r\n        let offset2 = 0;\r\n        let convex1 = false;\r\n        let convex2 = false;\r\n        // Is there a preceding edge?\r\n        if (hasVertex0) {\r\n            const edge0 = b2Vec2.SubVV(this.m_v1, this.m_v0, b2EPCollider.s_edge0);\r\n            edge0.Normalize();\r\n            this.m_normal0.Set(edge0.y, -edge0.x);\r\n            convex1 = b2Vec2.CrossVV(edge0, edge1) >= 0;\r\n            offset0 = b2Vec2.DotVV(this.m_normal0, b2Vec2.SubVV(this.m_centroidB, this.m_v0, b2Vec2.s_t0));\r\n        }\r\n        // Is there a following edge?\r\n        if (hasVertex3) {\r\n            const edge2 = b2Vec2.SubVV(this.m_v3, this.m_v2, b2EPCollider.s_edge2);\r\n            edge2.Normalize();\r\n            this.m_normal2.Set(edge2.y, -edge2.x);\r\n            convex2 = b2Vec2.CrossVV(edge1, edge2) > 0;\r\n            offset2 = b2Vec2.DotVV(this.m_normal2, b2Vec2.SubVV(this.m_centroidB, this.m_v2, b2Vec2.s_t0));\r\n        }\r\n        // Determine front or back collision. Determine collision normal limits.\r\n        if (hasVertex0 && hasVertex3) {\r\n            if (convex1 && convex2) {\r\n                this.m_front = offset0 >= 0 || offset1 >= 0 || offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else if (convex1) {\r\n                this.m_front = offset0 >= 0 || (offset1 >= 0 && offset2 >= 0);\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else if (convex2) {\r\n                this.m_front = offset2 >= 0 || (offset0 >= 0 && offset1 >= 0);\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset0 >= 0 && offset1 >= 0 && offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n        }\r\n        else if (hasVertex0) {\r\n            if (convex1) {\r\n                this.m_front = offset0 >= 0 || offset1 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal0);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset0 >= 0 && offset1 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1);\r\n                    this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                }\r\n            }\r\n        }\r\n        else if (hasVertex3) {\r\n            if (convex2) {\r\n                this.m_front = offset1 >= 0 || offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal2);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n            }\r\n            else {\r\n                this.m_front = offset1 >= 0 && offset2 >= 0;\r\n                if (this.m_front) {\r\n                    this.m_normal.Copy(this.m_normal1);\r\n                    this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n                else {\r\n                    this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                    this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                    this.m_upperLimit.Copy(this.m_normal1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.m_front = offset1 >= 0;\r\n            if (this.m_front) {\r\n                this.m_normal.Copy(this.m_normal1);\r\n                this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n            }\r\n            else {\r\n                this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                this.m_lowerLimit.Copy(this.m_normal1);\r\n                this.m_upperLimit.Copy(this.m_normal1);\r\n            }\r\n        }\r\n        // Get polygonB in frameA\r\n        this.m_polygonB.count = polygonB.m_count;\r\n        for (let i = 0; i < polygonB.m_count; ++i) {\r\n            b2Transform.MulXV(this.m_xf, polygonB.m_vertices[i], this.m_polygonB.vertices[i]);\r\n            b2Rot.MulRV(this.m_xf.q, polygonB.m_normals[i], this.m_polygonB.normals[i]);\r\n        }\r\n        this.m_radius = 2 * b2_polygonRadius;\r\n        manifold.pointCount = 0;\r\n        const edgeAxis = this.ComputeEdgeSeparation(b2EPCollider.s_edgeAxis);\r\n        // If no valid normal can be found than this edge should not collide.\r\n        if (edgeAxis.type === 0 /* e_unknown */) {\r\n            return;\r\n        }\r\n        if (edgeAxis.separation > this.m_radius) {\r\n            return;\r\n        }\r\n        const polygonAxis = this.ComputePolygonSeparation(b2EPCollider.s_polygonAxis);\r\n        if (polygonAxis.type !== 0 /* e_unknown */ && polygonAxis.separation > this.m_radius) {\r\n            return;\r\n        }\r\n        // Use hysteresis for jitter reduction.\r\n        const k_relativeTol = 0.98;\r\n        const k_absoluteTol = 0.001;\r\n        let primaryAxis;\r\n        if (polygonAxis.type === 0 /* e_unknown */) {\r\n            primaryAxis = edgeAxis;\r\n        }\r\n        else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\r\n            primaryAxis = polygonAxis;\r\n        }\r\n        else {\r\n            primaryAxis = edgeAxis;\r\n        }\r\n        const ie = b2EPCollider.s_ie;\r\n        const rf = b2EPCollider.s_rf;\r\n        if (primaryAxis.type === 1 /* e_edgeA */) {\r\n            manifold.type = b2ManifoldType.e_faceA;\r\n            // Search for the polygon normal that is most anti-parallel to the edge normal.\r\n            let bestIndex = 0;\r\n            let bestValue = b2Vec2.DotVV(this.m_normal, this.m_polygonB.normals[0]);\r\n            for (let i = 1; i < this.m_polygonB.count; ++i) {\r\n                const value = b2Vec2.DotVV(this.m_normal, this.m_polygonB.normals[i]);\r\n                if (value < bestValue) {\r\n                    bestValue = value;\r\n                    bestIndex = i;\r\n                }\r\n            }\r\n            const i1 = bestIndex;\r\n            const i2 = (i1 + 1) % this.m_polygonB.count;\r\n            const ie0 = ie[0];\r\n            ie0.v.Copy(this.m_polygonB.vertices[i1]);\r\n            ie0.id.cf.indexA = 0;\r\n            ie0.id.cf.indexB = i1;\r\n            ie0.id.cf.typeA = b2ContactFeatureType.e_face;\r\n            ie0.id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n            const ie1 = ie[1];\r\n            ie1.v.Copy(this.m_polygonB.vertices[i2]);\r\n            ie1.id.cf.indexA = 0;\r\n            ie1.id.cf.indexB = i2;\r\n            ie1.id.cf.typeA = b2ContactFeatureType.e_face;\r\n            ie1.id.cf.typeB = b2ContactFeatureType.e_vertex;\r\n            if (this.m_front) {\r\n                rf.i1 = 0;\r\n                rf.i2 = 1;\r\n                rf.v1.Copy(this.m_v1);\r\n                rf.v2.Copy(this.m_v2);\r\n                rf.normal.Copy(this.m_normal1);\r\n            }\r\n            else {\r\n                rf.i1 = 1;\r\n                rf.i2 = 0;\r\n                rf.v1.Copy(this.m_v2);\r\n                rf.v2.Copy(this.m_v1);\r\n                rf.normal.Copy(this.m_normal1).SelfNeg();\r\n            }\r\n        }\r\n        else {\r\n            manifold.type = b2ManifoldType.e_faceB;\r\n            const ie0 = ie[0];\r\n            ie0.v.Copy(this.m_v1);\r\n            ie0.id.cf.indexA = 0;\r\n            ie0.id.cf.indexB = primaryAxis.index;\r\n            ie0.id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n            ie0.id.cf.typeB = b2ContactFeatureType.e_face;\r\n            const ie1 = ie[1];\r\n            ie1.v.Copy(this.m_v2);\r\n            ie1.id.cf.indexA = 0;\r\n            ie1.id.cf.indexB = primaryAxis.index;\r\n            ie1.id.cf.typeA = b2ContactFeatureType.e_vertex;\r\n            ie1.id.cf.typeB = b2ContactFeatureType.e_face;\r\n            rf.i1 = primaryAxis.index;\r\n            rf.i2 = (rf.i1 + 1) % this.m_polygonB.count;\r\n            rf.v1.Copy(this.m_polygonB.vertices[rf.i1]);\r\n            rf.v2.Copy(this.m_polygonB.vertices[rf.i2]);\r\n            rf.normal.Copy(this.m_polygonB.normals[rf.i1]);\r\n        }\r\n        rf.sideNormal1.Set(rf.normal.y, -rf.normal.x);\r\n        rf.sideNormal2.Copy(rf.sideNormal1).SelfNeg();\r\n        rf.sideOffset1 = b2Vec2.DotVV(rf.sideNormal1, rf.v1);\r\n        rf.sideOffset2 = b2Vec2.DotVV(rf.sideNormal2, rf.v2);\r\n        // Clip incident edge against extruded edge1 side edges.\r\n        const clipPoints1 = b2EPCollider.s_clipPoints1;\r\n        const clipPoints2 = b2EPCollider.s_clipPoints2;\r\n        let np = 0;\r\n        // Clip to box side 1\r\n        np = b2ClipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\r\n        if (np < b2_maxManifoldPoints) {\r\n            return;\r\n        }\r\n        // Clip to negative box side 1\r\n        np = b2ClipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\r\n        if (np < b2_maxManifoldPoints) {\r\n            return;\r\n        }\r\n        // Now clipPoints2 contains the clipped points.\r\n        if (primaryAxis.type === 1 /* e_edgeA */) {\r\n            manifold.localNormal.Copy(rf.normal);\r\n            manifold.localPoint.Copy(rf.v1);\r\n        }\r\n        else {\r\n            manifold.localNormal.Copy(polygonB.m_normals[rf.i1]);\r\n            manifold.localPoint.Copy(polygonB.m_vertices[rf.i1]);\r\n        }\r\n        let pointCount = 0;\r\n        for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n            let separation;\r\n            separation = b2Vec2.DotVV(rf.normal, b2Vec2.SubVV(clipPoints2[i].v, rf.v1, b2Vec2.s_t0));\r\n            if (separation <= this.m_radius) {\r\n                const cp = manifold.points[pointCount];\r\n                if (primaryAxis.type === 1 /* e_edgeA */) {\r\n                    b2Transform.MulTXV(this.m_xf, clipPoints2[i].v, cp.localPoint);\r\n                    cp.id = clipPoints2[i].id;\r\n                }\r\n                else {\r\n                    cp.localPoint.Copy(clipPoints2[i].v);\r\n                    cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\r\n                    cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\r\n                    cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\r\n                    cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\r\n                }\r\n                ++pointCount;\r\n            }\r\n        }\r\n        manifold.pointCount = pointCount;\r\n    }\r\n    ComputeEdgeSeparation(out) {\r\n        const axis = out;\r\n        axis.type = 1 /* e_edgeA */;\r\n        axis.index = this.m_front ? 0 : 1;\r\n        axis.separation = b2_maxFloat;\r\n        for (let i = 0; i < this.m_polygonB.count; ++i) {\r\n            const s = b2Vec2.DotVV(this.m_normal, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v1, b2Vec2.s_t0));\r\n            if (s < axis.separation) {\r\n                axis.separation = s;\r\n            }\r\n        }\r\n        return axis;\r\n    }\r\n    ComputePolygonSeparation(out) {\r\n        const axis = out;\r\n        axis.type = 0 /* e_unknown */;\r\n        axis.index = -1;\r\n        axis.separation = -b2_maxFloat;\r\n        const perp = b2EPCollider.s_perp.Set(-this.m_normal.y, this.m_normal.x);\r\n        for (let i = 0; i < this.m_polygonB.count; ++i) {\r\n            const n = b2Vec2.NegV(this.m_polygonB.normals[i], b2EPCollider.s_n);\r\n            const s1 = b2Vec2.DotVV(n, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v1, b2Vec2.s_t0));\r\n            const s2 = b2Vec2.DotVV(n, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v2, b2Vec2.s_t0));\r\n            const s = b2Min(s1, s2);\r\n            if (s > this.m_radius) {\r\n                // No collision\r\n                axis.type = 2 /* e_edgeB */;\r\n                axis.index = i;\r\n                axis.separation = s;\r\n                return axis;\r\n            }\r\n            // Adjacency\r\n            if (b2Vec2.DotVV(n, perp) >= 0) {\r\n                if (b2Vec2.DotVV(b2Vec2.SubVV(n, this.m_upperLimit, b2Vec2.s_t0), this.m_normal) < -b2_angularSlop) {\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                if (b2Vec2.DotVV(b2Vec2.SubVV(n, this.m_lowerLimit, b2Vec2.s_t0), this.m_normal) < -b2_angularSlop) {\r\n                    continue;\r\n                }\r\n            }\r\n            if (s > axis.separation) {\r\n                axis.type = 2 /* e_edgeB */;\r\n                axis.index = i;\r\n                axis.separation = s;\r\n            }\r\n        }\r\n        return axis;\r\n    }\r\n}\r\nb2EPCollider.s_edge1 = new b2Vec2();\r\nb2EPCollider.s_edge0 = new b2Vec2();\r\nb2EPCollider.s_edge2 = new b2Vec2();\r\nb2EPCollider.s_ie = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_rf = new b2ReferenceFace();\r\nb2EPCollider.s_clipPoints1 = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_clipPoints2 = b2ClipVertex.MakeArray(2);\r\nb2EPCollider.s_edgeAxis = new b2EPAxis();\r\nb2EPCollider.s_polygonAxis = new b2EPAxis();\r\nb2EPCollider.s_n = new b2Vec2();\r\nb2EPCollider.s_perp = new b2Vec2();\r\nconst b2CollideEdgeAndPolygon_s_collider = new b2EPCollider();\r\nexport function b2CollideEdgeAndPolygon(manifold, edgeA, xfA, polygonB, xfB) {\r\n    const collider = b2CollideEdgeAndPolygon_s_collider;\r\n    collider.Collide(manifold, edgeA, xfA, polygonB, xfB);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_epsilon } from \"../../Common/b2Settings\";\r\nimport { b2Sq, b2Sqrt, b2Asin, b2Pow, b2Vec2, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A circle shape.\r\nexport class b2CircleShape extends b2Shape {\r\n    constructor(radius = 0) {\r\n        super(b2ShapeType.e_circleShape, radius);\r\n        this.m_p = new b2Vec2();\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2CircleShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        ///b2Assert(other instanceof b2CircleShape);\r\n        this.m_p.Copy(other.m_p);\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    TestPoint(transform, p) {\r\n        const center = b2Transform.MulXV(transform, this.m_p, b2CircleShape.TestPoint_s_center);\r\n        const d = b2Vec2.SubVV(p, center, b2CircleShape.TestPoint_s_d);\r\n        return b2Vec2.DotVV(d, d) <= b2Sq(this.m_radius);\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const center = b2Transform.MulXV(xf, this.m_p, b2CircleShape.ComputeDistance_s_center);\r\n        b2Vec2.SubVV(p, center, normal);\r\n        return normal.Normalize() - this.m_radius;\r\n    }\r\n    RayCast(output, input, transform, childIndex) {\r\n        const position = b2Transform.MulXV(transform, this.m_p, b2CircleShape.RayCast_s_position);\r\n        const s = b2Vec2.SubVV(input.p1, position, b2CircleShape.RayCast_s_s);\r\n        const b = b2Vec2.DotVV(s, s) - b2Sq(this.m_radius);\r\n        // Solve quadratic equation.\r\n        const r = b2Vec2.SubVV(input.p2, input.p1, b2CircleShape.RayCast_s_r);\r\n        const c = b2Vec2.DotVV(s, r);\r\n        const rr = b2Vec2.DotVV(r, r);\r\n        const sigma = c * c - rr * b;\r\n        // Check for negative discriminant and short segment.\r\n        if (sigma < 0 || rr < b2_epsilon) {\r\n            return false;\r\n        }\r\n        // Find the point of intersection of the line with the circle.\r\n        let a = (-(c + b2Sqrt(sigma)));\r\n        // Is the intersection point on the segment?\r\n        if (0 <= a && a <= input.maxFraction * rr) {\r\n            a /= rr;\r\n            output.fraction = a;\r\n            b2Vec2.AddVMulSV(s, a, r, output.normal).SelfNormalize();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ComputeAABB(aabb, transform, childIndex) {\r\n        const p = b2Transform.MulXV(transform, this.m_p, b2CircleShape.ComputeAABB_s_p);\r\n        aabb.lowerBound.Set(p.x - this.m_radius, p.y - this.m_radius);\r\n        aabb.upperBound.Set(p.x + this.m_radius, p.y + this.m_radius);\r\n    }\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        const radius_sq = b2Sq(this.m_radius);\r\n        massData.mass = density * b2_pi * radius_sq;\r\n        massData.center.Copy(this.m_p);\r\n        // inertia about the local origin\r\n        massData.I = massData.mass * (0.5 * radius_sq + b2Vec2.DotVV(this.m_p, this.m_p));\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_p);\r\n        proxy.m_count = 1;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        const p = b2Transform.MulXV(xf, this.m_p, new b2Vec2());\r\n        const l = (-(b2Vec2.DotVV(normal, p) - offset));\r\n        if (l < (-this.m_radius) + b2_epsilon) {\r\n            // Completely dry\r\n            return 0;\r\n        }\r\n        if (l > this.m_radius) {\r\n            // Completely wet\r\n            c.Copy(p);\r\n            return b2_pi * this.m_radius * this.m_radius;\r\n        }\r\n        // Magic\r\n        const r2 = this.m_radius * this.m_radius;\r\n        const l2 = l * l;\r\n        const area = r2 * (b2Asin(l / this.m_radius) + b2_pi / 2) + l * b2Sqrt(r2 - l2);\r\n        const com = (-2 / 3 * b2Pow(r2 - l2, 1.5) / area);\r\n        c.x = p.x + normal.x * com;\r\n        c.y = p.y + normal.y * com;\r\n        return area;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2CircleShape = new b2CircleShape();\\n\");\r\n        log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\r\n        log(\"    shape.m_p.Set(%.15f, %.15f);\\n\", this.m_p.x, this.m_p.y);\r\n    }\r\n}\r\n/// Implement b2Shape.\r\nb2CircleShape.TestPoint_s_center = new b2Vec2();\r\nb2CircleShape.TestPoint_s_d = new b2Vec2();\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2CircleShape.ComputeDistance_s_center = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\r\n// From Section 3.1.2\r\n// x = s + a * r\r\n// norm(x) = radius\r\nb2CircleShape.RayCast_s_position = new b2Vec2();\r\nb2CircleShape.RayCast_s_s = new b2Vec2();\r\nb2CircleShape.RayCast_s_r = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2CircleShape.ComputeAABB_s_p = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaXJjbGVTaGFwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0NvbGxpc2lvbi9TaGFwZXMvYjJDaXJjbGVTaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGLE9BQU8sRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDNUQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFJdkYsT0FBTyxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFakQsbUJBQW1CO0FBQ25CLE1BQU0sT0FBTyxhQUFjLFNBQVEsT0FBTztJQUd4QyxZQUFZLFNBQWlCLENBQUM7UUFDNUIsS0FBSyxDQUFDLFdBQVcsQ0FBQyxhQUFhLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFIcEMsUUFBRyxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7SUFJbEMsQ0FBQztJQUVELHNCQUFzQjtJQUNmLEtBQUs7UUFDVixPQUFPLElBQUksYUFBYSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFTSxJQUFJLENBQUMsS0FBb0I7UUFDOUIsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVsQiw0Q0FBNEM7UUFFNUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELCtCQUErQjtJQUN4QixhQUFhO1FBQ2xCLE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUtNLFNBQVMsQ0FBQyxTQUFzQixFQUFFLENBQVM7UUFDaEQsTUFBTSxNQUFNLEdBQVcs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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_epsilon, b2_maxFloat, b2_linearSlop, b2_polygonRadius, b2_maxPolygonVertices, b2MakeNumberArray } from \"../../Common/b2Settings\";\r\nimport { b2Min, b2Vec2, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2MassData } from \"./b2Shape\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A convex polygon. It is assumed that the interior of the polygon is to\r\n/// the left of each edge.\r\n/// Polygons have a maximum number of vertices equal to b2_maxPolygonVertices.\r\n/// In most cases you should not need many vertices for a convex polygon.\r\nexport class b2PolygonShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_polygonShape, b2_polygonRadius);\r\n        this.m_centroid = new b2Vec2(0, 0);\r\n        this.m_vertices = b2Vec2.MakeArray(b2_maxPolygonVertices);\r\n        this.m_normals = b2Vec2.MakeArray(b2_maxPolygonVertices);\r\n        this.m_count = 0;\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2PolygonShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        ///b2Assert(other instanceof b2PolygonShape);\r\n        this.m_centroid.Copy(other.m_centroid);\r\n        this.m_count = other.m_count;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_vertices[i].Copy(other.m_vertices[i]);\r\n            this.m_normals[i].Copy(other.m_normals[i]);\r\n        }\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    Set(vertices, count = vertices.length, start = 0) {\r\n        ///b2Assert(3 <= count && count <= b2_maxPolygonVertices);\r\n        if (count < 3) {\r\n            return this.SetAsBox(1, 1);\r\n        }\r\n        let n = b2Min(count, b2_maxPolygonVertices);\r\n        // Perform welding and copy vertices into local buffer.\r\n        const ps = b2PolygonShape.Set_s_ps;\r\n        let tempCount = 0;\r\n        for (let i = 0; i < n; ++i) {\r\n            const /*b2Vec2*/ v = vertices[start + i];\r\n            let /*bool*/ unique = true;\r\n            for (let /*int32*/ j = 0; j < tempCount; ++j) {\r\n                if (b2Vec2.DistanceSquaredVV(v, ps[j]) < ((0.5 * b2_linearSlop) * (0.5 * b2_linearSlop))) {\r\n                    unique = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (unique) {\r\n                ps[tempCount++].Copy(v); // ps[tempCount++] = v;\r\n            }\r\n        }\r\n        n = tempCount;\r\n        if (n < 3) {\r\n            // Polygon is degenerate.\r\n            ///b2Assert(false);\r\n            return this.SetAsBox(1.0, 1.0);\r\n        }\r\n        // Create the convex hull using the Gift wrapping algorithm\r\n        // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\r\n        // Find the right most point on the hull\r\n        let i0 = 0;\r\n        let x0 = ps[0].x;\r\n        for (let i = 1; i < n; ++i) {\r\n            const x = ps[i].x;\r\n            if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\r\n                i0 = i;\r\n                x0 = x;\r\n            }\r\n        }\r\n        const hull = b2PolygonShape.Set_s_hull;\r\n        let m = 0;\r\n        let ih = i0;\r\n        for (;;) {\r\n            hull[m] = ih;\r\n            let ie = 0;\r\n            for (let j = 1; j < n; ++j) {\r\n                if (ie === ih) {\r\n                    ie = j;\r\n                    continue;\r\n                }\r\n                const r = b2Vec2.SubVV(ps[ie], ps[hull[m]], b2PolygonShape.Set_s_r);\r\n                const v = b2Vec2.SubVV(ps[j], ps[hull[m]], b2PolygonShape.Set_s_v);\r\n                const c = b2Vec2.CrossVV(r, v);\r\n                if (c < 0) {\r\n                    ie = j;\r\n                }\r\n                // Collinearity check\r\n                if (c === 0 && v.LengthSquared() > r.LengthSquared()) {\r\n                    ie = j;\r\n                }\r\n            }\r\n            ++m;\r\n            ih = ie;\r\n            if (ie === i0) {\r\n                break;\r\n            }\r\n        }\r\n        this.m_count = m;\r\n        // Copy vertices.\r\n        for (let i = 0; i < m; ++i) {\r\n            this.m_vertices[i].Copy(ps[hull[i]]);\r\n        }\r\n        // Compute normals. Ensure the edges have non-zero length.\r\n        for (let i = 0; i < m; ++i) {\r\n            const vertexi1 = this.m_vertices[i];\r\n            const vertexi2 = this.m_vertices[(i + 1) % m];\r\n            const edge = b2Vec2.SubVV(vertexi2, vertexi1, b2Vec2.s_t0); // edge uses s_t0\r\n            ///b2Assert(edge.LengthSquared() > b2_epsilon_sq);\r\n            b2Vec2.CrossVOne(edge, this.m_normals[i]).SelfNormalize();\r\n        }\r\n        // Compute the polygon centroid.\r\n        b2PolygonShape.ComputeCentroid(this.m_vertices, m, this.m_centroid);\r\n        return this;\r\n    }\r\n    SetAsArray(vertices, count = vertices.length) {\r\n        return this.Set(vertices, count);\r\n    }\r\n    /// Build vertices to represent an axis-aligned box or an oriented box.\r\n    /// @param hx the half-width.\r\n    /// @param hy the half-height.\r\n    /// @param center the center of the box in local coordinates.\r\n    /// @param angle the rotation of the box in local coordinates.\r\n    SetAsBox(hx, hy, center, angle = 0) {\r\n        this.m_count = 4;\r\n        this.m_vertices[0].Set((-hx), (-hy));\r\n        this.m_vertices[1].Set(hx, (-hy));\r\n        this.m_vertices[2].Set(hx, hy);\r\n        this.m_vertices[3].Set((-hx), hy);\r\n        this.m_normals[0].Set(0, (-1));\r\n        this.m_normals[1].Set(1, 0);\r\n        this.m_normals[2].Set(0, 1);\r\n        this.m_normals[3].Set((-1), 0);\r\n        this.m_centroid.SetZero();\r\n        if (center instanceof b2Vec2) {\r\n            this.m_centroid.Copy(center);\r\n            const xf = new b2Transform();\r\n            xf.SetPosition(center);\r\n            xf.SetRotationAngle(angle);\r\n            // Transform vertices and normals.\r\n            for (let i = 0; i < this.m_count; ++i) {\r\n                b2Transform.MulXV(xf, this.m_vertices[i], this.m_vertices[i]);\r\n                b2Rot.MulRV(xf.q, this.m_normals[i], this.m_normals[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    TestPoint(xf, p) {\r\n        const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.TestPoint_s_pLocal);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\r\n            if (dot > 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.ComputeDistance_s_pLocal);\r\n        let maxDistance = -b2_maxFloat;\r\n        const normalForMaxDistance = b2PolygonShape.ComputeDistance_s_normalForMaxDistance.Copy(pLocal);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\r\n            if (dot > maxDistance) {\r\n                maxDistance = dot;\r\n                normalForMaxDistance.Copy(this.m_normals[i]);\r\n            }\r\n        }\r\n        if (maxDistance > 0) {\r\n            const minDistance = b2PolygonShape.ComputeDistance_s_minDistance.Copy(normalForMaxDistance);\r\n            let minDistance2 = maxDistance * maxDistance;\r\n            for (let i = 0; i < this.m_count; ++i) {\r\n                const distance = b2Vec2.SubVV(pLocal, this.m_vertices[i], b2PolygonShape.ComputeDistance_s_distance);\r\n                const distance2 = distance.LengthSquared();\r\n                if (minDistance2 > distance2) {\r\n                    minDistance.Copy(distance);\r\n                    minDistance2 = distance2;\r\n                }\r\n            }\r\n            b2Rot.MulRV(xf.q, minDistance, normal);\r\n            normal.Normalize();\r\n            return Math.sqrt(minDistance2);\r\n        }\r\n        else {\r\n            b2Rot.MulRV(xf.q, normalForMaxDistance, normal);\r\n            return maxDistance;\r\n        }\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        // Put the ray into the polygon's frame of reference.\r\n        const p1 = b2Transform.MulTXV(xf, input.p1, b2PolygonShape.RayCast_s_p1);\r\n        const p2 = b2Transform.MulTXV(xf, input.p2, b2PolygonShape.RayCast_s_p2);\r\n        const d = b2Vec2.SubVV(p2, p1, b2PolygonShape.RayCast_s_d);\r\n        let lower = 0, upper = input.maxFraction;\r\n        let index = -1;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            // p = p1 + a * d\r\n            // dot(normal, p - v) = 0\r\n            // dot(normal, p1 - v) + a * dot(normal, d) = 0\r\n            const numerator = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(this.m_vertices[i], p1, b2Vec2.s_t0));\r\n            const denominator = b2Vec2.DotVV(this.m_normals[i], d);\r\n            if (denominator === 0) {\r\n                if (numerator < 0) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                // Note: we want this predicate without division:\r\n                // lower < numerator / denominator, where denominator < 0\r\n                // Since denominator < 0, we have to flip the inequality:\r\n                // lower < numerator / denominator <==> denominator * lower > numerator.\r\n                if (denominator < 0 && numerator < lower * denominator) {\r\n                    // Increase lower.\r\n                    // The segment enters this half-space.\r\n                    lower = numerator / denominator;\r\n                    index = i;\r\n                }\r\n                else if (denominator > 0 && numerator < upper * denominator) {\r\n                    // Decrease upper.\r\n                    // The segment exits this half-space.\r\n                    upper = numerator / denominator;\r\n                }\r\n            }\r\n            // The use of epsilon here causes the assert on lower to trip\r\n            // in some cases. Apparently the use of epsilon was to make edge\r\n            // shapes work, but now those are handled separately.\r\n            // if (upper < lower - b2_epsilon)\r\n            if (upper < lower) {\r\n                return false;\r\n            }\r\n        }\r\n        ///b2Assert(0 <= lower && lower <= input.maxFraction);\r\n        if (index >= 0) {\r\n            output.fraction = lower;\r\n            b2Rot.MulRV(xf.q, this.m_normals[index], output.normal);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        const lower = b2Transform.MulXV(xf, this.m_vertices[0], aabb.lowerBound);\r\n        const upper = aabb.upperBound.Copy(lower);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const v = b2Transform.MulXV(xf, this.m_vertices[i], b2PolygonShape.ComputeAABB_s_v);\r\n            b2Vec2.MinV(v, lower, lower);\r\n            b2Vec2.MaxV(v, upper, upper);\r\n        }\r\n        const r = this.m_radius;\r\n        lower.SelfSubXY(r, r);\r\n        upper.SelfAddXY(r, r);\r\n    }\r\n    ComputeMass(massData, density) {\r\n        // Polygon mass, centroid, and inertia.\r\n        // Let rho be the polygon density in mass per unit area.\r\n        // Then:\r\n        // mass = rho * int(dA)\r\n        // centroid.x = (1/mass) * rho * int(x * dA)\r\n        // centroid.y = (1/mass) * rho * int(y * dA)\r\n        // I = rho * int((x*x + y*y) * dA)\r\n        //\r\n        // We can compute these integrals by summing all the integrals\r\n        // for each triangle of the polygon. To evaluate the integral\r\n        // for a single triangle, we make a change of variables to\r\n        // the (u,v) coordinates of the triangle:\r\n        // x = x0 + e1x * u + e2x * v\r\n        // y = y0 + e1y * u + e2y * v\r\n        // where 0 <= u && 0 <= v && u + v <= 1.\r\n        //\r\n        // We integrate u from [0,1-v] and then v from [0,1].\r\n        // We also need to use the Jacobian of the transformation:\r\n        // D = cross(e1, e2)\r\n        //\r\n        // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\r\n        //\r\n        // The rest of the derivation is handled by computer algebra.\r\n        ///b2Assert(this.m_count >= 3);\r\n        const center = b2PolygonShape.ComputeMass_s_center.SetZero();\r\n        let area = 0;\r\n        let I = 0;\r\n        // s is the reference point for forming triangles.\r\n        // It's location doesn't change the result (except for rounding error).\r\n        const s = b2PolygonShape.ComputeMass_s_s.SetZero();\r\n        // This code would put the reference point inside the polygon.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            s.SelfAdd(this.m_vertices[i]);\r\n        }\r\n        s.SelfMul(1 / this.m_count);\r\n        const k_inv3 = 1 / 3;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            // Triangle vertices.\r\n            const e1 = b2Vec2.SubVV(this.m_vertices[i], s, b2PolygonShape.ComputeMass_s_e1);\r\n            const e2 = b2Vec2.SubVV(this.m_vertices[(i + 1) % this.m_count], s, b2PolygonShape.ComputeMass_s_e2);\r\n            const D = b2Vec2.CrossVV(e1, e2);\r\n            const triangleArea = 0.5 * D;\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            center.SelfAdd(b2Vec2.MulSV(triangleArea * k_inv3, b2Vec2.AddVV(e1, e2, b2Vec2.s_t0), b2Vec2.s_t1));\r\n            const ex1 = e1.x;\r\n            const ey1 = e1.y;\r\n            const ex2 = e2.x;\r\n            const ey2 = e2.y;\r\n            const intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\r\n            const inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\r\n            I += (0.25 * k_inv3 * D) * (intx2 + inty2);\r\n        }\r\n        // Total mass\r\n        massData.mass = density * area;\r\n        // Center of mass\r\n        ///b2Assert(area > b2_epsilon);\r\n        center.SelfMul(1 / area);\r\n        b2Vec2.AddVV(center, s, massData.center);\r\n        // Inertia tensor relative to the local origin (point s).\r\n        massData.I = density * I;\r\n        // Shift to center of mass then to original body origin.\r\n        massData.I += massData.mass * (b2Vec2.DotVV(massData.center, massData.center) - b2Vec2.DotVV(center, center));\r\n    }\r\n    Validate() {\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const i1 = i;\r\n            const i2 = (i + 1) % this.m_count;\r\n            const p = this.m_vertices[i1];\r\n            const e = b2Vec2.SubVV(this.m_vertices[i2], p, b2PolygonShape.Validate_s_e);\r\n            for (let j = 0; j < this.m_count; ++j) {\r\n                if (j === i1 || j === i2) {\r\n                    continue;\r\n                }\r\n                const v = b2Vec2.SubVV(this.m_vertices[j], p, b2PolygonShape.Validate_s_v);\r\n                const c = b2Vec2.CrossVV(e, v);\r\n                if (c < 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = this.m_vertices;\r\n        proxy.m_count = this.m_count;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        // Transform plane into shape co-ordinates\r\n        const normalL = b2Rot.MulTRV(xf.q, normal, b2PolygonShape.ComputeSubmergedArea_s_normalL);\r\n        const offsetL = offset - b2Vec2.DotVV(normal, xf.p);\r\n        const depths = b2PolygonShape.ComputeSubmergedArea_s_depths;\r\n        let diveCount = 0;\r\n        let intoIndex = -1;\r\n        let outoIndex = -1;\r\n        let lastSubmerged = false;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            depths[i] = b2Vec2.DotVV(normalL, this.m_vertices[i]) - offsetL;\r\n            const isSubmerged = depths[i] < (-b2_epsilon);\r\n            if (i > 0) {\r\n                if (isSubmerged) {\r\n                    if (!lastSubmerged) {\r\n                        intoIndex = i - 1;\r\n                        diveCount++;\r\n                    }\r\n                }\r\n                else {\r\n                    if (lastSubmerged) {\r\n                        outoIndex = i - 1;\r\n                        diveCount++;\r\n                    }\r\n                }\r\n            }\r\n            lastSubmerged = isSubmerged;\r\n        }\r\n        switch (diveCount) {\r\n            case 0:\r\n                if (lastSubmerged) {\r\n                    // Completely submerged\r\n                    const md = b2PolygonShape.ComputeSubmergedArea_s_md;\r\n                    this.ComputeMass(md, 1);\r\n                    b2Transform.MulXV(xf, md.center, c);\r\n                    return md.mass;\r\n                }\r\n                else {\r\n                    // Completely dry\r\n                    return 0;\r\n                }\r\n            case 1:\r\n                if (intoIndex === (-1)) {\r\n                    intoIndex = this.m_count - 1;\r\n                }\r\n                else {\r\n                    outoIndex = this.m_count - 1;\r\n                }\r\n                break;\r\n        }\r\n        const intoIndex2 = ((intoIndex + 1) % this.m_count);\r\n        const outoIndex2 = ((outoIndex + 1) % this.m_count);\r\n        const intoLamdda = (0 - depths[intoIndex]) / (depths[intoIndex2] - depths[intoIndex]);\r\n        const outoLamdda = (0 - depths[outoIndex]) / (depths[outoIndex2] - depths[outoIndex]);\r\n        const intoVec = b2PolygonShape.ComputeSubmergedArea_s_intoVec.Set(this.m_vertices[intoIndex].x * (1 - intoLamdda) + this.m_vertices[intoIndex2].x * intoLamdda, this.m_vertices[intoIndex].y * (1 - intoLamdda) + this.m_vertices[intoIndex2].y * intoLamdda);\r\n        const outoVec = b2PolygonShape.ComputeSubmergedArea_s_outoVec.Set(this.m_vertices[outoIndex].x * (1 - outoLamdda) + this.m_vertices[outoIndex2].x * outoLamdda, this.m_vertices[outoIndex].y * (1 - outoLamdda) + this.m_vertices[outoIndex2].y * outoLamdda);\r\n        // Initialize accumulator\r\n        let area = 0;\r\n        const center = b2PolygonShape.ComputeSubmergedArea_s_center.SetZero();\r\n        let p2 = this.m_vertices[intoIndex2];\r\n        let p3;\r\n        // An awkward loop from intoIndex2+1 to outIndex2\r\n        let i = intoIndex2;\r\n        while (i !== outoIndex2) {\r\n            i = (i + 1) % this.m_count;\r\n            if (i === outoIndex2)\r\n                p3 = outoVec;\r\n            else\r\n                p3 = this.m_vertices[i];\r\n            const triangleArea = 0.5 * ((p2.x - intoVec.x) * (p3.y - intoVec.y) - (p2.y - intoVec.y) * (p3.x - intoVec.x));\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            center.x += triangleArea * (intoVec.x + p2.x + p3.x) / 3;\r\n            center.y += triangleArea * (intoVec.y + p2.y + p3.y) / 3;\r\n            p2 = p3;\r\n        }\r\n        // Normalize and transform centroid\r\n        center.SelfMul(1 / area);\r\n        b2Transform.MulXV(xf, center, c);\r\n        return area;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2PolygonShape = new b2PolygonShape();\\n\");\r\n        log(\"    const vs: b2Vec2[] = b2Vec2.MakeArray(%d);\\n\", b2_maxPolygonVertices);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            log(\"    vs[%d].Set(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\r\n        }\r\n        log(\"    shape.Set(vs, %d);\\n\", this.m_count);\r\n    }\r\n    static ComputeCentroid(vs, count, out) {\r\n        ///b2Assert(count >= 3);\r\n        const c = out;\r\n        c.SetZero();\r\n        let area = 0;\r\n        // s is the reference point for forming triangles.\r\n        // It's location doesn't change the result (except for rounding error).\r\n        const pRef = b2PolygonShape.ComputeCentroid_s_pRef.SetZero();\r\n        /*\r\n    #if 0\r\n        // This code would put the reference point inside the polygon.\r\n        for (let i: number = 0; i < count; ++i) {\r\n          pRef.SelfAdd(vs[i]);\r\n        }\r\n        pRef.SelfMul(1 / count);\r\n    #endif\r\n        */\r\n        const inv3 = 1 / 3;\r\n        for (let i = 0; i < count; ++i) {\r\n            // Triangle vertices.\r\n            const p1 = pRef;\r\n            const p2 = vs[i];\r\n            const p3 = vs[(i + 1) % count];\r\n            const e1 = b2Vec2.SubVV(p2, p1, b2PolygonShape.ComputeCentroid_s_e1);\r\n            const e2 = b2Vec2.SubVV(p3, p1, b2PolygonShape.ComputeCentroid_s_e2);\r\n            const D = b2Vec2.CrossVV(e1, e2);\r\n            const triangleArea = 0.5 * D;\r\n            area += triangleArea;\r\n            // Area weighted centroid\r\n            c.x += triangleArea * inv3 * (p1.x + p2.x + p3.x);\r\n            c.y += triangleArea * inv3 * (p1.y + p2.y + p3.y);\r\n        }\r\n        // Centroid\r\n        ///b2Assert(area > b2_epsilon);\r\n        c.SelfMul(1 / area);\r\n        return c;\r\n    }\r\n}\r\n/// Create a convex hull from the given array of points.\r\n/// The count must be in the range [3, b2_maxPolygonVertices].\r\n/// @warning the points may be re-ordered, even if they form a convex polygon\r\n/// @warning collinear points are handled but not removed. Collinear points\r\n/// may lead to poor stacking behavior.\r\nb2PolygonShape.Set_s_ps = b2Vec2.MakeArray(b2_maxPolygonVertices);\r\nb2PolygonShape.Set_s_hull = b2MakeNumberArray(b2_maxPolygonVertices);\r\nb2PolygonShape.Set_s_r = new b2Vec2();\r\nb2PolygonShape.Set_s_v = new b2Vec2();\r\n/// @see b2Shape::TestPoint\r\nb2PolygonShape.TestPoint_s_pLocal = new b2Vec2();\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2PolygonShape.ComputeDistance_s_pLocal = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_normalForMaxDistance = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_minDistance = new b2Vec2();\r\nb2PolygonShape.ComputeDistance_s_distance = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\nb2PolygonShape.RayCast_s_p1 = new b2Vec2();\r\nb2PolygonShape.RayCast_s_p2 = new b2Vec2();\r\nb2PolygonShape.RayCast_s_d = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2PolygonShape.ComputeAABB_s_v = new b2Vec2();\r\n/// @see b2Shape::ComputeMass\r\nb2PolygonShape.ComputeMass_s_center = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_s = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_e1 = new b2Vec2();\r\nb2PolygonShape.ComputeMass_s_e2 = new b2Vec2();\r\nb2PolygonShape.Validate_s_e = new b2Vec2();\r\nb2PolygonShape.Validate_s_v = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_normalL = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_depths = b2MakeNumberArray(b2_maxPolygonVertices);\r\nb2PolygonShape.ComputeSubmergedArea_s_md = new b2MassData();\r\nb2PolygonShape.ComputeSubmergedArea_s_intoVec = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_outoVec = new b2Vec2();\r\nb2PolygonShape.ComputeSubmergedArea_s_center = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_pRef = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_e1 = new b2Vec2();\r\nb2PolygonShape.ComputeCentroid_s_e2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_polygonRadius } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\n/// A line segment (edge) shape. These can be connected in chains or loops\r\n/// to other edge shapes. The connectivity information is used to ensure\r\n/// correct contact normals.\r\nexport class b2EdgeShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_edgeShape, b2_polygonRadius);\r\n        this.m_vertex1 = new b2Vec2();\r\n        this.m_vertex2 = new b2Vec2();\r\n        this.m_vertex0 = new b2Vec2();\r\n        this.m_vertex3 = new b2Vec2();\r\n        this.m_hasVertex0 = false;\r\n        this.m_hasVertex3 = false;\r\n    }\r\n    /// Set this as an isolated edge.\r\n    Set(v1, v2) {\r\n        this.m_vertex1.Copy(v1);\r\n        this.m_vertex2.Copy(v2);\r\n        this.m_hasVertex0 = false;\r\n        this.m_hasVertex3 = false;\r\n        return this;\r\n    }\r\n    /// Implement b2Shape.\r\n    Clone() {\r\n        return new b2EdgeShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        ///b2Assert(other instanceof b2EdgeShape);\r\n        this.m_vertex1.Copy(other.m_vertex1);\r\n        this.m_vertex2.Copy(other.m_vertex2);\r\n        this.m_vertex0.Copy(other.m_vertex0);\r\n        this.m_vertex3.Copy(other.m_vertex3);\r\n        this.m_hasVertex0 = other.m_hasVertex0;\r\n        this.m_hasVertex3 = other.m_hasVertex3;\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        return 1;\r\n    }\r\n    /// @see b2Shape::TestPoint\r\n    TestPoint(xf, p) {\r\n        return false;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeDistance_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeDistance_s_v2);\r\n        const d = b2Vec2.SubVV(p, v1, b2EdgeShape.ComputeDistance_s_d);\r\n        const s = b2Vec2.SubVV(v2, v1, b2EdgeShape.ComputeDistance_s_s);\r\n        const ds = b2Vec2.DotVV(d, s);\r\n        if (ds > 0) {\r\n            const s2 = b2Vec2.DotVV(s, s);\r\n            if (ds > s2) {\r\n                b2Vec2.SubVV(p, v2, d);\r\n            }\r\n            else {\r\n                d.SelfMulSub(ds / s2, s);\r\n            }\r\n        }\r\n        normal.Copy(d);\r\n        return normal.Normalize();\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        // Put the ray into the edge's frame of reference.\r\n        const p1 = b2Transform.MulTXV(xf, input.p1, b2EdgeShape.RayCast_s_p1);\r\n        const p2 = b2Transform.MulTXV(xf, input.p2, b2EdgeShape.RayCast_s_p2);\r\n        const d = b2Vec2.SubVV(p2, p1, b2EdgeShape.RayCast_s_d);\r\n        const v1 = this.m_vertex1;\r\n        const v2 = this.m_vertex2;\r\n        const e = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_e);\r\n        const normal = output.normal.Set(e.y, -e.x).SelfNormalize();\r\n        // q = p1 + t * d\r\n        // dot(normal, q - v1) = 0\r\n        // dot(normal, p1 - v1) + t * dot(normal, d) = 0\r\n        const numerator = b2Vec2.DotVV(normal, b2Vec2.SubVV(v1, p1, b2Vec2.s_t0));\r\n        const denominator = b2Vec2.DotVV(normal, d);\r\n        if (denominator === 0) {\r\n            return false;\r\n        }\r\n        const t = numerator / denominator;\r\n        if (t < 0 || input.maxFraction < t) {\r\n            return false;\r\n        }\r\n        const q = b2Vec2.AddVMulSV(p1, t, d, b2EdgeShape.RayCast_s_q);\r\n        // q = v1 + s * r\r\n        // s = dot(q - v1, r) / dot(r, r)\r\n        const r = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_r);\r\n        const rr = b2Vec2.DotVV(r, r);\r\n        if (rr === 0) {\r\n            return false;\r\n        }\r\n        const s = b2Vec2.DotVV(b2Vec2.SubVV(q, v1, b2Vec2.s_t0), r) / rr;\r\n        if (s < 0 || 1 < s) {\r\n            return false;\r\n        }\r\n        output.fraction = t;\r\n        b2Rot.MulRV(xf.q, output.normal, output.normal);\r\n        if (numerator > 0) {\r\n            output.normal.SelfNeg();\r\n        }\r\n        return true;\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeAABB_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeAABB_s_v2);\r\n        b2Vec2.MinV(v1, v2, aabb.lowerBound);\r\n        b2Vec2.MaxV(v1, v2, aabb.upperBound);\r\n        const r = this.m_radius;\r\n        aabb.lowerBound.SelfSubXY(r, r);\r\n        aabb.upperBound.SelfAddXY(r, r);\r\n    }\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        massData.mass = 0;\r\n        b2Vec2.MidVV(this.m_vertex1, this.m_vertex2, massData.center);\r\n        massData.I = 0;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_vertex1);\r\n        proxy.m_vertices[1].Copy(this.m_vertex2);\r\n        proxy.m_count = 2;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        c.SetZero();\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2EdgeShape = new b2EdgeShape();\\n\");\r\n        log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\r\n        log(\"    shape.m_vertex0.Set(%.15f, %.15f);\\n\", this.m_vertex0.x, this.m_vertex0.y);\r\n        log(\"    shape.m_vertex1.Set(%.15f, %.15f);\\n\", this.m_vertex1.x, this.m_vertex1.y);\r\n        log(\"    shape.m_vertex2.Set(%.15f, %.15f);\\n\", this.m_vertex2.x, this.m_vertex2.y);\r\n        log(\"    shape.m_vertex3.Set(%.15f, %.15f);\\n\", this.m_vertex3.x, this.m_vertex3.y);\r\n        log(\"    shape.m_hasVertex0 = %s;\\n\", this.m_hasVertex0);\r\n        log(\"    shape.m_hasVertex3 = %s;\\n\", this.m_hasVertex3);\r\n    }\r\n}\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2EdgeShape.ComputeDistance_s_v1 = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_v2 = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_d = new b2Vec2();\r\nb2EdgeShape.ComputeDistance_s_s = new b2Vec2();\r\n// #endif\r\n/// Implement b2Shape.\r\n// p = p1 + t * d\r\n// v = v1 + s * e\r\n// p1 + t * d = v1 + s * e\r\n// s * e - t * d = p1 - v1\r\nb2EdgeShape.RayCast_s_p1 = new b2Vec2();\r\nb2EdgeShape.RayCast_s_p2 = new b2Vec2();\r\nb2EdgeShape.RayCast_s_d = new b2Vec2();\r\nb2EdgeShape.RayCast_s_e = new b2Vec2();\r\nb2EdgeShape.RayCast_s_q = new b2Vec2();\r\nb2EdgeShape.RayCast_s_r = new b2Vec2();\r\n/// @see b2Shape::ComputeAABB\r\nb2EdgeShape.ComputeAABB_s_v1 = new b2Vec2();\r\nb2EdgeShape.ComputeAABB_s_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_polygonRadius, b2_maxPolygonVertices } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Shape, b2ShapeType } from \"./b2Shape\";\r\nimport { b2EdgeShape } from \"./b2EdgeShape\";\r\n/// A chain shape is a free form sequence of line segments.\r\n/// The chain has two-sided collision, so you can use inside and outside collision.\r\n/// Therefore, you may use any winding order.\r\n/// Since there may be many vertices, they are allocated using b2Alloc.\r\n/// Connectivity information is used to create smooth collisions.\r\n/// WARNING: The chain will not collide properly if there are self-intersections.\r\nexport class b2ChainShape extends b2Shape {\r\n    constructor() {\r\n        super(b2ShapeType.e_chainShape, b2_polygonRadius);\r\n        this.m_count = 0;\r\n        this.m_prevVertex = new b2Vec2();\r\n        this.m_nextVertex = new b2Vec2();\r\n        this.m_hasPrevVertex = false;\r\n        this.m_hasNextVertex = false;\r\n    }\r\n    /// Create a loop. This automatically adjusts connectivity.\r\n    /// @param vertices an array of vertices, these are copied\r\n    /// @param count the vertex count\r\n    CreateLoop(vertices, count = vertices.length) {\r\n        ///b2Assert(this.m_vertices === null && this.m_count === 0);\r\n        ///b2Assert(count >= 3);\r\n        ///for (let i: number = 1; i < count; ++i) {\r\n        ///  const v1 = vertices[i - 1];\r\n        ///  const v2 = vertices[i];\r\n        ///  // If the code crashes here, it means your vertices are too close together.\r\n        ///  b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\r\n        ///}\r\n        this.m_count = count + 1;\r\n        this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n        for (let i = 0; i < count; ++i) {\r\n            this.m_vertices[i].Copy(vertices[i]);\r\n        }\r\n        this.m_vertices[count].Copy(this.m_vertices[0]);\r\n        this.m_prevVertex.Copy(this.m_vertices[this.m_count - 2]);\r\n        this.m_nextVertex.Copy(this.m_vertices[1]);\r\n        this.m_hasPrevVertex = true;\r\n        this.m_hasNextVertex = true;\r\n        return this;\r\n    }\r\n    /// Create a chain with isolated end vertices.\r\n    /// @param vertices an array of vertices, these are copied\r\n    /// @param count the vertex count\r\n    CreateChain(vertices, count = vertices.length) {\r\n        ///b2Assert(this.m_vertices === null && this.m_count === 0);\r\n        ///b2Assert(count >= 2);\r\n        ///for (let i: number = 1; i < count; ++i) {\r\n        ///  const v1 = vertices[i - 1];\r\n        ///  const v2 = vertices[i];\r\n        ///  // If the code crashes here, it means your vertices are too close together.\r\n        ///  b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\r\n        ///}\r\n        this.m_count = count;\r\n        this.m_vertices = b2Vec2.MakeArray(count);\r\n        for (let i = 0; i < count; ++i) {\r\n            this.m_vertices[i].Copy(vertices[i]);\r\n        }\r\n        this.m_hasPrevVertex = false;\r\n        this.m_hasNextVertex = false;\r\n        this.m_prevVertex.SetZero();\r\n        this.m_nextVertex.SetZero();\r\n        return this;\r\n    }\r\n    /// Establish connectivity to a vertex that precedes the first vertex.\r\n    /// Don't call this for loops.\r\n    SetPrevVertex(prevVertex) {\r\n        this.m_prevVertex.Copy(prevVertex);\r\n        this.m_hasPrevVertex = true;\r\n        return this;\r\n    }\r\n    /// Establish connectivity to a vertex that follows the last vertex.\r\n    /// Don't call this for loops.\r\n    SetNextVertex(nextVertex) {\r\n        this.m_nextVertex.Copy(nextVertex);\r\n        this.m_hasNextVertex = true;\r\n        return this;\r\n    }\r\n    /// Implement b2Shape. Vertices are cloned using b2Alloc.\r\n    Clone() {\r\n        return new b2ChainShape().Copy(this);\r\n    }\r\n    Copy(other) {\r\n        super.Copy(other);\r\n        ///b2Assert(other instanceof b2ChainShape);\r\n        this.CreateChain(other.m_vertices, other.m_count);\r\n        this.m_prevVertex.Copy(other.m_prevVertex);\r\n        this.m_nextVertex.Copy(other.m_nextVertex);\r\n        this.m_hasPrevVertex = other.m_hasPrevVertex;\r\n        this.m_hasNextVertex = other.m_hasNextVertex;\r\n        return this;\r\n    }\r\n    /// @see b2Shape::GetChildCount\r\n    GetChildCount() {\r\n        // edge count = vertex count - 1\r\n        return this.m_count - 1;\r\n    }\r\n    /// Get a child edge.\r\n    GetChildEdge(edge, index) {\r\n        ///b2Assert(0 <= index && index < this.m_count - 1);\r\n        edge.m_type = b2ShapeType.e_edgeShape;\r\n        edge.m_radius = this.m_radius;\r\n        edge.m_vertex1.Copy(this.m_vertices[index]);\r\n        edge.m_vertex2.Copy(this.m_vertices[index + 1]);\r\n        if (index > 0) {\r\n            edge.m_vertex0.Copy(this.m_vertices[index - 1]);\r\n            edge.m_hasVertex0 = true;\r\n        }\r\n        else {\r\n            edge.m_vertex0.Copy(this.m_prevVertex);\r\n            edge.m_hasVertex0 = this.m_hasPrevVertex;\r\n        }\r\n        if (index < this.m_count - 2) {\r\n            edge.m_vertex3.Copy(this.m_vertices[index + 2]);\r\n            edge.m_hasVertex3 = true;\r\n        }\r\n        else {\r\n            edge.m_vertex3.Copy(this.m_nextVertex);\r\n            edge.m_hasVertex3 = this.m_hasNextVertex;\r\n        }\r\n    }\r\n    /// This always return false.\r\n    /// @see b2Shape::TestPoint\r\n    TestPoint(xf, p) {\r\n        return false;\r\n    }\r\n    ComputeDistance(xf, p, normal, childIndex) {\r\n        const edge = b2ChainShape.ComputeDistance_s_edgeShape;\r\n        this.GetChildEdge(edge, childIndex);\r\n        return edge.ComputeDistance(xf, p, normal, 0);\r\n    }\r\n    RayCast(output, input, xf, childIndex) {\r\n        ///b2Assert(childIndex < this.m_count);\r\n        const edgeShape = b2ChainShape.RayCast_s_edgeShape;\r\n        edgeShape.m_vertex1.Copy(this.m_vertices[childIndex]);\r\n        edgeShape.m_vertex2.Copy(this.m_vertices[(childIndex + 1) % this.m_count]);\r\n        return edgeShape.RayCast(output, input, xf, 0);\r\n    }\r\n    ComputeAABB(aabb, xf, childIndex) {\r\n        ///b2Assert(childIndex < this.m_count);\r\n        const vertexi1 = this.m_vertices[childIndex];\r\n        const vertexi2 = this.m_vertices[(childIndex + 1) % this.m_count];\r\n        const v1 = b2Transform.MulXV(xf, vertexi1, b2ChainShape.ComputeAABB_s_v1);\r\n        const v2 = b2Transform.MulXV(xf, vertexi2, b2ChainShape.ComputeAABB_s_v2);\r\n        b2Vec2.MinV(v1, v2, aabb.lowerBound);\r\n        b2Vec2.MaxV(v1, v2, aabb.upperBound);\r\n    }\r\n    /// Chains have zero mass.\r\n    /// @see b2Shape::ComputeMass\r\n    ComputeMass(massData, density) {\r\n        massData.mass = 0;\r\n        massData.center.SetZero();\r\n        massData.I = 0;\r\n    }\r\n    SetupDistanceProxy(proxy, index) {\r\n        ///b2Assert(0 <= index && index < this.m_count);\r\n        proxy.m_vertices = proxy.m_buffer;\r\n        proxy.m_vertices[0].Copy(this.m_vertices[index]);\r\n        if (index + 1 < this.m_count) {\r\n            proxy.m_vertices[1].Copy(this.m_vertices[index + 1]);\r\n        }\r\n        else {\r\n            proxy.m_vertices[1].Copy(this.m_vertices[0]);\r\n        }\r\n        proxy.m_count = 2;\r\n        proxy.m_radius = this.m_radius;\r\n    }\r\n    ComputeSubmergedArea(normal, offset, xf, c) {\r\n        c.SetZero();\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"    const shape: b2ChainShape = new b2ChainShape();\\n\");\r\n        log(\"    const vs: b2Vec2[] = b2Vec2.MakeArray(%d);\\n\", b2_maxPolygonVertices);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            log(\"    vs[%d].Set(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\r\n        }\r\n        log(\"    shape.CreateChain(vs, %d);\\n\", this.m_count);\r\n        log(\"    shape.m_prevVertex.Set(%.15f, %.15f);\\n\", this.m_prevVertex.x, this.m_prevVertex.y);\r\n        log(\"    shape.m_nextVertex.Set(%.15f, %.15f);\\n\", this.m_nextVertex.x, this.m_nextVertex.y);\r\n        log(\"    shape.m_hasPrevVertex = %s;\\n\", (this.m_hasPrevVertex) ? (\"true\") : (\"false\"));\r\n        log(\"    shape.m_hasNextVertex = %s;\\n\", (this.m_hasNextVertex) ? (\"true\") : (\"false\"));\r\n    }\r\n}\r\n// #if B2_ENABLE_PARTICLE\r\n/// @see b2Shape::ComputeDistance\r\nb2ChainShape.ComputeDistance_s_edgeShape = new b2EdgeShape();\r\n// #endif\r\n/// Implement b2Shape.\r\nb2ChainShape.RayCast_s_edgeShape = new b2EdgeShape();\r\n/// @see b2Shape::ComputeAABB\r\nb2ChainShape.ComputeAABB_s_v1 = new b2Vec2();\r\nb2ChainShape.ComputeAABB_s_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Vec2, b2Rot, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Shape, b2MassData } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2Fixture, b2FixtureDef } from \"./b2Fixture\";\r\n// #endif\r\n/// The body type.\r\n/// static: zero mass, zero velocity, may be manually moved\r\n/// kinematic: zero mass, non-zero velocity set by user, moved by solver\r\n/// dynamic: positive mass, non-zero velocity determined by forces, moved by solver\r\nexport var b2BodyType;\r\n(function (b2BodyType) {\r\n    b2BodyType[b2BodyType[\"b2_unknown\"] = -1] = \"b2_unknown\";\r\n    b2BodyType[b2BodyType[\"b2_staticBody\"] = 0] = \"b2_staticBody\";\r\n    b2BodyType[b2BodyType[\"b2_kinematicBody\"] = 1] = \"b2_kinematicBody\";\r\n    b2BodyType[b2BodyType[\"b2_dynamicBody\"] = 2] = \"b2_dynamicBody\";\r\n    // TODO_ERIN\r\n    // b2_bulletBody = 3\r\n})(b2BodyType || (b2BodyType = {}));\r\n/// A body definition holds all the data needed to construct a rigid body.\r\n/// You can safely re-use body definitions. Shapes are added to a body after construction.\r\nexport class b2BodyDef {\r\n    constructor() {\r\n        /// The body type: static, kinematic, or dynamic.\r\n        /// Note: if a dynamic body would have zero mass, the mass is set to one.\r\n        this.type = b2BodyType.b2_staticBody;\r\n        /// The world position of the body. Avoid creating bodies at the origin\r\n        /// since this can lead to many overlapping shapes.\r\n        this.position = new b2Vec2(0, 0);\r\n        /// The world angle of the body in radians.\r\n        this.angle = 0;\r\n        /// The linear velocity of the body's origin in world co-ordinates.\r\n        this.linearVelocity = new b2Vec2(0, 0);\r\n        /// The angular velocity of the body.\r\n        this.angularVelocity = 0;\r\n        /// Linear damping is use to reduce the linear velocity. The damping parameter\r\n        /// can be larger than 1.0f but the damping effect becomes sensitive to the\r\n        /// time step when the damping parameter is large.\r\n        this.linearDamping = 0;\r\n        /// Angular damping is use to reduce the angular velocity. The damping parameter\r\n        /// can be larger than 1.0f but the damping effect becomes sensitive to the\r\n        /// time step when the damping parameter is large.\r\n        this.angularDamping = 0;\r\n        /// Set this flag to false if this body should never fall asleep. Note that\r\n        /// this increases CPU usage.\r\n        this.allowSleep = true;\r\n        /// Is this body initially awake or sleeping?\r\n        this.awake = true;\r\n        /// Should this body be prevented from rotating? Useful for characters.\r\n        this.fixedRotation = false;\r\n        /// Is this a fast moving body that should be prevented from tunneling through\r\n        /// other moving bodies? Note that all bodies are prevented from tunneling through\r\n        /// kinematic and static bodies. This setting is only considered on dynamic bodies.\r\n        /// @warning You should use this flag sparingly since it increases processing time.\r\n        this.bullet = false;\r\n        /// Does this body start out active?\r\n        this.active = true;\r\n        /// Use this to store application specific body data.\r\n        this.userData = null;\r\n        /// Scale the gravity applied to this body.\r\n        this.gravityScale = 1;\r\n    }\r\n}\r\n/// A rigid body. These are created via b2World::CreateBody.\r\nexport class b2Body {\r\n    // #endif\r\n    constructor(bd, world) {\r\n        ///b2Assert(bd.position.IsValid());\r\n        ///b2Assert(bd.linearVelocity.IsValid());\r\n        ///b2Assert(b2IsValid(bd.angle));\r\n        ///b2Assert(b2IsValid(bd.angularVelocity));\r\n        ///b2Assert(b2IsValid(bd.gravityScale) && bd.gravityScale >= 0);\r\n        ///b2Assert(b2IsValid(bd.angularDamping) && bd.angularDamping >= 0);\r\n        ///b2Assert(b2IsValid(bd.linearDamping) && bd.linearDamping >= 0);\r\n        this.m_type = b2BodyType.b2_staticBody;\r\n        this.m_islandFlag = false;\r\n        this.m_awakeFlag = false;\r\n        this.m_autoSleepFlag = false;\r\n        this.m_bulletFlag = false;\r\n        this.m_fixedRotationFlag = false;\r\n        this.m_activeFlag = false;\r\n        this.m_toiFlag = false;\r\n        this.m_islandIndex = 0;\r\n        this.m_xf = new b2Transform(); // the body origin transform\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0 = new b2Transform();\r\n        // #endif\r\n        this.m_sweep = new b2Sweep(); // the swept motion for CCD\r\n        this.m_linearVelocity = new b2Vec2();\r\n        this.m_angularVelocity = 0;\r\n        this.m_force = new b2Vec2;\r\n        this.m_torque = 0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_fixtureList = null;\r\n        this.m_fixtureCount = 0;\r\n        this.m_jointList = null;\r\n        this.m_contactList = null;\r\n        this.m_mass = 1;\r\n        this.m_invMass = 1;\r\n        // Rotational inertia about the center of mass.\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_linearDamping = 0;\r\n        this.m_angularDamping = 0;\r\n        this.m_gravityScale = 1;\r\n        this.m_sleepTime = 0;\r\n        this.m_userData = null;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        if (bd.bullet) {\r\n            this.m_bulletFlag = true;\r\n        }\r\n        if (bd.fixedRotation) {\r\n            this.m_fixedRotationFlag = true;\r\n        }\r\n        if (bd.allowSleep) {\r\n            this.m_autoSleepFlag = true;\r\n        }\r\n        if (bd.awake) {\r\n            this.m_awakeFlag = true;\r\n        }\r\n        if (bd.active) {\r\n            this.m_activeFlag = true;\r\n        }\r\n        this.m_world = world;\r\n        this.m_xf.p.Copy(bd.position);\r\n        this.m_xf.q.SetAngle(bd.angle);\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0.Copy(this.m_xf);\r\n        // #endif\r\n        this.m_sweep.localCenter.SetZero();\r\n        this.m_sweep.c0.Copy(this.m_xf.p);\r\n        this.m_sweep.c.Copy(this.m_xf.p);\r\n        this.m_sweep.a0 = bd.angle;\r\n        this.m_sweep.a = bd.angle;\r\n        this.m_sweep.alpha0 = 0;\r\n        this.m_linearVelocity.Copy(bd.linearVelocity);\r\n        this.m_angularVelocity = bd.angularVelocity;\r\n        this.m_linearDamping = bd.linearDamping;\r\n        this.m_angularDamping = bd.angularDamping;\r\n        this.m_gravityScale = bd.gravityScale;\r\n        this.m_force.SetZero();\r\n        this.m_torque = 0;\r\n        this.m_sleepTime = 0;\r\n        this.m_type = bd.type;\r\n        if (bd.type === b2BodyType.b2_dynamicBody) {\r\n            this.m_mass = 1;\r\n            this.m_invMass = 1;\r\n        }\r\n        else {\r\n            this.m_mass = 0;\r\n            this.m_invMass = 0;\r\n        }\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_userData = bd.userData;\r\n        this.m_fixtureList = null;\r\n        this.m_fixtureCount = 0;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        // #endif\r\n    }\r\n    CreateFixture(a, b) {\r\n        if (a instanceof b2FixtureDef) {\r\n            return this.CreateFixtureDef(a);\r\n        }\r\n        else if ((a instanceof b2Shape) && (typeof (b) === \"number\")) {\r\n            return this.CreateFixtureShapeDensity(a, b);\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n    /// Creates a fixture and attach it to this body. Use this function if you need\r\n    /// to set some fixture parameters, like friction. Otherwise you can create the\r\n    /// fixture directly from a shape.\r\n    /// If the density is non-zero, this function automatically updates the mass of the body.\r\n    /// Contacts are not created until the next time step.\r\n    /// @param def the fixture definition.\r\n    /// @warning This function is locked during callbacks.\r\n    CreateFixtureDef(def) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (this.m_world.IsLocked()) {\r\n            return null;\r\n        }\r\n        const fixture = new b2Fixture(def, this);\r\n        fixture.Create(/*this,*/ def);\r\n        if (this.m_activeFlag) {\r\n            const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n            fixture.CreateProxies(broadPhase, this.m_xf);\r\n        }\r\n        fixture.m_next = this.m_fixtureList;\r\n        this.m_fixtureList = fixture;\r\n        ++this.m_fixtureCount;\r\n        // fixture.m_body = this;\r\n        // Adjust mass properties if needed.\r\n        if (fixture.m_density > 0) {\r\n            this.ResetMassData();\r\n        }\r\n        // Let the world know we have a new fixture. This will cause new contacts\r\n        // to be created at the beginning of the next time step.\r\n        this.m_world.m_newFixture = true;\r\n        return fixture;\r\n    }\r\n    CreateFixtureShapeDensity(shape, density = 0) {\r\n        const def = b2Body.CreateFixtureShapeDensity_s_def;\r\n        def.shape = shape;\r\n        def.density = density;\r\n        return this.CreateFixtureDef(def);\r\n    }\r\n    /// Destroy a fixture. This removes the fixture from the broad-phase and\r\n    /// destroys all contacts associated with this fixture. This will\r\n    /// automatically adjust the mass of the body if the body is dynamic and the\r\n    /// fixture has positive density.\r\n    /// All fixtures attached to a body are implicitly destroyed when the body is destroyed.\r\n    /// @param fixture the fixture to be removed.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyFixture(fixture) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (this.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        ///b2Assert(fixture.m_body === this);\r\n        // Remove the fixture from this body's singly linked list.\r\n        ///b2Assert(this.m_fixtureCount > 0);\r\n        let node = this.m_fixtureList;\r\n        let ppF = null;\r\n        // let found: boolean = false;\r\n        while (node !== null) {\r\n            if (node === fixture) {\r\n                if (ppF)\r\n                    ppF.m_next = fixture.m_next;\r\n                else\r\n                    this.m_fixtureList = fixture.m_next;\r\n                // found = true;\r\n                break;\r\n            }\r\n            ppF = node;\r\n            node = node.m_next;\r\n        }\r\n        // You tried to remove a shape that is not attached to this body.\r\n        ///b2Assert(found);\r\n        // Destroy any contacts associated with the fixture.\r\n        let edge = this.m_contactList;\r\n        while (edge) {\r\n            const c = edge.contact;\r\n            edge = edge.next;\r\n            const fixtureA = c.GetFixtureA();\r\n            const fixtureB = c.GetFixtureB();\r\n            if (fixture === fixtureA || fixture === fixtureB) {\r\n                // This destroys the contact and removes it from\r\n                // this body's contact list.\r\n                this.m_world.m_contactManager.Destroy(c);\r\n            }\r\n        }\r\n        if (this.m_activeFlag) {\r\n            const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n            fixture.DestroyProxies(broadPhase);\r\n        }\r\n        fixture.Destroy();\r\n        // fixture.m_body = null;\r\n        fixture.m_next = null;\r\n        --this.m_fixtureCount;\r\n        // Reset the mass data.\r\n        this.ResetMassData();\r\n    }\r\n    /// Set the position of the body's origin and rotation.\r\n    /// This breaks any contacts and wakes the other bodies.\r\n    /// Manipulating a body's transform may cause non-physical behavior.\r\n    /// @param position the world position of the body's local origin.\r\n    /// @param angle the world rotation in radians.\r\n    SetTransformVec(position, angle) {\r\n        this.SetTransformXY(position.x, position.y, angle);\r\n    }\r\n    SetTransformXY(x, y, angle) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (this.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        this.m_xf.q.SetAngle(angle);\r\n        this.m_xf.p.Set(x, y);\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_xf0.Copy(this.m_xf);\r\n        // #endif\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.a = angle;\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        this.m_sweep.a0 = angle;\r\n        const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            f.Synchronize(broadPhase, this.m_xf, this.m_xf);\r\n        }\r\n        this.m_world.m_contactManager.FindNewContacts();\r\n    }\r\n    SetTransform(xf) {\r\n        this.SetTransformVec(xf.p, xf.GetAngle());\r\n    }\r\n    /// Get the body transform for the body's origin.\r\n    /// @return the world transform of the body's origin.\r\n    GetTransform() {\r\n        return this.m_xf;\r\n    }\r\n    /// Get the world body origin position.\r\n    /// @return the world position of the body's origin.\r\n    GetPosition() {\r\n        return this.m_xf.p;\r\n    }\r\n    SetPosition(position) {\r\n        this.SetTransformVec(position, this.GetAngle());\r\n    }\r\n    SetPositionXY(x, y) {\r\n        this.SetTransformXY(x, y, this.GetAngle());\r\n    }\r\n    /// Get the angle in radians.\r\n    /// @return the current world rotation angle in radians.\r\n    GetAngle() {\r\n        return this.m_sweep.a;\r\n    }\r\n    SetAngle(angle) {\r\n        this.SetTransformVec(this.GetPosition(), angle);\r\n    }\r\n    /// Get the world position of the center of mass.\r\n    GetWorldCenter() {\r\n        return this.m_sweep.c;\r\n    }\r\n    /// Get the local position of the center of mass.\r\n    GetLocalCenter() {\r\n        return this.m_sweep.localCenter;\r\n    }\r\n    /// Set the linear velocity of the center of mass.\r\n    /// @param v the new linear velocity of the center of mass.\r\n    SetLinearVelocity(v) {\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            return;\r\n        }\r\n        if (b2Vec2.DotVV(v, v) > 0) {\r\n            this.SetAwake(true);\r\n        }\r\n        this.m_linearVelocity.Copy(v);\r\n    }\r\n    /// Get the linear velocity of the center of mass.\r\n    /// @return the linear velocity of the center of mass.\r\n    GetLinearVelocity() {\r\n        return this.m_linearVelocity;\r\n    }\r\n    /// Set the angular velocity.\r\n    /// @param omega the new angular velocity in radians/second.\r\n    SetAngularVelocity(w) {\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            return;\r\n        }\r\n        if (w * w > 0) {\r\n            this.SetAwake(true);\r\n        }\r\n        this.m_angularVelocity = w;\r\n    }\r\n    /// Get the angular velocity.\r\n    /// @return the angular velocity in radians/second.\r\n    GetAngularVelocity() {\r\n        return this.m_angularVelocity;\r\n    }\r\n    GetDefinition(bd) {\r\n        bd.type = this.GetType();\r\n        bd.allowSleep = this.m_autoSleepFlag;\r\n        bd.angle = this.GetAngle();\r\n        bd.angularDamping = this.m_angularDamping;\r\n        bd.gravityScale = this.m_gravityScale;\r\n        bd.angularVelocity = this.m_angularVelocity;\r\n        bd.fixedRotation = this.m_fixedRotationFlag;\r\n        bd.bullet = this.m_bulletFlag;\r\n        bd.awake = this.m_awakeFlag;\r\n        bd.linearDamping = this.m_linearDamping;\r\n        bd.linearVelocity.Copy(this.GetLinearVelocity());\r\n        bd.position.Copy(this.GetPosition());\r\n        bd.userData = this.GetUserData();\r\n        return bd;\r\n    }\r\n    /// Apply a force at a world point. If the force is not\r\n    /// applied at the center of mass, it will generate a torque and\r\n    /// affect the angular velocity. This wakes up the body.\r\n    /// @param force the world force vector, usually in Newtons (N).\r\n    /// @param point the world position of the point of application.\r\n    /// @param wake also wake up the body\r\n    ApplyForce(force, point, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_force.x += force.x;\r\n            this.m_force.y += force.y;\r\n            this.m_torque += ((point.x - this.m_sweep.c.x) * force.y - (point.y - this.m_sweep.c.y) * force.x);\r\n        }\r\n    }\r\n    /// Apply a force to the center of mass. This wakes up the body.\r\n    /// @param force the world force vector, usually in Newtons (N).\r\n    /// @param wake also wake up the body\r\n    ApplyForceToCenter(force, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_force.x += force.x;\r\n            this.m_force.y += force.y;\r\n        }\r\n    }\r\n    /// Apply a torque. This affects the angular velocity\r\n    /// without affecting the linear velocity of the center of mass.\r\n    /// This wakes up the body.\r\n    /// @param torque about the z-axis (out of the screen), usually in N-m.\r\n    /// @param wake also wake up the body\r\n    ApplyTorque(torque, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_torque += torque;\r\n        }\r\n    }\r\n    /// Apply an impulse at a point. This immediately modifies the velocity.\r\n    /// It also modifies the angular velocity if the point of application\r\n    /// is not at the center of mass. This wakes up the body.\r\n    /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n    /// @param point the world position of the point of application.\r\n    /// @param wake also wake up the body\r\n    ApplyLinearImpulse(impulse, point, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n            this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n            this.m_angularVelocity += this.m_invI * ((point.x - this.m_sweep.c.x) * impulse.y - (point.y - this.m_sweep.c.y) * impulse.x);\r\n        }\r\n    }\r\n    /// Apply an impulse at the center of gravity. This immediately modifies the velocity.\r\n    /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n    /// @param wake also wake up the body\r\n    ApplyLinearImpulseToCenter(impulse, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n            this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n        }\r\n    }\r\n    /// Apply an angular impulse.\r\n    /// @param impulse the angular impulse in units of kg*m*m/s\r\n    /// @param wake also wake up the body\r\n    ApplyAngularImpulse(impulse, wake = true) {\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        if (wake && !this.m_awakeFlag) {\r\n            this.SetAwake(true);\r\n        }\r\n        // Don't accumulate a force if the body is sleeping.\r\n        if (this.m_awakeFlag) {\r\n            this.m_angularVelocity += this.m_invI * impulse;\r\n        }\r\n    }\r\n    /// Get the total mass of the body.\r\n    /// @return the mass, usually in kilograms (kg).\r\n    GetMass() {\r\n        return this.m_mass;\r\n    }\r\n    /// Get the rotational inertia of the body about the local origin.\r\n    /// @return the rotational inertia, usually in kg-m^2.\r\n    GetInertia() {\r\n        return this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\r\n    }\r\n    /// Get the mass data of the body.\r\n    /// @return a struct containing the mass, inertia and center of the body.\r\n    GetMassData(data) {\r\n        data.mass = this.m_mass;\r\n        data.I = this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\r\n        data.center.Copy(this.m_sweep.localCenter);\r\n        return data;\r\n    }\r\n    SetMassData(massData) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (this.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        if (this.m_type !== b2BodyType.b2_dynamicBody) {\r\n            return;\r\n        }\r\n        this.m_invMass = 0;\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_mass = massData.mass;\r\n        if (this.m_mass <= 0) {\r\n            this.m_mass = 1;\r\n        }\r\n        this.m_invMass = 1 / this.m_mass;\r\n        if (massData.I > 0 && !this.m_fixedRotationFlag) {\r\n            this.m_I = massData.I - this.m_mass * b2Vec2.DotVV(massData.center, massData.center);\r\n            ///b2Assert(this.m_I > 0);\r\n            this.m_invI = 1 / this.m_I;\r\n        }\r\n        // Move center of mass.\r\n        const oldCenter = b2Body.SetMassData_s_oldCenter.Copy(this.m_sweep.c);\r\n        this.m_sweep.localCenter.Copy(massData.center);\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        // Update center of mass velocity.\r\n        b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\r\n    }\r\n    ResetMassData() {\r\n        // Compute mass data from shapes. Each shape has its own density.\r\n        this.m_mass = 0;\r\n        this.m_invMass = 0;\r\n        this.m_I = 0;\r\n        this.m_invI = 0;\r\n        this.m_sweep.localCenter.SetZero();\r\n        // Static and kinematic bodies have zero mass.\r\n        if (this.m_type === b2BodyType.b2_staticBody || this.m_type === b2BodyType.b2_kinematicBody) {\r\n            this.m_sweep.c0.Copy(this.m_xf.p);\r\n            this.m_sweep.c.Copy(this.m_xf.p);\r\n            this.m_sweep.a0 = this.m_sweep.a;\r\n            return;\r\n        }\r\n        ///b2Assert(this.m_type === b2BodyType.b2_dynamicBody);\r\n        // Accumulate mass over all fixtures.\r\n        const localCenter = b2Body.ResetMassData_s_localCenter.SetZero();\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            if (f.m_density === 0) {\r\n                continue;\r\n            }\r\n            const massData = f.GetMassData(b2Body.ResetMassData_s_massData);\r\n            this.m_mass += massData.mass;\r\n            localCenter.x += massData.center.x * massData.mass;\r\n            localCenter.y += massData.center.y * massData.mass;\r\n            this.m_I += massData.I;\r\n        }\r\n        // Compute center of mass.\r\n        if (this.m_mass > 0) {\r\n            this.m_invMass = 1 / this.m_mass;\r\n            localCenter.x *= this.m_invMass;\r\n            localCenter.y *= this.m_invMass;\r\n        }\r\n        else {\r\n            // Force all dynamic bodies to have a positive mass.\r\n            this.m_mass = 1;\r\n            this.m_invMass = 1;\r\n        }\r\n        if (this.m_I > 0 && !this.m_fixedRotationFlag) {\r\n            // Center the inertia about the center of mass.\r\n            this.m_I -= this.m_mass * b2Vec2.DotVV(localCenter, localCenter);\r\n            ///b2Assert(this.m_I > 0);\r\n            this.m_invI = 1 / this.m_I;\r\n        }\r\n        else {\r\n            this.m_I = 0;\r\n            this.m_invI = 0;\r\n        }\r\n        // Move center of mass.\r\n        const oldCenter = b2Body.ResetMassData_s_oldCenter.Copy(this.m_sweep.c);\r\n        this.m_sweep.localCenter.Copy(localCenter);\r\n        b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n        this.m_sweep.c0.Copy(this.m_sweep.c);\r\n        // Update center of mass velocity.\r\n        b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\r\n    }\r\n    /// Get the world coordinates of a point given the local coordinates.\r\n    /// @param localPoint a point on the body measured relative the the body's origin.\r\n    /// @return the same point expressed in world coordinates.\r\n    GetWorldPoint(localPoint, out) {\r\n        return b2Transform.MulXV(this.m_xf, localPoint, out);\r\n    }\r\n    /// Get the world coordinates of a vector given the local coordinates.\r\n    /// @param localVector a vector fixed in the body.\r\n    /// @return the same vector expressed in world coordinates.\r\n    GetWorldVector(localVector, out) {\r\n        return b2Rot.MulRV(this.m_xf.q, localVector, out);\r\n    }\r\n    /// Gets a local point relative to the body's origin given a world point.\r\n    /// @param a point in world coordinates.\r\n    /// @return the corresponding local point relative to the body's origin.\r\n    GetLocalPoint(worldPoint, out) {\r\n        return b2Transform.MulTXV(this.m_xf, worldPoint, out);\r\n    }\r\n    /// Gets a local vector given a world vector.\r\n    /// @param a vector in world coordinates.\r\n    /// @return the corresponding local vector.\r\n    GetLocalVector(worldVector, out) {\r\n        return b2Rot.MulTRV(this.m_xf.q, worldVector, out);\r\n    }\r\n    /// Get the world linear velocity of a world point attached to this body.\r\n    /// @param a point in world coordinates.\r\n    /// @return the world velocity of a point.\r\n    GetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n        return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_sweep.c, b2Vec2.s_t0), out);\r\n    }\r\n    /// Get the world velocity of a local point.\r\n    /// @param a point in local coordinates.\r\n    /// @return the world velocity of a point.\r\n    GetLinearVelocityFromLocalPoint(localPoint, out) {\r\n        return this.GetLinearVelocityFromWorldPoint(this.GetWorldPoint(localPoint, out), out);\r\n    }\r\n    /// Get the linear damping of the body.\r\n    GetLinearDamping() {\r\n        return this.m_linearDamping;\r\n    }\r\n    /// Set the linear damping of the body.\r\n    SetLinearDamping(linearDamping) {\r\n        this.m_linearDamping = linearDamping;\r\n    }\r\n    /// Get the angular damping of the body.\r\n    GetAngularDamping() {\r\n        return this.m_angularDamping;\r\n    }\r\n    /// Set the angular damping of the body.\r\n    SetAngularDamping(angularDamping) {\r\n        this.m_angularDamping = angularDamping;\r\n    }\r\n    /// Get the gravity scale of the body.\r\n    GetGravityScale() {\r\n        return this.m_gravityScale;\r\n    }\r\n    /// Set the gravity scale of the body.\r\n    SetGravityScale(scale) {\r\n        this.m_gravityScale = scale;\r\n    }\r\n    /// Set the type of this body. This may alter the mass and velocity.\r\n    SetType(type) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (this.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        if (this.m_type === type) {\r\n            return;\r\n        }\r\n        this.m_type = type;\r\n        this.ResetMassData();\r\n        if (this.m_type === b2BodyType.b2_staticBody) {\r\n            this.m_linearVelocity.SetZero();\r\n            this.m_angularVelocity = 0;\r\n            this.m_sweep.a0 = this.m_sweep.a;\r\n            this.m_sweep.c0.Copy(this.m_sweep.c);\r\n            this.SynchronizeFixtures();\r\n        }\r\n        this.SetAwake(true);\r\n        this.m_force.SetZero();\r\n        this.m_torque = 0;\r\n        // Delete the attached contacts.\r\n        let ce = this.m_contactList;\r\n        while (ce) {\r\n            const ce0 = ce;\r\n            ce = ce.next;\r\n            this.m_world.m_contactManager.Destroy(ce0.contact);\r\n        }\r\n        this.m_contactList = null;\r\n        // Touch the proxies so that new contacts will be created (when appropriate)\r\n        const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            const proxyCount = f.m_proxyCount;\r\n            for (let i = 0; i < proxyCount; ++i) {\r\n                broadPhase.TouchProxy(f.m_proxies[i].treeNode);\r\n            }\r\n        }\r\n    }\r\n    /// Get the type of this body.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n    /// Should this body be treated like a bullet for continuous collision detection?\r\n    SetBullet(flag) {\r\n        this.m_bulletFlag = flag;\r\n    }\r\n    /// Is this body treated like a bullet for continuous collision detection?\r\n    IsBullet() {\r\n        return this.m_bulletFlag;\r\n    }\r\n    /// You can disable sleeping on this body. If you disable sleeping, the\r\n    /// body will be woken.\r\n    SetSleepingAllowed(flag) {\r\n        this.m_autoSleepFlag = flag;\r\n        if (!flag) {\r\n            this.SetAwake(true);\r\n        }\r\n    }\r\n    /// Is this body allowed to sleep\r\n    IsSleepingAllowed() {\r\n        return this.m_autoSleepFlag;\r\n    }\r\n    /// Set the sleep state of the body. A sleeping body has very\r\n    /// low CPU cost.\r\n    /// @param flag set to true to wake the body, false to put it to sleep.\r\n    SetAwake(flag) {\r\n        if (flag) {\r\n            if (!this.m_awakeFlag) {\r\n                this.m_awakeFlag = true;\r\n                this.m_sleepTime = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.m_awakeFlag = false;\r\n            this.m_sleepTime = 0;\r\n            this.m_linearVelocity.SetZero();\r\n            this.m_angularVelocity = 0;\r\n            this.m_force.SetZero();\r\n            this.m_torque = 0;\r\n        }\r\n    }\r\n    /// Get the sleeping state of this body.\r\n    /// @return true if the body is sleeping.\r\n    IsAwake() {\r\n        return this.m_awakeFlag;\r\n    }\r\n    /// Set the active state of the body. An inactive body is not\r\n    /// simulated and cannot be collided with or woken up.\r\n    /// If you pass a flag of true, all fixtures will be added to the\r\n    /// broad-phase.\r\n    /// If you pass a flag of false, all fixtures will be removed from\r\n    /// the broad-phase and all contacts will be destroyed.\r\n    /// Fixtures and joints are otherwise unaffected. You may continue\r\n    /// to create/destroy fixtures and joints on inactive bodies.\r\n    /// Fixtures on an inactive body are implicitly inactive and will\r\n    /// not participate in collisions, ray-casts, or queries.\r\n    /// Joints connected to an inactive body are implicitly inactive.\r\n    /// An inactive body is still owned by a b2World object and remains\r\n    /// in the body list.\r\n    SetActive(flag) {\r\n        ///b2Assert(!this.m_world.IsLocked());\r\n        if (flag === this.IsActive()) {\r\n            return;\r\n        }\r\n        this.m_activeFlag = flag;\r\n        if (flag) {\r\n            // Create all proxies.\r\n            const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n            for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n                f.CreateProxies(broadPhase, this.m_xf);\r\n            }\r\n            // Contacts are created the next time step.\r\n        }\r\n        else {\r\n            // Destroy all proxies.\r\n            const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n            for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n                f.DestroyProxies(broadPhase);\r\n            }\r\n            // Destroy the attached contacts.\r\n            let ce = this.m_contactList;\r\n            while (ce) {\r\n                const ce0 = ce;\r\n                ce = ce.next;\r\n                this.m_world.m_contactManager.Destroy(ce0.contact);\r\n            }\r\n            this.m_contactList = null;\r\n        }\r\n    }\r\n    /// Get the active state of the body.\r\n    IsActive() {\r\n        return this.m_activeFlag;\r\n    }\r\n    /// Set this body to have fixed rotation. This causes the mass\r\n    /// to be reset.\r\n    SetFixedRotation(flag) {\r\n        if (this.m_fixedRotationFlag === flag) {\r\n            return;\r\n        }\r\n        this.m_fixedRotationFlag = flag;\r\n        this.m_angularVelocity = 0;\r\n        this.ResetMassData();\r\n    }\r\n    /// Does this body have fixed rotation?\r\n    IsFixedRotation() {\r\n        return this.m_fixedRotationFlag;\r\n    }\r\n    /// Get the list of all fixtures attached to this body.\r\n    GetFixtureList() {\r\n        return this.m_fixtureList;\r\n    }\r\n    /// Get the list of all joints attached to this body.\r\n    GetJointList() {\r\n        return this.m_jointList;\r\n    }\r\n    /// Get the list of all contacts attached to this body.\r\n    /// @warning this list changes during the time step and you may\r\n    /// miss some collisions if you don't use b2ContactListener.\r\n    GetContactList() {\r\n        return this.m_contactList;\r\n    }\r\n    /// Get the next body in the world's body list.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data pointer that was provided in the body definition.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data. Use this to store your application specific data.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Get the parent world of this body.\r\n    GetWorld() {\r\n        return this.m_world;\r\n    }\r\n    /// Dump this body to a log file\r\n    Dump(log) {\r\n        const bodyIndex = this.m_islandIndex;\r\n        log(\"{\\n\");\r\n        log(\"  const bd: b2BodyDef = new b2BodyDef();\\n\");\r\n        let type_str = \"\";\r\n        switch (this.m_type) {\r\n            case b2BodyType.b2_staticBody:\r\n                type_str = \"b2BodyType.b2_staticBody\";\r\n                break;\r\n            case b2BodyType.b2_kinematicBody:\r\n                type_str = \"b2BodyType.b2_kinematicBody\";\r\n                break;\r\n            case b2BodyType.b2_dynamicBody:\r\n                type_str = \"b2BodyType.b2_dynamicBody\";\r\n                break;\r\n            default:\r\n                ///b2Assert(false);\r\n                break;\r\n        }\r\n        log(\"  bd.type = %s;\\n\", type_str);\r\n        log(\"  bd.position.Set(%.15f, %.15f);\\n\", this.m_xf.p.x, this.m_xf.p.y);\r\n        log(\"  bd.angle = %.15f;\\n\", this.m_sweep.a);\r\n        log(\"  bd.linearVelocity.Set(%.15f, %.15f);\\n\", this.m_linearVelocity.x, this.m_linearVelocity.y);\r\n        log(\"  bd.angularVelocity = %.15f;\\n\", this.m_angularVelocity);\r\n        log(\"  bd.linearDamping = %.15f;\\n\", this.m_linearDamping);\r\n        log(\"  bd.angularDamping = %.15f;\\n\", this.m_angularDamping);\r\n        log(\"  bd.allowSleep = %s;\\n\", (this.m_autoSleepFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.awake = %s;\\n\", (this.m_awakeFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.fixedRotation = %s;\\n\", (this.m_fixedRotationFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.bullet = %s;\\n\", (this.m_bulletFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.active = %s;\\n\", (this.m_activeFlag) ? (\"true\") : (\"false\"));\r\n        log(\"  bd.gravityScale = %.15f;\\n\", this.m_gravityScale);\r\n        log(\"\\n\");\r\n        log(\"  bodies[%d] = this.m_world.CreateBody(bd);\\n\", this.m_islandIndex);\r\n        log(\"\\n\");\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            log(\"  {\\n\");\r\n            f.Dump(log, bodyIndex);\r\n            log(\"  }\\n\");\r\n        }\r\n        log(\"}\\n\");\r\n    }\r\n    SynchronizeFixtures() {\r\n        const xf1 = b2Body.SynchronizeFixtures_s_xf1;\r\n        xf1.q.SetAngle(this.m_sweep.a0);\r\n        b2Rot.MulRV(xf1.q, this.m_sweep.localCenter, xf1.p);\r\n        b2Vec2.SubVV(this.m_sweep.c0, xf1.p, xf1.p);\r\n        const broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n        for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n            f.Synchronize(broadPhase, xf1, this.m_xf);\r\n        }\r\n    }\r\n    SynchronizeTransform() {\r\n        this.m_xf.q.SetAngle(this.m_sweep.a);\r\n        b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\r\n        b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\r\n    }\r\n    // This is used to prevent connected bodies from colliding.\r\n    // It may lie, depending on the collideConnected flag.\r\n    ShouldCollide(other) {\r\n        // At least one body should be dynamic or kinematic.\r\n        if (this.m_type === b2BodyType.b2_staticBody && other.m_type === b2BodyType.b2_staticBody) {\r\n            return false;\r\n        }\r\n        return this.ShouldCollideConnected(other);\r\n    }\r\n    ShouldCollideConnected(other) {\r\n        // Does a joint prevent collision?\r\n        for (let jn = this.m_jointList; jn; jn = jn.next) {\r\n            if (jn.other === other) {\r\n                if (!jn.joint.m_collideConnected) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    Advance(alpha) {\r\n        // Advance to the new safe time. This doesn't sync the broad-phase.\r\n        this.m_sweep.Advance(alpha);\r\n        this.m_sweep.c.Copy(this.m_sweep.c0);\r\n        this.m_sweep.a = this.m_sweep.a0;\r\n        this.m_xf.q.SetAngle(this.m_sweep.a);\r\n        b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\r\n        b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\r\n    }\r\n    // #if B2_ENABLE_CONTROLLER\r\n    GetControllerList() {\r\n        return this.m_controllerList;\r\n    }\r\n    GetControllerCount() {\r\n        return this.m_controllerCount;\r\n    }\r\n}\r\n/// Creates a fixture from a shape and attach it to this body.\r\n/// This is a convenience function. Use b2FixtureDef if you need to set parameters\r\n/// like friction, restitution, user data, or filtering.\r\n/// If the density is non-zero, this function automatically updates the mass of the body.\r\n/// @param shape the shape to be cloned.\r\n/// @param density the shape density (set to zero for static bodies).\r\n/// @warning This function is locked during callbacks.\r\nb2Body.CreateFixtureShapeDensity_s_def = new b2FixtureDef();\r\n/// Set the mass properties to override the mass properties of the fixtures.\r\n/// Note that this changes the center of mass position.\r\n/// Note that creating or destroying fixtures can also alter the mass.\r\n/// This function has no effect if the body isn't dynamic.\r\n/// @param massData the mass properties.\r\nb2Body.SetMassData_s_oldCenter = new b2Vec2();\r\n/// This resets the mass properties to the sum of the mass properties of the fixtures.\r\n/// This normally does not need to be called unless you called SetMassData to override\r\n/// the mass and you later want to reset the mass.\r\nb2Body.ResetMassData_s_localCenter = new b2Vec2();\r\nb2Body.ResetMassData_s_oldCenter = new b2Vec2();\r\nb2Body.ResetMassData_s_massData = new b2MassData();\r\nb2Body.SynchronizeFixtures_s_xf1 = new b2Transform();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Vec2 } from \"../../Common/b2Math\";\r\nexport var b2JointType;\r\n(function (b2JointType) {\r\n    b2JointType[b2JointType[\"e_unknownJoint\"] = 0] = \"e_unknownJoint\";\r\n    b2JointType[b2JointType[\"e_revoluteJoint\"] = 1] = \"e_revoluteJoint\";\r\n    b2JointType[b2JointType[\"e_prismaticJoint\"] = 2] = \"e_prismaticJoint\";\r\n    b2JointType[b2JointType[\"e_distanceJoint\"] = 3] = \"e_distanceJoint\";\r\n    b2JointType[b2JointType[\"e_pulleyJoint\"] = 4] = \"e_pulleyJoint\";\r\n    b2JointType[b2JointType[\"e_mouseJoint\"] = 5] = \"e_mouseJoint\";\r\n    b2JointType[b2JointType[\"e_gearJoint\"] = 6] = \"e_gearJoint\";\r\n    b2JointType[b2JointType[\"e_wheelJoint\"] = 7] = \"e_wheelJoint\";\r\n    b2JointType[b2JointType[\"e_weldJoint\"] = 8] = \"e_weldJoint\";\r\n    b2JointType[b2JointType[\"e_frictionJoint\"] = 9] = \"e_frictionJoint\";\r\n    b2JointType[b2JointType[\"e_ropeJoint\"] = 10] = \"e_ropeJoint\";\r\n    b2JointType[b2JointType[\"e_motorJoint\"] = 11] = \"e_motorJoint\";\r\n    b2JointType[b2JointType[\"e_areaJoint\"] = 12] = \"e_areaJoint\";\r\n})(b2JointType || (b2JointType = {}));\r\nexport var b2LimitState;\r\n(function (b2LimitState) {\r\n    b2LimitState[b2LimitState[\"e_inactiveLimit\"] = 0] = \"e_inactiveLimit\";\r\n    b2LimitState[b2LimitState[\"e_atLowerLimit\"] = 1] = \"e_atLowerLimit\";\r\n    b2LimitState[b2LimitState[\"e_atUpperLimit\"] = 2] = \"e_atUpperLimit\";\r\n    b2LimitState[b2LimitState[\"e_equalLimits\"] = 3] = \"e_equalLimits\";\r\n})(b2LimitState || (b2LimitState = {}));\r\nexport class b2Jacobian {\r\n    constructor() {\r\n        this.linear = new b2Vec2();\r\n        this.angularA = 0;\r\n        this.angularB = 0;\r\n    }\r\n    SetZero() {\r\n        this.linear.SetZero();\r\n        this.angularA = 0;\r\n        this.angularB = 0;\r\n        return this;\r\n    }\r\n    Set(x, a1, a2) {\r\n        this.linear.Copy(x);\r\n        this.angularA = a1;\r\n        this.angularB = a2;\r\n        return this;\r\n    }\r\n}\r\n/// A joint edge is used to connect bodies and joints together\r\n/// in a joint graph where each body is a node and each joint\r\n/// is an edge. A joint edge belongs to a doubly linked list\r\n/// maintained in each attached body. Each joint has two joint\r\n/// nodes, one for each attached body.\r\nexport class b2JointEdge {\r\n    constructor(joint, other) {\r\n        this.prev = null; ///< the previous joint edge in the body's joint list\r\n        this.next = null; ///< the next joint edge in the body's joint list\r\n        this.joint = joint;\r\n        this.other = other;\r\n    }\r\n}\r\n/// Joint definitions are used to construct joints.\r\nexport class b2JointDef {\r\n    constructor(type) {\r\n        /// The joint type is set automatically for concrete joint types.\r\n        this.type = b2JointType.e_unknownJoint;\r\n        /// Use this to attach application specific data to your joints.\r\n        this.userData = null;\r\n        /// The first attached body.\r\n        this.bodyA = null;\r\n        /// The second attached body.\r\n        this.bodyB = null;\r\n        /// Set this flag to true if the attached bodies should collide.\r\n        this.collideConnected = false;\r\n        this.type = type;\r\n    }\r\n}\r\n/// The base joint class. Joints are used to constraint two bodies together in\r\n/// various fashions. Some joints also feature limits and motors.\r\nexport class b2Joint {\r\n    constructor(def) {\r\n        ///b2Assert(def.bodyA !== def.bodyB);\r\n        this.m_type = b2JointType.e_unknownJoint;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_index = 0;\r\n        this.m_islandFlag = false;\r\n        this.m_collideConnected = false;\r\n        this.m_userData = null;\r\n        this.m_type = def.type;\r\n        this.m_edgeA = new b2JointEdge(this, def.bodyB);\r\n        this.m_edgeB = new b2JointEdge(this, def.bodyA);\r\n        this.m_bodyA = def.bodyA;\r\n        this.m_bodyB = def.bodyB;\r\n        this.m_collideConnected = def.collideConnected;\r\n        this.m_userData = def.userData;\r\n    }\r\n    /// Get the type of the concrete joint.\r\n    GetType() {\r\n        return this.m_type;\r\n    }\r\n    /// Get the first body attached to this joint.\r\n    GetBodyA() {\r\n        return this.m_bodyA;\r\n    }\r\n    /// Get the second body attached to this joint.\r\n    GetBodyB() {\r\n        return this.m_bodyB;\r\n    }\r\n    /// Get the anchor point on bodyA in world coordinates.\r\n    GetAnchorA(out) {\r\n        return out.SetZero();\r\n    }\r\n    /// Get the anchor point on bodyB in world coordinates.\r\n    GetAnchorB(out) {\r\n        return out.SetZero();\r\n    }\r\n    /// Get the reaction force on bodyB at the joint anchor in Newtons.\r\n    GetReactionForce(inv_dt, out) {\r\n        return out.SetZero();\r\n    }\r\n    /// Get the reaction torque on bodyB in N*m.\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    /// Get the next joint the world joint list.\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /// Get the user data pointer.\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    /// Set the user data pointer.\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    /// Short-cut function to determine if either body is inactive.\r\n    IsActive() {\r\n        return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();\r\n    }\r\n    /// Get collide connected.\r\n    /// Note: modifying the collide connect flag won't work correctly because\r\n    /// the flag is only checked when fixture AABBs begin to overlap.\r\n    GetCollideConnected() {\r\n        return this.m_collideConnected;\r\n    }\r\n    /// Dump this joint to the log file.\r\n    Dump(log) {\r\n        log(\"// Dump is not supported for this joint type.\\n\");\r\n    }\r\n    /// Shift the origin for any points stored in world coordinates.\r\n    ShiftOrigin(newOrigin) {\r\n    }\r\n    InitVelocityConstraints(data) {\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n    }\r\n    // This returns true if the position errors are within tolerance.\r\n    SolvePositionConstraints(data) {\r\n        return false;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJKb2ludC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL0pvaW50cy9iMkpvaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBRUYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBSTdDLE1BQU0sQ0FBTixJQUFZLFdBY1g7QUFkRCxXQUFZLFdBQVc7SUFDckIsaUVBQWtCLENBQUE7SUFDbEIsbUVBQW1CLENBQUE7SUFDbkIscUVBQW9CLENBQUE7SUFDcEIsbUVBQW1CLENBQUE7SUFDbkIsK0RBQWlCLENBQUE7SUFDakIsNkRBQWdCLENBQUE7SUFDaEIsMkRBQWUsQ0FBQTtJQUNmLDZEQUFnQixDQUFBO0lBQ2hCLDJEQUFlLENBQUE7SUFDZixtRUFBbUIsQ0FBQTtJQUNuQiw0REFBZ0IsQ0FBQTtJQUNoQiw4REFBaUIsQ0FBQTtJQUNqQiw0REFBZ0IsQ0FBQTtBQUNsQixDQUFDLEVBZFcsV0FBVyxLQUFYLFdBQVcsUUFjdEI7QUFFRCxNQUFNLENBQU4sSUFBWSxZQUtYO0FBTEQsV0FBWSxZQUFZO0lBQ3RCLHFFQUFtQixDQUFBO0lBQ25CLG1FQUFrQixDQUFBO0lBQ2xCLG1FQUFrQixDQUFBO0lBQ2xCLGlFQUFpQixDQUFBO0FBQ25CLENBQUMsRUFMVyxZQUFZLEtBQVosWUFBWSxRQUt2QjtBQUVELE1BQU0sT0FBTyxVQUFVO0lBQXZCO1FBQ1MsV0FBTSxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFDOUIsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixhQUFRLEdBQVcsQ0FBQyxDQUFDO0lBZTlCLENBQUM7SUFiUSxPQUFPO1FBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsUUFBUSxHQUFH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","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_linearSlop, b2_maxLinearCorrection } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Distance joint definition. This requires defining an\r\n/// anchor point on both bodies and the non-zero length of the\r\n/// distance joint. The definition uses local anchor points\r\n/// so that the initial configuration can violate the constraint\r\n/// slightly. This helps when saving and loading a game.\r\n/// @warning Do not use a zero or short length.\r\nexport class b2DistanceJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_distanceJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.length = 1;\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    Initialize(b1, b2, anchor1, anchor2) {\r\n        this.bodyA = b1;\r\n        this.bodyB = b2;\r\n        this.bodyA.GetLocalPoint(anchor1, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor2, this.localAnchorB);\r\n        this.length = b2Vec2.DistanceVV(anchor1, anchor2);\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n}\r\nexport class b2DistanceJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_bias = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_gamma = 0;\r\n        this.m_impulse = 0;\r\n        this.m_length = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_u = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_frequencyHz = def.frequencyHz;\r\n        this.m_dampingRatio = def.dampingRatio;\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_length = def.length;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return out.Set(inv_dt * this.m_impulse * this.m_u.x, inv_dt * this.m_impulse * this.m_u.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetLength(length) {\r\n        this.m_length = length;\r\n    }\r\n    Length() {\r\n        return this.m_length;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2DistanceJointDef = new b2DistanceJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.length = %.15f;\\n\", this.m_length);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // m_u = cB + m_rB - cA - m_rA;\r\n        this.m_u.x = cB.x + this.m_rB.x - cA.x - this.m_rA.x;\r\n        this.m_u.y = cB.y + this.m_rB.y - cA.y - this.m_rA.y;\r\n        // Handle singularity.\r\n        const length = this.m_u.Length();\r\n        if (length > b2_linearSlop) {\r\n            this.m_u.SelfMul(1 / length);\r\n        }\r\n        else {\r\n            this.m_u.SetZero();\r\n        }\r\n        // float32 crAu = b2Cross(m_rA, m_u);\r\n        const crAu = b2Vec2.CrossVV(this.m_rA, this.m_u);\r\n        // float32 crBu = b2Cross(m_rB, m_u);\r\n        const crBu = b2Vec2.CrossVV(this.m_rB, this.m_u);\r\n        // float32 invMass = m_invMassA + m_invIA * crAu * crAu + m_invMassB + m_invIB * crBu * crBu;\r\n        let invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB + this.m_invIB * crBu * crBu;\r\n        // Compute the effective mass matrix.\r\n        this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        if (this.m_frequencyHz > 0) {\r\n            const C = length - this.m_length;\r\n            // Frequency\r\n            const omega = 2 * b2_pi * this.m_frequencyHz;\r\n            // Damping coefficient\r\n            const d = 2 * this.m_mass * this.m_dampingRatio * omega;\r\n            // Spring stiffness\r\n            const k = this.m_mass * omega * omega;\r\n            // magic formulas\r\n            const h = data.step.dt;\r\n            this.m_gamma = h * (d + h * k);\r\n            this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\r\n            this.m_bias = C * h * k * this.m_gamma;\r\n            invMass += this.m_gamma;\r\n            this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        }\r\n        else {\r\n            this.m_gamma = 0;\r\n            this.m_bias = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale the impulse to support a variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_u;\r\n            const P = b2Vec2.MulSV(this.m_impulse, this.m_u, b2DistanceJoint.InitVelocityConstraints_s_P);\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            // wA -= m_invIA * b2Cross(m_rA, P);\r\n            wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            // wB += m_invIB * b2Cross(m_rB, P);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2DistanceJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2DistanceJoint.SolveVelocityConstraints_s_vpB);\r\n        // float32 Cdot = b2Dot(m_u, vpB - vpA);\r\n        const Cdot = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\r\n        const impulse = (-this.m_mass * (Cdot + this.m_bias + this.m_gamma * this.m_impulse));\r\n        this.m_impulse += impulse;\r\n        // b2Vec2 P = impulse * m_u;\r\n        const P = b2Vec2.MulSV(impulse, this.m_u, b2DistanceJoint.SolveVelocityConstraints_s_P);\r\n        // vA -= m_invMassA * P;\r\n        vA.SelfMulSub(this.m_invMassA, P);\r\n        // wA -= m_invIA * b2Cross(m_rA, P);\r\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n        // vB += m_invMassB * P;\r\n        vB.SelfMulAdd(this.m_invMassB, P);\r\n        // wB += m_invIB * b2Cross(m_rB, P);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        if (this.m_frequencyHz > 0) {\r\n            // There is no position correction for soft distance constraints.\r\n            return true;\r\n        }\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        const rA = b2Rot.MulRV(this.m_qA, this.m_lalcA, this.m_rA); // use m_rA\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        const rB = b2Rot.MulRV(this.m_qB, this.m_lalcB, this.m_rB); // use m_rB\r\n        // b2Vec2 u = cB + rB - cA - rA;\r\n        const u = this.m_u; // use m_u\r\n        u.x = cB.x + rB.x - cA.x - rA.x;\r\n        u.y = cB.y + rB.y - cA.y - rA.y;\r\n        // float32 length = u.Normalize();\r\n        const length = this.m_u.Normalize();\r\n        // float32 C = length - m_length;\r\n        let C = length - this.m_length;\r\n        C = b2Clamp(C, (-b2_maxLinearCorrection), b2_maxLinearCorrection);\r\n        const impulse = (-this.m_mass * C);\r\n        // b2Vec2 P = impulse * u;\r\n        const P = b2Vec2.MulSV(impulse, u, b2DistanceJoint.SolvePositionConstraints_s_P);\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        // aA -= m_invIA * b2Cross(rA, P);\r\n        aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        // aB += m_invIB * b2Cross(rB, P);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return b2Abs(C) < b2_linearSlop;\r\n    }\r\n}\r\nb2DistanceJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2DistanceJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2DistanceJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","import { b2_epsilon, b2_linearSlop, b2_maxLinearCorrection, b2MakeNullArray, b2MakeNumberArray } from \"../../Common/b2Settings\";\r\nimport { b2Sq, b2Sqrt, b2Vec2 } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\nimport { b2DistanceJointDef } from \"./b2DistanceJoint\";\r\nexport class b2AreaJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_areaJoint);\r\n        this.world = null;\r\n        this.bodies = [];\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    AddBody(body) {\r\n        this.bodies.push(body);\r\n        if (this.bodies.length === 1) {\r\n            this.bodyA = body;\r\n        }\r\n        else if (this.bodies.length === 2) {\r\n            this.bodyB = body;\r\n        }\r\n    }\r\n}\r\nexport class b2AreaJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_bodies = null;\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        // Solver shared\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_targetLengths = null;\r\n        this.m_targetArea = 0;\r\n        this.m_normals = null;\r\n        this.m_joints = null;\r\n        this.m_deltas = null;\r\n        this.m_delta = null;\r\n        ///b2Assert(def.bodies.length >= 3, \"You cannot create an area joint with less than three bodies.\");\r\n        this.m_bodies = def.bodies;\r\n        this.m_frequencyHz = def.frequencyHz;\r\n        this.m_dampingRatio = def.dampingRatio;\r\n        this.m_targetLengths = b2MakeNumberArray(def.bodies.length);\r\n        this.m_normals = b2Vec2.MakeArray(def.bodies.length);\r\n        this.m_joints = b2MakeNullArray(def.bodies.length);\r\n        this.m_deltas = b2Vec2.MakeArray(def.bodies.length);\r\n        this.m_delta = new b2Vec2();\r\n        const djd = new b2DistanceJointDef();\r\n        djd.frequencyHz = def.frequencyHz;\r\n        djd.dampingRatio = def.dampingRatio;\r\n        this.m_targetArea = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const body_c = body.GetWorldCenter();\r\n            const next_c = next.GetWorldCenter();\r\n            this.m_targetLengths[i] = b2Vec2.DistanceVV(body_c, next_c);\r\n            this.m_targetArea += b2Vec2.CrossVV(body_c, next_c);\r\n            djd.Initialize(body, next, body_c, next_c);\r\n            this.m_joints[i] = def.world.CreateJoint(djd);\r\n        }\r\n        this.m_targetArea *= 0.5;\r\n    }\r\n    GetAnchorA(out) {\r\n        return out.SetZero();\r\n    }\r\n    GetAnchorB(out) {\r\n        return out.SetZero();\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return out.SetZero();\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n        for (let i = 0; i < this.m_joints.length; ++i) {\r\n            this.m_joints[i].SetFrequency(hz);\r\n        }\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n        for (let i = 0; i < this.m_joints.length; ++i) {\r\n            this.m_joints[i].SetDampingRatio(ratio);\r\n        }\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    Dump(log) {\r\n        log(\"Area joint dumping is not supported.\\n\");\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const prev = this.m_bodies[(i + this.m_bodies.length - 1) % this.m_bodies.length];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const prev_c = data.positions[prev.m_islandIndex].c;\r\n            const next_c = data.positions[next.m_islandIndex].c;\r\n            const delta = this.m_deltas[i];\r\n            b2Vec2.SubVV(next_c, prev_c, delta);\r\n        }\r\n        if (data.step.warmStarting) {\r\n            this.m_impulse *= data.step.dtRatio;\r\n            for (let i = 0; i < this.m_bodies.length; ++i) {\r\n                const body = this.m_bodies[i];\r\n                const body_v = data.velocities[body.m_islandIndex].v;\r\n                const delta = this.m_deltas[i];\r\n                body_v.x += body.m_invMass * delta.y * 0.5 * this.m_impulse;\r\n                body_v.y += body.m_invMass * -delta.x * 0.5 * this.m_impulse;\r\n            }\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        let dotMassSum = 0;\r\n        let crossMassSum = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_v = data.velocities[body.m_islandIndex].v;\r\n            const delta = this.m_deltas[i];\r\n            dotMassSum += delta.LengthSquared() / body.GetMass();\r\n            crossMassSum += b2Vec2.CrossVV(body_v, delta);\r\n        }\r\n        const lambda = -2 * crossMassSum / dotMassSum;\r\n        // lambda = b2Clamp(lambda, -b2_maxLinearCorrection, b2_maxLinearCorrection);\r\n        this.m_impulse += lambda;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_v = data.velocities[body.m_islandIndex].v;\r\n            const delta = this.m_deltas[i];\r\n            body_v.x += body.m_invMass * delta.y * 0.5 * lambda;\r\n            body_v.y += body.m_invMass * -delta.x * 0.5 * lambda;\r\n        }\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        let perimeter = 0;\r\n        let area = 0;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n            const body_c = data.positions[body.m_islandIndex].c;\r\n            const next_c = data.positions[next.m_islandIndex].c;\r\n            const delta = b2Vec2.SubVV(next_c, body_c, this.m_delta);\r\n            let dist = delta.Length();\r\n            if (dist < b2_epsilon) {\r\n                dist = 1;\r\n            }\r\n            this.m_normals[i].x = delta.y / dist;\r\n            this.m_normals[i].y = -delta.x / dist;\r\n            perimeter += dist;\r\n            area += b2Vec2.CrossVV(body_c, next_c);\r\n        }\r\n        area *= 0.5;\r\n        const deltaArea = this.m_targetArea - area;\r\n        const toExtrude = 0.5 * deltaArea / perimeter;\r\n        let done = true;\r\n        for (let i = 0; i < this.m_bodies.length; ++i) {\r\n            const body = this.m_bodies[i];\r\n            const body_c = data.positions[body.m_islandIndex].c;\r\n            const next_i = (i + 1) % this.m_bodies.length;\r\n            const delta = b2Vec2.AddVV(this.m_normals[i], this.m_normals[next_i], this.m_delta);\r\n            delta.SelfMul(toExtrude);\r\n            const norm_sq = delta.LengthSquared();\r\n            if (norm_sq > b2Sq(b2_maxLinearCorrection)) {\r\n                delta.SelfMul(b2_maxLinearCorrection / b2Sqrt(norm_sq));\r\n            }\r\n            if (norm_sq > b2Sq(b2_linearSlop)) {\r\n                done = false;\r\n            }\r\n            body_c.x += delta.x;\r\n            body_c.y += delta.y;\r\n        }\r\n        return done;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Clamp, b2Vec2, b2Mat22, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Friction joint definition.\r\nexport class b2FrictionJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_frictionJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.maxForce = 0;\r\n        this.maxTorque = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n    }\r\n}\r\nexport class b2FrictionJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        // Solver shared\r\n        this.m_linearImpulse = new b2Vec2();\r\n        this.m_angularImpulse = 0;\r\n        this.m_maxForce = 0;\r\n        this.m_maxTorque = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_linearMass = new b2Mat22();\r\n        this.m_angularMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_linearImpulse.SetZero();\r\n        this.m_maxForce = def.maxForce;\r\n        this.m_maxTorque = def.maxTorque;\r\n        this.m_linearMass.SetZero();\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        // const cA: b2Vec2 = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        // const cB: b2Vec2 = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective mass matrix.\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const K = this.m_K; // new b2Mat22();\r\n        K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n        K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n        K.GetInverse(this.m_linearMass);\r\n        this.m_angularMass = iA + iB;\r\n        if (this.m_angularMass > 0) {\r\n            this.m_angularMass = 1 / this.m_angularMass;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            // m_linearImpulse *= data.step.dtRatio;\r\n            this.m_linearImpulse.SelfMul(data.step.dtRatio);\r\n            this.m_angularImpulse *= data.step.dtRatio;\r\n            // const P: b2Vec2(m_linearImpulse.x, m_linearImpulse.y);\r\n            const P = this.m_linearImpulse;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            // wA -= iA * (b2Cross(m_rA, P) + m_angularImpulse);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_angularImpulse);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            // wB += iB * (b2Cross(m_rB, P) + m_angularImpulse);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_angularImpulse);\r\n        }\r\n        else {\r\n            this.m_linearImpulse.SetZero();\r\n            this.m_angularImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const h = data.step.dt;\r\n        // Solve angular friction\r\n        {\r\n            const Cdot = wB - wA;\r\n            let impulse = (-this.m_angularMass * Cdot);\r\n            const oldImpulse = this.m_angularImpulse;\r\n            const maxImpulse = h * this.m_maxTorque;\r\n            this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, (-maxImpulse), maxImpulse);\r\n            impulse = this.m_angularImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve linear friction\r\n        {\r\n            // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot_v2 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = -b2Mul(m_linearMass, Cdot);\r\n            const impulseV = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2FrictionJoint.SolveVelocityConstraints_s_impulseV).SelfNeg();\r\n            // b2Vec2 oldImpulse = m_linearImpulse;\r\n            const oldImpulseV = b2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV.Copy(this.m_linearImpulse);\r\n            // m_linearImpulse += impulse;\r\n            this.m_linearImpulse.SelfAdd(impulseV);\r\n            const maxImpulse = h * this.m_maxForce;\r\n            if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n                this.m_linearImpulse.Normalize();\r\n                this.m_linearImpulse.SelfMul(maxImpulse);\r\n            }\r\n            // impulse = m_linearImpulse - oldImpulse;\r\n            b2Vec2.SubVV(this.m_linearImpulse, oldImpulseV, impulseV);\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulseV);\r\n            // wA -= iA * b2Cross(m_rA, impulse);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, impulseV);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulseV);\r\n            // wB += iB * b2Cross(m_rB, impulse);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, impulseV);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return out.Set(inv_dt * this.m_linearImpulse.x, inv_dt * this.m_linearImpulse.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_angularImpulse;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetMaxForce(force) {\r\n        this.m_maxForce = force;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetMaxTorque(torque) {\r\n        this.m_maxTorque = torque;\r\n    }\r\n    GetMaxTorque() {\r\n        return this.m_maxTorque;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2FrictionJointDef = new b2FrictionJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\r\n        log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2FrictionJoint.SolveVelocityConstraints_s_impulseV = new b2Vec2();\r\nb2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Gear joint definition. This definition requires two existing\r\n/// revolute or prismatic joints (any combination will work).\r\nexport class b2GearJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_gearJoint);\r\n        this.joint1 = null;\r\n        this.joint2 = null;\r\n        this.ratio = 1;\r\n    }\r\n}\r\nexport class b2GearJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_joint1 = null;\r\n        this.m_joint2 = null;\r\n        this.m_typeA = b2JointType.e_unknownJoint;\r\n        this.m_typeB = b2JointType.e_unknownJoint;\r\n        // Body A is connected to body C\r\n        // Body B is connected to body D\r\n        this.m_bodyC = null;\r\n        this.m_bodyD = null;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localAnchorC = new b2Vec2();\r\n        this.m_localAnchorD = new b2Vec2();\r\n        this.m_localAxisC = new b2Vec2();\r\n        this.m_localAxisD = new b2Vec2();\r\n        this.m_referenceAngleA = 0;\r\n        this.m_referenceAngleB = 0;\r\n        this.m_constant = 0;\r\n        this.m_ratio = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_indexC = 0;\r\n        this.m_indexD = 0;\r\n        this.m_lcA = new b2Vec2();\r\n        this.m_lcB = new b2Vec2();\r\n        this.m_lcC = new b2Vec2();\r\n        this.m_lcD = new b2Vec2();\r\n        this.m_mA = 0;\r\n        this.m_mB = 0;\r\n        this.m_mC = 0;\r\n        this.m_mD = 0;\r\n        this.m_iA = 0;\r\n        this.m_iB = 0;\r\n        this.m_iC = 0;\r\n        this.m_iD = 0;\r\n        this.m_JvAC = new b2Vec2();\r\n        this.m_JvBD = new b2Vec2();\r\n        this.m_JwA = 0;\r\n        this.m_JwB = 0;\r\n        this.m_JwC = 0;\r\n        this.m_JwD = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_qC = new b2Rot();\r\n        this.m_qD = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_lalcC = new b2Vec2();\r\n        this.m_lalcD = new b2Vec2();\r\n        this.m_joint1 = def.joint1;\r\n        this.m_joint2 = def.joint2;\r\n        this.m_typeA = this.m_joint1.GetType();\r\n        this.m_typeB = this.m_joint2.GetType();\r\n        ///b2Assert(this.m_typeA === b2JointType.e_revoluteJoint || this.m_typeA === b2JointType.e_prismaticJoint);\r\n        ///b2Assert(this.m_typeB === b2JointType.e_revoluteJoint || this.m_typeB === b2JointType.e_prismaticJoint);\r\n        let coordinateA, coordinateB;\r\n        // TODO_ERIN there might be some problem with the joint edges in b2Joint.\r\n        this.m_bodyC = this.m_joint1.GetBodyA();\r\n        this.m_bodyA = this.m_joint1.GetBodyB();\r\n        // Get geometry of joint1\r\n        const xfA = this.m_bodyA.m_xf;\r\n        const aA = this.m_bodyA.m_sweep.a;\r\n        const xfC = this.m_bodyC.m_xf;\r\n        const aC = this.m_bodyC.m_sweep.a;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            const revolute = def.joint1;\r\n            this.m_localAnchorC.Copy(revolute.m_localAnchorA);\r\n            this.m_localAnchorA.Copy(revolute.m_localAnchorB);\r\n            this.m_referenceAngleA = revolute.m_referenceAngle;\r\n            this.m_localAxisC.SetZero();\r\n            coordinateA = aA - aC - this.m_referenceAngleA;\r\n        }\r\n        else {\r\n            const prismatic = def.joint1;\r\n            this.m_localAnchorC.Copy(prismatic.m_localAnchorA);\r\n            this.m_localAnchorA.Copy(prismatic.m_localAnchorB);\r\n            this.m_referenceAngleA = prismatic.m_referenceAngle;\r\n            this.m_localAxisC.Copy(prismatic.m_localXAxisA);\r\n            // b2Vec2 pC = m_localAnchorC;\r\n            const pC = this.m_localAnchorC;\r\n            // b2Vec2 pA = b2MulT(xfC.q, b2Mul(xfA.q, m_localAnchorA) + (xfA.p - xfC.p));\r\n            const pA = b2Rot.MulTRV(xfC.q, b2Vec2.AddVV(b2Rot.MulRV(xfA.q, this.m_localAnchorA, b2Vec2.s_t0), b2Vec2.SubVV(xfA.p, xfC.p, b2Vec2.s_t1), b2Vec2.s_t0), b2Vec2.s_t0); // pA uses s_t0\r\n            // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n            coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n        }\r\n        this.m_bodyD = this.m_joint2.GetBodyA();\r\n        this.m_bodyB = this.m_joint2.GetBodyB();\r\n        // Get geometry of joint2\r\n        const xfB = this.m_bodyB.m_xf;\r\n        const aB = this.m_bodyB.m_sweep.a;\r\n        const xfD = this.m_bodyD.m_xf;\r\n        const aD = this.m_bodyD.m_sweep.a;\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            const revolute = def.joint2;\r\n            this.m_localAnchorD.Copy(revolute.m_localAnchorA);\r\n            this.m_localAnchorB.Copy(revolute.m_localAnchorB);\r\n            this.m_referenceAngleB = revolute.m_referenceAngle;\r\n            this.m_localAxisD.SetZero();\r\n            coordinateB = aB - aD - this.m_referenceAngleB;\r\n        }\r\n        else {\r\n            const prismatic = def.joint2;\r\n            this.m_localAnchorD.Copy(prismatic.m_localAnchorA);\r\n            this.m_localAnchorB.Copy(prismatic.m_localAnchorB);\r\n            this.m_referenceAngleB = prismatic.m_referenceAngle;\r\n            this.m_localAxisD.Copy(prismatic.m_localXAxisA);\r\n            // b2Vec2 pD = m_localAnchorD;\r\n            const pD = this.m_localAnchorD;\r\n            // b2Vec2 pB = b2MulT(xfD.q, b2Mul(xfB.q, m_localAnchorB) + (xfB.p - xfD.p));\r\n            const pB = b2Rot.MulTRV(xfD.q, b2Vec2.AddVV(b2Rot.MulRV(xfB.q, this.m_localAnchorB, b2Vec2.s_t0), b2Vec2.SubVV(xfB.p, xfD.p, b2Vec2.s_t1), b2Vec2.s_t0), b2Vec2.s_t0); // pB uses s_t0\r\n            // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n            coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n        }\r\n        this.m_ratio = def.ratio;\r\n        this.m_constant = coordinateA + this.m_ratio * coordinateB;\r\n        this.m_impulse = 0;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_indexC = this.m_bodyC.m_islandIndex;\r\n        this.m_indexD = this.m_bodyD.m_islandIndex;\r\n        this.m_lcA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_lcB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_lcC.Copy(this.m_bodyC.m_sweep.localCenter);\r\n        this.m_lcD.Copy(this.m_bodyD.m_sweep.localCenter);\r\n        this.m_mA = this.m_bodyA.m_invMass;\r\n        this.m_mB = this.m_bodyB.m_invMass;\r\n        this.m_mC = this.m_bodyC.m_invMass;\r\n        this.m_mD = this.m_bodyD.m_invMass;\r\n        this.m_iA = this.m_bodyA.m_invI;\r\n        this.m_iB = this.m_bodyB.m_invI;\r\n        this.m_iC = this.m_bodyC.m_invI;\r\n        this.m_iD = this.m_bodyD.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const aC = data.positions[this.m_indexC].a;\r\n        const vC = data.velocities[this.m_indexC].v;\r\n        let wC = data.velocities[this.m_indexC].w;\r\n        const aD = data.positions[this.m_indexD].a;\r\n        const vD = data.velocities[this.m_indexD].v;\r\n        let wD = data.velocities[this.m_indexD].w;\r\n        // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n        this.m_mass = 0;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            this.m_JvAC.SetZero();\r\n            this.m_JwA = 1;\r\n            this.m_JwC = 1;\r\n            this.m_mass += this.m_iA + this.m_iC;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n            const u = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.InitVelocityConstraints_s_u);\r\n            // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n            b2Vec2.SubVV(this.m_localAnchorC, this.m_lcC, this.m_lalcC);\r\n            const rC = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.InitVelocityConstraints_s_rC);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n            b2Vec2.SubVV(this.m_localAnchorA, this.m_lcA, this.m_lalcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.InitVelocityConstraints_s_rA);\r\n            // m_JvAC = u;\r\n            this.m_JvAC.Copy(u);\r\n            // m_JwC = b2Cross(rC, u);\r\n            this.m_JwC = b2Vec2.CrossVV(rC, u);\r\n            // m_JwA = b2Cross(rA, u);\r\n            this.m_JwA = b2Vec2.CrossVV(rA, u);\r\n            this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\r\n        }\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            this.m_JvBD.SetZero();\r\n            this.m_JwB = this.m_ratio;\r\n            this.m_JwD = this.m_ratio;\r\n            this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n            const u = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.InitVelocityConstraints_s_u);\r\n            // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n            b2Vec2.SubVV(this.m_localAnchorD, this.m_lcD, this.m_lalcD);\r\n            const rD = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.InitVelocityConstraints_s_rD);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n            b2Vec2.SubVV(this.m_localAnchorB, this.m_lcB, this.m_lalcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.InitVelocityConstraints_s_rB);\r\n            // m_JvBD = m_ratio * u;\r\n            b2Vec2.MulSV(this.m_ratio, u, this.m_JvBD);\r\n            // m_JwD = m_ratio * b2Cross(rD, u);\r\n            this.m_JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n            // m_JwB = m_ratio * b2Cross(rB, u);\r\n            this.m_JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n            this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\r\n        }\r\n        // Compute effective mass.\r\n        this.m_mass = this.m_mass > 0 ? 1 / this.m_mass : 0;\r\n        if (data.step.warmStarting) {\r\n            // vA += (m_mA * m_impulse) * m_JvAC;\r\n            vA.SelfMulAdd(this.m_mA * this.m_impulse, this.m_JvAC);\r\n            wA += this.m_iA * this.m_impulse * this.m_JwA;\r\n            // vB += (m_mB * m_impulse) * m_JvBD;\r\n            vB.SelfMulAdd(this.m_mB * this.m_impulse, this.m_JvBD);\r\n            wB += this.m_iB * this.m_impulse * this.m_JwB;\r\n            // vC -= (m_mC * m_impulse) * m_JvAC;\r\n            vC.SelfMulSub(this.m_mC * this.m_impulse, this.m_JvAC);\r\n            wC -= this.m_iC * this.m_impulse * this.m_JwC;\r\n            // vD -= (m_mD * m_impulse) * m_JvBD;\r\n            vD.SelfMulSub(this.m_mD * this.m_impulse, this.m_JvBD);\r\n            wD -= this.m_iD * this.m_impulse * this.m_JwD;\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n        // data.velocities[this.m_indexC].v = vC;\r\n        data.velocities[this.m_indexC].w = wC;\r\n        // data.velocities[this.m_indexD].v = vD;\r\n        data.velocities[this.m_indexD].w = wD;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const vC = data.velocities[this.m_indexC].v;\r\n        let wC = data.velocities[this.m_indexC].w;\r\n        const vD = data.velocities[this.m_indexD].v;\r\n        let wD = data.velocities[this.m_indexD].w;\r\n        // float32 Cdot = b2Dot(m_JvAC, vA - vC) + b2Dot(m_JvBD, vB - vD);\r\n        let Cdot = b2Vec2.DotVV(this.m_JvAC, b2Vec2.SubVV(vA, vC, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(this.m_JvBD, b2Vec2.SubVV(vB, vD, b2Vec2.s_t0));\r\n        Cdot += (this.m_JwA * wA - this.m_JwC * wC) + (this.m_JwB * wB - this.m_JwD * wD);\r\n        const impulse = -this.m_mass * Cdot;\r\n        this.m_impulse += impulse;\r\n        // vA += (m_mA * impulse) * m_JvAC;\r\n        vA.SelfMulAdd((this.m_mA * impulse), this.m_JvAC);\r\n        wA += this.m_iA * impulse * this.m_JwA;\r\n        // vB += (m_mB * impulse) * m_JvBD;\r\n        vB.SelfMulAdd((this.m_mB * impulse), this.m_JvBD);\r\n        wB += this.m_iB * impulse * this.m_JwB;\r\n        // vC -= (m_mC * impulse) * m_JvAC;\r\n        vC.SelfMulSub((this.m_mC * impulse), this.m_JvAC);\r\n        wC -= this.m_iC * impulse * this.m_JwC;\r\n        // vD -= (m_mD * impulse) * m_JvBD;\r\n        vD.SelfMulSub((this.m_mD * impulse), this.m_JvBD);\r\n        wD -= this.m_iD * impulse * this.m_JwD;\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n        // data.velocities[this.m_indexC].v = vC;\r\n        data.velocities[this.m_indexC].w = wC;\r\n        // data.velocities[this.m_indexD].v = vD;\r\n        data.velocities[this.m_indexD].w = wD;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const cC = data.positions[this.m_indexC].c;\r\n        let aC = data.positions[this.m_indexC].a;\r\n        const cD = data.positions[this.m_indexD].c;\r\n        let aD = data.positions[this.m_indexD].a;\r\n        // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n        const linearError = 0;\r\n        let coordinateA, coordinateB;\r\n        const JvAC = this.m_JvAC, JvBD = this.m_JvBD;\r\n        let JwA, JwB, JwC, JwD;\r\n        let mass = 0;\r\n        if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n            JvAC.SetZero();\r\n            JwA = 1;\r\n            JwC = 1;\r\n            mass += this.m_iA + this.m_iC;\r\n            coordinateA = aA - aC - this.m_referenceAngleA;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n            const u = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.SolvePositionConstraints_s_u);\r\n            // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n            const rC = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.SolvePositionConstraints_s_rC);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.SolvePositionConstraints_s_rA);\r\n            // JvAC = u;\r\n            JvAC.Copy(u);\r\n            // JwC = b2Cross(rC, u);\r\n            JwC = b2Vec2.CrossVV(rC, u);\r\n            // JwA = b2Cross(rA, u);\r\n            JwA = b2Vec2.CrossVV(rA, u);\r\n            mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\r\n            // b2Vec2 pC = m_localAnchorC - m_lcC;\r\n            const pC = this.m_lalcC;\r\n            // b2Vec2 pA = b2MulT(qC, rA + (cA - cC));\r\n            const pA = b2Rot.MulTRV(qC, b2Vec2.AddVV(rA, b2Vec2.SubVV(cA, cC, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0); // pA uses s_t0\r\n            // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n            coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n        }\r\n        if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n            JvBD.SetZero();\r\n            JwB = this.m_ratio;\r\n            JwD = this.m_ratio;\r\n            mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n            coordinateB = aB - aD - this.m_referenceAngleB;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n            const u = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.SolvePositionConstraints_s_u);\r\n            // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n            const rD = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.SolvePositionConstraints_s_rD);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.SolvePositionConstraints_s_rB);\r\n            // JvBD = m_ratio * u;\r\n            b2Vec2.MulSV(this.m_ratio, u, JvBD);\r\n            // JwD = m_ratio * b2Cross(rD, u);\r\n            JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n            // JwB = m_ratio * b2Cross(rB, u);\r\n            JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n            mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * JwD * JwD + this.m_iB * JwB * JwB;\r\n            // b2Vec2 pD = m_localAnchorD - m_lcD;\r\n            const pD = this.m_lalcD;\r\n            // b2Vec2 pB = b2MulT(qD, rB + (cB - cD));\r\n            const pB = b2Rot.MulTRV(qD, b2Vec2.AddVV(rB, b2Vec2.SubVV(cB, cD, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0); // pB uses s_t0\r\n            // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n            coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n        }\r\n        const C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant;\r\n        let impulse = 0;\r\n        if (mass > 0) {\r\n            impulse = -C / mass;\r\n        }\r\n        // cA += m_mA * impulse * JvAC;\r\n        cA.SelfMulAdd(this.m_mA * impulse, JvAC);\r\n        aA += this.m_iA * impulse * JwA;\r\n        // cB += m_mB * impulse * JvBD;\r\n        cB.SelfMulAdd(this.m_mB * impulse, JvBD);\r\n        aB += this.m_iB * impulse * JwB;\r\n        // cC -= m_mC * impulse * JvAC;\r\n        cC.SelfMulSub(this.m_mC * impulse, JvAC);\r\n        aC -= this.m_iC * impulse * JwC;\r\n        // cD -= m_mD * impulse * JvBD;\r\n        cD.SelfMulSub(this.m_mD * impulse, JvBD);\r\n        aD -= this.m_iD * impulse * JwD;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        // data.positions[this.m_indexC].c = cC;\r\n        data.positions[this.m_indexC].a = aC;\r\n        // data.positions[this.m_indexD].c = cD;\r\n        data.positions[this.m_indexD].a = aD;\r\n        // TODO_ERIN not implemented\r\n        return linearError < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P = m_impulse * m_JvAC;\r\n        // return inv_dt * P;\r\n        return b2Vec2.MulSV(inv_dt * this.m_impulse, this.m_JvAC, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        // float32 L = m_impulse * m_JwA;\r\n        // return inv_dt * L;\r\n        return inv_dt * this.m_impulse * this.m_JwA;\r\n    }\r\n    GetJoint1() { return this.m_joint1; }\r\n    GetJoint2() { return this.m_joint2; }\r\n    GetRatio() {\r\n        return this.m_ratio;\r\n    }\r\n    SetRatio(ratio) {\r\n        ///b2Assert(b2IsValid(ratio));\r\n        this.m_ratio = ratio;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        const index1 = this.m_joint1.m_index;\r\n        const index2 = this.m_joint2.m_index;\r\n        log(\"  const jd: b2GearJointDef = new b2GearJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.joint1 = joints[%d];\\n\", index1);\r\n        log(\"  jd.joint2 = joints[%d];\\n\", index2);\r\n        log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2GearJoint.InitVelocityConstraints_s_u = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rA = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rB = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rC = new b2Vec2();\r\nb2GearJoint.InitVelocityConstraints_s_rD = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_u = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rA = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rB = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rC = new b2Vec2();\r\nb2GearJoint.SolvePositionConstraints_s_rD = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2Clamp, b2Vec2, b2Mat22, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n// Point-to-point constraint\r\n// Cdot = v2 - v1\r\n//      = v2 + cross(w2, r2) - v1 - cross(w1, r1)\r\n// J = [-I -r1_skew I r2_skew ]\r\n// Identity used:\r\n// w k % (rx i + ry j) = w * (-ry i + rx j)\r\n//\r\n// r1 = offset - c1\r\n// r2 = -c2\r\n// Angle constraint\r\n// Cdot = w2 - w1\r\n// J = [0 0 -1 0 0 1]\r\n// K = invI1 + invI2\r\nexport class b2MotorJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_motorJoint);\r\n        this.linearOffset = new b2Vec2(0, 0);\r\n        this.angularOffset = 0;\r\n        this.maxForce = 1;\r\n        this.maxTorque = 1;\r\n        this.correctionFactor = 0.3;\r\n    }\r\n    Initialize(bA, bB) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        // b2Vec2 xB = bodyB->GetPosition();\r\n        // linearOffset = bodyA->GetLocalPoint(xB);\r\n        this.bodyA.GetLocalPoint(this.bodyB.GetPosition(), this.linearOffset);\r\n        const angleA = this.bodyA.GetAngle();\r\n        const angleB = this.bodyB.GetAngle();\r\n        this.angularOffset = angleB - angleA;\r\n    }\r\n}\r\nexport class b2MotorJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_linearOffset = new b2Vec2();\r\n        this.m_angularOffset = 0;\r\n        this.m_linearImpulse = new b2Vec2();\r\n        this.m_angularImpulse = 0;\r\n        this.m_maxForce = 0;\r\n        this.m_maxTorque = 0;\r\n        this.m_correctionFactor = 0.3;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_linearError = new b2Vec2();\r\n        this.m_angularError = 0;\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_linearMass = new b2Mat22();\r\n        this.m_angularMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_K = new b2Mat22();\r\n        this.m_linearOffset.Copy(def.linearOffset);\r\n        this.m_linearImpulse.SetZero();\r\n        this.m_maxForce = def.maxForce;\r\n        this.m_maxTorque = def.maxTorque;\r\n        this.m_correctionFactor = def.correctionFactor;\r\n    }\r\n    GetAnchorA() {\r\n        return this.m_bodyA.GetPosition();\r\n    }\r\n    GetAnchorB() {\r\n        return this.m_bodyB.GetPosition();\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * m_linearImpulse;\r\n        return b2Vec2.MulSV(inv_dt, this.m_linearImpulse, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_angularImpulse;\r\n    }\r\n    SetLinearOffset(linearOffset) {\r\n        if (!b2Vec2.IsEqualToV(linearOffset, this.m_linearOffset)) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_linearOffset.Copy(linearOffset);\r\n        }\r\n    }\r\n    GetLinearOffset() {\r\n        return this.m_linearOffset;\r\n    }\r\n    SetAngularOffset(angularOffset) {\r\n        if (angularOffset !== this.m_angularOffset) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_angularOffset = angularOffset;\r\n        }\r\n    }\r\n    GetAngularOffset() {\r\n        return this.m_angularOffset;\r\n    }\r\n    SetMaxForce(force) {\r\n        ///b2Assert(b2IsValid(force) && force >= 0);\r\n        this.m_maxForce = force;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetMaxTorque(torque) {\r\n        ///b2Assert(b2IsValid(torque) && torque >= 0);\r\n        this.m_maxTorque = torque;\r\n    }\r\n    GetMaxTorque() {\r\n        return this.m_maxTorque;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective mass matrix.\r\n        // this.m_rA = b2Mul(qA, m_linearOffset - this.m_localCenterA);\r\n        const rA = b2Rot.MulRV(qA, b2Vec2.SubVV(this.m_linearOffset, this.m_localCenterA, b2Vec2.s_t0), this.m_rA);\r\n        // this.m_rB = b2Mul(qB, -this.m_localCenterB);\r\n        const rB = b2Rot.MulRV(qB, b2Vec2.NegV(this.m_localCenterB, b2Vec2.s_t0), this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Upper 2 by 2 of K for point to point\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n        K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n        // this.m_linearMass = K.GetInverse();\r\n        K.GetInverse(this.m_linearMass);\r\n        this.m_angularMass = iA + iB;\r\n        if (this.m_angularMass > 0) {\r\n            this.m_angularMass = 1 / this.m_angularMass;\r\n        }\r\n        // this.m_linearError = cB + rB - cA - rA;\r\n        b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), this.m_linearError);\r\n        this.m_angularError = aB - aA - this.m_angularOffset;\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            // this.m_linearImpulse *= data.step.dtRatio;\r\n            this.m_linearImpulse.SelfMul(data.step.dtRatio);\r\n            this.m_angularImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P(this.m_linearImpulse.x, this.m_linearImpulse.y);\r\n            const P = this.m_linearImpulse;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(rA, P) + this.m_angularImpulse);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(rB, P) + this.m_angularImpulse);\r\n        }\r\n        else {\r\n            this.m_linearImpulse.SetZero();\r\n            this.m_angularImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA; // vA is a reference\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB; // vB is a reference\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const h = data.step.dt;\r\n        const inv_h = data.step.inv_dt;\r\n        // Solve angular friction\r\n        {\r\n            const Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\r\n            let impulse = -this.m_angularMass * Cdot;\r\n            const oldImpulse = this.m_angularImpulse;\r\n            const maxImpulse = h * this.m_maxTorque;\r\n            this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_angularImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve linear friction\r\n        {\r\n            const rA = this.m_rA;\r\n            const rB = this.m_rB;\r\n            // b2Vec2 Cdot = vB + b2Vec2.CrossSV(wB, rB) - vA - b2Vec2.CrossSV(wA, rA) + inv_h * this.m_correctionFactor * this.m_linearError;\r\n            const Cdot_v2 = b2Vec2.AddVV(b2Vec2.SubVV(b2Vec2.AddVV(vB, b2Vec2.CrossSV(wB, rB, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.AddVV(vA, b2Vec2.CrossSV(wA, rA, b2Vec2.s_t1), b2Vec2.s_t1), b2Vec2.s_t2), b2Vec2.MulSV(inv_h * this.m_correctionFactor, this.m_linearError, b2Vec2.s_t3), b2MotorJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = -b2Mul(this.m_linearMass, Cdot);\r\n            const impulse_v2 = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2MotorJoint.SolveVelocityConstraints_s_impulse_v2).SelfNeg();\r\n            // b2Vec2 oldImpulse = this.m_linearImpulse;\r\n            const oldImpulse_v2 = b2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2.Copy(this.m_linearImpulse);\r\n            // this.m_linearImpulse += impulse;\r\n            this.m_linearImpulse.SelfAdd(impulse_v2);\r\n            const maxImpulse = h * this.m_maxForce;\r\n            if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n                this.m_linearImpulse.Normalize();\r\n                // this.m_linearImpulse *= maxImpulse;\r\n                this.m_linearImpulse.SelfMul(maxImpulse);\r\n            }\r\n            // impulse = this.m_linearImpulse - oldImpulse;\r\n            b2Vec2.SubVV(this.m_linearImpulse, oldImpulse_v2, impulse_v2);\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulse_v2);\r\n            // wA -= iA * b2Vec2.CrossVV(rA, impulse);\r\n            wA -= iA * b2Vec2.CrossVV(rA, impulse_v2);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulse_v2);\r\n            // wB += iB * b2Vec2.CrossVV(rB, impulse);\r\n            wB += iB * b2Vec2.CrossVV(rB, impulse_v2);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA; // vA is a reference\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB; // vB is a reference\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2MotorJointDef = new b2MotorJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.linearOffset.Set(%.15f, %.15f);\\n\", this.m_linearOffset.x, this.m_linearOffset.y);\r\n        log(\"  jd.angularOffset = %.15f;\\n\", this.m_angularOffset);\r\n        log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\r\n        log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\r\n        log(\"  jd.correctionFactor = %.15f;\\n\", this.m_correctionFactor);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2MotorJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2MotorJoint.SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\r\nb2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Mat22, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Mouse joint definition. This requires a world target point,\r\n/// tuning parameters, and the time step.\r\nexport class b2MouseJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_mouseJoint);\r\n        this.target = new b2Vec2();\r\n        this.maxForce = 0;\r\n        this.frequencyHz = 5;\r\n        this.dampingRatio = 0.7;\r\n    }\r\n}\r\nexport class b2MouseJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_localAnchorB = null;\r\n        this.m_targetA = null;\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_beta = 0;\r\n        // Solver shared\r\n        this.m_impulse = null;\r\n        this.m_maxForce = 0;\r\n        this.m_gamma = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rB = null;\r\n        this.m_localCenterB = null;\r\n        this.m_invMassB = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = null;\r\n        this.m_C = null;\r\n        this.m_qB = null;\r\n        this.m_lalcB = null;\r\n        this.m_K = null;\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_targetA = new b2Vec2();\r\n        this.m_impulse = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_mass = new b2Mat22();\r\n        this.m_C = new b2Vec2();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        ///b2Assert(def.target.IsValid());\r\n        ///b2Assert(b2IsValid(def.maxForce) && def.maxForce >= 0);\r\n        ///b2Assert(b2IsValid(def.frequencyHz) && def.frequencyHz >= 0);\r\n        ///b2Assert(b2IsValid(def.dampingRatio) && def.dampingRatio >= 0);\r\n        this.m_targetA.Copy(def.target);\r\n        b2Transform.MulTXV(this.m_bodyB.GetTransform(), this.m_targetA, this.m_localAnchorB);\r\n        this.m_maxForce = def.maxForce;\r\n        this.m_impulse.SetZero();\r\n        this.m_frequencyHz = def.frequencyHz;\r\n        this.m_dampingRatio = def.dampingRatio;\r\n        this.m_beta = 0;\r\n        this.m_gamma = 0;\r\n    }\r\n    SetTarget(target) {\r\n        if (!this.m_bodyB.IsAwake()) {\r\n            this.m_bodyB.SetAwake(true);\r\n        }\r\n        this.m_targetA.Copy(target);\r\n    }\r\n    GetTarget() {\r\n        return this.m_targetA;\r\n    }\r\n    SetMaxForce(maxForce) {\r\n        this.m_maxForce = maxForce;\r\n    }\r\n    GetMaxForce() {\r\n        return this.m_maxForce;\r\n    }\r\n    SetFrequency(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetFrequency() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qB = this.m_qB.SetAngle(aB);\r\n        const mass = this.m_bodyB.GetMass();\r\n        // Frequency\r\n        const omega = 2 * b2_pi * this.m_frequencyHz;\r\n        // Damping coefficient\r\n        const d = 2 * mass * this.m_dampingRatio * omega;\r\n        // Spring stiffness\r\n        const k = mass * (omega * omega);\r\n        // magic formulas\r\n        // gamma has units of inverse mass.\r\n        // beta has units of inverse time.\r\n        const h = data.step.dt;\r\n        ///b2Assert(d + h * k > b2_epsilon);\r\n        this.m_gamma = h * (d + h * k);\r\n        if (this.m_gamma !== 0) {\r\n            this.m_gamma = 1 / this.m_gamma;\r\n        }\r\n        this.m_beta = h * k * this.m_gamma;\r\n        // Compute the effective mass matrix.\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // K    = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) * invI2 * skew(r2)]\r\n        //      = [1/m1+1/m2     0    ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y -r1.x*r1.y]\r\n        //        [    0     1/m1+1/m2]           [-r1.x*r1.y r1.x*r1.x]           [-r1.x*r1.y r1.x*r1.x]\r\n        const K = this.m_K;\r\n        K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y + this.m_gamma;\r\n        K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\r\n        K.ey.x = K.ex.y;\r\n        K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x + this.m_gamma;\r\n        K.GetInverse(this.m_mass);\r\n        // m_C = cB + m_rB - m_targetA;\r\n        this.m_C.x = cB.x + this.m_rB.x - this.m_targetA.x;\r\n        this.m_C.y = cB.y + this.m_rB.y - this.m_targetA.y;\r\n        // m_C *= m_beta;\r\n        this.m_C.SelfMul(this.m_beta);\r\n        // Cheat with some damping\r\n        wB *= 0.98;\r\n        if (data.step.warmStarting) {\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            // vB += m_invMassB * m_impulse;\r\n            vB.x += this.m_invMassB * this.m_impulse.x;\r\n            vB.y += this.m_invMassB * this.m_impulse.y;\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, this.m_impulse);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n        }\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Cdot = v + cross(w, r)\r\n        // b2Vec2 Cdot = vB + b2Cross(wB, m_rB);\r\n        const Cdot = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2MouseJoint.SolveVelocityConstraints_s_Cdot);\r\n        //  b2Vec2 impulse = b2Mul(m_mass, -(Cdot + m_C + m_gamma * m_impulse));\r\n        const impulse = b2Mat22.MulMV(this.m_mass, b2Vec2.AddVV(Cdot, b2Vec2.AddVV(this.m_C, b2Vec2.MulSV(this.m_gamma, this.m_impulse, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0).SelfNeg(), b2MouseJoint.SolveVelocityConstraints_s_impulse);\r\n        // b2Vec2 oldImpulse = m_impulse;\r\n        const oldImpulse = b2MouseJoint.SolveVelocityConstraints_s_oldImpulse.Copy(this.m_impulse);\r\n        // m_impulse += impulse;\r\n        this.m_impulse.SelfAdd(impulse);\r\n        const maxImpulse = data.step.dt * this.m_maxForce;\r\n        if (this.m_impulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n            this.m_impulse.SelfMul(maxImpulse / this.m_impulse.Length());\r\n        }\r\n        // impulse = m_impulse - oldImpulse;\r\n        b2Vec2.SubVV(this.m_impulse, oldImpulse, impulse);\r\n        // vB += m_invMassB * impulse;\r\n        vB.SelfMulAdd(this.m_invMassB, impulse);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, impulse);\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        return true;\r\n    }\r\n    GetAnchorA(out) {\r\n        return out.Copy(this.m_targetA);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        return b2Vec2.MulSV(inv_dt, this.m_impulse, out);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    Dump(log) {\r\n        log(\"Mouse joint dumping is not supported.\\n\");\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_targetA.SelfSub(newOrigin);\r\n    }\r\n}\r\nb2MouseJoint.SolveVelocityConstraints_s_Cdot = new b2Vec2();\r\nb2MouseJoint.SolveVelocityConstraints_s_impulse = new b2Vec2();\r\nb2MouseJoint.SolveVelocityConstraints_s_oldImpulse = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxLinearCorrection, b2_angularSlop } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Clamp, b2Vec2, b2Mat22, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Prismatic joint definition. This requires defining a line of\r\n/// motion using an axis and an anchor point. The definition uses local\r\n/// anchor points and a local axis so that the initial configuration\r\n/// can violate the constraint slightly. The joint translation is zero\r\n/// when the local anchor points coincide in world space. Using local\r\n/// anchors and a local axis helps when saving and loading a game.\r\nexport class b2PrismaticJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_prismaticJoint);\r\n        this.localAnchorA = null;\r\n        this.localAnchorB = null;\r\n        this.localAxisA = null;\r\n        this.referenceAngle = 0;\r\n        this.enableLimit = false;\r\n        this.lowerTranslation = 0;\r\n        this.upperTranslation = 0;\r\n        this.enableMotor = false;\r\n        this.maxMotorForce = 0;\r\n        this.motorSpeed = 0;\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.localAxisA = new b2Vec2(1, 0);\r\n    }\r\n    Initialize(bA, bB, anchor, axis) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.bodyA.GetLocalVector(axis, this.localAxisA);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2PrismaticJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localXAxisA = new b2Vec2();\r\n        this.m_localYAxisA = new b2Vec2();\r\n        this.m_referenceAngle = 0;\r\n        this.m_impulse = new b2Vec3(0, 0, 0);\r\n        this.m_motorImpulse = 0;\r\n        this.m_lowerTranslation = 0;\r\n        this.m_upperTranslation = 0;\r\n        this.m_maxMotorForce = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableLimit = false;\r\n        this.m_enableMotor = false;\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_axis = new b2Vec2(0, 0);\r\n        this.m_perp = new b2Vec2(0, 0);\r\n        this.m_s1 = 0;\r\n        this.m_s2 = 0;\r\n        this.m_a1 = 0;\r\n        this.m_a2 = 0;\r\n        this.m_K = new b2Mat33();\r\n        this.m_K3 = new b2Mat33();\r\n        this.m_K2 = new b2Mat22();\r\n        this.m_motorMass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_localXAxisA.Copy(def.localAxisA).SelfNormalize();\r\n        b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\r\n        this.m_referenceAngle = def.referenceAngle;\r\n        this.m_lowerTranslation = def.lowerTranslation;\r\n        this.m_upperTranslation = def.upperTranslation;\r\n        this.m_maxMotorForce = def.maxMotorForce;\r\n        this.m_motorSpeed = def.motorSpeed;\r\n        this.m_enableLimit = def.enableLimit;\r\n        this.m_enableMotor = def.enableMotor;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective masses.\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = (cB - cA) + rB - rA;\r\n        const d = b2Vec2.AddVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), b2Vec2.SubVV(rB, rA, b2Vec2.s_t1), b2PrismaticJoint.InitVelocityConstraints_s_d);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Compute motor Jacobian and effective mass.\r\n        {\r\n            // m_axis = b2Mul(qA, m_localXAxisA);\r\n            b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\r\n            // m_a1 = b2Cross(d + rA, m_axis);\r\n            this.m_a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_axis);\r\n            // m_a2 = b2Cross(rB, m_axis);\r\n            this.m_a2 = b2Vec2.CrossVV(rB, this.m_axis);\r\n            this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\r\n            if (this.m_motorMass > 0) {\r\n                this.m_motorMass = 1 / this.m_motorMass;\r\n            }\r\n        }\r\n        // Prismatic constraint.\r\n        {\r\n            // m_perp = b2Mul(qA, m_localYAxisA);\r\n            b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\r\n            // m_s1 = b2Cross(d + rA, m_perp);\r\n            this.m_s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_perp);\r\n            // m_s2 = b2Cross(rB, m_perp);\r\n            this.m_s2 = b2Vec2.CrossVV(rB, this.m_perp);\r\n            // float32 k11 = mA + mB + iA * m_s1 * m_s1 + iB * m_s2 * m_s2;\r\n            this.m_K.ex.x = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\r\n            // float32 k12 = iA * m_s1 + iB * m_s2;\r\n            this.m_K.ex.y = iA * this.m_s1 + iB * this.m_s2;\r\n            // float32 k13 = iA * m_s1 * m_a1 + iB * m_s2 * m_a2;\r\n            this.m_K.ex.z = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\r\n            this.m_K.ey.x = this.m_K.ex.y;\r\n            // float32 k22 = iA + iB;\r\n            this.m_K.ey.y = iA + iB;\r\n            if (this.m_K.ey.y === 0) {\r\n                // For bodies with fixed rotation.\r\n                this.m_K.ey.y = 1;\r\n            }\r\n            // float32 k23 = iA * m_a1 + iB * m_a2;\r\n            this.m_K.ey.z = iA * this.m_a1 + iB * this.m_a2;\r\n            this.m_K.ez.x = this.m_K.ex.z;\r\n            this.m_K.ez.y = this.m_K.ey.z;\r\n            // float32 k33 = mA + mB + iA * m_a1 * m_a1 + iB * m_a2 * m_a2;\r\n            this.m_K.ez.z = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\r\n            // m_K.ex.Set(k11, k12, k13);\r\n            // m_K.ey.Set(k12, k22, k23);\r\n            // m_K.ez.Set(k13, k23, k33);\r\n        }\r\n        // Compute motor and limit terms.\r\n        if (this.m_enableLimit) {\r\n            // float32 jointTranslation = b2Dot(m_axis, d);\r\n            const jointTranslation = b2Vec2.DotVV(this.m_axis, d);\r\n            if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\r\n                this.m_limitState = b2LimitState.e_equalLimits;\r\n            }\r\n            else if (jointTranslation <= this.m_lowerTranslation) {\r\n                if (this.m_limitState !== b2LimitState.e_atLowerLimit) {\r\n                    this.m_limitState = b2LimitState.e_atLowerLimit;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n            }\r\n            else if (jointTranslation >= this.m_upperTranslation) {\r\n                if (this.m_limitState !== b2LimitState.e_atUpperLimit) {\r\n                    this.m_limitState = b2LimitState.e_atUpperLimit;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n            }\r\n            else {\r\n                this.m_limitState = b2LimitState.e_inactiveLimit;\r\n                this.m_impulse.z = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.m_limitState = b2LimitState.e_inactiveLimit;\r\n            this.m_impulse.z = 0;\r\n        }\r\n        if (!this.m_enableMotor) {\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Account for variable time step.\r\n            // m_impulse *= data.step.dtRatio;\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse.x * m_perp + (m_motorImpulse + m_impulse.z) * m_axis;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(this.m_impulse.x, this.m_perp, b2Vec2.s_t0), b2Vec2.MulSV((this.m_motorImpulse + this.m_impulse.z), this.m_axis, b2Vec2.s_t1), b2PrismaticJoint.InitVelocityConstraints_s_P);\r\n            // float32 LA = m_impulse.x * m_s1 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a1;\r\n            const LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\r\n            // float32 LB = m_impulse.x * m_s2 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a2;\r\n            const LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // Solve linear motor constraint.\r\n        if (this.m_enableMotor && this.m_limitState !== b2LimitState.e_equalLimits) {\r\n            // float32 Cdot = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\r\n            const Cdot = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\r\n            let impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorForce;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            // b2Vec2 P = impulse * m_axis;\r\n            const P = b2Vec2.MulSV(impulse, this.m_axis, b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_a1;\r\n            const LB = impulse * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // b2Vec2 Cdot1;\r\n        // Cdot1.x = b2Dot(m_perp, vB - vA) + m_s2 * wB - m_s1 * wA;\r\n        const Cdot1_x = b2Vec2.DotVV(this.m_perp, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_s2 * wB - this.m_s1 * wA;\r\n        // Cdot1.y = wB - wA;\r\n        const Cdot1_y = wB - wA;\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit) {\r\n            // Solve prismatic and limit constraint in block form.\r\n            // float32 Cdot2;\r\n            // Cdot2 = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\r\n            const Cdot2 = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\r\n            // b2Vec3 Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 f1 = m_impulse;\r\n            const f1 = b2PrismaticJoint.SolveVelocityConstraints_s_f1.Copy(this.m_impulse);\r\n            // b2Vec3 df =  m_K.Solve33(-Cdot);\r\n            const df3 = this.m_K.Solve33((-Cdot1_x), (-Cdot1_y), (-Cdot2), b2PrismaticJoint.SolveVelocityConstraints_s_df3);\r\n            // m_impulse += df;\r\n            this.m_impulse.SelfAdd(df3);\r\n            if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                this.m_impulse.z = b2Max(this.m_impulse.z, 0);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                this.m_impulse.z = b2Min(this.m_impulse.z, 0);\r\n            }\r\n            // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) + f1(1:2)\r\n            // b2Vec2 b = -Cdot1 - (m_impulse.z - f1.z) * b2Vec2(m_K.ez.x, m_K.ez.y);\r\n            const b_x = (-Cdot1_x) - (this.m_impulse.z - f1.z) * this.m_K.ez.x;\r\n            const b_y = (-Cdot1_y) - (this.m_impulse.z - f1.z) * this.m_K.ez.y;\r\n            // b2Vec2 f2r = m_K.Solve22(b) + b2Vec2(f1.x, f1.y);\r\n            const f2r = this.m_K.Solve22(b_x, b_y, b2PrismaticJoint.SolveVelocityConstraints_s_f2r);\r\n            f2r.x += f1.x;\r\n            f2r.y += f1.y;\r\n            // m_impulse.x = f2r.x;\r\n            this.m_impulse.x = f2r.x;\r\n            // m_impulse.y = f2r.y;\r\n            this.m_impulse.y = f2r.y;\r\n            // df = m_impulse - f1;\r\n            df3.x = this.m_impulse.x - f1.x;\r\n            df3.y = this.m_impulse.y - f1.y;\r\n            df3.z = this.m_impulse.z - f1.z;\r\n            // b2Vec2 P = df.x * m_perp + df.z * m_axis;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(df3.x, this.m_perp, b2Vec2.s_t0), b2Vec2.MulSV(df3.z, this.m_axis, b2Vec2.s_t1), b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            // float32 LA = df.x * m_s1 + df.y + df.z * m_a1;\r\n            const LA = df3.x * this.m_s1 + df3.y + df3.z * this.m_a1;\r\n            // float32 LB = df.x * m_s2 + df.y + df.z * m_a2;\r\n            const LB = df3.x * this.m_s2 + df3.y + df3.z * this.m_a2;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        else {\r\n            // Limit is inactive, just solve the prismatic constraint in block form.\r\n            // b2Vec2 df = m_K.Solve22(-Cdot1);\r\n            const df2 = this.m_K.Solve22((-Cdot1_x), (-Cdot1_y), b2PrismaticJoint.SolveVelocityConstraints_s_df2);\r\n            this.m_impulse.x += df2.x;\r\n            this.m_impulse.y += df2.y;\r\n            // b2Vec2 P = df.x * m_perp;\r\n            const P = b2Vec2.MulSV(df2.x, this.m_perp, b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n            // float32 LA = df.x * m_s1 + df.y;\r\n            const LA = df2.x * this.m_s1 + df2.y;\r\n            // float32 LB = df.x * m_s2 + df.y;\r\n            const LB = df2.x * this.m_s2 + df2.y;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = cB + rB - cA - rA;\r\n        const d = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2PrismaticJoint.SolvePositionConstraints_s_d);\r\n        // b2Vec2 axis = b2Mul(qA, m_localXAxisA);\r\n        const axis = b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\r\n        // float32 a1 = b2Cross(d + rA, axis);\r\n        const a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), axis);\r\n        // float32 a2 = b2Cross(rB, axis);\r\n        const a2 = b2Vec2.CrossVV(rB, axis);\r\n        // b2Vec2 perp = b2Mul(qA, m_localYAxisA);\r\n        const perp = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\r\n        // float32 s1 = b2Cross(d + rA, perp);\r\n        const s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), perp);\r\n        // float32 s2 = b2Cross(rB, perp);\r\n        const s2 = b2Vec2.CrossVV(rB, perp);\r\n        // b2Vec3 impulse;\r\n        let impulse = b2PrismaticJoint.SolvePositionConstraints_s_impulse;\r\n        // b2Vec2 C1;\r\n        // C1.x = b2Dot(perp, d);\r\n        const C1_x = b2Vec2.DotVV(perp, d);\r\n        // C1.y = aB - aA - m_referenceAngle;\r\n        const C1_y = aB - aA - this.m_referenceAngle;\r\n        let linearError = b2Abs(C1_x);\r\n        let angularError = b2Abs(C1_y);\r\n        let active = false;\r\n        let C2 = 0;\r\n        if (this.m_enableLimit) {\r\n            // float32 translation = b2Dot(axis, d);\r\n            const translation = b2Vec2.DotVV(axis, d);\r\n            if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\r\n                // Prevent large angular corrections\r\n                C2 = b2Clamp(translation, (-b2_maxLinearCorrection), b2_maxLinearCorrection);\r\n                linearError = b2Max(linearError, b2Abs(translation));\r\n                active = true;\r\n            }\r\n            else if (translation <= this.m_lowerTranslation) {\r\n                // Prevent large linear corrections and allow some slop.\r\n                C2 = b2Clamp(translation - this.m_lowerTranslation + b2_linearSlop, (-b2_maxLinearCorrection), 0);\r\n                linearError = b2Max(linearError, this.m_lowerTranslation - translation);\r\n                active = true;\r\n            }\r\n            else if (translation >= this.m_upperTranslation) {\r\n                // Prevent large linear corrections and allow some slop.\r\n                C2 = b2Clamp(translation - this.m_upperTranslation - b2_linearSlop, 0, b2_maxLinearCorrection);\r\n                linearError = b2Max(linearError, translation - this.m_upperTranslation);\r\n                active = true;\r\n            }\r\n        }\r\n        if (active) {\r\n            // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            // float32 k12 = iA * s1 + iB * s2;\r\n            const k12 = iA * s1 + iB * s2;\r\n            // float32 k13 = iA * s1 * a1 + iB * s2 * a2;\r\n            const k13 = iA * s1 * a1 + iB * s2 * a2;\r\n            // float32 k22 = iA + iB;\r\n            let k22 = iA + iB;\r\n            if (k22 === 0) {\r\n                // For fixed rotation\r\n                k22 = 1;\r\n            }\r\n            // float32 k23 = iA * a1 + iB * a2;\r\n            const k23 = iA * a1 + iB * a2;\r\n            // float32 k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\r\n            const k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\r\n            // b2Mat33 K;\r\n            const K = this.m_K3;\r\n            // K.ex.Set(k11, k12, k13);\r\n            K.ex.SetXYZ(k11, k12, k13);\r\n            // K.ey.Set(k12, k22, k23);\r\n            K.ey.SetXYZ(k12, k22, k23);\r\n            // K.ez.Set(k13, k23, k33);\r\n            K.ez.SetXYZ(k13, k23, k33);\r\n            // b2Vec3 C;\r\n            // C.x = C1.x;\r\n            // C.y = C1.y;\r\n            // C.z = C2;\r\n            // impulse = K.Solve33(-C);\r\n            impulse = K.Solve33((-C1_x), (-C1_y), (-C2), impulse);\r\n        }\r\n        else {\r\n            // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n            // float32 k12 = iA * s1 + iB * s2;\r\n            const k12 = iA * s1 + iB * s2;\r\n            // float32 k22 = iA + iB;\r\n            let k22 = iA + iB;\r\n            if (k22 === 0) {\r\n                k22 = 1;\r\n            }\r\n            // b2Mat22 K;\r\n            const K2 = this.m_K2;\r\n            // K.ex.Set(k11, k12);\r\n            K2.ex.Set(k11, k12);\r\n            // K.ey.Set(k12, k22);\r\n            K2.ey.Set(k12, k22);\r\n            // b2Vec2 impulse1 = K.Solve(-C1);\r\n            const impulse1 = K2.Solve((-C1_x), (-C1_y), b2PrismaticJoint.SolvePositionConstraints_s_impulse1);\r\n            impulse.x = impulse1.x;\r\n            impulse.y = impulse1.y;\r\n            impulse.z = 0;\r\n        }\r\n        // b2Vec2 P = impulse.x * perp + impulse.z * axis;\r\n        const P = b2Vec2.AddVV(b2Vec2.MulSV(impulse.x, perp, b2Vec2.s_t0), b2Vec2.MulSV(impulse.z, axis, b2Vec2.s_t1), b2PrismaticJoint.SolvePositionConstraints_s_P);\r\n        // float32 LA = impulse.x * s1 + impulse.y + impulse.z * a1;\r\n        const LA = impulse.x * s1 + impulse.y + impulse.z * a1;\r\n        // float32 LB = impulse.x * s2 + impulse.y + impulse.z * a2;\r\n        const LB = impulse.x * s2 + impulse.y + impulse.z * a2;\r\n        // cA -= mA * P;\r\n        cA.SelfMulSub(mA, P);\r\n        aA -= iA * LA;\r\n        // cB += mB * P;\r\n        cB.SelfMulAdd(mB, P);\r\n        aB += iB * LB;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return linearError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * (m_impulse.x * m_perp + (m_motorImpulse + m_impulse.z) * m_axis);\r\n        return out.Set(inv_dt * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x), inv_dt * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y));\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.y;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetLocalAxisA() { return this.m_localXAxisA; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    GetJointTranslation() {\r\n        // b2Vec2 pA = m_bodyA.GetWorldPoint(m_localAnchorA);\r\n        const pA = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PrismaticJoint.GetJointTranslation_s_pA);\r\n        // b2Vec2 pB = m_bodyB.GetWorldPoint(m_localAnchorB);\r\n        const pB = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PrismaticJoint.GetJointTranslation_s_pB);\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2PrismaticJoint.GetJointTranslation_s_d);\r\n        // b2Vec2 axis = m_bodyA.GetWorldVector(m_localXAxisA);\r\n        const axis = this.m_bodyA.GetWorldVector(this.m_localXAxisA, b2PrismaticJoint.GetJointTranslation_s_axis);\r\n        // float32 translation = b2Dot(d, axis);\r\n        const translation = b2Vec2.DotVV(d, axis);\r\n        return translation;\r\n    }\r\n    GetJointSpeed() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 pA = bA->m_sweep.c + rA;\r\n        const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\r\n        // b2Vec2 pB = bB->m_sweep.c + rB;\r\n        const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\r\n        // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, this.m_axis);\r\n        const vA = bA.m_linearVelocity;\r\n        const vB = bB.m_linearVelocity;\r\n        const wA = bA.m_angularVelocity;\r\n        const wB = bB.m_angularVelocity;\r\n        // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\r\n        const speed = b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(axis, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n        return speed;\r\n    }\r\n    IsLimitEnabled() {\r\n        return this.m_enableLimit;\r\n    }\r\n    EnableLimit(flag) {\r\n        if (flag !== this.m_enableLimit) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableLimit = flag;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    GetLowerLimit() {\r\n        return this.m_lowerTranslation;\r\n    }\r\n    GetUpperLimit() {\r\n        return this.m_upperTranslation;\r\n    }\r\n    SetLimits(lower, upper) {\r\n        if (lower !== this.m_lowerTranslation || upper !== this.m_upperTranslation) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_lowerTranslation = lower;\r\n            this.m_upperTranslation = upper;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_enableMotor = flag;\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_motorSpeed = speed;\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    SetMaxMotorForce(force) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_maxMotorForce = force;\r\n    }\r\n    GetMaxMotorForce() { return this.m_maxMotorForce; }\r\n    GetMotorForce(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2PrismaticJointDef = new b2PrismaticJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.lowerTranslation = %.15f;\\n\", this.m_lowerTranslation);\r\n        log(\"  jd.upperTranslation = %.15f;\\n\", this.m_upperTranslation);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorForce = %.15f;\\n\", this.m_maxMotorForce);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2PrismaticJoint.InitVelocityConstraints_s_d = new b2Vec2();\r\nb2PrismaticJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_f2r = new b2Vec2();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_f1 = new b2Vec3();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_df3 = new b2Vec3();\r\nb2PrismaticJoint.SolveVelocityConstraints_s_df2 = new b2Vec2();\r\nb2PrismaticJoint.SolvePositionConstraints_s_d = new b2Vec2();\r\nb2PrismaticJoint.SolvePositionConstraints_s_impulse = new b2Vec3();\r\nb2PrismaticJoint.SolvePositionConstraints_s_impulse1 = new b2Vec2();\r\nb2PrismaticJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_pA = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_pB = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_d = new b2Vec2();\r\nb2PrismaticJoint.GetJointTranslation_s_axis = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\nexport const b2_minPulleyLength = 2;\r\n/// Pulley joint definition. This requires two ground anchors,\r\n/// two dynamic body anchor points, and a pulley ratio.\r\nexport class b2PulleyJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_pulleyJoint);\r\n        this.groundAnchorA = new b2Vec2(-1, 1);\r\n        this.groundAnchorB = new b2Vec2(1, 1);\r\n        this.localAnchorA = new b2Vec2(-1, 0);\r\n        this.localAnchorB = new b2Vec2(1, 0);\r\n        this.lengthA = 0;\r\n        this.lengthB = 0;\r\n        this.ratio = 1;\r\n        this.collideConnected = true;\r\n    }\r\n    Initialize(bA, bB, groundA, groundB, anchorA, anchorB, r) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.groundAnchorA.Copy(groundA);\r\n        this.groundAnchorB.Copy(groundB);\r\n        this.bodyA.GetLocalPoint(anchorA, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchorB, this.localAnchorB);\r\n        this.lengthA = b2Vec2.DistanceVV(anchorA, groundA);\r\n        this.lengthB = b2Vec2.DistanceVV(anchorB, groundB);\r\n        this.ratio = r;\r\n        ///b2Assert(this.ratio > b2_epsilon);\r\n    }\r\n}\r\nexport class b2PulleyJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_groundAnchorA = new b2Vec2();\r\n        this.m_groundAnchorB = new b2Vec2();\r\n        this.m_lengthA = 0;\r\n        this.m_lengthB = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_constant = 0;\r\n        this.m_ratio = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_uA = new b2Vec2();\r\n        this.m_uB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_groundAnchorA.Copy(def.groundAnchorA);\r\n        this.m_groundAnchorB.Copy(def.groundAnchorB);\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_lengthA = def.lengthA;\r\n        this.m_lengthB = def.lengthB;\r\n        ///b2Assert(def.ratio !== 0);\r\n        this.m_ratio = def.ratio;\r\n        this.m_constant = def.lengthA + this.m_ratio * def.lengthB;\r\n        this.m_impulse = 0;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // Get the pulley axes.\r\n        // m_uA = cA + m_rA - m_groundAnchorA;\r\n        this.m_uA.Copy(cA).SelfAdd(this.m_rA).SelfSub(this.m_groundAnchorA);\r\n        // m_uB = cB + m_rB - m_groundAnchorB;\r\n        this.m_uB.Copy(cB).SelfAdd(this.m_rB).SelfSub(this.m_groundAnchorB);\r\n        const lengthA = this.m_uA.Length();\r\n        const lengthB = this.m_uB.Length();\r\n        if (lengthA > 10 * b2_linearSlop) {\r\n            this.m_uA.SelfMul(1 / lengthA);\r\n        }\r\n        else {\r\n            this.m_uA.SetZero();\r\n        }\r\n        if (lengthB > 10 * b2_linearSlop) {\r\n            this.m_uB.SelfMul(1 / lengthB);\r\n        }\r\n        else {\r\n            this.m_uB.SetZero();\r\n        }\r\n        // Compute effective mass.\r\n        const ruA = b2Vec2.CrossVV(this.m_rA, this.m_uA);\r\n        const ruB = b2Vec2.CrossVV(this.m_rB, this.m_uB);\r\n        const mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n        const mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n        this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\r\n        if (this.m_mass > 0) {\r\n            this.m_mass = 1 / this.m_mass;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support variable time steps.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // Warm starting.\r\n            // b2Vec2 PA = -(m_impulse) * m_uA;\r\n            const PA = b2Vec2.MulSV(-(this.m_impulse), this.m_uA, b2PulleyJoint.InitVelocityConstraints_s_PA);\r\n            // b2Vec2 PB = (-m_ratio * m_impulse) * m_uB;\r\n            const PB = b2Vec2.MulSV((-this.m_ratio * this.m_impulse), this.m_uB, b2PulleyJoint.InitVelocityConstraints_s_PB);\r\n            // vA += m_invMassA * PA;\r\n            vA.SelfMulAdd(this.m_invMassA, PA);\r\n            wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n            // vB += m_invMassB * PB;\r\n            vB.SelfMulAdd(this.m_invMassB, PB);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2PulleyJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2PulleyJoint.SolveVelocityConstraints_s_vpB);\r\n        const Cdot = -b2Vec2.DotVV(this.m_uA, vpA) - this.m_ratio * b2Vec2.DotVV(this.m_uB, vpB);\r\n        const impulse = -this.m_mass * Cdot;\r\n        this.m_impulse += impulse;\r\n        // b2Vec2 PA = -impulse * m_uA;\r\n        const PA = b2Vec2.MulSV(-impulse, this.m_uA, b2PulleyJoint.SolveVelocityConstraints_s_PA);\r\n        // b2Vec2 PB = -m_ratio * impulse * m_uB;\r\n        const PB = b2Vec2.MulSV(-this.m_ratio * impulse, this.m_uB, b2PulleyJoint.SolveVelocityConstraints_s_PB);\r\n        // vA += m_invMassA * PA;\r\n        vA.SelfMulAdd(this.m_invMassA, PA);\r\n        wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n        // vB += m_invMassB * PB;\r\n        vB.SelfMulAdd(this.m_invMassB, PB);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // Get the pulley axes.\r\n        // b2Vec2 uA = cA + rA - m_groundAnchorA;\r\n        const uA = this.m_uA.Copy(cA).SelfAdd(rA).SelfSub(this.m_groundAnchorA);\r\n        // b2Vec2 uB = cB + rB - m_groundAnchorB;\r\n        const uB = this.m_uB.Copy(cB).SelfAdd(rB).SelfSub(this.m_groundAnchorB);\r\n        const lengthA = uA.Length();\r\n        const lengthB = uB.Length();\r\n        if (lengthA > 10 * b2_linearSlop) {\r\n            uA.SelfMul(1 / lengthA);\r\n        }\r\n        else {\r\n            uA.SetZero();\r\n        }\r\n        if (lengthB > 10 * b2_linearSlop) {\r\n            uB.SelfMul(1 / lengthB);\r\n        }\r\n        else {\r\n            uB.SetZero();\r\n        }\r\n        // Compute effective mass.\r\n        const ruA = b2Vec2.CrossVV(rA, uA);\r\n        const ruB = b2Vec2.CrossVV(rB, uB);\r\n        const mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n        const mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n        let mass = mA + this.m_ratio * this.m_ratio * mB;\r\n        if (mass > 0) {\r\n            mass = 1 / mass;\r\n        }\r\n        const C = this.m_constant - lengthA - this.m_ratio * lengthB;\r\n        const linearError = b2Abs(C);\r\n        const impulse = -mass * C;\r\n        // b2Vec2 PA = -impulse * uA;\r\n        const PA = b2Vec2.MulSV(-impulse, uA, b2PulleyJoint.SolvePositionConstraints_s_PA);\r\n        // b2Vec2 PB = -m_ratio * impulse * uB;\r\n        const PB = b2Vec2.MulSV(-this.m_ratio * impulse, uB, b2PulleyJoint.SolvePositionConstraints_s_PB);\r\n        // cA += m_invMassA * PA;\r\n        cA.SelfMulAdd(this.m_invMassA, PA);\r\n        aA += this.m_invIA * b2Vec2.CrossVV(rA, PA);\r\n        // cB += m_invMassB * PB;\r\n        cB.SelfMulAdd(this.m_invMassB, PB);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, PB);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return linearError < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P = m_impulse * m_uB;\r\n        // return inv_dt * P;\r\n        return out.Set(inv_dt * this.m_impulse * this.m_uB.x, inv_dt * this.m_impulse * this.m_uB.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetGroundAnchorA() {\r\n        return this.m_groundAnchorA;\r\n    }\r\n    GetGroundAnchorB() {\r\n        return this.m_groundAnchorB;\r\n    }\r\n    GetLengthA() {\r\n        return this.m_lengthA;\r\n    }\r\n    GetLengthB() {\r\n        return this.m_lengthB;\r\n    }\r\n    GetRatio() {\r\n        return this.m_ratio;\r\n    }\r\n    GetCurrentLengthA() {\r\n        // b2Vec2 p = m_bodyA->GetWorldPoint(m_localAnchorA);\r\n        // b2Vec2 s = m_groundAnchorA;\r\n        // b2Vec2 d = p - s;\r\n        // return d.Length();\r\n        const p = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PulleyJoint.GetCurrentLengthA_s_p);\r\n        const s = this.m_groundAnchorA;\r\n        return b2Vec2.DistanceVV(p, s);\r\n    }\r\n    GetCurrentLengthB() {\r\n        // b2Vec2 p = m_bodyB->GetWorldPoint(m_localAnchorB);\r\n        // b2Vec2 s = m_groundAnchorB;\r\n        // b2Vec2 d = p - s;\r\n        // return d.Length();\r\n        const p = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PulleyJoint.GetCurrentLengthB_s_p);\r\n        const s = this.m_groundAnchorB;\r\n        return b2Vec2.DistanceVV(p, s);\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2PulleyJointDef = new b2PulleyJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.groundAnchorA.Set(%.15f, %.15f);\\n\", this.m_groundAnchorA.x, this.m_groundAnchorA.y);\r\n        log(\"  jd.groundAnchorB.Set(%.15f, %.15f);\\n\", this.m_groundAnchorB.x, this.m_groundAnchorB.y);\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.lengthA = %.15f;\\n\", this.m_lengthA);\r\n        log(\"  jd.lengthB = %.15f;\\n\", this.m_lengthB);\r\n        log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n    ShiftOrigin(newOrigin) {\r\n        this.m_groundAnchorA.SelfSub(newOrigin);\r\n        this.m_groundAnchorB.SelfSub(newOrigin);\r\n    }\r\n}\r\nb2PulleyJoint.InitVelocityConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.InitVelocityConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.SolveVelocityConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.SolvePositionConstraints_s_PA = new b2Vec2();\r\nb2PulleyJoint.SolvePositionConstraints_s_PB = new b2Vec2();\r\nb2PulleyJoint.GetCurrentLengthA_s_p = new b2Vec2();\r\nb2PulleyJoint.GetCurrentLengthB_s_p = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_angularSlop, b2_maxAngularCorrection } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Mat22, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Revolute joint definition. This requires defining an\r\n/// anchor point where the bodies are joined. The definition\r\n/// uses local anchor points so that the initial configuration\r\n/// can violate the constraint slightly. You also need to\r\n/// specify the initial relative angle for joint limits. This\r\n/// helps when saving and loading a game.\r\n/// The local anchor points are measured from the body's origin\r\n/// rather than the center of mass because:\r\n/// 1. you might not know where the center of mass will be.\r\n/// 2. if you add/remove shapes from a body and recompute the mass,\r\n///    the joints will be broken.\r\nexport class b2RevoluteJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_revoluteJoint);\r\n        this.localAnchorA = new b2Vec2(0, 0);\r\n        this.localAnchorB = new b2Vec2(0, 0);\r\n        this.referenceAngle = 0;\r\n        this.enableLimit = false;\r\n        this.lowerAngle = 0;\r\n        this.upperAngle = 0;\r\n        this.enableMotor = false;\r\n        this.motorSpeed = 0;\r\n        this.maxMotorTorque = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2RevoluteJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_impulse = new b2Vec3();\r\n        this.m_motorImpulse = 0;\r\n        this.m_enableMotor = false;\r\n        this.m_maxMotorTorque = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableLimit = false;\r\n        this.m_referenceAngle = 0;\r\n        this.m_lowerAngle = 0;\r\n        this.m_upperAngle = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = new b2Mat33(); // effective mass for point-to-point constraint.\r\n        this.m_motorMass = 0; // effective mass for motor/limit angular constraint.\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat22();\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_referenceAngle = def.referenceAngle;\r\n        this.m_impulse.SetZero();\r\n        this.m_motorImpulse = 0;\r\n        this.m_lowerAngle = def.lowerAngle;\r\n        this.m_upperAngle = def.upperAngle;\r\n        this.m_maxMotorTorque = def.maxMotorTorque;\r\n        this.m_motorSpeed = def.motorSpeed;\r\n        this.m_enableLimit = def.enableLimit;\r\n        this.m_enableMotor = def.enableMotor;\r\n        this.m_limitState = b2LimitState.e_inactiveLimit;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const fixedRotation = (iA + iB === 0);\r\n        this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\r\n        this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\r\n        this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\r\n        this.m_mass.ex.y = this.m_mass.ey.x;\r\n        this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\r\n        this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\r\n        this.m_mass.ex.z = this.m_mass.ez.x;\r\n        this.m_mass.ey.z = this.m_mass.ez.y;\r\n        this.m_mass.ez.z = iA + iB;\r\n        this.m_motorMass = iA + iB;\r\n        if (this.m_motorMass > 0) {\r\n            this.m_motorMass = 1 / this.m_motorMass;\r\n        }\r\n        if (!this.m_enableMotor || fixedRotation) {\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (this.m_enableLimit && !fixedRotation) {\r\n            const jointAngle = aB - aA - this.m_referenceAngle;\r\n            if (b2Abs(this.m_upperAngle - this.m_lowerAngle) < 2 * b2_angularSlop) {\r\n                this.m_limitState = b2LimitState.e_equalLimits;\r\n            }\r\n            else if (jointAngle <= this.m_lowerAngle) {\r\n                if (this.m_limitState !== b2LimitState.e_atLowerLimit) {\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                this.m_limitState = b2LimitState.e_atLowerLimit;\r\n            }\r\n            else if (jointAngle >= this.m_upperAngle) {\r\n                if (this.m_limitState !== b2LimitState.e_atUpperLimit) {\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                this.m_limitState = b2LimitState.e_atUpperLimit;\r\n            }\r\n            else {\r\n                this.m_limitState = b2LimitState.e_inactiveLimit;\r\n                this.m_impulse.z = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.m_limitState = b2LimitState.e_inactiveLimit;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P(m_impulse.x, m_impulse.y);\r\n            const P = b2RevoluteJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const fixedRotation = (iA + iB === 0);\r\n        // Solve motor constraint.\r\n        if (this.m_enableMotor && this.m_limitState !== b2LimitState.e_equalLimits && !fixedRotation) {\r\n            const Cdot = wB - wA - this.m_motorSpeed;\r\n            let impulse = -this.m_motorMass * Cdot;\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorTorque;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve limit constraint.\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit && !fixedRotation) {\r\n            // b2Vec2 Cdot1 = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2RevoluteJoint.SolveVelocityConstraints_s_Cdot1);\r\n            const Cdot2 = wB - wA;\r\n            // b2Vec3 Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 impulse = -this.m_mass.Solve33(Cdot);\r\n            const impulse_v3 = this.m_mass.Solve33(Cdot1.x, Cdot1.y, Cdot2, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v3).SelfNeg();\r\n            if (this.m_limitState === b2LimitState.e_equalLimits) {\r\n                this.m_impulse.SelfAdd(impulse_v3);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                const newImpulse = this.m_impulse.z + impulse_v3.z;\r\n                if (newImpulse < 0) {\r\n                    // b2Vec2 rhs = -Cdot1 + m_impulse.z * b2Vec2(m_mass.ez.x, m_mass.ez.y);\r\n                    const rhs_x = -Cdot1.x + this.m_impulse.z * this.m_mass.ez.x;\r\n                    const rhs_y = -Cdot1.y + this.m_impulse.z * this.m_mass.ez.y;\r\n                    const reduced_v2 = this.m_mass.Solve22(rhs_x, rhs_y, b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2);\r\n                    impulse_v3.x = reduced_v2.x;\r\n                    impulse_v3.y = reduced_v2.y;\r\n                    impulse_v3.z = -this.m_impulse.z;\r\n                    this.m_impulse.x += reduced_v2.x;\r\n                    this.m_impulse.y += reduced_v2.y;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                else {\r\n                    this.m_impulse.SelfAdd(impulse_v3);\r\n                }\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                const newImpulse = this.m_impulse.z + impulse_v3.z;\r\n                if (newImpulse > 0) {\r\n                    // b2Vec2 rhs = -Cdot1 + m_impulse.z * b2Vec2(m_mass.ez.x, m_mass.ez.y);\r\n                    const rhs_x = -Cdot1.x + this.m_impulse.z * this.m_mass.ez.x;\r\n                    const rhs_y = -Cdot1.y + this.m_impulse.z * this.m_mass.ez.y;\r\n                    const reduced_v2 = this.m_mass.Solve22(rhs_x, rhs_y, b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2);\r\n                    impulse_v3.x = reduced_v2.x;\r\n                    impulse_v3.y = reduced_v2.y;\r\n                    impulse_v3.z = -this.m_impulse.z;\r\n                    this.m_impulse.x += reduced_v2.x;\r\n                    this.m_impulse.y += reduced_v2.y;\r\n                    this.m_impulse.z = 0;\r\n                }\r\n                else {\r\n                    this.m_impulse.SelfAdd(impulse_v3);\r\n                }\r\n            }\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2RevoluteJoint.SolveVelocityConstraints_s_P.Set(impulse_v3.x, impulse_v3.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse_v3.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse_v3.z);\r\n        }\r\n        else {\r\n            // Solve point-to-point constraint\r\n            // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n            const Cdot_v2 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n            // b2Vec2 impulse = m_mass.Solve22(-Cdot);\r\n            const impulse_v2 = this.m_mass.Solve22(-Cdot_v2.x, -Cdot_v2.y, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2);\r\n            this.m_impulse.x += impulse_v2.x;\r\n            this.m_impulse.y += impulse_v2.y;\r\n            // vA -= mA * impulse;\r\n            vA.SelfMulSub(mA, impulse_v2);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, impulse_v2);\r\n            // vB += mB * impulse;\r\n            vB.SelfMulAdd(mB, impulse_v2);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, impulse_v2);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        // b2Rot qA(aA), qB(aB);\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        let angularError = 0;\r\n        let positionError = 0;\r\n        const fixedRotation = (this.m_invIA + this.m_invIB === 0);\r\n        // Solve angular limit constraint.\r\n        if (this.m_enableLimit && this.m_limitState !== b2LimitState.e_inactiveLimit && !fixedRotation) {\r\n            const angle = aB - aA - this.m_referenceAngle;\r\n            let limitImpulse = 0;\r\n            if (this.m_limitState === b2LimitState.e_equalLimits) {\r\n                // Prevent large angular corrections\r\n                const C = b2Clamp(angle - this.m_lowerAngle, -b2_maxAngularCorrection, b2_maxAngularCorrection);\r\n                limitImpulse = -this.m_motorMass * C;\r\n                angularError = b2Abs(C);\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atLowerLimit) {\r\n                let C = angle - this.m_lowerAngle;\r\n                angularError = -C;\r\n                // Prevent large angular corrections and allow some slop.\r\n                C = b2Clamp(C + b2_angularSlop, -b2_maxAngularCorrection, 0);\r\n                limitImpulse = -this.m_motorMass * C;\r\n            }\r\n            else if (this.m_limitState === b2LimitState.e_atUpperLimit) {\r\n                let C = angle - this.m_upperAngle;\r\n                angularError = C;\r\n                // Prevent large angular corrections and allow some slop.\r\n                C = b2Clamp(C - b2_angularSlop, 0, b2_maxAngularCorrection);\r\n                limitImpulse = -this.m_motorMass * C;\r\n            }\r\n            aA -= this.m_invIA * limitImpulse;\r\n            aB += this.m_invIB * limitImpulse;\r\n        }\r\n        // Solve point-to-point constraint.\r\n        {\r\n            qA.SetAngle(aA);\r\n            qB.SetAngle(aB);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n            b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n            const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n            b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n            const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n            // b2Vec2 C = cB + rB - cA - rA;\r\n            const C_v2 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2RevoluteJoint.SolvePositionConstraints_s_C_v2);\r\n            // positionError = C.Length();\r\n            positionError = C_v2.Length();\r\n            const mA = this.m_invMassA, mB = this.m_invMassB;\r\n            const iA = this.m_invIA, iB = this.m_invIB;\r\n            const K = this.m_K;\r\n            K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n            K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n            K.ey.x = K.ex.y;\r\n            K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n            // b2Vec2 impulse = -K.Solve(C);\r\n            const impulse = K.Solve(C_v2.x, C_v2.y, b2RevoluteJoint.SolvePositionConstraints_s_impulse).SelfNeg();\r\n            // cA -= mA * impulse;\r\n            cA.SelfMulSub(mA, impulse);\r\n            aA -= iA * b2Vec2.CrossVV(rA, impulse);\r\n            // cB += mB * impulse;\r\n            cB.SelfMulAdd(mB, impulse);\r\n            aB += iB * b2Vec2.CrossVV(rB, impulse);\r\n        }\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\r\n        // return inv_dt * P;\r\n        return out.Set(inv_dt * this.m_impulse.x, inv_dt * this.m_impulse.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.z;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    GetJointAngle() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_sweep.a - bA->this.m_sweep.a - this.m_referenceAngle;\r\n        return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;\r\n    }\r\n    GetJointSpeed() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_angularVelocity - bA->this.m_angularVelocity;\r\n        return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        if (this.m_enableMotor !== flag) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableMotor = flag;\r\n        }\r\n    }\r\n    GetMotorTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    SetMaxMotorTorque(torque) {\r\n        this.m_maxMotorTorque = torque;\r\n    }\r\n    GetMaxMotorTorque() { return this.m_maxMotorTorque; }\r\n    IsLimitEnabled() {\r\n        return this.m_enableLimit;\r\n    }\r\n    EnableLimit(flag) {\r\n        if (flag !== this.m_enableLimit) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_enableLimit = flag;\r\n            this.m_impulse.z = 0;\r\n        }\r\n    }\r\n    GetLowerLimit() {\r\n        return this.m_lowerAngle;\r\n    }\r\n    GetUpperLimit() {\r\n        return this.m_upperAngle;\r\n    }\r\n    SetLimits(lower, upper) {\r\n        if (lower !== this.m_lowerAngle || upper !== this.m_upperAngle) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_impulse.z = 0;\r\n            this.m_lowerAngle = lower;\r\n            this.m_upperAngle = upper;\r\n        }\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        if (this.m_motorSpeed !== speed) {\r\n            this.m_bodyA.SetAwake(true);\r\n            this.m_bodyB.SetAwake(true);\r\n            this.m_motorSpeed = speed;\r\n        }\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2RevoluteJointDef = new b2RevoluteJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.lowerAngle = %.15f;\\n\", this.m_lowerAngle);\r\n        log(\"  jd.upperAngle = %.15f;\\n\", this.m_upperAngle);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2RevoluteJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_impulse_v3 = new b2Vec3();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolvePositionConstraints_s_C_v2 = new b2Vec2();\r\nb2RevoluteJoint.SolvePositionConstraints_s_impulse = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxLinearCorrection } from \"../../Common/b2Settings\";\r\nimport { b2Min, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2LimitState } from \"./b2Joint\";\r\n/// Rope joint definition. This requires two body anchor points and\r\n/// a maximum lengths.\r\n/// Note: by default the connected objects will not collide.\r\n/// see collideConnected in b2JointDef.\r\nexport class b2RopeJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_ropeJoint);\r\n        this.localAnchorA = new b2Vec2(-1, 0);\r\n        this.localAnchorB = new b2Vec2(1, 0);\r\n        this.maxLength = 0;\r\n    }\r\n}\r\nexport class b2RopeJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_maxLength = 0;\r\n        this.m_length = 0;\r\n        this.m_impulse = 0;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_u = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = 0;\r\n        this.m_state = b2LimitState.e_inactiveLimit;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_maxLength = def.maxLength;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // this.m_rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // this.m_rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // this.m_u = cB + this.m_rB - cA - this.m_rA;\r\n        this.m_u.Copy(cB).SelfAdd(this.m_rB).SelfSub(cA).SelfSub(this.m_rA);\r\n        this.m_length = this.m_u.Length();\r\n        const C = this.m_length - this.m_maxLength;\r\n        if (C > 0) {\r\n            this.m_state = b2LimitState.e_atUpperLimit;\r\n        }\r\n        else {\r\n            this.m_state = b2LimitState.e_inactiveLimit;\r\n        }\r\n        if (this.m_length > b2_linearSlop) {\r\n            this.m_u.SelfMul(1 / this.m_length);\r\n        }\r\n        else {\r\n            this.m_u.SetZero();\r\n            this.m_mass = 0;\r\n            this.m_impulse = 0;\r\n            return;\r\n        }\r\n        // Compute effective mass.\r\n        const crA = b2Vec2.CrossVV(this.m_rA, this.m_u);\r\n        const crB = b2Vec2.CrossVV(this.m_rB, this.m_u);\r\n        const invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB + this.m_invIB * crB * crB;\r\n        this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n        if (data.step.warmStarting) {\r\n            // Scale the impulse to support a variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_u;\r\n            const P = b2Vec2.MulSV(this.m_impulse, this.m_u, b2RopeJoint.InitVelocityConstraints_s_P);\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Cdot = dot(u, v + cross(w, r))\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2RopeJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2RopeJoint.SolveVelocityConstraints_s_vpB);\r\n        // float32 C = m_length - m_maxLength;\r\n        const C = this.m_length - this.m_maxLength;\r\n        // float32 Cdot = b2Dot(m_u, vpB - vpA);\r\n        let Cdot = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\r\n        // Predictive constraint.\r\n        if (C < 0) {\r\n            Cdot += data.step.inv_dt * C;\r\n        }\r\n        let impulse = -this.m_mass * Cdot;\r\n        const oldImpulse = this.m_impulse;\r\n        this.m_impulse = b2Min(0, this.m_impulse + impulse);\r\n        impulse = this.m_impulse - oldImpulse;\r\n        // b2Vec2 P = impulse * m_u;\r\n        const P = b2Vec2.MulSV(impulse, this.m_u, b2RopeJoint.SolveVelocityConstraints_s_P);\r\n        // vA -= m_invMassA * P;\r\n        vA.SelfMulSub(this.m_invMassA, P);\r\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n        // vB += m_invMassB * P;\r\n        vB.SelfMulAdd(this.m_invMassB, P);\r\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 u = cB + rB - cA - rA;\r\n        const u = this.m_u.Copy(cB).SelfAdd(rB).SelfSub(cA).SelfSub(rA);\r\n        const length = u.Normalize();\r\n        let C = length - this.m_maxLength;\r\n        C = b2Clamp(C, 0, b2_maxLinearCorrection);\r\n        const impulse = -this.m_mass * C;\r\n        // b2Vec2 P = impulse * u;\r\n        const P = b2Vec2.MulSV(impulse, u, b2RopeJoint.SolvePositionConstraints_s_P);\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return length - this.m_maxLength < b2_linearSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        const F = b2Vec2.MulSV((inv_dt * this.m_impulse), this.m_u, out);\r\n        return F;\r\n        // return out.Set(inv_dt * this.m_linearImpulse.x, inv_dt * this.m_linearImpulse.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return 0;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    SetMaxLength(length) { this.m_maxLength = length; }\r\n    GetMaxLength() {\r\n        return this.m_maxLength;\r\n    }\r\n    GetLimitState() {\r\n        return this.m_state;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2RopeJointDef = new b2RopeJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.maxLength = %.15f;\\n\", this.m_maxLength);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2RopeJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\nb2RopeJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2RopeJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJSb3BlSm9pbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9Cb3gyRC9Cb3gyRC9EeW5hbWljcy9Kb2ludHMvYjJSb3BlSm9pbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsYUFBYSxFQUFFLHNCQUFzQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDaEYsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFHM0UsbUVBQW1FO0FBQ25FLHNCQUFzQjtBQUN0Qiw0REFBNEQ7QUFDNUQsdUNBQXVDO0FBQ3ZDLE1BQU0sT0FBTyxjQUFlLFNBQVEsVUFBVTtJQU81QztRQUNFLEtBQUssQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7UUFQMUIsaUJBQVksR0FBVyxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUV6QyxpQkFBWSxHQUFXLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUV4QyxjQUFTLEdBQVcsQ0FBQyxDQUFDO0lBSTdCLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxXQUFZLFNBQVEsT0FBTztJQTRCdEMsWUFBWSxHQUFtQjtRQUM3QixLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUE1QmIsZ0JBQWdCO1FBQ1QsbUJBQWMsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ3RDLG1CQUFjLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUN0QyxnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUN4QixhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBQ3JCLGNBQVMsR0FBVyxDQUFD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","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_linearSlop, b2_angularSlop } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Vec2, b2Vec3, b2Mat33, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Weld joint definition. You need to specify local anchor points\r\n/// where they are attached and the relative body angle. The position\r\n/// of the anchor points is important for computing the reaction torque.\r\nexport class b2WeldJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_weldJoint);\r\n        this.localAnchorA = new b2Vec2();\r\n        this.localAnchorB = new b2Vec2();\r\n        this.referenceAngle = 0;\r\n        this.frequencyHz = 0;\r\n        this.dampingRatio = 0;\r\n    }\r\n    Initialize(bA, bB, anchor) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n    }\r\n}\r\nexport class b2WeldJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        this.m_bias = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_referenceAngle = 0;\r\n        this.m_gamma = 0;\r\n        this.m_impulse = new b2Vec3(0, 0, 0);\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_mass = new b2Mat33();\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_K = new b2Mat33();\r\n        this.m_frequencyHz = def.frequencyHz;\r\n        this.m_dampingRatio = def.dampingRatio;\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_referenceAngle = def.referenceAngle;\r\n        this.m_impulse.SetZero();\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // J = [-I -r1_skew I r2_skew]\r\n        //     [ 0       -1 0       1]\r\n        // r_skew = [-ry; rx]\r\n        // Matlab\r\n        // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n        //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n        //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\r\n        K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\r\n        K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\r\n        K.ex.y = K.ey.x;\r\n        K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\r\n        K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\r\n        K.ex.z = K.ez.x;\r\n        K.ey.z = K.ez.y;\r\n        K.ez.z = iA + iB;\r\n        if (this.m_frequencyHz > 0) {\r\n            K.GetInverse22(this.m_mass);\r\n            let invM = iA + iB;\r\n            const m = invM > 0 ? 1 / invM : 0;\r\n            const C = aB - aA - this.m_referenceAngle;\r\n            // Frequency\r\n            const omega = 2 * b2_pi * this.m_frequencyHz;\r\n            // Damping coefficient\r\n            const d = 2 * m * this.m_dampingRatio * omega;\r\n            // Spring stiffness\r\n            const k = m * omega * omega;\r\n            // magic formulas\r\n            const h = data.step.dt;\r\n            this.m_gamma = h * (d + h * k);\r\n            this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\r\n            this.m_bias = C * h * k * this.m_gamma;\r\n            invM += this.m_gamma;\r\n            this.m_mass.ez.z = invM !== 0 ? 1 / invM : 0;\r\n        }\r\n        else {\r\n            K.GetSymInverse33(this.m_mass);\r\n            this.m_gamma = 0;\r\n            this.m_bias = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support a variable time step.\r\n            this.m_impulse.SelfMul(data.step.dtRatio);\r\n            // b2Vec2 P(m_impulse.x, m_impulse.y);\r\n            const P = b2WeldJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_impulse.z);\r\n        }\r\n        else {\r\n            this.m_impulse.SetZero();\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        if (this.m_frequencyHz > 0) {\r\n            const Cdot2 = wB - wA;\r\n            const impulse2 = -this.m_mass.ez.z * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z);\r\n            this.m_impulse.z += impulse2;\r\n            wA -= iA * impulse2;\r\n            wB += iB * impulse2;\r\n            // b2Vec2 Cdot1 = vB + b2Vec2.CrossSV(wB, this.m_rB) - vA - b2Vec2.CrossSV(wA, this.m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\r\n            // b2Vec2 impulse1 = -b2Mul22(m_mass, Cdot1);\r\n            const impulse1 = b2Mat33.MulM33XY(this.m_mass, Cdot1.x, Cdot1.y, b2WeldJoint.SolveVelocityConstraints_s_impulse1).SelfNeg();\r\n            this.m_impulse.x += impulse1.x;\r\n            this.m_impulse.y += impulse1.y;\r\n            // b2Vec2 P = impulse1;\r\n            const P = impulse1;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            // wA -= iA * b2Cross(m_rA, P);\r\n            wA -= iA * b2Vec2.CrossVV(this.m_rA, P);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            // wB += iB * b2Cross(m_rB, P);\r\n            wB += iB * b2Vec2.CrossVV(this.m_rB, P);\r\n        }\r\n        else {\r\n            // b2Vec2 Cdot1 = vB + b2Cross(wB, this.m_rB) - vA - b2Cross(wA, this.m_rA);\r\n            const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\r\n            const Cdot2 = wB - wA;\r\n            // b2Vec3 const Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n            // b2Vec3 impulse = -b2Mul(m_mass, Cdot);\r\n            const impulse = b2Mat33.MulM33XYZ(this.m_mass, Cdot1.x, Cdot1.y, Cdot2, b2WeldJoint.SolveVelocityConstraints_s_impulse).SelfNeg();\r\n            this.m_impulse.SelfAdd(impulse);\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2WeldJoint.SolveVelocityConstraints_s_P.Set(impulse.x, impulse.y);\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        let positionError, angularError;\r\n        const K = this.m_K;\r\n        K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\r\n        K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\r\n        K.ez.x = -rA.y * iA - rB.y * iB;\r\n        K.ex.y = K.ey.x;\r\n        K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\r\n        K.ez.y = rA.x * iA + rB.x * iB;\r\n        K.ex.z = K.ez.x;\r\n        K.ey.z = K.ez.y;\r\n        K.ez.z = iA + iB;\r\n        if (this.m_frequencyHz > 0) {\r\n            // b2Vec2 C1 =  cB + rB - cA - rA;\r\n            const C1 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WeldJoint.SolvePositionConstraints_s_C1);\r\n            positionError = C1.Length();\r\n            angularError = 0;\r\n            // b2Vec2 P = -K.Solve22(C1);\r\n            const P = K.Solve22(C1.x, C1.y, b2WeldJoint.SolvePositionConstraints_s_P).SelfNeg();\r\n            // cA -= mA * P;\r\n            cA.SelfMulSub(mA, P);\r\n            aA -= iA * b2Vec2.CrossVV(rA, P);\r\n            // cB += mB * P;\r\n            cB.SelfMulAdd(mB, P);\r\n            aB += iB * b2Vec2.CrossVV(rB, P);\r\n        }\r\n        else {\r\n            // b2Vec2 C1 =  cB + rB - cA - rA;\r\n            const C1 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WeldJoint.SolvePositionConstraints_s_C1);\r\n            const C2 = aB - aA - this.m_referenceAngle;\r\n            positionError = C1.Length();\r\n            angularError = b2Abs(C2);\r\n            // b2Vec3 C(C1.x, C1.y, C2);\r\n            // b2Vec3 impulse = -K.Solve33(C);\r\n            const impulse = K.Solve33(C1.x, C1.y, C2, b2WeldJoint.SolvePositionConstraints_s_impulse).SelfNeg();\r\n            // b2Vec2 P(impulse.x, impulse.y);\r\n            const P = b2WeldJoint.SolvePositionConstraints_s_P.Set(impulse.x, impulse.y);\r\n            // cA -= mA * P;\r\n            cA.SelfMulSub(mA, P);\r\n            aA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\r\n            // cB += mB * P;\r\n            cB.SelfMulAdd(mB, P);\r\n            aB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\r\n        }\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\r\n        // return inv_dt * P;\r\n        return out.Set(inv_dt * this.m_impulse.x, inv_dt * this.m_impulse.y);\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_impulse.z;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetReferenceAngle() { return this.m_referenceAngle; }\r\n    SetFrequency(hz) { this.m_frequencyHz = hz; }\r\n    GetFrequency() { return this.m_frequencyHz; }\r\n    SetDampingRatio(ratio) { this.m_dampingRatio = ratio; }\r\n    GetDampingRatio() { return this.m_dampingRatio; }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2WeldJointDef = new b2WeldJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2WeldJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_impulse1 = new b2Vec2();\r\nb2WeldJoint.SolveVelocityConstraints_s_impulse = new b2Vec3();\r\nb2WeldJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_C1 = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2WeldJoint.SolvePositionConstraints_s_impulse = new b2Vec3();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Clamp, b2Vec2, b2Rot } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType } from \"./b2Joint\";\r\n/// Wheel joint definition. This requires defining a line of\r\n/// motion using an axis and an anchor point. The definition uses local\r\n/// anchor points and a local axis so that the initial configuration\r\n/// can violate the constraint slightly. The joint translation is zero\r\n/// when the local anchor points coincide in world space. Using local\r\n/// anchors and a local axis helps when saving and loading a game.\r\nexport class b2WheelJointDef extends b2JointDef {\r\n    constructor() {\r\n        super(b2JointType.e_wheelJoint);\r\n        this.localAnchorA = new b2Vec2(0, 0);\r\n        this.localAnchorB = new b2Vec2(0, 0);\r\n        this.localAxisA = new b2Vec2(1, 0);\r\n        this.enableMotor = false;\r\n        this.maxMotorTorque = 0;\r\n        this.motorSpeed = 0;\r\n        this.frequencyHz = 2;\r\n        this.dampingRatio = 0.7;\r\n    }\r\n    Initialize(bA, bB, anchor, axis) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n        this.bodyA.GetLocalVector(axis, this.localAxisA);\r\n    }\r\n}\r\nexport class b2WheelJoint extends b2Joint {\r\n    constructor(def) {\r\n        super(def);\r\n        this.m_frequencyHz = 0;\r\n        this.m_dampingRatio = 0;\r\n        // Solver shared\r\n        this.m_localAnchorA = new b2Vec2();\r\n        this.m_localAnchorB = new b2Vec2();\r\n        this.m_localXAxisA = new b2Vec2();\r\n        this.m_localYAxisA = new b2Vec2();\r\n        this.m_impulse = 0;\r\n        this.m_motorImpulse = 0;\r\n        this.m_springImpulse = 0;\r\n        this.m_maxMotorTorque = 0;\r\n        this.m_motorSpeed = 0;\r\n        this.m_enableMotor = false;\r\n        // Solver temp\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_localCenterA = new b2Vec2();\r\n        this.m_localCenterB = new b2Vec2();\r\n        this.m_invMassA = 0;\r\n        this.m_invMassB = 0;\r\n        this.m_invIA = 0;\r\n        this.m_invIB = 0;\r\n        this.m_ax = new b2Vec2();\r\n        this.m_ay = new b2Vec2();\r\n        this.m_sAx = 0;\r\n        this.m_sBx = 0;\r\n        this.m_sAy = 0;\r\n        this.m_sBy = 0;\r\n        this.m_mass = 0;\r\n        this.m_motorMass = 0;\r\n        this.m_springMass = 0;\r\n        this.m_bias = 0;\r\n        this.m_gamma = 0;\r\n        this.m_qA = new b2Rot();\r\n        this.m_qB = new b2Rot();\r\n        this.m_lalcA = new b2Vec2();\r\n        this.m_lalcB = new b2Vec2();\r\n        this.m_rA = new b2Vec2();\r\n        this.m_rB = new b2Vec2();\r\n        this.m_frequencyHz = def.frequencyHz;\r\n        this.m_dampingRatio = def.dampingRatio;\r\n        this.m_localAnchorA.Copy(def.localAnchorA);\r\n        this.m_localAnchorB.Copy(def.localAnchorB);\r\n        this.m_localXAxisA.Copy(def.localAxisA);\r\n        b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\r\n        this.m_maxMotorTorque = def.maxMotorTorque;\r\n        this.m_motorSpeed = def.motorSpeed;\r\n        this.m_enableMotor = def.enableMotor;\r\n        this.m_ax.SetZero();\r\n        this.m_ay.SetZero();\r\n    }\r\n    GetMotorSpeed() {\r\n        return this.m_motorSpeed;\r\n    }\r\n    GetMaxMotorTorque() {\r\n        return this.m_maxMotorTorque;\r\n    }\r\n    SetSpringFrequencyHz(hz) {\r\n        this.m_frequencyHz = hz;\r\n    }\r\n    GetSpringFrequencyHz() {\r\n        return this.m_frequencyHz;\r\n    }\r\n    SetSpringDampingRatio(ratio) {\r\n        this.m_dampingRatio = ratio;\r\n    }\r\n    GetSpringDampingRatio() {\r\n        return this.m_dampingRatio;\r\n    }\r\n    InitVelocityConstraints(data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const cA = data.positions[this.m_indexA].c;\r\n        const aA = data.positions[this.m_indexA].a;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        const aB = data.positions[this.m_indexB].a;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // Compute the effective masses.\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = cB + rB - cA - rA;\r\n        const d = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WheelJoint.InitVelocityConstraints_s_d);\r\n        // Point to line constraint\r\n        {\r\n            // m_ay = b2Mul(qA, m_localYAxisA);\r\n            b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\r\n            // m_sAy = b2Cross(d + rA, m_ay);\r\n            this.m_sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ay);\r\n            // m_sBy = b2Cross(rB, m_ay);\r\n            this.m_sBy = b2Vec2.CrossVV(rB, this.m_ay);\r\n            this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy * this.m_sBy;\r\n            if (this.m_mass > 0) {\r\n                this.m_mass = 1 / this.m_mass;\r\n            }\r\n        }\r\n        // Spring constraint\r\n        this.m_springMass = 0;\r\n        this.m_bias = 0;\r\n        this.m_gamma = 0;\r\n        if (this.m_frequencyHz > 0) {\r\n            // m_ax = b2Mul(qA, m_localXAxisA);\r\n            b2Rot.MulRV(qA, this.m_localXAxisA, this.m_ax);\r\n            // m_sAx = b2Cross(d + rA, m_ax);\r\n            this.m_sAx = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ax);\r\n            // m_sBx = b2Cross(rB, m_ax);\r\n            this.m_sBx = b2Vec2.CrossVV(rB, this.m_ax);\r\n            const invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx * this.m_sBx;\r\n            if (invMass > 0) {\r\n                this.m_springMass = 1 / invMass;\r\n                const C = b2Vec2.DotVV(d, this.m_ax);\r\n                // Frequency\r\n                const omega = 2 * b2_pi * this.m_frequencyHz;\r\n                // Damping coefficient\r\n                const dc = 2 * this.m_springMass * this.m_dampingRatio * omega;\r\n                // Spring stiffness\r\n                const k = this.m_springMass * omega * omega;\r\n                // magic formulas\r\n                const h = data.step.dt;\r\n                this.m_gamma = h * (dc + h * k);\r\n                if (this.m_gamma > 0) {\r\n                    this.m_gamma = 1 / this.m_gamma;\r\n                }\r\n                this.m_bias = C * h * k * this.m_gamma;\r\n                this.m_springMass = invMass + this.m_gamma;\r\n                if (this.m_springMass > 0) {\r\n                    this.m_springMass = 1 / this.m_springMass;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.m_springImpulse = 0;\r\n        }\r\n        // Rotational motor\r\n        if (this.m_enableMotor) {\r\n            this.m_motorMass = iA + iB;\r\n            if (this.m_motorMass > 0) {\r\n                this.m_motorMass = 1 / this.m_motorMass;\r\n            }\r\n        }\r\n        else {\r\n            this.m_motorMass = 0;\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Account for variable time step.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            this.m_springImpulse *= data.step.dtRatio;\r\n            this.m_motorImpulse *= data.step.dtRatio;\r\n            // b2Vec2 P = m_impulse * m_ay + m_springImpulse * m_ax;\r\n            const P = b2Vec2.AddVV(b2Vec2.MulSV(this.m_impulse, this.m_ay, b2Vec2.s_t0), b2Vec2.MulSV(this.m_springImpulse, this.m_ax, b2Vec2.s_t1), b2WheelJoint.InitVelocityConstraints_s_P);\r\n            // float32 LA = m_impulse * m_sAy + m_springImpulse * m_sAx + m_motorImpulse;\r\n            const LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\r\n            // float32 LB = m_impulse * m_sBy + m_springImpulse * m_sBx + m_motorImpulse;\r\n            const LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\r\n            // vA -= m_invMassA * P;\r\n            vA.SelfMulSub(this.m_invMassA, P);\r\n            wA -= this.m_invIA * LA;\r\n            // vB += m_invMassB * P;\r\n            vB.SelfMulAdd(this.m_invMassB, P);\r\n            wB += this.m_invIB * LB;\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n            this.m_springImpulse = 0;\r\n            this.m_motorImpulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolveVelocityConstraints(data) {\r\n        const mA = this.m_invMassA, mB = this.m_invMassB;\r\n        const iA = this.m_invIA, iB = this.m_invIB;\r\n        const vA = data.velocities[this.m_indexA].v;\r\n        let wA = data.velocities[this.m_indexA].w;\r\n        const vB = data.velocities[this.m_indexB].v;\r\n        let wB = data.velocities[this.m_indexB].w;\r\n        // Solve spring constraint\r\n        {\r\n            const Cdot = b2Vec2.DotVV(this.m_ax, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBx * wB - this.m_sAx * wA;\r\n            const impulse = -this.m_springMass * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse);\r\n            this.m_springImpulse += impulse;\r\n            // b2Vec2 P = impulse * m_ax;\r\n            const P = b2Vec2.MulSV(impulse, this.m_ax, b2WheelJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_sAx;\r\n            const LB = impulse * this.m_sBx;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // Solve rotational motor constraint\r\n        {\r\n            const Cdot = wB - wA - this.m_motorSpeed;\r\n            let impulse = -this.m_motorMass * Cdot;\r\n            const oldImpulse = this.m_motorImpulse;\r\n            const maxImpulse = data.step.dt * this.m_maxMotorTorque;\r\n            this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\r\n            impulse = this.m_motorImpulse - oldImpulse;\r\n            wA -= iA * impulse;\r\n            wB += iB * impulse;\r\n        }\r\n        // Solve point to line constraint\r\n        {\r\n            const Cdot = b2Vec2.DotVV(this.m_ay, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBy * wB - this.m_sAy * wA;\r\n            const impulse = -this.m_mass * Cdot;\r\n            this.m_impulse += impulse;\r\n            // b2Vec2 P = impulse * m_ay;\r\n            const P = b2Vec2.MulSV(impulse, this.m_ay, b2WheelJoint.SolveVelocityConstraints_s_P);\r\n            const LA = impulse * this.m_sAy;\r\n            const LB = impulse * this.m_sBy;\r\n            // vA -= mA * P;\r\n            vA.SelfMulSub(mA, P);\r\n            wA -= iA * LA;\r\n            // vB += mB * P;\r\n            vB.SelfMulAdd(mB, P);\r\n            wB += iB * LB;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    }\r\n    SolvePositionConstraints(data) {\r\n        const cA = data.positions[this.m_indexA].c;\r\n        let aA = data.positions[this.m_indexA].a;\r\n        const cB = data.positions[this.m_indexB].c;\r\n        let aB = data.positions[this.m_indexB].a;\r\n        const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 d = (cB - cA) + rB - rA;\r\n        const d = b2Vec2.AddVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), b2Vec2.SubVV(rB, rA, b2Vec2.s_t1), b2WheelJoint.SolvePositionConstraints_s_d);\r\n        // b2Vec2 ay = b2Mul(qA, m_localYAxisA);\r\n        const ay = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\r\n        // float32 sAy = b2Cross(d + rA, ay);\r\n        const sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), ay);\r\n        // float32 sBy = b2Cross(rB, ay);\r\n        const sBy = b2Vec2.CrossVV(rB, ay);\r\n        // float32 C = b2Dot(d, ay);\r\n        const C = b2Vec2.DotVV(d, this.m_ay);\r\n        const k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy;\r\n        let impulse;\r\n        if (k !== 0) {\r\n            impulse = -C / k;\r\n        }\r\n        else {\r\n            impulse = 0;\r\n        }\r\n        // b2Vec2 P = impulse * ay;\r\n        const P = b2Vec2.MulSV(impulse, ay, b2WheelJoint.SolvePositionConstraints_s_P);\r\n        const LA = impulse * sAy;\r\n        const LB = impulse * sBy;\r\n        // cA -= m_invMassA * P;\r\n        cA.SelfMulSub(this.m_invMassA, P);\r\n        aA -= this.m_invIA * LA;\r\n        // cB += m_invMassB * P;\r\n        cB.SelfMulAdd(this.m_invMassB, P);\r\n        aB += this.m_invIB * LB;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return b2Abs(C) <= b2_linearSlop;\r\n    }\r\n    GetDefinition(def) {\r\n        ///b2Assert(false); // TODO\r\n        return def;\r\n    }\r\n    GetAnchorA(out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    }\r\n    GetAnchorB(out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    }\r\n    GetReactionForce(inv_dt, out) {\r\n        // return inv_dt * (m_impulse * m_ay + m_springImpulse * m_ax);\r\n        out.x = inv_dt * (this.m_impulse * this.m_ay.x + this.m_springImpulse * this.m_ax.x);\r\n        out.y = inv_dt * (this.m_impulse * this.m_ay.y + this.m_springImpulse * this.m_ax.y);\r\n        return out;\r\n    }\r\n    GetReactionTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    GetLocalAnchorA() { return this.m_localAnchorA; }\r\n    GetLocalAnchorB() { return this.m_localAnchorB; }\r\n    GetLocalAxisA() { return this.m_localXAxisA; }\r\n    GetJointTranslation() {\r\n        return this.GetPrismaticJointTranslation();\r\n    }\r\n    GetJointSpeed() {\r\n        return this.GetRevoluteJointSpeed();\r\n    }\r\n    GetPrismaticJointTranslation() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        const pA = bA.GetWorldPoint(this.m_localAnchorA, new b2Vec2());\r\n        const pB = bB.GetWorldPoint(this.m_localAnchorB, new b2Vec2());\r\n        const d = b2Vec2.SubVV(pB, pA, new b2Vec2());\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\r\n        const translation = b2Vec2.DotVV(d, axis);\r\n        return translation;\r\n    }\r\n    GetPrismaticJointSpeed() {\r\n        const bA = this.m_bodyA;\r\n        const bB = this.m_bodyB;\r\n        // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\r\n        const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\r\n        b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\r\n        const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\r\n        // b2Vec2 pA = bA->m_sweep.c + rA;\r\n        const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\r\n        // b2Vec2 pB = bB->m_sweep.c + rB;\r\n        const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\r\n        // b2Vec2 d = pB - pA;\r\n        const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\r\n        // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\r\n        const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\r\n        const vA = bA.m_linearVelocity;\r\n        const vB = bB.m_linearVelocity;\r\n        const wA = bA.m_angularVelocity;\r\n        const wB = bB.m_angularVelocity;\r\n        // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\r\n        const speed = b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\r\n            b2Vec2.DotVV(axis, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n        return speed;\r\n    }\r\n    GetRevoluteJointAngle() {\r\n        // b2Body* bA = this.m_bodyA;\r\n        // b2Body* bB = this.m_bodyB;\r\n        // return bB->this.m_sweep.a - bA->this.m_sweep.a;\r\n        return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a;\r\n    }\r\n    GetRevoluteJointSpeed() {\r\n        const wA = this.m_bodyA.m_angularVelocity;\r\n        const wB = this.m_bodyB.m_angularVelocity;\r\n        return wB - wA;\r\n    }\r\n    IsMotorEnabled() {\r\n        return this.m_enableMotor;\r\n    }\r\n    EnableMotor(flag) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_enableMotor = flag;\r\n    }\r\n    SetMotorSpeed(speed) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_motorSpeed = speed;\r\n    }\r\n    SetMaxMotorTorque(force) {\r\n        this.m_bodyA.SetAwake(true);\r\n        this.m_bodyB.SetAwake(true);\r\n        this.m_maxMotorTorque = force;\r\n    }\r\n    GetMotorTorque(inv_dt) {\r\n        return inv_dt * this.m_motorImpulse;\r\n    }\r\n    Dump(log) {\r\n        const indexA = this.m_bodyA.m_islandIndex;\r\n        const indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2WheelJointDef = new b2WheelJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\r\n        log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n        log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\r\n        log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n        log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    }\r\n}\r\nb2WheelJoint.InitVelocityConstraints_s_d = new b2Vec2();\r\nb2WheelJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\nb2WheelJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2WheelJoint.SolvePositionConstraints_s_d = new b2Vec2();\r\nb2WheelJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","import { b2JointType } from \"./b2Joint\";\r\nimport { b2AreaJoint } from \"./b2AreaJoint\";\r\nimport { b2DistanceJoint } from \"./b2DistanceJoint\";\r\nimport { b2FrictionJoint } from \"./b2FrictionJoint\";\r\nimport { b2GearJoint } from \"./b2GearJoint\";\r\nimport { b2MotorJoint } from \"./b2MotorJoint\";\r\nimport { b2MouseJoint } from \"./b2MouseJoint\";\r\nimport { b2PrismaticJoint } from \"./b2PrismaticJoint\";\r\nimport { b2PulleyJoint } from \"./b2PulleyJoint\";\r\nimport { b2RevoluteJoint } from \"./b2RevoluteJoint\";\r\nimport { b2RopeJoint } from \"./b2RopeJoint\";\r\nimport { b2WeldJoint } from \"./b2WeldJoint\";\r\nimport { b2WheelJoint } from \"./b2WheelJoint\";\r\nexport class b2JointFactory {\r\n    static Create(def, allocator) {\r\n        let joint = null;\r\n        switch (def.type) {\r\n            case b2JointType.e_distanceJoint:\r\n                joint = new b2DistanceJoint(def);\r\n                break;\r\n            case b2JointType.e_mouseJoint:\r\n                joint = new b2MouseJoint(def);\r\n                break;\r\n            case b2JointType.e_prismaticJoint:\r\n                joint = new b2PrismaticJoint(def);\r\n                break;\r\n            case b2JointType.e_revoluteJoint:\r\n                joint = new b2RevoluteJoint(def);\r\n                break;\r\n            case b2JointType.e_pulleyJoint:\r\n                joint = new b2PulleyJoint(def);\r\n                break;\r\n            case b2JointType.e_gearJoint:\r\n                joint = new b2GearJoint(def);\r\n                break;\r\n            case b2JointType.e_wheelJoint:\r\n                joint = new b2WheelJoint(def);\r\n                break;\r\n            case b2JointType.e_weldJoint:\r\n                joint = new b2WeldJoint(def);\r\n                break;\r\n            case b2JointType.e_frictionJoint:\r\n                joint = new b2FrictionJoint(def);\r\n                break;\r\n            case b2JointType.e_ropeJoint:\r\n                joint = new b2RopeJoint(def);\r\n                break;\r\n            case b2JointType.e_motorJoint:\r\n                joint = new b2MotorJoint(def);\r\n                break;\r\n            case b2JointType.e_areaJoint:\r\n                joint = new b2AreaJoint(def);\r\n                break;\r\n            default:\r\n                ///b2Assert(false);\r\n                break;\r\n        }\r\n        return joint;\r\n    }\r\n    static Destroy(joint, allocator) {\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJKb2ludEZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9Cb3gyRC9Cb3gyRC9EeW5hbWljcy9Kb2ludHMvYjJKb2ludEZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDN0QsT0FBTyxFQUFFLFdBQVcsRUFBa0IsTUFBTSxlQUFlLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBc0IsTUFBTSxtQkFBbUIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsZUFBZSxFQUFzQixNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxXQUFXLEVBQWtCLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxZQUFZLEVBQW1CLE1BQU0sZ0JBQWdCLENBQUM7QUFDL0QsT0FBTyxFQUFFLFlBQVksRUFBbUIsTUFBTSxnQkFBZ0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQXVCLE1BQU0sb0JBQW9CLENBQUM7QUFDM0UsT0FBTyxFQUFFLGFBQWEsRUFBb0IsTUFBTSxpQkFBaUIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZUFBZSxFQUFzQixNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxXQUFXLEVBQWtCLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxXQUFXLEVBQWtCLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxZQUFZLEVBQW1CLE1BQU0sZ0JBQWdCLENBQUM7QUFFL0QsTUFBTSxPQUFPLGNBQWM7SUFDbEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFlLEVBQUUsU0FBYztRQUNsRCxJQUFJLEtBQUssR0FBWSxJQUFJLENBQUM7UUFFMUIsUUFBUSxHQUFHLENBQUMsSUFBSSxFQUFFO1lBQ2xCLEtBQUssV0FBVyxDQUFDLGVBQWU7Z0JBQzlCLEtBQUssR0FBRyxJQUFJLGVBQWUsQ0FBc0IsR0FBRyxDQUFDLENBQUM7Z0JBQ3RELE1BQU07WUFFUixLQUFLLFdBQVcsQ0FBQyxZQUFZO2dCQUMzQixLQUFLLEdBQUcsSUFBSSxZQUFZLENBQW1CLEdBQUcsQ0FBQyxDQUFDO2dCQUNoRCxNQUFNO1lBRVIsS0FBSyxXQUFXLENBQUMsZ0JBQWdCO2dCQUMvQixLQUFLLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBdUIsR0FBRyxDQUFDLENBQUM7Z0JBQ3hELE1BQU07WUFFUixLQUFLLFdBQVcsQ0FBQyxlQUFlO2dCQUM5QixLQUFLLEdBQUcsSUFBSSxlQUFlLENBQXNCLEdBQUcsQ0FBQyxDQUFDO2dCQUN0RCxNQUFNO1lBRVIsS0FBSyxXQUFXLENBQUMsYUFBYTtnQkFDNUIsS0FBSyxHQUFHLElBQUksYUFBYSxDQUFvQixHQUFHLENBQUMsQ0FBQztnQkFDbEQsTUFBTTtZQUVSLEtBQUssV0FBVyxDQUFDLFdBQVc7Z0JBQzFCLEtBQUssR0FBRyxJQUFJLFdBQVcsQ0FBa0IsR0FBRyxDQUFDLENBQUM7Z0JBQzlDLE1BQU07WUFFUixLQUFLLFdBQVcsQ0FBQyxZQUFZO2dCQUMzQixLQUFLLEdBQUcsSUFBSSxZQUFZLENBQW1CLEdBQUcsQ0FBQyxDQUFDO2dCQUNoRCxNQUFNO1lBRVIsS0FBSyxXQUFXLENBQUMsV0FBVztnQkFDMUIsS0FBSyxHQUFHLElBQUksV0FBVyxDQUFrQixHQUFHLENBQUMsQ0FBQztnQkFDOUMsTUFBTTtZQUVSLEtBQUssV0FBVyxDQUFDLGVBQWU7Z0JBQzlCLEtBQUssR0FBRyxJQUFJLGVBQWUsQ0FBc0IsR0FBRyxDQUFDLENBQUM7Z0JBQ3RELE1BQU07WUFFUixLQUFLLFdBQVcsQ0FBQyxXQUFXO2dCQUMxQixLQUFLLEdBQUcsSUFBSSxXQUFXLENBQWtCLEdBQUcsQ0FBQyxDQUFDO2dCQUM5QyxNQUFNO1lBRVIsS0FBSyxXQUFXLENBQUMsWUFBWTtnQkFDM0IsS0FBSyxHQUFHLElBQUksWUFBWSxDQUFtQixHQUFHLENBQUMsQ0FBQztnQkFDaEQsTUFBTTtZQUVSLEtBQUssV0FBVyxDQUFDLFdBQVc7Z0JBQzFCLEtBQUssR0FBRyxJQUFJLFdBQVcsQ0FBa0IsR0FBRyxDQUFDLENBQUM7Z0JBQzlDLE1BQU07WUFFUjtnQkFDRSxtQkFBbUI7Z0JBQ25CLE1BQU07U0FDUDtRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVNLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBYyxFQUFFLFNBQWM7SUFDcEQsQ0FBQztDQUNGIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop } from \"../../Common/b2Settings\";\r\nimport { b2Sqrt } from \"../../Common/b2Math\";\r\nimport { b2Manifold } from \"../../Collision/b2Collision\";\r\nimport { b2TestOverlapShape } from \"../../Collision/b2Collision\";\r\nimport { b2TimeOfImpact, b2TOIInput, b2TOIOutput } from \"../../Collision/b2TimeOfImpact\";\r\n/// Friction mixing law. The idea is to allow either fixture to drive the restitution to zero.\r\n/// For example, anything slides on ice.\r\nexport function b2MixFriction(friction1, friction2) {\r\n    return b2Sqrt(friction1 * friction2);\r\n}\r\n/// Restitution mixing law. The idea is allow for anything to bounce off an inelastic surface.\r\n/// For example, a superball bounces on anything.\r\nexport function b2MixRestitution(restitution1, restitution2) {\r\n    return restitution1 > restitution2 ? restitution1 : restitution2;\r\n}\r\nexport class b2ContactEdge {\r\n    constructor() {\r\n        this.other = null; ///< provides quick access to the other body attached.\r\n        this.contact = null; ///< the contact\r\n        this.prev = null; ///< the previous contact edge in the body's contact list\r\n        this.next = null; ///< the next contact edge in the body's contact list\r\n    }\r\n}\r\nexport class b2Contact {\r\n    constructor() {\r\n        this.m_islandFlag = false; /// Used when crawling contact graph when forming islands.\r\n        this.m_touchingFlag = false; /// Set when the shapes are touching.\r\n        this.m_enabledFlag = false; /// This contact can be disabled (by user)\r\n        this.m_filterFlag = false; /// This contact needs filtering because a fixture filter was changed.\r\n        this.m_bulletHitFlag = false; /// This bullet contact had a TOI event\r\n        this.m_toiFlag = false; /// This contact has a valid TOI in m_toi\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_nodeA = new b2ContactEdge();\r\n        this.m_nodeB = new b2ContactEdge();\r\n        this.m_fixtureA = null;\r\n        this.m_fixtureB = null;\r\n        this.m_indexA = 0;\r\n        this.m_indexB = 0;\r\n        this.m_manifold = new b2Manifold();\r\n        this.m_toiCount = 0;\r\n        this.m_toi = 0;\r\n        this.m_friction = 0;\r\n        this.m_restitution = 0;\r\n        this.m_tangentSpeed = 0;\r\n        this.m_oldManifold = new b2Manifold();\r\n    }\r\n    GetManifold() {\r\n        return this.m_manifold;\r\n    }\r\n    GetWorldManifold(worldManifold) {\r\n        const bodyA = this.m_fixtureA.GetBody();\r\n        const bodyB = this.m_fixtureB.GetBody();\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        worldManifold.Initialize(this.m_manifold, bodyA.GetTransform(), shapeA.m_radius, bodyB.GetTransform(), shapeB.m_radius);\r\n    }\r\n    IsTouching() {\r\n        return this.m_touchingFlag;\r\n    }\r\n    SetEnabled(flag) {\r\n        this.m_enabledFlag = flag;\r\n    }\r\n    IsEnabled() {\r\n        return this.m_enabledFlag;\r\n    }\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    GetFixtureA() {\r\n        return this.m_fixtureA;\r\n    }\r\n    GetChildIndexA() {\r\n        return this.m_indexA;\r\n    }\r\n    GetFixtureB() {\r\n        return this.m_fixtureB;\r\n    }\r\n    GetChildIndexB() {\r\n        return this.m_indexB;\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n    }\r\n    FlagForFiltering() {\r\n        this.m_filterFlag = true;\r\n    }\r\n    SetFriction(friction) {\r\n        this.m_friction = friction;\r\n    }\r\n    GetFriction() {\r\n        return this.m_friction;\r\n    }\r\n    ResetFriction() {\r\n        this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\r\n    }\r\n    SetRestitution(restitution) {\r\n        this.m_restitution = restitution;\r\n    }\r\n    GetRestitution() {\r\n        return this.m_restitution;\r\n    }\r\n    ResetRestitution() {\r\n        this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\r\n    }\r\n    SetTangentSpeed(speed) {\r\n        this.m_tangentSpeed = speed;\r\n    }\r\n    GetTangentSpeed() {\r\n        return this.m_tangentSpeed;\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        this.m_islandFlag = false;\r\n        this.m_touchingFlag = false;\r\n        this.m_enabledFlag = true;\r\n        this.m_filterFlag = false;\r\n        this.m_bulletHitFlag = false;\r\n        this.m_toiFlag = false;\r\n        this.m_fixtureA = fixtureA;\r\n        this.m_fixtureB = fixtureB;\r\n        this.m_indexA = indexA;\r\n        this.m_indexB = indexB;\r\n        this.m_manifold.pointCount = 0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_nodeA.contact = null;\r\n        this.m_nodeA.prev = null;\r\n        this.m_nodeA.next = null;\r\n        this.m_nodeA.other = null;\r\n        this.m_nodeB.contact = null;\r\n        this.m_nodeB.prev = null;\r\n        this.m_nodeB.next = null;\r\n        this.m_nodeB.other = null;\r\n        this.m_toiCount = 0;\r\n        this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\r\n        this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\r\n    }\r\n    Update(listener) {\r\n        const tManifold = this.m_oldManifold;\r\n        this.m_oldManifold = this.m_manifold;\r\n        this.m_manifold = tManifold;\r\n        // Re-enable this contact.\r\n        this.m_enabledFlag = true;\r\n        let touching = false;\r\n        const wasTouching = this.m_touchingFlag;\r\n        const sensorA = this.m_fixtureA.IsSensor();\r\n        const sensorB = this.m_fixtureB.IsSensor();\r\n        const sensor = sensorA || sensorB;\r\n        const bodyA = this.m_fixtureA.GetBody();\r\n        const bodyB = this.m_fixtureB.GetBody();\r\n        const xfA = bodyA.GetTransform();\r\n        const xfB = bodyB.GetTransform();\r\n        ///const aabbOverlap = b2TestOverlapAABB(this.m_fixtureA.GetAABB(0), this.m_fixtureB.GetAABB(0));\r\n        // Is this contact a sensor?\r\n        if (sensor) {\r\n            ///if (aabbOverlap)\r\n            ///{\r\n            const shapeA = this.m_fixtureA.GetShape();\r\n            const shapeB = this.m_fixtureB.GetShape();\r\n            touching = b2TestOverlapShape(shapeA, this.m_indexA, shapeB, this.m_indexB, xfA, xfB);\r\n            ///}\r\n            // Sensors don't generate manifolds.\r\n            this.m_manifold.pointCount = 0;\r\n        }\r\n        else {\r\n            ///if (aabbOverlap)\r\n            ///{\r\n            this.Evaluate(this.m_manifold, xfA, xfB);\r\n            touching = this.m_manifold.pointCount > 0;\r\n            // Match old contact ids to new contact ids and copy the\r\n            // stored impulses to warm start the solver.\r\n            for (let i = 0; i < this.m_manifold.pointCount; ++i) {\r\n                const mp2 = this.m_manifold.points[i];\r\n                mp2.normalImpulse = 0;\r\n                mp2.tangentImpulse = 0;\r\n                const id2 = mp2.id;\r\n                for (let j = 0; j < this.m_oldManifold.pointCount; ++j) {\r\n                    const mp1 = this.m_oldManifold.points[j];\r\n                    if (mp1.id.key === id2.key) {\r\n                        mp2.normalImpulse = mp1.normalImpulse;\r\n                        mp2.tangentImpulse = mp1.tangentImpulse;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            ///}\r\n            ///else\r\n            ///{\r\n            ///  this.m_manifold.pointCount = 0;\r\n            ///}\r\n            if (touching !== wasTouching) {\r\n                bodyA.SetAwake(true);\r\n                bodyB.SetAwake(true);\r\n            }\r\n        }\r\n        this.m_touchingFlag = touching;\r\n        if (!wasTouching && touching && listener) {\r\n            listener.BeginContact(this);\r\n        }\r\n        if (wasTouching && !touching && listener) {\r\n            listener.EndContact(this);\r\n        }\r\n        if (!sensor && touching && listener) {\r\n            listener.PreSolve(this, this.m_oldManifold);\r\n        }\r\n    }\r\n    ComputeTOI(sweepA, sweepB) {\r\n        const input = b2Contact.ComputeTOI_s_input;\r\n        input.proxyA.SetShape(this.m_fixtureA.GetShape(), this.m_indexA);\r\n        input.proxyB.SetShape(this.m_fixtureB.GetShape(), this.m_indexB);\r\n        input.sweepA.Copy(sweepA);\r\n        input.sweepB.Copy(sweepB);\r\n        input.tMax = b2_linearSlop;\r\n        const output = b2Contact.ComputeTOI_s_output;\r\n        b2TimeOfImpact(output, input);\r\n        return output.t;\r\n    }\r\n}\r\nb2Contact.ComputeTOI_s_input = new b2TOIInput();\r\nb2Contact.ComputeTOI_s_output = new b2TOIOutput();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideCircles } from \"../../Collision/b2CollideCircle\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2CircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2CircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2CircleShape);\r\n        ///b2Assert(shapeB instanceof b2CircleShape);\r\n        b2CollideCircles(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaXJjbGVDb250YWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvRHluYW1pY3MvQ29udGFjdHMvYjJDaXJjbGVDb250YWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBR0YsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFJbkUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUd4QyxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxTQUFTO0lBQzVDO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSxlQUFlLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFrQixFQUFFLFNBQWM7SUFDeEQsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFtQixFQUFFLE1BQWMsRUFBRSxRQUFtQixFQUFFLE1BQWM7UUFDbkYsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRU0sUUFBUSxDQUFDLFFBQW9CLEVBQUUsR0FBZ0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsNkNBQTZDO1FBQzdDLDZDQUE2QztRQUM3QyxnQkFBZ0IsQ0FDZCxRQUFRLEVBQ1EsTUFBTSxFQUFFLEdBQUcsRUFDWCxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQztDQUNGIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollidePolygons } from \"../../Collision/b2CollidePolygon\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2PolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2PolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2PolygonShape);\r\n        ///b2Assert(shapeB instanceof b2PolygonShape);\r\n        b2CollidePolygons(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQb2x5Z29uQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyUG9seWdvbkNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFHRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUlyRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxTQUFTO0lBQzdDO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSxnQkFBZ0IsRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTSxRQUFRLENBQUMsUUFBb0IsRUFBRSxHQUFnQixFQUFFLEdBQWdCO1FBQ3RFLE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCw4Q0FBOEM7UUFDOUMsOENBQThDO1FBQzlDLGlCQUFpQixDQUNmLFFBQVEsRUFDUyxNQUFNLEVBQUUsR0FBRyxFQUNYLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNsQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollidePolygonAndCircle } from \"../../Collision/b2CollideCircle\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2PolygonAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2PolygonAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        ///b2Assert(fixtureA.GetType() === b2ShapeType.e_polygonShape);\r\n        ///b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2PolygonShape);\r\n        ///b2Assert(shapeB instanceof b2CircleShape);\r\n        b2CollidePolygonAndCircle(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQb2x5Z29uQW5kQ2lyY2xlQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyUG9seWdvbkFuZENpcmNsZUNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFHRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUs1RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxTQUFTO0lBQ3REO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSx5QkFBeUIsRUFBRSxDQUFDO0lBQ3pDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELCtEQUErRDtRQUMvRCw4REFBOEQ7SUFDaEUsQ0FBQztJQUVNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELDhDQUE4QztRQUM5Qyw2Q0FBNkM7UUFDN0MseUJBQXlCLENBQ3ZCLFFBQVEsRUFDUyxNQUFNLEVBQUUsR0FBRyxFQUNaLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNqQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndCircle } from \"../../Collision/b2CollideEdge\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2EdgeAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2EdgeAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        ///b2Assert(fixtureA.GetType() === b2ShapeType.e_edgeShape);\r\n        ///b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2EdgeShape);\r\n        ///b2Assert(shapeB instanceof b2CircleShape);\r\n        b2CollideEdgeAndCircle(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJFZGdlQW5kQ2lyY2xlQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyRWRnZUFuZENpcmNsZUNvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFHRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUt2RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxTQUFTO0lBQ25EO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSxzQkFBc0IsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELDREQUE0RDtRQUM1RCw4REFBOEQ7SUFDaEUsQ0FBQztJQUVNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELDJDQUEyQztRQUMzQyw2Q0FBNkM7UUFDN0Msc0JBQXNCLENBQ3BCLFFBQVEsRUFDTSxNQUFNLEVBQUUsR0FBRyxFQUNULE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNqQyxDQUFDO0NBQ0YifQ==","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndPolygon } from \"../../Collision/b2CollideEdge\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2EdgeAndPolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2EdgeAndPolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        ///b2Assert(fixtureA.GetType() === b2ShapeType.e_edgeShape);\r\n        ///b2Assert(fixtureB.GetType() === b2ShapeType.e_polygonShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2EdgeShape);\r\n        ///b2Assert(shapeB instanceof b2PolygonShape);\r\n        b2CollideEdgeAndPolygon(manifold, shapeA, xfA, shapeB, xfB);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJFZGdlQW5kUG9seWdvbkNvbnRhY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9Cb3gyRC9Cb3gyRC9EeW5hbWljcy9Db250YWN0cy9iMkVkZ2VBbmRQb2x5Z29uQ29udGFjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUdGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBS3hFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHeEMsTUFBTSxPQUFPLHVCQUF3QixTQUFRLFNBQVM7SUFDcEQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQWM7UUFDakMsT0FBTyxJQUFJLHVCQUF1QixFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBa0IsRUFBRSxTQUFjO0lBQ3hELENBQUM7SUFFTSxLQUFLLENBQUMsUUFBbUIsRUFBRSxNQUFjLEVBQUUsUUFBbUIsRUFBRSxNQUFjO1FBQ25GLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDaEQsNERBQTREO1FBQzVELCtEQUErRDtJQUNqRSxDQUFDO0lBRU0sUUFBUSxDQUFDLFFBQW9CLEVBQUUsR0FBZ0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsMkNBQTJDO1FBQzNDLDhDQUE4QztRQUM5Qyx1QkFBdUIsQ0FDckIsUUFBUSxFQUNNLE1BQU0sRUFBRSxHQUFHLEVBQ1IsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7Q0FDRiJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndCircle } from \"../../Collision/b2CollideEdge\";\r\nimport { b2EdgeShape } from \"../../Collision/Shapes/b2EdgeShape\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2ChainAndCircleContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2ChainAndCircleContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        ///b2Assert(fixtureA.GetType() === b2ShapeType.e_chainShape);\r\n        ///b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2ChainShape);\r\n        ///b2Assert(shapeB instanceof b2CircleShape);\r\n        const chain = shapeA;\r\n        const edge = b2ChainAndCircleContact.Evaluate_s_edge;\r\n        chain.GetChildEdge(edge, this.m_indexA);\r\n        b2CollideEdgeAndCircle(manifold, edge, xfA, shapeB, xfB);\r\n    }\r\n}\r\nb2ChainAndCircleContact.Evaluate_s_edge = new b2EdgeShape();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaGFpbkFuZENpcmNsZUNvbnRhY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9Cb3gyRC9Cb3gyRC9EeW5hbWljcy9Db250YWN0cy9iMkNoYWluQW5kQ2lyY2xlQ29udGFjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUdGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBS3ZFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hDLE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxTQUFTO0lBQ3BEO1FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDVixDQUFDO0lBRU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFjO1FBQ2pDLE9BQU8sSUFBSSx1QkFBdUIsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWtCLEVBQUUsU0FBYztJQUN4RCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQW1CLEVBQUUsTUFBYyxFQUFFLFFBQW1CLEVBQUUsTUFBYztRQUNuRixLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELDZEQUE2RDtRQUM3RCw4REFBOEQ7SUFDaEUsQ0FBQztJQUdNLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEdBQWdCLEVBQUUsR0FBZ0I7UUFDdEUsTUFBTSxNQUFNLEdBQVksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRCxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELDRDQUE0QztRQUM1Qyw2Q0FBNkM7UUFDN0MsTUFBTSxLQUFLLEdBQWdDLE1BQU0sQ0FBQztRQUNsRCxNQUFNLElBQUksR0FBZ0IsdUJBQXVCLENBQUMsZUFBZSxDQUFDO1FBQ2xFLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4QyxzQkFBc0IsQ0FDcEIsUUFBUSxFQUNSLElBQUksRUFBRSxHQUFHLEVBQ08sTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7O0FBYmMsdUNBQWUsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDIn0=","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2CollideEdgeAndPolygon } from \"../../Collision/b2CollideEdge\";\r\nimport { b2EdgeShape } from \"../../Collision/Shapes/b2EdgeShape\";\r\nimport { b2Contact } from \"./b2Contact\";\r\nexport class b2ChainAndPolygonContact extends b2Contact {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static Create(allocator) {\r\n        return new b2ChainAndPolygonContact();\r\n    }\r\n    static Destroy(contact, allocator) {\r\n    }\r\n    Reset(fixtureA, indexA, fixtureB, indexB) {\r\n        super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n        ///b2Assert(fixtureA.GetType() === b2ShapeType.e_chainShape);\r\n        ///b2Assert(fixtureB.GetType() === b2ShapeType.e_polygonShape);\r\n    }\r\n    Evaluate(manifold, xfA, xfB) {\r\n        const shapeA = this.m_fixtureA.GetShape();\r\n        const shapeB = this.m_fixtureB.GetShape();\r\n        ///b2Assert(shapeA instanceof b2ChainShape);\r\n        ///b2Assert(shapeB instanceof b2PolygonShape);\r\n        const chain = shapeA;\r\n        const edge = b2ChainAndPolygonContact.Evaluate_s_edge;\r\n        chain.GetChildEdge(edge, this.m_indexA);\r\n        b2CollideEdgeAndPolygon(manifold, edge, xfA, shapeB, xfB);\r\n    }\r\n}\r\nb2ChainAndPolygonContact.Evaluate_s_edge = new b2EdgeShape();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDaGFpbkFuZFBvbHlnb25Db250YWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvRHluYW1pY3MvQ29udGFjdHMvYjJDaGFpbkFuZFBvbHlnb25Db250YWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0FBR0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFJeEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBRWpFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHeEMsTUFBTSxPQUFPLHdCQUF5QixTQUFRLFNBQVM7SUFDckQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQWM7UUFDakMsT0FBTyxJQUFJLHdCQUF3QixFQUFFLENBQUM7SUFDeEMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBa0IsRUFBRSxTQUFjO0lBQ3hELENBQUM7SUFFTSxLQUFLLENBQUMsUUFBbUIsRUFBRSxNQUFjLEVBQUUsUUFBbUIsRUFBRSxNQUFjO1FBQ25GLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDaEQsNkRBQTZEO1FBQzdELCtEQUErRDtJQUNqRSxDQUFDO0lBR00sUUFBUSxDQUFDLFFBQW9CLEVBQUUsR0FBZ0IsRUFBRSxHQUFnQjtRQUN0RSxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25ELE1BQU0sTUFBTSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsNENBQTRDO1FBQzVDLDhDQUE4QztRQUM5QyxNQUFNLEtBQUssR0FBZ0MsTUFBTSxDQUFDO1FBQ2xELE1BQU0sSUFBSSxHQUFnQix3QkFBd0IsQ0FBQyxlQUFlLENBQUM7UUFDbkUsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3hDLHVCQUF1QixDQUNyQixRQUFRLEVBQ1IsSUFBSSxFQUFFLEdBQUcsRUFDUSxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7QUFiYyx3Q0FBZSxHQUFHLElBQUksV0FBVyxFQUFFLENBQUMifQ==","import { b2MakeArray } from \"../../Common/b2Settings\";\r\nimport { b2ShapeType } from \"../../Collision/Shapes/b2Shape\";\r\nimport { b2CircleContact } from \"./b2CircleContact\";\r\nimport { b2PolygonContact } from \"./b2PolygonContact\";\r\nimport { b2PolygonAndCircleContact } from \"./b2PolygonAndCircleContact\";\r\nimport { b2EdgeAndCircleContact } from \"./b2EdgeAndCircleContact\";\r\nimport { b2EdgeAndPolygonContact } from \"./b2EdgeAndPolygonContact\";\r\nimport { b2ChainAndCircleContact } from \"./b2ChainAndCircleContact\";\r\nimport { b2ChainAndPolygonContact } from \"./b2ChainAndPolygonContact\";\r\nexport class b2ContactRegister {\r\n    constructor() {\r\n        this.pool = null;\r\n        this.createFcn = null;\r\n        this.destroyFcn = null;\r\n        this.primary = false;\r\n    }\r\n}\r\nexport class b2ContactFactory {\r\n    constructor(allocator) {\r\n        this.m_allocator = null;\r\n        this.m_allocator = allocator;\r\n        this.InitializeRegisters();\r\n    }\r\n    AddType(createFcn, destroyFcn, type1, type2) {\r\n        const pool = b2MakeArray(256, (i) => createFcn(this.m_allocator)); // TODO: b2Settings\r\n        function poolCreateFcn(allocator) {\r\n            if (pool.length > 0) {\r\n                return pool.pop();\r\n            }\r\n            return createFcn(allocator);\r\n        }\r\n        function poolDestroyFcn(contact, allocator) {\r\n            pool.push(contact);\r\n        }\r\n        this.m_registers[type1][type2].pool = pool;\r\n        this.m_registers[type1][type2].createFcn = poolCreateFcn;\r\n        this.m_registers[type1][type2].destroyFcn = poolDestroyFcn;\r\n        this.m_registers[type1][type2].primary = true;\r\n        if (type1 !== type2) {\r\n            this.m_registers[type2][type1].pool = pool;\r\n            this.m_registers[type2][type1].createFcn = poolCreateFcn;\r\n            this.m_registers[type2][type1].destroyFcn = poolDestroyFcn;\r\n            this.m_registers[type2][type1].primary = false;\r\n        }\r\n        /*\r\n        this.m_registers[type1][type2].createFcn = createFcn;\r\n        this.m_registers[type1][type2].destroyFcn = destroyFcn;\r\n        this.m_registers[type1][type2].primary = true;\r\n    \r\n        if (type1 !== type2) {\r\n          this.m_registers[type2][type1].createFcn = createFcn;\r\n          this.m_registers[type2][type1].destroyFcn = destroyFcn;\r\n          this.m_registers[type2][type1].primary = false;\r\n        }\r\n        */\r\n    }\r\n    InitializeRegisters() {\r\n        this.m_registers = [ /*b2ShapeType.e_shapeTypeCount*/];\r\n        for (let i = 0; i < b2ShapeType.e_shapeTypeCount; i++) {\r\n            this.m_registers[i] = [ /*b2ShapeType.e_shapeTypeCount*/];\r\n            for (let j = 0; j < b2ShapeType.e_shapeTypeCount; j++) {\r\n                this.m_registers[i][j] = new b2ContactRegister();\r\n            }\r\n        }\r\n        this.AddType(b2CircleContact.Create, b2CircleContact.Destroy, b2ShapeType.e_circleShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2PolygonAndCircleContact.Create, b2PolygonAndCircleContact.Destroy, b2ShapeType.e_polygonShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2PolygonContact.Create, b2PolygonContact.Destroy, b2ShapeType.e_polygonShape, b2ShapeType.e_polygonShape);\r\n        this.AddType(b2EdgeAndCircleContact.Create, b2EdgeAndCircleContact.Destroy, b2ShapeType.e_edgeShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2EdgeAndPolygonContact.Create, b2EdgeAndPolygonContact.Destroy, b2ShapeType.e_edgeShape, b2ShapeType.e_polygonShape);\r\n        this.AddType(b2ChainAndCircleContact.Create, b2ChainAndCircleContact.Destroy, b2ShapeType.e_chainShape, b2ShapeType.e_circleShape);\r\n        this.AddType(b2ChainAndPolygonContact.Create, b2ChainAndPolygonContact.Destroy, b2ShapeType.e_chainShape, b2ShapeType.e_polygonShape);\r\n    }\r\n    Create(fixtureA, indexA, fixtureB, indexB) {\r\n        const type1 = fixtureA.GetType();\r\n        const type2 = fixtureB.GetType();\r\n        ///b2Assert(0 <= type1 && type1 < b2ShapeType.e_shapeTypeCount);\r\n        ///b2Assert(0 <= type2 && type2 < b2ShapeType.e_shapeTypeCount);\r\n        const reg = this.m_registers[type1][type2];\r\n        if (reg.createFcn) {\r\n            const c = reg.createFcn(this.m_allocator);\r\n            if (reg.primary) {\r\n                c.Reset(fixtureA, indexA, fixtureB, indexB);\r\n            }\r\n            else {\r\n                c.Reset(fixtureB, indexB, fixtureA, indexA);\r\n            }\r\n            return c;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    Destroy(contact) {\r\n        const fixtureA = contact.m_fixtureA;\r\n        const fixtureB = contact.m_fixtureB;\r\n        if (contact.m_manifold.pointCount > 0 &&\r\n            !fixtureA.IsSensor() &&\r\n            !fixtureB.IsSensor()) {\r\n            fixtureA.GetBody().SetAwake(true);\r\n            fixtureB.GetBody().SetAwake(true);\r\n        }\r\n        const typeA = fixtureA.GetType();\r\n        const typeB = fixtureB.GetType();\r\n        ///b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\r\n        ///b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\r\n        const reg = this.m_registers[typeA][typeB];\r\n        reg.destroyFcn(contact, this.m_allocator);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJDb250YWN0RmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL0NvbnRhY3RzL2IyQ29udGFjdEZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUU3RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDdEQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDeEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFHdEUsTUFBTSxPQUFPLGlCQUFpQjtJQUE5QjtRQUNTLFNBQUksR0FBZ0IsSUFBSSxDQUFDO1FBQ3pCLGNBQVMsR0FBcUMsSUFBSSxDQUFDO1FBQ25ELGVBQVUsR0FBb0QsSUFBSSxDQUFDO1FBQ25FLFlBQU8sR0FBWSxLQUFLLENBQUM7SUFDbEMsQ0FBQztDQUFBO0FBRUQsTUFBTSxPQUFPLGdCQUFnQjtJQUkzQixZQUFZLFNBQWM7UUFIbkIsZ0JBQVcsR0FBUSxJQUFJLENBQUM7UUFJN0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUM7UUFDN0IsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVPLE9BQU8sQ0FBQyxTQUF3QyxFQUFFLFVBQXdELEVBQUUsS0FBa0IsRUFB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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_maxManifoldPoints, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2BodyType } from \"./b2Body\";\r\n// #endif\r\n/// Joints and fixtures are destroyed when their associated\r\n/// body is destroyed. Implement this listener so that you\r\n/// may nullify references to these joints and shapes.\r\nexport class b2DestructionListener {\r\n    /// Called when any joint is about to be destroyed due\r\n    /// to the destruction of one of its attached bodies.\r\n    SayGoodbyeJoint(joint) { }\r\n    /// Called when any fixture is about to be destroyed due\r\n    /// to the destruction of its parent body.\r\n    SayGoodbyeFixture(fixture) { }\r\n    // #if B2_ENABLE_PARTICLE\r\n    /// Called when any particle group is about to be destroyed.\r\n    SayGoodbyeParticleGroup(group) { }\r\n    /// Called when a particle is about to be destroyed.\r\n    /// The index can be used in conjunction with\r\n    /// b2ParticleSystem::GetUserDataBuffer() or\r\n    /// b2ParticleSystem::GetParticleHandleFromIndex() to determine which\r\n    /// particle has been destroyed.\r\n    SayGoodbyeParticle(system, index) { }\r\n}\r\n/// Implement this class to provide collision filtering. In other words, you can implement\r\n/// this class if you want finer control over contact creation.\r\nexport class b2ContactFilter {\r\n    /// Return true if contact calculations should be performed between these two shapes.\r\n    /// @warning for performance reasons this is only called when the AABBs begin to overlap.\r\n    ShouldCollide(fixtureA, fixtureB) {\r\n        const bodyA = fixtureA.GetBody();\r\n        const bodyB = fixtureB.GetBody();\r\n        // At least one body should be dynamic or kinematic.\r\n        if (bodyB.GetType() === b2BodyType.b2_staticBody && bodyA.GetType() === b2BodyType.b2_staticBody) {\r\n            return false;\r\n        }\r\n        // Does a joint prevent collision?\r\n        if (!bodyB.ShouldCollideConnected(bodyA)) {\r\n            return false;\r\n        }\r\n        const filter1 = fixtureA.GetFilterData();\r\n        const filter2 = fixtureB.GetFilterData();\r\n        if (filter1.groupIndex === filter2.groupIndex && filter1.groupIndex !== 0) {\r\n            return (filter1.groupIndex > 0);\r\n        }\r\n        const collide = (((filter1.maskBits & filter2.categoryBits) !== 0) && ((filter1.categoryBits & filter2.maskBits) !== 0));\r\n        return collide;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ShouldCollideFixtureParticle(fixture, system, index) {\r\n        return true;\r\n    }\r\n    ShouldCollideParticleParticle(system, indexA, indexB) {\r\n        return true;\r\n    }\r\n}\r\n// #endif\r\nb2ContactFilter.b2_defaultFilter = new b2ContactFilter();\r\n/// Contact impulses for reporting. Impulses are used instead of forces because\r\n/// sub-step forces may approach infinity for rigid body collisions. These\r\n/// match up one-to-one with the contact points in b2Manifold.\r\nexport class b2ContactImpulse {\r\n    constructor() {\r\n        this.normalImpulses = b2MakeNumberArray(b2_maxManifoldPoints);\r\n        this.tangentImpulses = b2MakeNumberArray(b2_maxManifoldPoints);\r\n        this.count = 0;\r\n    }\r\n}\r\n/// Implement this class to get contact information. You can use these results for\r\n/// things like sounds and game logic. You can also get contact results by\r\n/// traversing the contact lists after the time step. However, you might miss\r\n/// some contacts because continuous physics leads to sub-stepping.\r\n/// Additionally you may receive multiple callbacks for the same contact in a\r\n/// single time step.\r\n/// You should strive to make your callbacks efficient because there may be\r\n/// many callbacks per time step.\r\n/// @warning You cannot create/destroy Box2D entities inside these callbacks.\r\nexport class b2ContactListener {\r\n    /// Called when two fixtures begin to touch.\r\n    BeginContact(contact) { }\r\n    /// Called when two fixtures cease to touch.\r\n    EndContact(contact) { }\r\n    // #if B2_ENABLE_PARTICLE\r\n    BeginContactFixtureParticle(system, contact) { }\r\n    EndContactFixtureParticle(system, contact) { }\r\n    BeginContactParticleParticle(system, contact) { }\r\n    EndContactParticleParticle(system, contact) { }\r\n    // #endif\r\n    /// This is called after a contact is updated. This allows you to inspect a\r\n    /// contact before it goes to the solver. If you are careful, you can modify the\r\n    /// contact manifold (e.g. disable contact).\r\n    /// A copy of the old manifold is provided so that you can detect changes.\r\n    /// Note: this is called only for awake bodies.\r\n    /// Note: this is called even when the number of contact points is zero.\r\n    /// Note: this is not called for sensors.\r\n    /// Note: if you set the number of contact points to zero, you will not\r\n    /// get an EndContact callback. However, you may get a BeginContact callback\r\n    /// the next step.\r\n    PreSolve(contact, oldManifold) { }\r\n    /// This lets you inspect a contact after the solver is finished. This is useful\r\n    /// for inspecting impulses.\r\n    /// Note: the contact manifold does not include time of impact impulses, which can be\r\n    /// arbitrarily large if the sub-step is small. Hence the impulse is provided explicitly\r\n    /// in a separate data structure.\r\n    /// Note: this is only called for contacts that are touching, solid, and awake.\r\n    PostSolve(contact, impulse) { }\r\n}\r\nb2ContactListener.b2_defaultListener = new b2ContactListener();\r\n/// Callback class for AABB queries.\r\n/// See b2World::Query\r\nexport class b2QueryCallback {\r\n    /// Called for each fixture found in the query AABB.\r\n    /// @return false to terminate the query.\r\n    ReportFixture(fixture) {\r\n        return true;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ReportParticle(system, index) {\r\n        return false;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        return true;\r\n    }\r\n}\r\n/// Callback class for ray casts.\r\n/// See b2World::RayCast\r\nexport class b2RayCastCallback {\r\n    /// Called for each fixture found in the query. You control how the ray cast\r\n    /// proceeds by returning a float:\r\n    /// return -1: ignore this fixture and continue\r\n    /// return 0: terminate the ray cast\r\n    /// return fraction: clip the ray to this point\r\n    /// return 1: don't clip the ray and continue\r\n    /// @param fixture the fixture hit by the ray\r\n    /// @param point the point of initial intersection\r\n    /// @param normal the normal vector at the point of intersection\r\n    /// @return -1 to filter, 0 to terminate, fraction to clip the ray for\r\n    /// closest hit, 1 to continue\r\n    ReportFixture(fixture, point, normal, fraction) {\r\n        return fraction;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    ReportParticle(system, index, point, normal, fraction) {\r\n        return 0;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        return true;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJXb3JsZENhbGxiYWNrcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL2IyV29ybGRDYWxsYmFja3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUkvRSxPQUFPLEVBQVUsVUFBVSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBTTlDLFNBQVM7QUFFVCwyREFBMkQ7QUFDM0QsMERBQTBEO0FBQzFELHNEQUFzRDtBQUN0RCxNQUFNLE9BQU8scUJBQXFCO0lBQ2hDLHNEQUFzRDtJQUN0RCxxREFBcUQ7SUFDOUMsZUFBZSxDQUFDLEtBQWMsSUFBUyxDQUFDO0lBRS9DLHdEQUF3RDtJQUN4RCwwQ0FBMEM7SUFDbkMsaUJBQWlCLENBQUMsT0FBa0IsSUFBUyxDQUFDO0lBRXJELHlCQUF5QjtJQUN6Qiw0REFBNEQ7SUFDckQsdUJBQXVCLENBQUMsS0FBc0IsSUFBUyxDQUFDO0lBRS9ELG9EQUFvRDtJQUNwRCw2Q0FBNkM7SUFDN0MsNENBQTRDO0lBQzVDLHFFQUFxRTtJQUNyRSxnQ0FBZ0M7SUFDekIsa0JBQWtCLENBQUMsTUFBd0IsRUFBRSxLQUFhLElBQVMsQ0FBQztDQUU1RTtBQUVELDBGQUEwRjtBQUMxRiwrREFBK0Q7QUFDL0QsTUFBTSxPQUFPLGVBQWU7SUFDMUIscUZBQXFGO0lBQ3JGLHlGQUF5RjtJQUNsRixhQUFhLENBQUMsUUFBbUIsRUFBRSxRQUFtQjtRQUMzRCxNQUFNLEtBQUssR0FBVyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDekMsTUFBTSxLQUFLLEdBQVcsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBRXpDLG9EQUFvRDtRQUNwRCxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxVQUFVLENBQUMsYUFBYSxJQUFJ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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2BroadPhase } from \"../Collision/b2BroadPhase\";\r\nimport { b2ContactFactory } from \"./Contacts/b2ContactFactory\";\r\nimport { b2BodyType } from \"./b2Body\";\r\nimport { b2ContactFilter, b2ContactListener } from \"./b2WorldCallbacks\";\r\n// Delegate of b2World.\r\nexport class b2ContactManager {\r\n    constructor() {\r\n        this.m_broadPhase = new b2BroadPhase();\r\n        this.m_contactList = null;\r\n        this.m_contactCount = 0;\r\n        this.m_contactFilter = b2ContactFilter.b2_defaultFilter;\r\n        this.m_contactListener = b2ContactListener.b2_defaultListener;\r\n        this.m_allocator = null;\r\n        this.m_contactFactory = null;\r\n        this.m_contactFactory = new b2ContactFactory(this.m_allocator);\r\n    }\r\n    // Broad-phase callback.\r\n    AddPair(proxyA, proxyB) {\r\n        ///b2Assert(proxyA instanceof b2FixtureProxy);\r\n        ///b2Assert(proxyB instanceof b2FixtureProxy);\r\n        let fixtureA = proxyA.fixture;\r\n        let fixtureB = proxyB.fixture;\r\n        let indexA = proxyA.childIndex;\r\n        let indexB = proxyB.childIndex;\r\n        let bodyA = fixtureA.GetBody();\r\n        let bodyB = fixtureB.GetBody();\r\n        // Are the fixtures on the same body?\r\n        if (bodyA === bodyB) {\r\n            return;\r\n        }\r\n        // TODO_ERIN use a hash table to remove a potential bottleneck when both\r\n        // bodies have a lot of contacts.\r\n        // Does a contact already exist?\r\n        let edge = bodyB.GetContactList();\r\n        while (edge) {\r\n            if (edge.other === bodyA) {\r\n                const fA = edge.contact.GetFixtureA();\r\n                const fB = edge.contact.GetFixtureB();\r\n                const iA = edge.contact.GetChildIndexA();\r\n                const iB = edge.contact.GetChildIndexB();\r\n                if (fA === fixtureA && fB === fixtureB && iA === indexA && iB === indexB) {\r\n                    // A contact already exists.\r\n                    return;\r\n                }\r\n                if (fA === fixtureB && fB === fixtureA && iA === indexB && iB === indexA) {\r\n                    // A contact already exists.\r\n                    return;\r\n                }\r\n            }\r\n            edge = edge.next;\r\n        }\r\n        // Check user filtering.\r\n        if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\r\n            return;\r\n        }\r\n        // Call the factory.\r\n        const c = this.m_contactFactory.Create(fixtureA, indexA, fixtureB, indexB);\r\n        if (c === null) {\r\n            return;\r\n        }\r\n        // Contact creation may swap fixtures.\r\n        fixtureA = c.GetFixtureA();\r\n        fixtureB = c.GetFixtureB();\r\n        indexA = c.GetChildIndexA();\r\n        indexB = c.GetChildIndexB();\r\n        bodyA = fixtureA.m_body;\r\n        bodyB = fixtureB.m_body;\r\n        // Insert into the world.\r\n        c.m_prev = null;\r\n        c.m_next = this.m_contactList;\r\n        if (this.m_contactList !== null) {\r\n            this.m_contactList.m_prev = c;\r\n        }\r\n        this.m_contactList = c;\r\n        // Connect to island graph.\r\n        // Connect to body A\r\n        c.m_nodeA.contact = c;\r\n        c.m_nodeA.other = bodyB;\r\n        c.m_nodeA.prev = null;\r\n        c.m_nodeA.next = bodyA.m_contactList;\r\n        if (bodyA.m_contactList !== null) {\r\n            bodyA.m_contactList.prev = c.m_nodeA;\r\n        }\r\n        bodyA.m_contactList = c.m_nodeA;\r\n        // Connect to body B\r\n        c.m_nodeB.contact = c;\r\n        c.m_nodeB.other = bodyA;\r\n        c.m_nodeB.prev = null;\r\n        c.m_nodeB.next = bodyB.m_contactList;\r\n        if (bodyB.m_contactList !== null) {\r\n            bodyB.m_contactList.prev = c.m_nodeB;\r\n        }\r\n        bodyB.m_contactList = c.m_nodeB;\r\n        // Wake up the bodies\r\n        if (!fixtureA.IsSensor() && !fixtureB.IsSensor()) {\r\n            bodyA.SetAwake(true);\r\n            bodyB.SetAwake(true);\r\n        }\r\n        ++this.m_contactCount;\r\n    }\r\n    FindNewContacts() {\r\n        this.m_broadPhase.UpdatePairs(this);\r\n    }\r\n    Destroy(c) {\r\n        const fixtureA = c.GetFixtureA();\r\n        const fixtureB = c.GetFixtureB();\r\n        const bodyA = fixtureA.GetBody();\r\n        const bodyB = fixtureB.GetBody();\r\n        if (this.m_contactListener && c.IsTouching()) {\r\n            this.m_contactListener.EndContact(c);\r\n        }\r\n        // Remove from the world.\r\n        if (c.m_prev) {\r\n            c.m_prev.m_next = c.m_next;\r\n        }\r\n        if (c.m_next) {\r\n            c.m_next.m_prev = c.m_prev;\r\n        }\r\n        if (c === this.m_contactList) {\r\n            this.m_contactList = c.m_next;\r\n        }\r\n        // Remove from body 1\r\n        if (c.m_nodeA.prev) {\r\n            c.m_nodeA.prev.next = c.m_nodeA.next;\r\n        }\r\n        if (c.m_nodeA.next) {\r\n            c.m_nodeA.next.prev = c.m_nodeA.prev;\r\n        }\r\n        if (c.m_nodeA === bodyA.m_contactList) {\r\n            bodyA.m_contactList = c.m_nodeA.next;\r\n        }\r\n        // Remove from body 2\r\n        if (c.m_nodeB.prev) {\r\n            c.m_nodeB.prev.next = c.m_nodeB.next;\r\n        }\r\n        if (c.m_nodeB.next) {\r\n            c.m_nodeB.next.prev = c.m_nodeB.prev;\r\n        }\r\n        if (c.m_nodeB === bodyB.m_contactList) {\r\n            bodyB.m_contactList = c.m_nodeB.next;\r\n        }\r\n        // Call the factory.\r\n        this.m_contactFactory.Destroy(c);\r\n        --this.m_contactCount;\r\n    }\r\n    // This is the top level collision call for the time step. Here\r\n    // all the narrow phase collision is processed for the world\r\n    // contact list.\r\n    Collide() {\r\n        // Update awake contacts.\r\n        let c = this.m_contactList;\r\n        while (c) {\r\n            const fixtureA = c.GetFixtureA();\r\n            const fixtureB = c.GetFixtureB();\r\n            const indexA = c.GetChildIndexA();\r\n            const indexB = c.GetChildIndexB();\r\n            const bodyA = fixtureA.GetBody();\r\n            const bodyB = fixtureB.GetBody();\r\n            // Is this contact flagged for filtering?\r\n            if (c.m_filterFlag) {\r\n                // Check user filtering.\r\n                if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\r\n                    const cNuke = c;\r\n                    c = cNuke.m_next;\r\n                    this.Destroy(cNuke);\r\n                    continue;\r\n                }\r\n                // Clear the filtering flag.\r\n                c.m_filterFlag = false;\r\n            }\r\n            const activeA = bodyA.IsAwake() && bodyA.m_type !== b2BodyType.b2_staticBody;\r\n            const activeB = bodyB.IsAwake() && bodyB.m_type !== b2BodyType.b2_staticBody;\r\n            // At least one body must be awake and it must be dynamic or kinematic.\r\n            if (!activeA && !activeB) {\r\n                c = c.m_next;\r\n                continue;\r\n            }\r\n            const proxyA = fixtureA.m_proxies[indexA].treeNode;\r\n            const proxyB = fixtureB.m_proxies[indexB].treeNode;\r\n            const overlap = this.m_broadPhase.TestOverlap(proxyA, proxyB);\r\n            // Here we destroy contacts that cease to overlap in the broad-phase.\r\n            if (!overlap) {\r\n                const cNuke = c;\r\n                c = cNuke.m_next;\r\n                this.Destroy(cNuke);\r\n                continue;\r\n            }\r\n            // The contact persists.\r\n            c.Update(this.m_contactListener);\r\n            c = c.m_next;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\n/// Profiling data. Times are in milliseconds.\r\nexport class b2Profile {\r\n    constructor() {\r\n        this.step = 0;\r\n        this.collide = 0;\r\n        this.solve = 0;\r\n        this.solveInit = 0;\r\n        this.solveVelocity = 0;\r\n        this.solvePosition = 0;\r\n        this.broadphase = 0;\r\n        this.solveTOI = 0;\r\n    }\r\n    Reset() {\r\n        this.step = 0;\r\n        this.collide = 0;\r\n        this.solve = 0;\r\n        this.solveInit = 0;\r\n        this.solveVelocity = 0;\r\n        this.solvePosition = 0;\r\n        this.broadphase = 0;\r\n        this.solveTOI = 0;\r\n        return this;\r\n    }\r\n}\r\n/// This is an internal structure.\r\nexport class b2TimeStep {\r\n    constructor() {\r\n        this.dt = 0; // time step\r\n        this.inv_dt = 0; // inverse time step (0 if dt == 0).\r\n        this.dtRatio = 0; // dt * inv_dt0\r\n        this.velocityIterations = 0;\r\n        this.positionIterations = 0;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.particleIterations = 0;\r\n        // #endif\r\n        this.warmStarting = false;\r\n    }\r\n    Copy(step) {\r\n        this.dt = step.dt;\r\n        this.inv_dt = step.inv_dt;\r\n        this.dtRatio = step.dtRatio;\r\n        this.positionIterations = step.positionIterations;\r\n        this.velocityIterations = step.velocityIterations;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.particleIterations = step.particleIterations;\r\n        // #endif\r\n        this.warmStarting = step.warmStarting;\r\n        return this;\r\n    }\r\n}\r\nexport class b2Position {\r\n    constructor() {\r\n        this.c = new b2Vec2();\r\n        this.a = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Position());\r\n    }\r\n}\r\nexport class b2Velocity {\r\n    constructor() {\r\n        this.v = new b2Vec2();\r\n        this.w = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2Velocity());\r\n    }\r\n}\r\nexport class b2SolverData {\r\n    constructor() {\r\n        this.step = new b2TimeStep();\r\n        this.positions = null;\r\n        this.velocities = null;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJUaW1lU3RlcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL0R5bmFtaWNzL2IyVGltZVN0ZXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTFDLDhDQUE4QztBQUM5QyxNQUFNLE9BQU8sU0FBUztJQUF0QjtRQUNTLFNBQUksR0FBVyxDQUFDLENBQUM7UUFDakIsWUFBTyxHQUFXLENBQUMsQ0FBQztRQUNwQixVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBQ2xCLGNBQVMsR0FBVyxDQUFDLENBQUM7UUFDdEIsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFDMUIsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFDMUIsZUFBVSxHQUFXLENBQUMsQ0FBQztRQUN2QixhQUFRLEdBQVcsQ0FBQyxDQUFDO0lBYTlCLENBQUM7SUFYUSxLQUFLO1FBQ1YsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7UUFDZCxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGO0FBRUQsa0NBQWtDO0FBQ2xDLE1BQU0sT0FBTyxVQUFVO0lBQXZCO1FBQ1MsT0FBRSxHQUFXLENBQUMsQ0FBQyxDQUFDLFlBQVk7UUFDNUIsV0FBTSxHQUFXLENBQUMsQ0FBQyxDQUFDLG9DQUFvQztRQUN4RCxZQUFPLEdBQVcsQ0FBQyxDQUFDLENBQUMsZUFBZTtRQUNwQyx1QkFBa0IsR0FBVyxDQUFDLENBQUM7UUFDL0IsdUJBQWtCLEdBQVcsQ0FBQyxDQUFDO1FBQ3RDLHlCQUF5QjtRQUNsQix1QkFBa0IsR0FBVyxDQUFDLENBQUM7UUFDdEMsU0FBUztRQUNGLGlCQUFZLEdBQVksS0FBSyxDQUFDO0lBY3ZDLENBQUM7SUFaUSxJQUFJLENBQUMsSUFBZ0I7UUFDMUIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDNUIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztRQUNsRCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDO1FBQ2xELHlCQUF5QjtRQUN6QixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDO1FBQ2xELFNBQVM7UUFDVCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDdEMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sVUFBVTtJQUF2QjtRQUNTLE1BQUMsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ3pCLE1BQUMsR0FBVyxDQUFDLENBQUM7SUFLdkIsQ0FBQztJQUhRLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBYztRQUNwQyxPQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFTLEVBQWMsRUFBRSxDQUFDLElBQUksVUFBVSxFQUFFLENBQUMsQ0FBQztJQUMxRSxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sVUFBVTtJQUF2QjtRQUNTLE1BQUMsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ3pCLE1BQUMsR0FBVyxDQUFDLENBQUM7SUFLdkIsQ0FBQztJQUhRLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBYztRQUNwQyxPQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFTLEVBQWMsRUFBRSxDQUFDLElBQUksVUFBVSxFQUFFLENBQUMsQ0FBQztJQUMxRSxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sWUFBWTtJQUF6QjtRQUNTLFNBQUksR0FBZSxJQUFJLFVBQVUsRUFBRSxDQUFDO1FBQ3BDLGNBQVMsR0FBaUIsSUFBSSxDQUFDO1FBQy9CLGVBQVUsR0FBaUIsSUFBSSxDQUFDO0lBQ3pDLENBQUM7Q0FBQSJ9","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_linearSlop, b2_maxManifoldPoints, b2_velocityThreshold, b2_maxLinearCorrection, b2_baumgarte, b2_toiBaumgarte, b2MakeArray } from \"../../Common/b2Settings\";\r\nimport { b2Min, b2Max, b2Clamp, b2Vec2, b2Mat22, b2Rot, b2Transform } from \"../../Common/b2Math\";\r\nimport { b2WorldManifold } from \"../../Collision/b2Collision\";\r\nimport { b2ManifoldType } from \"../../Collision/b2Collision\";\r\nimport { b2TimeStep } from \"../b2TimeStep\";\r\nexport class b2VelocityConstraintPoint {\r\n    constructor() {\r\n        this.rA = new b2Vec2();\r\n        this.rB = new b2Vec2();\r\n        this.normalImpulse = 0;\r\n        this.tangentImpulse = 0;\r\n        this.normalMass = 0;\r\n        this.tangentMass = 0;\r\n        this.velocityBias = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2VelocityConstraintPoint());\r\n    }\r\n}\r\nexport class b2ContactVelocityConstraint {\r\n    constructor() {\r\n        this.points = b2VelocityConstraintPoint.MakeArray(b2_maxManifoldPoints);\r\n        this.normal = new b2Vec2();\r\n        this.tangent = new b2Vec2();\r\n        this.normalMass = new b2Mat22();\r\n        this.K = new b2Mat22();\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.invMassA = 0;\r\n        this.invMassB = 0;\r\n        this.invIA = 0;\r\n        this.invIB = 0;\r\n        this.friction = 0;\r\n        this.restitution = 0;\r\n        this.tangentSpeed = 0;\r\n        this.pointCount = 0;\r\n        this.contactIndex = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ContactVelocityConstraint());\r\n    }\r\n}\r\nexport class b2ContactPositionConstraint {\r\n    constructor() {\r\n        this.localPoints = b2Vec2.MakeArray(b2_maxManifoldPoints);\r\n        this.localNormal = new b2Vec2();\r\n        this.localPoint = new b2Vec2();\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.invMassA = 0;\r\n        this.invMassB = 0;\r\n        this.localCenterA = new b2Vec2();\r\n        this.localCenterB = new b2Vec2();\r\n        this.invIA = 0;\r\n        this.invIB = 0;\r\n        this.type = b2ManifoldType.e_unknown;\r\n        this.radiusA = 0;\r\n        this.radiusB = 0;\r\n        this.pointCount = 0;\r\n    }\r\n    static MakeArray(length) {\r\n        return b2MakeArray(length, (i) => new b2ContactPositionConstraint());\r\n    }\r\n}\r\nexport class b2ContactSolverDef {\r\n    constructor() {\r\n        this.step = new b2TimeStep();\r\n        this.contacts = null;\r\n        this.count = 0;\r\n        this.positions = null;\r\n        this.velocities = null;\r\n        this.allocator = null;\r\n    }\r\n}\r\nexport class b2PositionSolverManifold {\r\n    constructor() {\r\n        this.normal = new b2Vec2();\r\n        this.point = new b2Vec2();\r\n        this.separation = 0;\r\n    }\r\n    Initialize(pc, xfA, xfB, index) {\r\n        const pointA = b2PositionSolverManifold.Initialize_s_pointA;\r\n        const pointB = b2PositionSolverManifold.Initialize_s_pointB;\r\n        const planePoint = b2PositionSolverManifold.Initialize_s_planePoint;\r\n        const clipPoint = b2PositionSolverManifold.Initialize_s_clipPoint;\r\n        ///b2Assert(pc.pointCount > 0);\r\n        switch (pc.type) {\r\n            case b2ManifoldType.e_circles:\r\n                {\r\n                    // b2Vec2 pointA = b2Mul(xfA, pc->localPoint);\r\n                    b2Transform.MulXV(xfA, pc.localPoint, pointA);\r\n                    // b2Vec2 pointB = b2Mul(xfB, pc->localPoints[0]);\r\n                    b2Transform.MulXV(xfB, pc.localPoints[0], pointB);\r\n                    // normal = pointB - pointA;\r\n                    // normal.Normalize();\r\n                    b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\r\n                    // point = 0.5f * (pointA + pointB);\r\n                    b2Vec2.MidVV(pointA, pointB, this.point);\r\n                    // separation = b2Dot(pointB - pointA, normal) - pc->radius;\r\n                    this.separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                }\r\n                break;\r\n            case b2ManifoldType.e_faceA:\r\n                {\r\n                    // normal = b2Mul(xfA.q, pc->localNormal);\r\n                    b2Rot.MulRV(xfA.q, pc.localNormal, this.normal);\r\n                    // b2Vec2 planePoint = b2Mul(xfA, pc->localPoint);\r\n                    b2Transform.MulXV(xfA, pc.localPoint, planePoint);\r\n                    // b2Vec2 clipPoint = b2Mul(xfB, pc->localPoints[index]);\r\n                    b2Transform.MulXV(xfB, pc.localPoints[index], clipPoint);\r\n                    // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\r\n                    this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                    // point = clipPoint;\r\n                    this.point.Copy(clipPoint);\r\n                }\r\n                break;\r\n            case b2ManifoldType.e_faceB:\r\n                {\r\n                    // normal = b2Mul(xfB.q, pc->localNormal);\r\n                    b2Rot.MulRV(xfB.q, pc.localNormal, this.normal);\r\n                    // b2Vec2 planePoint = b2Mul(xfB, pc->localPoint);\r\n                    b2Transform.MulXV(xfB, pc.localPoint, planePoint);\r\n                    // b2Vec2 clipPoint = b2Mul(xfA, pc->localPoints[index]);\r\n                    b2Transform.MulXV(xfA, pc.localPoints[index], clipPoint);\r\n                    // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\r\n                    this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                    // point = clipPoint;\r\n                    this.point.Copy(clipPoint);\r\n                    // Ensure normal points from A to B\r\n                    // normal = -normal;\r\n                    this.normal.SelfNeg();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\nb2PositionSolverManifold.Initialize_s_pointA = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_pointB = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_planePoint = new b2Vec2();\r\nb2PositionSolverManifold.Initialize_s_clipPoint = new b2Vec2();\r\nexport class b2ContactSolver {\r\n    constructor() {\r\n        this.m_step = new b2TimeStep();\r\n        this.m_positions = null;\r\n        this.m_velocities = null;\r\n        this.m_allocator = null;\r\n        this.m_positionConstraints = b2ContactPositionConstraint.MakeArray(1024); // TODO: b2Settings\r\n        this.m_velocityConstraints = b2ContactVelocityConstraint.MakeArray(1024); // TODO: b2Settings\r\n        this.m_contacts = null;\r\n        this.m_count = 0;\r\n    }\r\n    Initialize(def) {\r\n        this.m_step.Copy(def.step);\r\n        this.m_allocator = def.allocator;\r\n        this.m_count = def.count;\r\n        // TODO:\r\n        if (this.m_positionConstraints.length < this.m_count) {\r\n            const new_length = b2Max(this.m_positionConstraints.length * 2, this.m_count);\r\n            while (this.m_positionConstraints.length < new_length) {\r\n                this.m_positionConstraints[this.m_positionConstraints.length] = new b2ContactPositionConstraint();\r\n            }\r\n        }\r\n        // TODO:\r\n        if (this.m_velocityConstraints.length < this.m_count) {\r\n            const new_length = b2Max(this.m_velocityConstraints.length * 2, this.m_count);\r\n            while (this.m_velocityConstraints.length < new_length) {\r\n                this.m_velocityConstraints[this.m_velocityConstraints.length] = new b2ContactVelocityConstraint();\r\n            }\r\n        }\r\n        this.m_positions = def.positions;\r\n        this.m_velocities = def.velocities;\r\n        this.m_contacts = def.contacts;\r\n        // Initialize position independent portions of the constraints.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const contact = this.m_contacts[i];\r\n            const fixtureA = contact.m_fixtureA;\r\n            const fixtureB = contact.m_fixtureB;\r\n            const shapeA = fixtureA.GetShape();\r\n            const shapeB = fixtureB.GetShape();\r\n            const radiusA = shapeA.m_radius;\r\n            const radiusB = shapeB.m_radius;\r\n            const bodyA = fixtureA.GetBody();\r\n            const bodyB = fixtureB.GetBody();\r\n            const manifold = contact.GetManifold();\r\n            const pointCount = manifold.pointCount;\r\n            ///b2Assert(pointCount > 0);\r\n            const vc = this.m_velocityConstraints[i];\r\n            vc.friction = contact.m_friction;\r\n            vc.restitution = contact.m_restitution;\r\n            vc.tangentSpeed = contact.m_tangentSpeed;\r\n            vc.indexA = bodyA.m_islandIndex;\r\n            vc.indexB = bodyB.m_islandIndex;\r\n            vc.invMassA = bodyA.m_invMass;\r\n            vc.invMassB = bodyB.m_invMass;\r\n            vc.invIA = bodyA.m_invI;\r\n            vc.invIB = bodyB.m_invI;\r\n            vc.contactIndex = i;\r\n            vc.pointCount = pointCount;\r\n            vc.K.SetZero();\r\n            vc.normalMass.SetZero();\r\n            const pc = this.m_positionConstraints[i];\r\n            pc.indexA = bodyA.m_islandIndex;\r\n            pc.indexB = bodyB.m_islandIndex;\r\n            pc.invMassA = bodyA.m_invMass;\r\n            pc.invMassB = bodyB.m_invMass;\r\n            pc.localCenterA.Copy(bodyA.m_sweep.localCenter);\r\n            pc.localCenterB.Copy(bodyB.m_sweep.localCenter);\r\n            pc.invIA = bodyA.m_invI;\r\n            pc.invIB = bodyB.m_invI;\r\n            pc.localNormal.Copy(manifold.localNormal);\r\n            pc.localPoint.Copy(manifold.localPoint);\r\n            pc.pointCount = pointCount;\r\n            pc.radiusA = radiusA;\r\n            pc.radiusB = radiusB;\r\n            pc.type = manifold.type;\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const cp = manifold.points[j];\r\n                const vcp = vc.points[j];\r\n                if (this.m_step.warmStarting) {\r\n                    vcp.normalImpulse = this.m_step.dtRatio * cp.normalImpulse;\r\n                    vcp.tangentImpulse = this.m_step.dtRatio * cp.tangentImpulse;\r\n                }\r\n                else {\r\n                    vcp.normalImpulse = 0;\r\n                    vcp.tangentImpulse = 0;\r\n                }\r\n                vcp.rA.SetZero();\r\n                vcp.rB.SetZero();\r\n                vcp.normalMass = 0;\r\n                vcp.tangentMass = 0;\r\n                vcp.velocityBias = 0;\r\n                pc.localPoints[j].Copy(cp.localPoint);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    InitializeVelocityConstraints() {\r\n        const xfA = b2ContactSolver.InitializeVelocityConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.InitializeVelocityConstraints_s_xfB;\r\n        const worldManifold = b2ContactSolver.InitializeVelocityConstraints_s_worldManifold;\r\n        const k_maxConditionNumber = 1000;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const pc = this.m_positionConstraints[i];\r\n            const radiusA = pc.radiusA;\r\n            const radiusB = pc.radiusB;\r\n            const manifold = this.m_contacts[vc.contactIndex].GetManifold();\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const mB = vc.invMassB;\r\n            const iA = vc.invIA;\r\n            const iB = vc.invIB;\r\n            const localCenterA = pc.localCenterA;\r\n            const localCenterB = pc.localCenterB;\r\n            const cA = this.m_positions[indexA].c;\r\n            const aA = this.m_positions[indexA].a;\r\n            const vA = this.m_velocities[indexA].v;\r\n            const wA = this.m_velocities[indexA].w;\r\n            const cB = this.m_positions[indexB].c;\r\n            const aB = this.m_positions[indexB].a;\r\n            const vB = this.m_velocities[indexB].v;\r\n            const wB = this.m_velocities[indexB].w;\r\n            ///b2Assert(manifold.pointCount > 0);\r\n            xfA.q.SetAngle(aA);\r\n            xfB.q.SetAngle(aB);\r\n            b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n            b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n            worldManifold.Initialize(manifold, xfA, radiusA, xfB, radiusB);\r\n            vc.normal.Copy(worldManifold.normal);\r\n            b2Vec2.CrossVOne(vc.normal, vc.tangent); // compute from normal\r\n            const pointCount = vc.pointCount;\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // vcp->rA = worldManifold.points[j] - cA;\r\n                b2Vec2.SubVV(worldManifold.points[j], cA, vcp.rA);\r\n                // vcp->rB = worldManifold.points[j] - cB;\r\n                b2Vec2.SubVV(worldManifold.points[j], cB, vcp.rB);\r\n                const rnA = b2Vec2.CrossVV(vcp.rA, vc.normal);\r\n                const rnB = b2Vec2.CrossVV(vcp.rB, vc.normal);\r\n                const kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                vcp.normalMass = kNormal > 0 ? 1 / kNormal : 0;\r\n                // b2Vec2 tangent = b2Cross(vc->normal, 1.0f);\r\n                const tangent = vc.tangent; // precomputed from normal\r\n                const rtA = b2Vec2.CrossVV(vcp.rA, tangent);\r\n                const rtB = b2Vec2.CrossVV(vcp.rB, tangent);\r\n                const kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\r\n                vcp.tangentMass = kTangent > 0 ? 1 / kTangent : 0;\r\n                // Setup a velocity bias for restitution.\r\n                vcp.velocityBias = 0;\r\n                // float32 vRel = b2Dot(vc->normal, vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA));\r\n                const vRel = b2Vec2.DotVV(vc.normal, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n                if (vRel < (-b2_velocityThreshold)) {\r\n                    vcp.velocityBias += (-vc.restitution * vRel);\r\n                }\r\n            }\r\n            // If we have two points, then prepare the block solver.\r\n            if (vc.pointCount === 2) {\r\n                const vcp1 = vc.points[0];\r\n                const vcp2 = vc.points[1];\r\n                const rn1A = b2Vec2.CrossVV(vcp1.rA, vc.normal);\r\n                const rn1B = b2Vec2.CrossVV(vcp1.rB, vc.normal);\r\n                const rn2A = b2Vec2.CrossVV(vcp2.rA, vc.normal);\r\n                const rn2B = b2Vec2.CrossVV(vcp2.rB, vc.normal);\r\n                const k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\r\n                const k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\r\n                const k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\r\n                // Ensure a reasonable condition number.\r\n                // float32 k_maxConditionNumber = 1000.0f;\r\n                if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\r\n                    // K is safe to invert.\r\n                    vc.K.ex.Set(k11, k12);\r\n                    vc.K.ey.Set(k12, k22);\r\n                    vc.K.GetInverse(vc.normalMass);\r\n                }\r\n                else {\r\n                    // The constraints are redundant, just use one.\r\n                    // TODO_ERIN use deepest?\r\n                    vc.pointCount = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    WarmStart() {\r\n        const P = b2ContactSolver.WarmStart_s_P;\r\n        // Warm start.\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const iA = vc.invIA;\r\n            const mB = vc.invMassB;\r\n            const iB = vc.invIB;\r\n            const pointCount = vc.pointCount;\r\n            const vA = this.m_velocities[indexA].v;\r\n            let wA = this.m_velocities[indexA].w;\r\n            const vB = this.m_velocities[indexB].v;\r\n            let wB = this.m_velocities[indexB].w;\r\n            const normal = vc.normal;\r\n            // b2Vec2 tangent = b2Cross(normal, 1.0f);\r\n            const tangent = vc.tangent; // precomputed from normal\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // b2Vec2 P = vcp->normalImpulse * normal + vcp->tangentImpulse * tangent;\r\n                b2Vec2.AddVV(b2Vec2.MulSV(vcp.normalImpulse, normal, b2Vec2.s_t0), b2Vec2.MulSV(vcp.tangentImpulse, tangent, b2Vec2.s_t1), P);\r\n                // wA -= iA * b2Cross(vcp->rA, P);\r\n                wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                // vA -= mA * P;\r\n                vA.SelfMulSub(mA, P);\r\n                // wB += iB * b2Cross(vcp->rB, P);\r\n                wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n                // vB += mB * P;\r\n                vB.SelfMulAdd(mB, P);\r\n            }\r\n            // this.m_velocities[indexA].v = vA;\r\n            this.m_velocities[indexA].w = wA;\r\n            // this.m_velocities[indexB].v = vB;\r\n            this.m_velocities[indexB].w = wB;\r\n        }\r\n    }\r\n    SolveVelocityConstraints() {\r\n        const dv = b2ContactSolver.SolveVelocityConstraints_s_dv;\r\n        const dv1 = b2ContactSolver.SolveVelocityConstraints_s_dv1;\r\n        const dv2 = b2ContactSolver.SolveVelocityConstraints_s_dv2;\r\n        const P = b2ContactSolver.SolveVelocityConstraints_s_P;\r\n        const a = b2ContactSolver.SolveVelocityConstraints_s_a;\r\n        const b = b2ContactSolver.SolveVelocityConstraints_s_b;\r\n        const x = b2ContactSolver.SolveVelocityConstraints_s_x;\r\n        const d = b2ContactSolver.SolveVelocityConstraints_s_d;\r\n        const P1 = b2ContactSolver.SolveVelocityConstraints_s_P1;\r\n        const P2 = b2ContactSolver.SolveVelocityConstraints_s_P2;\r\n        const P1P2 = b2ContactSolver.SolveVelocityConstraints_s_P1P2;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const vc = this.m_velocityConstraints[i];\r\n            const indexA = vc.indexA;\r\n            const indexB = vc.indexB;\r\n            const mA = vc.invMassA;\r\n            const iA = vc.invIA;\r\n            const mB = vc.invMassB;\r\n            const iB = vc.invIB;\r\n            const pointCount = vc.pointCount;\r\n            const vA = this.m_velocities[indexA].v;\r\n            let wA = this.m_velocities[indexA].w;\r\n            const vB = this.m_velocities[indexB].v;\r\n            let wB = this.m_velocities[indexB].w;\r\n            // b2Vec2 normal = vc->normal;\r\n            const normal = vc.normal;\r\n            // b2Vec2 tangent = b2Cross(normal, 1.0f);\r\n            const tangent = vc.tangent; // precomputed from normal\r\n            const friction = vc.friction;\r\n            ///b2Assert(pointCount === 1 || pointCount === 2);\r\n            // Solve tangent constraints first because non-penetration is more important\r\n            // than friction.\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                const vcp = vc.points[j];\r\n                // Relative velocity at contact\r\n                // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), dv);\r\n                // Compute tangent force\r\n                // float32 vt = b2Dot(dv, tangent) - vc->tangentSpeed;\r\n                const vt = b2Vec2.DotVV(dv, tangent) - vc.tangentSpeed;\r\n                let lambda = vcp.tangentMass * (-vt);\r\n                // b2Clamp the accumulated force\r\n                const maxFriction = friction * vcp.normalImpulse;\r\n                const newImpulse = b2Clamp(vcp.tangentImpulse + lambda, (-maxFriction), maxFriction);\r\n                lambda = newImpulse - vcp.tangentImpulse;\r\n                vcp.tangentImpulse = newImpulse;\r\n                // Apply contact impulse\r\n                // b2Vec2 P = lambda * tangent;\r\n                b2Vec2.MulSV(lambda, tangent, P);\r\n                // vA -= mA * P;\r\n                vA.SelfMulSub(mA, P);\r\n                // wA -= iA * b2Cross(vcp->rA, P);\r\n                wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                // vB += mB * P;\r\n                vB.SelfMulAdd(mB, P);\r\n                // wB += iB * b2Cross(vcp->rB, P);\r\n                wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n            }\r\n            // Solve normal constraints\r\n            if (vc.pointCount === 1) {\r\n                const vcp = vc.points[0];\r\n                // Relative velocity at contact\r\n                // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), dv);\r\n                // Compute normal impulse\r\n                // float32 vn = b2Dot(dv, normal);\r\n                const vn = b2Vec2.DotVV(dv, normal);\r\n                let lambda = (-vcp.normalMass * (vn - vcp.velocityBias));\r\n                // b2Clamp the accumulated impulse\r\n                // float32 newImpulse = b2Max(vcp->normalImpulse + lambda, 0.0f);\r\n                const newImpulse = b2Max(vcp.normalImpulse + lambda, 0);\r\n                lambda = newImpulse - vcp.normalImpulse;\r\n                vcp.normalImpulse = newImpulse;\r\n                // Apply contact impulse\r\n                // b2Vec2 P = lambda * normal;\r\n                b2Vec2.MulSV(lambda, normal, P);\r\n                // vA -= mA * P;\r\n                vA.SelfMulSub(mA, P);\r\n                // wA -= iA * b2Cross(vcp->rA, P);\r\n                wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                // vB += mB * P;\r\n                vB.SelfMulAdd(mB, P);\r\n                // wB += iB * b2Cross(vcp->rB, P);\r\n                wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n            }\r\n            else {\r\n                // Block solver developed in collaboration with Dirk Gregorius (back in 01/07 on Box2D_Lite).\r\n                // Build the mini LCP for this contact patch\r\n                //\r\n                // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i = 1..2\r\n                //\r\n                // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\r\n                // b = vn0 - velocityBias\r\n                //\r\n                // The system is solved using the \"Total enumeration method\" (s. Murty). The complementary constraint vn_i * x_i\r\n                // implies that we must have in any solution either vn_i = 0 or x_i = 0. So for the 2D contact problem the cases\r\n                // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and vn1 = 0 need to be tested. The first valid\r\n                // solution that satisfies the problem is chosen.\r\n                //\r\n                // In order to account of the accumulated impulse 'a' (because of the iterative nature of the solver which only requires\r\n                // that the accumulated impulse is clamped and not the incremental impulse) we change the impulse variable (x_i).\r\n                //\r\n                // Substitute:\r\n                //\r\n                // x = a + d\r\n                //\r\n                // a := old total impulse\r\n                // x := new total impulse\r\n                // d := incremental impulse\r\n                //\r\n                // For the current iteration we extend the formula for the incremental impulse\r\n                // to compute the new total impulse:\r\n                //\r\n                // vn = A * d + b\r\n                //    = A * (x - a) + b\r\n                //    = A * x + b - A * a\r\n                //    = A * x + b'\r\n                // b' = b - A * a;\r\n                const cp1 = vc.points[0];\r\n                const cp2 = vc.points[1];\r\n                // b2Vec2 a(cp1->normalImpulse, cp2->normalImpulse);\r\n                a.Set(cp1.normalImpulse, cp2.normalImpulse);\r\n                ///b2Assert(a.x >= 0 && a.y >= 0);\r\n                // Relative velocity at contact\r\n                // b2Vec2 dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, cp1.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, cp1.rA, b2Vec2.s_t1), dv1);\r\n                // b2Vec2 dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n                b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, cp2.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, cp2.rA, b2Vec2.s_t1), dv2);\r\n                // Compute normal velocity\r\n                // float32 vn1 = b2Dot(dv1, normal);\r\n                let vn1 = b2Vec2.DotVV(dv1, normal);\r\n                // float32 vn2 = b2Dot(dv2, normal);\r\n                let vn2 = b2Vec2.DotVV(dv2, normal);\r\n                // b2Vec2 b;\r\n                b.x = vn1 - cp1.velocityBias;\r\n                b.y = vn2 - cp2.velocityBias;\r\n                // Compute b'\r\n                // b -= b2Mul(vc->K, a);\r\n                b.SelfSub(b2Mat22.MulMV(vc.K, a, b2Vec2.s_t0));\r\n                /*\r\n                #if B2_DEBUG_SOLVER === 1\r\n                const k_errorTol: number = 0.001;\r\n                #endif\r\n                */\r\n                for (;;) {\r\n                    //\r\n                    // Case 1: vn = 0\r\n                    //\r\n                    // 0 = A * x + b'\r\n                    //\r\n                    // Solve for x:\r\n                    //\r\n                    // x = - inv(A) * b'\r\n                    //\r\n                    // b2Vec2 x = - b2Mul(vc->normalMass, b);\r\n                    b2Mat22.MulMV(vc.normalMass, b, x).SelfNeg();\r\n                    if (x.x >= 0 && x.y >= 0) {\r\n                        // Get the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n                        dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn1 = b2Dot(dv1, normal);\r\n                        vn2 = b2Dot(dv2, normal);\r\n            \r\n                        ///b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\r\n                        ///b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 2: vn1 = 0 and x2 = 0\r\n                    //\r\n                    //   0 = a11 * x1 + a12 * 0 + b1'\r\n                    // vn2 = a21 * x1 + a22 * 0 + b2'\r\n                    //\r\n                    x.x = (-cp1.normalMass * b.x);\r\n                    x.y = 0;\r\n                    vn1 = 0;\r\n                    vn2 = vc.K.ex.y * x.x + b.y;\r\n                    if (x.x >= 0 && vn2 >= 0) {\r\n                        // Get the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn1 = b2Dot(dv1, normal);\r\n            \r\n                        ///b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 3: vn2 = 0 and x1 = 0\r\n                    //\r\n                    // vn1 = a11 * 0 + a12 * x2 + b1'\r\n                    //   0 = a21 * 0 + a22 * x2 + b2'\r\n                    //\r\n                    x.x = 0;\r\n                    x.y = (-cp2.normalMass * b.y);\r\n                    vn1 = vc.K.ey.x * x.y + b.x;\r\n                    vn2 = 0;\r\n                    if (x.y >= 0 && vn1 >= 0) {\r\n                        // Resubstitute for the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        /*\r\n                        #if B2_DEBUG_SOLVER === 1\r\n                        // Postconditions\r\n                        dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n            \r\n                        // Compute normal velocity\r\n                        vn2 = b2Dot(dv2, normal);\r\n            \r\n                        ///b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\r\n                        #endif\r\n                        */\r\n                        break;\r\n                    }\r\n                    //\r\n                    // Case 4: x1 = 0 and x2 = 0\r\n                    //\r\n                    // vn1 = b1\r\n                    // vn2 = b2;\r\n                    x.x = 0;\r\n                    x.y = 0;\r\n                    vn1 = b.x;\r\n                    vn2 = b.y;\r\n                    if (vn1 >= 0 && vn2 >= 0) {\r\n                        // Resubstitute for the incremental impulse\r\n                        // b2Vec2 d = x - a;\r\n                        b2Vec2.SubVV(x, a, d);\r\n                        // Apply incremental impulse\r\n                        // b2Vec2 P1 = d.x * normal;\r\n                        b2Vec2.MulSV(d.x, normal, P1);\r\n                        // b2Vec2 P2 = d.y * normal;\r\n                        b2Vec2.MulSV(d.y, normal, P2);\r\n                        b2Vec2.AddVV(P1, P2, P1P2);\r\n                        // vA -= mA * (P1 + P2);\r\n                        vA.SelfMulSub(mA, P1P2);\r\n                        // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                        wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                        // vB += mB * (P1 + P2);\r\n                        vB.SelfMulAdd(mB, P1P2);\r\n                        // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                        wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                        // Accumulate\r\n                        cp1.normalImpulse = x.x;\r\n                        cp2.normalImpulse = x.y;\r\n                        break;\r\n                    }\r\n                    // No solution, give up. This is hit sometimes, but it doesn't seem to matter.\r\n                    break;\r\n                }\r\n            }\r\n            // this.m_velocities[indexA].v = vA;\r\n            this.m_velocities[indexA].w = wA;\r\n            // this.m_velocities[indexB].v = vB;\r\n            this.m_velocities[indexB].w = wB;\r\n        }\r\n    }\r\n    StoreImpulses() {\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            let vc = this.m_velocityConstraints[i];\r\n            let manifold = this.m_contacts[vc.contactIndex].GetManifold();\r\n            for (let j = 0; j < vc.pointCount; ++j) {\r\n                manifold.points[j].normalImpulse = vc.points[j].normalImpulse;\r\n                manifold.points[j].tangentImpulse = vc.points[j].tangentImpulse;\r\n            }\r\n        }\r\n    }\r\n    SolvePositionConstraints() {\r\n        const xfA = b2ContactSolver.SolvePositionConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.SolvePositionConstraints_s_xfB;\r\n        const psm = b2ContactSolver.SolvePositionConstraints_s_psm;\r\n        const rA = b2ContactSolver.SolvePositionConstraints_s_rA;\r\n        const rB = b2ContactSolver.SolvePositionConstraints_s_rB;\r\n        const P = b2ContactSolver.SolvePositionConstraints_s_P;\r\n        let minSeparation = 0;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const pc = this.m_positionConstraints[i];\r\n            const indexA = pc.indexA;\r\n            const indexB = pc.indexB;\r\n            const localCenterA = pc.localCenterA;\r\n            const mA = pc.invMassA;\r\n            const iA = pc.invIA;\r\n            const localCenterB = pc.localCenterB;\r\n            const mB = pc.invMassB;\r\n            const iB = pc.invIB;\r\n            const pointCount = pc.pointCount;\r\n            const cA = this.m_positions[indexA].c;\r\n            let aA = this.m_positions[indexA].a;\r\n            const cB = this.m_positions[indexB].c;\r\n            let aB = this.m_positions[indexB].a;\r\n            // Solve normal constraints\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                xfA.q.SetAngle(aA);\r\n                xfB.q.SetAngle(aB);\r\n                b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n                b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n                psm.Initialize(pc, xfA, xfB, j);\r\n                const normal = psm.normal;\r\n                const point = psm.point;\r\n                const separation = psm.separation;\r\n                // b2Vec2 rA = point - cA;\r\n                b2Vec2.SubVV(point, cA, rA);\r\n                // b2Vec2 rB = point - cB;\r\n                b2Vec2.SubVV(point, cB, rB);\r\n                // Track max constraint error.\r\n                minSeparation = b2Min(minSeparation, separation);\r\n                // Prevent large corrections and allow slop.\r\n                const C = b2Clamp(b2_baumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\r\n                // Compute the effective mass.\r\n                // float32 rnA = b2Cross(rA, normal);\r\n                const rnA = b2Vec2.CrossVV(rA, normal);\r\n                // float32 rnB = b2Cross(rB, normal);\r\n                const rnB = b2Vec2.CrossVV(rB, normal);\r\n                // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                const K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                // Compute normal impulse\r\n                const impulse = K > 0 ? -C / K : 0;\r\n                // b2Vec2 P = impulse * normal;\r\n                b2Vec2.MulSV(impulse, normal, P);\r\n                // cA -= mA * P;\r\n                cA.SelfMulSub(mA, P);\r\n                // aA -= iA * b2Cross(rA, P);\r\n                aA -= iA * b2Vec2.CrossVV(rA, P);\r\n                // cB += mB * P;\r\n                cB.SelfMulAdd(mB, P);\r\n                // aB += iB * b2Cross(rB, P);\r\n                aB += iB * b2Vec2.CrossVV(rB, P);\r\n            }\r\n            // this.m_positions[indexA].c = cA;\r\n            this.m_positions[indexA].a = aA;\r\n            // this.m_positions[indexB].c = cB;\r\n            this.m_positions[indexB].a = aB;\r\n        }\r\n        // We can't expect minSpeparation >= -b2_linearSlop because we don't\r\n        // push the separation above -b2_linearSlop.\r\n        return minSeparation > (-3 * b2_linearSlop);\r\n    }\r\n    SolveTOIPositionConstraints(toiIndexA, toiIndexB) {\r\n        const xfA = b2ContactSolver.SolveTOIPositionConstraints_s_xfA;\r\n        const xfB = b2ContactSolver.SolveTOIPositionConstraints_s_xfB;\r\n        const psm = b2ContactSolver.SolveTOIPositionConstraints_s_psm;\r\n        const rA = b2ContactSolver.SolveTOIPositionConstraints_s_rA;\r\n        const rB = b2ContactSolver.SolveTOIPositionConstraints_s_rB;\r\n        const P = b2ContactSolver.SolveTOIPositionConstraints_s_P;\r\n        let minSeparation = 0;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            const pc = this.m_positionConstraints[i];\r\n            const indexA = pc.indexA;\r\n            const indexB = pc.indexB;\r\n            const localCenterA = pc.localCenterA;\r\n            const localCenterB = pc.localCenterB;\r\n            const pointCount = pc.pointCount;\r\n            let mA = 0;\r\n            let iA = 0;\r\n            if (indexA === toiIndexA || indexA === toiIndexB) {\r\n                mA = pc.invMassA;\r\n                iA = pc.invIA;\r\n            }\r\n            let mB = 0;\r\n            let iB = 0;\r\n            if (indexB === toiIndexA || indexB === toiIndexB) {\r\n                mB = pc.invMassB;\r\n                iB = pc.invIB;\r\n            }\r\n            const cA = this.m_positions[indexA].c;\r\n            let aA = this.m_positions[indexA].a;\r\n            const cB = this.m_positions[indexB].c;\r\n            let aB = this.m_positions[indexB].a;\r\n            // Solve normal constraints\r\n            for (let j = 0; j < pointCount; ++j) {\r\n                xfA.q.SetAngle(aA);\r\n                xfB.q.SetAngle(aB);\r\n                b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n                b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n                psm.Initialize(pc, xfA, xfB, j);\r\n                const normal = psm.normal;\r\n                const point = psm.point;\r\n                const separation = psm.separation;\r\n                // b2Vec2 rA = point - cA;\r\n                b2Vec2.SubVV(point, cA, rA);\r\n                // b2Vec2 rB = point - cB;\r\n                b2Vec2.SubVV(point, cB, rB);\r\n                // Track max constraint error.\r\n                minSeparation = b2Min(minSeparation, separation);\r\n                // Prevent large corrections and allow slop.\r\n                const C = b2Clamp(b2_toiBaumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\r\n                // Compute the effective mass.\r\n                // float32 rnA = b2Cross(rA, normal);\r\n                const rnA = b2Vec2.CrossVV(rA, normal);\r\n                // float32 rnB = b2Cross(rB, normal);\r\n                const rnB = b2Vec2.CrossVV(rB, normal);\r\n                // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                const K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                // Compute normal impulse\r\n                const impulse = K > 0 ? -C / K : 0;\r\n                // b2Vec2 P = impulse * normal;\r\n                b2Vec2.MulSV(impulse, normal, P);\r\n                // cA -= mA * P;\r\n                cA.SelfMulSub(mA, P);\r\n                // aA -= iA * b2Cross(rA, P);\r\n                aA -= iA * b2Vec2.CrossVV(rA, P);\r\n                // cB += mB * P;\r\n                cB.SelfMulAdd(mB, P);\r\n                // aB += iB * b2Cross(rB, P);\r\n                aB += iB * b2Vec2.CrossVV(rB, P);\r\n            }\r\n            // this.m_positions[indexA].c = cA;\r\n            this.m_positions[indexA].a = aA;\r\n            // this.m_positions[indexB].c = cB;\r\n            this.m_positions[indexB].a = aB;\r\n        }\r\n        // We can't expect minSpeparation >= -b2_linearSlop because we don't\r\n        // push the separation above -b2_linearSlop.\r\n        return minSeparation >= -1.5 * b2_linearSlop;\r\n    }\r\n}\r\nb2ContactSolver.InitializeVelocityConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.InitializeVelocityConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.InitializeVelocityConstraints_s_worldManifold = new b2WorldManifold();\r\nb2ContactSolver.WarmStart_s_P = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv1 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_dv2 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_a = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_b = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_x = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_d = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P1 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P2 = new b2Vec2();\r\nb2ContactSolver.SolveVelocityConstraints_s_P1P2 = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.SolvePositionConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.SolvePositionConstraints_s_psm = new b2PositionSolverManifold();\r\nb2ContactSolver.SolvePositionConstraints_s_rA = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_rB = new b2Vec2();\r\nb2ContactSolver.SolvePositionConstraints_s_P = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_xfA = new b2Transform();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_xfB = new b2Transform();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_psm = new b2PositionSolverManifold();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_rA = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_rB = new b2Vec2();\r\nb2ContactSolver.SolveTOIPositionConstraints_s_P = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_maxFloat, b2_timeToSleep } from \"../Common/b2Settings\";\r\nimport { b2_maxTranslation, b2_maxTranslationSquared } from \"../Common/b2Settings\";\r\nimport { b2_maxRotation, b2_maxRotationSquared } from \"../Common/b2Settings\";\r\nimport { b2_linearSleepTolerance, b2_angularSleepTolerance } from \"../Common/b2Settings\";\r\nimport { b2Abs, b2Min, b2Max, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2ContactSolver, b2ContactSolverDef } from \"./Contacts/b2ContactSolver\";\r\nimport { b2BodyType } from \"./b2Body\";\r\nimport { b2SolverData, b2Position, b2Velocity } from \"./b2TimeStep\";\r\nimport { b2ContactImpulse } from \"./b2WorldCallbacks\";\r\n/*\r\nPosition Correction Notes\r\n=========================\r\nI tried the several algorithms for position correction of the 2D revolute joint.\r\nI looked at these systems:\r\n- simple pendulum (1m diameter sphere on massless 5m stick) with initial angular velocity of 100 rad/s.\r\n- suspension bridge with 30 1m long planks of length 1m.\r\n- multi-link chain with 30 1m long links.\r\n\r\nHere are the algorithms:\r\n\r\nBaumgarte - A fraction of the position error is added to the velocity error. There is no\r\nseparate position solver.\r\n\r\nPseudo Velocities - After the velocity solver and position integration,\r\nthe position error, Jacobian, and effective mass are recomputed. Then\r\nthe velocity constraints are solved with pseudo velocities and a fraction\r\nof the position error is added to the pseudo velocity error. The pseudo\r\nvelocities are initialized to zero and there is no warm-starting. After\r\nthe position solver, the pseudo velocities are added to the positions.\r\nThis is also called the First Order World method or the Position LCP method.\r\n\r\nModified Nonlinear Gauss-Seidel (NGS) - Like Pseudo Velocities except the\r\nposition error is re-computed for each constraint and the positions are updated\r\nafter the constraint is solved. The radius vectors (aka Jacobians) are\r\nre-computed too (otherwise the algorithm has horrible instability). The pseudo\r\nvelocity states are not needed because they are effectively zero at the beginning\r\nof each iteration. Since we have the current position error, we allow the\r\niterations to terminate early if the error becomes smaller than b2_linearSlop.\r\n\r\nFull NGS or just NGS - Like Modified NGS except the effective mass are re-computed\r\neach time a constraint is solved.\r\n\r\nHere are the results:\r\nBaumgarte - this is the cheapest algorithm but it has some stability problems,\r\nespecially with the bridge. The chain links separate easily close to the root\r\nand they jitter as they struggle to pull together. This is one of the most common\r\nmethods in the field. The big drawback is that the position correction artificially\r\naffects the momentum, thus leading to instabilities and false bounce. I used a\r\nbias factor of 0.2. A larger bias factor makes the bridge less stable, a smaller\r\nfactor makes joints and contacts more spongy.\r\n\r\nPseudo Velocities - the is more stable than the Baumgarte method. The bridge is\r\nstable. However, joints still separate with large angular velocities. Drag the\r\nsimple pendulum in a circle quickly and the joint will separate. The chain separates\r\neasily and does not recover. I used a bias factor of 0.2. A larger value lead to\r\nthe bridge collapsing when a heavy cube drops on it.\r\n\r\nModified NGS - this algorithm is better in some ways than Baumgarte and Pseudo\r\nVelocities, but in other ways it is worse. The bridge and chain are much more\r\nstable, but the simple pendulum goes unstable at high angular velocities.\r\n\r\nFull NGS - stable in all tests. The joints display good stiffness. The bridge\r\nstill sags, but this is better than infinite forces.\r\n\r\nRecommendations\r\nPseudo Velocities are not really worthwhile because the bridge and chain cannot\r\nrecover from joint separation. In other cases the benefit over Baumgarte is small.\r\n\r\nModified NGS is not a robust method for the revolute joint due to the violent\r\ninstability seen in the simple pendulum. Perhaps it is viable with other constraint\r\ntypes, especially scalar constraints where the effective mass is a scalar.\r\n\r\nThis leaves Baumgarte and Full NGS. Baumgarte has small, but manageable instabilities\r\nand is very fast. I don't think we can escape Baumgarte, especially in highly\r\ndemanding cases where high constraint fidelity is not needed.\r\n\r\nFull NGS is robust and easy on the eyes. I recommend this as an option for\r\nhigher fidelity simulation and certainly for suspension bridges and long chains.\r\nFull NGS might be a good choice for ragdolls, especially motorized ragdolls where\r\njoint separation can be problematic. The number of NGS iterations can be reduced\r\nfor better performance without harming robustness much.\r\n\r\nEach joint in a can be handled differently in the position solver. So I recommend\r\na system where the user can select the algorithm on a per joint basis. I would\r\nprobably default to the slower Full NGS and let the user select the faster\r\nBaumgarte method in performance critical scenarios.\r\n*/\r\n/*\r\nCache Performance\r\n\r\nThe Box2D solvers are dominated by cache misses. Data structures are designed\r\nto increase the number of cache hits. Much of misses are due to random access\r\nto body data. The constraint structures are iterated over linearly, which leads\r\nto few cache misses.\r\n\r\nThe bodies are not accessed during iteration. Instead read only data, such as\r\nthe mass values are stored with the constraints. The mutable data are the constraint\r\nimpulses and the bodies velocities/positions. The impulses are held inside the\r\nconstraint structures. The body velocities/positions are held in compact, temporary\r\narrays to increase the number of cache hits. Linear and angular velocity are\r\nstored in a single array since multiple arrays lead to multiple misses.\r\n*/\r\n/*\r\n2D Rotation\r\n\r\nR = [cos(theta) -sin(theta)]\r\n    [sin(theta) cos(theta) ]\r\n\r\nthetaDot = omega\r\n\r\nLet q1 = cos(theta), q2 = sin(theta).\r\nR = [q1 -q2]\r\n    [q2  q1]\r\n\r\nq1Dot = -thetaDot * q2\r\nq2Dot = thetaDot * q1\r\n\r\nq1_new = q1_old - dt * w * q2\r\nq2_new = q2_old + dt * w * q1\r\nthen normalize.\r\n\r\nThis might be faster than computing sin+cos.\r\nHowever, we can compute sin+cos of the same angle fast.\r\n*/\r\nexport class b2Island {\r\n    constructor() {\r\n        this.m_allocator = null;\r\n        this.m_listener = null;\r\n        this.m_bodies = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_contacts = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_joints = [ /*1024*/]; // TODO: b2Settings\r\n        this.m_positions = b2Position.MakeArray(1024); // TODO: b2Settings\r\n        this.m_velocities = b2Velocity.MakeArray(1024); // TODO: b2Settings\r\n        this.m_bodyCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_bodyCapacity = 0;\r\n        this.m_contactCapacity = 0;\r\n        this.m_jointCapacity = 0;\r\n    }\r\n    Initialize(bodyCapacity, contactCapacity, jointCapacity, allocator, listener) {\r\n        this.m_bodyCapacity = bodyCapacity;\r\n        this.m_contactCapacity = contactCapacity;\r\n        this.m_jointCapacity = jointCapacity;\r\n        this.m_bodyCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_allocator = allocator;\r\n        this.m_listener = listener;\r\n        // TODO:\r\n        while (this.m_bodies.length < bodyCapacity) {\r\n            this.m_bodies[this.m_bodies.length] = null;\r\n        }\r\n        // TODO:\r\n        while (this.m_contacts.length < contactCapacity) {\r\n            this.m_contacts[this.m_contacts.length] = null;\r\n        }\r\n        // TODO:\r\n        while (this.m_joints.length < jointCapacity) {\r\n            this.m_joints[this.m_joints.length] = null;\r\n        }\r\n        // TODO:\r\n        if (this.m_positions.length < bodyCapacity) {\r\n            const new_length = b2Max(this.m_positions.length * 2, bodyCapacity);\r\n            while (this.m_positions.length < new_length) {\r\n                this.m_positions[this.m_positions.length] = new b2Position();\r\n            }\r\n        }\r\n        // TODO:\r\n        if (this.m_velocities.length < bodyCapacity) {\r\n            const new_length = b2Max(this.m_velocities.length * 2, bodyCapacity);\r\n            while (this.m_velocities.length < new_length) {\r\n                this.m_velocities[this.m_velocities.length] = new b2Velocity();\r\n            }\r\n        }\r\n    }\r\n    Clear() {\r\n        this.m_bodyCount = 0;\r\n        this.m_contactCount = 0;\r\n        this.m_jointCount = 0;\r\n    }\r\n    AddBody(body) {\r\n        ///b2Assert(this.m_bodyCount < this.m_bodyCapacity);\r\n        body.m_islandIndex = this.m_bodyCount;\r\n        this.m_bodies[this.m_bodyCount++] = body;\r\n    }\r\n    AddContact(contact) {\r\n        ///b2Assert(this.m_contactCount < this.m_contactCapacity);\r\n        this.m_contacts[this.m_contactCount++] = contact;\r\n    }\r\n    AddJoint(joint) {\r\n        ///b2Assert(this.m_jointCount < this.m_jointCapacity);\r\n        this.m_joints[this.m_jointCount++] = joint;\r\n    }\r\n    Solve(profile, step, gravity, allowSleep) {\r\n        const timer = b2Island.s_timer.Reset();\r\n        const h = step.dt;\r\n        // Integrate velocities and apply damping. Initialize the body state.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const b = this.m_bodies[i];\r\n            /*const c: b2Vec2 =*/ this.m_positions[i].c.Copy(b.m_sweep.c);\r\n            const a = b.m_sweep.a;\r\n            const v = this.m_velocities[i].v.Copy(b.m_linearVelocity);\r\n            let w = b.m_angularVelocity;\r\n            // Store positions for continuous collision.\r\n            b.m_sweep.c0.Copy(b.m_sweep.c);\r\n            b.m_sweep.a0 = b.m_sweep.a;\r\n            if (b.m_type === b2BodyType.b2_dynamicBody) {\r\n                // Integrate velocities.\r\n                v.x += h * (b.m_gravityScale * gravity.x + b.m_invMass * b.m_force.x);\r\n                v.y += h * (b.m_gravityScale * gravity.y + b.m_invMass * b.m_force.y);\r\n                w += h * b.m_invI * b.m_torque;\r\n                // Apply damping.\r\n                // ODE: dv/dt + c * v = 0\r\n                // Solution: v(t) = v0 * exp(-c * t)\r\n                // Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\r\n                // v2 = exp(-c * dt) * v1\r\n                // Pade approximation:\r\n                // v2 = v1 * 1 / (1 + c * dt)\r\n                v.SelfMul(1.0 / (1.0 + h * b.m_linearDamping));\r\n                w *= 1.0 / (1.0 + h * b.m_angularDamping);\r\n            }\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n        }\r\n        timer.Reset();\r\n        // Solver data\r\n        const solverData = b2Island.s_solverData;\r\n        solverData.step.Copy(step);\r\n        solverData.positions = this.m_positions;\r\n        solverData.velocities = this.m_velocities;\r\n        // Initialize velocity constraints.\r\n        const contactSolverDef = b2Island.s_contactSolverDef;\r\n        contactSolverDef.step.Copy(step);\r\n        contactSolverDef.contacts = this.m_contacts;\r\n        contactSolverDef.count = this.m_contactCount;\r\n        contactSolverDef.positions = this.m_positions;\r\n        contactSolverDef.velocities = this.m_velocities;\r\n        contactSolverDef.allocator = this.m_allocator;\r\n        const contactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\r\n        contactSolver.InitializeVelocityConstraints();\r\n        if (step.warmStarting) {\r\n            contactSolver.WarmStart();\r\n        }\r\n        for (let i = 0; i < this.m_jointCount; ++i) {\r\n            this.m_joints[i].InitVelocityConstraints(solverData);\r\n        }\r\n        profile.solveInit = timer.GetMilliseconds();\r\n        // Solve velocity constraints.\r\n        timer.Reset();\r\n        for (let i = 0; i < step.velocityIterations; ++i) {\r\n            for (let j = 0; j < this.m_jointCount; ++j) {\r\n                this.m_joints[j].SolveVelocityConstraints(solverData);\r\n            }\r\n            contactSolver.SolveVelocityConstraints();\r\n        }\r\n        // Store impulses for warm starting\r\n        contactSolver.StoreImpulses();\r\n        profile.solveVelocity = timer.GetMilliseconds();\r\n        // Integrate positions.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const c = this.m_positions[i].c;\r\n            let a = this.m_positions[i].a;\r\n            const v = this.m_velocities[i].v;\r\n            let w = this.m_velocities[i].w;\r\n            // Check for large velocities\r\n            const translation = b2Vec2.MulSV(h, v, b2Island.s_translation);\r\n            if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\r\n                const ratio = b2_maxTranslation / translation.Length();\r\n                v.SelfMul(ratio);\r\n            }\r\n            const rotation = h * w;\r\n            if (rotation * rotation > b2_maxRotationSquared) {\r\n                const ratio = b2_maxRotation / b2Abs(rotation);\r\n                w *= ratio;\r\n            }\r\n            // Integrate\r\n            c.x += h * v.x;\r\n            c.y += h * v.y;\r\n            a += h * w;\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n        }\r\n        // Solve position constraints\r\n        timer.Reset();\r\n        let positionSolved = false;\r\n        for (let i = 0; i < step.positionIterations; ++i) {\r\n            const contactsOkay = contactSolver.SolvePositionConstraints();\r\n            let jointsOkay = true;\r\n            for (let j = 0; j < this.m_jointCount; ++j) {\r\n                const jointOkay = this.m_joints[j].SolvePositionConstraints(solverData);\r\n                jointsOkay = jointsOkay && jointOkay;\r\n            }\r\n            if (contactsOkay && jointsOkay) {\r\n                // Exit early if the position errors are small.\r\n                positionSolved = true;\r\n                break;\r\n            }\r\n        }\r\n        // Copy state buffers back to the bodies\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const body = this.m_bodies[i];\r\n            body.m_sweep.c.Copy(this.m_positions[i].c);\r\n            body.m_sweep.a = this.m_positions[i].a;\r\n            body.m_linearVelocity.Copy(this.m_velocities[i].v);\r\n            body.m_angularVelocity = this.m_velocities[i].w;\r\n            body.SynchronizeTransform();\r\n        }\r\n        profile.solvePosition = timer.GetMilliseconds();\r\n        this.Report(contactSolver.m_velocityConstraints);\r\n        if (allowSleep) {\r\n            let minSleepTime = b2_maxFloat;\r\n            const linTolSqr = b2_linearSleepTolerance * b2_linearSleepTolerance;\r\n            const angTolSqr = b2_angularSleepTolerance * b2_angularSleepTolerance;\r\n            for (let i = 0; i < this.m_bodyCount; ++i) {\r\n                const b = this.m_bodies[i];\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    continue;\r\n                }\r\n                if (!b.m_autoSleepFlag ||\r\n                    b.m_angularVelocity * b.m_angularVelocity > angTolSqr ||\r\n                    b2Vec2.DotVV(b.m_linearVelocity, b.m_linearVelocity) > linTolSqr) {\r\n                    b.m_sleepTime = 0;\r\n                    minSleepTime = 0;\r\n                }\r\n                else {\r\n                    b.m_sleepTime += h;\r\n                    minSleepTime = b2Min(minSleepTime, b.m_sleepTime);\r\n                }\r\n            }\r\n            if (minSleepTime >= b2_timeToSleep && positionSolved) {\r\n                for (let i = 0; i < this.m_bodyCount; ++i) {\r\n                    const b = this.m_bodies[i];\r\n                    b.SetAwake(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveTOI(subStep, toiIndexA, toiIndexB) {\r\n        ///b2Assert(toiIndexA < this.m_bodyCount);\r\n        ///b2Assert(toiIndexB < this.m_bodyCount);\r\n        // Initialize the body state.\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const b = this.m_bodies[i];\r\n            this.m_positions[i].c.Copy(b.m_sweep.c);\r\n            this.m_positions[i].a = b.m_sweep.a;\r\n            this.m_velocities[i].v.Copy(b.m_linearVelocity);\r\n            this.m_velocities[i].w = b.m_angularVelocity;\r\n        }\r\n        const contactSolverDef = b2Island.s_contactSolverDef;\r\n        contactSolverDef.contacts = this.m_contacts;\r\n        contactSolverDef.count = this.m_contactCount;\r\n        contactSolverDef.allocator = this.m_allocator;\r\n        contactSolverDef.step.Copy(subStep);\r\n        contactSolverDef.positions = this.m_positions;\r\n        contactSolverDef.velocities = this.m_velocities;\r\n        const contactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\r\n        // Solve position constraints.\r\n        for (let i = 0; i < subStep.positionIterations; ++i) {\r\n            const contactsOkay = contactSolver.SolveTOIPositionConstraints(toiIndexA, toiIndexB);\r\n            if (contactsOkay) {\r\n                break;\r\n            }\r\n        }\r\n        /*\r\n        #if 0\r\n          // Is the new position really safe?\r\n          for (int32 i = 0; i < this.m_contactCount; ++i) {\r\n            b2Contact* c = this.m_contacts[i];\r\n            b2Fixture* fA = c.GetFixtureA();\r\n            b2Fixture* fB = c.GetFixtureB();\r\n      \r\n            b2Body* bA = fA.GetBody();\r\n            b2Body* bB = fB.GetBody();\r\n      \r\n            int32 indexA = c.GetChildIndexA();\r\n            int32 indexB = c.GetChildIndexB();\r\n      \r\n            b2DistanceInput input;\r\n            input.proxyA.Set(fA.GetShape(), indexA);\r\n            input.proxyB.Set(fB.GetShape(), indexB);\r\n            input.transformA = bA.GetTransform();\r\n            input.transformB = bB.GetTransform();\r\n            input.useRadii = false;\r\n      \r\n            b2DistanceOutput output;\r\n            b2SimplexCache cache;\r\n            cache.count = 0;\r\n            b2Distance(&output, &cache, &input);\r\n      \r\n            if (output.distance === 0 || cache.count === 3) {\r\n              cache.count += 0;\r\n            }\r\n          }\r\n        #endif\r\n        */\r\n        // Leap of faith to new safe state.\r\n        this.m_bodies[toiIndexA].m_sweep.c0.Copy(this.m_positions[toiIndexA].c);\r\n        this.m_bodies[toiIndexA].m_sweep.a0 = this.m_positions[toiIndexA].a;\r\n        this.m_bodies[toiIndexB].m_sweep.c0.Copy(this.m_positions[toiIndexB].c);\r\n        this.m_bodies[toiIndexB].m_sweep.a0 = this.m_positions[toiIndexB].a;\r\n        // No warm starting is needed for TOI events because warm\r\n        // starting impulses were applied in the discrete solver.\r\n        contactSolver.InitializeVelocityConstraints();\r\n        // Solve velocity constraints.\r\n        for (let i = 0; i < subStep.velocityIterations; ++i) {\r\n            contactSolver.SolveVelocityConstraints();\r\n        }\r\n        // Don't store the TOI contact forces for warm starting\r\n        // because they can be quite large.\r\n        const h = subStep.dt;\r\n        // Integrate positions\r\n        for (let i = 0; i < this.m_bodyCount; ++i) {\r\n            const c = this.m_positions[i].c;\r\n            let a = this.m_positions[i].a;\r\n            const v = this.m_velocities[i].v;\r\n            let w = this.m_velocities[i].w;\r\n            // Check for large velocities\r\n            const translation = b2Vec2.MulSV(h, v, b2Island.s_translation);\r\n            if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\r\n                const ratio = b2_maxTranslation / translation.Length();\r\n                v.SelfMul(ratio);\r\n            }\r\n            const rotation = h * w;\r\n            if (rotation * rotation > b2_maxRotationSquared) {\r\n                const ratio = b2_maxRotation / b2Abs(rotation);\r\n                w *= ratio;\r\n            }\r\n            // Integrate\r\n            c.SelfMulAdd(h, v);\r\n            a += h * w;\r\n            // this.m_positions[i].c = c;\r\n            this.m_positions[i].a = a;\r\n            // this.m_velocities[i].v = v;\r\n            this.m_velocities[i].w = w;\r\n            // Sync bodies\r\n            const body = this.m_bodies[i];\r\n            body.m_sweep.c.Copy(c);\r\n            body.m_sweep.a = a;\r\n            body.m_linearVelocity.Copy(v);\r\n            body.m_angularVelocity = w;\r\n            body.SynchronizeTransform();\r\n        }\r\n        this.Report(contactSolver.m_velocityConstraints);\r\n    }\r\n    Report(constraints) {\r\n        if (this.m_listener === null) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.m_contactCount; ++i) {\r\n            const c = this.m_contacts[i];\r\n            if (!c) {\r\n                continue;\r\n            }\r\n            const vc = constraints[i];\r\n            const impulse = b2Island.s_impulse;\r\n            impulse.count = vc.pointCount;\r\n            for (let j = 0; j < vc.pointCount; ++j) {\r\n                impulse.normalImpulses[j] = vc.points[j].normalImpulse;\r\n                impulse.tangentImpulses[j] = vc.points[j].tangentImpulse;\r\n            }\r\n            this.m_listener.PostSolve(c, impulse);\r\n        }\r\n    }\r\n}\r\nb2Island.s_timer = new b2Timer();\r\nb2Island.s_solverData = new b2SolverData();\r\nb2Island.s_contactSolverDef = new b2ContactSolverDef();\r\nb2Island.s_contactSolver = new b2ContactSolver();\r\nb2Island.s_translation = new b2Vec2();\r\nb2Island.s_impulse = new b2ContactImpulse();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_invalidParticleIndex } from \"../Common/b2Settings\";\r\nimport { b2Clamp, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\n/**\r\n * The particle type. Can be combined with the | operator.\r\n */\r\nexport var b2ParticleFlag;\r\n(function (b2ParticleFlag) {\r\n    /// Water particle.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_waterParticle\"] = 0] = \"b2_waterParticle\";\r\n    /// Removed after next simulation step.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_zombieParticle\"] = 2] = \"b2_zombieParticle\";\r\n    /// Zero velocity.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_wallParticle\"] = 4] = \"b2_wallParticle\";\r\n    /// With restitution from stretching.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_springParticle\"] = 8] = \"b2_springParticle\";\r\n    /// With restitution from deformation.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_elasticParticle\"] = 16] = \"b2_elasticParticle\";\r\n    /// With viscosity.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_viscousParticle\"] = 32] = \"b2_viscousParticle\";\r\n    /// Without isotropic pressure.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_powderParticle\"] = 64] = \"b2_powderParticle\";\r\n    /// With surface tension.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_tensileParticle\"] = 128] = \"b2_tensileParticle\";\r\n    /// Mix color between contacting particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_colorMixingParticle\"] = 256] = \"b2_colorMixingParticle\";\r\n    /// Call b2DestructionListener on destruction.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_destructionListenerParticle\"] = 512] = \"b2_destructionListenerParticle\";\r\n    /// Prevents other particles from leaking.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_barrierParticle\"] = 1024] = \"b2_barrierParticle\";\r\n    /// Less compressibility.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_staticPressureParticle\"] = 2048] = \"b2_staticPressureParticle\";\r\n    /// Makes pairs or triads with other particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_reactiveParticle\"] = 4096] = \"b2_reactiveParticle\";\r\n    /// With high repulsive force.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_repulsiveParticle\"] = 8192] = \"b2_repulsiveParticle\";\r\n    /// Call b2ContactListener when this particle is about to interact with\r\n    /// a rigid body or stops interacting with a rigid body.\r\n    /// This results in an expensive operation compared to using\r\n    /// b2_fixtureContactFilterParticle to detect collisions between\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_fixtureContactListenerParticle\"] = 16384] = \"b2_fixtureContactListenerParticle\";\r\n    /// Call b2ContactListener when this particle is about to interact with\r\n    /// another particle or stops interacting with another particle.\r\n    /// This results in an expensive operation compared to using\r\n    /// b2_particleContactFilterParticle to detect collisions between\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_particleContactListenerParticle\"] = 32768] = \"b2_particleContactListenerParticle\";\r\n    /// Call b2ContactFilter when this particle interacts with rigid bodies.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_fixtureContactFilterParticle\"] = 65536] = \"b2_fixtureContactFilterParticle\";\r\n    /// Call b2ContactFilter when this particle interacts with other\r\n    /// particles.\r\n    b2ParticleFlag[b2ParticleFlag[\"b2_particleContactFilterParticle\"] = 131072] = \"b2_particleContactFilterParticle\";\r\n})(b2ParticleFlag || (b2ParticleFlag = {}));\r\nexport class b2ParticleDef {\r\n    constructor() {\r\n        this.flags = 0;\r\n        this.position = new b2Vec2();\r\n        this.velocity = new b2Vec2();\r\n        this.color = new b2Color();\r\n        this.lifetime = 0.0;\r\n        this.userData = null;\r\n        this.group = null;\r\n    }\r\n}\r\nexport function b2CalculateParticleIterations(gravity, radius, timeStep) {\r\n    // In some situations you may want more particle iterations than this,\r\n    // but to avoid excessive cycle cost, don't recommend more than this.\r\n    const B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS = 8;\r\n    const B2_RADIUS_THRESHOLD = 0.01;\r\n    const iterations = Math.ceil(Math.sqrt(gravity / (B2_RADIUS_THRESHOLD * radius)) * timeStep);\r\n    return b2Clamp(iterations, 1, B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS);\r\n}\r\nexport class b2ParticleHandle {\r\n    constructor() {\r\n        this.m_index = b2_invalidParticleIndex;\r\n    }\r\n    GetIndex() { return this.m_index; }\r\n    SetIndex(index) { this.m_index = index; }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQYXJ0aWNsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL0JveDJEL0JveDJEL1BhcnRpY2xlL2IyUGFydGljbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFFSCx5QkFBeUI7QUFFekIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDL0QsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHM0M7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxjQThDWDtBQTlDRCxXQUFZLGNBQWM7SUFDeEIsbUJBQW1CO0lBQ25CLDJFQUFvQixDQUFBO0lBQ3BCLHVDQUF1QztJQUN2Qyw2RUFBMEIsQ0FBQTtJQUMxQixrQkFBa0I7SUFDbEIseUVBQXdCLENBQUE7SUFDeEIscUNBQXFDO0lBQ3JDLDZFQUEwQixDQUFBO0lBQzFCLHNDQUFzQztJQUN0QyxnRkFBMkIsQ0FBQTtJQUMzQixtQkFBbUI7SUFDbkIsZ0ZBQTJCLENBQUE7SUFDM0IsK0JBQStCO0lBQy9CLDhFQUEwQixDQUFBO0lBQzFCLHlCQUF5QjtJQUN6QixpRkFBMkIsQ0FBQTtJQUMzQiwyQ0FBMkM7SUFDM0MseUZBQStCLENBQUE7SUFDL0IsOENBQThDO0lBQzlDLHlHQUF1QyxDQUFBO0lBQ3ZDLDBDQUEwQztJQUMxQyxrRkFBNEIsQ0FBQTtJQUM1Qix5QkFBeUI7SUFDekIsZ0dBQW1DLENBQUE7SUFDbkMsK0NBQStDO0lBQy9DLG9GQUE2QixDQUFBO0lBQzdCLDhCQUE4QjtJQUM5QixzRkFBOEIsQ0FBQTtJQUM5Qix1RUFBdUU7SUFDdkUsd0RBQXdEO0lBQ3hELDREQUE0RDtJQUM1RCxnRUFBZ0U7SUFDaEUsY0FBYztJQUNkLGlIQUEyQyxDQUFBO0lBQzNDLHVFQUF1RTtJQUN2RSxnRUFBZ0U7SUFDaEUsNERBQTREO0lBQzVELGlFQUFpRTtJQUNqRSxjQUFjO0lBQ2QsbUhBQTRDLENBQUE7SUFDNUMsd0VBQXdFO0lBQ3hFLDZHQUF5QyxDQUFBO0lBQ3pDLGdFQUFnRTtJQUNoRSxjQUFjO0lBQ2QsZ0hBQTBDLENBQUE7QUFDNUMsQ0FBQyxFQTlDVyxjQUFjLEtBQWQsY0FBYyxRQThDekI7QUFFRCxNQUFNLE9BQU8sYUFBYTtJQUExQjtRQUNFLFVBQUssR0FBbUIsQ0FBQyxDQUFDO1FBQzFCLGFBQVEsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ2hDLGFBQVEsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ2hDLFVBQUssR0FBWSxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQy9CLGFBQVEsR0FBVyxHQUFHLENBQUM7UUFDdkIsYUFBUSxHQUFRLElBQUksQ0FBQztRQUNyQixVQUFLLEdBQW9CLElBQUksQ0FBQztJQUNoQyxDQUFDO0NBQUE7QUFFRCxNQUFNLFVBQVUsNkJBQTZCLENBQUMsT0FBZSxFQUFFLE1BQWMsRUFBRSxRQUFnQjtJQUM3RixzRUFBc0U7SUFDdEUscUVBQXFFO0lBQ3JFLE1BQU0sc0NBQXNDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pELE1BQU0sbUJBQW1CLEdBQUcsSUFBSSxDQUFDO0lBQ2pDLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxtQkFBbUIsR0FBRyxNQUFNLENBQUMsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDO0lBQzdGLE9BQU8sT0FBTyxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsc0NBQXNDLENBQUMsQ0FBQztBQUN4RSxDQUFDO0FBRUQsTUFBTSxPQUFPLGdCQUFnQjtJQUE3QjtRQUNTLFlBQU8sR0FBVyx1QkFBdUIsQ0FBQztJQUduRCxDQUFDO0lBRlEsUUFBUSxLQUFhLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDM0MsUUFBUSxDQUFDLEtBQWEsSUFBVSxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7Q0FDL0Q7QUFFRCxTQUFTIn0=","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2Vec2, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\nexport var b2ParticleGroupFlag;\r\n(function (b2ParticleGroupFlag) {\r\n    /// Prevents overlapping or leaking.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_solidParticleGroup\"] = 1] = \"b2_solidParticleGroup\";\r\n    /// Keeps its shape.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_rigidParticleGroup\"] = 2] = \"b2_rigidParticleGroup\";\r\n    /// Won't be destroyed if it gets empty.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupCanBeEmpty\"] = 4] = \"b2_particleGroupCanBeEmpty\";\r\n    /// Will be destroyed on next simulation step.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupWillBeDestroyed\"] = 8] = \"b2_particleGroupWillBeDestroyed\";\r\n    /// Updates depth data on next simulation step.\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupNeedsUpdateDepth\"] = 16] = \"b2_particleGroupNeedsUpdateDepth\";\r\n    b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupInternalMask\"] = 24] = \"b2_particleGroupInternalMask\";\r\n})(b2ParticleGroupFlag || (b2ParticleGroupFlag = {}));\r\nexport class b2ParticleGroupDef {\r\n    constructor() {\r\n        this.flags = 0;\r\n        this.groupFlags = 0;\r\n        this.position = new b2Vec2();\r\n        this.angle = 0.0;\r\n        this.linearVelocity = new b2Vec2();\r\n        this.angularVelocity = 0.0;\r\n        this.color = new b2Color();\r\n        this.strength = 1.0;\r\n        this.shape = null;\r\n        this.shapes = null;\r\n        this.shapeCount = 0;\r\n        this.stride = 0;\r\n        this.particleCount = 0;\r\n        this.positionData = null;\r\n        this.lifetime = 0;\r\n        this.userData = null;\r\n        this.group = null;\r\n    }\r\n}\r\nexport class b2ParticleGroup {\r\n    constructor(system) {\r\n        this.m_system = null;\r\n        this.m_firstIndex = 0;\r\n        this.m_lastIndex = 0;\r\n        this.m_groupFlags = 0;\r\n        this.m_strength = 1.0;\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.m_timestamp = -1;\r\n        this.m_mass = 0.0;\r\n        this.m_inertia = 0.0;\r\n        this.m_center = new b2Vec2();\r\n        this.m_linearVelocity = new b2Vec2();\r\n        this.m_angularVelocity = 0.0;\r\n        this.m_transform = new b2Transform();\r\n        ///m_transform.SetIdentity();\r\n        this.m_userData = null;\r\n        this.m_system = system;\r\n    }\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    GetParticleSystem() {\r\n        return this.m_system;\r\n    }\r\n    GetParticleCount() {\r\n        return this.m_lastIndex - this.m_firstIndex;\r\n    }\r\n    GetBufferIndex() {\r\n        return this.m_firstIndex;\r\n    }\r\n    ContainsParticle(index) {\r\n        return this.m_firstIndex <= index && index < this.m_lastIndex;\r\n    }\r\n    GetAllParticleFlags() {\r\n        let flags = 0;\r\n        for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n            flags |= this.m_system.m_flagsBuffer.data[i];\r\n        }\r\n        return flags;\r\n    }\r\n    GetGroupFlags() {\r\n        return this.m_groupFlags;\r\n    }\r\n    SetGroupFlags(flags) {\r\n        ///b2Assert((flags & b2ParticleGroupFlag.b2_particleGroupInternalMask) === 0);\r\n        flags |= this.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupInternalMask;\r\n        this.m_system.SetGroupFlags(this, flags);\r\n    }\r\n    GetMass() {\r\n        this.UpdateStatistics();\r\n        return this.m_mass;\r\n    }\r\n    GetInertia() {\r\n        this.UpdateStatistics();\r\n        return this.m_inertia;\r\n    }\r\n    GetCenter() {\r\n        this.UpdateStatistics();\r\n        return this.m_center;\r\n    }\r\n    GetLinearVelocity() {\r\n        this.UpdateStatistics();\r\n        return this.m_linearVelocity;\r\n    }\r\n    GetAngularVelocity() {\r\n        this.UpdateStatistics();\r\n        return this.m_angularVelocity;\r\n    }\r\n    GetTransform() {\r\n        return this.m_transform;\r\n    }\r\n    GetPosition() {\r\n        return this.m_transform.p;\r\n    }\r\n    GetAngle() {\r\n        return this.m_transform.q.GetAngle();\r\n    }\r\n    GetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n        const s_t0 = b2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0;\r\n        this.UpdateStatistics();\r\n        ///  return m_linearVelocity + b2Cross(m_angularVelocity, worldPoint - m_center);\r\n        return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_center, s_t0), out);\r\n    }\r\n    GetUserData() {\r\n        return this.m_userData;\r\n    }\r\n    SetUserData(data) {\r\n        this.m_userData = data;\r\n    }\r\n    ApplyForce(force) {\r\n        this.m_system.ApplyForce(this.m_firstIndex, this.m_lastIndex, force);\r\n    }\r\n    ApplyLinearImpulse(impulse) {\r\n        this.m_system.ApplyLinearImpulse(this.m_firstIndex, this.m_lastIndex, impulse);\r\n    }\r\n    DestroyParticles(callDestructionListener) {\r\n        ///b2Assert(this.m_system.m_world.IsLocked() === false);\r\n        if (this.m_system.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n            this.m_system.DestroyParticle(i, callDestructionListener);\r\n        }\r\n    }\r\n    UpdateStatistics() {\r\n        const p = new b2Vec2();\r\n        const v = new b2Vec2();\r\n        if (this.m_timestamp !== this.m_system.m_timestamp) {\r\n            const m = this.m_system.GetParticleMass();\r\n            ///  this.m_mass = 0;\r\n            this.m_mass = m * (this.m_lastIndex - this.m_firstIndex);\r\n            this.m_center.SetZero();\r\n            this.m_linearVelocity.SetZero();\r\n            for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n                ///  this.m_mass += m;\r\n                ///  this.m_center += m * this.m_system.m_positionBuffer.data[i];\r\n                this.m_center.SelfMulAdd(m, this.m_system.m_positionBuffer.data[i]);\r\n                ///  this.m_linearVelocity += m * this.m_system.m_velocityBuffer.data[i];\r\n                this.m_linearVelocity.SelfMulAdd(m, this.m_system.m_velocityBuffer.data[i]);\r\n            }\r\n            if (this.m_mass > 0) {\r\n                const inv_mass = 1 / this.m_mass;\r\n                ///this.m_center *= 1 / this.m_mass;\r\n                this.m_center.SelfMul(inv_mass);\r\n                ///this.m_linearVelocity *= 1 / this.m_mass;\r\n                this.m_linearVelocity.SelfMul(inv_mass);\r\n            }\r\n            this.m_inertia = 0;\r\n            this.m_angularVelocity = 0;\r\n            for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n                ///b2Vec2 p = this.m_system.m_positionBuffer.data[i] - this.m_center;\r\n                b2Vec2.SubVV(this.m_system.m_positionBuffer.data[i], this.m_center, p);\r\n                ///b2Vec2 v = this.m_system.m_velocityBuffer.data[i] - this.m_linearVelocity;\r\n                b2Vec2.SubVV(this.m_system.m_velocityBuffer.data[i], this.m_linearVelocity, v);\r\n                this.m_inertia += m * b2Vec2.DotVV(p, p);\r\n                this.m_angularVelocity += m * b2Vec2.CrossVV(p, v);\r\n            }\r\n            if (this.m_inertia > 0) {\r\n                this.m_angularVelocity *= 1 / this.m_inertia;\r\n            }\r\n            this.m_timestamp = this.m_system.m_timestamp;\r\n        }\r\n    }\r\n}\r\nb2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0 = new b2Vec2();\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJQYXJ0aWNsZUdyb3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvUGFydGljbGUvYjJQYXJ0aWNsZUdyb3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBRUgseUJBQXlCO0FBRXpCLE9BQU8sRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdkQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBSzNDLE1BQU0sQ0FBTixJQUFZLG1CQWFYO0FBYkQsV0FBWSxtQkFBbUI7SUFDN0Isb0NBQW9DO0lBQ3BDLCtGQUE4QixDQUFBO0lBQzlCLG9CQUFvQjtJQUNwQiwrRkFBOEIsQ0FBQTtJQUM5Qix3Q0FBd0M7SUFDeEMseUdBQW1DLENBQUE7SUFDbkMsOENBQThDO0lBQzlDLG1IQUF3QyxDQUFBO0lBQ3hDLCtDQUErQztJQUMvQyxzSEFBeUMsQ0FBQTtJQUV6Qyw4R0FBaUcsQ0FBQTtBQUNuRyxDQUFDLEVBYlcsbUJBQW1CLEtBQW5CLG1CQUFtQixRQWE5QjtBQUVELE1BQU0sT0FBTyxrQkFBa0I7SUFBL0I7UUFDRSxVQUFLLEdBQW1CLENBQUMsQ0FBQztRQUMxQixlQUFVLEdBQXdCLENBQUMsQ0FBQztRQUNwQyxhQUFRLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNoQyxVQUFLLEdBQVcsR0FBRyxDQUFDO1FBQ3BCLG1CQUFjLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUN0QyxvQkFBZSxHQUFXLEdBQUcsQ0FBQztRQUM5QixVQUFLLEdBQVksSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUMvQixhQUFRLEdBQVcsR0FBRyxDQUFDO1FBQ3ZCLFVBQUssR0FBWSxJQUFJLENBQUM7UUFDdEIsV0FBTSxHQUFjLElBQUksQ0FBQztRQUN6QixlQUFVLEdBQVcsQ0FBQyxDQUFDO1FBQ3ZCLFdBQU0sR0FB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","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2MakeArray } from \"../Common/b2Settings\";\r\nfunction b2Assert(condition) { }\r\nexport class b2StackQueue {\r\n    constructor(capacity) {\r\n        this.m_front = 0;\r\n        this.m_back = 0;\r\n        this.m_capacity = 0;\r\n        this.m_buffer = b2MakeArray(capacity, (index) => null);\r\n        ///this.m_end = capacity; // TODO: this was wrong!\r\n        this.m_capacity = capacity;\r\n    }\r\n    Push(item) {\r\n        if (this.m_back >= this.m_capacity) {\r\n            for (let i = this.m_front; i < this.m_back; i++) {\r\n                this.m_buffer[i - this.m_front] = this.m_buffer[i];\r\n            }\r\n            this.m_back -= this.m_front;\r\n            this.m_front = 0;\r\n            if (this.m_back >= this.m_capacity) {\r\n                if (this.m_capacity > 0) {\r\n                    this.m_buffer.concat(b2MakeArray(this.m_capacity, (index) => null));\r\n                    this.m_capacity *= 2;\r\n                }\r\n                else {\r\n                    this.m_buffer.concat(b2MakeArray(1, (index) => null));\r\n                    this.m_capacity = 1;\r\n                }\r\n                ///m_buffer = (T*) m_allocator->Reallocate(m_buffer, sizeof(T) * m_capacity);\r\n            }\r\n        }\r\n        this.m_buffer[this.m_back] = item;\r\n        this.m_back++;\r\n    }\r\n    Pop() {\r\n        b2Assert(this.m_front < this.m_back);\r\n        delete this.m_buffer[this.m_front];\r\n        this.m_front++;\r\n    }\r\n    Empty() {\r\n        b2Assert(this.m_front <= this.m_back);\r\n        return this.m_front === this.m_back;\r\n    }\r\n    Front() {\r\n        return this.m_buffer[this.m_front];\r\n    }\r\n}\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJTdGFja1F1ZXVlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvUGFydGljbGUvYjJTdGFja1F1ZXVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBRUgseUJBQXlCO0FBRXpCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVuRCxTQUFTLFFBQVEsQ0FBQyxTQUFrQixJQUFHLENBQUM7QUFFeEMsTUFBTSxPQUFPLFlBQVk7SUFLdkIsWUFBWSxRQUFnQjtRQUg1QixZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBQ3BCLFdBQU0sR0FBVyxDQUFDLENBQUM7UUFDbkIsZUFBVSxHQUFXLENBQUMsQ0FBQztRQUVyQixJQUFJLENBQUMsUUFBUSxHQUFHLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZELGtEQUFrRDtRQUNsRCxJQUFJLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztJQUM3QixDQUFDO0lBQ0QsSUFBSSxDQUFDLElBQU87UUFDVixJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNsQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQy9DLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BEO1lBQ0QsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQzVCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1lBQ2pCLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUNsQyxJQUFJLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxFQUFFO29CQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDcEUsSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLENBQUM7aUJBQ3RCO3FCQUFNO29CQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQ3RELElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO2lCQUNyQjtnQkFDRCw2RUFBNkU7YUFDOUU7U0FDRjtRQUNELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUNELEdBQUc7UUFDRCxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUNELEtBQUs7UUFDSCxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEMsT0FBTyxJQUFJLENBQUMsT0FBTyxLQUFLLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdEMsQ0FBQztJQUNELEtBQUs7UUFDSCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Q0FDRjtBQUVELFNBQVMifQ==","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_maxFloat, b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2StackQueue } from \"./b2StackQueue\";\r\nfunction b2Assert(condition) { }\r\n/**\r\n * A field representing the nearest generator from each point.\r\n */\r\nexport class b2VoronoiDiagram {\r\n    constructor(generatorCapacity) {\r\n        this.m_generatorBuffer = null;\r\n        this.m_generatorCapacity = 0;\r\n        this.m_generatorCount = 0;\r\n        this.m_countX = 0;\r\n        this.m_countY = 0;\r\n        this.m_diagram = null;\r\n        this.m_generatorBuffer = b2MakeArray(generatorCapacity, (index) => new b2VoronoiDiagram.Generator());\r\n        this.m_generatorCapacity = generatorCapacity;\r\n    }\r\n    /**\r\n     * Add a generator.\r\n     *\r\n     * @param center the position of the generator.\r\n     * @param tag a tag used to identify the generator in callback functions.\r\n     * @param necessary whether to callback for nodes associated with the generator.\r\n     */\r\n    AddGenerator(center, tag, necessary) {\r\n        b2Assert(this.m_generatorCount < this.m_generatorCapacity);\r\n        let g = this.m_generatorBuffer[this.m_generatorCount++];\r\n        g.center.Copy(center);\r\n        g.tag = tag;\r\n        g.necessary = necessary;\r\n    }\r\n    /**\r\n     * Generate the Voronoi diagram. It is rasterized with a given\r\n     * interval in the same range as the necessary generators exist.\r\n     *\r\n     * @param radius the interval of the diagram.\r\n     * @param margin margin for which the range of the diagram is extended.\r\n     */\r\n    Generate(radius, margin) {\r\n        b2Assert(this.m_diagram === null);\r\n        let inverseRadius = 1 / radius;\r\n        let lower = new b2Vec2(+b2_maxFloat, +b2_maxFloat);\r\n        let upper = new b2Vec2(-b2_maxFloat, -b2_maxFloat);\r\n        let necessary_count = 0;\r\n        for (let k = 0; k < this.m_generatorCount; k++) {\r\n            let g = this.m_generatorBuffer[k];\r\n            if (g.necessary) {\r\n                b2Vec2.MinV(lower, g.center, lower);\r\n                b2Vec2.MaxV(upper, g.center, upper);\r\n                ++necessary_count;\r\n            }\r\n        }\r\n        if (necessary_count === 0) {\r\n            ///debugger;\r\n            this.m_countX = 0;\r\n            this.m_countY = 0;\r\n            return;\r\n        }\r\n        lower.x -= margin;\r\n        lower.y -= margin;\r\n        upper.x += margin;\r\n        upper.y += margin;\r\n        this.m_countX = 1 + Math.floor(inverseRadius * (upper.x - lower.x));\r\n        this.m_countY = 1 + Math.floor(inverseRadius * (upper.y - lower.y));\r\n        ///  m_diagram = (Generator**) m_allocator->Allocate(sizeof(Generator*) * m_countX * m_countY);\r\n        ///  for (int32 i = 0; i < m_countX * m_countY; i++)\r\n        ///  {\r\n        ///    m_diagram[i] = NULL;\r\n        ///  }\r\n        this.m_diagram = b2MakeArray(this.m_countX * this.m_countY, (index) => null);\r\n        // (4 * m_countX * m_countY) is the queue capacity that is experimentally\r\n        // known to be necessary and sufficient for general particle distributions.\r\n        let queue = new b2StackQueue(4 * this.m_countX * this.m_countY);\r\n        for (let k = 0; k < this.m_generatorCount; k++) {\r\n            let g = this.m_generatorBuffer[k];\r\n            ///  g.center = inverseRadius * (g.center - lower);\r\n            g.center.SelfSub(lower).SelfMul(inverseRadius);\r\n            let x = Math.floor(g.center.x);\r\n            let y = Math.floor(g.center.y);\r\n            if (x >= 0 && y >= 0 && x < this.m_countX && y < this.m_countY) {\r\n                queue.Push(new b2VoronoiDiagram.Task(x, y, x + y * this.m_countX, g));\r\n            }\r\n        }\r\n        while (!queue.Empty()) {\r\n            let task = queue.Front();\r\n            let x = task.m_x;\r\n            let y = task.m_y;\r\n            let i = task.m_i;\r\n            let g = task.m_generator;\r\n            queue.Pop();\r\n            if (!this.m_diagram[i]) {\r\n                this.m_diagram[i] = g;\r\n                if (x > 0) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x - 1, y, i - 1, g));\r\n                }\r\n                if (y > 0) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y - 1, i - this.m_countX, g));\r\n                }\r\n                if (x < this.m_countX - 1) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, g));\r\n                }\r\n                if (y < this.m_countY - 1) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, g));\r\n                }\r\n            }\r\n        }\r\n        for (let y = 0; y < this.m_countY; y++) {\r\n            for (let x = 0; x < this.m_countX - 1; x++) {\r\n                let i = x + y * this.m_countX;\r\n                let a = this.m_diagram[i];\r\n                let b = this.m_diagram[i + 1];\r\n                if (a !== b) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y, i, b));\r\n                    queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, a));\r\n                }\r\n            }\r\n        }\r\n        for (let y = 0; y < this.m_countY - 1; y++) {\r\n            for (let x = 0; x < this.m_countX; x++) {\r\n                let i = x + y * this.m_countX;\r\n                let a = this.m_diagram[i];\r\n                let b = this.m_diagram[i + this.m_countX];\r\n                if (a !== b) {\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y, i, b));\r\n                    queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, a));\r\n                }\r\n            }\r\n        }\r\n        while (!queue.Empty()) {\r\n            let task = queue.Front();\r\n            let x = task.m_x;\r\n            let y = task.m_y;\r\n            let i = task.m_i;\r\n            let k = task.m_generator;\r\n            queue.Pop();\r\n            let a = this.m_diagram[i];\r\n            let b = k;\r\n            if (a !== b) {\r\n                let ax = a.center.x - x;\r\n                let ay = a.center.y - y;\r\n                let bx = b.center.x - x;\r\n                let by = b.center.y - y;\r\n                let a2 = ax * ax + ay * ay;\r\n                let b2 = bx * bx + by * by;\r\n                if (a2 > b2) {\r\n                    this.m_diagram[i] = b;\r\n                    if (x > 0) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x - 1, y, i - 1, b));\r\n                    }\r\n                    if (y > 0) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x, y - 1, i - this.m_countX, b));\r\n                    }\r\n                    if (x < this.m_countX - 1) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, b));\r\n                    }\r\n                    if (y < this.m_countY - 1) {\r\n                        queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, b));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enumerate all nodes that contain at least one necessary\r\n     * generator.\r\n     */\r\n    GetNodes(callback) {\r\n        for (let y = 0; y < this.m_countY - 1; y++) {\r\n            for (let x = 0; x < this.m_countX - 1; x++) {\r\n                let i = x + y * this.m_countX;\r\n                let a = this.m_diagram[i];\r\n                let b = this.m_diagram[i + 1];\r\n                let c = this.m_diagram[i + this.m_countX];\r\n                let d = this.m_diagram[i + 1 + this.m_countX];\r\n                if (b !== c) {\r\n                    if (a !== b && a !== c &&\r\n                        (a.necessary || b.necessary || c.necessary)) {\r\n                        callback(a.tag, b.tag, c.tag);\r\n                    }\r\n                    if (d !== b && d !== c &&\r\n                        (a.necessary || b.necessary || c.necessary)) {\r\n                        callback(b.tag, d.tag, c.tag);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n(function (b2VoronoiDiagram) {\r\n    class Generator {\r\n        constructor() {\r\n            this.center = new b2Vec2();\r\n            this.tag = 0;\r\n            this.necessary = false;\r\n        }\r\n    }\r\n    b2VoronoiDiagram.Generator = Generator;\r\n    class Task {\r\n        constructor(x, y, i, g) {\r\n            this.m_x = 0;\r\n            this.m_y = 0;\r\n            this.m_i = 0;\r\n            this.m_generator = null;\r\n            this.m_x = x;\r\n            this.m_y = y;\r\n            this.m_i = i;\r\n            this.m_generator = g;\r\n        }\r\n    }\r\n    b2VoronoiDiagram.Task = Task;\r\n})(b2VoronoiDiagram || (b2VoronoiDiagram = {})); // namespace b2VoronoiDiagram\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_linearSlop, b2_maxFloat, b2_maxParticleIndex, b2_invalidParticleIndex, b2_minParticleSystemBufferCapacity, b2_maxTriadDistanceSquared, b2_barrierCollisionTime, b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2_maxParticlePressure, b2_minParticleWeight, b2_maxParticleForce, b2_particleStride } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Max, b2Abs, b2Clamp, b2Sqrt, b2InvSqrt, b2Vec2, b2Rot, b2Transform } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"../Collision/b2Collision\";\r\nimport { b2ShapeType, b2Shape } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2EdgeShape } from \"../Collision/Shapes/b2EdgeShape\";\r\nimport { b2TimeStep } from \"../Dynamics/b2TimeStep\";\r\nimport { b2QueryCallback } from \"../Dynamics/b2WorldCallbacks\";\r\nimport { b2ParticleFlag, b2ParticleDef, b2ParticleHandle } from \"./b2Particle\";\r\nimport { b2ParticleGroupFlag, b2ParticleGroupDef, b2ParticleGroup } from \"./b2ParticleGroup\";\r\nimport { b2VoronoiDiagram } from \"./b2VoronoiDiagram\";\r\nfunction b2Assert(condition) { }\r\nfunction std_iter_swap(array, a, b) {\r\n    const tmp = array[a];\r\n    array[a] = array[b];\r\n    array[b] = tmp;\r\n}\r\nfunction default_compare(a, b) { return a < b; }\r\nfunction std_sort(array, first = 0, len = array.length - first, cmp = default_compare) {\r\n    let left = first;\r\n    let stack = [];\r\n    let pos = 0;\r\n    for (;;) { /* outer loop */\r\n        for (; left + 1 < len; len++) { /* sort left to len-1 */\r\n            let pivot = array[left + Math.floor(Math.random() * (len - left))]; /* pick random pivot */\r\n            stack[pos++] = len; /* sort right part later */\r\n            for (let right = left - 1;;) { /* inner loop: partitioning */\r\n                while (cmp(array[++right], pivot)) { } /* look for greater element */\r\n                while (cmp(pivot, array[--len])) { } /* look for smaller element */\r\n                if (right >= len)\r\n                    break; /* partition point found? */\r\n                std_iter_swap(array, right, len); /* the only swap */\r\n            } /* partitioned, continue left part */\r\n        }\r\n        if (pos === 0)\r\n            break; /* stack empty? */\r\n        left = len; /* left to right is sorted */\r\n        len = stack[--pos]; /* get next range to sort */\r\n    }\r\n    return array;\r\n}\r\n;\r\nfunction std_stable_sort(array, first = 0, len = array.length - first, cmp = default_compare) {\r\n    return std_sort(array, first, len, cmp);\r\n}\r\n;\r\nfunction std_remove_if(array, predicate, length = array.length) {\r\n    let l = 0;\r\n    for (let c = 0; c < length; ++c) {\r\n        // if we can be collapsed, keep l where it is.\r\n        if (predicate(array[c]))\r\n            continue;\r\n        // this node can't be collapsed; push it back as far as we can.\r\n        if (c === l) {\r\n            ++l;\r\n            continue; // quick exit if we're already in the right spot\r\n        }\r\n        // array[l++] = array[c];\r\n        std_iter_swap(array, l++, c);\r\n    }\r\n    return l;\r\n}\r\n;\r\nfunction std_lower_bound(array, first, last, val, cmp = default_compare) {\r\n    let count = last - first;\r\n    while (count > 0) {\r\n        let step = Math.floor(count / 2);\r\n        let it = first + step;\r\n        if (cmp(array[it], val)) {\r\n            first = ++it;\r\n            count -= step + 1;\r\n        }\r\n        else\r\n            count = step;\r\n    }\r\n    return first;\r\n}\r\n;\r\nfunction std_upper_bound(array, first, last, val, cmp = default_compare) {\r\n    let count = last - first;\r\n    while (count > 0) {\r\n        let step = Math.floor(count / 2);\r\n        let it = first + step;\r\n        if (!cmp(val, array[it])) {\r\n            first = ++it;\r\n            count -= step + 1;\r\n        }\r\n        else\r\n            count = step;\r\n    }\r\n    return first;\r\n}\r\n;\r\nfunction std_rotate(array, first, n_first, last) {\r\n    let next = n_first;\r\n    while (first !== next) {\r\n        std_iter_swap(array, first++, next++);\r\n        if (next === last)\r\n            next = n_first;\r\n        else if (first === n_first)\r\n            n_first = next;\r\n    }\r\n}\r\nfunction std_unique(array, first, last, cmp) {\r\n    if (first === last) {\r\n        return last;\r\n    }\r\n    let result = first;\r\n    while (++first !== last) {\r\n        if (!cmp(array[result], array[first])) {\r\n            ///array[++result] = array[first];\r\n            std_iter_swap(array, ++result, first);\r\n        }\r\n    }\r\n    return ++result;\r\n}\r\nexport class b2GrowableBuffer {\r\n    constructor(allocator) {\r\n        this.data = [];\r\n        this.count = 0;\r\n        this.capacity = 0;\r\n        this.allocator = allocator;\r\n    }\r\n    Append() {\r\n        if (this.count >= this.capacity) {\r\n            this.Grow();\r\n        }\r\n        return this.count++;\r\n    }\r\n    Reserve(newCapacity) {\r\n        if (this.capacity >= newCapacity)\r\n            return;\r\n        b2Assert(this.capacity === this.data.length);\r\n        for (let i = this.capacity; i < newCapacity; ++i) {\r\n            this.data[i] = this.allocator();\r\n        }\r\n        this.capacity = newCapacity;\r\n    }\r\n    Grow() {\r\n        // Double the capacity.\r\n        let newCapacity = this.capacity ? 2 * this.capacity : b2_minParticleSystemBufferCapacity;\r\n        b2Assert(newCapacity > this.capacity);\r\n        this.Reserve(newCapacity);\r\n    }\r\n    Free() {\r\n        if (this.data.length === 0) {\r\n            return;\r\n        }\r\n        this.data = [];\r\n        this.capacity = 0;\r\n        this.count = 0;\r\n    }\r\n    Shorten(newEnd) {\r\n        b2Assert(false);\r\n    }\r\n    Data() {\r\n        return this.data;\r\n    }\r\n    GetCount() {\r\n        return this.count;\r\n    }\r\n    SetCount(newCount) {\r\n        ///b2Assert(0 <= newCount && newCount <= this.capacity);\r\n        this.count = newCount;\r\n    }\r\n    GetCapacity() {\r\n        return this.capacity;\r\n    }\r\n    RemoveIf(pred) {\r\n        let count = 0;\r\n        for (let i = 0; i < this.count; ++i) {\r\n            if (!pred(this.data[i])) {\r\n                count++;\r\n            }\r\n        }\r\n        this.count = std_remove_if(this.data, pred, this.count);\r\n        b2Assert(count === this.count);\r\n    }\r\n    Unique(pred) {\r\n        this.count = std_unique(this.data, 0, this.count, pred);\r\n    }\r\n}\r\nexport class b2FixtureParticleQueryCallback extends b2QueryCallback {\r\n    constructor(system) {\r\n        super();\r\n        this.m_system = system;\r\n    }\r\n    ShouldQueryParticleSystem(system) {\r\n        // Skip reporting particles.\r\n        return false;\r\n    }\r\n    ReportFixture(fixture) {\r\n        if (fixture.IsSensor()) {\r\n            return true;\r\n        }\r\n        const shape = fixture.GetShape();\r\n        const childCount = shape.GetChildCount();\r\n        for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n            const aabb = fixture.GetAABB(childIndex);\r\n            const enumerator = this.m_system.GetInsideBoundsEnumerator(aabb);\r\n            let index;\r\n            while ((index = enumerator.GetNext()) >= 0) {\r\n                this.ReportFixtureAndParticle(fixture, childIndex, index);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    ReportParticle(system, index) {\r\n        return false;\r\n    }\r\n    ReportFixtureAndParticle(fixture, childIndex, index) {\r\n        b2Assert(false); // pure virtual\r\n    }\r\n}\r\nexport class b2ParticleContact {\r\n    constructor() {\r\n        this.indexA = 0;\r\n        this.indexB = 0;\r\n        this.weight = 0;\r\n        this.normal = new b2Vec2();\r\n        this.flags = 0;\r\n    }\r\n    SetIndices(a, b) {\r\n        b2Assert(a <= b2_maxParticleIndex && b <= b2_maxParticleIndex);\r\n        this.indexA = a;\r\n        this.indexB = b;\r\n    }\r\n    SetWeight(w) {\r\n        this.weight = w;\r\n    }\r\n    SetNormal(n) {\r\n        this.normal.Copy(n);\r\n    }\r\n    SetFlags(f) {\r\n        this.flags = f;\r\n    }\r\n    GetIndexA() {\r\n        return this.indexA;\r\n    }\r\n    GetIndexB() {\r\n        return this.indexB;\r\n    }\r\n    GetWeight() {\r\n        return this.weight;\r\n    }\r\n    GetNormal() {\r\n        return this.normal;\r\n    }\r\n    GetFlags() {\r\n        return this.flags;\r\n    }\r\n    IsEqual(rhs) {\r\n        return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && this.weight === rhs.weight && this.normal.x === rhs.normal.x && this.normal.y === rhs.normal.y;\r\n    }\r\n    IsNotEqual(rhs) {\r\n        return !this.IsEqual(rhs);\r\n    }\r\n    ApproximatelyEqual(rhs) {\r\n        const MAX_WEIGHT_DIFF = 0.01; // Weight 0 ~ 1, so about 1%\r\n        const MAX_NORMAL_DIFF_SQ = 0.01 * 0.01; // Normal length = 1, so 1%\r\n        return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && b2Abs(this.weight - rhs.weight) < MAX_WEIGHT_DIFF && b2Vec2.DistanceSquaredVV(this.normal, rhs.normal) < MAX_NORMAL_DIFF_SQ;\r\n    }\r\n}\r\nexport class b2ParticleBodyContact {\r\n    constructor() {\r\n        this.index = 0; // Index of the particle making contact.\r\n        this.body = null; // The body making contact.\r\n        this.fixture = null; // The specific fixture making contact\r\n        this.weight = 0.0; // Weight of the contact. A value between 0.0f and 1.0f.\r\n        this.normal = new b2Vec2(); // The normalized direction from the particle to the body.\r\n        this.mass = 0.0; // The effective mass used in calculating force.\r\n    }\r\n}\r\nexport class b2ParticlePair {\r\n    constructor() {\r\n        this.indexA = 0; // Indices of the respective particles making pair.\r\n        this.indexB = 0;\r\n        this.flags = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\r\n        this.strength = 0.0; // The strength of cohesion among the particles.\r\n        this.distance = 0.0; // The initial distance of the particles.\r\n    }\r\n}\r\nexport class b2ParticleTriad {\r\n    constructor() {\r\n        this.indexA = 0; // Indices of the respective particles making triad.\r\n        this.indexB = 0;\r\n        this.indexC = 0;\r\n        this.flags = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\r\n        this.strength = 0.0; // The strength of cohesion among the particles.\r\n        this.pa = new b2Vec2(0.0, 0.0); // Values used for calculation.\r\n        this.pb = new b2Vec2(0.0, 0.0);\r\n        this.pc = new b2Vec2(0.0, 0.0);\r\n        this.ka = 0.0;\r\n        this.kb = 0.0;\r\n        this.kc = 0.0;\r\n        this.s = 0.0;\r\n    }\r\n}\r\nexport class b2ParticleSystemDef {\r\n    constructor() {\r\n        // Initialize physical coefficients to the maximum values that\r\n        // maintain numerical stability.\r\n        /**\r\n         * Enable strict Particle/Body contact check.\r\n         * See SetStrictContactCheck for details.\r\n         */\r\n        this.strictContactCheck = false;\r\n        /**\r\n         * Set the particle density.\r\n         * See SetDensity for details.\r\n         */\r\n        this.density = 1.0;\r\n        /**\r\n         * Change the particle gravity scale. Adjusts the effect of the\r\n         * global gravity vector on particles. Default value is 1.0f.\r\n         */\r\n        this.gravityScale = 1.0;\r\n        /**\r\n         * Particles behave as circles with this radius. In Box2D units.\r\n         */\r\n        this.radius = 1.0;\r\n        /**\r\n         * Set the maximum number of particles.\r\n         * By default, there is no maximum. The particle buffers can\r\n         * continue to grow while b2World's block allocator still has\r\n         * memory.\r\n         * See SetMaxParticleCount for details.\r\n         */\r\n        this.maxCount = 0;\r\n        /**\r\n         * Increases pressure in response to compression\r\n         * Smaller values allow more compression\r\n         */\r\n        this.pressureStrength = 0.005;\r\n        /**\r\n         * Reduces velocity along the collision normal\r\n         * Smaller value reduces less\r\n         */\r\n        this.dampingStrength = 1.0;\r\n        /**\r\n         * Restores shape of elastic particle groups\r\n         * Larger values increase elastic particle velocity\r\n         */\r\n        this.elasticStrength = 0.25;\r\n        /**\r\n         * Restores length of spring particle groups\r\n         * Larger values increase spring particle velocity\r\n         */\r\n        this.springStrength = 0.25;\r\n        /**\r\n         * Reduces relative velocity of viscous particles\r\n         * Larger values slow down viscous particles more\r\n         */\r\n        this.viscousStrength = 0.25;\r\n        /**\r\n         * Produces pressure on tensile particles\r\n         * 0~0.2. Larger values increase the amount of surface tension.\r\n         */\r\n        this.surfaceTensionPressureStrength = 0.2;\r\n        /**\r\n         * Smoothes outline of tensile particles\r\n         * 0~0.2. Larger values result in rounder, smoother,\r\n         * water-drop-like clusters of particles.\r\n         */\r\n        this.surfaceTensionNormalStrength = 0.2;\r\n        /**\r\n         * Produces additional pressure on repulsive particles\r\n         * Larger values repulse more\r\n         * Negative values mean attraction. The range where particles\r\n         * behave stably is about -0.2 to 2.0.\r\n         */\r\n        this.repulsiveStrength = 1.0;\r\n        /**\r\n         * Produces repulsion between powder particles\r\n         * Larger values repulse more\r\n         */\r\n        this.powderStrength = 0.5;\r\n        /**\r\n         * Pushes particles out of solid particle group\r\n         * Larger values repulse more\r\n         */\r\n        this.ejectionStrength = 0.5;\r\n        /**\r\n         * Produces static pressure\r\n         * Larger values increase the pressure on neighboring partilces\r\n         * For a description of static pressure, see\r\n         * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\r\n         */\r\n        this.staticPressureStrength = 0.2;\r\n        /**\r\n         * Reduces instability in static pressure calculation\r\n         * Larger values make stabilize static pressure with fewer\r\n         * iterations\r\n         */\r\n        this.staticPressureRelaxation = 0.2;\r\n        /**\r\n         * Computes static pressure more precisely\r\n         * See SetStaticPressureIterations for details\r\n         */\r\n        this.staticPressureIterations = 8;\r\n        /**\r\n         * Determines how fast colors are mixed\r\n         * 1.0f ==> mixed immediately\r\n         * 0.5f ==> mixed half way each simulation step (see\r\n         * b2World::Step())\r\n         */\r\n        this.colorMixingStrength = 0.5;\r\n        /**\r\n         * Whether to destroy particles by age when no more particles\r\n         * can be created.  See #b2ParticleSystem::SetDestructionByAge()\r\n         * for more information.\r\n         */\r\n        this.destroyByAge = true;\r\n        /**\r\n         * Granularity of particle lifetimes in seconds.  By default\r\n         * this is set to (1.0f / 60.0f) seconds.  b2ParticleSystem uses\r\n         * a 32-bit signed value to track particle lifetimes so the\r\n         * maximum lifetime of a particle is (2^32 - 1) / (1.0f /\r\n         * lifetimeGranularity) seconds. With the value set to 1/60 the\r\n         * maximum lifetime or age of a particle is 2.27 years.\r\n         */\r\n        this.lifetimeGranularity = 1.0 / 60.0;\r\n    }\r\n    Copy(def) {\r\n        this.strictContactCheck = def.strictContactCheck;\r\n        this.density = def.density;\r\n        this.gravityScale = def.gravityScale;\r\n        this.radius = def.radius;\r\n        this.maxCount = def.maxCount;\r\n        this.pressureStrength = def.pressureStrength;\r\n        this.dampingStrength = def.dampingStrength;\r\n        this.elasticStrength = def.elasticStrength;\r\n        this.springStrength = def.springStrength;\r\n        this.viscousStrength = def.viscousStrength;\r\n        this.surfaceTensionPressureStrength = def.surfaceTensionPressureStrength;\r\n        this.surfaceTensionNormalStrength = def.surfaceTensionNormalStrength;\r\n        this.repulsiveStrength = def.repulsiveStrength;\r\n        this.powderStrength = def.powderStrength;\r\n        this.ejectionStrength = def.ejectionStrength;\r\n        this.staticPressureStrength = def.staticPressureStrength;\r\n        this.staticPressureRelaxation = def.staticPressureRelaxation;\r\n        this.staticPressureIterations = def.staticPressureIterations;\r\n        this.colorMixingStrength = def.colorMixingStrength;\r\n        this.destroyByAge = def.destroyByAge;\r\n        this.lifetimeGranularity = def.lifetimeGranularity;\r\n        return this;\r\n    }\r\n    Clone() {\r\n        return new b2ParticleSystemDef().Copy(this);\r\n    }\r\n}\r\nexport class b2ParticleSystem {\r\n    constructor(def, world) {\r\n        this.m_paused = false;\r\n        this.m_timestamp = 0;\r\n        this.m_allParticleFlags = 0;\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n        this.m_allGroupFlags = 0;\r\n        this.m_needsUpdateAllGroupFlags = false;\r\n        this.m_hasForce = false;\r\n        this.m_iterationIndex = 0;\r\n        this.m_inverseDensity = 0.0;\r\n        this.m_particleDiameter = 0.0;\r\n        this.m_inverseDiameter = 0.0;\r\n        this.m_squaredDiameter = 0.0;\r\n        this.m_count = 0;\r\n        this.m_internalAllocatedCapacity = 0;\r\n        /**\r\n         * Allocator for b2ParticleHandle instances.\r\n         */\r\n        ///m_handleAllocator: any = null;\r\n        /**\r\n         * Maps particle indicies to handles.\r\n         */\r\n        this.m_handleIndexBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_flagsBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_positionBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_velocityBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_forceBuffer = [];\r\n        /**\r\n         * this.m_weightBuffer is populated in ComputeWeight and used in\r\n         * ComputeDepth(), SolveStaticPressure() and SolvePressure().\r\n         */\r\n        this.m_weightBuffer = [];\r\n        /**\r\n         * When any particles have the flag b2_staticPressureParticle,\r\n         * this.m_staticPressureBuffer is first allocated and used in\r\n         * SolveStaticPressure() and SolvePressure().  It will be\r\n         * reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_staticPressureBuffer = [];\r\n        /**\r\n         * this.m_accumulationBuffer is used in many functions as a temporary\r\n         * buffer for scalar values.\r\n         */\r\n        this.m_accumulationBuffer = [];\r\n        /**\r\n         * When any particles have the flag b2_tensileParticle,\r\n         * this.m_accumulation2Buffer is first allocated and used in\r\n         * SolveTensile() as a temporary buffer for vector values.  It\r\n         * will be reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_accumulation2Buffer = [];\r\n        /**\r\n         * When any particle groups have the flag b2_solidParticleGroup,\r\n         * this.m_depthBuffer is first allocated and populated in\r\n         * ComputeDepth() and used in SolveSolid(). It will be\r\n         * reallocated on subsequent CreateParticle() calls.\r\n         */\r\n        this.m_depthBuffer = [];\r\n        this.m_colorBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_groupBuffer = [];\r\n        this.m_userDataBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * Stuck particle detection parameters and record keeping\r\n         */\r\n        this.m_stuckThreshold = 0;\r\n        this.m_lastBodyContactStepBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_bodyContactCountBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_consecutiveContactStepsBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        this.m_stuckParticleBuffer = new b2GrowableBuffer(() => 0);\r\n        this.m_proxyBuffer = new b2GrowableBuffer(() => new b2ParticleSystem.Proxy());\r\n        this.m_contactBuffer = new b2GrowableBuffer(() => new b2ParticleContact());\r\n        this.m_bodyContactBuffer = new b2GrowableBuffer(() => new b2ParticleBodyContact());\r\n        this.m_pairBuffer = new b2GrowableBuffer(() => new b2ParticlePair());\r\n        this.m_triadBuffer = new b2GrowableBuffer(() => new b2ParticleTriad());\r\n        /**\r\n         * Time each particle should be destroyed relative to the last\r\n         * time this.m_timeElapsed was initialized.  Each unit of time\r\n         * corresponds to b2ParticleSystemDef::lifetimeGranularity\r\n         * seconds.\r\n         */\r\n        this.m_expirationTimeBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * List of particle indices sorted by expiration time.\r\n         */\r\n        this.m_indexByExpirationTimeBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n        /**\r\n         * Time elapsed in 32:32 fixed point.  Each non-fractional unit\r\n         * of time corresponds to\r\n         * b2ParticleSystemDef::lifetimeGranularity seconds.\r\n         */\r\n        this.m_timeElapsed = 0;\r\n        /**\r\n         * Whether the expiration time buffer has been modified and\r\n         * needs to be resorted.\r\n         */\r\n        this.m_expirationTimeBufferRequiresSorting = false;\r\n        this.m_groupCount = 0;\r\n        this.m_groupList = null;\r\n        this.m_def = new b2ParticleSystemDef();\r\n        this.m_prev = null;\r\n        this.m_next = null;\r\n        this.SetStrictContactCheck(def.strictContactCheck);\r\n        this.SetDensity(def.density);\r\n        this.SetGravityScale(def.gravityScale);\r\n        this.SetRadius(def.radius);\r\n        this.SetMaxParticleCount(def.maxCount);\r\n        b2Assert(def.lifetimeGranularity > 0.0);\r\n        this.m_def = def.Clone();\r\n        this.m_world = world;\r\n        this.SetDestructionByAge(this.m_def.destroyByAge);\r\n    }\r\n    static computeTag(x, y) {\r\n        ///return ((uint32)(y + yOffset) << yShift) + (uint32)(xScale * x + xOffset);\r\n        return ((((y + b2ParticleSystem.yOffset) >>> 0) << b2ParticleSystem.yShift) + ((b2ParticleSystem.xScale * x + b2ParticleSystem.xOffset) >>> 0)) >>> 0;\r\n    }\r\n    static computeRelativeTag(tag, x, y) {\r\n        ///return tag + (y << yShift) + (x << xShift);\r\n        return (tag + (y << b2ParticleSystem.yShift) + (x << b2ParticleSystem.xShift)) >>> 0;\r\n    }\r\n    Drop() {\r\n        while (this.m_groupList) {\r\n            this.DestroyParticleGroup(this.m_groupList);\r\n        }\r\n        this.FreeUserOverridableBuffer(this.m_handleIndexBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_flagsBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_lastBodyContactStepBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_bodyContactCountBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_consecutiveContactStepsBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_positionBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_velocityBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_colorBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_userDataBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_expirationTimeBuffer);\r\n        this.FreeUserOverridableBuffer(this.m_indexByExpirationTimeBuffer);\r\n        this.FreeBuffer(this.m_forceBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_weightBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_staticPressureBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_accumulationBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_accumulation2Buffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_depthBuffer, this.m_internalAllocatedCapacity);\r\n        this.FreeBuffer(this.m_groupBuffer, this.m_internalAllocatedCapacity);\r\n    }\r\n    /**\r\n     * Create a particle whose properties have been defined.\r\n     *\r\n     * No reference to the definition is retained.\r\n     *\r\n     * A simulation step must occur before it's possible to interact\r\n     * with a newly created particle.  For example,\r\n     * DestroyParticleInShape() will not destroy a particle until\r\n     * b2World::Step() has been called.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     */\r\n    CreateParticle(def) {\r\n        b2Assert(this.m_world.IsLocked() === false);\r\n        if (this.m_world.IsLocked()) {\r\n            return 0;\r\n        }\r\n        if (this.m_count >= this.m_internalAllocatedCapacity) {\r\n            // Double the particle capacity.\r\n            let capacity = this.m_count ? 2 * this.m_count : b2_minParticleSystemBufferCapacity;\r\n            this.ReallocateInternalAllocatedBuffers(capacity);\r\n        }\r\n        if (this.m_count >= this.m_internalAllocatedCapacity) {\r\n            // If the oldest particle should be destroyed...\r\n            if (this.m_def.destroyByAge) {\r\n                this.DestroyOldestParticle(0, false);\r\n                // Need to destroy this particle *now* so that it's possible to\r\n                // create a new particle.\r\n                this.SolveZombie();\r\n            }\r\n            else {\r\n                return b2_invalidParticleIndex;\r\n            }\r\n        }\r\n        let index = this.m_count++;\r\n        this.m_flagsBuffer.data[index] = 0;\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            this.m_lastBodyContactStepBuffer.data[index] = 0;\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            this.m_bodyContactCountBuffer.data[index] = 0;\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            this.m_consecutiveContactStepsBuffer.data[index] = 0;\r\n        }\r\n        this.m_positionBuffer.data[index] = (this.m_positionBuffer.data[index] || new b2Vec2()).Copy(def.position);\r\n        this.m_velocityBuffer.data[index] = (this.m_velocityBuffer.data[index] || new b2Vec2()).Copy(def.velocity);\r\n        this.m_weightBuffer[index] = 0;\r\n        this.m_forceBuffer[index] = (this.m_forceBuffer[index] || new b2Vec2()).SetZero();\r\n        if (this.m_staticPressureBuffer) {\r\n            this.m_staticPressureBuffer[index] = 0;\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            this.m_depthBuffer[index] = 0;\r\n        }\r\n        if (this.m_colorBuffer.data || !def.color.IsZero()) {\r\n            this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n            this.m_colorBuffer.data[index] = (this.m_colorBuffer.data[index] || new b2Color()).Copy(def.color);\r\n        }\r\n        if (this.m_userDataBuffer.data || def.userData) {\r\n            this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\r\n            this.m_userDataBuffer.data[index] = def.userData;\r\n        }\r\n        if (this.m_handleIndexBuffer.data) {\r\n            this.m_handleIndexBuffer.data[index] = null;\r\n        }\r\n        ///Proxy& proxy = m_proxyBuffer.Append();\r\n        let proxy = this.m_proxyBuffer.data[this.m_proxyBuffer.Append()];\r\n        // If particle lifetimes are enabled or the lifetime is set in the particle\r\n        // definition, initialize the lifetime.\r\n        let finiteLifetime = def.lifetime > 0.0;\r\n        if (this.m_expirationTimeBuffer.data || finiteLifetime) {\r\n            this.SetParticleLifetime(index, finiteLifetime ? def.lifetime :\r\n                this.ExpirationTimeToLifetime(-this.GetQuantizedTimeElapsed()));\r\n            // Add a reference to the newly added particle to the end of the\r\n            // queue.\r\n            this.m_indexByExpirationTimeBuffer.data[index] = index;\r\n        }\r\n        proxy.index = index;\r\n        let group = def.group;\r\n        this.m_groupBuffer[index] = group;\r\n        if (group) {\r\n            if (group.m_firstIndex < group.m_lastIndex) {\r\n                // Move particles in the group just before the new particle.\r\n                this.RotateBuffer(group.m_firstIndex, group.m_lastIndex, index);\r\n                b2Assert(group.m_lastIndex === index);\r\n                // Update the index range of the group to contain the new particle.\r\n                group.m_lastIndex = index + 1;\r\n            }\r\n            else {\r\n                // If the group is empty, reset the index range to contain only the\r\n                // new particle.\r\n                group.m_firstIndex = index;\r\n                group.m_lastIndex = index + 1;\r\n            }\r\n        }\r\n        this.SetParticleFlags(index, def.flags);\r\n        return index;\r\n    }\r\n    /**\r\n     * Retrieve a handle to the particle at the specified index.\r\n     *\r\n     * Please see #b2ParticleHandle for why you might want a handle.\r\n     */\r\n    GetParticleHandleFromIndex(index) {\r\n        b2Assert(index >= 0 && index < this.GetParticleCount() && index !== b2_invalidParticleIndex);\r\n        this.m_handleIndexBuffer.data = this.RequestBuffer(this.m_handleIndexBuffer.data);\r\n        let handle = this.m_handleIndexBuffer.data[index];\r\n        if (handle) {\r\n            return handle;\r\n        }\r\n        // Create a handle.\r\n        ///handle = m_handleAllocator.Allocate();\r\n        handle = new b2ParticleHandle();\r\n        b2Assert(handle !== null);\r\n        handle.SetIndex(index);\r\n        this.m_handleIndexBuffer.data[index] = handle;\r\n        return handle;\r\n    }\r\n    /**\r\n     * Destroy a particle.\r\n     *\r\n     * The particle is removed after the next simulation step (see\r\n     * b2World::Step()).\r\n     *\r\n     * @param index Index of the particle to destroy.\r\n     * @param callDestructionListener Whether to call the\r\n     *      destruction listener just before the particle is\r\n     *      destroyed.\r\n     */\r\n    DestroyParticle(index, callDestructionListener = false) {\r\n        let flags = b2ParticleFlag.b2_zombieParticle;\r\n        if (callDestructionListener) {\r\n            flags |= b2ParticleFlag.b2_destructionListenerParticle;\r\n        }\r\n        this.SetParticleFlags(index, this.m_flagsBuffer.data[index] | flags);\r\n    }\r\n    /**\r\n     * Destroy the Nth oldest particle in the system.\r\n     *\r\n     * The particle is removed after the next b2World::Step().\r\n     *\r\n     * @param index Index of the Nth oldest particle to\r\n     *      destroy, 0 will destroy the oldest particle in the\r\n     *      system, 1 will destroy the next oldest particle etc.\r\n     * @param callDestructionListener Whether to call the\r\n     *      destruction listener just before the particle is\r\n     *      destroyed.\r\n     */\r\n    DestroyOldestParticle(index, callDestructionListener = false) {\r\n        const particleCount = this.GetParticleCount();\r\n        b2Assert(index >= 0 && index < particleCount);\r\n        // Make sure particle lifetime tracking is enabled.\r\n        b2Assert(this.m_indexByExpirationTimeBuffer.data !== null);\r\n        // Destroy the oldest particle (preferring to destroy finite\r\n        // lifetime particles first) to free a slot in the buffer.\r\n        const oldestFiniteLifetimeParticle = this.m_indexByExpirationTimeBuffer.data[particleCount - (index + 1)];\r\n        const oldestInfiniteLifetimeParticle = this.m_indexByExpirationTimeBuffer.data[index];\r\n        this.DestroyParticle(this.m_expirationTimeBuffer.data[oldestFiniteLifetimeParticle] > 0.0 ?\r\n            oldestFiniteLifetimeParticle : oldestInfiniteLifetimeParticle, callDestructionListener);\r\n    }\r\n    /**\r\n     * Destroy particles inside a shape.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * In addition, this function immediately destroys particles in\r\n     * the shape in constrast to DestroyParticle() which defers the\r\n     * destruction until the next simulation step.\r\n     *\r\n     * @return Number of particles destroyed.\r\n     * @param shape Shape which encloses particles\r\n     *      that should be destroyed.\r\n     * @param xf Transform applied to the shape.\r\n     * @param callDestructionListener Whether to call the\r\n     *      world b2DestructionListener for each particle\r\n     *      destroyed.\r\n     */\r\n    DestroyParticlesInShape(shape, xf, callDestructionListener = false) {\r\n        const s_aabb = b2ParticleSystem.DestroyParticlesInShape_s_aabb;\r\n        b2Assert(this.m_world.IsLocked() === false);\r\n        if (this.m_world.IsLocked()) {\r\n            return 0;\r\n        }\r\n        const callback = new b2ParticleSystem.DestroyParticlesInShapeCallback(this, shape, xf, callDestructionListener);\r\n        const aabb = s_aabb;\r\n        shape.ComputeAABB(aabb, xf, 0);\r\n        this.m_world.QueryAABB(callback, aabb);\r\n        return callback.Destroyed();\r\n    }\r\n    /**\r\n     * Create a particle group whose properties have been defined.\r\n     *\r\n     * No reference to the definition is retained.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     */\r\n    CreateParticleGroup(groupDef) {\r\n        let s_transform = b2ParticleSystem.CreateParticleGroup_s_transform;\r\n        b2Assert(this.m_world.IsLocked() === false);\r\n        if (this.m_world.IsLocked()) {\r\n            return null;\r\n        }\r\n        let transform = s_transform;\r\n        transform.SetPositionAngle(groupDef.position, groupDef.angle);\r\n        let firstIndex = this.m_count;\r\n        if (groupDef.shape) {\r\n            this.CreateParticlesWithShapeForGroup(groupDef.shape, groupDef, transform);\r\n        }\r\n        if (groupDef.shapes) {\r\n            this.CreateParticlesWithShapesForGroup(groupDef.shapes, groupDef.shapeCount, groupDef, transform);\r\n        }\r\n        if (groupDef.particleCount) {\r\n            b2Assert(groupDef.positionData !== null);\r\n            for (let i = 0; i < groupDef.particleCount; i++) {\r\n                let p = groupDef.positionData[i];\r\n                this.CreateParticleForGroup(groupDef, transform, p);\r\n            }\r\n        }\r\n        let lastIndex = this.m_count;\r\n        let group = new b2ParticleGroup(this);\r\n        group.m_firstIndex = firstIndex;\r\n        group.m_lastIndex = lastIndex;\r\n        group.m_strength = groupDef.strength;\r\n        group.m_userData = groupDef.userData;\r\n        group.m_transform.Copy(transform);\r\n        group.m_prev = null;\r\n        group.m_next = this.m_groupList;\r\n        if (this.m_groupList) {\r\n            this.m_groupList.m_prev = group;\r\n        }\r\n        this.m_groupList = group;\r\n        ++this.m_groupCount;\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            this.m_groupBuffer[i] = group;\r\n        }\r\n        this.SetGroupFlags(group, groupDef.groupFlags);\r\n        // Create pairs and triads between particles in the group.\r\n        let filter = new b2ParticleSystem.ConnectionFilter();\r\n        this.UpdateContacts(true);\r\n        this.UpdatePairsAndTriads(firstIndex, lastIndex, filter);\r\n        if (groupDef.group) {\r\n            this.JoinParticleGroups(groupDef.group, group);\r\n            group = groupDef.group;\r\n        }\r\n        return group;\r\n    }\r\n    /**\r\n     * Join two particle groups.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * @param groupA the first group. Expands to encompass the second group.\r\n     * @param groupB the second group. It is destroyed.\r\n     */\r\n    JoinParticleGroups(groupA, groupB) {\r\n        b2Assert(this.m_world.IsLocked() === false);\r\n        if (this.m_world.IsLocked()) {\r\n            return;\r\n        }\r\n        b2Assert(groupA !== groupB);\r\n        this.RotateBuffer(groupB.m_firstIndex, groupB.m_lastIndex, this.m_count);\r\n        b2Assert(groupB.m_lastIndex === this.m_count);\r\n        this.RotateBuffer(groupA.m_firstIndex, groupA.m_lastIndex, groupB.m_firstIndex);\r\n        b2Assert(groupA.m_lastIndex === groupB.m_firstIndex);\r\n        // Create pairs and triads connecting groupA and groupB.\r\n        let filter = new b2ParticleSystem.JoinParticleGroupsFilter(groupB.m_firstIndex);\r\n        this.UpdateContacts(true);\r\n        this.UpdatePairsAndTriads(groupA.m_firstIndex, groupB.m_lastIndex, filter);\r\n        for (let i = groupB.m_firstIndex; i < groupB.m_lastIndex; i++) {\r\n            this.m_groupBuffer[i] = groupA;\r\n        }\r\n        let groupFlags = groupA.m_groupFlags | groupB.m_groupFlags;\r\n        this.SetGroupFlags(groupA, groupFlags);\r\n        groupA.m_lastIndex = groupB.m_lastIndex;\r\n        groupB.m_firstIndex = groupB.m_lastIndex;\r\n        this.DestroyParticleGroup(groupB);\r\n    }\r\n    /**\r\n     * Split particle group into multiple disconnected groups.\r\n     *\r\n     * warning: This function is locked during callbacks.\r\n     *\r\n     * @param group the group to be split.\r\n     */\r\n    SplitParticleGroup(group) {\r\n        this.UpdateContacts(true);\r\n        let particleCount = group.GetParticleCount();\r\n        // We create several linked lists. Each list represents a set of connected particles.\r\n        ///ParticleListNode* nodeBuffer = (ParticleListNode*) m_world.m_stackAllocator.Allocate(sizeof(ParticleListNode) * particleCount);\r\n        let nodeBuffer = b2MakeArray(particleCount, (index) => new b2ParticleSystem.ParticleListNode());\r\n        b2ParticleSystem.InitializeParticleLists(group, nodeBuffer);\r\n        this.MergeParticleListsInContact(group, nodeBuffer);\r\n        let survivingList = b2ParticleSystem.FindLongestParticleList(group, nodeBuffer);\r\n        this.MergeZombieParticleListNodes(group, nodeBuffer, survivingList);\r\n        this.CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList);\r\n        this.UpdatePairsAndTriadsWithParticleList(group, nodeBuffer);\r\n        ///this.m_world.m_stackAllocator.Free(nodeBuffer);\r\n    }\r\n    /**\r\n     * Get the world particle group list. With the returned group,\r\n     * use b2ParticleGroup::GetNext to get the next group in the\r\n     * world list.\r\n     *\r\n     * A null group indicates the end of the list.\r\n     *\r\n     * @return the head of the world particle group list.\r\n     */\r\n    GetParticleGroupList() {\r\n        return this.m_groupList;\r\n    }\r\n    /**\r\n     * Get the number of particle groups.\r\n     */\r\n    GetParticleGroupCount() {\r\n        return this.m_groupCount;\r\n    }\r\n    /**\r\n     * Get the number of particles.\r\n     */\r\n    GetParticleCount() {\r\n        return this.m_count;\r\n    }\r\n    /**\r\n     * Get the maximum number of particles.\r\n     */\r\n    GetMaxParticleCount() {\r\n        return this.m_def.maxCount;\r\n    }\r\n    /**\r\n     * Set the maximum number of particles.\r\n     *\r\n     * A value of 0 means there is no maximum. The particle buffers\r\n     * can continue to grow while b2World's block allocator still\r\n     * has memory.\r\n     *\r\n     * Note: If you try to CreateParticle() with more than this\r\n     * count, b2_invalidParticleIndex is returned unless\r\n     * SetDestructionByAge() is used to enable the destruction of\r\n     * the oldest particles in the system.\r\n     */\r\n    SetMaxParticleCount(count) {\r\n        b2Assert(this.m_count <= count);\r\n        this.m_def.maxCount = count;\r\n    }\r\n    /**\r\n     * Get all existing particle flags.\r\n     */\r\n    GetAllParticleFlags() {\r\n        return this.m_allParticleFlags;\r\n    }\r\n    /**\r\n     * Get all existing particle group flags.\r\n     */\r\n    GetAllGroupFlags() {\r\n        return this.m_allGroupFlags;\r\n    }\r\n    /**\r\n     * Pause or unpause the particle system. When paused,\r\n     * b2World::Step() skips over this particle system. All\r\n     * b2ParticleSystem function calls still work.\r\n     *\r\n     * @param paused paused is true to pause, false to un-pause.\r\n     */\r\n    SetPaused(paused) {\r\n        this.m_paused = paused;\r\n    }\r\n    /**\r\n     * Initially, true, then, the last value passed into\r\n     * SetPaused().\r\n     *\r\n     * @return true if the particle system is being updated in b2World::Step().\r\n     */\r\n    GetPaused() {\r\n        return this.m_paused;\r\n    }\r\n    /**\r\n     * Change the particle density.\r\n     *\r\n     * Particle density affects the mass of the particles, which in\r\n     * turn affects how the particles interact with b2Bodies. Note\r\n     * that the density does not affect how the particles interact\r\n     * with each other.\r\n     */\r\n    SetDensity(density) {\r\n        this.m_def.density = density;\r\n        this.m_inverseDensity = 1 / this.m_def.density;\r\n    }\r\n    /**\r\n     * Get the particle density.\r\n     */\r\n    GetDensity() {\r\n        return this.m_def.density;\r\n    }\r\n    /**\r\n     * Change the particle gravity scale. Adjusts the effect of the\r\n     * global gravity vector on particles.\r\n     */\r\n    SetGravityScale(gravityScale) {\r\n        this.m_def.gravityScale = gravityScale;\r\n    }\r\n    /**\r\n     * Get the particle gravity scale.\r\n     */\r\n    GetGravityScale() {\r\n        return this.m_def.gravityScale;\r\n    }\r\n    /**\r\n     * Damping is used to reduce the velocity of particles. The\r\n     * damping parameter can be larger than 1.0f but the damping\r\n     * effect becomes sensitive to the time step when the damping\r\n     * parameter is large.\r\n     */\r\n    SetDamping(damping) {\r\n        this.m_def.dampingStrength = damping;\r\n    }\r\n    /**\r\n     * Get damping for particles\r\n     */\r\n    GetDamping() {\r\n        return this.m_def.dampingStrength;\r\n    }\r\n    /**\r\n     * Change the number of iterations when calculating the static\r\n     * pressure of particles. By default, 8 iterations. You can\r\n     * reduce the number of iterations down to 1 in some situations,\r\n     * but this may cause instabilities when many particles come\r\n     * together. If you see particles popping away from each other\r\n     * like popcorn, you may have to increase the number of\r\n     * iterations.\r\n     *\r\n     * For a description of static pressure, see\r\n     * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\r\n     */\r\n    SetStaticPressureIterations(iterations) {\r\n        this.m_def.staticPressureIterations = iterations;\r\n    }\r\n    /**\r\n     * Get the number of iterations for static pressure of\r\n     * particles.\r\n     */\r\n    GetStaticPressureIterations() {\r\n        return this.m_def.staticPressureIterations;\r\n    }\r\n    /**\r\n     * Change the particle radius.\r\n     *\r\n     * You should set this only once, on world start.\r\n     * If you change the radius during execution, existing particles\r\n     * may explode, shrink, or behave unexpectedly.\r\n     */\r\n    SetRadius(radius) {\r\n        this.m_particleDiameter = 2 * radius;\r\n        this.m_squaredDiameter = this.m_particleDiameter * this.m_particleDiameter;\r\n        this.m_inverseDiameter = 1 / this.m_particleDiameter;\r\n    }\r\n    /**\r\n     * Get the particle radius.\r\n     */\r\n    GetRadius() {\r\n        return this.m_particleDiameter / 2;\r\n    }\r\n    /**\r\n     * Get the position of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle positions array.\r\n     */\r\n    GetPositionBuffer() {\r\n        return this.m_positionBuffer.data;\r\n    }\r\n    /**\r\n     * Get the velocity of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle velocities array.\r\n     */\r\n    GetVelocityBuffer() {\r\n        return this.m_velocityBuffer.data;\r\n    }\r\n    /**\r\n     * Get the color of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle colors array.\r\n     */\r\n    GetColorBuffer() {\r\n        this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n        return this.m_colorBuffer.data;\r\n    }\r\n    /**\r\n     * Get the particle-group of each particle.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle group array.\r\n     */\r\n    GetGroupBuffer() {\r\n        return this.m_groupBuffer;\r\n    }\r\n    /**\r\n     * Get the weight of each particle\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle positions array.\r\n     */\r\n    GetWeightBuffer() {\r\n        return this.m_weightBuffer;\r\n    }\r\n    /**\r\n     * Get the user-specified data of each particle.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle user-data array.\r\n     */\r\n    GetUserDataBuffer() {\r\n        this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\r\n        return this.m_userDataBuffer.data;\r\n    }\r\n    /**\r\n     * Get the flags for each particle. See the b2ParticleFlag enum.\r\n     *\r\n     * Array is length GetParticleCount()\r\n     *\r\n     * @return the pointer to the head of the particle-flags array.\r\n     */\r\n    GetFlagsBuffer() {\r\n        return this.m_flagsBuffer.data;\r\n    }\r\n    /**\r\n     * Set flags for a particle. See the b2ParticleFlag enum.\r\n     */\r\n    SetParticleFlags(index, newFlags) {\r\n        let oldFlags = this.m_flagsBuffer.data[index];\r\n        if (oldFlags & ~newFlags) {\r\n            // If any flags might be removed\r\n            this.m_needsUpdateAllParticleFlags = true;\r\n        }\r\n        if (~this.m_allParticleFlags & newFlags) {\r\n            // If any flags were added\r\n            if (newFlags & b2ParticleFlag.b2_tensileParticle) {\r\n                this.m_accumulation2Buffer = this.RequestBuffer(this.m_accumulation2Buffer);\r\n            }\r\n            if (newFlags & b2ParticleFlag.b2_colorMixingParticle) {\r\n                this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n            }\r\n            this.m_allParticleFlags |= newFlags;\r\n        }\r\n        this.m_flagsBuffer.data[index] = newFlags;\r\n    }\r\n    /**\r\n     * Get flags for a particle. See the b2ParticleFlag enum.\r\n     */\r\n    GetParticleFlags(index) {\r\n        return this.m_flagsBuffer.data[index];\r\n    }\r\n    /**\r\n     * Set an external buffer for particle data.\r\n     *\r\n     * Normally, the b2World's block allocator is used for particle\r\n     * data. However, sometimes you may have an OpenGL or Java\r\n     * buffer for particle data. To avoid data duplication, you may\r\n     * supply this external buffer.\r\n     *\r\n     * Note that, when b2World's block allocator is used, the\r\n     * particle data buffers can grow as required. However, when\r\n     * external buffers are used, the maximum number of particles is\r\n     * clamped to the size of the smallest external buffer.\r\n     *\r\n     * @param buffer a pointer to a block of memory.\r\n     * @param capacity the number of values in the block.\r\n     */\r\n    SetFlagsBuffer(buffer, capacity) {\r\n        this.SetUserOverridableBuffer(this.m_flagsBuffer, buffer, capacity);\r\n    }\r\n    SetPositionBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Float32Array) {\r\n        ///let array = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Vec2(buffer.subarray(i * 2, i * 2 + 2));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_positionBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_positionBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetVelocityBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Float32Array) {\r\n        ///let array = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Vec2(buffer.subarray(i * 2, i * 2 + 2));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_velocityBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_velocityBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetColorBuffer(buffer, capacity) {\r\n        ///if (buffer instanceof Uint8Array) {\r\n        ///let array: b2Color[] = [];\r\n        ///for (let i = 0; i < capacity; ++i) {\r\n        ///  array[i] = new b2Color(buffer.subarray(i * 4, i * 4 + 4));\r\n        ///}\r\n        ///this.SetUserOverridableBuffer(this.m_colorBuffer, array, capacity);\r\n        ///} else {\r\n        this.SetUserOverridableBuffer(this.m_colorBuffer, buffer, capacity);\r\n        ///}\r\n    }\r\n    SetUserDataBuffer(buffer, capacity) {\r\n        this.SetUserOverridableBuffer(this.m_userDataBuffer, buffer, capacity);\r\n    }\r\n    /**\r\n     * Get contacts between particles\r\n     * Contact data can be used for many reasons, for example to\r\n     * trigger rendering or audio effects.\r\n     */\r\n    GetContacts() {\r\n        return this.m_contactBuffer.data;\r\n    }\r\n    GetContactCount() {\r\n        return this.m_contactBuffer.count;\r\n    }\r\n    /**\r\n     * Get contacts between particles and bodies\r\n     *\r\n     * Contact data can be used for many reasons, for example to\r\n     * trigger rendering or audio effects.\r\n     */\r\n    GetBodyContacts() {\r\n        return this.m_bodyContactBuffer.data;\r\n    }\r\n    GetBodyContactCount() {\r\n        return this.m_bodyContactBuffer.count;\r\n    }\r\n    /**\r\n     * Get array of particle pairs. The particles in a pair:\r\n     *   (1) are contacting,\r\n     *   (2) are in the same particle group,\r\n     *   (3) are part of a rigid particle group, or are spring, elastic,\r\n     *       or wall particles.\r\n     *   (4) have at least one particle that is a spring or barrier\r\n     *       particle (i.e. one of the types in k_pairFlags),\r\n     *   (5) have at least one particle that returns true for\r\n     *       ConnectionFilter::IsNecessary,\r\n     *   (6) are not zombie particles.\r\n     *\r\n     * Essentially, this is an array of spring or barrier particles\r\n     * that are interacting. The array is sorted by b2ParticlePair's\r\n     * indexA, and then indexB. There are no duplicate entries.\r\n     */\r\n    GetPairs() {\r\n        return this.m_pairBuffer.data;\r\n    }\r\n    GetPairCount() {\r\n        return this.m_pairBuffer.count;\r\n    }\r\n    /**\r\n     * Get array of particle triads. The particles in a triad:\r\n     *   (1) are in the same particle group,\r\n     *   (2) are in a Voronoi triangle together,\r\n     *   (3) are within b2_maxTriadDistance particle diameters of each\r\n     *       other,\r\n     *   (4) return true for ConnectionFilter::ShouldCreateTriad\r\n     *   (5) have at least one particle of type elastic (i.e. one of the\r\n     *       types in k_triadFlags),\r\n     *   (6) are part of a rigid particle group, or are spring, elastic,\r\n     *       or wall particles.\r\n     *   (7) are not zombie particles.\r\n     *\r\n     * Essentially, this is an array of elastic particles that are\r\n     * interacting. The array is sorted by b2ParticleTriad's indexA,\r\n     * then indexB, then indexC. There are no duplicate entries.\r\n     */\r\n    GetTriads() {\r\n        return this.m_triadBuffer.data;\r\n    }\r\n    GetTriadCount() {\r\n        return this.m_triadBuffer.count;\r\n    }\r\n    /**\r\n     * Set an optional threshold for the maximum number of\r\n     * consecutive particle iterations that a particle may contact\r\n     * multiple bodies before it is considered a candidate for being\r\n     * \"stuck\". Setting to zero or less disables.\r\n     */\r\n    SetStuckThreshold(steps) {\r\n        this.m_stuckThreshold = steps;\r\n        if (steps > 0) {\r\n            this.m_lastBodyContactStepBuffer.data = this.RequestBuffer(this.m_lastBodyContactStepBuffer.data);\r\n            this.m_bodyContactCountBuffer.data = this.RequestBuffer(this.m_bodyContactCountBuffer.data);\r\n            this.m_consecutiveContactStepsBuffer.data = this.RequestBuffer(this.m_consecutiveContactStepsBuffer.data);\r\n        }\r\n    }\r\n    /**\r\n     * Get potentially stuck particles from the last step; the user\r\n     * must decide if they are stuck or not, and if so, delete or\r\n     * move them\r\n     */\r\n    GetStuckCandidates() {\r\n        ///return m_stuckParticleBuffer.Data();\r\n        return this.m_stuckParticleBuffer.Data();\r\n    }\r\n    /**\r\n     * Get the number of stuck particle candidates from the last\r\n     * step.\r\n     */\r\n    GetStuckCandidateCount() {\r\n        ///return m_stuckParticleBuffer.GetCount();\r\n        return this.m_stuckParticleBuffer.GetCount();\r\n    }\r\n    /**\r\n     * Compute the kinetic energy that can be lost by damping force\r\n     */\r\n    ComputeCollisionEnergy() {\r\n        let s_v = b2ParticleSystem.ComputeCollisionEnergy_s_v;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let sum_v2 = 0;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let n = contact.normal;\r\n            ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n            let v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n            let vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                sum_v2 += vn * vn;\r\n            }\r\n        }\r\n        return 0.5 * this.GetParticleMass() * sum_v2;\r\n    }\r\n    /**\r\n     * Set strict Particle/Body contact check.\r\n     *\r\n     * This is an option that will help ensure correct behavior if\r\n     * there are corners in the world model where Particle/Body\r\n     * contact is ambiguous. This option scales at n*log(n) of the\r\n     * number of Particle/Body contacts, so it is best to only\r\n     * enable if it is necessary for your geometry. Enable if you\r\n     * see strange particle behavior around b2Body intersections.\r\n     */\r\n    SetStrictContactCheck(enabled) {\r\n        this.m_def.strictContactCheck = enabled;\r\n    }\r\n    /**\r\n     * Get the status of the strict contact check.\r\n     */\r\n    GetStrictContactCheck() {\r\n        return this.m_def.strictContactCheck;\r\n    }\r\n    /**\r\n     * Set the lifetime (in seconds) of a particle relative to the\r\n     * current time.  A lifetime of less than or equal to 0.0f\r\n     * results in the particle living forever until it's manually\r\n     * destroyed by the application.\r\n     */\r\n    SetParticleLifetime(index, lifetime) {\r\n        b2Assert(this.ValidateParticleIndex(index));\r\n        let initializeExpirationTimes = this.m_indexByExpirationTimeBuffer.data === null;\r\n        this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\r\n        this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\r\n        // Initialize the inverse mapping buffer.\r\n        if (initializeExpirationTimes) {\r\n            let particleCount = this.GetParticleCount();\r\n            for (let i = 0; i < particleCount; ++i) {\r\n                this.m_indexByExpirationTimeBuffer.data[i] = i;\r\n            }\r\n        }\r\n        ///const int32 quantizedLifetime = (int32)(lifetime / m_def.lifetimeGranularity);\r\n        let quantizedLifetime = lifetime / this.m_def.lifetimeGranularity;\r\n        // Use a negative lifetime so that it's possible to track which\r\n        // of the infinite lifetime particles are older.\r\n        let newExpirationTime = quantizedLifetime > 0.0 ? this.GetQuantizedTimeElapsed() + quantizedLifetime : quantizedLifetime;\r\n        if (newExpirationTime !== this.m_expirationTimeBuffer.data[index]) {\r\n            this.m_expirationTimeBuffer.data[index] = newExpirationTime;\r\n            this.m_expirationTimeBufferRequiresSorting = true;\r\n        }\r\n    }\r\n    /**\r\n     * Get the lifetime (in seconds) of a particle relative to the\r\n     * current time.  A value > 0.0f is returned if the particle is\r\n     * scheduled to be destroyed in the future, values <= 0.0f\r\n     * indicate the particle has an infinite lifetime.\r\n     */\r\n    GetParticleLifetime(index) {\r\n        b2Assert(this.ValidateParticleIndex(index));\r\n        return this.ExpirationTimeToLifetime(this.GetExpirationTimeBuffer()[index]);\r\n    }\r\n    /**\r\n     * Enable / disable destruction of particles in CreateParticle()\r\n     * when no more particles can be created due to a prior call to\r\n     * SetMaxParticleCount().  When this is enabled, the oldest\r\n     * particle is destroyed in CreateParticle() favoring the\r\n     * destruction of particles with a finite lifetime over\r\n     * particles with infinite lifetimes. This feature is enabled by\r\n     * default when particle lifetimes are tracked.  Explicitly\r\n     * enabling this feature using this function enables particle\r\n     * lifetime tracking.\r\n     */\r\n    SetDestructionByAge(enable) {\r\n        if (enable) {\r\n            this.GetExpirationTimeBuffer();\r\n        }\r\n        this.m_def.destroyByAge = enable;\r\n    }\r\n    /**\r\n     * Get whether the oldest particle will be destroyed in\r\n     * CreateParticle() when the maximum number of particles are\r\n     * present in the system.\r\n     */\r\n    GetDestructionByAge() {\r\n        return this.m_def.destroyByAge;\r\n    }\r\n    /**\r\n     * Get the array of particle expiration times indexed by\r\n     * particle index.\r\n     *\r\n     * GetParticleCount() items are in the returned array.\r\n     */\r\n    GetExpirationTimeBuffer() {\r\n        this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\r\n        return this.m_expirationTimeBuffer.data;\r\n    }\r\n    /**\r\n     * Convert a expiration time value in returned by\r\n     * GetExpirationTimeBuffer() to a time in seconds relative to\r\n     * the current simulation time.\r\n     */\r\n    ExpirationTimeToLifetime(expirationTime) {\r\n        return (expirationTime > 0 ?\r\n            expirationTime - this.GetQuantizedTimeElapsed() :\r\n            expirationTime) * this.m_def.lifetimeGranularity;\r\n    }\r\n    /**\r\n     * Get the array of particle indices ordered by reverse\r\n     * lifetime. The oldest particle indexes are at the end of the\r\n     * array with the newest at the start.  Particles with infinite\r\n     * lifetimes (i.e expiration times less than or equal to 0) are\r\n     * placed at the start of the array.\r\n     * ExpirationTimeToLifetime(GetExpirationTimeBuffer()[index]) is\r\n     * equivalent to GetParticleLifetime(index).\r\n     *\r\n     * GetParticleCount() items are in the returned array.\r\n     */\r\n    GetIndexByExpirationTimeBuffer() {\r\n        // If particles are present, initialize / reinitialize the lifetime buffer.\r\n        if (this.GetParticleCount()) {\r\n            this.SetParticleLifetime(0, this.GetParticleLifetime(0));\r\n        }\r\n        else {\r\n            this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\r\n        }\r\n        return this.m_indexByExpirationTimeBuffer.data;\r\n    }\r\n    /**\r\n     * Apply an impulse to one particle. This immediately modifies\r\n     * the velocity. Similar to b2Body::ApplyLinearImpulse.\r\n     *\r\n     * @param index the particle that will be modified.\r\n     * @param impulse impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n     */\r\n    ParticleApplyLinearImpulse(index, impulse) {\r\n        this.ApplyLinearImpulse(index, index + 1, impulse);\r\n    }\r\n    /**\r\n     * Apply an impulse to all particles between 'firstIndex' and\r\n     * 'lastIndex'. This immediately modifies the velocity. Note\r\n     * that the impulse is applied to the total mass of all\r\n     * particles. So, calling ParticleApplyLinearImpulse(0, impulse)\r\n     * and ParticleApplyLinearImpulse(1, impulse) will impart twice\r\n     * as much velocity as calling just ApplyLinearImpulse(0, 1,\r\n     * impulse).\r\n     *\r\n     * @param firstIndex the first particle to be modified.\r\n     * @param lastIndex the last particle to be modified.\r\n     * @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n     */\r\n    ApplyLinearImpulse(firstIndex, lastIndex, impulse) {\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let numParticles = (lastIndex - firstIndex);\r\n        let totalMass = numParticles * this.GetParticleMass();\r\n        ///const b2Vec2 velocityDelta = impulse / totalMass;\r\n        let velocityDelta = impulse.Clone().SelfMul(1 / totalMass);\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            ///m_velocityBuffer.data[i] += velocityDelta;\r\n            vel_data[i].SelfAdd(velocityDelta);\r\n        }\r\n    }\r\n    static IsSignificantForce(force) {\r\n        return force.x !== 0 || force.y !== 0;\r\n    }\r\n    /**\r\n     * Apply a force to the center of a particle.\r\n     *\r\n     * @param index the particle that will be modified.\r\n     * @param force the world force vector, usually in Newtons (N).\r\n     */\r\n    ParticleApplyForce(index, force) {\r\n        if (b2ParticleSystem.IsSignificantForce(force) &&\r\n            this.ForceCanBeApplied(this.m_flagsBuffer.data[index])) {\r\n            this.PrepareForceBuffer();\r\n            ///m_forceBuffer[index] += force;\r\n            this.m_forceBuffer[index].SelfAdd(force);\r\n        }\r\n    }\r\n    /**\r\n     * Distribute a force across several particles. The particles\r\n     * must not be wall particles. Note that the force is\r\n     * distributed across all the particles, so calling this\r\n     * function for indices 0..N is not the same as calling\r\n     * ParticleApplyForce(i, force) for i in 0..N.\r\n     *\r\n     * @param firstIndex the first particle to be modified.\r\n     * @param lastIndex the last particle to be modified.\r\n     * @param force the world force vector, usually in Newtons (N).\r\n     */\r\n    ApplyForce(firstIndex, lastIndex, force) {\r\n        // Ensure we're not trying to apply force to particles that can't move,\r\n        // such as wall particles.\r\n        // #if B2_ASSERT_ENABLED\r\n        ///let flags = 0;\r\n        ///for (let i = firstIndex; i < lastIndex; i++) {\r\n        ///flags |= this.m_flagsBuffer.data[i];\r\n        ///}\r\n        ///b2Assert(this.ForceCanBeApplied(flags));\r\n        // #endif\r\n        // Early out if force does nothing (optimization).\r\n        ///const b2Vec2 distributedForce = force / (float32)(lastIndex - firstIndex);\r\n        let distributedForce = force.Clone().SelfMul(1 / (lastIndex - firstIndex));\r\n        if (b2ParticleSystem.IsSignificantForce(distributedForce)) {\r\n            this.PrepareForceBuffer();\r\n            // Distribute the force over all the particles.\r\n            for (let i = firstIndex; i < lastIndex; i++) {\r\n                ///m_forceBuffer[i] += distributedForce;\r\n                this.m_forceBuffer[i].SelfAdd(distributedForce);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get the next particle-system in the world's particle-system\r\n     * list.\r\n     */\r\n    GetNext() {\r\n        return this.m_next;\r\n    }\r\n    /**\r\n     * Query the particle system for all particles that potentially\r\n     * overlap the provided AABB.\r\n     * b2QueryCallback::ShouldQueryParticleSystem is ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param aabb the query box.\r\n     */\r\n    QueryAABB(callback, aabb) {\r\n        if (this.m_proxyBuffer.count === 0) {\r\n            return;\r\n        }\r\n        let beginProxy = 0;\r\n        let endProxy = this.m_proxyBuffer.count;\r\n        let firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x, this.m_inverseDiameter * aabb.lowerBound.y), b2ParticleSystem.Proxy.CompareProxyTag);\r\n        let lastProxy = std_upper_bound(this.m_proxyBuffer.data, firstProxy, endProxy, b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x, this.m_inverseDiameter * aabb.upperBound.y), b2ParticleSystem.Proxy.CompareTagProxy);\r\n        let pos_data = this.m_positionBuffer.data;\r\n        for (let k = firstProxy; k < lastProxy; ++k) {\r\n            let proxy = this.m_proxyBuffer.data[k];\r\n            let i = proxy.index;\r\n            let p = pos_data[i];\r\n            if (aabb.lowerBound.x < p.x && p.x < aabb.upperBound.x &&\r\n                aabb.lowerBound.y < p.y && p.y < aabb.upperBound.y) {\r\n                if (!callback.ReportParticle(this, i)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Query the particle system for all particles that potentially\r\n     * overlap the provided shape's AABB. Calls QueryAABB\r\n     * internally. b2QueryCallback::ShouldQueryParticleSystem is\r\n     * ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param shape the query shape\r\n     * @param xf the transform of the AABB\r\n     * @param childIndex\r\n     */\r\n    QueryShapeAABB(callback, shape, xf, childIndex = 0) {\r\n        let s_aabb = b2ParticleSystem.QueryShapeAABB_s_aabb;\r\n        let aabb = s_aabb;\r\n        shape.ComputeAABB(aabb, xf, childIndex);\r\n        this.QueryAABB(callback, aabb);\r\n    }\r\n    QueryPointAABB(callback, point, slop = b2_linearSlop) {\r\n        let s_aabb = b2ParticleSystem.QueryPointAABB_s_aabb;\r\n        let aabb = s_aabb;\r\n        aabb.lowerBound.Set(point.x - slop, point.y - slop);\r\n        aabb.upperBound.Set(point.x + slop, point.y + slop);\r\n        this.QueryAABB(callback, aabb);\r\n    }\r\n    /**\r\n     * Ray-cast the particle system for all particles in the path of\r\n     * the ray. Your callback controls whether you get the closest\r\n     * point, any point, or n-points. The ray-cast ignores particles\r\n     * that contain the starting point.\r\n     * b2RayCastCallback::ShouldQueryParticleSystem is ignored.\r\n     *\r\n     * @param callback a user implemented callback class.\r\n     * @param point1 the ray starting point\r\n     * @param point2 the ray ending point\r\n     */\r\n    RayCast(callback, point1, point2) {\r\n        let s_aabb = b2ParticleSystem.RayCast_s_aabb;\r\n        let s_p = b2ParticleSystem.RayCast_s_p;\r\n        let s_v = b2ParticleSystem.RayCast_s_v;\r\n        let s_n = b2ParticleSystem.RayCast_s_n;\r\n        let s_point = b2ParticleSystem.RayCast_s_point;\r\n        if (this.m_proxyBuffer.count === 0) {\r\n            return;\r\n        }\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let aabb = s_aabb;\r\n        b2Vec2.MinV(point1, point2, aabb.lowerBound);\r\n        b2Vec2.MaxV(point1, point2, aabb.upperBound);\r\n        let fraction = 1;\r\n        // solving the following equation:\r\n        // ((1-t)*point1+t*point2-position)^2=diameter^2\r\n        // where t is a potential fraction\r\n        ///b2Vec2 v = point2 - point1;\r\n        let v = b2Vec2.SubVV(point2, point1, s_v);\r\n        let v2 = b2Vec2.DotVV(v, v);\r\n        let enumerator = this.GetInsideBoundsEnumerator(aabb);\r\n        let i;\r\n        while ((i = enumerator.GetNext()) >= 0) {\r\n            ///b2Vec2 p = point1 - m_positionBuffer.data[i];\r\n            let p = b2Vec2.SubVV(point1, pos_data[i], s_p);\r\n            let pv = b2Vec2.DotVV(p, v);\r\n            let p2 = b2Vec2.DotVV(p, p);\r\n            let determinant = pv * pv - v2 * (p2 - this.m_squaredDiameter);\r\n            if (determinant >= 0) {\r\n                let sqrtDeterminant = b2Sqrt(determinant);\r\n                // find a solution between 0 and fraction\r\n                let t = (-pv - sqrtDeterminant) / v2;\r\n                if (t > fraction) {\r\n                    continue;\r\n                }\r\n                if (t < 0) {\r\n                    t = (-pv + sqrtDeterminant) / v2;\r\n                    if (t < 0 || t > fraction) {\r\n                        continue;\r\n                    }\r\n                }\r\n                ///b2Vec2 n = p + t * v;\r\n                let n = b2Vec2.AddVMulSV(p, t, v, s_n);\r\n                n.Normalize();\r\n                ///float32 f = callback.ReportParticle(this, i, point1 + t * v, n, t);\r\n                let f = callback.ReportParticle(this, i, b2Vec2.AddVMulSV(point1, t, v, s_point), n, t);\r\n                fraction = b2Min(fraction, f);\r\n                if (fraction <= 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Compute the axis-aligned bounding box for all particles\r\n     * contained within this particle system.\r\n     * @param aabb Returns the axis-aligned bounding box of the system.\r\n     */\r\n    ComputeAABB(aabb) {\r\n        let particleCount = this.GetParticleCount();\r\n        b2Assert(aabb !== null);\r\n        aabb.lowerBound.x = +b2_maxFloat;\r\n        aabb.lowerBound.y = +b2_maxFloat;\r\n        aabb.upperBound.x = -b2_maxFloat;\r\n        aabb.upperBound.y = -b2_maxFloat;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        for (let i = 0; i < particleCount; i++) {\r\n            let p = pos_data[i];\r\n            b2Vec2.MinV(aabb.lowerBound, p, aabb.lowerBound);\r\n            b2Vec2.MaxV(aabb.upperBound, p, aabb.upperBound);\r\n        }\r\n        aabb.lowerBound.x -= this.m_particleDiameter;\r\n        aabb.lowerBound.y -= this.m_particleDiameter;\r\n        aabb.upperBound.x += this.m_particleDiameter;\r\n        aabb.upperBound.y += this.m_particleDiameter;\r\n    }\r\n    FreeBuffer(b, capacity) {\r\n        if (b === null) {\r\n            return;\r\n        }\r\n        b.length = 0;\r\n    }\r\n    FreeUserOverridableBuffer(b) {\r\n        if (b.userSuppliedCapacity === 0) {\r\n            this.FreeBuffer(b.data, this.m_internalAllocatedCapacity);\r\n        }\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer3(oldBuffer, oldCapacity, newCapacity) {\r\n        b2Assert(newCapacity > oldCapacity);\r\n        let newBuffer = (oldBuffer) ? oldBuffer.slice() : [];\r\n        newBuffer.length = newCapacity;\r\n        return newBuffer;\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer5(buffer, userSuppliedCapacity, oldCapacity, newCapacity, deferred) {\r\n        b2Assert(newCapacity > oldCapacity);\r\n        // A 'deferred' buffer is reallocated only if it is not NULL.\r\n        // If 'userSuppliedCapacity' is not zero, buffer is user supplied and must\r\n        // be kept.\r\n        b2Assert(!userSuppliedCapacity || newCapacity <= userSuppliedCapacity);\r\n        if ((!deferred || buffer) && !userSuppliedCapacity) {\r\n            buffer = this.ReallocateBuffer3(buffer, oldCapacity, newCapacity);\r\n        }\r\n        return buffer;\r\n    }\r\n    /**\r\n     * Reallocate a buffer\r\n     */\r\n    ReallocateBuffer4(buffer, oldCapacity, newCapacity, deferred) {\r\n        b2Assert(newCapacity > oldCapacity);\r\n        return this.ReallocateBuffer5(buffer.data, buffer.userSuppliedCapacity, oldCapacity, newCapacity, deferred);\r\n    }\r\n    RequestBuffer(buffer) {\r\n        if (!buffer) {\r\n            if (this.m_internalAllocatedCapacity === 0) {\r\n                this.ReallocateInternalAllocatedBuffers(b2_minParticleSystemBufferCapacity);\r\n            }\r\n            buffer = [];\r\n            buffer.length = this.m_internalAllocatedCapacity;\r\n        }\r\n        return buffer;\r\n    }\r\n    /**\r\n     * Reallocate the handle / index map and schedule the allocation\r\n     * of a new pool for handle allocation.\r\n     */\r\n    ReallocateHandleBuffers(newCapacity) {\r\n        b2Assert(newCapacity > this.m_internalAllocatedCapacity);\r\n        // Reallocate a new handle / index map buffer, copying old handle pointers\r\n        // is fine since they're kept around.\r\n        this.m_handleIndexBuffer.data = this.ReallocateBuffer4(this.m_handleIndexBuffer, this.m_internalAllocatedCapacity, newCapacity, true);\r\n        // Set the size of the next handle allocation.\r\n        ///this.m_handleAllocator.SetItemsPerSlab(newCapacity - this.m_internalAllocatedCapacity);\r\n    }\r\n    ReallocateInternalAllocatedBuffers(capacity) {\r\n        function LimitCapacity(capacity, maxCount) {\r\n            return maxCount && capacity > maxCount ? maxCount : capacity;\r\n        }\r\n        // Don't increase capacity beyond the smallest user-supplied buffer size.\r\n        capacity = LimitCapacity(capacity, this.m_def.maxCount);\r\n        capacity = LimitCapacity(capacity, this.m_flagsBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_positionBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_velocityBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_colorBuffer.userSuppliedCapacity);\r\n        capacity = LimitCapacity(capacity, this.m_userDataBuffer.userSuppliedCapacity);\r\n        if (this.m_internalAllocatedCapacity < capacity) {\r\n            this.ReallocateHandleBuffers(capacity);\r\n            this.m_flagsBuffer.data = this.ReallocateBuffer4(this.m_flagsBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            // Conditionally defer these as they are optional if the feature is\r\n            // not enabled.\r\n            let stuck = this.m_stuckThreshold > 0;\r\n            this.m_lastBodyContactStepBuffer.data = this.ReallocateBuffer4(this.m_lastBodyContactStepBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_bodyContactCountBuffer.data = this.ReallocateBuffer4(this.m_bodyContactCountBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_consecutiveContactStepsBuffer.data = this.ReallocateBuffer4(this.m_consecutiveContactStepsBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n            this.m_positionBuffer.data = this.ReallocateBuffer4(this.m_positionBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_velocityBuffer.data = this.ReallocateBuffer4(this.m_velocityBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_forceBuffer = this.ReallocateBuffer5(this.m_forceBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_weightBuffer = this.ReallocateBuffer5(this.m_weightBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_staticPressureBuffer = this.ReallocateBuffer5(this.m_staticPressureBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_accumulationBuffer = this.ReallocateBuffer5(this.m_accumulationBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_accumulation2Buffer = this.ReallocateBuffer5(this.m_accumulation2Buffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_depthBuffer = this.ReallocateBuffer5(this.m_depthBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_colorBuffer.data = this.ReallocateBuffer4(this.m_colorBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_groupBuffer = this.ReallocateBuffer5(this.m_groupBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_userDataBuffer.data = this.ReallocateBuffer4(this.m_userDataBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_expirationTimeBuffer.data = this.ReallocateBuffer4(this.m_expirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n            this.m_indexByExpirationTimeBuffer.data = this.ReallocateBuffer4(this.m_indexByExpirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n            this.m_internalAllocatedCapacity = capacity;\r\n        }\r\n    }\r\n    CreateParticleForGroup(groupDef, xf, p) {\r\n        let particleDef = new b2ParticleDef();\r\n        particleDef.flags = groupDef.flags;\r\n        ///particleDef.position = b2Mul(xf, p);\r\n        b2Transform.MulXV(xf, p, particleDef.position);\r\n        ///particleDef.velocity =\r\n        ///  groupDef.linearVelocity +\r\n        ///  b2Cross(groupDef.angularVelocity,\r\n        ///      particleDef.position - groupDef.position);\r\n        b2Vec2.AddVV(groupDef.linearVelocity, b2Vec2.CrossSV(groupDef.angularVelocity, b2Vec2.SubVV(particleDef.position, groupDef.position, b2Vec2.s_t0), b2Vec2.s_t0), particleDef.velocity);\r\n        particleDef.color.Copy(groupDef.color);\r\n        particleDef.lifetime = groupDef.lifetime;\r\n        particleDef.userData = groupDef.userData;\r\n        this.CreateParticle(particleDef);\r\n    }\r\n    CreateParticlesStrokeShapeForGroup(shape, groupDef, xf) {\r\n        let s_edge = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge;\r\n        let s_d = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d;\r\n        let s_p = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p;\r\n        let stride = groupDef.stride;\r\n        if (stride === 0) {\r\n            stride = this.GetParticleStride();\r\n        }\r\n        let positionOnEdge = 0;\r\n        let childCount = shape.GetChildCount();\r\n        for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n            let edge = null;\r\n            if (shape.GetType() === b2ShapeType.e_edgeShape) {\r\n                edge = shape;\r\n            }\r\n            else {\r\n                b2Assert(shape.GetType() === b2ShapeType.e_chainShape);\r\n                edge = s_edge;\r\n                shape.GetChildEdge(edge, childIndex);\r\n            }\r\n            let d = b2Vec2.SubVV(edge.m_vertex2, edge.m_vertex1, s_d);\r\n            let edgeLength = d.Length();\r\n            while (positionOnEdge < edgeLength) {\r\n                ///b2Vec2 p = edge.m_vertex1 + positionOnEdge / edgeLength * d;\r\n                let p = b2Vec2.AddVMulSV(edge.m_vertex1, positionOnEdge / edgeLength, d, s_p);\r\n                this.CreateParticleForGroup(groupDef, xf, p);\r\n                positionOnEdge += stride;\r\n            }\r\n            positionOnEdge -= edgeLength;\r\n        }\r\n    }\r\n    CreateParticlesFillShapeForGroup(shape, groupDef, xf) {\r\n        let s_aabb = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb;\r\n        let s_p = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_p;\r\n        let stride = groupDef.stride;\r\n        if (stride === 0) {\r\n            stride = this.GetParticleStride();\r\n        }\r\n        ///b2Transform identity;\r\n        /// identity.SetIdentity();\r\n        let identity = b2Transform.IDENTITY;\r\n        let aabb = s_aabb;\r\n        b2Assert(shape.GetChildCount() === 1);\r\n        shape.ComputeAABB(aabb, identity, 0);\r\n        for (let y = Math.floor(aabb.lowerBound.y / stride) * stride; y < aabb.upperBound.y; y += stride) {\r\n            for (let x = Math.floor(aabb.lowerBound.x / stride) * stride; x < aabb.upperBound.x; x += stride) {\r\n                let p = s_p.Set(x, y);\r\n                if (shape.TestPoint(identity, p)) {\r\n                    this.CreateParticleForGroup(groupDef, xf, p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    CreateParticlesWithShapeForGroup(shape, groupDef, xf) {\r\n        switch (shape.GetType()) {\r\n            case b2ShapeType.e_edgeShape:\r\n            case b2ShapeType.e_chainShape:\r\n                this.CreateParticlesStrokeShapeForGroup(shape, groupDef, xf);\r\n                break;\r\n            case b2ShapeType.e_polygonShape:\r\n            case b2ShapeType.e_circleShape:\r\n                this.CreateParticlesFillShapeForGroup(shape, groupDef, xf);\r\n                break;\r\n            default:\r\n                b2Assert(false);\r\n                break;\r\n        }\r\n    }\r\n    CreateParticlesWithShapesForGroup(shapes, shapeCount, groupDef, xf) {\r\n        let compositeShape = new b2ParticleSystem.CompositeShape(shapes, shapeCount);\r\n        this.CreateParticlesFillShapeForGroup(compositeShape, groupDef, xf);\r\n    }\r\n    CloneParticle(oldIndex, group) {\r\n        let def = new b2ParticleDef();\r\n        def.flags = this.m_flagsBuffer.data[oldIndex];\r\n        def.position.Copy(this.m_positionBuffer.data[oldIndex]);\r\n        def.velocity.Copy(this.m_velocityBuffer.data[oldIndex]);\r\n        if (this.m_colorBuffer.data) {\r\n            def.color.Copy(this.m_colorBuffer.data[oldIndex]);\r\n        }\r\n        if (this.m_userDataBuffer.data) {\r\n            def.userData = this.m_userDataBuffer.data[oldIndex];\r\n        }\r\n        def.group = group;\r\n        let newIndex = this.CreateParticle(def);\r\n        if (this.m_handleIndexBuffer.data) {\r\n            let handle = this.m_handleIndexBuffer.data[oldIndex];\r\n            if (handle)\r\n                handle.SetIndex(newIndex);\r\n            this.m_handleIndexBuffer.data[newIndex] = handle;\r\n            this.m_handleIndexBuffer.data[oldIndex] = null;\r\n        }\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            this.m_lastBodyContactStepBuffer.data[newIndex] =\r\n                this.m_lastBodyContactStepBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            this.m_bodyContactCountBuffer.data[newIndex] =\r\n                this.m_bodyContactCountBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            this.m_consecutiveContactStepsBuffer.data[newIndex] =\r\n                this.m_consecutiveContactStepsBuffer.data[oldIndex];\r\n        }\r\n        if (this.m_hasForce) {\r\n            this.m_forceBuffer[newIndex].Copy(this.m_forceBuffer[oldIndex]);\r\n        }\r\n        if (this.m_staticPressureBuffer) {\r\n            this.m_staticPressureBuffer[newIndex] = this.m_staticPressureBuffer[oldIndex];\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            this.m_depthBuffer[newIndex] = this.m_depthBuffer[oldIndex];\r\n        }\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            this.m_expirationTimeBuffer.data[newIndex] =\r\n                this.m_expirationTimeBuffer.data[oldIndex];\r\n        }\r\n        return newIndex;\r\n    }\r\n    DestroyParticlesInGroup(group, callDestructionListener = false) {\r\n        for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n            this.DestroyParticle(i, callDestructionListener);\r\n        }\r\n    }\r\n    DestroyParticleGroup(group) {\r\n        b2Assert(this.m_groupCount > 0);\r\n        b2Assert(group !== null);\r\n        if (this.m_world.m_destructionListener) {\r\n            this.m_world.m_destructionListener.SayGoodbyeParticleGroup(group);\r\n        }\r\n        this.SetGroupFlags(group, 0);\r\n        for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n            this.m_groupBuffer[i] = null;\r\n        }\r\n        if (group.m_prev) {\r\n            group.m_prev.m_next = group.m_next;\r\n        }\r\n        if (group.m_next) {\r\n            group.m_next.m_prev = group.m_prev;\r\n        }\r\n        if (group === this.m_groupList) {\r\n            this.m_groupList = group.m_next;\r\n        }\r\n        --this.m_groupCount;\r\n    }\r\n    static ParticleCanBeConnected(flags, group) {\r\n        return ((flags & (b2ParticleFlag.b2_wallParticle | b2ParticleFlag.b2_springParticle | b2ParticleFlag.b2_elasticParticle)) !== 0) ||\r\n            ((group !== null) && ((group.GetGroupFlags() & b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0));\r\n    }\r\n    UpdatePairsAndTriads(firstIndex, lastIndex, filter) {\r\n        let s_dab = b2ParticleSystem.UpdatePairsAndTriads_s_dab;\r\n        let s_dbc = b2ParticleSystem.UpdatePairsAndTriads_s_dbc;\r\n        let s_dca = b2ParticleSystem.UpdatePairsAndTriads_s_dca;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        // Create pairs or triads.\r\n        // All particles in each pair/triad should satisfy the following:\r\n        // * firstIndex <= index < lastIndex\r\n        // * don't have b2_zombieParticle\r\n        // * ParticleCanBeConnected returns true\r\n        // * ShouldCreatePair/ShouldCreateTriad returns true\r\n        // Any particles in each pair/triad should satisfy the following:\r\n        // * filter.IsNeeded returns true\r\n        // * have one of k_pairFlags/k_triadsFlags\r\n        b2Assert(firstIndex <= lastIndex);\r\n        let particleFlags = 0;\r\n        for (let i = firstIndex; i < lastIndex; i++) {\r\n            particleFlags |= this.m_flagsBuffer.data[i];\r\n        }\r\n        if (particleFlags & b2ParticleSystem.k_pairFlags) {\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                let contact = this.m_contactBuffer.data[k];\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                let af = this.m_flagsBuffer.data[a];\r\n                let bf = this.m_flagsBuffer.data[b];\r\n                let groupA = this.m_groupBuffer[a];\r\n                let groupB = this.m_groupBuffer[b];\r\n                if (a >= firstIndex && a < lastIndex &&\r\n                    b >= firstIndex && b < lastIndex &&\r\n                    !((af | bf) & b2ParticleFlag.b2_zombieParticle) &&\r\n                    ((af | bf) & b2ParticleSystem.k_pairFlags) &&\r\n                    (filter.IsNecessary(a) || filter.IsNecessary(b)) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(af, groupA) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(bf, groupB) &&\r\n                    filter.ShouldCreatePair(a, b)) {\r\n                    ///b2ParticlePair& pair = m_pairBuffer.Append();\r\n                    let pair = this.m_pairBuffer.data[this.m_pairBuffer.Append()];\r\n                    pair.indexA = a;\r\n                    pair.indexB = b;\r\n                    pair.flags = contact.flags;\r\n                    pair.strength = b2Min(groupA ? groupA.m_strength : 1, groupB ? groupB.m_strength : 1);\r\n                    ///pair.distance = b2Distance(pos_data[a], pos_data[b]); // TODO: this was wrong!\r\n                    pair.distance = b2Vec2.DistanceVV(pos_data[a], pos_data[b]);\r\n                }\r\n                ///std::stable_sort(m_pairBuffer.Begin(), m_pairBuffer.End(), ComparePairIndices);\r\n                std_stable_sort(this.m_pairBuffer.data, 0, this.m_pairBuffer.count, b2ParticleSystem.ComparePairIndices);\r\n                ///m_pairBuffer.Unique(MatchPairIndices);\r\n                this.m_pairBuffer.Unique(b2ParticleSystem.MatchPairIndices);\r\n            }\r\n        }\r\n        if (particleFlags & b2ParticleSystem.k_triadFlags) {\r\n            let diagram = new b2VoronoiDiagram(lastIndex - firstIndex);\r\n            ///let necessary_count = 0;\r\n            for (let i = firstIndex; i < lastIndex; i++) {\r\n                let flags = this.m_flagsBuffer.data[i];\r\n                let group = this.m_groupBuffer[i];\r\n                if (!(flags & b2ParticleFlag.b2_zombieParticle) &&\r\n                    b2ParticleSystem.ParticleCanBeConnected(flags, group)) {\r\n                    ///if (filter.IsNecessary(i)) {\r\n                    ///++necessary_count;\r\n                    ///}\r\n                    diagram.AddGenerator(pos_data[i], i, filter.IsNecessary(i));\r\n                }\r\n            }\r\n            ///if (necessary_count === 0) {\r\n            /////debugger;\r\n            ///for (let i = firstIndex; i < lastIndex; i++) {\r\n            ///  filter.IsNecessary(i);\r\n            ///}\r\n            ///}\r\n            let stride = this.GetParticleStride();\r\n            diagram.Generate(stride / 2, stride * 2);\r\n            const system = this;\r\n            let callback = /*UpdateTriadsCallback*/ (a, b, c) => {\r\n                let af = system.m_flagsBuffer.data[a];\r\n                let bf = system.m_flagsBuffer.data[b];\r\n                let cf = system.m_flagsBuffer.data[c];\r\n                if (((af | bf | cf) & b2ParticleSystem.k_triadFlags) &&\r\n                    filter.ShouldCreateTriad(a, b, c)) {\r\n                    let pa = pos_data[a];\r\n                    let pb = pos_data[b];\r\n                    let pc = pos_data[c];\r\n                    let dab = b2Vec2.SubVV(pa, pb, s_dab);\r\n                    let dbc = b2Vec2.SubVV(pb, pc, s_dbc);\r\n                    let dca = b2Vec2.SubVV(pc, pa, s_dca);\r\n                    let maxDistanceSquared = b2_maxTriadDistanceSquared * system.m_squaredDiameter;\r\n                    if (b2Vec2.DotVV(dab, dab) > maxDistanceSquared ||\r\n                        b2Vec2.DotVV(dbc, dbc) > maxDistanceSquared ||\r\n                        b2Vec2.DotVV(dca, dca) > maxDistanceSquared) {\r\n                        return;\r\n                    }\r\n                    let groupA = system.m_groupBuffer[a];\r\n                    let groupB = system.m_groupBuffer[b];\r\n                    let groupC = system.m_groupBuffer[c];\r\n                    ///b2ParticleTriad& triad = m_system.m_triadBuffer.Append();\r\n                    let triad = system.m_triadBuffer.data[system.m_triadBuffer.Append()];\r\n                    triad.indexA = a;\r\n                    triad.indexB = b;\r\n                    triad.indexC = c;\r\n                    triad.flags = af | bf | cf;\r\n                    triad.strength = b2Min(b2Min(groupA ? groupA.m_strength : 1, groupB ? groupB.m_strength : 1), groupC ? groupC.m_strength : 1);\r\n                    ///let midPoint = b2Vec2.MulSV(1.0 / 3.0, b2Vec2.AddVV(pa, b2Vec2.AddVV(pb, pc, new b2Vec2()), new b2Vec2()), new b2Vec2());\r\n                    let midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\r\n                    let midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\r\n                    ///triad.pa = b2Vec2.SubVV(pa, midPoint, new b2Vec2());\r\n                    triad.pa.x = pa.x - midPoint_x;\r\n                    triad.pa.y = pa.y - midPoint_y;\r\n                    ///triad.pb = b2Vec2.SubVV(pb, midPoint, new b2Vec2());\r\n                    triad.pb.x = pb.x - midPoint_x;\r\n                    triad.pb.y = pb.y - midPoint_y;\r\n                    ///triad.pc = b2Vec2.SubVV(pc, midPoint, new b2Vec2());\r\n                    triad.pc.x = pc.x - midPoint_x;\r\n                    triad.pc.y = pc.y - midPoint_y;\r\n                    triad.ka = -b2Vec2.DotVV(dca, dab);\r\n                    triad.kb = -b2Vec2.DotVV(dab, dbc);\r\n                    triad.kc = -b2Vec2.DotVV(dbc, dca);\r\n                    triad.s = b2Vec2.CrossVV(pa, pb) + b2Vec2.CrossVV(pb, pc) + b2Vec2.CrossVV(pc, pa);\r\n                }\r\n            };\r\n            diagram.GetNodes(callback);\r\n            ///std::stable_sort(m_triadBuffer.Begin(), m_triadBuffer.End(), CompareTriadIndices);\r\n            std_stable_sort(this.m_triadBuffer.data, 0, this.m_triadBuffer.count, b2ParticleSystem.CompareTriadIndices);\r\n            ///m_triadBuffer.Unique(MatchTriadIndices);\r\n            this.m_triadBuffer.Unique(b2ParticleSystem.MatchTriadIndices);\r\n        }\r\n    }\r\n    UpdatePairsAndTriadsWithReactiveParticles() {\r\n        let filter = new b2ParticleSystem.ReactiveFilter(this.m_flagsBuffer);\r\n        this.UpdatePairsAndTriads(0, this.m_count, filter);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_flagsBuffer.data[i] &= ~b2ParticleFlag.b2_reactiveParticle;\r\n        }\r\n        this.m_allParticleFlags &= ~b2ParticleFlag.b2_reactiveParticle;\r\n    }\r\n    static ComparePairIndices(a, b) {\r\n        let diffA = a.indexA - b.indexA;\r\n        if (diffA !== 0)\r\n            return diffA < 0;\r\n        return a.indexB < b.indexB;\r\n    }\r\n    static MatchPairIndices(a, b) {\r\n        return a.indexA === b.indexA && a.indexB === b.indexB;\r\n    }\r\n    static CompareTriadIndices(a, b) {\r\n        let diffA = a.indexA - b.indexA;\r\n        if (diffA !== 0)\r\n            return diffA < 0;\r\n        let diffB = a.indexB - b.indexB;\r\n        if (diffB !== 0)\r\n            return diffB < 0;\r\n        return a.indexC < b.indexC;\r\n    }\r\n    static MatchTriadIndices(a, b) {\r\n        return a.indexA === b.indexA && a.indexB === b.indexB && a.indexC === b.indexC;\r\n    }\r\n    static InitializeParticleLists(group, nodeBuffer) {\r\n        let bufferIndex = group.GetBufferIndex();\r\n        let particleCount = group.GetParticleCount();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            let node = nodeBuffer[i];\r\n            node.list = node;\r\n            node.next = null;\r\n            node.count = 1;\r\n            node.index = i + bufferIndex;\r\n        }\r\n    }\r\n    MergeParticleListsInContact(group, nodeBuffer) {\r\n        let bufferIndex = group.GetBufferIndex();\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            /*const b2ParticleContact&*/\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            if (!group.ContainsParticle(a) || !group.ContainsParticle(b)) {\r\n                continue;\r\n            }\r\n            let listA = nodeBuffer[a - bufferIndex].list;\r\n            let listB = nodeBuffer[b - bufferIndex].list;\r\n            if (listA === listB) {\r\n                continue;\r\n            }\r\n            // To minimize the cost of insertion, make sure listA is longer than\r\n            // listB.\r\n            if (listA.count < listB.count) {\r\n                let _tmp = listA;\r\n                listA = listB;\r\n                listB = _tmp; ///b2Swap(listA, listB);\r\n            }\r\n            b2Assert(listA.count >= listB.count);\r\n            b2ParticleSystem.MergeParticleLists(listA, listB);\r\n        }\r\n    }\r\n    static MergeParticleLists(listA, listB) {\r\n        // Insert listB between index 0 and 1 of listA\r\n        // Example:\r\n        //     listA => a1 => a2 => a3 => null\r\n        //     listB => b1 => b2 => null\r\n        // to\r\n        //     listA => listB => b1 => b2 => a1 => a2 => a3 => null\r\n        b2Assert(listA !== listB);\r\n        for (let b = listB;;) {\r\n            b.list = listA;\r\n            let nextB = b.next;\r\n            if (nextB) {\r\n                b = nextB;\r\n            }\r\n            else {\r\n                b.next = listA.next;\r\n                break;\r\n            }\r\n        }\r\n        listA.next = listB;\r\n        listA.count += listB.count;\r\n        listB.count = 0;\r\n    }\r\n    static FindLongestParticleList(group, nodeBuffer) {\r\n        let particleCount = group.GetParticleCount();\r\n        let result = nodeBuffer[0];\r\n        for (let i = 0; i < particleCount; i++) {\r\n            let node = nodeBuffer[i];\r\n            if (result.count < node.count) {\r\n                result = node;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    MergeZombieParticleListNodes(group, nodeBuffer, survivingList) {\r\n        let particleCount = group.GetParticleCount();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            let node = nodeBuffer[i];\r\n            if (node !== survivingList &&\r\n                (this.m_flagsBuffer.data[node.index] & b2ParticleFlag.b2_zombieParticle)) {\r\n                b2ParticleSystem.MergeParticleListAndNode(survivingList, node);\r\n            }\r\n        }\r\n    }\r\n    static MergeParticleListAndNode(list, node) {\r\n        // Insert node between index 0 and 1 of list\r\n        // Example:\r\n        //     list => a1 => a2 => a3 => null\r\n        //     node => null\r\n        // to\r\n        //     list => node => a1 => a2 => a3 => null\r\n        b2Assert(node !== list);\r\n        b2Assert(node.list === node);\r\n        b2Assert(node.count === 1);\r\n        node.list = list;\r\n        node.next = list.next;\r\n        list.next = node;\r\n        list.count++;\r\n        node.count = 0;\r\n    }\r\n    CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList) {\r\n        let particleCount = group.GetParticleCount();\r\n        let def = new b2ParticleGroupDef();\r\n        def.groupFlags = group.GetGroupFlags();\r\n        def.userData = group.GetUserData();\r\n        for (let i = 0; i < particleCount; i++) {\r\n            let list = nodeBuffer[i];\r\n            if (!list.count || list === survivingList) {\r\n                continue;\r\n            }\r\n            b2Assert(list.list === list);\r\n            let newGroup = this.CreateParticleGroup(def);\r\n            for (let node = list; node; node = node.next) {\r\n                let oldIndex = node.index;\r\n                let flags = this.m_flagsBuffer.data[oldIndex];\r\n                b2Assert(!(flags & b2ParticleFlag.b2_zombieParticle));\r\n                let newIndex = this.CloneParticle(oldIndex, newGroup);\r\n                this.m_flagsBuffer.data[oldIndex] |= b2ParticleFlag.b2_zombieParticle;\r\n                node.index = newIndex;\r\n            }\r\n        }\r\n    }\r\n    UpdatePairsAndTriadsWithParticleList(group, nodeBuffer) {\r\n        let bufferIndex = group.GetBufferIndex();\r\n        // Update indices in pairs and triads. If an index belongs to the group,\r\n        // replace it with the corresponding value in nodeBuffer.\r\n        // Note that nodeBuffer is allocated only for the group and the index should\r\n        // be shifted by bufferIndex.\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            let pair = this.m_pairBuffer.data[k];\r\n            let a = pair.indexA;\r\n            let b = pair.indexB;\r\n            if (group.ContainsParticle(a)) {\r\n                pair.indexA = nodeBuffer[a - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(b)) {\r\n                pair.indexB = nodeBuffer[b - bufferIndex].index;\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            let triad = this.m_triadBuffer.data[k];\r\n            let a = triad.indexA;\r\n            let b = triad.indexB;\r\n            let c = triad.indexC;\r\n            if (group.ContainsParticle(a)) {\r\n                triad.indexA = nodeBuffer[a - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(b)) {\r\n                triad.indexB = nodeBuffer[b - bufferIndex].index;\r\n            }\r\n            if (group.ContainsParticle(c)) {\r\n                triad.indexC = nodeBuffer[c - bufferIndex].index;\r\n            }\r\n        }\r\n    }\r\n    ComputeDepth() {\r\n        ///b2ParticleContact* contactGroups = (b2ParticleContact*) this.m_world.m_stackAllocator.Allocate(sizeof(b2ParticleContact) * this.m_contactBuffer.GetCount());\r\n        let contactGroups = []; // TODO: static\r\n        let contactGroupsCount = 0;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let groupA = this.m_groupBuffer[a];\r\n            let groupB = this.m_groupBuffer[b];\r\n            if (groupA && groupA === groupB &&\r\n                (groupA.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth)) {\r\n                contactGroups[contactGroupsCount++] = contact;\r\n            }\r\n        }\r\n        ///b2ParticleGroup** groupsToUpdate = (b2ParticleGroup**) this.m_world.m_stackAllocator.Allocate(sizeof(b2ParticleGroup*) * this.m_groupCount);\r\n        let groupsToUpdate = []; // TODO: static\r\n        let groupsToUpdateCount = 0;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\r\n                groupsToUpdate[groupsToUpdateCount++] = group;\r\n                this.SetGroupFlags(group, group.m_groupFlags &\r\n                    ~b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\r\n                for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                    this.m_accumulationBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        // Compute sum of weight of contacts except between different groups.\r\n        for (let k = 0; k < contactGroupsCount; k++) {\r\n            let contact = contactGroups[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let w = contact.weight;\r\n            this.m_accumulationBuffer[a] += w;\r\n            this.m_accumulationBuffer[b] += w;\r\n        }\r\n        b2Assert(this.m_depthBuffer !== null);\r\n        for (let i = 0; i < groupsToUpdateCount; i++) {\r\n            let group = groupsToUpdate[i];\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                let w = this.m_accumulationBuffer[i];\r\n                this.m_depthBuffer[i] = w < 0.8 ? 0 : b2_maxFloat;\r\n            }\r\n        }\r\n        // The number of iterations is equal to particle number from the deepest\r\n        // particle to the nearest surface particle, and in general it is smaller\r\n        // than sqrt of total particle number.\r\n        ///int32 iterationCount = (int32)b2Sqrt((float)m_count);\r\n        let iterationCount = b2Sqrt(this.m_count) >> 0;\r\n        for (let t = 0; t < iterationCount; t++) {\r\n            let updated = false;\r\n            for (let k = 0; k < contactGroupsCount; k++) {\r\n                let contact = contactGroups[k];\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                let r = 1 - contact.weight;\r\n                ///float32& ap0 = m_depthBuffer[a];\r\n                let ap0 = this.m_depthBuffer[a];\r\n                ///float32& bp0 = m_depthBuffer[b];\r\n                let bp0 = this.m_depthBuffer[b];\r\n                let ap1 = bp0 + r;\r\n                let bp1 = ap0 + r;\r\n                if (ap0 > ap1) {\r\n                    ///ap0 = ap1;\r\n                    this.m_depthBuffer[a] = ap1;\r\n                    updated = true;\r\n                }\r\n                if (bp0 > bp1) {\r\n                    ///bp0 = bp1;\r\n                    this.m_depthBuffer[b] = bp1;\r\n                    updated = true;\r\n                }\r\n            }\r\n            if (!updated) {\r\n                break;\r\n            }\r\n        }\r\n        for (let i = 0; i < groupsToUpdateCount; i++) {\r\n            let group = groupsToUpdate[i];\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                if (this.m_depthBuffer[i] < b2_maxFloat) {\r\n                    this.m_depthBuffer[i] *= this.m_particleDiameter;\r\n                }\r\n                else {\r\n                    this.m_depthBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        ///this.m_world.m_stackAllocator.Free(groupsToUpdate);\r\n        ///this.m_world.m_stackAllocator.Free(contactGroups);\r\n    }\r\n    GetInsideBoundsEnumerator(aabb) {\r\n        let lowerTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x - 1, this.m_inverseDiameter * aabb.lowerBound.y - 1);\r\n        let upperTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x + 1, this.m_inverseDiameter * aabb.upperBound.y + 1);\r\n        ///const Proxy* beginProxy = m_proxyBuffer.Begin();\r\n        let beginProxy = 0;\r\n        ///const Proxy* endProxy = m_proxyBuffer.End();\r\n        let endProxy = this.m_proxyBuffer.count;\r\n        ///const Proxy* firstProxy = std::lower_bound(beginProxy, endProxy, lowerTag);\r\n        let firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, lowerTag, b2ParticleSystem.Proxy.CompareProxyTag);\r\n        ///const Proxy* lastProxy = std::upper_bound(firstProxy, endProxy, upperTag);\r\n        let lastProxy = std_upper_bound(this.m_proxyBuffer.data, beginProxy, endProxy, upperTag, b2ParticleSystem.Proxy.CompareTagProxy);\r\n        b2Assert(beginProxy <= firstProxy);\r\n        b2Assert(firstProxy <= lastProxy);\r\n        b2Assert(lastProxy <= endProxy);\r\n        return new b2ParticleSystem.InsideBoundsEnumerator(this, lowerTag, upperTag, firstProxy, lastProxy);\r\n    }\r\n    UpdateAllParticleFlags() {\r\n        this.m_allParticleFlags = 0;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_allParticleFlags |= this.m_flagsBuffer.data[i];\r\n        }\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n    }\r\n    UpdateAllGroupFlags() {\r\n        this.m_allGroupFlags = 0;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            this.m_allGroupFlags |= group.m_groupFlags;\r\n        }\r\n        this.m_needsUpdateAllGroupFlags = false;\r\n    }\r\n    AddContact(a, b, contacts) {\r\n        let s_d = b2ParticleSystem.AddContact_s_d;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        b2Assert(contacts === this.m_contactBuffer);\r\n        ///b2Vec2 d = m_positionBuffer.data[b] - m_positionBuffer.data[a];\r\n        let d = b2Vec2.SubVV(pos_data[b], pos_data[a], s_d);\r\n        let distBtParticlesSq = b2Vec2.DotVV(d, d);\r\n        if (distBtParticlesSq < this.m_squaredDiameter) {\r\n            let invD = b2InvSqrt(distBtParticlesSq);\r\n            if (!isFinite(invD)) {\r\n                invD = 1.98177537e+019;\r\n            }\r\n            ///b2ParticleContact& contact = contacts.Append();\r\n            let contact = this.m_contactBuffer.data[this.m_contactBuffer.Append()];\r\n            contact.indexA = a;\r\n            contact.indexB = b;\r\n            contact.flags = this.m_flagsBuffer.data[a] | this.m_flagsBuffer.data[b];\r\n            contact.weight = 1 - distBtParticlesSq * invD * this.m_inverseDiameter;\r\n            ///contact.SetNormal(invD * d);\r\n            b2Vec2.MulSV(invD, d, contact.normal);\r\n        }\r\n    }\r\n    FindContacts_Reference(contacts) {\r\n        b2Assert(contacts === this.m_contactBuffer);\r\n        let beginProxy = 0;\r\n        let endProxy = this.m_proxyBuffer.count;\r\n        this.m_contactBuffer.count = 0;\r\n        for (let a = beginProxy, c = beginProxy; a < endProxy; a++) {\r\n            let rightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 0);\r\n            for (let b = a + 1; b < endProxy; b++) {\r\n                if (rightTag < this.m_proxyBuffer.data[b].tag)\r\n                    break;\r\n                this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\r\n            }\r\n            let bottomLeftTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, -1, 1);\r\n            for (; c < endProxy; c++) {\r\n                if (bottomLeftTag <= this.m_proxyBuffer.data[c].tag)\r\n                    break;\r\n            }\r\n            let bottomRightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 1);\r\n            for (let b = c; b < endProxy; b++) {\r\n                if (bottomRightTag < this.m_proxyBuffer.data[b].tag)\r\n                    break;\r\n                this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\r\n            }\r\n        }\r\n    }\r\n    ///void ReorderForFindContact(FindContactInput* reordered, int alignedCount) const;\r\n    ///void GatherChecksOneParticle(const uint32 bound, const int startIndex, const int particleIndex, int* nextUncheckedIndex, b2GrowableBuffer<FindContactCheck>& checks) const;\r\n    ///void GatherChecks(b2GrowableBuffer<FindContactCheck>& checks) const;\r\n    ///void FindContacts_Simd(b2GrowableBuffer<b2ParticleContact>& contacts) const;\r\n    FindContacts(contacts) {\r\n        this.FindContacts_Reference(contacts);\r\n    }\r\n    ///static void UpdateProxyTags(const uint32* const tags, b2GrowableBuffer<Proxy>& proxies);\r\n    ///static bool ProxyBufferHasIndex(int32 index, const Proxy* const a, int count);\r\n    ///static int NumProxiesWithSameTag(const Proxy* const a, const Proxy* const b, int count);\r\n    ///static bool AreProxyBuffersTheSame(const b2GrowableBuffer<Proxy>& a, const b2GrowableBuffer<Proxy>& b);\r\n    UpdateProxies_Reference(proxies) {\r\n        b2Assert(proxies === this.m_proxyBuffer);\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let inv_diam = this.m_inverseDiameter;\r\n        for (let k = 0; k < this.m_proxyBuffer.count; ++k) {\r\n            let proxy = this.m_proxyBuffer.data[k];\r\n            let i = proxy.index;\r\n            let p = pos_data[i];\r\n            proxy.tag = b2ParticleSystem.computeTag(inv_diam * p.x, inv_diam * p.y);\r\n        }\r\n    }\r\n    ///void UpdateProxies_Simd(b2GrowableBuffer<Proxy>& proxies) const;\r\n    UpdateProxies(proxies) {\r\n        this.UpdateProxies_Reference(proxies);\r\n    }\r\n    SortProxies(proxies) {\r\n        b2Assert(proxies === this.m_proxyBuffer);\r\n        ///std::sort(proxies.Begin(), proxies.End());\r\n        std_sort(this.m_proxyBuffer.data, 0, this.m_proxyBuffer.count, b2ParticleSystem.Proxy.CompareProxyProxy);\r\n    }\r\n    FilterContacts(contacts) {\r\n        // Optionally filter the contact.\r\n        let contactFilter = this.GetParticleContactFilter();\r\n        if (contactFilter === null)\r\n            return;\r\n        /// contacts.RemoveIf(b2ParticleContactRemovePredicate(this, contactFilter));\r\n        b2Assert(contacts === this.m_contactBuffer);\r\n        const system = this;\r\n        let predicate = (contact) => {\r\n            return (contact.flags & b2ParticleFlag.b2_particleContactFilterParticle) && !contactFilter.ShouldCollideParticleParticle(system, contact.indexA, contact.indexB);\r\n        };\r\n        this.m_contactBuffer.RemoveIf(predicate);\r\n    }\r\n    NotifyContactListenerPreContact(particlePairs) {\r\n        let contactListener = this.GetParticleContactListener();\r\n        if (contactListener === null)\r\n            return;\r\n        ///particlePairs.Initialize(m_contactBuffer.Begin(), m_contactBuffer.GetCount(), GetFlagsBuffer());\r\n        particlePairs.Initialize(this.m_contactBuffer, this.m_flagsBuffer);\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    NotifyContactListenerPostContact(particlePairs) {\r\n        let contactListener = this.GetParticleContactListener();\r\n        if (contactListener === null)\r\n            return;\r\n        // Loop through all new contacts, reporting any new ones, and\r\n        // \"invalidating\" the ones that still exist.\r\n        ///const b2ParticleContact* const endContact = m_contactBuffer.End();\r\n        ///for (b2ParticleContact* contact = m_contactBuffer.Begin(); contact < endContact; ++contact)\r\n        for (let k = 0; k < this.m_contactBuffer.count; ++k) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            ///ParticlePair pair;\r\n            ///pair.first = contact.GetIndexA();\r\n            ///pair.second = contact.GetIndexB();\r\n            ///const int32 itemIndex = particlePairs.Find(pair);\r\n            let itemIndex = -1; // TODO\r\n            if (itemIndex >= 0) {\r\n                // Already touching, ignore this contact.\r\n                particlePairs.Invalidate(itemIndex);\r\n            }\r\n            else {\r\n                // Just started touching, inform the listener.\r\n                contactListener.BeginContactParticleParticle(this, contact);\r\n            }\r\n        }\r\n        // Report particles that are no longer touching.\r\n        // That is, any pairs that were not invalidated above.\r\n        ///const int32 pairCount = particlePairs.GetCount();\r\n        ///const ParticlePair* const pairs = particlePairs.GetBuffer();\r\n        ///const int8* const valid = particlePairs.GetValidBuffer();\r\n        ///for (int32 i = 0; i < pairCount; ++i)\r\n        ///{\r\n        ///  if (valid[i])\r\n        ///  {\r\n        ///    contactListener.EndContactParticleParticle(this, pairs[i].first, pairs[i].second);\r\n        ///  }\r\n        ///}\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    static b2ParticleContactIsZombie(contact) {\r\n        return (contact.flags & b2ParticleFlag.b2_zombieParticle) === b2ParticleFlag.b2_zombieParticle;\r\n    }\r\n    UpdateContacts(exceptZombie) {\r\n        this.UpdateProxies(this.m_proxyBuffer);\r\n        this.SortProxies(this.m_proxyBuffer);\r\n        ///b2ParticlePairSet particlePairs(&this.m_world.m_stackAllocator);\r\n        let particlePairs = new b2ParticleSystem.b2ParticlePairSet(); // TODO: static\r\n        this.NotifyContactListenerPreContact(particlePairs);\r\n        this.FindContacts(this.m_contactBuffer);\r\n        this.FilterContacts(this.m_contactBuffer);\r\n        this.NotifyContactListenerPostContact(particlePairs);\r\n        if (exceptZombie) {\r\n            this.m_contactBuffer.RemoveIf(b2ParticleSystem.b2ParticleContactIsZombie);\r\n        }\r\n    }\r\n    NotifyBodyContactListenerPreContact(fixtureSet) {\r\n        let contactListener = this.GetFixtureContactListener();\r\n        if (contactListener === null)\r\n            return;\r\n        ///fixtureSet.Initialize(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.GetCount(), GetFlagsBuffer());\r\n        fixtureSet.Initialize(this.m_bodyContactBuffer, this.m_flagsBuffer);\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    NotifyBodyContactListenerPostContact(fixtureSet) {\r\n        let contactListener = this.GetFixtureContactListener();\r\n        if (contactListener === null)\r\n            return;\r\n        // Loop through all new contacts, reporting any new ones, and\r\n        // \"invalidating\" the ones that still exist.\r\n        ///for (b2ParticleBodyContact* contact = m_bodyContactBuffer.Begin(); contact !== m_bodyContactBuffer.End(); ++contact)\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            b2Assert(contact !== null);\r\n            ///FixtureParticle fixtureParticleToFind;\r\n            ///fixtureParticleToFind.first = contact.fixture;\r\n            ///fixtureParticleToFind.second = contact.index;\r\n            ///const int32 index = fixtureSet.Find(fixtureParticleToFind);\r\n            let index = -1; // TODO\r\n            if (index >= 0) {\r\n                // Already touching remove this from the set.\r\n                fixtureSet.Invalidate(index);\r\n            }\r\n            else {\r\n                // Just started touching, report it!\r\n                contactListener.BeginContactFixtureParticle(this, contact);\r\n            }\r\n        }\r\n        // If the contact listener is enabled, report all fixtures that are no\r\n        // longer in contact with particles.\r\n        ///const FixtureParticle* const fixtureParticles = fixtureSet.GetBuffer();\r\n        ///const int8* const fixtureParticlesValid = fixtureSet.GetValidBuffer();\r\n        ///const int32 fixtureParticleCount = fixtureSet.GetCount();\r\n        ///for (int32 i = 0; i < fixtureParticleCount; ++i)\r\n        ///{\r\n        ///  if (fixtureParticlesValid[i])\r\n        ///  {\r\n        ///    const FixtureParticle* const fixtureParticle = &fixtureParticles[i];\r\n        ///    contactListener.EndContactFixtureParticle(fixtureParticle.first, this, fixtureParticle.second);\r\n        ///  }\r\n        ///}\r\n        throw new Error(); // TODO: notify\r\n    }\r\n    UpdateBodyContacts() {\r\n        let s_aabb = b2ParticleSystem.UpdateBodyContacts_s_aabb;\r\n        // If the particle contact listener is enabled, generate a set of\r\n        // fixture / particle contacts.\r\n        ///FixtureParticleSet fixtureSet(&m_world.m_stackAllocator);\r\n        let fixtureSet = new b2ParticleSystem.FixtureParticleSet(); // TODO: static\r\n        this.NotifyBodyContactListenerPreContact(fixtureSet);\r\n        if (this.m_stuckThreshold > 0) {\r\n            let particleCount = this.GetParticleCount();\r\n            for (let i = 0; i < particleCount; i++) {\r\n                // Detect stuck particles, see comment in\r\n                // b2ParticleSystem::DetectStuckParticle()\r\n                this.m_bodyContactCountBuffer.data[i] = 0;\r\n                if (this.m_timestamp > (this.m_lastBodyContactStepBuffer.data[i] + 1)) {\r\n                    this.m_consecutiveContactStepsBuffer.data[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        this.m_bodyContactBuffer.SetCount(0);\r\n        this.m_stuckParticleBuffer.SetCount(0);\r\n        let aabb = s_aabb;\r\n        this.ComputeAABB(aabb);\r\n        let callback = new b2ParticleSystem.UpdateBodyContactsCallback(this, this.GetFixtureContactFilter());\r\n        this.m_world.QueryAABB(callback, aabb);\r\n        if (this.m_def.strictContactCheck) {\r\n            this.RemoveSpuriousBodyContacts();\r\n        }\r\n        this.NotifyBodyContactListenerPostContact(fixtureSet);\r\n    }\r\n    Solve(step) {\r\n        let s_subStep = b2ParticleSystem.Solve_s_subStep;\r\n        if (this.m_count === 0) {\r\n            return;\r\n        }\r\n        // If particle lifetimes are enabled, destroy particles that are too old.\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            this.SolveLifetimes(step);\r\n        }\r\n        if (this.m_allParticleFlags & b2ParticleFlag.b2_zombieParticle) {\r\n            this.SolveZombie();\r\n        }\r\n        if (this.m_needsUpdateAllParticleFlags) {\r\n            this.UpdateAllParticleFlags();\r\n        }\r\n        if (this.m_needsUpdateAllGroupFlags) {\r\n            this.UpdateAllGroupFlags();\r\n        }\r\n        if (this.m_paused) {\r\n            return;\r\n        }\r\n        for (this.m_iterationIndex = 0; this.m_iterationIndex < step.particleIterations; this.m_iterationIndex++) {\r\n            ++this.m_timestamp;\r\n            let subStep = s_subStep.Copy(step);\r\n            subStep.dt /= step.particleIterations;\r\n            subStep.inv_dt *= step.particleIterations;\r\n            this.UpdateContacts(false);\r\n            this.UpdateBodyContacts();\r\n            this.ComputeWeight();\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\r\n                this.ComputeDepth();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_reactiveParticle) {\r\n                this.UpdatePairsAndTriadsWithReactiveParticles();\r\n            }\r\n            if (this.m_hasForce) {\r\n                this.SolveForce(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_viscousParticle) {\r\n                this.SolveViscous();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_repulsiveParticle) {\r\n                this.SolveRepulsive(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_powderParticle) {\r\n                this.SolvePowder(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_tensileParticle) {\r\n                this.SolveTensile(subStep);\r\n            }\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                this.SolveSolid(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_colorMixingParticle) {\r\n                this.SolveColorMixing();\r\n            }\r\n            this.SolveGravity(subStep);\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_staticPressureParticle) {\r\n                this.SolveStaticPressure(subStep);\r\n            }\r\n            this.SolvePressure(subStep);\r\n            this.SolveDamping(subStep);\r\n            if (this.m_allParticleFlags & b2ParticleSystem.k_extraDampingFlags) {\r\n                this.SolveExtraDamping();\r\n            }\r\n            // SolveElastic and SolveSpring refer the current velocities for\r\n            // numerical stability, they should be called as late as possible.\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_elasticParticle) {\r\n                this.SolveElastic(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_springParticle) {\r\n                this.SolveSpring(subStep);\r\n            }\r\n            this.LimitVelocity(subStep);\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                this.SolveRigidDamping();\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_barrierParticle) {\r\n                this.SolveBarrier(subStep);\r\n            }\r\n            // SolveCollision, SolveRigid and SolveWall should be called after\r\n            // other force functions because they may require particles to have\r\n            // specific velocities.\r\n            this.SolveCollision(subStep);\r\n            if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                this.SolveRigid(subStep);\r\n            }\r\n            if (this.m_allParticleFlags & b2ParticleFlag.b2_wallParticle) {\r\n                this.SolveWall();\r\n            }\r\n            // The particle positions can be updated only at the end of substep.\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                ///m_positionBuffer.data[i] += subStep.dt * m_velocityBuffer.data[i];\r\n                this.m_positionBuffer.data[i].SelfMulAdd(subStep.dt, this.m_velocityBuffer.data[i]);\r\n            }\r\n        }\r\n    }\r\n    SolveCollision(step) {\r\n        let s_aabb = b2ParticleSystem.SolveCollision_s_aabb;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // This function detects particles which are crossing boundary of bodies\r\n        // and modifies velocities of them so that they will move just in front of\r\n        // boundary. This function function also applies the reaction force to\r\n        // bodies as precisely as the numerical stability is kept.\r\n        let aabb = s_aabb;\r\n        aabb.lowerBound.x = +b2_maxFloat;\r\n        aabb.lowerBound.y = +b2_maxFloat;\r\n        aabb.upperBound.x = -b2_maxFloat;\r\n        aabb.upperBound.y = -b2_maxFloat;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            let v = vel_data[i];\r\n            let p1 = pos_data[i];\r\n            ///let p2 = p1 + step.dt * v;\r\n            let p2_x = p1.x + step.dt * v.x;\r\n            let p2_y = p1.y + step.dt * v.y;\r\n            ///aabb.lowerBound = b2Min(aabb.lowerBound, b2Min(p1, p2));\r\n            aabb.lowerBound.x = b2Min(aabb.lowerBound.x, b2Min(p1.x, p2_x));\r\n            aabb.lowerBound.y = b2Min(aabb.lowerBound.y, b2Min(p1.y, p2_y));\r\n            ///aabb.upperBound = b2Max(aabb.upperBound, b2Max(p1, p2));\r\n            aabb.upperBound.x = b2Max(aabb.upperBound.x, b2Max(p1.x, p2_x));\r\n            aabb.upperBound.y = b2Max(aabb.upperBound.y, b2Max(p1.y, p2_y));\r\n        }\r\n        let callback = new b2ParticleSystem.SolveCollisionCallback(this, step);\r\n        this.m_world.QueryAABB(callback, aabb);\r\n    }\r\n    LimitVelocity(step) {\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let criticalVelocitySquared = this.GetCriticalVelocitySquared(step);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            let v = vel_data[i];\r\n            let v2 = b2Vec2.DotVV(v, v);\r\n            if (v2 > criticalVelocitySquared) {\r\n                ///v *= b2Sqrt(criticalVelocitySquared / v2);\r\n                v.SelfMul(b2Sqrt(criticalVelocitySquared / v2));\r\n            }\r\n        }\r\n    }\r\n    SolveGravity(step) {\r\n        let s_gravity = b2ParticleSystem.SolveGravity_s_gravity;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        ///b2Vec2 gravity = step.dt * m_def.gravityScale * m_world.GetGravity();\r\n        let gravity = b2Vec2.MulSV(step.dt * this.m_def.gravityScale, this.m_world.GetGravity(), s_gravity);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            vel_data[i].SelfAdd(gravity);\r\n        }\r\n    }\r\n    SolveBarrier(step) {\r\n        let s_aabb = b2ParticleSystem.SolveBarrier_s_aabb;\r\n        let s_va = b2ParticleSystem.SolveBarrier_s_va;\r\n        let s_vb = b2ParticleSystem.SolveBarrier_s_vb;\r\n        let s_pba = b2ParticleSystem.SolveBarrier_s_pba;\r\n        let s_vba = b2ParticleSystem.SolveBarrier_s_vba;\r\n        let s_vc = b2ParticleSystem.SolveBarrier_s_vc;\r\n        let s_pca = b2ParticleSystem.SolveBarrier_s_pca;\r\n        let s_vca = b2ParticleSystem.SolveBarrier_s_vca;\r\n        let s_qba = b2ParticleSystem.SolveBarrier_s_qba;\r\n        let s_qca = b2ParticleSystem.SolveBarrier_s_qca;\r\n        let s_dv = b2ParticleSystem.SolveBarrier_s_dv;\r\n        let s_f = b2ParticleSystem.SolveBarrier_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // If a particle is passing between paired barrier particles,\r\n        // its velocity will be decelerated to avoid passing.\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            let flags = this.m_flagsBuffer.data[i];\r\n            ///if ((flags & b2ParticleSystem.k_barrierWallFlags) === b2ParticleSystem.k_barrierWallFlags)\r\n            if ((flags & b2ParticleSystem.k_barrierWallFlags) !== 0) {\r\n                vel_data[i].SetZero();\r\n            }\r\n        }\r\n        let tmax = b2_barrierCollisionTime * step.dt;\r\n        let mass = this.GetParticleMass();\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            let pair = this.m_pairBuffer.data[k];\r\n            if (pair.flags & b2ParticleFlag.b2_barrierParticle) {\r\n                let a = pair.indexA;\r\n                let b = pair.indexB;\r\n                let pa = pos_data[a];\r\n                let pb = pos_data[b];\r\n                /// b2AABB aabb;\r\n                let aabb = s_aabb;\r\n                ///aabb.lowerBound = b2Min(pa, pb);\r\n                b2Vec2.MinV(pa, pb, aabb.lowerBound);\r\n                ///aabb.upperBound = b2Max(pa, pb);\r\n                b2Vec2.MaxV(pa, pb, aabb.upperBound);\r\n                let aGroup = this.m_groupBuffer[a];\r\n                let bGroup = this.m_groupBuffer[b];\r\n                ///b2Vec2 va = GetLinearVelocity(aGroup, a, pa);\r\n                let va = this.GetLinearVelocity(aGroup, a, pa, s_va);\r\n                ///b2Vec2 vb = GetLinearVelocity(bGroup, b, pb);\r\n                let vb = this.GetLinearVelocity(bGroup, b, pb, s_vb);\r\n                ///b2Vec2 pba = pb - pa;\r\n                let pba = b2Vec2.SubVV(pb, pa, s_pba);\r\n                ///b2Vec2 vba = vb - va;\r\n                let vba = b2Vec2.SubVV(vb, va, s_vba);\r\n                ///InsideBoundsEnumerator enumerator = GetInsideBoundsEnumerator(aabb);\r\n                let enumerator = this.GetInsideBoundsEnumerator(aabb);\r\n                let c;\r\n                while ((c = enumerator.GetNext()) >= 0) {\r\n                    let pc = pos_data[c];\r\n                    let cGroup = this.m_groupBuffer[c];\r\n                    if (aGroup !== cGroup && bGroup !== cGroup) {\r\n                        ///b2Vec2 vc = GetLinearVelocity(cGroup, c, pc);\r\n                        let vc = this.GetLinearVelocity(cGroup, c, pc, s_vc);\r\n                        // Solve the equation below:\r\n                        //   (1-s)*(pa+t*va)+s*(pb+t*vb) = pc+t*vc\r\n                        // which expresses that the particle c will pass a line\r\n                        // connecting the particles a and b at the time of t.\r\n                        // if s is between 0 and 1, c will pass between a and b.\r\n                        ///b2Vec2 pca = pc - pa;\r\n                        let pca = b2Vec2.SubVV(pc, pa, s_pca);\r\n                        ///b2Vec2 vca = vc - va;\r\n                        let vca = b2Vec2.SubVV(vc, va, s_vca);\r\n                        let e2 = b2Vec2.CrossVV(vba, vca);\r\n                        let e1 = b2Vec2.CrossVV(pba, vca) - b2Vec2.CrossVV(pca, vba);\r\n                        let e0 = b2Vec2.CrossVV(pba, pca);\r\n                        let s, t;\r\n                        ///b2Vec2 qba, qca;\r\n                        let qba = s_qba, qca = s_qca;\r\n                        if (e2 === 0) {\r\n                            if (e1 === 0)\r\n                                continue;\r\n                            t = -e0 / e1;\r\n                            if (!(t >= 0 && t < tmax))\r\n                                continue;\r\n                            ///qba = pba + t * vba;\r\n                            b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                            ///qca = pca + t * vca;\r\n                            b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                            s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                            if (!(s >= 0 && s <= 1))\r\n                                continue;\r\n                        }\r\n                        else {\r\n                            let det = e1 * e1 - 4 * e0 * e2;\r\n                            if (det < 0)\r\n                                continue;\r\n                            let sqrtDet = b2Sqrt(det);\r\n                            let t1 = (-e1 - sqrtDet) / (2 * e2);\r\n                            let t2 = (-e1 + sqrtDet) / (2 * e2);\r\n                            ///if (t1 > t2) b2Swap(t1, t2);\r\n                            if (t1 > t2) {\r\n                                let tmp = t1;\r\n                                t1 = t2;\r\n                                t2 = tmp;\r\n                            }\r\n                            t = t1;\r\n                            ///qba = pba + t * vba;\r\n                            b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                            ///qca = pca + t * vca;\r\n                            b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                            ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\r\n                            s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                            if (!(t >= 0 && t < tmax && s >= 0 && s <= 1)) {\r\n                                t = t2;\r\n                                if (!(t >= 0 && t < tmax))\r\n                                    continue;\r\n                                ///qba = pba + t * vba;\r\n                                b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                                ///qca = pca + t * vca;\r\n                                b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                                ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\r\n                                s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                                if (!(s >= 0 && s <= 1))\r\n                                    continue;\r\n                            }\r\n                        }\r\n                        // Apply a force to particle c so that it will have the\r\n                        // interpolated velocity at the collision point on line ab.\r\n                        ///b2Vec2 dv = va + s * vba - vc;\r\n                        let dv = s_dv;\r\n                        dv.x = va.x + s * vba.x - vc.x;\r\n                        dv.y = va.y + s * vba.y - vc.y;\r\n                        ///b2Vec2 f = GetParticleMass() * dv;\r\n                        let f = b2Vec2.MulSV(mass, dv, s_f);\r\n                        if (this.IsRigidGroup(cGroup)) {\r\n                            // If c belongs to a rigid group, the force will be\r\n                            // distributed in the group.\r\n                            let mass = cGroup.GetMass();\r\n                            let inertia = cGroup.GetInertia();\r\n                            if (mass > 0) {\r\n                                ///cGroup.m_linearVelocity += 1 / mass * f;\r\n                                cGroup.m_linearVelocity.SelfMulAdd(1 / mass, f);\r\n                            }\r\n                            if (inertia > 0) {\r\n                                ///cGroup.m_angularVelocity += b2Cross(pc - cGroup.GetCenter(), f) / inertia;\r\n                                cGroup.m_angularVelocity += b2Vec2.CrossVV(b2Vec2.SubVV(pc, cGroup.GetCenter(), b2Vec2.s_t0), f) / inertia;\r\n                            }\r\n                        }\r\n                        else {\r\n                            ///m_velocityBuffer.data[c] += dv;\r\n                            vel_data[c].SelfAdd(dv);\r\n                        }\r\n                        // Apply a reversed force to particle c after particle\r\n                        // movement so that momentum will be preserved.\r\n                        ///ParticleApplyForce(c, -step.inv_dt * f);\r\n                        this.ParticleApplyForce(c, f.SelfMul(-step.inv_dt));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveStaticPressure(step) {\r\n        this.m_staticPressureBuffer = this.RequestBuffer(this.m_staticPressureBuffer);\r\n        let criticalPressure = this.GetCriticalPressure(step);\r\n        let pressurePerWeight = this.m_def.staticPressureStrength * criticalPressure;\r\n        let maxPressure = b2_maxParticlePressure * criticalPressure;\r\n        let relaxation = this.m_def.staticPressureRelaxation;\r\n        /// Compute pressure satisfying the modified Poisson equation:\r\n        ///   Sum_for_j((p_i - p_j) * w_ij) + relaxation * p_i =\r\n        ///   pressurePerWeight * (w_i - b2_minParticleWeight)\r\n        /// by iterating the calculation:\r\n        ///   p_i = (Sum_for_j(p_j * w_ij) + pressurePerWeight *\r\n        ///         (w_i - b2_minParticleWeight)) / (w_i + relaxation)\r\n        /// where\r\n        ///   p_i and p_j are static pressure of particle i and j\r\n        ///   w_ij is contact weight between particle i and j\r\n        ///   w_i is sum of contact weight of particle i\r\n        for (let t = 0; t < this.m_def.staticPressureIterations; t++) {\r\n            ///memset(m_accumulationBuffer, 0, sizeof(*m_accumulationBuffer) * m_count);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                this.m_accumulationBuffer[i] = 0;\r\n            }\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                let contact = this.m_contactBuffer.data[k];\r\n                if (contact.flags & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    let a = contact.indexA;\r\n                    let b = contact.indexB;\r\n                    let w = contact.weight;\r\n                    this.m_accumulationBuffer[a] += w * this.m_staticPressureBuffer[b]; // a <- b\r\n                    this.m_accumulationBuffer[b] += w * this.m_staticPressureBuffer[a]; // b <- a\r\n                }\r\n            }\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                let w = this.m_weightBuffer[i];\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    let wh = this.m_accumulationBuffer[i];\r\n                    let h = (wh + pressurePerWeight * (w - b2_minParticleWeight)) /\r\n                        (w + relaxation);\r\n                    this.m_staticPressureBuffer[i] = b2Clamp(h, 0.0, maxPressure);\r\n                }\r\n                else {\r\n                    this.m_staticPressureBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ComputeWeight() {\r\n        // calculates the sum of contact-weights for each particle\r\n        // that means dimensionless density\r\n        ///memset(m_weightBuffer, 0, sizeof(*m_weightBuffer) * m_count);\r\n        for (let k = 0; k < this.m_count; k++) {\r\n            this.m_weightBuffer[k] = 0;\r\n        }\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            let w = contact.weight;\r\n            this.m_weightBuffer[a] += w;\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let w = contact.weight;\r\n            this.m_weightBuffer[a] += w;\r\n            this.m_weightBuffer[b] += w;\r\n        }\r\n    }\r\n    SolvePressure(step) {\r\n        let s_f = b2ParticleSystem.SolvePressure_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // calculates pressure as a linear function of density\r\n        let criticalPressure = this.GetCriticalPressure(step);\r\n        let pressurePerWeight = this.m_def.pressureStrength * criticalPressure;\r\n        let maxPressure = b2_maxParticlePressure * criticalPressure;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            let w = this.m_weightBuffer[i];\r\n            let h = pressurePerWeight * b2Max(0.0, w - b2_minParticleWeight);\r\n            this.m_accumulationBuffer[i] = b2Min(h, maxPressure);\r\n        }\r\n        // ignores particles which have their own repulsive force\r\n        if (this.m_allParticleFlags & b2ParticleSystem.k_noPressureFlags) {\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleSystem.k_noPressureFlags) {\r\n                    this.m_accumulationBuffer[i] = 0;\r\n                }\r\n            }\r\n        }\r\n        // static pressure\r\n        if (this.m_allParticleFlags & b2ParticleFlag.b2_staticPressureParticle) {\r\n            b2Assert(this.m_staticPressureBuffer !== null);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_staticPressureParticle) {\r\n                    this.m_accumulationBuffer[i] += this.m_staticPressureBuffer[i];\r\n                }\r\n            }\r\n        }\r\n        // applies pressure between each particles in contact\r\n        let velocityPerPressure = step.dt / (this.m_def.density * this.m_particleDiameter);\r\n        let inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            let b = contact.body;\r\n            let w = contact.weight;\r\n            let m = contact.mass;\r\n            let n = contact.normal;\r\n            let p = pos_data[a];\r\n            let h = this.m_accumulationBuffer[a] + pressurePerWeight * w;\r\n            ///b2Vec2 f = velocityPerPressure * w * m * h * n;\r\n            let f = b2Vec2.MulSV(velocityPerPressure * w * m * h, n, s_f);\r\n            ///m_velocityBuffer.data[a] -= GetParticleInvMass() * f;\r\n            vel_data[a].SelfMulSub(inv_mass, f);\r\n            b.ApplyLinearImpulse(f, p, true);\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let w = contact.weight;\r\n            let n = contact.normal;\r\n            let h = this.m_accumulationBuffer[a] + this.m_accumulationBuffer[b];\r\n            ///b2Vec2 f = velocityPerPressure * w * h * n;\r\n            let f = b2Vec2.MulSV(velocityPerPressure * w * h, n, s_f);\r\n            ///m_velocityBuffer.data[a] -= f;\r\n            vel_data[a].SelfSub(f);\r\n            ///m_velocityBuffer.data[b] += f;\r\n            vel_data[b].SelfAdd(f);\r\n        }\r\n    }\r\n    SolveDamping(step) {\r\n        let s_v = b2ParticleSystem.SolveDamping_s_v;\r\n        let s_f = b2ParticleSystem.SolveDamping_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // reduces normal velocity of each contact\r\n        let linearDamping = this.m_def.dampingStrength;\r\n        let quadraticDamping = 1 / this.GetCriticalVelocity(step);\r\n        let inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            let b = contact.body;\r\n            let w = contact.weight;\r\n            let m = contact.mass;\r\n            let n = contact.normal;\r\n            let p = pos_data[a];\r\n            ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n            let v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n            let vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                let damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\r\n                ///b2Vec2 f = damping * m * vn * n;\r\n                let f = b2Vec2.MulSV(damping * m * vn, n, s_f);\r\n                ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                vel_data[a].SelfMulAdd(inv_mass, f);\r\n                ///b.ApplyLinearImpulse(-f, p, true);\r\n                b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let w = contact.weight;\r\n            let n = contact.normal;\r\n            ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n            let v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n            let vn = b2Vec2.DotVV(v, n);\r\n            if (vn < 0) {\r\n                ///float32 damping = b2Max(linearDamping * w, b2Min(- quadraticDamping * vn, 0.5f));\r\n                let damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\r\n                ///b2Vec2 f = damping * vn * n;\r\n                let f = b2Vec2.MulSV(damping * vn, n, s_f);\r\n                ///this.m_velocityBuffer.data[a] += f;\r\n                vel_data[a].SelfAdd(f);\r\n                ///this.m_velocityBuffer.data[b] -= f;\r\n                vel_data[b].SelfSub(f);\r\n            }\r\n        }\r\n    }\r\n    SolveRigidDamping() {\r\n        let s_t0 = b2ParticleSystem.SolveRigidDamping_s_t0;\r\n        let s_t1 = b2ParticleSystem.SolveRigidDamping_s_t1;\r\n        let s_p = b2ParticleSystem.SolveRigidDamping_s_p;\r\n        let s_v = b2ParticleSystem.SolveRigidDamping_s_v;\r\n        let invMassA = [0.0], invInertiaA = [0.0], tangentDistanceA = [0.0]; // TODO: static\r\n        let invMassB = [0.0], invInertiaB = [0.0], tangentDistanceB = [0.0]; // TODO: static\r\n        // Apply impulse to rigid particle groups colliding with other objects\r\n        // to reduce relative velocity at the colliding point.\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let damping = this.m_def.dampingStrength;\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            let aGroup = this.m_groupBuffer[a];\r\n            if (this.IsRigidGroup(aGroup)) {\r\n                let b = contact.body;\r\n                let n = contact.normal;\r\n                let w = contact.weight;\r\n                let p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - aGroup.GetLinearVelocityFromWorldPoint(p);\r\n                let v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, s_t0), aGroup.GetLinearVelocityFromWorldPoint(p, s_t1), s_v);\r\n                let vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    // The group's average velocity at particle position 'p' is pushing\r\n                    // the particle into the body.\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, true, aGroup, a, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, p, n);\r\n                    // Calculate b.m_I from public functions of b2Body.\r\n                    ///this.InitDampingParameter(&invMassB, &invInertiaB, &tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\r\n                    this.InitDampingParameter(invMassB, invInertiaB, tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\r\n                    ///float32 f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\r\n                    let f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\r\n                    ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, f, n);\r\n                    this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], true, aGroup, a, f, n);\r\n                    ///b.ApplyLinearImpulse(-f * n, p, true);\r\n                    b.ApplyLinearImpulse(b2Vec2.MulSV(-f, n, b2Vec2.s_t0), p, true);\r\n                }\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            let n = contact.normal;\r\n            let w = contact.weight;\r\n            let aGroup = this.m_groupBuffer[a];\r\n            let bGroup = this.m_groupBuffer[b];\r\n            let aRigid = this.IsRigidGroup(aGroup);\r\n            let bRigid = this.IsRigidGroup(bGroup);\r\n            if (aGroup !== bGroup && (aRigid || bRigid)) {\r\n                ///b2Vec2 p = 0.5f * (this.m_positionBuffer.data[a] + this.m_positionBuffer.data[b]);\r\n                let p = b2Vec2.MidVV(pos_data[a], pos_data[b], s_p);\r\n                ///b2Vec2 v = GetLinearVelocity(bGroup, b, p) - GetLinearVelocity(aGroup, a, p);\r\n                let v = b2Vec2.SubVV(this.GetLinearVelocity(bGroup, b, p, s_t0), this.GetLinearVelocity(aGroup, a, p, s_t1), s_v);\r\n                let vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, aRigid, aGroup, a, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, p, n);\r\n                    ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassB, &invInertiaB, &tangentDistanceB, bRigid, bGroup, b, p, n);\r\n                    this.InitDampingParameterWithRigidGroupOrParticle(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, p, n);\r\n                    ///float32 f = damping * w * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\r\n                    let f = damping * w * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\r\n                    ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, f, n);\r\n                    this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], aRigid, aGroup, a, f, n);\r\n                    ///this.ApplyDamping(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, -f, n);\r\n                    this.ApplyDamping(invMassB[0], invInertiaB[0], tangentDistanceB[0], bRigid, bGroup, b, -f, n);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveExtraDamping() {\r\n        let s_v = b2ParticleSystem.SolveExtraDamping_s_v;\r\n        let s_f = b2ParticleSystem.SolveExtraDamping_s_f;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // Applies additional damping force between bodies and particles which can\r\n        // produce strong repulsive force. Applying damping force multiple times\r\n        // is effective in suppressing vibration.\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleSystem.k_extraDampingFlags) {\r\n                let b = contact.body;\r\n                let m = contact.mass;\r\n                let n = contact.normal;\r\n                let p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n                let v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n                ///float32 vn = b2Dot(v, n);\r\n                let vn = b2Vec2.DotVV(v, n);\r\n                if (vn < 0) {\r\n                    ///b2Vec2 f = 0.5f * m * vn * n;\r\n                    let f = b2Vec2.MulSV(0.5 * m * vn, n, s_f);\r\n                    ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                    vel_data[a].SelfMulAdd(inv_mass, f);\r\n                    ///b.ApplyLinearImpulse(-f, p, true);\r\n                    b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveWall() {\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_wallParticle) {\r\n                vel_data[i].SetZero();\r\n            }\r\n        }\r\n    }\r\n    SolveRigid(step) {\r\n        let s_position = b2ParticleSystem.SolveRigid_s_position;\r\n        let s_rotation = b2ParticleSystem.SolveRigid_s_rotation;\r\n        let s_transform = b2ParticleSystem.SolveRigid_s_transform;\r\n        let s_velocityTransform = b2ParticleSystem.SolveRigid_s_velocityTransform;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                group.UpdateStatistics();\r\n                ///b2Rot rotation(step.dt * group.m_angularVelocity);\r\n                let rotation = s_rotation;\r\n                rotation.SetAngle(step.dt * group.m_angularVelocity);\r\n                ///b2Transform transform(group.m_center + step.dt * group.m_linearVelocity - b2Mul(rotation, group.m_center), rotation);\r\n                let position = b2Vec2.AddVV(group.m_center, b2Vec2.SubVV(b2Vec2.MulSV(step.dt, group.m_linearVelocity, b2Vec2.s_t0), b2Rot.MulRV(rotation, group.m_center, b2Vec2.s_t1), b2Vec2.s_t0), s_position);\r\n                let transform = s_transform;\r\n                transform.SetPositionRotation(position, rotation);\r\n                ///group.m_transform = b2Mul(transform, group.m_transform);\r\n                b2Transform.MulXX(transform, group.m_transform, group.m_transform);\r\n                let velocityTransform = s_velocityTransform;\r\n                velocityTransform.p.x = step.inv_dt * transform.p.x;\r\n                velocityTransform.p.y = step.inv_dt * transform.p.y;\r\n                velocityTransform.q.s = step.inv_dt * transform.q.s;\r\n                velocityTransform.q.c = step.inv_dt * (transform.q.c - 1);\r\n                for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                    ///m_velocityBuffer.data[i] = b2Mul(velocityTransform, m_positionBuffer.data[i]);\r\n                    b2Transform.MulXV(velocityTransform, pos_data[i], vel_data[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveElastic(step) {\r\n        let s_pa = b2ParticleSystem.SolveElastic_s_pa;\r\n        let s_pb = b2ParticleSystem.SolveElastic_s_pb;\r\n        let s_pc = b2ParticleSystem.SolveElastic_s_pc;\r\n        let s_r = b2ParticleSystem.SolveElastic_s_r;\r\n        let s_t0 = b2ParticleSystem.SolveElastic_s_t0;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let elasticStrength = step.inv_dt * this.m_def.elasticStrength;\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            let triad = this.m_triadBuffer.data[k];\r\n            if (triad.flags & b2ParticleFlag.b2_elasticParticle) {\r\n                let a = triad.indexA;\r\n                let b = triad.indexB;\r\n                let c = triad.indexC;\r\n                let oa = triad.pa;\r\n                let ob = triad.pb;\r\n                let oc = triad.pc;\r\n                ///b2Vec2 pa = m_positionBuffer.data[a];\r\n                let pa = s_pa.Copy(pos_data[a]);\r\n                ///b2Vec2 pb = m_positionBuffer.data[b];\r\n                let pb = s_pb.Copy(pos_data[b]);\r\n                ///b2Vec2 pc = m_positionBuffer.data[c];\r\n                let pc = s_pc.Copy(pos_data[c]);\r\n                let va = vel_data[a];\r\n                let vb = vel_data[b];\r\n                let vc = vel_data[c];\r\n                ///pa += step.dt * va;\r\n                pa.SelfMulAdd(step.dt, va);\r\n                ///pb += step.dt * vb;\r\n                pb.SelfMulAdd(step.dt, vb);\r\n                ///pc += step.dt * vc;\r\n                pc.SelfMulAdd(step.dt, vc);\r\n                ///b2Vec2 midPoint = (float32) 1 / 3 * (pa + pb + pc);\r\n                let midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\r\n                let midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\r\n                ///pa -= midPoint;\r\n                pa.x -= midPoint_x;\r\n                pa.y -= midPoint_y;\r\n                ///pb -= midPoint;\r\n                pb.x -= midPoint_x;\r\n                pb.y -= midPoint_y;\r\n                ///pc -= midPoint;\r\n                pc.x -= midPoint_x;\r\n                pc.y -= midPoint_y;\r\n                ///b2Rot r;\r\n                let r = s_r;\r\n                r.s = b2Vec2.CrossVV(oa, pa) + b2Vec2.CrossVV(ob, pb) + b2Vec2.CrossVV(oc, pc);\r\n                r.c = b2Vec2.DotVV(oa, pa) + b2Vec2.DotVV(ob, pb) + b2Vec2.DotVV(oc, pc);\r\n                let r2 = r.s * r.s + r.c * r.c;\r\n                let invR = b2InvSqrt(r2);\r\n                if (!isFinite(invR)) {\r\n                    invR = 1.98177537e+019;\r\n                }\r\n                r.s *= invR;\r\n                r.c *= invR;\r\n                ///r.angle = Math.atan2(r.s, r.c); // TODO: optimize\r\n                let strength = elasticStrength * triad.strength;\r\n                ///va += strength * (b2Mul(r, oa) - pa);\r\n                b2Rot.MulRV(r, oa, s_t0);\r\n                b2Vec2.SubVV(s_t0, pa, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                va.SelfAdd(s_t0);\r\n                ///vb += strength * (b2Mul(r, ob) - pb);\r\n                b2Rot.MulRV(r, ob, s_t0);\r\n                b2Vec2.SubVV(s_t0, pb, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                vb.SelfAdd(s_t0);\r\n                ///vc += strength * (b2Mul(r, oc) - pc);\r\n                b2Rot.MulRV(r, oc, s_t0);\r\n                b2Vec2.SubVV(s_t0, pc, s_t0);\r\n                b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                vc.SelfAdd(s_t0);\r\n            }\r\n        }\r\n    }\r\n    SolveSpring(step) {\r\n        let s_pa = b2ParticleSystem.SolveSpring_s_pa;\r\n        let s_pb = b2ParticleSystem.SolveSpring_s_pb;\r\n        let s_d = b2ParticleSystem.SolveSpring_s_d;\r\n        let s_f = b2ParticleSystem.SolveSpring_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let springStrength = step.inv_dt * this.m_def.springStrength;\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            let pair = this.m_pairBuffer.data[k];\r\n            if (pair.flags & b2ParticleFlag.b2_springParticle) {\r\n                ///int32 a = pair.indexA;\r\n                let a = pair.indexA;\r\n                ///int32 b = pair.indexB;\r\n                let b = pair.indexB;\r\n                ///b2Vec2 pa = m_positionBuffer.data[a];\r\n                let pa = s_pa.Copy(pos_data[a]);\r\n                ///b2Vec2 pb = m_positionBuffer.data[b];\r\n                let pb = s_pb.Copy(pos_data[b]);\r\n                ///b2Vec2& va = m_velocityBuffer.data[a];\r\n                let va = vel_data[a];\r\n                ///b2Vec2& vb = m_velocityBuffer.data[b];\r\n                let vb = vel_data[b];\r\n                ///pa += step.dt * va;\r\n                pa.SelfMulAdd(step.dt, va);\r\n                ///pb += step.dt * vb;\r\n                pb.SelfMulAdd(step.dt, vb);\r\n                ///b2Vec2 d = pb - pa;\r\n                let d = b2Vec2.SubVV(pb, pa, s_d);\r\n                ///float32 r0 = pair.distance;\r\n                let r0 = pair.distance;\r\n                ///float32 r1 = d.Length();\r\n                let r1 = d.Length();\r\n                ///float32 strength = springStrength * pair.strength;\r\n                let strength = springStrength * pair.strength;\r\n                ///b2Vec2 f = strength * (r0 - r1) / r1 * d;\r\n                let f = b2Vec2.MulSV(strength * (r0 - r1) / r1, d, s_f);\r\n                ///va -= f;\r\n                va.SelfSub(f);\r\n                ///vb += f;\r\n                vb.SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveTensile(step) {\r\n        let s_weightedNormal = b2ParticleSystem.SolveTensile_s_weightedNormal;\r\n        let s_s = b2ParticleSystem.SolveTensile_s_s;\r\n        let s_f = b2ParticleSystem.SolveTensile_s_f;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        b2Assert(this.m_accumulation2Buffer !== null);\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            this.m_accumulation2Buffer[i] = new b2Vec2();\r\n            this.m_accumulation2Buffer[i].SetZero();\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_tensileParticle) {\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                let w = contact.weight;\r\n                let n = contact.normal;\r\n                ///b2Vec2 weightedNormal = (1 - w) * w * n;\r\n                let weightedNormal = b2Vec2.MulSV((1 - w) * w, n, s_weightedNormal);\r\n                ///m_accumulation2Buffer[a] -= weightedNormal;\r\n                this.m_accumulation2Buffer[a].SelfSub(weightedNormal);\r\n                ///m_accumulation2Buffer[b] += weightedNormal;\r\n                this.m_accumulation2Buffer[b].SelfAdd(weightedNormal);\r\n            }\r\n        }\r\n        let criticalVelocity = this.GetCriticalVelocity(step);\r\n        let pressureStrength = this.m_def.surfaceTensionPressureStrength * criticalVelocity;\r\n        let normalStrength = this.m_def.surfaceTensionNormalStrength * criticalVelocity;\r\n        let maxVelocityVariation = b2_maxParticleForce * criticalVelocity;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_tensileParticle) {\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                let w = contact.weight;\r\n                let n = contact.normal;\r\n                let h = this.m_weightBuffer[a] + this.m_weightBuffer[b];\r\n                ///b2Vec2 s = m_accumulation2Buffer[b] - m_accumulation2Buffer[a];\r\n                let s = b2Vec2.SubVV(this.m_accumulation2Buffer[b], this.m_accumulation2Buffer[a], s_s);\r\n                let fn = b2Min(pressureStrength * (h - 2) + normalStrength * b2Vec2.DotVV(s, n), maxVelocityVariation) * w;\r\n                ///b2Vec2 f = fn * n;\r\n                let f = b2Vec2.MulSV(fn, n, s_f);\r\n                ///m_velocityBuffer.data[a] -= f;\r\n                vel_data[a].SelfSub(f);\r\n                ///m_velocityBuffer.data[b] += f;\r\n                vel_data[b].SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveViscous() {\r\n        let s_v = b2ParticleSystem.SolveViscous_s_v;\r\n        let s_f = b2ParticleSystem.SolveViscous_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let viscousStrength = this.m_def.viscousStrength;\r\n        let inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleFlag.b2_viscousParticle) {\r\n                let b = contact.body;\r\n                let w = contact.weight;\r\n                let m = contact.mass;\r\n                let p = pos_data[a];\r\n                ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n                let v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n                ///b2Vec2 f = viscousStrength * m * w * v;\r\n                let f = b2Vec2.MulSV(viscousStrength * m * w, v, s_f);\r\n                ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                vel_data[a].SelfMulAdd(inv_mass, f);\r\n                ///b.ApplyLinearImpulse(-f, p, true);\r\n                b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_viscousParticle) {\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                let w = contact.weight;\r\n                ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n                let v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n                ///b2Vec2 f = viscousStrength * w * v;\r\n                let f = b2Vec2.MulSV(viscousStrength * w, v, s_f);\r\n                ///m_velocityBuffer.data[a] += f;\r\n                vel_data[a].SelfAdd(f);\r\n                ///m_velocityBuffer.data[b] -= f;\r\n                vel_data[b].SelfSub(f);\r\n            }\r\n        }\r\n    }\r\n    SolveRepulsive(step) {\r\n        let s_f = b2ParticleSystem.SolveRepulsive_s_f;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let repulsiveStrength = this.m_def.repulsiveStrength * this.GetCriticalVelocity(step);\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_repulsiveParticle) {\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\r\n                    let w = contact.weight;\r\n                    let n = contact.normal;\r\n                    ///b2Vec2 f = repulsiveStrength * w * n;\r\n                    let f = b2Vec2.MulSV(repulsiveStrength * w, n, s_f);\r\n                    ///m_velocityBuffer.data[a] -= f;\r\n                    vel_data[a].SelfSub(f);\r\n                    ///m_velocityBuffer.data[b] += f;\r\n                    vel_data[b].SelfAdd(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolvePowder(step) {\r\n        let s_f = b2ParticleSystem.SolvePowder_s_f;\r\n        let pos_data = this.m_positionBuffer.data;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let powderStrength = this.m_def.powderStrength * this.GetCriticalVelocity(step);\r\n        let minWeight = 1.0 - b2_particleStride;\r\n        let inv_mass = this.GetParticleInvMass();\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            let a = contact.index;\r\n            if (this.m_flagsBuffer.data[a] & b2ParticleFlag.b2_powderParticle) {\r\n                let w = contact.weight;\r\n                if (w > minWeight) {\r\n                    let b = contact.body;\r\n                    let m = contact.mass;\r\n                    let p = pos_data[a];\r\n                    let n = contact.normal;\r\n                    let f = b2Vec2.MulSV(powderStrength * m * (w - minWeight), n, s_f);\r\n                    vel_data[a].SelfMulSub(inv_mass, f);\r\n                    b.ApplyLinearImpulse(f, p, true);\r\n                }\r\n            }\r\n        }\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            if (contact.flags & b2ParticleFlag.b2_powderParticle) {\r\n                let w = contact.weight;\r\n                if (w > minWeight) {\r\n                    let a = contact.indexA;\r\n                    let b = contact.indexB;\r\n                    let n = contact.normal;\r\n                    let f = b2Vec2.MulSV(powderStrength * (w - minWeight), n, s_f);\r\n                    vel_data[a].SelfSub(f);\r\n                    vel_data[b].SelfAdd(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveSolid(step) {\r\n        let s_f = b2ParticleSystem.SolveSolid_s_f;\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        // applies extra repulsive force from solid particle groups\r\n        this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\r\n        let ejectionStrength = step.inv_dt * this.m_def.ejectionStrength;\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            let a = contact.indexA;\r\n            let b = contact.indexB;\r\n            if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\r\n                let w = contact.weight;\r\n                let n = contact.normal;\r\n                let h = this.m_depthBuffer[a] + this.m_depthBuffer[b];\r\n                let f = b2Vec2.MulSV(ejectionStrength * h * w, n, s_f);\r\n                vel_data[a].SelfSub(f);\r\n                vel_data[b].SelfAdd(f);\r\n            }\r\n        }\r\n    }\r\n    SolveForce(step) {\r\n        let vel_data = this.m_velocityBuffer.data;\r\n        let velocityPerForce = step.dt * this.GetParticleInvMass();\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            ///m_velocityBuffer.data[i] += velocityPerForce * m_forceBuffer[i];\r\n            vel_data[i].SelfMulAdd(velocityPerForce, this.m_forceBuffer[i]);\r\n        }\r\n        this.m_hasForce = false;\r\n    }\r\n    SolveColorMixing() {\r\n        // mixes color between contacting particles\r\n        b2Assert(this.m_colorBuffer.data !== null);\r\n        const colorMixing = 0.5 * this.m_def.colorMixingStrength;\r\n        if (colorMixing) {\r\n            for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                let contact = this.m_contactBuffer.data[k];\r\n                let a = contact.indexA;\r\n                let b = contact.indexB;\r\n                if (this.m_flagsBuffer.data[a] & this.m_flagsBuffer.data[b] &\r\n                    b2ParticleFlag.b2_colorMixingParticle) {\r\n                    let colorA = this.m_colorBuffer.data[a];\r\n                    let colorB = this.m_colorBuffer.data[b];\r\n                    // Use the static method to ensure certain compilers inline\r\n                    // this correctly.\r\n                    b2Color.MixColors(colorA, colorB, colorMixing);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SolveZombie() {\r\n        // removes particles with zombie flag\r\n        let newCount = 0;\r\n        ///int32* newIndices = (int32*) this.m_world.m_stackAllocator.Allocate(sizeof(int32) * this.m_count);\r\n        let newIndices = []; // TODO: static\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            newIndices[i] = b2_invalidParticleIndex;\r\n        }\r\n        b2Assert(newIndices.length === this.m_count);\r\n        let allParticleFlags = 0;\r\n        for (let i = 0; i < this.m_count; i++) {\r\n            let flags = this.m_flagsBuffer.data[i];\r\n            if (flags & b2ParticleFlag.b2_zombieParticle) {\r\n                let destructionListener = this.m_world.m_destructionListener;\r\n                if ((flags & b2ParticleFlag.b2_destructionListenerParticle) && destructionListener) {\r\n                    destructionListener.SayGoodbyeParticle(this, i);\r\n                }\r\n                // Destroy particle handle.\r\n                if (this.m_handleIndexBuffer.data) {\r\n                    let handle = this.m_handleIndexBuffer.data[i];\r\n                    if (handle) {\r\n                        handle.SetIndex(b2_invalidParticleIndex);\r\n                        this.m_handleIndexBuffer.data[i] = null;\r\n                        ///m_handleAllocator.Free(handle);\r\n                    }\r\n                }\r\n                newIndices[i] = b2_invalidParticleIndex;\r\n            }\r\n            else {\r\n                newIndices[i] = newCount;\r\n                if (i !== newCount) {\r\n                    // Update handle to reference new particle index.\r\n                    if (this.m_handleIndexBuffer.data) {\r\n                        let handle = this.m_handleIndexBuffer.data[i];\r\n                        if (handle)\r\n                            handle.SetIndex(newCount);\r\n                        this.m_handleIndexBuffer.data[newCount] = handle;\r\n                    }\r\n                    this.m_flagsBuffer.data[newCount] = this.m_flagsBuffer.data[i];\r\n                    if (this.m_lastBodyContactStepBuffer.data) {\r\n                        this.m_lastBodyContactStepBuffer.data[newCount] = this.m_lastBodyContactStepBuffer.data[i];\r\n                    }\r\n                    if (this.m_bodyContactCountBuffer.data) {\r\n                        this.m_bodyContactCountBuffer.data[newCount] = this.m_bodyContactCountBuffer.data[i];\r\n                    }\r\n                    if (this.m_consecutiveContactStepsBuffer.data) {\r\n                        this.m_consecutiveContactStepsBuffer.data[newCount] = this.m_consecutiveContactStepsBuffer.data[i];\r\n                    }\r\n                    this.m_positionBuffer.data[newCount].Copy(this.m_positionBuffer.data[i]);\r\n                    this.m_velocityBuffer.data[newCount].Copy(this.m_velocityBuffer.data[i]);\r\n                    this.m_groupBuffer[newCount] = this.m_groupBuffer[i];\r\n                    if (this.m_hasForce) {\r\n                        this.m_forceBuffer[newCount].Copy(this.m_forceBuffer[i]);\r\n                    }\r\n                    if (this.m_staticPressureBuffer) {\r\n                        this.m_staticPressureBuffer[newCount] = this.m_staticPressureBuffer[i];\r\n                    }\r\n                    if (this.m_depthBuffer) {\r\n                        this.m_depthBuffer[newCount] = this.m_depthBuffer[i];\r\n                    }\r\n                    if (this.m_colorBuffer.data) {\r\n                        this.m_colorBuffer.data[newCount].Copy(this.m_colorBuffer.data[i]);\r\n                    }\r\n                    if (this.m_userDataBuffer.data) {\r\n                        this.m_userDataBuffer.data[newCount] = this.m_userDataBuffer.data[i];\r\n                    }\r\n                    if (this.m_expirationTimeBuffer.data) {\r\n                        this.m_expirationTimeBuffer.data[newCount] = this.m_expirationTimeBuffer.data[i];\r\n                    }\r\n                }\r\n                newCount++;\r\n                allParticleFlags |= flags;\r\n            }\r\n        }\r\n        // predicate functions\r\n        let Test = {\r\n            ///static bool IsProxyInvalid(const Proxy& proxy)\r\n            IsProxyInvalid: (proxy) => {\r\n                return proxy.index < 0;\r\n            },\r\n            ///static bool IsContactInvalid(const b2ParticleContact& contact)\r\n            IsContactInvalid: (contact) => {\r\n                return contact.indexA < 0 || contact.indexB < 0;\r\n            },\r\n            ///static bool IsBodyContactInvalid(const b2ParticleBodyContact& contact)\r\n            IsBodyContactInvalid: (contact) => {\r\n                return contact.index < 0;\r\n            },\r\n            ///static bool IsPairInvalid(const b2ParticlePair& pair)\r\n            IsPairInvalid: (pair) => {\r\n                return pair.indexA < 0 || pair.indexB < 0;\r\n            },\r\n            ///static bool IsTriadInvalid(const b2ParticleTriad& triad)\r\n            IsTriadInvalid: (triad) => {\r\n                return triad.indexA < 0 || triad.indexB < 0 || triad.indexC < 0;\r\n            }\r\n        };\r\n        // update proxies\r\n        for (let k = 0; k < this.m_proxyBuffer.count; k++) {\r\n            let proxy = this.m_proxyBuffer.data[k];\r\n            proxy.index = newIndices[proxy.index];\r\n        }\r\n        this.m_proxyBuffer.RemoveIf(Test.IsProxyInvalid);\r\n        // update contacts\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            contact.indexA = newIndices[contact.indexA];\r\n            contact.indexB = newIndices[contact.indexB];\r\n        }\r\n        this.m_contactBuffer.RemoveIf(Test.IsContactInvalid);\r\n        // update particle-body contacts\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            contact.index = newIndices[contact.index];\r\n        }\r\n        this.m_bodyContactBuffer.RemoveIf(Test.IsBodyContactInvalid);\r\n        // update pairs\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            let pair = this.m_pairBuffer.data[k];\r\n            pair.indexA = newIndices[pair.indexA];\r\n            pair.indexB = newIndices[pair.indexB];\r\n        }\r\n        this.m_pairBuffer.RemoveIf(Test.IsPairInvalid);\r\n        // update triads\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            let triad = this.m_triadBuffer.data[k];\r\n            triad.indexA = newIndices[triad.indexA];\r\n            triad.indexB = newIndices[triad.indexB];\r\n            triad.indexC = newIndices[triad.indexC];\r\n        }\r\n        this.m_triadBuffer.RemoveIf(Test.IsTriadInvalid);\r\n        // Update lifetime indices.\r\n        if (this.m_indexByExpirationTimeBuffer.data) {\r\n            let writeOffset = 0;\r\n            for (let readOffset = 0; readOffset < this.m_count; readOffset++) {\r\n                let newIndex = newIndices[this.m_indexByExpirationTimeBuffer.data[readOffset]];\r\n                if (newIndex !== b2_invalidParticleIndex) {\r\n                    this.m_indexByExpirationTimeBuffer.data[writeOffset++] = newIndex;\r\n                }\r\n            }\r\n        }\r\n        // update groups\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            let firstIndex = newCount;\r\n            let lastIndex = 0;\r\n            let modified = false;\r\n            for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                let j = newIndices[i];\r\n                if (j >= 0) {\r\n                    firstIndex = b2Min(firstIndex, j);\r\n                    lastIndex = b2Max(lastIndex, j + 1);\r\n                }\r\n                else {\r\n                    modified = true;\r\n                }\r\n            }\r\n            if (firstIndex < lastIndex) {\r\n                group.m_firstIndex = firstIndex;\r\n                group.m_lastIndex = lastIndex;\r\n                if (modified) {\r\n                    if (group.m_groupFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                        this.SetGroupFlags(group, group.m_groupFlags | b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                group.m_firstIndex = 0;\r\n                group.m_lastIndex = 0;\r\n                if (!(group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupCanBeEmpty)) {\r\n                    this.SetGroupFlags(group, group.m_groupFlags | b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed);\r\n                }\r\n            }\r\n        }\r\n        // update particle count\r\n        this.m_count = newCount;\r\n        ///m_world.m_stackAllocator.Free(newIndices);\r\n        this.m_allParticleFlags = allParticleFlags;\r\n        this.m_needsUpdateAllParticleFlags = false;\r\n        // destroy bodies with no particles\r\n        for (let group = this.m_groupList; group;) {\r\n            let next = group.GetNext();\r\n            if (group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed) {\r\n                this.DestroyParticleGroup(group);\r\n            }\r\n            group = next;\r\n        }\r\n    }\r\n    /**\r\n     * Destroy all particles which have outlived their lifetimes set\r\n     * by SetParticleLifetime().\r\n     */\r\n    SolveLifetimes(step) {\r\n        b2Assert(this.m_expirationTimeBuffer.data !== null);\r\n        b2Assert(this.m_indexByExpirationTimeBuffer.data !== null);\r\n        // Update the time elapsed.\r\n        this.m_timeElapsed = this.LifetimeToExpirationTime(step.dt);\r\n        // Get the floor (non-fractional component) of the elapsed time.\r\n        let quantizedTimeElapsed = this.GetQuantizedTimeElapsed();\r\n        let expirationTimes = this.m_expirationTimeBuffer.data;\r\n        let expirationTimeIndices = this.m_indexByExpirationTimeBuffer.data;\r\n        let particleCount = this.GetParticleCount();\r\n        // Sort the lifetime buffer if it's required.\r\n        if (this.m_expirationTimeBufferRequiresSorting) {\r\n            ///const ExpirationTimeComparator expirationTimeComparator(expirationTimes);\r\n            ///std::sort(expirationTimeIndices, expirationTimeIndices + particleCount, expirationTimeComparator);\r\n            /**\r\n             * Compare the lifetime of particleIndexA and particleIndexB\r\n             * returning true if the lifetime of A is greater than B for\r\n             * particles that will expire.  If either particle's lifetime is\r\n             * infinite (<= 0.0f) this function return true if the lifetime\r\n             * of A is lesser than B. When used with std::sort() this\r\n             * results in an array of particle indicies sorted in reverse\r\n             * order by particle lifetime.\r\n             *\r\n             * For example, the set of lifetimes\r\n             * (1.0, 0.7, 0.3, 0.0, -1.0, 2.0)\r\n             * would be sorted as\r\n             * (0.0, 1.0, -2.0, 1.0, 0.7, 0.3)\r\n             */\r\n            let ExpirationTimeComparator = (particleIndexA, particleIndexB) => {\r\n                let expirationTimeA = expirationTimes[particleIndexA];\r\n                let expirationTimeB = expirationTimes[particleIndexB];\r\n                let infiniteExpirationTimeA = expirationTimeA <= 0.0;\r\n                let infiniteExpirationTimeB = expirationTimeB <= 0.0;\r\n                return infiniteExpirationTimeA === infiniteExpirationTimeB ?\r\n                    expirationTimeA > expirationTimeB : infiniteExpirationTimeA;\r\n            };\r\n            std_sort(expirationTimeIndices, 0, particleCount, ExpirationTimeComparator);\r\n            this.m_expirationTimeBufferRequiresSorting = false;\r\n        }\r\n        // Destroy particles which have expired.\r\n        for (let i = particleCount - 1; i >= 0; --i) {\r\n            let particleIndex = expirationTimeIndices[i];\r\n            let expirationTime = expirationTimes[particleIndex];\r\n            // If no particles need to be destroyed, skip this.\r\n            if (quantizedTimeElapsed < expirationTime || expirationTime <= 0) {\r\n                break;\r\n            }\r\n            // Destroy this particle.\r\n            this.DestroyParticle(particleIndex);\r\n        }\r\n    }\r\n    RotateBuffer(start, mid, end) {\r\n        // move the particles assigned to the given group toward the end of array\r\n        if (start === mid || mid === end) {\r\n            return;\r\n        }\r\n        b2Assert(mid >= start && mid <= end);\r\n        function newIndices(i) {\r\n            if (i < start) {\r\n                return i;\r\n            }\r\n            else if (i < mid) {\r\n                return i + end - mid;\r\n            }\r\n            else if (i < end) {\r\n                return i + start - mid;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        ///std::rotate(m_flagsBuffer.data + start, m_flagsBuffer.data + mid, m_flagsBuffer.data + end);\r\n        std_rotate(this.m_flagsBuffer.data, start, mid, end);\r\n        if (this.m_lastBodyContactStepBuffer.data) {\r\n            ///std::rotate(m_lastBodyContactStepBuffer.data + start, m_lastBodyContactStepBuffer.data + mid, m_lastBodyContactStepBuffer.data + end);\r\n            std_rotate(this.m_lastBodyContactStepBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_bodyContactCountBuffer.data) {\r\n            ///std::rotate(m_bodyContactCountBuffer.data + start, m_bodyContactCountBuffer.data + mid, m_bodyContactCountBuffer.data + end);\r\n            std_rotate(this.m_bodyContactCountBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_consecutiveContactStepsBuffer.data) {\r\n            ///std::rotate(m_consecutiveContactStepsBuffer.data + start, m_consecutiveContactStepsBuffer.data + mid, m_consecutiveContactStepsBuffer.data + end);\r\n            std_rotate(this.m_consecutiveContactStepsBuffer.data, start, mid, end);\r\n        }\r\n        ///std::rotate(m_positionBuffer.data + start, m_positionBuffer.data + mid, m_positionBuffer.data + end);\r\n        std_rotate(this.m_positionBuffer.data, start, mid, end);\r\n        ///std::rotate(m_velocityBuffer.data + start, m_velocityBuffer.data + mid, m_velocityBuffer.data + end);\r\n        std_rotate(this.m_velocityBuffer.data, start, mid, end);\r\n        ///std::rotate(m_groupBuffer + start, m_groupBuffer + mid, m_groupBuffer + end);\r\n        std_rotate(this.m_groupBuffer, start, mid, end);\r\n        if (this.m_hasForce) {\r\n            ///std::rotate(m_forceBuffer + start, m_forceBuffer + mid, m_forceBuffer + end);\r\n            std_rotate(this.m_forceBuffer, start, mid, end);\r\n        }\r\n        if (this.m_staticPressureBuffer) {\r\n            ///std::rotate(m_staticPressureBuffer + start, m_staticPressureBuffer + mid, m_staticPressureBuffer + end);\r\n            std_rotate(this.m_staticPressureBuffer, start, mid, end);\r\n        }\r\n        if (this.m_depthBuffer) {\r\n            ///std::rotate(m_depthBuffer + start, m_depthBuffer + mid, m_depthBuffer + end);\r\n            std_rotate(this.m_depthBuffer, start, mid, end);\r\n        }\r\n        if (this.m_colorBuffer.data) {\r\n            ///std::rotate(m_colorBuffer.data + start, m_colorBuffer.data + mid, m_colorBuffer.data + end);\r\n            std_rotate(this.m_colorBuffer.data, start, mid, end);\r\n        }\r\n        if (this.m_userDataBuffer.data) {\r\n            ///std::rotate(m_userDataBuffer.data + start, m_userDataBuffer.data + mid, m_userDataBuffer.data + end);\r\n            std_rotate(this.m_userDataBuffer.data, start, mid, end);\r\n        }\r\n        // Update handle indices.\r\n        if (this.m_handleIndexBuffer.data) {\r\n            ///std::rotate(m_handleIndexBuffer.data + start, m_handleIndexBuffer.data + mid, m_handleIndexBuffer.data + end);\r\n            std_rotate(this.m_handleIndexBuffer.data, start, mid, end);\r\n            for (let i = start; i < end; ++i) {\r\n                let handle = this.m_handleIndexBuffer.data[i];\r\n                if (handle)\r\n                    handle.SetIndex(newIndices(handle.GetIndex()));\r\n            }\r\n        }\r\n        if (this.m_expirationTimeBuffer.data) {\r\n            ///std::rotate(m_expirationTimeBuffer.data + start, m_expirationTimeBuffer.data + mid, m_expirationTimeBuffer.data + end);\r\n            std_rotate(this.m_expirationTimeBuffer.data, start, mid, end);\r\n            // Update expiration time buffer indices.\r\n            let particleCount = this.GetParticleCount();\r\n            let indexByExpirationTime = this.m_indexByExpirationTimeBuffer.data;\r\n            for (let i = 0; i < particleCount; ++i) {\r\n                indexByExpirationTime[i] = newIndices(indexByExpirationTime[i]);\r\n            }\r\n        }\r\n        // update proxies\r\n        for (let k = 0; k < this.m_proxyBuffer.count; k++) {\r\n            let proxy = this.m_proxyBuffer.data[k];\r\n            proxy.index = newIndices(proxy.index);\r\n        }\r\n        // update contacts\r\n        for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n            let contact = this.m_contactBuffer.data[k];\r\n            contact.indexA = newIndices(contact.indexA);\r\n            contact.indexB = newIndices(contact.indexB);\r\n        }\r\n        // update particle-body contacts\r\n        for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n            let contact = this.m_bodyContactBuffer.data[k];\r\n            contact.index = newIndices(contact.index);\r\n        }\r\n        // update pairs\r\n        for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n            let pair = this.m_pairBuffer.data[k];\r\n            pair.indexA = newIndices(pair.indexA);\r\n            pair.indexB = newIndices(pair.indexB);\r\n        }\r\n        // update triads\r\n        for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n            let triad = this.m_triadBuffer.data[k];\r\n            triad.indexA = newIndices(triad.indexA);\r\n            triad.indexB = newIndices(triad.indexB);\r\n            triad.indexC = newIndices(triad.indexC);\r\n        }\r\n        // update groups\r\n        for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n            group.m_firstIndex = newIndices(group.m_firstIndex);\r\n            group.m_lastIndex = newIndices(group.m_lastIndex - 1) + 1;\r\n        }\r\n    }\r\n    GetCriticalVelocity(step) {\r\n        return this.m_particleDiameter * step.inv_dt;\r\n    }\r\n    GetCriticalVelocitySquared(step) {\r\n        let velocity = this.GetCriticalVelocity(step);\r\n        return velocity * velocity;\r\n    }\r\n    GetCriticalPressure(step) {\r\n        return this.m_def.density * this.GetCriticalVelocitySquared(step);\r\n    }\r\n    GetParticleStride() {\r\n        return b2_particleStride * this.m_particleDiameter;\r\n    }\r\n    GetParticleMass() {\r\n        let stride = this.GetParticleStride();\r\n        return this.m_def.density * stride * stride;\r\n    }\r\n    GetParticleInvMass() {\r\n        ///return 1.777777 * this.m_inverseDensity * this.m_inverseDiameter * this.m_inverseDiameter;\r\n        // mass = density * stride^2, so we take the inverse of this.\r\n        let inverseStride = this.m_inverseDiameter * (1.0 / b2_particleStride);\r\n        return this.m_inverseDensity * inverseStride * inverseStride;\r\n    }\r\n    /**\r\n     * Get the world's contact filter if any particles with the\r\n     * b2_contactFilterParticle flag are present in the system.\r\n     */\r\n    GetFixtureContactFilter() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_fixtureContactFilterParticle) ?\r\n            this.m_world.m_contactManager.m_contactFilter : null;\r\n    }\r\n    /**\r\n     * Get the world's contact filter if any particles with the\r\n     * b2_particleContactFilterParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetParticleContactFilter() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_particleContactFilterParticle) ?\r\n            this.m_world.m_contactManager.m_contactFilter : null;\r\n    }\r\n    /**\r\n     * Get the world's contact listener if any particles with the\r\n     * b2_fixtureContactListenerParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetFixtureContactListener() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_fixtureContactListenerParticle) ?\r\n            this.m_world.m_contactManager.m_contactListener : null;\r\n    }\r\n    /**\r\n     * Get the world's contact listener if any particles with the\r\n     * b2_particleContactListenerParticle flag are present in the\r\n     * system.\r\n     */\r\n    GetParticleContactListener() {\r\n        return (this.m_allParticleFlags & b2ParticleFlag.b2_particleContactListenerParticle) ?\r\n            this.m_world.m_contactManager.m_contactListener : null;\r\n    }\r\n    SetUserOverridableBuffer(buffer, newData, newCapacity) {\r\n        b2Assert(((newData !== null) && (newCapacity > 0)) || ((newData === null) && (newCapacity === 0)));\r\n        ///if (!buffer.userSuppliedCapacity)\r\n        ///{\r\n        ///this.m_world.m_blockAllocator.Free(buffer.data, sizeof(T) * m_internalAllocatedCapacity);\r\n        ///}\r\n        buffer.data = newData;\r\n        buffer.userSuppliedCapacity = newCapacity;\r\n    }\r\n    SetGroupFlags(group, newFlags) {\r\n        let oldFlags = group.m_groupFlags;\r\n        if ((oldFlags ^ newFlags) & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n            // If the b2_solidParticleGroup flag changed schedule depth update.\r\n            newFlags |= b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth;\r\n        }\r\n        if (oldFlags & ~newFlags) {\r\n            // If any flags might be removed\r\n            this.m_needsUpdateAllGroupFlags = true;\r\n        }\r\n        if (~this.m_allGroupFlags & newFlags) {\r\n            // If any flags were added\r\n            if (newFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\r\n            }\r\n            this.m_allGroupFlags |= newFlags;\r\n        }\r\n        group.m_groupFlags = newFlags;\r\n    }\r\n    static BodyContactCompare(lhs, rhs) {\r\n        if (lhs.index === rhs.index) {\r\n            // Subsort by weight, decreasing.\r\n            return lhs.weight > rhs.weight;\r\n        }\r\n        return lhs.index < rhs.index;\r\n    }\r\n    RemoveSpuriousBodyContacts() {\r\n        // At this point we have a list of contact candidates based on AABB\r\n        // overlap.The AABB query that  generated this returns all collidable\r\n        // fixtures overlapping particle bounding boxes.  This breaks down around\r\n        // vertices where two shapes intersect, such as a \"ground\" surface made\r\n        // of multiple b2PolygonShapes; it potentially applies a lot of spurious\r\n        // impulses from normals that should not actually contribute.  See the\r\n        // Ramp example in Testbed.\r\n        //\r\n        // To correct for this, we apply this algorithm:\r\n        //   * sort contacts by particle and subsort by weight (nearest to farthest)\r\n        //   * for each contact per particle:\r\n        //      - project a point at the contact distance along the inverse of the\r\n        //        contact normal\r\n        //      - if this intersects the fixture that generated the contact, apply\r\n        //         it, otherwise discard as impossible\r\n        //      - repeat for up to n nearest contacts, currently we get good results\r\n        //        from n=3.\r\n        ///std::sort(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleSystem::BodyContactCompare);\r\n        std_sort(this.m_bodyContactBuffer.data, 0, this.m_bodyContactBuffer.count, b2ParticleSystem.BodyContactCompare);\r\n        ///int32 discarded = 0;\r\n        ///std::remove_if(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleBodyContactRemovePredicate(this, &discarded));\r\n        ///\r\n        ///m_bodyContactBuffer.SetCount(m_bodyContactBuffer.GetCount() - discarded);\r\n        let s_n = b2ParticleSystem.RemoveSpuriousBodyContacts_s_n;\r\n        let s_pos = b2ParticleSystem.RemoveSpuriousBodyContacts_s_pos;\r\n        let s_normal = b2ParticleSystem.RemoveSpuriousBodyContacts_s_normal;\r\n        // Max number of contacts processed per particle, from nearest to farthest.\r\n        // This must be at least 2 for correctness with concave shapes; 3 was\r\n        // experimentally arrived at as looking reasonable.\r\n        let k_maxContactsPerPoint = 3;\r\n        const system = this;\r\n        // Index of last particle processed.\r\n        let lastIndex = -1;\r\n        // Number of contacts processed for the current particle.\r\n        let currentContacts = 0;\r\n        // Output the number of discarded contacts.\r\n        // let discarded = 0;\r\n        let b2ParticleBodyContactRemovePredicate = (contact) => {\r\n            // This implements the selection criteria described in\r\n            // RemoveSpuriousBodyContacts().\r\n            // This functor is iterating through a list of Body contacts per\r\n            // Particle, ordered from near to far.  For up to the maximum number of\r\n            // contacts we allow per point per step, we verify that the contact\r\n            // normal of the Body that genenerated the contact makes physical sense\r\n            // by projecting a point back along that normal and seeing if it\r\n            // intersects the fixture generating the contact.\r\n            if (contact.index !== lastIndex) {\r\n                currentContacts = 0;\r\n                lastIndex = contact.index;\r\n            }\r\n            if (currentContacts++ > k_maxContactsPerPoint) {\r\n                // ++discarded;\r\n                return true;\r\n            }\r\n            // Project along inverse normal (as returned in the contact) to get the\r\n            // point to check.\r\n            ///b2Vec2 n = contact.normal;\r\n            let n = s_n.Copy(contact.normal);\r\n            // weight is 1-(inv(diameter) * distance)\r\n            ///n *= system.m_particleDiameter * (1 - contact.weight);\r\n            n.SelfMul(system.m_particleDiameter * (1 - contact.weight));\r\n            ///b2Vec2 pos = system.m_positionBuffer.data[contact.index] + n;\r\n            let pos = b2Vec2.AddVV(system.m_positionBuffer.data[contact.index], n, s_pos);\r\n            // pos is now a point projected back along the contact normal to the\r\n            // contact distance. If the surface makes sense for a contact, pos will\r\n            // now lie on or in the fixture generating\r\n            if (!contact.fixture.TestPoint(pos)) {\r\n                let childCount = contact.fixture.GetShape().GetChildCount();\r\n                for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n                    let normal = s_normal;\r\n                    let distance = contact.fixture.ComputeDistance(pos, normal, childIndex);\r\n                    if (distance < b2_linearSlop) {\r\n                        return false;\r\n                    }\r\n                }\r\n                // ++discarded;\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        this.m_bodyContactBuffer.count = std_remove_if(this.m_bodyContactBuffer.data, b2ParticleBodyContactRemovePredicate, this.m_bodyContactBuffer.count);\r\n    }\r\n    DetectStuckParticle(particle) {\r\n        // Detect stuck particles\r\n        //\r\n        // The basic algorithm is to allow the user to specify an optional\r\n        // threshold where we detect whenever a particle is contacting\r\n        // more than one fixture for more than threshold consecutive\r\n        // steps. This is considered to be \"stuck\", and these are put\r\n        // in a list the user can query per step, if enabled, to deal with\r\n        // such particles.\r\n        if (this.m_stuckThreshold <= 0) {\r\n            return;\r\n        }\r\n        // Get the state variables for this particle.\r\n        ///int32 * const consecutiveCount = &m_consecutiveContactStepsBuffer.data[particle];\r\n        ///int32 * const lastStep = &m_lastBodyContactStepBuffer.data[particle];\r\n        ///int32 * const bodyCount = &m_bodyContactCountBuffer.data[particle];\r\n        // This is only called when there is a body contact for this particle.\r\n        ///++(*bodyCount);\r\n        ++this.m_bodyContactCountBuffer.data[particle];\r\n        // We want to only trigger detection once per step, the first time we\r\n        // contact more than one fixture in a step for a given particle.\r\n        ///if (*bodyCount === 2)\r\n        if (this.m_bodyContactCountBuffer.data[particle] === 2) {\r\n            ///++(*consecutiveCount);\r\n            ++this.m_consecutiveContactStepsBuffer.data[particle];\r\n            ///if (*consecutiveCount > m_stuckThreshold)\r\n            if (this.m_consecutiveContactStepsBuffer.data[particle] > this.m_stuckThreshold) {\r\n                ///int32& newStuckParticle = m_stuckParticleBuffer.Append();\r\n                ///newStuckParticle = particle;\r\n                this.m_stuckParticleBuffer.data[this.m_stuckParticleBuffer.Append()] = particle;\r\n            }\r\n        }\r\n        ///*lastStep = m_timestamp;\r\n        this.m_lastBodyContactStepBuffer.data[particle] = this.m_timestamp;\r\n    }\r\n    /**\r\n     * Determine whether a particle index is valid.\r\n     */\r\n    ValidateParticleIndex(index) {\r\n        return index >= 0 && index < this.GetParticleCount() &&\r\n            index !== b2_invalidParticleIndex;\r\n    }\r\n    /**\r\n     * Get the time elapsed in\r\n     * b2ParticleSystemDef::lifetimeGranularity.\r\n     */\r\n    GetQuantizedTimeElapsed() {\r\n        ///return (int32)(m_timeElapsed >> 32);\r\n        return Math.floor(this.m_timeElapsed / 0x100000000);\r\n    }\r\n    /**\r\n     * Convert a lifetime in seconds to an expiration time.\r\n     */\r\n    LifetimeToExpirationTime(lifetime) {\r\n        ///return m_timeElapsed + (int64)((lifetime / m_def.lifetimeGranularity) * (float32)(1LL << 32));\r\n        return this.m_timeElapsed + Math.floor(((lifetime / this.m_def.lifetimeGranularity) * 0x100000000));\r\n    }\r\n    ForceCanBeApplied(flags) {\r\n        return !(flags & b2ParticleFlag.b2_wallParticle);\r\n    }\r\n    PrepareForceBuffer() {\r\n        if (!this.m_hasForce) {\r\n            ///memset(m_forceBuffer, 0, sizeof(*m_forceBuffer) * m_count);\r\n            for (let i = 0; i < this.m_count; i++) {\r\n                this.m_forceBuffer[i].SetZero();\r\n            }\r\n            this.m_hasForce = true;\r\n        }\r\n    }\r\n    IsRigidGroup(group) {\r\n        return (group !== null) && ((group.m_groupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0);\r\n    }\r\n    GetLinearVelocity(group, particleIndex, point, out) {\r\n        if (this.IsRigidGroup(group)) {\r\n            return group.GetLinearVelocityFromWorldPoint(point, out);\r\n        }\r\n        else {\r\n            ///return m_velocityBuffer.data[particleIndex];\r\n            return out.Copy(this.m_velocityBuffer.data[particleIndex]);\r\n        }\r\n    }\r\n    InitDampingParameter(invMass, invInertia, tangentDistance, mass, inertia, center, point, normal) {\r\n        ///*invMass = mass > 0 ? 1 / mass : 0;\r\n        invMass[0] = mass > 0 ? 1 / mass : 0;\r\n        ///*invInertia = inertia > 0 ? 1 / inertia : 0;\r\n        invInertia[0] = inertia > 0 ? 1 / inertia : 0;\r\n        ///*tangentDistance = b2Cross(point - center, normal);\r\n        tangentDistance[0] = b2Vec2.CrossVV(b2Vec2.SubVV(point, center, b2Vec2.s_t0), normal);\r\n    }\r\n    InitDampingParameterWithRigidGroupOrParticle(invMass, invInertia, tangentDistance, isRigidGroup, group, particleIndex, point, normal) {\r\n        if (isRigidGroup) {\r\n            this.InitDampingParameter(invMass, invInertia, tangentDistance, group.GetMass(), group.GetInertia(), group.GetCenter(), point, normal);\r\n        }\r\n        else {\r\n            let flags = this.m_flagsBuffer.data[particleIndex];\r\n            this.InitDampingParameter(invMass, invInertia, tangentDistance, flags & b2ParticleFlag.b2_wallParticle ? 0 : this.GetParticleMass(), 0, point, point, normal);\r\n        }\r\n    }\r\n    ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, normalVelocity) {\r\n        let invMass = invMassA + invInertiaA * tangentDistanceA * tangentDistanceA +\r\n            invMassB + invInertiaB * tangentDistanceB * tangentDistanceB;\r\n        return invMass > 0 ? normalVelocity / invMass : 0;\r\n    }\r\n    ApplyDamping(invMass, invInertia, tangentDistance, isRigidGroup, group, particleIndex, impulse, normal) {\r\n        if (isRigidGroup) {\r\n            ///group.m_linearVelocity += impulse * invMass * normal;\r\n            group.m_linearVelocity.SelfMulAdd(impulse * invMass, normal);\r\n            ///group.m_angularVelocity += impulse * tangentDistance * invInertia;\r\n            group.m_angularVelocity += impulse * tangentDistance * invInertia;\r\n        }\r\n        else {\r\n            ///m_velocityBuffer.data[particleIndex] += impulse * invMass * normal;\r\n            this.m_velocityBuffer.data[particleIndex].SelfMulAdd(impulse * invMass, normal);\r\n        }\r\n    }\r\n}\r\nb2ParticleSystem.xTruncBits = 12;\r\nb2ParticleSystem.yTruncBits = 12;\r\nb2ParticleSystem.tagBits = 8 * 4; // 8u * sizeof(uint32);\r\nb2ParticleSystem.yOffset = 1 << (b2ParticleSystem.yTruncBits - 1);\r\nb2ParticleSystem.yShift = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits;\r\nb2ParticleSystem.xShift = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits - b2ParticleSystem.xTruncBits;\r\nb2ParticleSystem.xScale = 1 << b2ParticleSystem.xShift;\r\nb2ParticleSystem.xOffset = b2ParticleSystem.xScale * (1 << (b2ParticleSystem.xTruncBits - 1));\r\nb2ParticleSystem.yMask = ((1 << b2ParticleSystem.yTruncBits) - 1) << b2ParticleSystem.yShift;\r\nb2ParticleSystem.xMask = ~b2ParticleSystem.yMask;\r\nb2ParticleSystem.DestroyParticlesInShape_s_aabb = new b2AABB();\r\nb2ParticleSystem.CreateParticleGroup_s_transform = new b2Transform();\r\nb2ParticleSystem.ComputeCollisionEnergy_s_v = new b2Vec2();\r\nb2ParticleSystem.QueryShapeAABB_s_aabb = new b2AABB();\r\nb2ParticleSystem.QueryPointAABB_s_aabb = new b2AABB();\r\nb2ParticleSystem.RayCast_s_aabb = new b2AABB();\r\nb2ParticleSystem.RayCast_s_p = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_v = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_n = new b2Vec2();\r\nb2ParticleSystem.RayCast_s_point = new b2Vec2();\r\n/**\r\n * All particle types that require creating pairs\r\n */\r\nb2ParticleSystem.k_pairFlags = b2ParticleFlag.b2_springParticle;\r\n/**\r\n * All particle types that require creating triads\r\n */\r\nb2ParticleSystem.k_triadFlags = b2ParticleFlag.b2_elasticParticle;\r\n/**\r\n * All particle types that do not produce dynamic pressure\r\n */\r\nb2ParticleSystem.k_noPressureFlags = b2ParticleFlag.b2_powderParticle | b2ParticleFlag.b2_tensileParticle;\r\n/**\r\n * All particle types that apply extra damping force with bodies\r\n */\r\nb2ParticleSystem.k_extraDampingFlags = b2ParticleFlag.b2_staticPressureParticle;\r\nb2ParticleSystem.k_barrierWallFlags = b2ParticleFlag.b2_barrierParticle | b2ParticleFlag.b2_wallParticle;\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge = new b2EdgeShape();\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d = new b2Vec2();\r\nb2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p = new b2Vec2();\r\nb2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb = new b2AABB();\r\nb2ParticleSystem.CreateParticlesFillShapeForGroup_s_p = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dab = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dbc = new b2Vec2();\r\nb2ParticleSystem.UpdatePairsAndTriads_s_dca = new b2Vec2();\r\nb2ParticleSystem.AddContact_s_d = new b2Vec2();\r\nb2ParticleSystem.UpdateBodyContacts_s_aabb = new b2AABB();\r\nb2ParticleSystem.Solve_s_subStep = new b2TimeStep();\r\nb2ParticleSystem.SolveCollision_s_aabb = new b2AABB();\r\nb2ParticleSystem.SolveGravity_s_gravity = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_aabb = new b2AABB();\r\nb2ParticleSystem.SolveBarrier_s_va = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vb = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_pba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vc = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_pca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_vca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_qba = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_qca = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_dv = new b2Vec2();\r\nb2ParticleSystem.SolveBarrier_s_f = new b2Vec2();\r\nb2ParticleSystem.SolvePressure_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveDamping_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_t0 = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_t1 = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_p = new b2Vec2();\r\nb2ParticleSystem.SolveRigidDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveExtraDamping_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveExtraDamping_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRigid_s_position = new b2Vec2();\r\nb2ParticleSystem.SolveRigid_s_rotation = new b2Rot();\r\nb2ParticleSystem.SolveRigid_s_transform = new b2Transform();\r\nb2ParticleSystem.SolveRigid_s_velocityTransform = new b2Transform();\r\nb2ParticleSystem.SolveElastic_s_pa = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_pb = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_pc = new b2Vec2();\r\nb2ParticleSystem.SolveElastic_s_r = new b2Rot();\r\nb2ParticleSystem.SolveElastic_s_t0 = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_pa = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_pb = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_d = new b2Vec2();\r\nb2ParticleSystem.SolveSpring_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_weightedNormal = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_s = new b2Vec2();\r\nb2ParticleSystem.SolveTensile_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveViscous_s_v = new b2Vec2();\r\nb2ParticleSystem.SolveViscous_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveRepulsive_s_f = new b2Vec2();\r\nb2ParticleSystem.SolvePowder_s_f = new b2Vec2();\r\nb2ParticleSystem.SolveSolid_s_f = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_n = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_pos = new b2Vec2();\r\nb2ParticleSystem.RemoveSpuriousBodyContacts_s_normal = new b2Vec2();\r\n(function (b2ParticleSystem) {\r\n    class UserOverridableBuffer {\r\n        constructor() {\r\n            this.data = null;\r\n            this.userSuppliedCapacity = 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.UserOverridableBuffer = UserOverridableBuffer;\r\n    class Proxy {\r\n        constructor() {\r\n            this.index = b2_invalidParticleIndex;\r\n            this.tag = 0;\r\n        }\r\n        static CompareProxyProxy(a, b) {\r\n            return a.tag < b.tag;\r\n        }\r\n        static CompareTagProxy(a, b) {\r\n            return a < b.tag;\r\n        }\r\n        static CompareProxyTag(a, b) {\r\n            return a.tag < b;\r\n        }\r\n    }\r\n    b2ParticleSystem.Proxy = Proxy;\r\n    class InsideBoundsEnumerator {\r\n        /**\r\n         * InsideBoundsEnumerator enumerates all particles inside the\r\n         * given bounds.\r\n         *\r\n         * Construct an enumerator with bounds of tags and a range of\r\n         * proxies.\r\n         */\r\n        constructor(system, lower, upper, first, last) {\r\n            this.m_system = system;\r\n            this.m_xLower = (lower & b2ParticleSystem.xMask) >>> 0;\r\n            this.m_xUpper = (upper & b2ParticleSystem.xMask) >>> 0;\r\n            this.m_yLower = (lower & b2ParticleSystem.yMask) >>> 0;\r\n            this.m_yUpper = (upper & b2ParticleSystem.yMask) >>> 0;\r\n            this.m_first = first;\r\n            this.m_last = last;\r\n            b2Assert(this.m_first <= this.m_last);\r\n        }\r\n        /**\r\n         * Get index of the next particle. Returns\r\n         * b2_invalidParticleIndex if there are no more particles.\r\n         */\r\n        GetNext() {\r\n            while (this.m_first < this.m_last) {\r\n                let xTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.xMask) >>> 0;\r\n                // #if B2_ASSERT_ENABLED\r\n                ///let yTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.yMask) >>> 0;\r\n                ///b2Assert(yTag >= this.m_yLower);\r\n                ///b2Assert(yTag <= this.m_yUpper);\r\n                // #endif\r\n                if (xTag >= this.m_xLower && xTag <= this.m_xUpper) {\r\n                    return (this.m_system.m_proxyBuffer.data[this.m_first++]).index;\r\n                }\r\n                this.m_first++;\r\n            }\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.InsideBoundsEnumerator = InsideBoundsEnumerator;\r\n    class ParticleListNode {\r\n        constructor() {\r\n            /**\r\n             * The head of the list.\r\n             */\r\n            this.list = null;\r\n            /**\r\n             * The next node in the list.\r\n             */\r\n            this.next = null;\r\n            /**\r\n             * Number of entries in the list. Valid only for the node at the\r\n             * head of the list.\r\n             */\r\n            this.count = 0;\r\n            /**\r\n             * Particle index.\r\n             */\r\n            this.index = 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.ParticleListNode = ParticleListNode;\r\n    /**\r\n     * @constructor\r\n     */\r\n    class FixedSetAllocator {\r\n        Allocate(itemSize, count) {\r\n            // TODO\r\n            return count;\r\n        }\r\n        Clear() {\r\n            // TODO\r\n        }\r\n        GetCount() {\r\n            // TODO\r\n            return 0;\r\n        }\r\n        Invalidate(itemIndex) {\r\n            // TODO\r\n        }\r\n        GetValidBuffer() {\r\n            // TODO\r\n            return [];\r\n        }\r\n        GetBuffer() {\r\n            // TODO\r\n            return [];\r\n        }\r\n        SetCount(count) {\r\n            // TODO\r\n        }\r\n    }\r\n    b2ParticleSystem.FixedSetAllocator = FixedSetAllocator;\r\n    class FixtureParticle {\r\n        constructor(fixture, particle) {\r\n            this.second = b2_invalidParticleIndex;\r\n            this.first = fixture;\r\n            this.second = particle;\r\n        }\r\n    }\r\n    b2ParticleSystem.FixtureParticle = FixtureParticle;\r\n    class FixtureParticleSet extends b2ParticleSystem.FixedSetAllocator {\r\n        Initialize(bodyContactBuffer, flagsBuffer) {\r\n            // TODO\r\n        }\r\n        Find(pair) {\r\n            // TODO\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.FixtureParticleSet = FixtureParticleSet;\r\n    class ParticlePair {\r\n        constructor(particleA, particleB) {\r\n            this.first = b2_invalidParticleIndex;\r\n            this.second = b2_invalidParticleIndex;\r\n            this.first = particleA;\r\n            this.second = particleB;\r\n        }\r\n    }\r\n    b2ParticleSystem.ParticlePair = ParticlePair;\r\n    class b2ParticlePairSet extends b2ParticleSystem.FixedSetAllocator {\r\n        Initialize(contactBuffer, flagsBuffer) {\r\n            // TODO\r\n        }\r\n        Find(pair) {\r\n            // TODO\r\n            return b2_invalidParticleIndex;\r\n        }\r\n    }\r\n    b2ParticleSystem.b2ParticlePairSet = b2ParticlePairSet;\r\n    class ConnectionFilter {\r\n        /**\r\n         * Is the particle necessary for connection?\r\n         * A pair or a triad should contain at least one 'necessary'\r\n         * particle.\r\n         */\r\n        IsNecessary(index) {\r\n            return true;\r\n        }\r\n        /**\r\n         * An additional condition for creating a pair.\r\n         */\r\n        ShouldCreatePair(a, b) {\r\n            return true;\r\n        }\r\n        /**\r\n         * An additional condition for creating a triad.\r\n         */\r\n        ShouldCreateTriad(a, b, c) {\r\n            return true;\r\n        }\r\n    }\r\n    b2ParticleSystem.ConnectionFilter = ConnectionFilter;\r\n    class DestroyParticlesInShapeCallback extends b2QueryCallback {\r\n        constructor(system, shape, xf, callDestructionListener) {\r\n            super();\r\n            this.m_callDestructionListener = false;\r\n            this.m_destroyed = 0;\r\n            this.m_system = system;\r\n            this.m_shape = shape;\r\n            this.m_xf = xf;\r\n            this.m_callDestructionListener = callDestructionListener;\r\n            this.m_destroyed = 0;\r\n        }\r\n        ReportFixture(fixture) {\r\n            return false;\r\n        }\r\n        ReportParticle(particleSystem, index) {\r\n            if (particleSystem !== this.m_system)\r\n                return false;\r\n            b2Assert(index >= 0 && index < this.m_system.m_count);\r\n            if (this.m_shape.TestPoint(this.m_xf, this.m_system.m_positionBuffer.data[index])) {\r\n                this.m_system.DestroyParticle(index, this.m_callDestructionListener);\r\n                this.m_destroyed++;\r\n            }\r\n            return true;\r\n        }\r\n        Destroyed() {\r\n            return this.m_destroyed;\r\n        }\r\n    }\r\n    b2ParticleSystem.DestroyParticlesInShapeCallback = DestroyParticlesInShapeCallback;\r\n    class JoinParticleGroupsFilter extends b2ParticleSystem.ConnectionFilter {\r\n        constructor(threshold) {\r\n            super();\r\n            this.m_threshold = 0;\r\n            this.m_threshold = threshold;\r\n        }\r\n        /**\r\n         * An additional condition for creating a pair.\r\n         */\r\n        ShouldCreatePair(a, b) {\r\n            return (a < this.m_threshold && this.m_threshold <= b) ||\r\n                (b < this.m_threshold && this.m_threshold <= a);\r\n        }\r\n        /**\r\n         * An additional condition for creating a triad.\r\n         */\r\n        ShouldCreateTriad(a, b, c) {\r\n            return (a < this.m_threshold || b < this.m_threshold || c < this.m_threshold) &&\r\n                (this.m_threshold <= a || this.m_threshold <= b || this.m_threshold <= c);\r\n        }\r\n    }\r\n    b2ParticleSystem.JoinParticleGroupsFilter = JoinParticleGroupsFilter;\r\n    class CompositeShape extends b2Shape {\r\n        constructor(shapes, shapeCount = shapes.length) {\r\n            super(b2ShapeType.e_unknown, 0);\r\n            this.m_shapeCount = 0;\r\n            this.m_shapes = shapes;\r\n            this.m_shapeCount = shapeCount;\r\n        }\r\n        Clone() {\r\n            b2Assert(false);\r\n            throw new Error();\r\n        }\r\n        GetChildCount() {\r\n            return 1;\r\n        }\r\n        /**\r\n         * @see b2Shape::TestPoint\r\n         */\r\n        TestPoint(xf, p) {\r\n            for (let i = 0; i < this.m_shapeCount; i++) {\r\n                if (this.m_shapes[i].TestPoint(xf, p)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeDistance\r\n         */\r\n        ComputeDistance(xf, p, normal, childIndex) {\r\n            b2Assert(false);\r\n            return 0;\r\n        }\r\n        /**\r\n         * Implement b2Shape.\r\n         */\r\n        RayCast(output, input, xf, childIndex) {\r\n            b2Assert(false);\r\n            return false;\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeAABB\r\n         */\r\n        ComputeAABB(aabb, xf, childIndex) {\r\n            let s_subaabb = new b2AABB();\r\n            aabb.lowerBound.x = +b2_maxFloat;\r\n            aabb.lowerBound.y = +b2_maxFloat;\r\n            aabb.upperBound.x = -b2_maxFloat;\r\n            aabb.upperBound.y = -b2_maxFloat;\r\n            b2Assert(childIndex === 0);\r\n            for (let i = 0; i < this.m_shapeCount; i++) {\r\n                let childCount = this.m_shapes[i].GetChildCount();\r\n                for (let j = 0; j < childCount; j++) {\r\n                    let subaabb = s_subaabb;\r\n                    this.m_shapes[i].ComputeAABB(subaabb, xf, j);\r\n                    aabb.Combine1(subaabb);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @see b2Shape::ComputeMass\r\n         */\r\n        ComputeMass(massData, density) {\r\n            b2Assert(false);\r\n        }\r\n        SetupDistanceProxy(proxy, index) {\r\n            b2Assert(false);\r\n        }\r\n        ComputeSubmergedArea(normal, offset, xf, c) {\r\n            b2Assert(false);\r\n            return 0;\r\n        }\r\n        Dump(log) {\r\n            b2Assert(false);\r\n        }\r\n    }\r\n    b2ParticleSystem.CompositeShape = CompositeShape;\r\n    class ReactiveFilter extends b2ParticleSystem.ConnectionFilter {\r\n        constructor(flagsBuffer) {\r\n            super();\r\n            this.m_flagsBuffer = flagsBuffer;\r\n        }\r\n        IsNecessary(index) {\r\n            return (this.m_flagsBuffer.data[index] & b2ParticleFlag.b2_reactiveParticle) !== 0;\r\n        }\r\n    }\r\n    b2ParticleSystem.ReactiveFilter = ReactiveFilter;\r\n    class UpdateBodyContactsCallback extends b2FixtureParticleQueryCallback {\r\n        constructor(system, contactFilter) {\r\n            super(system); // base class constructor\r\n            this.m_contactFilter = contactFilter;\r\n        }\r\n        ShouldCollideFixtureParticle(fixture, particleSystem, particleIndex) {\r\n            // Call the contact filter if it's set, to determine whether to\r\n            // filter this contact.  Returns true if contact calculations should\r\n            // be performed, false otherwise.\r\n            if (this.m_contactFilter) {\r\n                let flags = this.m_system.GetFlagsBuffer();\r\n                if (flags[particleIndex] & b2ParticleFlag.b2_fixtureContactFilterParticle) {\r\n                    return this.m_contactFilter.ShouldCollideFixtureParticle(fixture, this.m_system, particleIndex);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        ReportFixtureAndParticle(fixture, childIndex, a) {\r\n            let s_n = b2ParticleSystem.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n;\r\n            let s_rp = b2ParticleSystem.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp;\r\n            let ap = this.m_system.m_positionBuffer.data[a];\r\n            let n = s_n;\r\n            let d = fixture.ComputeDistance(ap, n, childIndex);\r\n            if (d < this.m_system.m_particleDiameter && this.ShouldCollideFixtureParticle(fixture, this.m_system, a)) {\r\n                let b = fixture.GetBody();\r\n                let bp = b.GetWorldCenter();\r\n                let bm = b.GetMass();\r\n                let bI = b.GetInertia() - bm * b.GetLocalCenter().LengthSquared();\r\n                let invBm = bm > 0 ? 1 / bm : 0;\r\n                let invBI = bI > 0 ? 1 / bI : 0;\r\n                let invAm = this.m_system.m_flagsBuffer.data[a] &\r\n                    b2ParticleFlag.b2_wallParticle ? 0 : this.m_system.GetParticleInvMass();\r\n                ///b2Vec2 rp = ap - bp;\r\n                let rp = b2Vec2.SubVV(ap, bp, s_rp);\r\n                let rpn = b2Vec2.CrossVV(rp, n);\r\n                let invM = invAm + invBm + invBI * rpn * rpn;\r\n                ///b2ParticleBodyContact& contact = m_system.m_bodyContactBuffer.Append();\r\n                let contact = this.m_system.m_bodyContactBuffer.data[this.m_system.m_bodyContactBuffer.Append()];\r\n                contact.index = a;\r\n                contact.body = b;\r\n                contact.fixture = fixture;\r\n                contact.weight = 1 - d * this.m_system.m_inverseDiameter;\r\n                ///contact.normal = -n;\r\n                contact.normal.Copy(n.SelfNeg());\r\n                contact.mass = invM > 0 ? 1 / invM : 0;\r\n                this.m_system.DetectStuckParticle(a);\r\n            }\r\n        }\r\n    }\r\n    UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n = new b2Vec2();\r\n    UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp = new b2Vec2();\r\n    b2ParticleSystem.UpdateBodyContactsCallback = UpdateBodyContactsCallback;\r\n    class SolveCollisionCallback extends b2FixtureParticleQueryCallback {\r\n        constructor(system, step) {\r\n            super(system); // base class constructor\r\n            this.m_step = step;\r\n        }\r\n        ReportFixtureAndParticle(fixture, childIndex, a) {\r\n            let s_p1 = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_p1;\r\n            let s_output = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_output;\r\n            let s_input = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_input;\r\n            let s_p = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_p;\r\n            let s_v = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_v;\r\n            let s_f = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_f;\r\n            let body = fixture.GetBody();\r\n            let ap = this.m_system.m_positionBuffer.data[a];\r\n            let av = this.m_system.m_velocityBuffer.data[a];\r\n            let output = s_output;\r\n            let input = s_input;\r\n            if (this.m_system.m_iterationIndex === 0) {\r\n                // Put 'ap' in the local space of the previous frame\r\n                ///b2Vec2 p1 = b2MulT(body.m_xf0, ap);\r\n                let p1 = b2Transform.MulTXV(body.m_xf0, ap, s_p1);\r\n                if (fixture.GetShape().GetType() === b2ShapeType.e_circleShape) {\r\n                    // Make relative to the center of the circle\r\n                    ///p1 -= body.GetLocalCenter();\r\n                    p1.SelfSub(body.GetLocalCenter());\r\n                    // Re-apply rotation about the center of the circle\r\n                    ///p1 = b2Mul(body.m_xf0.q, p1);\r\n                    b2Rot.MulRV(body.m_xf0.q, p1, p1);\r\n                    // Subtract rotation of the current frame\r\n                    ///p1 = b2MulT(body.m_xf.q, p1);\r\n                    b2Rot.MulTRV(body.m_xf.q, p1, p1);\r\n                    // Return to local space\r\n                    ///p1 += body.GetLocalCenter();\r\n                    p1.SelfAdd(body.GetLocalCenter());\r\n                }\r\n                // Return to global space and apply rotation of current frame\r\n                ///input.p1 = b2Mul(body.m_xf, p1);\r\n                b2Transform.MulXV(body.m_xf, p1, input.p1);\r\n            }\r\n            else {\r\n                ///input.p1 = ap;\r\n                input.p1.Copy(ap);\r\n            }\r\n            ///input.p2 = ap + m_step.dt * av;\r\n            b2Vec2.AddVMulSV(ap, this.m_step.dt, av, input.p2);\r\n            input.maxFraction = 1;\r\n            if (fixture.RayCast(output, input, childIndex)) {\r\n                let n = output.normal;\r\n                ///b2Vec2 p = (1 - output.fraction) * input.p1 + output.fraction * input.p2 + b2_linearSlop * n;\r\n                let p = s_p;\r\n                p.x = (1 - output.fraction) * input.p1.x + output.fraction * input.p2.x + b2_linearSlop * n.x;\r\n                p.y = (1 - output.fraction) * input.p1.y + output.fraction * input.p2.y + b2_linearSlop * n.y;\r\n                ///b2Vec2 v = m_step.inv_dt * (p - ap);\r\n                let v = s_v;\r\n                v.x = this.m_step.inv_dt * (p.x - ap.x);\r\n                v.y = this.m_step.inv_dt * (p.y - ap.y);\r\n                ///m_system.m_velocityBuffer.data[a] = v;\r\n                this.m_system.m_velocityBuffer.data[a].Copy(v);\r\n                ///b2Vec2 f = m_step.inv_dt * m_system.GetParticleMass() * (av - v);\r\n                let f = s_f;\r\n                f.x = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.x - v.x);\r\n                f.y = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.y - v.y);\r\n                this.m_system.ParticleApplyForce(a, f);\r\n            }\r\n        }\r\n        ReportParticle(system, index) {\r\n            return false;\r\n        }\r\n    }\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_p1 = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_output = new b2RayCastOutput();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_input = new b2RayCastInput();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_p = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_v = new b2Vec2();\r\n    SolveCollisionCallback.ReportFixtureAndParticle_s_f = new b2Vec2();\r\n    b2ParticleSystem.SolveCollisionCallback = SolveCollisionCallback;\r\n})(b2ParticleSystem || (b2ParticleSystem = {}));\r\n// #endif\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_epsilon, b2_linearSlop, b2_maxSubSteps, b2_maxTOIContacts } from \"../Common/b2Settings\";\r\nimport { b2Min, b2Vec2, b2Transform, b2Sweep } from \"../Common/b2Math\";\r\nimport { b2Timer } from \"../Common/b2Timer\";\r\nimport { b2Color, b2DrawFlags } from \"../Common/b2Draw\";\r\nimport { b2AABB, b2RayCastInput, b2RayCastOutput, b2TestOverlapShape } from \"../Collision/b2Collision\";\r\nimport { b2TimeOfImpact, b2TOIInput, b2TOIOutput, b2TOIOutputState } from \"../Collision/b2TimeOfImpact\";\r\nimport { b2ShapeType } from \"../Collision/Shapes/b2Shape\";\r\nimport { b2JointType } from \"./Joints/b2Joint\";\r\nimport { b2JointFactory } from \"./Joints/b2JointFactory\";\r\nimport { b2Body, b2BodyType } from \"./b2Body\";\r\nimport { b2ContactManager } from \"./b2ContactManager\";\r\nimport { b2Island } from \"./b2Island\";\r\nimport { b2Profile, b2TimeStep } from \"./b2TimeStep\";\r\nimport { b2QueryCallback } from \"./b2WorldCallbacks\";\r\nimport { b2RayCastCallback } from \"./b2WorldCallbacks\";\r\n// #if B2_ENABLE_PARTICLE\r\nimport { b2_maxFloat } from \"../Common/b2Settings\";\r\nimport { b2CalculateParticleIterations } from \"../Particle/b2Particle\";\r\nimport { b2ParticleSystem } from \"../Particle/b2ParticleSystem\";\r\n// #endif\r\n/// The world class manages all physics entities, dynamic simulation,\r\n/// and asynchronous queries. The world also contains efficient memory\r\n/// management facilities.\r\nexport class b2World {\r\n    // #endif\r\n    /// Construct a world object.\r\n    /// @param gravity the world gravity vector.\r\n    constructor(gravity) {\r\n        // b2BlockAllocator m_blockAllocator;\r\n        // b2StackAllocator m_stackAllocator;\r\n        this.m_newFixture = false;\r\n        this.m_locked = false;\r\n        this.m_clearForces = true;\r\n        this.m_contactManager = new b2ContactManager();\r\n        this.m_bodyList = null;\r\n        this.m_jointList = null;\r\n        // #if B2_ENABLE_PARTICLE\r\n        this.m_particleSystemList = null;\r\n        // #endif\r\n        this.m_bodyCount = 0;\r\n        this.m_jointCount = 0;\r\n        this.m_gravity = new b2Vec2();\r\n        this.m_allowSleep = true;\r\n        this.m_destructionListener = null;\r\n        this.m_debugDraw = null;\r\n        // This is used to compute the time step ratio to\r\n        // support a variable time step.\r\n        this.m_inv_dt0 = 0;\r\n        // These are for debugging the solver.\r\n        this.m_warmStarting = true;\r\n        this.m_continuousPhysics = true;\r\n        this.m_subStepping = false;\r\n        this.m_stepComplete = true;\r\n        this.m_profile = new b2Profile();\r\n        this.m_island = new b2Island();\r\n        this.s_stack = [];\r\n        // #if B2_ENABLE_CONTROLLER\r\n        this.m_controllerList = null;\r\n        this.m_controllerCount = 0;\r\n        this.m_gravity.Copy(gravity);\r\n    }\r\n    /// Register a destruction listener. The listener is owned by you and must\r\n    /// remain in scope.\r\n    SetDestructionListener(listener) {\r\n        this.m_destructionListener = listener;\r\n    }\r\n    /// Register a contact filter to provide specific control over collision.\r\n    /// Otherwise the default filter is used (b2_defaultFilter). The listener is\r\n    /// owned by you and must remain in scope.\r\n    SetContactFilter(filter) {\r\n        this.m_contactManager.m_contactFilter = filter;\r\n    }\r\n    /// Register a contact event listener. The listener is owned by you and must\r\n    /// remain in scope.\r\n    SetContactListener(listener) {\r\n        this.m_contactManager.m_contactListener = listener;\r\n    }\r\n    /// Register a routine for debug drawing. The debug draw functions are called\r\n    /// inside with b2World::DrawDebugData method. The debug draw object is owned\r\n    /// by you and must remain in scope.\r\n    SetDebugDraw(debugDraw) {\r\n        this.m_debugDraw = debugDraw;\r\n    }\r\n    /// Create a rigid body given a definition. No reference to the definition\r\n    /// is retained.\r\n    /// @warning This function is locked during callbacks.\r\n    CreateBody(def) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return null;\r\n        }\r\n        const b = new b2Body(def, this);\r\n        // Add to world doubly linked list.\r\n        b.m_prev = null;\r\n        b.m_next = this.m_bodyList;\r\n        if (this.m_bodyList) {\r\n            this.m_bodyList.m_prev = b;\r\n        }\r\n        this.m_bodyList = b;\r\n        ++this.m_bodyCount;\r\n        return b;\r\n    }\r\n    /// Destroy a rigid body given a definition. No reference to the definition\r\n    /// is retained. This function is locked during callbacks.\r\n    /// @warning This automatically deletes all associated shapes and joints.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyBody(b) {\r\n        ///b2Assert(this.m_bodyCount > 0);\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return;\r\n        }\r\n        // Delete the attached joints.\r\n        let je = b.m_jointList;\r\n        while (je) {\r\n            const je0 = je;\r\n            je = je.next;\r\n            if (this.m_destructionListener) {\r\n                this.m_destructionListener.SayGoodbyeJoint(je0.joint);\r\n            }\r\n            this.DestroyJoint(je0.joint);\r\n            b.m_jointList = je;\r\n        }\r\n        b.m_jointList = null;\r\n        // #if B2_ENABLE_CONTROLLER\r\n        // @see b2Controller list\r\n        let coe = b.m_controllerList;\r\n        while (coe) {\r\n            const coe0 = coe;\r\n            coe = coe.nextController;\r\n            coe0.controller.RemoveBody(b);\r\n        }\r\n        // #endif\r\n        // Delete the attached contacts.\r\n        let ce = b.m_contactList;\r\n        while (ce) {\r\n            const ce0 = ce;\r\n            ce = ce.next;\r\n            this.m_contactManager.Destroy(ce0.contact);\r\n        }\r\n        b.m_contactList = null;\r\n        // Delete the attached fixtures. This destroys broad-phase proxies.\r\n        let f = b.m_fixtureList;\r\n        while (f) {\r\n            const f0 = f;\r\n            f = f.m_next;\r\n            if (this.m_destructionListener) {\r\n                this.m_destructionListener.SayGoodbyeFixture(f0);\r\n            }\r\n            f0.DestroyProxies(this.m_contactManager.m_broadPhase);\r\n            f0.Destroy();\r\n            b.m_fixtureList = f;\r\n            b.m_fixtureCount -= 1;\r\n        }\r\n        b.m_fixtureList = null;\r\n        b.m_fixtureCount = 0;\r\n        // Remove world body list.\r\n        if (b.m_prev) {\r\n            b.m_prev.m_next = b.m_next;\r\n        }\r\n        if (b.m_next) {\r\n            b.m_next.m_prev = b.m_prev;\r\n        }\r\n        if (b === this.m_bodyList) {\r\n            this.m_bodyList = b.m_next;\r\n        }\r\n        --this.m_bodyCount;\r\n    }\r\n    /// Create a joint to constrain bodies together. No reference to the definition\r\n    /// is retained. This may cause the connected bodies to cease colliding.\r\n    /// @warning This function is locked during callbacks.\r\n    CreateJoint(def) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return null;\r\n        }\r\n        const j = b2JointFactory.Create(def, null);\r\n        // Connect to the world list.\r\n        j.m_prev = null;\r\n        j.m_next = this.m_jointList;\r\n        if (this.m_jointList) {\r\n            this.m_jointList.m_prev = j;\r\n        }\r\n        this.m_jointList = j;\r\n        ++this.m_jointCount;\r\n        // Connect to the bodies' doubly linked lists.\r\n        // j.m_edgeA.joint = j;\r\n        // j.m_edgeA.other = j.m_bodyB;\r\n        j.m_edgeA.prev = null;\r\n        j.m_edgeA.next = j.m_bodyA.m_jointList;\r\n        if (j.m_bodyA.m_jointList)\r\n            j.m_bodyA.m_jointList.prev = j.m_edgeA;\r\n        j.m_bodyA.m_jointList = j.m_edgeA;\r\n        // j.m_edgeB.joint = j;\r\n        // j.m_edgeB.other = j.m_bodyA;\r\n        j.m_edgeB.prev = null;\r\n        j.m_edgeB.next = j.m_bodyB.m_jointList;\r\n        if (j.m_bodyB.m_jointList)\r\n            j.m_bodyB.m_jointList.prev = j.m_edgeB;\r\n        j.m_bodyB.m_jointList = j.m_edgeB;\r\n        const bodyA = def.bodyA;\r\n        const bodyB = def.bodyB;\r\n        // If the joint prevents collisions, then flag any contacts for filtering.\r\n        if (!def.collideConnected) {\r\n            let edge = bodyB.GetContactList();\r\n            while (edge) {\r\n                if (edge.other === bodyA) {\r\n                    // Flag the contact for filtering at the next time step (where either\r\n                    // body is awake).\r\n                    edge.contact.FlagForFiltering();\r\n                }\r\n                edge = edge.next;\r\n            }\r\n        }\r\n        // Note: creating a joint doesn't wake the bodies.\r\n        return j;\r\n    }\r\n    /// Destroy a joint. This may cause the connected bodies to begin colliding.\r\n    /// @warning This function is locked during callbacks.\r\n    DestroyJoint(j) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return;\r\n        }\r\n        const collideConnected = j.m_collideConnected;\r\n        // Remove from the doubly linked list.\r\n        if (j.m_prev) {\r\n            j.m_prev.m_next = j.m_next;\r\n        }\r\n        if (j.m_next) {\r\n            j.m_next.m_prev = j.m_prev;\r\n        }\r\n        if (j === this.m_jointList) {\r\n            this.m_jointList = j.m_next;\r\n        }\r\n        // Disconnect from island graph.\r\n        const bodyA = j.m_bodyA;\r\n        const bodyB = j.m_bodyB;\r\n        // Wake up connected bodies.\r\n        bodyA.SetAwake(true);\r\n        bodyB.SetAwake(true);\r\n        // Remove from body 1.\r\n        if (j.m_edgeA.prev) {\r\n            j.m_edgeA.prev.next = j.m_edgeA.next;\r\n        }\r\n        if (j.m_edgeA.next) {\r\n            j.m_edgeA.next.prev = j.m_edgeA.prev;\r\n        }\r\n        if (j.m_edgeA === bodyA.m_jointList) {\r\n            bodyA.m_jointList = j.m_edgeA.next;\r\n        }\r\n        j.m_edgeA.prev = null;\r\n        j.m_edgeA.next = null;\r\n        // Remove from body 2\r\n        if (j.m_edgeB.prev) {\r\n            j.m_edgeB.prev.next = j.m_edgeB.next;\r\n        }\r\n        if (j.m_edgeB.next) {\r\n            j.m_edgeB.next.prev = j.m_edgeB.prev;\r\n        }\r\n        if (j.m_edgeB === bodyB.m_jointList) {\r\n            bodyB.m_jointList = j.m_edgeB.next;\r\n        }\r\n        j.m_edgeB.prev = null;\r\n        j.m_edgeB.next = null;\r\n        b2JointFactory.Destroy(j, null);\r\n        ///b2Assert(this.m_jointCount > 0);\r\n        --this.m_jointCount;\r\n        // If the joint prevents collisions, then flag any contacts for filtering.\r\n        if (!collideConnected) {\r\n            let edge = bodyB.GetContactList();\r\n            while (edge) {\r\n                if (edge.other === bodyA) {\r\n                    // Flag the contact for filtering at the next time step (where either\r\n                    // body is awake).\r\n                    edge.contact.FlagForFiltering();\r\n                }\r\n                edge = edge.next;\r\n            }\r\n        }\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    CreateParticleSystem(def) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return null;\r\n        }\r\n        const p = new b2ParticleSystem(def, this);\r\n        // Add to world doubly linked list.\r\n        p.m_prev = null;\r\n        p.m_next = this.m_particleSystemList;\r\n        if (this.m_particleSystemList) {\r\n            this.m_particleSystemList.m_prev = p;\r\n        }\r\n        this.m_particleSystemList = p;\r\n        return p;\r\n    }\r\n    DestroyParticleSystem(p) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return;\r\n        }\r\n        // Remove world particleSystem list.\r\n        if (p.m_prev) {\r\n            p.m_prev.m_next = p.m_next;\r\n        }\r\n        if (p.m_next) {\r\n            p.m_next.m_prev = p.m_prev;\r\n        }\r\n        if (p === this.m_particleSystemList) {\r\n            this.m_particleSystemList = p.m_next;\r\n        }\r\n    }\r\n    CalculateReasonableParticleIterations(timeStep) {\r\n        if (this.m_particleSystemList === null) {\r\n            return 1;\r\n        }\r\n        function GetSmallestRadius(world) {\r\n            let smallestRadius = b2_maxFloat;\r\n            for (let system = world.GetParticleSystemList(); system !== null; system = system.m_next) {\r\n                smallestRadius = b2Min(smallestRadius, system.GetRadius());\r\n            }\r\n            return smallestRadius;\r\n        }\r\n        // Use the smallest radius, since that represents the worst-case.\r\n        return b2CalculateParticleIterations(this.m_gravity.Length(), GetSmallestRadius(this), timeStep);\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    Step(dt, velocityIterations, positionIterations, particleIterations = this.CalculateReasonableParticleIterations(dt)) {\r\n        // #else\r\n        // public Step(dt: number, velocityIterations: number, positionIterations: number): void {\r\n        // #endif\r\n        const stepTimer = b2World.Step_s_stepTimer.Reset();\r\n        // If new fixtures were added, we need to find the new contacts.\r\n        if (this.m_newFixture) {\r\n            this.m_contactManager.FindNewContacts();\r\n            this.m_newFixture = false;\r\n        }\r\n        this.m_locked = true;\r\n        const step = b2World.Step_s_step;\r\n        step.dt = dt;\r\n        step.velocityIterations = velocityIterations;\r\n        step.positionIterations = positionIterations;\r\n        // #if B2_ENABLE_PARTICLE\r\n        step.particleIterations = particleIterations;\r\n        // #endif\r\n        if (dt > 0) {\r\n            step.inv_dt = 1 / dt;\r\n        }\r\n        else {\r\n            step.inv_dt = 0;\r\n        }\r\n        step.dtRatio = this.m_inv_dt0 * dt;\r\n        step.warmStarting = this.m_warmStarting;\r\n        // Update contacts. This is where some contacts are destroyed.\r\n        const timer = b2World.Step_s_timer.Reset();\r\n        this.m_contactManager.Collide();\r\n        this.m_profile.collide = timer.GetMilliseconds();\r\n        // Integrate velocities, solve velocity constraints, and integrate positions.\r\n        if (this.m_stepComplete && step.dt > 0) {\r\n            const timer = b2World.Step_s_timer.Reset();\r\n            // #if B2_ENABLE_PARTICLE\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                p.Solve(step); // Particle Simulation\r\n            }\r\n            // #endif\r\n            this.Solve(step);\r\n            this.m_profile.solve = timer.GetMilliseconds();\r\n        }\r\n        // Handle TOI events.\r\n        if (this.m_continuousPhysics && step.dt > 0) {\r\n            const timer = b2World.Step_s_timer.Reset();\r\n            this.SolveTOI(step);\r\n            this.m_profile.solveTOI = timer.GetMilliseconds();\r\n        }\r\n        if (step.dt > 0) {\r\n            this.m_inv_dt0 = step.inv_dt;\r\n        }\r\n        if (this.m_clearForces) {\r\n            this.ClearForces();\r\n        }\r\n        this.m_locked = false;\r\n        this.m_profile.step = stepTimer.GetMilliseconds();\r\n    }\r\n    /// Manually clear the force buffer on all bodies. By default, forces are cleared automatically\r\n    /// after each call to Step. The default behavior is modified by calling SetAutoClearForces.\r\n    /// The purpose of this function is to support sub-stepping. Sub-stepping is often used to maintain\r\n    /// a fixed sized time step under a variable frame-rate.\r\n    /// When you perform sub-stepping you will disable auto clearing of forces and instead call\r\n    /// ClearForces after all sub-steps are complete in one pass of your game loop.\r\n    /// @see SetAutoClearForces\r\n    ClearForces() {\r\n        for (let body = this.m_bodyList; body; body = body.m_next) {\r\n            body.m_force.SetZero();\r\n            body.m_torque = 0;\r\n        }\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    DrawParticleSystem(system) {\r\n        const particleCount = system.GetParticleCount();\r\n        if (particleCount) {\r\n            const radius = system.GetRadius();\r\n            const positionBuffer = system.GetPositionBuffer();\r\n            if (system.m_colorBuffer.data) {\r\n                const colorBuffer = system.GetColorBuffer();\r\n                this.m_debugDraw.DrawParticles(positionBuffer, radius, colorBuffer, particleCount);\r\n            }\r\n            else {\r\n                this.m_debugDraw.DrawParticles(positionBuffer, radius, null, particleCount);\r\n            }\r\n        }\r\n    }\r\n    DrawDebugData() {\r\n        if (this.m_debugDraw === null) {\r\n            return;\r\n        }\r\n        const flags = this.m_debugDraw.GetFlags();\r\n        const color = b2World.DrawDebugData_s_color.SetRGB(0, 0, 0);\r\n        if (flags & b2DrawFlags.e_shapeBit) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                const xf = b.m_xf;\r\n                this.m_debugDraw.PushTransform(xf);\r\n                for (let f = b.GetFixtureList(); f; f = f.m_next) {\r\n                    if (!b.IsActive()) {\r\n                        color.SetRGB(0.5, 0.5, 0.3);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                        color.SetRGB(0.5, 0.9, 0.5);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (b.GetType() === b2BodyType.b2_kinematicBody) {\r\n                        color.SetRGB(0.5, 0.5, 0.9);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else if (!b.IsAwake()) {\r\n                        color.SetRGB(0.6, 0.6, 0.6);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                    else {\r\n                        color.SetRGB(0.9, 0.7, 0.7);\r\n                        this.DrawShape(f, color);\r\n                    }\r\n                }\r\n                this.m_debugDraw.PopTransform(xf);\r\n            }\r\n        }\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (flags & b2DrawFlags.e_particleBit) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                this.DrawParticleSystem(p);\r\n            }\r\n        }\r\n        // #endif\r\n        if (flags & b2DrawFlags.e_jointBit) {\r\n            for (let j = this.m_jointList; j; j = j.m_next) {\r\n                this.DrawJoint(j);\r\n            }\r\n        }\r\n        /*\r\n        if (flags & b2DrawFlags.e_pairBit) {\r\n          color.SetRGB(0.3, 0.9, 0.9);\r\n          for (let contact = this.m_contactManager.m_contactList; contact; contact = contact.m_next) {\r\n            const fixtureA = contact.GetFixtureA();\r\n            const fixtureB = contact.GetFixtureB();\r\n    \r\n            const cA = fixtureA.GetAABB().GetCenter();\r\n            const cB = fixtureB.GetAABB().GetCenter();\r\n    \r\n            this.m_debugDraw.DrawSegment(cA, cB, color);\r\n          }\r\n        }\r\n        */\r\n        if (flags & b2DrawFlags.e_aabbBit) {\r\n            color.SetRGB(0.9, 0.3, 0.9);\r\n            const bp = this.m_contactManager.m_broadPhase;\r\n            const vs = b2World.DrawDebugData_s_vs;\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                if (!b.IsActive()) {\r\n                    continue;\r\n                }\r\n                for (let f = b.GetFixtureList(); f; f = f.m_next) {\r\n                    for (let i = 0; i < f.m_proxyCount; ++i) {\r\n                        const proxy = f.m_proxies[i];\r\n                        const aabb = bp.GetFatAABB(proxy.treeNode);\r\n                        vs[0].Set(aabb.lowerBound.x, aabb.lowerBound.y);\r\n                        vs[1].Set(aabb.upperBound.x, aabb.lowerBound.y);\r\n                        vs[2].Set(aabb.upperBound.x, aabb.upperBound.y);\r\n                        vs[3].Set(aabb.lowerBound.x, aabb.upperBound.y);\r\n                        this.m_debugDraw.DrawPolygon(vs, 4, color);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (flags & b2DrawFlags.e_centerOfMassBit) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                const xf = b2World.DrawDebugData_s_xf;\r\n                xf.q.Copy(b.m_xf.q);\r\n                xf.p.Copy(b.GetWorldCenter());\r\n                this.m_debugDraw.DrawTransform(xf);\r\n            }\r\n        }\r\n        // #if B2_ENABLE_CONTROLLER  \r\n        // @see b2Controller list\r\n        if (flags & b2DrawFlags.e_controllerBit) {\r\n            for (let c = this.m_controllerList; c; c = c.m_next) {\r\n                c.Draw(this.m_debugDraw);\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    /// Query the world for all fixtures that potentially overlap the\r\n    /// provided AABB.\r\n    /// @param callback a user implemented callback class.\r\n    /// @param aabb the query box.\r\n    QueryAABB(callback, aabb) {\r\n        const broadPhase = this.m_contactManager.m_broadPhase;\r\n        function WorldQueryWrapper(proxy) {\r\n            const fixture_proxy = broadPhase.GetUserData(proxy);\r\n            ///b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            ///const index: number = fixture_proxy.childIndex;\r\n            if (callback instanceof b2QueryCallback) {\r\n                return callback.ReportFixture(fixture);\r\n            }\r\n            else /* if (typeof(callback) === 'function') */ {\r\n                return callback(fixture);\r\n            }\r\n        }\r\n        broadPhase.Query(WorldQueryWrapper, aabb);\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryAABB(callback, aabb);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryShape(callback, shape, transform) {\r\n        const broadPhase = this.m_contactManager.m_broadPhase;\r\n        function WorldQueryWrapper(proxy) {\r\n            const fixture_proxy = broadPhase.GetUserData(proxy);\r\n            ///b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            ///const index: number = fixture_proxy.childIndex;\r\n            if (b2TestOverlapShape(shape, 0, fixture.GetShape(), 0, transform, fixture.GetBody().GetTransform())) {\r\n                if (callback instanceof b2QueryCallback) {\r\n                    return callback.ReportFixture(fixture);\r\n                }\r\n                else /* if (typeof(callback) === 'function') */ {\r\n                    return callback(fixture);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        const aabb = b2World.QueryShape_s_aabb;\r\n        shape.ComputeAABB(aabb, transform, 0); // TODO\r\n        broadPhase.Query(WorldQueryWrapper, aabb);\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryAABB(callback, aabb);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    QueryPoint(callback, point) {\r\n        const broadPhase = this.m_contactManager.m_broadPhase;\r\n        function WorldQueryWrapper(proxy) {\r\n            const fixture_proxy = broadPhase.GetUserData(proxy);\r\n            ///b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            ///const index: number = fixture_proxy.childIndex;\r\n            if (fixture.TestPoint(point)) {\r\n                if (callback instanceof b2QueryCallback) {\r\n                    return callback.ReportFixture(fixture);\r\n                }\r\n                else /* if (typeof(callback) === 'function') */ {\r\n                    return callback(fixture);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        const aabb = b2World.QueryPoint_s_aabb;\r\n        aabb.lowerBound.Set(point.x - b2_linearSlop, point.y - b2_linearSlop);\r\n        aabb.upperBound.Set(point.x + b2_linearSlop, point.y + b2_linearSlop);\r\n        broadPhase.Query(WorldQueryWrapper, aabb);\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2QueryCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.QueryAABB(callback, aabb);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    RayCast(callback, point1, point2) {\r\n        const broadPhase = this.m_contactManager.m_broadPhase;\r\n        function WorldRayCastWrapper(input, proxy) {\r\n            const fixture_proxy = broadPhase.GetUserData(proxy);\r\n            ///b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n            const fixture = fixture_proxy.fixture;\r\n            const index = fixture_proxy.childIndex;\r\n            const output = b2World.RayCast_s_output;\r\n            const hit = fixture.RayCast(output, input, index);\r\n            if (hit) {\r\n                const fraction = output.fraction;\r\n                const point = b2World.RayCast_s_point;\r\n                point.Set((1 - fraction) * point1.x + fraction * point2.x, (1 - fraction) * point1.y + fraction * point2.y);\r\n                if (callback instanceof b2RayCastCallback) {\r\n                    return callback.ReportFixture(fixture, point, output.normal, fraction);\r\n                }\r\n                else /* if (typeof(callback) === 'function') */ {\r\n                    return callback(fixture, point, output.normal, fraction);\r\n                }\r\n            }\r\n            return input.maxFraction;\r\n        }\r\n        const input = b2World.RayCast_s_input;\r\n        input.maxFraction = 1;\r\n        input.p1.Copy(point1);\r\n        input.p2.Copy(point2);\r\n        broadPhase.RayCast(WorldRayCastWrapper, input);\r\n        // #if B2_ENABLE_PARTICLE\r\n        if (callback instanceof b2RayCastCallback) {\r\n            for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                if (callback.ShouldQueryParticleSystem(p)) {\r\n                    p.RayCast(callback, point1, point2);\r\n                }\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n    RayCastOne(point1, point2) {\r\n        let result = null;\r\n        let min_fraction = 1;\r\n        function WorldRayCastOneWrapper(fixture, point, normal, fraction) {\r\n            if (fraction < min_fraction) {\r\n                min_fraction = fraction;\r\n                result = fixture;\r\n            }\r\n            return min_fraction;\r\n        }\r\n        this.RayCast(WorldRayCastOneWrapper, point1, point2);\r\n        return result;\r\n    }\r\n    RayCastAll(point1, point2, out = []) {\r\n        function WorldRayCastAllWrapper(fixture, point, normal, fraction) {\r\n            out.push(fixture);\r\n            return 1;\r\n        }\r\n        this.RayCast(WorldRayCastAllWrapper, point1, point2);\r\n        return out;\r\n    }\r\n    /// Get the world body list. With the returned body, use b2Body::GetNext to get\r\n    /// the next body in the world list. A NULL body indicates the end of the list.\r\n    /// @return the head of the world body list.\r\n    GetBodyList() {\r\n        return this.m_bodyList;\r\n    }\r\n    /// Get the world joint list. With the returned joint, use b2Joint::GetNext to get\r\n    /// the next joint in the world list. A NULL joint indicates the end of the list.\r\n    /// @return the head of the world joint list.\r\n    GetJointList() {\r\n        return this.m_jointList;\r\n    }\r\n    // #if B2_ENABLE_PARTICLE\r\n    GetParticleSystemList() {\r\n        return this.m_particleSystemList;\r\n    }\r\n    // #endif\r\n    /// Get the world contact list. With the returned contact, use b2Contact::GetNext to get\r\n    /// the next contact in the world list. A NULL contact indicates the end of the list.\r\n    /// @return the head of the world contact list.\r\n    /// @warning contacts are created and destroyed in the middle of a time step.\r\n    /// Use b2ContactListener to avoid missing contacts.\r\n    GetContactList() {\r\n        return this.m_contactManager.m_contactList;\r\n    }\r\n    /// Enable/disable sleep.\r\n    SetAllowSleeping(flag) {\r\n        if (flag === this.m_allowSleep) {\r\n            return;\r\n        }\r\n        this.m_allowSleep = flag;\r\n        if (!this.m_allowSleep) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                b.SetAwake(true);\r\n            }\r\n        }\r\n    }\r\n    GetAllowSleeping() {\r\n        return this.m_allowSleep;\r\n    }\r\n    /// Enable/disable warm starting. For testing.\r\n    SetWarmStarting(flag) {\r\n        this.m_warmStarting = flag;\r\n    }\r\n    GetWarmStarting() {\r\n        return this.m_warmStarting;\r\n    }\r\n    /// Enable/disable continuous physics. For testing.\r\n    SetContinuousPhysics(flag) {\r\n        this.m_continuousPhysics = flag;\r\n    }\r\n    GetContinuousPhysics() {\r\n        return this.m_continuousPhysics;\r\n    }\r\n    /// Enable/disable single stepped continuous physics. For testing.\r\n    SetSubStepping(flag) {\r\n        this.m_subStepping = flag;\r\n    }\r\n    GetSubStepping() {\r\n        return this.m_subStepping;\r\n    }\r\n    /// Get the number of broad-phase proxies.\r\n    GetProxyCount() {\r\n        return this.m_contactManager.m_broadPhase.GetProxyCount();\r\n    }\r\n    /// Get the number of bodies.\r\n    GetBodyCount() {\r\n        return this.m_bodyCount;\r\n    }\r\n    /// Get the number of joints.\r\n    GetJointCount() {\r\n        return this.m_jointCount;\r\n    }\r\n    /// Get the number of contacts (each may have 0 or more contact points).\r\n    GetContactCount() {\r\n        return this.m_contactManager.m_contactCount;\r\n    }\r\n    /// Get the height of the dynamic tree.\r\n    GetTreeHeight() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeHeight();\r\n    }\r\n    /// Get the balance of the dynamic tree.\r\n    GetTreeBalance() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeBalance();\r\n    }\r\n    /// Get the quality metric of the dynamic tree. The smaller the better.\r\n    /// The minimum is 1.\r\n    GetTreeQuality() {\r\n        return this.m_contactManager.m_broadPhase.GetTreeQuality();\r\n    }\r\n    /// Change the global gravity vector.\r\n    SetGravity(gravity, wake = true) {\r\n        if (!b2Vec2.IsEqualToV(this.m_gravity, gravity)) {\r\n            this.m_gravity.Copy(gravity);\r\n            if (wake) {\r\n                for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                    b.SetAwake(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /// Get the global gravity vector.\r\n    GetGravity() {\r\n        return this.m_gravity;\r\n    }\r\n    /// Is the world locked (in the middle of a time step).\r\n    IsLocked() {\r\n        return this.m_locked;\r\n    }\r\n    /// Set flag to control automatic clearing of forces after each time step.\r\n    SetAutoClearForces(flag) {\r\n        this.m_clearForces = flag;\r\n    }\r\n    /// Get the flag that controls automatic clearing of forces after each time step.\r\n    GetAutoClearForces() {\r\n        return this.m_clearForces;\r\n    }\r\n    /// Shift the world origin. Useful for large worlds.\r\n    /// The body shift formula is: position -= newOrigin\r\n    /// @param newOrigin the new origin with respect to the old origin\r\n    ShiftOrigin(newOrigin) {\r\n        ///b2Assert(!this.IsLocked());\r\n        if (this.IsLocked()) {\r\n            return;\r\n        }\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_xf.p.SelfSub(newOrigin);\r\n            b.m_sweep.c0.SelfSub(newOrigin);\r\n            b.m_sweep.c.SelfSub(newOrigin);\r\n        }\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.ShiftOrigin(newOrigin);\r\n        }\r\n        this.m_contactManager.m_broadPhase.ShiftOrigin(newOrigin);\r\n    }\r\n    /// Get the contact manager for testing.\r\n    GetContactManager() {\r\n        return this.m_contactManager;\r\n    }\r\n    /// Get the current profile.\r\n    GetProfile() {\r\n        return this.m_profile;\r\n    }\r\n    /// Dump the world into the log file.\r\n    /// @warning this should be called outside of a time step.\r\n    Dump(log) {\r\n        if (this.m_locked) {\r\n            return;\r\n        }\r\n        log(\"const g: b2Vec2 = new b2Vec2(%.15f, %.15f);\\n\", this.m_gravity.x, this.m_gravity.y);\r\n        log(\"this.m_world.SetGravity(g);\\n\");\r\n        log(\"const bodies: b2Body[] = [];\\n\");\r\n        log(\"const joints: b2Joint[] = [];\\n\");\r\n        let i = 0;\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_islandIndex = i;\r\n            b.Dump(log);\r\n            ++i;\r\n        }\r\n        i = 0;\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.m_index = i;\r\n            ++i;\r\n        }\r\n        // First pass on joints, skip gear joints.\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            if (j.m_type === b2JointType.e_gearJoint) {\r\n                continue;\r\n            }\r\n            log(\"{\\n\");\r\n            j.Dump(log);\r\n            log(\"}\\n\");\r\n        }\r\n        // Second pass on joints, only gear joints.\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            if (j.m_type !== b2JointType.e_gearJoint) {\r\n                continue;\r\n            }\r\n            log(\"{\\n\");\r\n            j.Dump(log);\r\n            log(\"}\\n\");\r\n        }\r\n    }\r\n    DrawJoint(joint) {\r\n        const bodyA = joint.GetBodyA();\r\n        const bodyB = joint.GetBodyB();\r\n        const xf1 = bodyA.m_xf;\r\n        const xf2 = bodyB.m_xf;\r\n        const x1 = xf1.p;\r\n        const x2 = xf2.p;\r\n        const p1 = joint.GetAnchorA(b2World.DrawJoint_s_p1);\r\n        const p2 = joint.GetAnchorB(b2World.DrawJoint_s_p2);\r\n        const color = b2World.DrawJoint_s_color.SetRGB(0.5, 0.8, 0.8);\r\n        switch (joint.m_type) {\r\n            case b2JointType.e_distanceJoint:\r\n                this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                break;\r\n            case b2JointType.e_pulleyJoint:\r\n                {\r\n                    const pulley = joint;\r\n                    const s1 = pulley.GetGroundAnchorA();\r\n                    const s2 = pulley.GetGroundAnchorB();\r\n                    this.m_debugDraw.DrawSegment(s1, p1, color);\r\n                    this.m_debugDraw.DrawSegment(s2, p2, color);\r\n                    this.m_debugDraw.DrawSegment(s1, s2, color);\r\n                }\r\n                break;\r\n            case b2JointType.e_mouseJoint:\r\n                // don't draw this\r\n                this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                break;\r\n            default:\r\n                this.m_debugDraw.DrawSegment(x1, p1, color);\r\n                this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                this.m_debugDraw.DrawSegment(x2, p2, color);\r\n        }\r\n    }\r\n    DrawShape(fixture, color) {\r\n        const shape = fixture.GetShape();\r\n        switch (shape.m_type) {\r\n            case b2ShapeType.e_circleShape:\r\n                {\r\n                    const circle = shape;\r\n                    const center = circle.m_p;\r\n                    const radius = circle.m_radius;\r\n                    const axis = b2Vec2.UNITX;\r\n                    this.m_debugDraw.DrawSolidCircle(center, radius, axis, color);\r\n                }\r\n                break;\r\n            case b2ShapeType.e_edgeShape:\r\n                {\r\n                    const edge = shape;\r\n                    const v1 = edge.m_vertex1;\r\n                    const v2 = edge.m_vertex2;\r\n                    this.m_debugDraw.DrawSegment(v1, v2, color);\r\n                }\r\n                break;\r\n            case b2ShapeType.e_chainShape:\r\n                {\r\n                    const chain = shape;\r\n                    const count = chain.m_count;\r\n                    const vertices = chain.m_vertices;\r\n                    let v1 = vertices[0];\r\n                    this.m_debugDraw.DrawCircle(v1, 0.05, color);\r\n                    for (let i = 1; i < count; ++i) {\r\n                        const v2 = vertices[i];\r\n                        this.m_debugDraw.DrawSegment(v1, v2, color);\r\n                        this.m_debugDraw.DrawCircle(v2, 0.05, color);\r\n                        v1 = v2;\r\n                    }\r\n                }\r\n                break;\r\n            case b2ShapeType.e_polygonShape:\r\n                {\r\n                    const poly = shape;\r\n                    const vertexCount = poly.m_count;\r\n                    const vertices = poly.m_vertices;\r\n                    this.m_debugDraw.DrawSolidPolygon(vertices, vertexCount, color);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    Solve(step) {\r\n        // #if B2_ENABLE_PARTICLE\r\n        // update previous transforms\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_xf0.Copy(b.m_xf);\r\n        }\r\n        // #endif\r\n        // #if B2_ENABLE_CONTROLLER\r\n        // @see b2Controller list\r\n        for (let controller = this.m_controllerList; controller; controller = controller.m_next) {\r\n            controller.Step(step);\r\n        }\r\n        // #endif\r\n        this.m_profile.solveInit = 0;\r\n        this.m_profile.solveVelocity = 0;\r\n        this.m_profile.solvePosition = 0;\r\n        // Size the island for the worst case.\r\n        const island = this.m_island;\r\n        island.Initialize(this.m_bodyCount, this.m_contactManager.m_contactCount, this.m_jointCount, null, // this.m_stackAllocator,\r\n        this.m_contactManager.m_contactListener);\r\n        // Clear all the island flags.\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            b.m_islandFlag = false;\r\n        }\r\n        for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n            c.m_islandFlag = false;\r\n        }\r\n        for (let j = this.m_jointList; j; j = j.m_next) {\r\n            j.m_islandFlag = false;\r\n        }\r\n        // Build and simulate all awake islands.\r\n        ///const stackSize: number = this.m_bodyCount;\r\n        const stack = this.s_stack;\r\n        for (let seed = this.m_bodyList; seed; seed = seed.m_next) {\r\n            if (seed.m_islandFlag) {\r\n                continue;\r\n            }\r\n            if (!seed.IsAwake() || !seed.IsActive()) {\r\n                continue;\r\n            }\r\n            // The seed can be dynamic or kinematic.\r\n            if (seed.GetType() === b2BodyType.b2_staticBody) {\r\n                continue;\r\n            }\r\n            // Reset island and stack.\r\n            island.Clear();\r\n            let stackCount = 0;\r\n            stack[stackCount++] = seed;\r\n            seed.m_islandFlag = true;\r\n            // Perform a depth first search (DFS) on the constraint graph.\r\n            while (stackCount > 0) {\r\n                // Grab the next body off the stack and add it to the island.\r\n                const b = stack[--stackCount];\r\n                ///b2Assert(b.IsActive());\r\n                island.AddBody(b);\r\n                // Make sure the body is awake.\r\n                b.SetAwake(true);\r\n                // To keep islands as small as possible, we don't\r\n                // propagate islands across static bodies.\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    continue;\r\n                }\r\n                // Search all contacts connected to this body.\r\n                for (let ce = b.m_contactList; ce; ce = ce.next) {\r\n                    const contact = ce.contact;\r\n                    // Has this contact already been added to an island?\r\n                    if (contact.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    // Is this contact solid and touching?\r\n                    if (!contact.IsEnabled() || !contact.IsTouching()) {\r\n                        continue;\r\n                    }\r\n                    // Skip sensors.\r\n                    const sensorA = contact.m_fixtureA.m_isSensor;\r\n                    const sensorB = contact.m_fixtureB.m_isSensor;\r\n                    if (sensorA || sensorB) {\r\n                        continue;\r\n                    }\r\n                    island.AddContact(contact);\r\n                    contact.m_islandFlag = true;\r\n                    const other = ce.other;\r\n                    // Was the other body already added to this island?\r\n                    if (other.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    ///b2Assert(stackCount < stackSize);\r\n                    stack[stackCount++] = other;\r\n                    other.m_islandFlag = true;\r\n                }\r\n                // Search all joints connect to this body.\r\n                for (let je = b.m_jointList; je; je = je.next) {\r\n                    if (je.joint.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    const other = je.other;\r\n                    // Don't simulate joints connected to inactive bodies.\r\n                    if (!other.IsActive()) {\r\n                        continue;\r\n                    }\r\n                    island.AddJoint(je.joint);\r\n                    je.joint.m_islandFlag = true;\r\n                    if (other.m_islandFlag) {\r\n                        continue;\r\n                    }\r\n                    ///b2Assert(stackCount < stackSize);\r\n                    stack[stackCount++] = other;\r\n                    other.m_islandFlag = true;\r\n                }\r\n            }\r\n            const profile = new b2Profile();\r\n            island.Solve(profile, step, this.m_gravity, this.m_allowSleep);\r\n            this.m_profile.solveInit += profile.solveInit;\r\n            this.m_profile.solveVelocity += profile.solveVelocity;\r\n            this.m_profile.solvePosition += profile.solvePosition;\r\n            // Post solve cleanup.\r\n            for (let i = 0; i < island.m_bodyCount; ++i) {\r\n                // Allow static bodies to participate in other islands.\r\n                const b = island.m_bodies[i];\r\n                if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                    b.m_islandFlag = false;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < stack.length; ++i) {\r\n            if (!stack[i])\r\n                break;\r\n            stack[i] = null;\r\n        }\r\n        const timer = new b2Timer();\r\n        // Synchronize fixtures, check for out of range bodies.\r\n        for (let b = this.m_bodyList; b; b = b.m_next) {\r\n            // If a body was not in an island then it did not move.\r\n            if (!b.m_islandFlag) {\r\n                continue;\r\n            }\r\n            if (b.GetType() === b2BodyType.b2_staticBody) {\r\n                continue;\r\n            }\r\n            // Update fixtures (for broad-phase).\r\n            b.SynchronizeFixtures();\r\n        }\r\n        // Look for new contacts.\r\n        this.m_contactManager.FindNewContacts();\r\n        this.m_profile.broadphase = timer.GetMilliseconds();\r\n    }\r\n    SolveTOI(step) {\r\n        // b2Island island(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, &m_stackAllocator, m_contactManager.m_contactListener);\r\n        const island = this.m_island;\r\n        island.Initialize(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, null, this.m_contactManager.m_contactListener);\r\n        if (this.m_stepComplete) {\r\n            for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                b.m_islandFlag = false;\r\n                b.m_sweep.alpha0 = 0;\r\n            }\r\n            for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n                // Invalidate TOI\r\n                c.m_toiFlag = false;\r\n                c.m_islandFlag = false;\r\n                c.m_toiCount = 0;\r\n                c.m_toi = 1;\r\n            }\r\n        }\r\n        // Find TOI events and solve them.\r\n        for (;;) {\r\n            // Find the first TOI.\r\n            let minContact = null;\r\n            let minAlpha = 1;\r\n            for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n                // Is this contact disabled?\r\n                if (!c.IsEnabled()) {\r\n                    continue;\r\n                }\r\n                // Prevent excessive sub-stepping.\r\n                if (c.m_toiCount > b2_maxSubSteps) {\r\n                    continue;\r\n                }\r\n                let alpha = 1;\r\n                if (c.m_toiFlag) {\r\n                    // This contact has a valid cached TOI.\r\n                    alpha = c.m_toi;\r\n                }\r\n                else {\r\n                    const fA = c.GetFixtureA();\r\n                    const fB = c.GetFixtureB();\r\n                    // Is there a sensor?\r\n                    if (fA.IsSensor() || fB.IsSensor()) {\r\n                        continue;\r\n                    }\r\n                    const bA = fA.GetBody();\r\n                    const bB = fB.GetBody();\r\n                    const typeA = bA.m_type;\r\n                    const typeB = bB.m_type;\r\n                    ///b2Assert(typeA !== b2BodyType.b2_staticBody || typeB !== b2BodyType.b2_staticBody);\r\n                    const activeA = bA.IsAwake() && typeA !== b2BodyType.b2_staticBody;\r\n                    const activeB = bB.IsAwake() && typeB !== b2BodyType.b2_staticBody;\r\n                    // Is at least one body active (awake and dynamic or kinematic)?\r\n                    if (!activeA && !activeB) {\r\n                        continue;\r\n                    }\r\n                    const collideA = bA.IsBullet() || typeA !== b2BodyType.b2_dynamicBody;\r\n                    const collideB = bB.IsBullet() || typeB !== b2BodyType.b2_dynamicBody;\r\n                    // Are these two non-bullet dynamic bodies?\r\n                    if (!collideA && !collideB) {\r\n                        continue;\r\n                    }\r\n                    // Compute the TOI for this contact.\r\n                    // Put the sweeps onto the same time interval.\r\n                    let alpha0 = bA.m_sweep.alpha0;\r\n                    if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\r\n                        alpha0 = bB.m_sweep.alpha0;\r\n                        bA.m_sweep.Advance(alpha0);\r\n                    }\r\n                    else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\r\n                        alpha0 = bA.m_sweep.alpha0;\r\n                        bB.m_sweep.Advance(alpha0);\r\n                    }\r\n                    ///b2Assert(alpha0 < 1);\r\n                    const indexA = c.GetChildIndexA();\r\n                    const indexB = c.GetChildIndexB();\r\n                    // Compute the time of impact in interval [0, minTOI]\r\n                    const input = b2World.SolveTOI_s_toi_input;\r\n                    input.proxyA.SetShape(fA.GetShape(), indexA);\r\n                    input.proxyB.SetShape(fB.GetShape(), indexB);\r\n                    input.sweepA.Copy(bA.m_sweep);\r\n                    input.sweepB.Copy(bB.m_sweep);\r\n                    input.tMax = 1;\r\n                    const output = b2World.SolveTOI_s_toi_output;\r\n                    b2TimeOfImpact(output, input);\r\n                    // Beta is the fraction of the remaining portion of the .\r\n                    const beta = output.t;\r\n                    if (output.state === b2TOIOutputState.e_touching) {\r\n                        alpha = b2Min(alpha0 + (1 - alpha0) * beta, 1);\r\n                    }\r\n                    else {\r\n                        alpha = 1;\r\n                    }\r\n                    c.m_toi = alpha;\r\n                    c.m_toiFlag = true;\r\n                }\r\n                if (alpha < minAlpha) {\r\n                    // This is the minimum TOI found so far.\r\n                    minContact = c;\r\n                    minAlpha = alpha;\r\n                }\r\n            }\r\n            if (minContact === null || 1 - 10 * b2_epsilon < minAlpha) {\r\n                // No more TOI events. Done!\r\n                this.m_stepComplete = true;\r\n                break;\r\n            }\r\n            // Advance the bodies to the TOI.\r\n            const fA = minContact.GetFixtureA();\r\n            const fB = minContact.GetFixtureB();\r\n            const bA = fA.GetBody();\r\n            const bB = fB.GetBody();\r\n            const backup1 = b2World.SolveTOI_s_backup1.Copy(bA.m_sweep);\r\n            const backup2 = b2World.SolveTOI_s_backup2.Copy(bB.m_sweep);\r\n            bA.Advance(minAlpha);\r\n            bB.Advance(minAlpha);\r\n            // The TOI contact likely has some new contact points.\r\n            minContact.Update(this.m_contactManager.m_contactListener);\r\n            minContact.m_toiFlag = false;\r\n            ++minContact.m_toiCount;\r\n            // Is the contact solid?\r\n            if (!minContact.IsEnabled() || !minContact.IsTouching()) {\r\n                // Restore the sweeps.\r\n                minContact.SetEnabled(false);\r\n                bA.m_sweep.Copy(backup1);\r\n                bB.m_sweep.Copy(backup2);\r\n                bA.SynchronizeTransform();\r\n                bB.SynchronizeTransform();\r\n                continue;\r\n            }\r\n            bA.SetAwake(true);\r\n            bB.SetAwake(true);\r\n            // Build the island\r\n            island.Clear();\r\n            island.AddBody(bA);\r\n            island.AddBody(bB);\r\n            island.AddContact(minContact);\r\n            bA.m_islandFlag = true;\r\n            bB.m_islandFlag = true;\r\n            minContact.m_islandFlag = true;\r\n            // Get contacts on bodyA and bodyB.\r\n            // const bodies: b2Body[] = [bA, bB];\r\n            for (let i = 0; i < 2; ++i) {\r\n                const body = (i === 0) ? (bA) : (bB); // bodies[i];\r\n                if (body.m_type === b2BodyType.b2_dynamicBody) {\r\n                    for (let ce = body.m_contactList; ce; ce = ce.next) {\r\n                        if (island.m_bodyCount === island.m_bodyCapacity) {\r\n                            break;\r\n                        }\r\n                        if (island.m_contactCount === island.m_contactCapacity) {\r\n                            break;\r\n                        }\r\n                        const contact = ce.contact;\r\n                        // Has this contact already been added to the island?\r\n                        if (contact.m_islandFlag) {\r\n                            continue;\r\n                        }\r\n                        // Only add static, kinematic, or bullet bodies.\r\n                        const other = ce.other;\r\n                        if (other.m_type === b2BodyType.b2_dynamicBody &&\r\n                            !body.IsBullet() && !other.IsBullet()) {\r\n                            continue;\r\n                        }\r\n                        // Skip sensors.\r\n                        const sensorA = contact.m_fixtureA.m_isSensor;\r\n                        const sensorB = contact.m_fixtureB.m_isSensor;\r\n                        if (sensorA || sensorB) {\r\n                            continue;\r\n                        }\r\n                        // Tentatively advance the body to the TOI.\r\n                        const backup = b2World.SolveTOI_s_backup.Copy(other.m_sweep);\r\n                        if (!other.m_islandFlag) {\r\n                            other.Advance(minAlpha);\r\n                        }\r\n                        // Update the contact points\r\n                        contact.Update(this.m_contactManager.m_contactListener);\r\n                        // Was the contact disabled by the user?\r\n                        if (!contact.IsEnabled()) {\r\n                            other.m_sweep.Copy(backup);\r\n                            other.SynchronizeTransform();\r\n                            continue;\r\n                        }\r\n                        // Are there contact points?\r\n                        if (!contact.IsTouching()) {\r\n                            other.m_sweep.Copy(backup);\r\n                            other.SynchronizeTransform();\r\n                            continue;\r\n                        }\r\n                        // Add the contact to the island\r\n                        contact.m_islandFlag = true;\r\n                        island.AddContact(contact);\r\n                        // Has the other body already been added to the island?\r\n                        if (other.m_islandFlag) {\r\n                            continue;\r\n                        }\r\n                        // Add the other body to the island.\r\n                        other.m_islandFlag = true;\r\n                        if (other.m_type !== b2BodyType.b2_staticBody) {\r\n                            other.SetAwake(true);\r\n                        }\r\n                        island.AddBody(other);\r\n                    }\r\n                }\r\n            }\r\n            const subStep = b2World.SolveTOI_s_subStep;\r\n            subStep.dt = (1 - minAlpha) * step.dt;\r\n            subStep.inv_dt = 1 / subStep.dt;\r\n            subStep.dtRatio = 1;\r\n            subStep.positionIterations = 20;\r\n            subStep.velocityIterations = step.velocityIterations;\r\n            // #if B2_ENABLE_PARTICLE\r\n            subStep.particleIterations = step.particleIterations;\r\n            // #endif\r\n            subStep.warmStarting = false;\r\n            island.SolveTOI(subStep, bA.m_islandIndex, bB.m_islandIndex);\r\n            // Reset island flags and synchronize broad-phase proxies.\r\n            for (let i = 0; i < island.m_bodyCount; ++i) {\r\n                const body = island.m_bodies[i];\r\n                body.m_islandFlag = false;\r\n                if (body.m_type !== b2BodyType.b2_dynamicBody) {\r\n                    continue;\r\n                }\r\n                body.SynchronizeFixtures();\r\n                // Invalidate all contact TOIs on this displaced body.\r\n                for (let ce = body.m_contactList; ce; ce = ce.next) {\r\n                    ce.contact.m_toiFlag = false;\r\n                    ce.contact.m_islandFlag = false;\r\n                }\r\n            }\r\n            // Commit fixture proxy movements to the broad-phase so that new contacts are created.\r\n            // Also, some contacts can be destroyed.\r\n            this.m_contactManager.FindNewContacts();\r\n            if (this.m_subStepping) {\r\n                this.m_stepComplete = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // #if B2_ENABLE_CONTROLLER\r\n    AddController(controller) {\r\n        ///b2Assert(controller.m_world === null, \"Controller can only be a member of one world\");\r\n        controller.m_world = this;\r\n        controller.m_next = this.m_controllerList;\r\n        controller.m_prev = null;\r\n        if (this.m_controllerList)\r\n            this.m_controllerList.m_prev = controller;\r\n        this.m_controllerList = controller;\r\n        ++this.m_controllerCount;\r\n        return controller;\r\n    }\r\n    RemoveController(controller) {\r\n        ///b2Assert(controller.m_world === this, \"Controller is not a member of this world\");\r\n        if (controller.m_prev)\r\n            controller.m_prev.m_next = controller.m_next;\r\n        if (controller.m_next)\r\n            controller.m_next.m_prev = controller.m_prev;\r\n        if (this.m_controllerList === controller)\r\n            this.m_controllerList = controller.m_next;\r\n        --this.m_controllerCount;\r\n        controller.m_prev = null;\r\n        controller.m_next = null;\r\n        controller.m_world = null;\r\n        return controller;\r\n    }\r\n}\r\n// #endif\r\n/// Take a time step. This performs collision detection, integration,\r\n/// and constraint solution.\r\n/// @param timeStep the amount of time to simulate, this should not vary.\r\n/// @param velocityIterations for the velocity constraint solver.\r\n/// @param positionIterations for the position constraint solver.\r\nb2World.Step_s_step = new b2TimeStep();\r\nb2World.Step_s_stepTimer = new b2Timer();\r\nb2World.Step_s_timer = new b2Timer();\r\n// #endif\r\n/// Call this to draw shapes and other debug draw data.\r\nb2World.DrawDebugData_s_color = new b2Color(0, 0, 0);\r\nb2World.DrawDebugData_s_vs = b2Vec2.MakeArray(4);\r\nb2World.DrawDebugData_s_xf = new b2Transform();\r\nb2World.QueryShape_s_aabb = new b2AABB();\r\nb2World.QueryPoint_s_aabb = new b2AABB();\r\n/// Ray-cast the world for all fixtures in the path of the ray. Your callback\r\n/// controls whether you get the closest point, any point, or n-points.\r\n/// The ray-cast ignores shapes that contain the starting point.\r\n/// @param callback a user implemented callback class.\r\n/// @param point1 the ray starting point\r\n/// @param point2 the ray ending point\r\nb2World.RayCast_s_input = new b2RayCastInput();\r\nb2World.RayCast_s_output = new b2RayCastOutput();\r\nb2World.RayCast_s_point = new b2Vec2();\r\nb2World.DrawJoint_s_p1 = new b2Vec2();\r\nb2World.DrawJoint_s_p2 = new b2Vec2();\r\nb2World.DrawJoint_s_color = new b2Color(0.5, 0.8, 0.8);\r\nb2World.SolveTOI_s_subStep = new b2TimeStep();\r\nb2World.SolveTOI_s_backup = new b2Sweep();\r\nb2World.SolveTOI_s_backup1 = new b2Sweep();\r\nb2World.SolveTOI_s_backup2 = new b2Sweep();\r\nb2World.SolveTOI_s_toi_input = new b2TOIInput();\r\nb2World.SolveTOI_s_toi_output = new b2TOIOutput();\r\n//# sourceMappingURL=data:application/json;base64,","/*\r\n* Copyright (c) 2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nimport { b2_pi, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2Atan2, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Color } from \"../Common/b2Draw\";\r\n///\r\nexport class b2RopeDef {\r\n    constructor() {\r\n        ///\r\n        this.vertices = [];\r\n        ///\r\n        this.count = 0;\r\n        ///\r\n        this.masses = [];\r\n        ///\r\n        this.gravity = new b2Vec2(0, 0);\r\n        ///\r\n        this.damping = 0.1;\r\n        /// Stretching stiffness\r\n        this.k2 = 0.9;\r\n        /// Bending stiffness. Values above 0.5 can make the simulation blow up.\r\n        this.k3 = 0.1;\r\n    }\r\n}\r\n///\r\nexport class b2Rope {\r\n    constructor() {\r\n        this.m_count = 0;\r\n        this.m_ps = null;\r\n        this.m_p0s = null;\r\n        this.m_vs = null;\r\n        this.m_ims = null;\r\n        this.m_Ls = null;\r\n        this.m_as = null;\r\n        this.m_gravity = new b2Vec2();\r\n        this.m_damping = 0;\r\n        this.m_k2 = 1;\r\n        this.m_k3 = 0.1;\r\n    }\r\n    GetVertexCount() {\r\n        return this.m_count;\r\n    }\r\n    GetVertices() {\r\n        return this.m_ps;\r\n    }\r\n    ///\r\n    Initialize(def) {\r\n        ///b2Assert(def.count >= 3);\r\n        this.m_count = def.count;\r\n        // this.m_ps = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_ps = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_p0s = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_p0s = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_vs = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_vs = b2Vec2.MakeArray(this.m_count);\r\n        // this.m_ims = (float32*)b2Alloc(this.m_count * sizeof(float32));\r\n        this.m_ims = b2MakeNumberArray(this.m_count);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_ps[i].Copy(def.vertices[i]);\r\n            this.m_p0s[i].Copy(def.vertices[i]);\r\n            this.m_vs[i].SetZero();\r\n            const m = def.masses[i];\r\n            if (m > 0) {\r\n                this.m_ims[i] = 1 / m;\r\n            }\r\n            else {\r\n                this.m_ims[i] = 0;\r\n            }\r\n        }\r\n        const count2 = this.m_count - 1;\r\n        const count3 = this.m_count - 2;\r\n        // this.m_Ls = (float32*)be2Alloc(count2 * sizeof(float32));\r\n        this.m_Ls = b2MakeNumberArray(count2);\r\n        // this.m_as = (float32*)b2Alloc(count3 * sizeof(float32));\r\n        this.m_as = b2MakeNumberArray(count3);\r\n        for (let i = 0; i < count2; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            this.m_Ls[i] = b2Vec2.DistanceVV(p1, p2);\r\n        }\r\n        for (let i = 0; i < count3; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const p3 = this.m_ps[i + 2];\r\n            const d1 = b2Vec2.SubVV(p2, p1, b2Vec2.s_t0);\r\n            const d2 = b2Vec2.SubVV(p3, p2, b2Vec2.s_t1);\r\n            const a = b2Vec2.CrossVV(d1, d2);\r\n            const b = b2Vec2.DotVV(d1, d2);\r\n            this.m_as[i] = b2Atan2(a, b);\r\n        }\r\n        this.m_gravity.Copy(def.gravity);\r\n        this.m_damping = def.damping;\r\n        this.m_k2 = def.k2;\r\n        this.m_k3 = def.k3;\r\n    }\r\n    ///\r\n    Step(h, iterations) {\r\n        if (h === 0) {\r\n            return;\r\n        }\r\n        const d = Math.exp(-h * this.m_damping);\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            this.m_p0s[i].Copy(this.m_ps[i]);\r\n            if (this.m_ims[i] > 0) {\r\n                this.m_vs[i].SelfMulAdd(h, this.m_gravity);\r\n            }\r\n            this.m_vs[i].SelfMul(d);\r\n            this.m_ps[i].SelfMulAdd(h, this.m_vs[i]);\r\n        }\r\n        for (let i = 0; i < iterations; ++i) {\r\n            this.SolveC2();\r\n            this.SolveC3();\r\n            this.SolveC2();\r\n        }\r\n        const inv_h = 1 / h;\r\n        for (let i = 0; i < this.m_count; ++i) {\r\n            b2Vec2.MulSV(inv_h, b2Vec2.SubVV(this.m_ps[i], this.m_p0s[i], b2Vec2.s_t0), this.m_vs[i]);\r\n        }\r\n    }\r\n    SolveC2() {\r\n        const count2 = this.m_count - 1;\r\n        for (let i = 0; i < count2; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const d = b2Vec2.SubVV(p2, p1, b2Rope.s_d);\r\n            const L = d.Normalize();\r\n            const im1 = this.m_ims[i];\r\n            const im2 = this.m_ims[i + 1];\r\n            if (im1 + im2 === 0) {\r\n                continue;\r\n            }\r\n            const s1 = im1 / (im1 + im2);\r\n            const s2 = im2 / (im1 + im2);\r\n            p1.SelfMulSub(this.m_k2 * s1 * (this.m_Ls[i] - L), d);\r\n            p2.SelfMulAdd(this.m_k2 * s2 * (this.m_Ls[i] - L), d);\r\n            // this.m_ps[i] = p1;\r\n            // this.m_ps[i + 1] = p2;\r\n        }\r\n    }\r\n    SetAngle(angle) {\r\n        const count3 = this.m_count - 2;\r\n        for (let i = 0; i < count3; ++i) {\r\n            this.m_as[i] = angle;\r\n        }\r\n    }\r\n    SolveC3() {\r\n        const count3 = this.m_count - 2;\r\n        for (let i = 0; i < count3; ++i) {\r\n            const p1 = this.m_ps[i];\r\n            const p2 = this.m_ps[i + 1];\r\n            const p3 = this.m_ps[i + 2];\r\n            const m1 = this.m_ims[i];\r\n            const m2 = this.m_ims[i + 1];\r\n            const m3 = this.m_ims[i + 2];\r\n            const d1 = b2Vec2.SubVV(p2, p1, b2Rope.s_d1);\r\n            const d2 = b2Vec2.SubVV(p3, p2, b2Rope.s_d2);\r\n            const L1sqr = d1.LengthSquared();\r\n            const L2sqr = d2.LengthSquared();\r\n            if (L1sqr * L2sqr === 0) {\r\n                continue;\r\n            }\r\n            const a = b2Vec2.CrossVV(d1, d2);\r\n            const b = b2Vec2.DotVV(d1, d2);\r\n            let angle = b2Atan2(a, b);\r\n            const Jd1 = b2Vec2.MulSV((-1 / L1sqr), d1.SelfSkew(), b2Rope.s_Jd1);\r\n            const Jd2 = b2Vec2.MulSV((1 / L2sqr), d2.SelfSkew(), b2Rope.s_Jd2);\r\n            const J1 = b2Vec2.NegV(Jd1, b2Rope.s_J1);\r\n            const J2 = b2Vec2.SubVV(Jd1, Jd2, b2Rope.s_J2);\r\n            const J3 = Jd2;\r\n            let mass = m1 * b2Vec2.DotVV(J1, J1) + m2 * b2Vec2.DotVV(J2, J2) + m3 * b2Vec2.DotVV(J3, J3);\r\n            if (mass === 0) {\r\n                continue;\r\n            }\r\n            mass = 1 / mass;\r\n            let C = angle - this.m_as[i];\r\n            while (C > b2_pi) {\r\n                angle -= 2 * b2_pi;\r\n                C = angle - this.m_as[i];\r\n            }\r\n            while (C < -b2_pi) {\r\n                angle += 2 * b2_pi;\r\n                C = angle - this.m_as[i];\r\n            }\r\n            const impulse = -this.m_k3 * mass * C;\r\n            p1.SelfMulAdd((m1 * impulse), J1);\r\n            p2.SelfMulAdd((m2 * impulse), J2);\r\n            p3.SelfMulAdd((m3 * impulse), J3);\r\n            // this.m_ps[i] = p1;\r\n            // this.m_ps[i + 1] = p2;\r\n            // this.m_ps[i + 2] = p3;\r\n        }\r\n    }\r\n    Draw(draw) {\r\n        const c = new b2Color(0.4, 0.5, 0.7);\r\n        for (let i = 0; i < this.m_count - 1; ++i) {\r\n            draw.DrawSegment(this.m_ps[i], this.m_ps[i + 1], c);\r\n        }\r\n    }\r\n}\r\n///\r\nb2Rope.s_d = new b2Vec2();\r\nb2Rope.s_d1 = new b2Vec2();\r\nb2Rope.s_d2 = new b2Vec2();\r\nb2Rope.s_Jd1 = new b2Vec2();\r\nb2Rope.s_Jd2 = new b2Vec2();\r\nb2Rope.s_J1 = new b2Vec2();\r\nb2Rope.s_J2 = new b2Vec2();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJSb3BlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vQm94MkQvQm94MkQvUm9wZS9iMlJvcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkU7QUFFRixPQUFPLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDaEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsT0FBTyxFQUFVLE1BQU0sa0JBQWtCLENBQUM7QUFFbkQsR0FBRztBQUNILE1BQU0sT0FBTyxTQUFTO0lBQXRCO1FBQ0UsR0FBRztRQUNJLGFBQVEsR0FBYSxFQUFFLENBQUM7UUFFL0IsR0FBRztRQUNJLFVBQUssR0FBVyxDQUFDLENBQUM7UUFFekIsR0FBRztRQUNJLFdBQU0sR0FBYSxFQUFFLENBQUM7UUFFN0IsR0FBRztRQUNJLFlBQU8sR0FBVyxJQUFJLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFMUMsR0FBRztRQUNJLFlBQU8sR0FBVyxHQUFHLENBQUM7UUFFN0Isd0JBQXdCO1FBQ2pCLE9BQUUsR0FBVyxHQUFHLENBQUM7UUFFeEIsd0VBQXdFO1FBQ2pFLE9BQUUsR0FBVyxHQUFHLENBQUM7SUFDMUIsQ0FBQztDQUFBO0FBRUQsR0FBRztBQUNILE1BQU0sT0FBTyxNQUFNO0lBQW5CO1FBQ1MsWUFBTyxHQUFXLENBQUMsQ0FBQztRQUNwQixTQUFJLEdBQWEsSUFBSSxDQUFDO1FBQ3RCLFVBQUssR0FBYSxJQUFJLENBQUM7UUFDdkIsU0FBSSxHQUFhLElBQUksQ0FBQztRQUV0QixVQUFLLEdBQWEsSUFBSSxDQUFDO1FBRXZCLFNBQUksR0FBYSxJQUFJLENBQUM7UUFDdEIsU0FBSSxHQUFhLElBQUksQ0FBQztRQUV0QixjQUFTLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNqQyxj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","/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n/**\r\n\\mainpage Box2D API Documentation\r\n\r\n\\section intro_sec Getting Started\r\n\r\nFor documentation please see http://box2d.org/documentation.html\r\n\r\nFor discussion please visit http://box2d.org/forum\r\n*/\r\n// These include files constitute the main Box2D API\r\nexport * from \"./Common/b2Settings\";\r\nexport * from \"./Common/b2Math\";\r\nexport * from \"./Common/b2Draw\";\r\nexport * from \"./Common/b2Timer\";\r\nexport * from \"./Common/b2GrowableStack\";\r\nexport * from \"./Common/b2BlockAllocator\";\r\nexport * from \"./Common/b2StackAllocator\";\r\nexport * from \"./Collision/b2Collision\";\r\nexport * from \"./Collision/b2Distance\";\r\nexport * from \"./Collision/b2BroadPhase\";\r\nexport * from \"./Collision/b2DynamicTree\";\r\nexport * from \"./Collision/b2TimeOfImpact\";\r\nexport * from \"./Collision/b2CollideCircle\";\r\nexport * from \"./Collision/b2CollidePolygon\";\r\nexport * from \"./Collision/b2CollideEdge\";\r\nexport * from \"./Collision/Shapes/b2Shape\";\r\nexport * from \"./Collision/Shapes/b2CircleShape\";\r\nexport * from \"./Collision/Shapes/b2PolygonShape\";\r\nexport * from \"./Collision/Shapes/b2EdgeShape\";\r\nexport * from \"./Collision/Shapes/b2ChainShape\";\r\nexport * from \"./Dynamics/b2Fixture\";\r\nexport * from \"./Dynamics/b2Body\";\r\nexport * from \"./Dynamics/b2World\";\r\nexport * from \"./Dynamics/b2WorldCallbacks\";\r\nexport * from \"./Dynamics/b2Island\";\r\nexport * from \"./Dynamics/b2TimeStep\";\r\nexport * from \"./Dynamics/b2ContactManager\";\r\nexport * from \"./Dynamics/Contacts/b2Contact\";\r\nexport * from \"./Dynamics/Contacts/b2ContactFactory\";\r\nexport * from \"./Dynamics/Contacts/b2ContactSolver\";\r\nexport * from \"./Dynamics/Contacts/b2CircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2PolygonContact\";\r\nexport * from \"./Dynamics/Contacts/b2PolygonAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2EdgeAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2EdgeAndPolygonContact\";\r\nexport * from \"./Dynamics/Contacts/b2ChainAndCircleContact\";\r\nexport * from \"./Dynamics/Contacts/b2ChainAndPolygonContact\";\r\nexport * from \"./Dynamics/Joints/b2Joint\";\r\nexport * from \"./Dynamics/Joints/b2JointFactory\";\r\nexport * from \"./Dynamics/Joints/b2AreaJoint\";\r\nexport * from \"./Dynamics/Joints/b2DistanceJoint\";\r\nexport * from \"./Dynamics/Joints/b2FrictionJoint\";\r\nexport * from \"./Dynamics/Joints/b2GearJoint\";\r\nexport * from \"./Dynamics/Joints/b2MotorJoint\";\r\nexport * from \"./Dynamics/Joints/b2MouseJoint\";\r\nexport * from \"./Dynamics/Joints/b2PrismaticJoint\";\r\nexport * from \"./Dynamics/Joints/b2PulleyJoint\";\r\nexport * from \"./Dynamics/Joints/b2RevoluteJoint\";\r\nexport * from \"./Dynamics/Joints/b2RopeJoint\";\r\nexport * from \"./Dynamics/Joints/b2WeldJoint\";\r\nexport * from \"./Dynamics/Joints/b2WheelJoint\";\r\n// #if B2_ENABLE_PARTICLE\r\nexport * from \"./Particle/b2Particle\";\r\nexport * from \"./Particle/b2ParticleGroup\";\r\nexport * from \"./Particle/b2ParticleSystem\";\r\n// #endif\r\nexport * from \"./Rope/b2Rope\";\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm94MkQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9Cb3gyRC9Cb3gyRC9Cb3gyRC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRTtBQUVGOzs7Ozs7OztFQVFFO0FBRUYsb0RBQW9EO0FBRXBELGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLGlCQUFpQixDQUFDO0FBQ2hDLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLDJCQUEyQixDQUFDO0FBQzFDLGNBQWMsMkJBQTJCLENBQUM7QUFFMUMsY0FBYyx5QkFBeUIsQ0FBQztBQUN4QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyw4QkFBOEIsQ0FBQztBQUM3QyxjQUFjLDJCQUEyQixDQUFDO0FBRTFDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxpQ0FBaUMsQ0FBQztBQUVoRCxjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYyx1QkFBdUIsQ0FBQztBQUN0QyxjQUFjLDZCQUE2QixDQUFDO0FBRTVDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLHFDQUFxQyxDQUFDO0FBQ3BELGNBQWMscUNBQXFDLENBQUM7QUFDcEQsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLCtDQUErQyxDQUFDO0FBQzlELGNBQWMsNENBQTRDLENBQUM7QUFDM0QsY0FBYyw2Q0FBNkMsQ0FBQztBQUM1RCxjQUFjLDZDQUE2QyxDQUFDO0FBQzVELGNBQWMsOENBQThDLENBQUM7QUFFN0QsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLGtDQUFrQyxDQUFDO0FBQ2pELGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLGdDQUFnQyxDQUFDO0FBQy9DLGNBQWMsb0NBQW9DLENBQUM7QUFDbkQsY0FBYyxpQ0FBaUMsQ0FBQztBQUNoRCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLGdDQUFnQyxDQUFDO0FBRS9DLHlCQUF5QjtBQUN6QixjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyw2QkFBNkIsQ0FBQztBQUM1QyxTQUFTO0FBRVQsY0FBYyxlQUFlLENBQUMifQ==","﻿\r\nimport {\r\n\tb2Vec2, b2Transform, b2Rot,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact,\r\n} from \"./Physics.js\";\r\n\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { Rectangle } from \"../math.js\";\r\n\r\n\r\nexport class FootholdChain {\r\n\t/**\r\n\t * @param {number} id\r\n\t */\r\n\tconstructor(id) {\r\n\t\tthis.id = id;\r\n\r\n\t\t/** @type {FootholdSingle[]} */\r\n\t\tthis.footholds = [];\r\n\r\n\t\tthis.bound = new Rectangle();\r\n\r\n\t\tthis.loop = false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {FootholdSingle} head - foothold chain head\r\n\t * @param {FootholdSingle[]} map_footholds - map footholds\r\n\t * @param {function} type - foothold constructor\r\n\t */\r\n\tinit(head, map_footholds, type) {\r\n\t\tlet left, top, right, bottom;\r\n\r\n\t\tleft = head.x1;\r\n\t\ttop = head.y1;\r\n\t\tright = head.x2;\r\n\t\tbottom = head.y2;\r\n\r\n\t\tfor (let fh = head, childIndex = 0; fh != null; fh = map_footholds[fh.next], ++childIndex) {\r\n\t\t\tleft = Math.min(left, fh.x1, fh.x2);\r\n\t\t\ttop = Math.min(top, fh.y1, fh.y2);\r\n\t\t\tright = Math.max(right, fh.x1, fh.x2);\r\n\t\t\tbottom = Math.max(bottom, fh.y1, fh.y2);\r\n\r\n\t\t\tthis.footholds.push(fh);\r\n\r\n\t\t\tif (fh.next == head.id) {\r\n\t\t\t\tthis.loop = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.bound.parse(left, top, right, bottom);\r\n\r\n\t\tthis.FootholdType = type;\r\n\r\n\t\tif (type == FootholdSingle) {\r\n\t\t\tthis.footholds.forEach((fh, childIndex) => {\r\n\t\t\t\tfh.init(this, childIndex);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if (type == FootholdChainChild) {\r\n\t\t\tlet center = this.bound.center;\r\n\t\t\tlet xf = new b2Transform();\r\n\r\n\t\t\txf.SetPositionXY(center.x, center.y);\r\n\r\n\t\t\tthis.footholds.forEach((fh, childIndex) => {\r\n\t\t\t\tfh.init(this, childIndex, xf);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} childIndex\r\n\t * @returns {FootholdChainChild}\r\n\t */\r\n\tgetFootholdFromContact(childIndex) {\r\n\t\treturn this.footholds[childIndex];\r\n\t}\r\n}\r\n\r\nexport class FootholdSingle {\r\n\t/**\r\n\t * @param {object} _raw\r\n\t * @param {number} index\r\n\t * @param {number} layerIndex\r\n\t * @param {number} groupIndex\r\n\t */\r\n\tconstructor(_raw, index, layerIndex, groupIndex) {\r\n\t\tthis._raw = _raw;\r\n\r\n\t\t// ground.footholds\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.layer = layerIndex | 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.group = groupIndex | 0;\r\n\r\n\t\t/** @type {number} - in ground.footholds */\r\n\t\tthis.id = index;\r\n\t\t\r\n\t\t/** @type {number} - prev id */\r\n\t\tthis.prev = _raw.prev ? (_raw.prev - 1) : null;\r\n\r\n\t\t/** @type {number} - next id */\r\n\t\tthis.next = _raw.next ? (_raw.next - 1) : null;\r\n\r\n\t\t// chain.footholds\r\n\r\n\t\t/** @type {FootholdChain} */\r\n\t\tthis.chain = null;\r\n\r\n\t\t/** @type {number} - in chain.footholds */\r\n\t\tthis.childIndex = null;\r\n\r\n\t\t// body\r\n\t\t\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.m_angle = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.m_length = 0;\r\n\r\n\t\t// debug\r\n\r\n\t\t/** @type {number} - this和next_fh的夾角 */\r\n\t\tthis.next_a = undefined;\r\n\r\n\t\tthis.next_a_deg = undefined;\r\n\t\t\r\n\t\tthis.$showDebugInfo = false;\r\n\t}\r\n\t\r\n\tgetFootholdFromContact() {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {FootholdChain} chain\r\n\t * @param {number} childIndex\r\n\t * @param {b2Transform} body_xf\r\n\t */\r\n\tinit(chain, childIndex, body_xf) {\r\n\t\tlet x1, y1, x2, y2;\r\n\t\t\r\n\t\tthis.chain = chain;\r\n\t\tthis.childIndex = childIndex;\r\n\r\n\t\tx1 = this.x1 / $gv.CANVAS_SCALE;\r\n\t\ty1 = this.y1 / $gv.CANVAS_SCALE;\r\n\t\tx2 = this.x2 / $gv.CANVAS_SCALE;\r\n\t\ty2 = this.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\tconst dx = x2 - x1;\r\n\t\tconst dy = y2 - y1;\r\n\r\n\t\tif (dy == 0) {\r\n\t\t\tthis.m_angle = dx < 0 ? Math.PI : 0;\r\n\t\t\tthis.m_length = dx;\r\n\t\t}\r\n\t\telse if (dx == 0) {\r\n\t\t\tthis.m_angle = dy < 0 ? (-Math.PI * 0.5) : (Math.PI * 0.5);\r\n\t\t\tthis.m_length = dy;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.m_angle = Math.atan2(dy, dx);\r\n\t\t\tthis.m_length = Math.sqrt(dy ** 2 + dx ** 2);\r\n\t\t}\r\n\t}\r\n\r\n\tGetVertex1() {\r\n\t\treturn new b2Vec2(this.x1 / $gv.CANVAS_SCALE, this.y1 / $gv.CANVAS_SCALE);\r\n\t}\r\n\r\n\tGetVertex2() {\r\n\t\treturn new b2Vec2(this.x2 / $gv.CANVAS_SCALE, this.y2 / $gv.CANVAS_SCALE);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tGetWorldCenter() {\r\n\t\treturn this.body.GetWorldCenter();\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalPoint(worldPoint, out) {\r\n\t\treturn this.body.GetLocalPoint(worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n\t\treturn this.body.GetLinearVelocityFromWorldPoint(worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {b2Vec2} worldVector\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalVector(worldVector, out) {\r\n\t\treturn this.body.GetLocalVector(worldVector, out);\r\n\t}\r\n\r\n\t/** @type {FootholdSingle} */\r\n\tget next_fh() {\r\n\t\tconst footholds = this.body.m_world.ground.footholds;\r\n\t\treturn footholds[this.next];\r\n\t}\r\n\t/** @type {FootholdSingle} */\r\n\tget prev_fh() {\r\n\t\tconst footholds = this.body.m_world.ground.footholds;\r\n\t\treturn footholds[this.prev];\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget x1() { return this._raw.x1; }\r\n\t/** @type {number} */\r\n\tget y1() { return this._raw.y1; }\r\n\t/** @type {number} */\r\n\tget x2() { return this._raw.x2; }\r\n\t/** @type {number} */\r\n\tget y2() { return this._raw.y2; }\r\n\r\n\tget is_empty() {\r\n\t\treturn this.is_first && this.is_last;\r\n\t}\r\n\tget is_first() {\r\n\t\treturn this._raw.prev == 0;\r\n\t}\r\n\tget is_last() {\r\n\t\treturn this._raw.next == 0;\r\n\t}\r\n\tget is_wall() {\r\n\t\treturn this.x1 == this.x2;\r\n\t}\r\n\tget _is_horizontal_floor() {\r\n\t\treturn this.y1 == this.y2;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLine(ctx) {\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(this.x1, this.y1);\r\n\t\tctx.lineTo(this.x2, this.y2);\r\n\t\tctx.stroke();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLineV01(ctx) {\r\n\t\tif (this.m_hasVertex0) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.moveTo(this.x0, this.y0);\r\n\t\t\tctx.lineTo(this.x1, this.y1);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\t_drawLineV23(ctx) {\r\n\t\tif (this.m_hasVertex3) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.moveTo(this.x2, this.y2);\r\n\t\t\tctx.lineTo(this.x3, this.y3);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\t$_text_pos(x1, y1, x2, y2) {\r\n\t\treturn {\r\n\t\t\tx: (x2 + x1) / 2,\r\n\t\t\ty: Math.max(y2, y1),\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t$drawDebugInfo(renderer) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst fh = this;\r\n\t\tconst text = `[${fh.id}](${fh.x1}, ${fh.y1})[${fh.group}]{${fh._raw.piece}}∠${fh.next_a_deg}`;\r\n\r\n\t\tconst ta = ctx.textAlign, tb = ctx.textBaseline;\r\n\t\tconst tp = this.$_text_pos(fh.x1, fh.y1, fh.x2, fh.y2);\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"top\";\r\n\r\n\t\tctx.lineWidth = 5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#FF00FF\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.strokeText(text, tp.x, tp.y);\r\n\r\n\t\tctx.fillStyle = \"#FFF\";\r\n\t\tctx.fillText(text, tp.x, tp.y);\r\n\r\n\t\t//ctx.fillText(`[${fh.piece}][1](${fh.x2}, ${fh.y2})`, fh.x2, fh.y2);\r\n\r\n\t\tctx.textAlign = ta;\r\n\t\tctx.textBaseline = tb;\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} color\r\n\t */\r\n\t$drawDebugInfo2(renderer, color) {\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst fh = this;\r\n\t\tconst text = `${fh.prev}<${fh.id}>${fh.next} C{${fh.chain.id}} (${fh.x1}, ${fh.y1})(${fh.x2}, ${fh.y2}) L[${fh.layer}] G[${fh.group}] P{${fh._raw.piece}}∠${fh.next_a_deg}`;\r\n\r\n\t\tlet ta = ctx.textAlign, tb = ctx.textBaseline;\r\n\t\tconst tp = this.$_text_pos(fh.x1, fh.y1, fh.x2, fh.y2);\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"top\";\r\n\r\n\t\tctx.lineWidth = 5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tfh._drawLine(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = color || \"#FF00FF\";\r\n\t\tfh._drawLine(ctx);\r\n\t\t\r\n\t\t//ctx.strokeStyle = \"#FF0\";\r\n\t\t//fh._drawLineV01(ctx);\r\n\t\t//fh._drawLineV23(ctx);\r\n\r\n\t\tctx.lineWidth = 2.5;\r\n\t\tctx.strokeStyle = \"#000\";\r\n\t\tctx.strokeText(text, tp.x, tp.y);\r\n\r\n\t\tctx.fillStyle = \"#FFF\";\r\n\t\tctx.fillText(text, tp.x, tp.y);\r\n\r\n\t\t//ctx.fillText(`[${fh.piece}][1](${fh.x2}, ${fh.y2})`, fh.x2, fh.y2);\r\n\r\n\t\tctx.textAlign = ta;\r\n\t\tctx.textBaseline = tb;\r\n\t}\r\n}\r\n\r\nexport class FootholdChainChild extends FootholdSingle {\r\n\tconstructor(_raw, index, layerIndex, groupIndex) {\r\n\t\tsuper(_raw, index, layerIndex, groupIndex);\r\n\r\n\t\t/** @type {b2Transform} - local */\r\n\t\tthis.m_xf = new b2Transform();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {FootholdChain} chain\r\n\t * @param {number} childIndex\r\n\t * @param {b2Transform} body_xf\r\n\t */\r\n\tinit(chain, childIndex, body_xf) {\r\n\t\tsuper.init(chain, childIndex, body_xf);\r\n\t\t\r\n\t\tb2Vec2.AddVV(this.GetVertex1(), this.GetVertex2(), this.m_xf.p);\r\n\t\tb2Vec2.MulVS(this.m_xf.p, 0.5, this.m_xf.p);\r\n\t\tthis.m_xf.SetRotationAngle(this.m_angle);\r\n\r\n\t\tb2Transform.MulTXX(this.m_xf, body_xf, this.m_xf);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tGetWorldCenter() {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn xf.p;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalPoint(worldPoint, out) {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn b2Transform.MulTXV(xf, worldPoint, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldPoint\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n\t\tconst body = this.body;\r\n\t\treturn b2Vec2.AddVCrossSV(body.m_linearVelocity, body.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.GetWorldCenter(), b2Vec2.s_t0), out);\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {b2Vec2} worldVector\r\n\t * @param {b2Vec2} out\r\n\t */\r\n\tGetLocalVector(worldVector, out) {\r\n\t\tconst xf = new b2Transform();\r\n\t\tb2Transform.MulXX(this.m_xf, this.body.m_xf, xf);\r\n\t\treturn b2Rot.MulTRV(xf.q, worldVector, out);\r\n\t}\r\n}\r\n","﻿\r\nimport {\r\n\tb2_polygonRadius,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2PolygonShape, b2EdgeShape, b2ChainShape,\r\n\tb2Body, b2Fixture,\r\n\tb2Contact, b2Manifold, b2ContactImpulse, b2WorldManifold\r\n} from \"./Physics.js\";\r\n\r\nimport { Vec2, Rectangle } from \"../math.js\";\r\n\r\nimport { World, GRAVITY } from \"./World.js\";\r\nimport { FootholdChain, FootholdSingle, FootholdChainChild} from \"./Foothold.js\";\r\n\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport const Foothold = FootholdSingle;\r\n//export const Foothold = FootholdChainChild;\r\n\r\n\r\n/**\r\n * 可以防止player卡在foothold裡面\r\n */\r\nwindow.CREATE_SOLID_FOOTHOLD = false;\r\n/**\r\n * polygon + edge\r\n */\r\nwindow.CREATE_SOLID_AND_EDGE_FOOTHOLD = false;\r\n\r\n/**\r\n * b2EdgeShape ghost vertex\r\n */\r\nwindow.USE_GHOST_VERTEX = true;\r\n\r\nwindow.FOOTHOLD_IS_BULLET = true;\r\n\r\n/**\r\n * @param {number} left\r\n * @param {number} right\r\n * @param {number} interpolater - 0~1\r\n */\r\nfunction lerp(left, right, interpolater) {\r\n\treturn left + interpolater * (right - left);\r\n}\r\n\r\nexport class Ground {\r\n\tconstructor() {\r\n\t\t/** @type {b2Body[]} */\r\n\t\tthis.bodies = null;\r\n\r\n\t\t/** @type {Foothold[]} */\r\n\t\tthis.footholds = null;\r\n\t\t\r\n\t\t/** @type {Rectangle[]} */\r\n\t\tthis.rectChains = null;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.footholds = [];\r\n\t\tthis.bodies = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {object} data\r\n\t * @param {World} world\r\n\t */\r\n\tload(map_raw_data, world) {\r\n\t\tif (!(\"foothold\" in map_raw_data)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (let layerIndex in map_raw_data.foothold) {\r\n\t\t\tlet groups = map_raw_data.foothold[layerIndex];\r\n\r\n\t\t\t//foothold[5] maybe is Bounding-Box(loop line)\r\n\r\n\t\t\tfor (let groupIndex in groups) {\r\n\t\t\t\tlet segment = groups[groupIndex];\r\n\t\t\t\tfor (let k in segment) {\r\n\t\t\t\t\tconst index = k - 1;\r\n\r\n\t\t\t\t\tlet fh = new Foothold(segment[k], index, layerIndex, groupIndex);\r\n\r\n\t\t\t\t\tthis.footholds[index] = fh;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/** @type {FootholdChain[]} */\r\n\t\tlet chains = [];\r\n\r\n\t\tlet chainId = 0;\r\n\t\tlet rectChains = this.rectChains = [];\r\n\r\n\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\tconst foothold = this.footholds[i];\r\n\t\t\t\r\n\t\t\tif (foothold.chain == null) {\r\n\t\t\t\t/** @type {foothold} */\r\n\t\t\t\tlet head;\r\n\r\n\t\t\t\t//find head\r\n\t\t\t\tfor (let fh = foothold; fh != null; fh = this.footholds[fh.prev]) {\r\n\t\t\t\t\tif (fh.prev != null && fh.prev == foothold.id) {\r\n\t\t\t\t\t\thead = fh;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!head) {\r\n\t\t\t\t\thead = foothold;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet chain = new FootholdChain(chainId);\r\n\r\n\t\t\t\tchain.init(head, this.footholds, Foothold);\r\n\r\n\t\t\t\tif (Foothold == FootholdSingle) {\r\n\t\t\t\t\tif (window.CREATE_SOLID_AND_EDGE_FOOTHOLD) {\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, false);//edge\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, true);//polygon\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._create_foothold(world, chain, window.CREATE_SOLID_FOOTHOLD);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (Foothold == FootholdChainChild) {\r\n\t\t\t\t\tthis._create_chain(world, chain);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchains.push(chain);\r\n\r\n\t\t\t\trectChains[chainId] = chain.bound;\r\n\t\t\t\t\r\n\t\t\t\tchainId++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @param {FootholdChain} chain\r\n\t */\r\n\t_create_chain(world, chain) {\r\n\t\t/** @type {b2Body} */\r\n\t\tlet body;\r\n\r\n\t\t/** @type {b2ChainShape} */\r\n\t\tlet shape;\r\n\r\n\t\t{\r\n\t\t\tlet bdef = new b2BodyDef();\r\n\r\n\t\t\tconst center = chain.bound.center;\r\n\r\n\t\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\t\tbdef.position.Set(center.x / $gv.CANVAS_SCALE, center.y / $gv.CANVAS_SCALE);\r\n\t\t\tbdef.angle = 0;\r\n\t\t\tbdef.gravityScale = 0;\r\n\t\t\tbdef.linearDamping = 1;\r\n\t\t\tbdef.bullet = true;\r\n\t\t\tbdef.userData = this;\r\n\r\n\t\t\tbody = world.CreateBody(bdef);\r\n\t\t\tbody.$type = \"ground\";\r\n\r\n\t\t\tthis.bodies.push(body);\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tshape = new b2ChainShape();\r\n\r\n\t\t\t/** @type {b2Vec2[]} */\r\n\t\t\tlet vertices = [body.GetLocalPoint(chain.footholds[0].GetVertex1(), new b2Vec2())];\r\n\r\n\t\t\tfor (let i = 0; i < chain.footholds.length; ++i) {\r\n\t\t\t\tconst fh = chain.footholds[i];\r\n\r\n\t\t\t\tvertices.push(body.GetLocalPoint(fh.GetVertex2(), new b2Vec2()));\r\n\r\n\t\t\t\tfh.body = body;\r\n\t\t\t\tfh._chain = chain;\r\n\t\t\t}\r\n\r\n\t\t\tif (chain.loop) {\r\n\t\t\t\tshape.CreateLoop(vertices);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.CreateChain(vertices);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tlet fdef = new b2FixtureDef();\r\n\t\t\tfdef.shape = shape;\r\n\t\t\tfdef.density = 1;\r\n\t\t\tfdef.filter.Copy(FilterHelper.get(\"foothold\"));\r\n\t\t\tfdef.friction = 1;\r\n\t\t\tfdef.restitution = 0;\r\n\t\t\tfdef.userData = chain;\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\t//fixture.beginContact = this.beginContact_bodyBase_oneway;\r\n\t\t\tfixture.endContact = this.endContact_bodyBase_oneway;\r\n\t\t\tfixture.preSolve = this.preSolveGround_bodyBase_oneway;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @param {FootholdChain} chain\r\n\t * @param {boolean} is_solid\r\n\t */\r\n\t_create_foothold(world, chain, is_solid) {\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\r\n\t\t/** @type {b2PolygonShape&b2EdgeShape} */\r\n\t\tlet shape;\r\n\r\n\r\n\t\tif (is_solid) {\r\n\t\t\tshape = new b2PolygonShape();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tshape = new b2EdgeShape();\r\n\t\t}\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\tbdef.linearDamping = 1;\r\n\t\tbdef.gravityScale = 0;\r\n\t\tbdef.userData = this;\r\n\t\tbdef.bullet = window.FOOTHOLD_IS_BULLET;\r\n\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.density = 1;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"foothold\"));\r\n\t\tfdef.friction = 1;\r\n\t\tfdef.restitution = 0;\r\n\t\t//fdef.userData = chain;\r\n\r\n\t\tfor (let i = 0; i < chain.footholds.length; ++i) {\r\n\t\t\tconst fh = chain.footholds[i];\r\n\t\t\t//if (fh.is_wall) {\r\n\t\t\t//\tthis._create_wall(fh);\r\n\t\t\t//\tcontinue;\r\n\t\t\t//}\r\n\t\t\tlet x1, y1, x2, y2;\r\n\r\n\t\t\tx1 = fh.x1 / $gv.CANVAS_SCALE;\r\n\t\t\ty1 = fh.y1 / $gv.CANVAS_SCALE;\r\n\t\t\tx2 = fh.x2 / $gv.CANVAS_SCALE;\r\n\t\t\ty2 = fh.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\t\tcreate.call(this, fh);\r\n\t\t\t\r\n\t\t\tconst next = this.footholds[fh.next];\r\n\t\t\tif (next) {\r\n\t\t\t\tlet x1n, y1n, x2n, y2n;\r\n\t\t\t\tlet nx1, ny1, nx2, ny2;\r\n\r\n\t\t\t\tnx1 = next.x1 / $gv.CANVAS_SCALE;\r\n\t\t\t\tny1 = next.y1 / $gv.CANVAS_SCALE;\r\n\t\t\t\tnx2 = next.x2 / $gv.CANVAS_SCALE;\r\n\t\t\t\tny2 = next.y2 / $gv.CANVAS_SCALE;\r\n\r\n\t\t\t\tlet v1 = new b2Vec2(x1 - x2, y1 - y2);\r\n\t\t\t\tlet v2 = new b2Vec2(nx2 - nx1, ny2 - ny1);\r\n\t\t\t\tlet a = Math.atan2(b2Vec2.CrossVV(v1, v2), b2Vec2.DotVV(v1, v2));\r\n\r\n\t\t\t\tfh.next_a = a;\r\n\t\t\t\tfh.next_a_deg = Math.abs(Math.trunc(a * 180 / Math.PI)) % 180;\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * @param {Foothold} fh\r\n\t\t * @param {number} x1\r\n\t\t * @param {number} y1\r\n\t\t * @param {number} x2\r\n\t\t * @param {number} y2\r\n\t\t */\r\n\t\tfunction create(fh) {\r\n\t\t\tb2Vec2.AddVV(fh.GetVertex1(), fh.GetVertex2(), bdef.position);\r\n\t\t\tb2Vec2.MulVS(bdef.position, 0.5, bdef.position);\r\n\r\n\t\t\tlet hlen = fh.m_length * 0.5;\r\n\t\t\tbdef.angle = fh.m_angle;\r\n\r\n\t\t\tlet body = world.CreateBody(bdef);\r\n\t\t\tbody.$type = \"ground\";\r\n\r\n\t\t\tif (is_solid) {\r\n\t\t\t\tshape.SetAsBox(hlen, b2_polygonRadius);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshape.m_vertex1.Set(-hlen, 0)\r\n\t\t\t\tshape.m_vertex2.Set(hlen, 0);\r\n\r\n\t\t\t\tif (window.USE_GHOST_VERTEX) {\r\n\t\t\t\t\tif (fh.prev != null) {\r\n\t\t\t\t\t\tconst prev = this.footholds[fh.prev];\r\n\t\t\t\t\t\tshape.m_hasVertex0 = true;\r\n\t\t\t\t\t\tshape.m_vertex0.Copy(prev.GetVertex2());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (fh.next != null) {\r\n\t\t\t\t\t\tconst next = this.footholds[fh.next];\r\n\t\t\t\t\t\tshape.m_hasVertex3 = true;\r\n\t\t\t\t\t\tshape.m_vertex3.Copy(next.GetVertex1());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfdef.userData = fh;\r\n\r\n\t\t\tlet fixture = body.CreateFixture(fdef);\r\n\r\n\t\t\t//fixture.beginContact = this.beginContact_bodyBase_oneway;\r\n\t\t\tfixture.endContact = this.endContact_bodyBase_oneway;\r\n\t\t\tfixture.preSolve = this.preSolveGround_bodyBase_oneway;\r\n\r\n\t\t\tfh.body = body;\r\n\t\t\tthis.bodies.push(body);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {{left: number, right: number}}\r\n\t */\r\n\t_compute_left_right_border() {\r\n\t\tlet left = null, right = null;\r\n\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\tlet fh = this.footholds[i];\r\n\t\t\t//if (fh.layer == 5) {\r\n\t\t\t\tlet x1, x2;\r\n\t\t\t\t\r\n\t\t\t\tif (fh.x1 < fh.x2) {\r\n\t\t\t\t\tx1 = fh.x1;\r\n\t\t\t\t\tx2 = fh.x2;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tx1 = fh.x2;\r\n\t\t\t\t\tx2 = fh.x1;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (left == null || x1 < left) {\r\n\t\t\t\t\tleft = x1;\r\n\t\t\t\t}\r\n\t\t\t\tif (right == null || x2 > right) {\r\n\t\t\t\t\tright = x2;\r\n\t\t\t\t}\r\n\t\t\t\t//if (left != null) {\r\n\t\t\t\t//\tleft = Math.min(left, fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\tleft = Math.min(fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t\t//else {\r\n\t\t\t\t//\tright = Math.max(fh.x1, fh.x2);\r\n\t\t\t\t//}\r\n\t\t\t//}\r\n\t\t}\r\n\t\treturn { left, right };\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tbeginContact_bodyBase_oneway(contact, fa, fb, childIndexA, childIndexB) {\r\n\t\tif (fb.$type == \"player\") {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tlet numPoints, worldManifold;\r\n\t\tconst playerBody = fb.GetBody();\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tconst fh = this.getFootholdFromContact(childIndexA);\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = fb.GetUserData();\r\n\t\tif (!player || !player.body || player.body.$type != \"player\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (player.state.ladder) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst $fh = player.$foothold;\r\n\t\tconst player_pos = player.foot_walk.GetWorldCenter();//player.getPosition();\r\n\r\n\t\tif (fh.is_wall) {\r\n\t\t\tcontact.SetFriction(0);\r\n\r\n\t\t\tconst p$fh = player.prev_$fh;\r\n\r\n\t\t\tif ((!$fh || $fh.chain != fh.chain) &&\r\n\t\t\t\tp$fh &&\r\n\t\t\t\tp$fh.chain != fh.chain &&\r\n\t\t\t\tp$fh.layer != fh.layer\r\n\t\t\t) {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (player.state.dropDown && player.leave_$fh != null) {\r\n\t\t\t//HACK: ?? foothold edge\r\n\t\t\tif (player.leave_$fh == $fh && $fh != fh) {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (playerBody.$type == \"pl_ft_walk\" &&// player.leave_$fh &&\r\n\t\t\t\tplayer.leave_$fh.id != fh.id &&\r\n\t\t\t\tplayer.leave_$fh.chain.id != fh.chain.id &&\r\n\t\t\t\t(player.leave_$fh.prev == null || player.leave_$fh.prev != fh.id) &&\r\n\t\t\t\t(player.leave_$fh.next == null || player.leave_$fh.next != fh.id)\r\n\t\t\t) {\r\n\t\t\t\tconst foot = player.foot_walk.GetWorldCenter();\r\n\t\t\t\tnumPoints = contact.GetManifold().pointCount;\r\n\t\t\t\tworldManifold = new b2WorldManifold();\r\n\t\t\t\tcontact.GetWorldManifold(worldManifold);\r\n\r\n\t\t\t\t//check if contact points are moving into platform\r\n\t\t\t\tfor (let i = 0; i < numPoints; ++i) {\r\n\t\t\t\t\tconst cpoint = worldManifold.points[i];\r\n\t\t\t\t\tif (cpoint.y > foot.y) {\r\n\t\t\t\t\t\tplayer.leave_$fh = null;\r\n\t\t\t\t\t\tplayer.state.dropDown = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tplayer.state.dropDown = false;\r\n\t\t}\r\n\r\n\t\tif (player.leave_$fh && player.leave_$fh == fh) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet ccc = $fh && (\r\n\t\t\tfh.is_wall ||\r\n\t\t\t(fh == player._foothold && (fh.y1 < $fh.y1 || fh.y2 < $fh.y2)) ||\r\n\t\t\t(fh != player._foothold && (fh.y1 > $fh.y1 || fh.y2 > $fh.y2))\r\n\t\t);\r\n\t\tif (ccc && $fh != fh && (!player._$fallEdge || player._$fallEdge != $fh)) {\r\n\t\t\tif (fh.chain.id != $fh.chain.id &&\r\n\t\t\t\t(!$fh.prev || $fh.y1 != fh.y2) &&\r\n\t\t\t\t(!$fh.next || $fh.y2 != fh.y1)\r\n\t\t\t) {\r\n\t\t\t\tplayer.leave_$fh = fh;\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (player._$fallEdge && player._$fallEdge == fh) {\r\n\t\t\tcontact.SetEnabled(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst relative_position = fh.GetLocalPoint(player_pos, new b2Vec2());\r\n\t\tconst platformFaceY = b2_polygonRadius;\r\n\r\n\t\tconst foot_width = player.chara_profile.foot_width;\r\n\r\n\t\tif (numPoints == null) {\r\n\t\t\tnumPoints = contact.GetManifold().pointCount;\r\n\t\t\tworldManifold = new b2WorldManifold();\r\n\t\t\tcontact.GetWorldManifold(worldManifold);\r\n\t\t}\r\n\r\n\t\t//check if contact points are moving into platform\r\n\t\tfor (let i = 0; i < numPoints; ++i) {\r\n\t\t\tconst cpoint = worldManifold.points[i];\r\n\t\t\tconst pointVelPlatform = fh.GetLinearVelocityFromWorldPoint(cpoint, new b2Vec2());\r\n\t\t\tconst pointVelOther = playerBody.GetLinearVelocityFromWorldPoint(cpoint, new b2Vec2());\r\n\t\t\tconst point = new b2Vec2(pointVelOther.x - pointVelPlatform.x, pointVelOther.y - pointVelPlatform.y);\r\n\t\t\tconst relativeVel = fh.GetLocalVector(point, new b2Vec2());\r\n\t\t\tconst relativePosition = fh.GetLocalPoint(cpoint, new b2Vec2());\r\n\r\n\t\t\tif (relative_position.y <= -(foot_width - platformFaceY) ||\r\n\t\t\t\t(cpoint.y > player_pos.y && relativePosition.y <= platformFaceY)\r\n\t\t\t) {\r\n\t\t\t\tif (relativeVel.y > 1) {//if moving down faster than 1 m/s, handle as before\r\n\t\t\t\t\t//player._foothold = fh;\r\n\t\t\t\t\tif (fh.is_wall || player._which_foothold_contact(fh, cpoint)) {\r\n\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tnormal_contact(cpoint);\r\n\t\t\t\t\t//\treturn;//not primary, normal contact \r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse if (relativeVel.y > -1) { //if moving slower than 1 m/s\r\n\t\t\t\t\t//borderline case, moving only slightly out of platform\r\n\t\t\t\t\t//player._foothold = fh;\r\n\t\t\t\t\tif (fh.is_wall || player._which_foothold_contact(fh, cpoint)) {\r\n\t\t\t\t\t\tif ($fh && $fh.id != fh.id) {\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\treturn;//contact point is less than 5cm inside front face of platfrom\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tnormal_contact(cpoint);\r\n\t\t\t\t\t//\treturn;//not primary, normal contact\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse if (fh.is_wall) {//contact wall's upper vertex\r\n\t\t\t\t\tconst py = player_pos.y * $gv.CANVAS_SCALE;\r\n\t\t\t\t\tif (fh.y2 >= fh.y1) {\r\n\t\t\t\t\t\tif (py <= fh.y1) {\r\n\t\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (py <= fh.y2) {\r\n\t\t\t\t\t\t\tnormal_contact(cpoint);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//no points are moving into platform, contact should not be solid\r\n\t\tcontact.SetEnabled(false);\r\n\r\n\t\t/**\r\n\t\t * @param {b2Vec2} cpoint\r\n\t\t */\r\n\t\tfunction normal_contact(cpoint) {\r\n\t\t\tif ((fh.prev == null && (cpoint.x * $gv.CANVAS_SCALE) < fh.x1) ||\r\n\t\t\t\t(fh.next == null && (cpoint.x * $gv.CANVAS_SCALE) > fh.x2)\r\n\t\t\t) {\r\n\t\t\t\tplayer.state.jump = true;\r\n\r\n\t\t\t\tplayer._$fallEdge = fh;\r\n\r\n\t\t\t\tplayer._foothold = null;\r\n\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t//\r\n\t\t\t\tplayer.$foothold = null;\r\n\r\n\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tendContact_bodyBase_oneway(contact, fa, fb, childIndexA, childIndexB) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst player = fb.GetUserData();\r\n\t\tif (!player) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tconst fh = this.getFootholdFromContact(childIndexA);\r\n\r\n\t\tplayer.prev_$fh = fh;\r\n\r\n\t\tif (player._foot_contact_list.length) {\r\n\t\t\tplayer._foot_contact_list.forEach((fc, i) => {\r\n\t\t\t\tif (fc.foothold == fh) {\r\n\t\t\t\t\tplayer._foot_contact_list.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif (player._$fallEdge && fh == player._$fallEdge) {\r\n\t\t\tplayer._$fallEdge = null;\r\n\t\t}\r\n\t\telse if (player._foothold && fh == player._foothold) {\r\n\t\t\tif (player._foot_contact_list.length) {\r\n\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\tlet max = player._foot_contact_list.pop();\r\n\t\t\t\tplayer.$foothold = max.foothold;\r\n\t\t\t\tplayer._foothold = max.foothold;\r\n\t\t\t\tplayer._foot_at = max.position;\r\n\t\t\t\tplayer._foothold_priority = max.priority;\r\n\t\t\t\t//console.log(\"end contact: contact old foothold: fh == player._foothold\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tplayer._foothold = null;//正常離開地面\r\n\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t//console.log(\"end contact: 正常離開地面: fh == player._foothold\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (player.$foothold && fh == player.$foothold) {\r\n\t\t\tif (player._foot_contact_list.length) {\r\n\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\tlet max = player._foot_contact_list.pop();\r\n\t\t\t\tplayer.$foothold = max.foothold;\r\n\t\t\t\tplayer._foothold = max.foothold;\r\n\t\t\t\tplayer._foot_at = max.position;\r\n\t\t\t\tplayer._foothold_priority = max.priority;\r\n\t\t\t\t//console.log(\"end contact: contact old foothold: fh == player.$foothold\");\r\n\t\t\t}\r\n\t\t\telse {//afterStep\r\n\t\t\t\tif (player._foothold) {\r\n\t\t\t\t\tplayer.prev_$fh = player.$foothold;\r\n\r\n\t\t\t\t\tplayer.$foothold = player._foothold;\r\n\t\t\t\t\t//console.log(\"end contact: contact other foothold\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tplayer.$foothold = null;//正常離開地面\r\n\t\t\t\t\tplayer._foot_at = null;\r\n\t\t\t\t\t//console.info(\"end contact: 正常離開地面: fh == player.$foothold\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (player.leave_$fh && player.leave_$fh == fh) {\r\n\t\t\tplayer.leave_$fh = null;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Manifold} oldManifold\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t * @param {number} childIndexA\r\n\t * @param {number} childIndexB\r\n\t */\r\n\tpreSolveGround_bodyBase_oneway(contact, oldManifold, fa, fb, childIndexA, childIndexB) {\r\n\t\t/** @type {Ground} */\r\n\t\tlet that = fa.GetBody().GetUserData();\r\n\r\n\t\t/** @type {Foothold} */\r\n\t\tlet target = this;\r\n\r\n\t\tthat.beginContact_bodyBase_oneway.call(target, contact, fa, fb, childIndexA, childIndexB);\r\n\t\t\r\n\t\t//if (contact.IsEnabled() && contact.IsTouching()) {\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\tunload(world) {\r\n\t\tfor (let i = 0; i < this.bodies.length; ++i) {\r\n\t\t\tworld.DestroyBody(this.bodies[i]);\r\n\t\t}\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {object} data\r\n\t */\r\n\taddFoothold(data) {\r\n\t\tthis.footholds.push(new Foothold(data));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t$drawDebugInfo(renderer) {\r\n\t\tif ($gv.m_display_foothold) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.lineCap = \"round\";\r\n\t\t\tfor (let i = 0; i < this.footholds.length; ++i) {\r\n\t\t\t\tlet fh = this.footholds[i];\r\n\t\t\t\tif (fh == null) {//line end\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (fh.$showDebugInfo) {\r\n\t\t\t\t\tfh.$drawDebugInfo(renderer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t$showDebugInfo(layer, group, isShow, isHide) {\r\n\t\tif (isShow == null) {\r\n\t\t\tisShow = true;\r\n\t\t}\r\n\t\tif (isHide == null) {\r\n\t\t\tisHide = false;\r\n\t\t}\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tif (fh.layer == layer && fh.group == group) {\r\n\t\t\t\tfh.$showDebugInfo = isShow;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfh.$showDebugInfo = isHide;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t$showDebugInfoByLayer(layer, isShow, isHide) {\r\n\t\tif (isShow == null) {\r\n\t\t\tisShow = true;\r\n\t\t}\r\n\t\tif (isHide == null) {\r\n\t\t\tisHide = false;\r\n\t\t}\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tif (fh.layer == layer) {\r\n\t\t\t\tfh.$showDebugInfo = isShow;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfh.$showDebugInfo = isHide;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//static $showDebugInfoByGroup() {\r\n\t//}\r\n\t$hideAllDebugInfo() {\r\n\t\tfor (let fh of this.footholds) {\r\n\t\t\tfh.$showDebugInfo = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nGround.Foothold = Foothold;\r\n\r\n/*\r\nmap=100000000\r\n$$hhh = -1.5;\r\nclearInterval($$$si)\r\n$$$si = setInterval(() => {\r\n    chara.$physics.setPosition(113.96875, 7.84375 + $$hhh);\r\n\t$$hhh += 0.005;//1 / $gv.CANVAS_SCALE;\r\n\t$$hhh = $$hhh > 2 ? 0 : $$hhh;\r\n    chara.$physics.body.SetAwake(true);\r\n    setTimeout(() => {\r\n        chara.$physics.state.jump = true;\r\n        $gv.input_keyDown.f = 1;\r\n        setTimeout(() => {\r\n            $gv.input_keyDown.f = 0;\r\n            $gv.input_keyUp.f = 1;\r\n            setTimeout(() => {\r\n                $gv.input_keyUp.f = 0;\r\n            }, 50);\r\n        }, 50);\r\n    }, 140);\r\n}, 1000);\r\n\r\n*/\r\n\r\n/*\r\nmap=100000000\r\nchara.$physics.setPosition(4583/32+3,364/32-3)\r\nchara.$physics.body.m_linearVelocity.Set(-22,15)\r\n\r\n*/\r\n","﻿\r\nimport { Vec2 } from \"../math.js\";\r\n\r\n\r\nexport class ActionAnimationFrameData {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.move = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded raw data\r\n\t * @param {ActionAnimationFrameData} raw\r\n\t * @param {string} action\r\n\t * @param {number} frame\r\n\t */\r\n\t_load(raw, action, frame) {\r\n\t\tthis._raw = raw;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = raw.delay;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tif (raw.move) {\r\n\t\t\tthis.move = new Vec2(raw.move.x, raw.move.y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.move = new Vec2(0, 0);\r\n\t\t}\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = raw.action || action;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = raw.frame || frame;\r\n\t}\r\n}\r\n\r\nexport class ActionAnimation {\r\n\tconstructor(raw) {\r\n\t\t/** @returns {ActionAnimationFrameData[]} */\r\n\t\tthis.frames = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._action = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\r\n\t\t/** @type {number} this.delay = delay < 0 ? -delay:0; if (this.delay == 0) launch attack */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.loop = false;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\t_load(action) {\r\n\t\tthis._action = action;\r\n\t\tthis.frames = ActionAnimation.Adef[action];\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\treload(action) {\r\n\t\tthis.reset();\r\n\t\tthis._load(action);\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * update action delay, target.action, target.action_frame, target.tx, target.ty\r\n\t * @param {number} stamp\r\n\t * @param {CharacterRenderer} target\r\n\t */\r\n\tupdate(stamp, target) {\r\n\t\tif (!this.frames) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fdat = this.fdat;\r\n\t\tlet delay = 0;\r\n\r\n\t\tif (!fdat) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.time = this.time + stamp;\r\n\r\n\t\tif (fdat.delay < 0) {\r\n\t\t\tfdat.delay = -fdat.delay;\r\n\t\t}\r\n\r\n\t\tif (fdat.delay > 0) {\r\n\t\t\tdelay = fdat.delay;\r\n\t\t\tthis.delay = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelay = -fdat.delay;\r\n\t\t\tthis.delay = delay;\r\n\t\t}\r\n\r\n\t\tif (this.time > delay) {\r\n\t\t\tthis.frame = ++this.frame;\r\n\t\t\tthis.time = 0;\r\n\t\t}\r\n\r\n\t\t//translate target position\r\n\t\tif (fdat.move) {\r\n\t\t\ttarget.tx = -fdat.move.x * target.front;\r\n\t\t\ttarget.ty = fdat.move.y;//Y 軸相反\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\tif (this.isEnd()) {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// 改變 action & action_frame 會造成迴圈: this.reload(this._action)\r\n\t\tif (!target._ride_action) {\r\n\t\t\ttarget._action = fdat.action;\r\n\t\t}\r\n\t\ttarget._action_frame = fdat.frame;\r\n\r\n\t\tif (!this.frames || this.fdat == null) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t\telse if (!this.loop) {\r\n\t\t\tthis._is_end = false;\r\n\t\t}\r\n\t\tif (this.frames.length <= 1) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\treturn this._is_end;\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.frames.reduce((total, frame) => total + frame.delay, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * frame data\r\n\t * @returns {ActionAnimationFrameData}\r\n\t */\r\n\tget fdat() {\r\n\t\treturn this.frames[this.frame];\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\t/** @type {{[action:string]:ActionAnimationFrameData[]}} */\r\n\t\tlet raw = await $get.data(ActionAnimation._base_path);\r\n\r\n\t\tlet aadef = Object.assign({}, raw);\r\n\t\t\r\n\t\tdelete aadef['info'];\r\n\r\n\t\tfor (let actName in aadef) {\r\n\t\t\tlet aa = aadef[actName];\r\n\t\t\taadef[actName] = Object.values(aa).map((_fdef, frame) => {\r\n\t\t\t\tlet fdef = new ActionAnimationFrameData();\r\n\t\t\t\tfdef._load(_fdef, actName, frame);\r\n\t\t\t\treturn fdef;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//action definition\r\n\t\tActionAnimation.Adef = aadef;\r\n\r\n\t\twindow.CharacterActionAnimationDefinition = aadef;\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Character/00002000\";\r\n\t}\r\n}\r\n/**\r\n * action definition\r\n * @type {{[action:string]:ActionAnimationFrameData[]}}\r\n */\r\nActionAnimation.Adef = null;\r\n\r\n","﻿\r\nimport { ItemCategoryInfo } from \"../../public/javascripts/resource.js\";\r\n\r\nimport { Sprite } from \"./Sprite\";\r\n\r\nimport { KeySlotData } from \"../ui/Basic/KeySlotData.js\";\r\n\r\n\r\n/** @type {$ItemRawData} */\r\nlet _loadedItem = {};\r\n\r\nwindow.$loadedItem = _loadedItem;\r\n\r\n\r\nclass $ItemRawData {\r\n\tconstructor() {\r\n\t}\r\n}\r\n\r\n\r\n//class ItemInfo {\r\n//\t/**\r\n//\t * @param {{}} _rawInfo\r\n//\t */\r\n//\tconstructor(_raw) {\r\n//\t\tthis.icon = new Sprite(_raw.icon);\r\n//\t\tthis.iconRaw = new Sprite(_raw.iconRaw);\r\n//\t}\r\n//\r\n//\t/**\r\n//\t * @param {string} itemId\r\n//\t * @returns {Promise<Sprite[]>}\r\n//\t */\r\n//\tload(itemId, loadSprite = false) {\r\n//\t\tlet url = ItemCategoryInfo.getIconUrl(itemId);\r\n//\t\tlet rawUrl = ItemCategoryInfo.getIconRawUrl(itemId);\r\n//\r\n//\t\tthis.icon._url = url;\r\n//\t\tthis.iconRaw._url = rawUrl;\r\n//\r\n//\t\t// 目前用不到 Sprite\r\n//\t\t// UI 只會用到 _raw, Image\r\n//\r\n//\t\tif (loadSprite) {\r\n//\t\t\t//manual load\r\n//\t\t\tthis.icon.__loadTexture();\r\n//\t\t\tthis.iconRaw.__loadTexture();\r\n//\r\n//\t\t\treturn Promise.all([this.icon.$promise, this.iconRaw.$promise]);\r\n//\t\t}\r\n//\t}\r\n//}\r\n\r\nconst SLOT_EQUIP = 0;\r\nconst SLOT_COS = 1;\r\nconst SLOT_ETC = 2;\r\nconst SLOT_INS = 3;\r\nconst SLOT_CASH = 4;\r\n\r\nconst TYPE_TO_SLOT_MAP = [\r\n\tundefined, SLOT_EQUIP, SLOT_COS, SLOT_INS, SLOT_ETC, SLOT_CASH\r\n];\r\n\r\nexport class ItemBase {\r\n\t/**\r\n\t * @param {string} itemId\r\n\t * @param {{}} _raw\r\n\t */\r\n\tconstructor(itemId, _raw) {\r\n\t\t//this.assign(this, _raw);\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis._raw = null;\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.id = null;\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t\"_raw\": {\r\n\t\t\t\tvalue: _raw\r\n\t\t\t},\r\n\t\t\t\"id\": {\r\n\t\t\t\tvalue: itemId\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetSlot() {\r\n\t\treturn TYPE_TO_SLOT_MAP[this.id[1]];\r\n\t}\r\n}\r\n\r\nexport class ItemEquip extends ItemBase {\r\n}\r\n\r\nexport class ItemConsume extends ItemBase {\r\n}\r\n\r\nexport class ItemEtc extends ItemBase {\r\n}\r\n\r\nexport class ItemInstall extends ItemBase {\r\n}\r\n\r\nexport class ItemCash extends ItemBase {\r\n\tgetSlot() {\r\n\t\tif (this.id == 7) {\r\n\t\t\treturn TYPE_TO_SLOT_MAP[this.id[0]];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn TYPE_TO_SLOT_MAP[this.id[1]];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * 自訂道具\r\n * @template T\r\n * @param {string} itemId\r\n * @param {...Partial<T>} props\r\n * @returns {Promise<T>}\r\n */\r\nfunction _createItemSync(itemId, ...props) {\r\n\tlet itemPrototype = _loadedItem[itemId];\r\n\tif (!itemPrototype) {\r\n\t\tthrow new TypeError();\r\n\t}\r\n\r\n\t/** @type {string} - 1 digit */\r\n\tlet typeId = itemId[1];\r\n\r\n\t/** @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} */\r\n\tlet _itemType;\r\n\r\n\tswitch (typeId) {\r\n\t\tcase '0':\r\n\t\t\t_itemType = ItemEquip;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"未完成\");\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tlet item = new _itemType(itemId, itemPrototype);\r\n\r\n\tif (props && props.length) {\r\n\t\tObject.assign(item, ...props);\r\n\t}\r\n\r\n\treturn item;\r\n}\r\n\r\n/**\r\n * 載入道具\r\n * @template T\r\n * @param {string} itemId\r\n * @param {...Partial<T>} props\r\n * @returns {Promise<T>}\r\n */\r\nexport async function $createItem(itemId, ...props) {\r\n\tif (itemId.length == 7 && itemId[0] == 5) {\r\n\t\tthrow new Error(\"未完成 pet\");\r\n\t}\r\n\t/** @type {string} - 1 digit */\r\n\tlet typeId = itemId[1];\r\n\r\n\t/** @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} */\r\n\tlet _itemType;\r\n\r\n\tswitch (typeId) {\r\n\t\tcase \"0\":\r\n\t\t\tif (!$gv.m_editor_mode) {\r\n\t\t\t\tthrow new Error(\"$gv.m_editor_mode: %o\" + $gv.m_editor_mode);\r\n\t\t\t}\r\n\t\tcase \"1\":\r\n\t\t\t_itemType = ItemEquip;\r\n\t\t\tbreak;\r\n\t\tcase \"2\":\r\n\t\t\tconsole.error(\"未完成 ItemConsume\");\r\n\t\t\t_itemType = ItemConsume;\r\n\t\t\tbreak;\r\n\t\tcase \"3\":\r\n\t\t\t//TODO: ItemInstall\r\n\t\t\t_itemType = ItemInstall;\r\n\t\t\tbreak;\r\n\t\tcase \"4\":\r\n\t\t\tconsole.error(\"未完成 ItemEtc\");\r\n\t\t\t_itemType = ItemEtc;\r\n\t\t\tbreak;\r\n\t\tcase \"5\":\r\n\t\t\tconsole.error(\"未完成 ItemCash\");\r\n\t\t\t_itemType = ItemCash;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"?? typeId: \" + typeId);\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tlet itemPrototype;\r\n\ttry {\r\n\t\titemPrototype = await ItemCategoryInfo.getItem(itemId);// raw\r\n\t}\r\n\tcatch (ex) {\r\n\t\tthrow ex;\r\n\t}\r\n\tif (!itemPrototype) {\r\n\t\tconsole.warn(\"item not exist: \" + itemId);\r\n\t\treturn null;\r\n\t}\r\n\t_loadedItem[itemId] = itemPrototype;\r\n\r\n\tlet item = new _itemType(itemId, itemPrototype);\r\n\r\n\tif (props && props.length) {\r\n\t\t//TODO: deep copy\r\n\t\tObject.assign(item, ...props);\r\n\t}\r\n\r\n\treturn item;\r\n}\r\n\r\n\r\nexport class ItemSlot extends KeySlotData {\r\n\t/**\r\n\t * @template T\r\n\t * @param {number} itemSlot\r\n\t * @param {number} itemSN\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\tconstructor(itemSlot, itemSN, itemData, amount) {\r\n\t\tsuper();\r\n\r\n\t\tthis.SN = itemSN;\r\n\t\tthis.slot = itemSlot;\r\n\t\tthis.amount = amount;\r\n\t\t\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * @type {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} - item props\r\n\t\t */\r\n\t\tthis.data = itemData;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @template T\r\n\t * @param {number} itemSlot\r\n\t * @param {number} itemSN\r\n\t * @param {T extends ItemBase ? T : never} itemData\r\n\t * @param {number} amount\r\n\t */\r\n\tassign(itemSlot, itemSN, itemData, amount) {\r\n\t\tthis.SN = itemSN;\r\n\t\tthis.slot = itemSlot;\r\n\t\tthis.amount = amount;\r\n\r\n\t\tthis.data = itemData;\r\n\t}\r\n\r\n\t_clear() {\r\n\t\tthis.data = null;\r\n\t\tthis.amount = 0;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif ((!this.data && this.amount) || (this.data && !this.amount)) {\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !this.data && !this.amount;\r\n\t}\r\n\r\n\tgetData() {\r\n\t\treturn this.data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {ItemEquip | ItemConsume | ItemEtc | ItemInstall | ItemCash} data\r\n\t */\r\n\tsetData(data) {\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t */\r\n\tstatic parse(text) {\r\n\t\tif (text.__proto__ == String.prototype) {\r\n\t\t\tlet iSlot = new ItemSlot();\r\n\t\t\tlet o = JSON.parse(text);\r\n\t\t\t//iSlot.SN = o.SN;\r\n\t\t\t//iSlot.slot = o.slot;\r\n\t\t\t//iSlot.amount = o.amount;\r\n\t\t\t//iSlot.itemId = o.itemId;\r\n\t\t\tObject.assign(iSlot, o);\r\n\t\t\treturn iSlot;\r\n\t\t}\r\n\t\tthrow new TypeError();\r\n\t}\r\n}\r\n","﻿\r\nclass CharacterBaseStat {\r\n\tconstructor() {\r\n\t\tthis.hp = 8855;\r\n\t\tthis.mp = 5246;\r\n\t\tthis.mhp = 28855;\r\n\t\tthis.mmp = 25246;\r\n\t\tthis.exp = 55;\r\n\r\n\t\tthis.str = 123;\r\n\t\tthis.luk = 4;\r\n\t\tthis.dex = 999;\r\n\t\tthis.int = 4;\r\n\t}\r\n}\r\n\r\nclass CharacterTemporaryStat {\r\n}\r\n\r\nconst symbol_job = Symbol(\"job\");\r\nconst symbol_onJobChange = Symbol(\"onJobChange\");\r\n\r\nclass CharacterStat extends CharacterBaseStat {\r\n\tconstructor(sceneChara) {\r\n\t\tsuper();\r\n\r\n\t\tthis._$sceneChara = sceneChara;\r\n\r\n\t\tthis.level = 150;\r\n\r\n\t\t//this._job = 3;\r\n\t\t//this._spec_job = 3;\r\n\r\n\t\t///** @type {number} - 最大屬性攻擊 */\r\n\t\t//this.currentMaxBaseDamage = 10000;\r\n\r\n\t\t///** @type {number} - 最小屬性攻擊 */\r\n\t\t//this.currentMinBaseDamage = 1000;\r\n\r\n\t\t/** @type {number} - 爆擊率 0~100 */\r\n\t\tthis.critRate = 50;\r\n\r\n\t\t/** @type {number} - 爆擊傷害 0~100 */\r\n\t\tthis.critDamage = 80;\r\n\r\n\t\t///** @type {number} - 最大爆擊傷害 0~100 */\r\n\t\t//this.maxCritDamage = 80;\r\n\r\n\t\t///** @type {number} - 最小爆擊傷害 0~100 */\r\n\t\t//this.minCritDamage = 40;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget job() {\r\n\t\treturn this[symbolStatJob];\r\n\t}\r\n\tset job(value) {\r\n\t\tthis[symbolStatJob] = value;\r\n\r\n\t\tconst onJobChange = this[symbol_onJobChange];\r\n\r\n\t\tif (_onJobChange) {\r\n\t\t\t_onJobChange()\r\n\t\t}\r\n\t}\r\n\r\n\t/** @param {function():void} cbfunc */\r\n\tonJobChange(cbfunc) {\r\n\t\tthis[symbol_onJobChange] = cbfunc;\r\n\t}\r\n\r\n\t_getTotalAttack() {\r\n\t\treturn 100;\r\n\t}\r\n\r\n\t/** @returns {number} - 最大屬性攻擊 */\r\n\tgetCurrentMaxBaseDamage() {\r\n\t\t//return this.currentMaxBaseDamage;\r\n\t\treturn 1.30 * (4 * this.dex + this.str) * (this._getTotalAttack() / 100);\r\n\t}\r\n\t/** @returns {number} - 最小屬性攻擊 */\r\n\tgetCurrentMinBaseDamage() {\r\n\t\t//return this.currentMinBaseDamage;\r\n\t\treturn 1.30 * (this.dex + this.str) * (this._getTotalAttack() / 100);\r\n\t}\r\n\t/** @returns {number} - 爆擊率 0~100 */\r\n\tgetCritRate() {\r\n\t\treturn this.critRate;\r\n\t}\r\n\t/** @returns {number} - 爆擊傷害 0~100 */\r\n\tgetCritDamage() {\r\n\t\treturn this.critDamage;\r\n\t}\r\n\t///** @returns {number} - 最大爆擊傷害 0~100 */\r\n\t//getMaxCritDamage() {\r\n\t//\treturn this._$maxCritDamage;\r\n\t//}\r\n\t///** @returns {number} - 最小爆擊傷害 0~100 */\r\n\t//getMinCritDamage() {\r\n\t//\treturn this._$minCritDamage;\r\n\t//}\r\n\r\n\tgetHpPercentS() {\r\n\t\treturn (this.hp * 100 / this.mhp).toFixed(0);\r\n\t}\r\n\tgetMpPercentS() {\r\n\t\treturn (this.mp * 100 / this.mmp).toFixed(0);\r\n\t}\r\n\tgetExpPercentS() {\r\n\t\treturn (this.exp * 100 / this.getNextExp()).toFixed(2);\r\n\t}\r\n\tgetNextExp() {\r\n\t\treturn 100;\r\n\t}\r\n}\r\n\r\n//?? packet\r\nclass $RemotePlayerData {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.id = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.equips_code = null;\r\n\t}\r\n}\r\n//?? packet\r\nclass $PlayerData extends $RemotePlayerData {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t/** @type {CharacterStat} */\r\n\t\tthis.stat = undefined;\r\n\t}\r\n\r\n\tgetRemoteData() {\r\n\t\treturn {\r\n\t\t\tid: this.id,\r\n\t\t\tmapId: this.mapId,\r\n\t\t\tequips_code: this.equips_code,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tCharacterStat,\r\n\t$RemotePlayerData, $PlayerData,\r\n};\r\n","\r\nwindow.DownloadData = (function () {\r\n\tlet a = document.createElement(\"a\");\r\n\tdocument.body.appendChild(a);\r\n\ta.style = \"display: none\";\r\n\ta.target = \"_blank\";\r\n\treturn function (text, type, fileName) {\r\n\t\tlet blob = new Blob([text], { type: type || \"octet/stream\" });\r\n\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\tif (fileName && fileName != \"\") {\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = fileName;\r\n\t\t\ta.click();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//a.href = url;\r\n\t\t\t//a.click();\r\n\t\t\twindow.open(url, '_blank');\r\n\t\t}\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n}());\r\n\r\nwindow.SelectText = function (elem) {\r\n\tvar range, selection;\r\n\r\n\tif (document.body.createTextRange) {\r\n\t\trange = document.body.createTextRange();\r\n\t\trange.moveToElementText(elem);\r\n\t\trange.select();\r\n\t}\r\n\telse if (window.getSelection) {\r\n\t\tselection = window.getSelection();\r\n\t\trange = document.createRange();\r\n\t\trange.selectNodeContents(elem);\r\n\t\tselection.removeAllRanges();\r\n\t\tselection.addRange(range);\r\n\t}\r\n}\r\nwindow.copyToClipboard = function (text) {\r\n\tvar $temp = $(\"<input>\");\r\n\t$(\"body\").append($temp);\r\n\t$temp.val(text).select();\r\n\tdocument.execCommand(\"copy\");\r\n\t$temp.remove();\r\n}\r\n\r\n/**\r\n * disable textNode \"#text\"\r\n * @param {string} xml - xml\r\n * @param {string[]=} arrayTags - optional\r\n * @returns {object}\r\n */\r\nfunction parseXml(xml, arrayTags) {\r\n\tvar dom = null;\r\n\tif (window.DOMParser) {\r\n\t\tdom = (new DOMParser()).parseFromString(xml, \"text/xml\");\r\n\t}\r\n\telse if (window.ActiveXObject) {\r\n\t\tdom = new ActiveXObject('Microsoft.XMLDOM');\r\n\t\tdom.async = false;\r\n\t\tif (!dom.loadXML(xml)) {\r\n\t\t\tthrow dom.parseError.reason + \" \" + dom.parseError.srcText;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tthrow \"cannot parse xml string!\";\r\n\t}\r\n\r\n\tfunction isArray(o) {\r\n\t\treturn Object.prototype.toString.apply(o) === '[object Array]';\r\n\t}\r\n\r\n\tfunction parseNode(xmlNode, result) {\r\n\t\tif (xmlNode.nodeName == \"#text\" && xmlNode.nodeValue.trim() == \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar jsonNode = {};\r\n\t\tvar existing = result[xmlNode.nodeName];\r\n\t\tif (existing) {\r\n\t\t\tif (!isArray(existing)) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [existing, jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName].push(jsonNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName] = jsonNode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (xmlNode.attributes) {\r\n\t\t\tvar length = xmlNode.attributes.length;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tvar attribute = xmlNode.attributes[i];\r\n\t\t\t\tjsonNode[attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar length = xmlNode.childNodes.length;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tparseNode(xmlNode.childNodes[i], jsonNode);\r\n\t\t}\r\n\t}\r\n\r\n\tvar result = {};\r\n\tif (dom.childNodes.length) {\r\n\t\tparseNode(dom.childNodes[0], result);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n","\r\nimport { LayerObject, Layer } from \"./Layer.js\"\r\nimport { RenderingOption } from \"./RenderingOption\";\r\n\r\n\r\n/**\r\n * @implements {LayerObject}\r\n */\r\nclass SceneRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {Layer[]} */\r\n\t\tthis.layers = [];\r\n\t\t\r\n\t\t/** @type {RenderingOption} */\r\n\t\tthis.rendering_option = new RenderingOption();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} amount\r\n\t */\r\n\taddLayerBack(amount) {\r\n\t\tfor (let i = 0; i < amount; ++i) {\r\n\t\t\tthis.layers.push(new Layer()); \r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tfor (let layer of this.layers) {\r\n\t\t\tlayer.update(stamp);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} layerIndex\r\n\t */\r\n\trenderLayer(renderer, layerIndex) {\r\n\t\tconst layer = this.layers[layerIndex];\r\n\t\tlayer.render(renderer, this.rendering_option);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_renderAll(renderer) {\r\n\t\tfor (let layer of this.layers) {\r\n\t\t\tlayer.render(renderer, this.rendering_option);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const sceneRenderer = new SceneRenderer();\r\n\r\nwindow.$sceneRenderer = sceneRenderer;\r\n\r\n","\r\n<template>\r\n\t<div @mousedown=\"mousedown($event)\" class=\"ui-draggable\">\r\n\t\t<slot></slot>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\t//var cs = getComputedStyle(event.currentTarget, null);\r\n\t\r\n\t//not effective in ui\r\n\t//this func no work, mouse event from window\r\n\tfunction reset_mouse() {\r\n\t\t$gv.mouse_move = 0;\r\n\t\t$gv.mouse_x = 0;\r\n\t\t$gv.mouse_y = 0;\r\n\t\t$gv.mouse_dl = 0;\r\n\t\t$gv.mouse_ul = 0;\r\n\t\t$gv.mouse_dm = 0;\r\n\t\t$gv.mouse_um = 0;\r\n\t\t$gv.mouse_dr = 0;\r\n\t\t$gv.mouse_ur = 0;\r\n\t}\r\n\r\n\tfunction _calc_origin_pos(el) {\r\n\t\tlet left = el.style.left;\r\n\t\tlet top = el.style.top;\r\n\t\tlet x, y;\r\n\r\n\t\tel.style.left = \"0px\";\r\n\t\tx = el.offsetLeft;\r\n\t\tel.style.left = left;\r\n\r\n\t\tel.style.top = \"0px\";\r\n\t\ty = el.offsetTop;\r\n\t\tel.style.top = top;\r\n\r\n\t\treturn {\r\n\t\t\tx, y\r\n\t\t}\r\n\t}\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\thandle: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"header\",\r\n\t\t\t\tdescription: \"class only\"\r\n\t\t\t},\r\n\t\t\tzIndex: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 0,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tdefault: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\trequired: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tmouse_x0: 0,\r\n\t\t\t\tmouse_y0: 0,\r\n\t\t\t\torigin_x: 0,\r\n\t\t\t\torigin_y: 0,\r\n\t\t\t\told_width: 0,\r\n\t\t\t\told_height: 0,\r\n\t\t\t\t//elem_handle: null,\r\n\t\t\t\thandle_mousemove: null,\r\n\t\t\t\thandle_mouseup: null,\r\n\t\t\t}\r\n\t\t},\r\n\t\t//computed: {\r\n\t\t//\thandleClassName: function () {\r\n\t\t//\t\treturn this.handle || \"header\";\r\n\t\t//\t},\r\n\t\t//},\r\n\t\tmethods: {\r\n\t\t\tmousemove: function () {\r\n\t\t\t\treset_mouse();\r\n\t\t\t\tif (event.which == 1) {\r\n\t\t\t\t\tlet el = this.$el;//event.currentTarget\r\n\r\n\t\t\t\t\tlet x = event.clientX - this.mouse_x0;\r\n\t\t\t\t\tlet y = event.clientY - this.mouse_y0;\r\n\r\n\t\t\t\t\tel.style.left = Math.max(x, 0) + \"px\";\r\n\t\t\t\t\tel.style.top = Math.max(y, 0) + \"px\";\r\n\r\n\t\t\t\t\tlet pw = el.parentElement.offsetWidth;\r\n\t\t\t\t\tlet ph = el.parentElement.offsetHeight;\r\n\r\n\t\t\t\t\tlet ox = el.offsetLeft;\r\n\t\t\t\t\tlet oy = el.offsetTop;\r\n\t\t\t\t\tlet ow = this.old_width;//el.offsetWidth;\r\n\t\t\t\t\tlet oh = this.old_height;//el.offsetHeight;\r\n\r\n\t\t\t\t\tif (ox < 0) {\r\n\t\t\t\t\t\tel.style.left = \"0px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (ox + ow >= pw) {\r\n\t\t\t\t\t\tel.style.left = (pw - ow) + \"px\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// parent 高度不足時對齊上邊\r\n\t\t\t\t\tif (oy >= 0) {\r\n\t\t\t\t\t\tif (oh < ph) {\r\n\t\t\t\t\t\t\tif (oy + oh >= ph) {\r\n\t\t\t\t\t\t\t\tel.style.top = (ph - oh) + \"px\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tel.style.top = (-this.origin_y) + \"px\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (oy < 0) {\r\n\t\t\t\t\t\tel.style.top = \"0px\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//el.style.minWidth = ow + \"px\";\r\n\t\t\t\t\t//el.style.minHeight = oh + \"px\";\r\n\r\n\r\n\r\n\t\t\t\t\t//if (el.style.width != \"auto\") {\r\n\t\t\t\t\t//\tel.style.width = ow = \"px\";\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t//if (el.style.height != \"auto\") {\r\n\t\t\t\t\t//\tel.style.height = oh = \"px\";\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.mouseup();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmousedown: function (event) {\r\n\t\t\t\treset_mouse();\r\n\t\t\t\t//if (event.target != this.elem_handle) {\r\n\t\t\t\t//\treturn;\r\n\t\t\t\t//}\r\n\t\t\t\tif (!event.target.classList.contains(this.handle)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tevent.target.focus();\r\n\r\n\t\t\t\tlet rp = this.get_relative_position();\r\n\r\n\t\t\t\t//calc click-position of parent\r\n\t\t\t\tthis.mouse_x0 = event.clientX - rp.x;\r\n\t\t\t\tthis.mouse_y0 = event.clientY - rp.y;\r\n\t\t\t\tif (event.which == 1) {\r\n\t\t\t\t\tlet el = this.$el;\r\n\t\t\t\t\tthis.old_width = el.offsetWidth;\r\n\t\t\t\t\tthis.old_height = el.offsetHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet vm = this;\r\n\r\n\t\t\t\tthis.handle_mousemove = function (event) {\r\n\t\t\t\t\tvm.mousemove(event);\r\n\t\t\t\t};\r\n\t\t\t\tthis.handle_mouseup = function () {\r\n\t\t\t\t\tvm.mouseup();\r\n\t\t\t\t};\r\n\r\n\t\t\t\twindow.addEventListener(\"mousemove\", vm.handle_mousemove);\r\n\t\t\t\twindow.addEventListener(\"mouseup\", vm.handle_mouseup);\r\n\t\t\t},\r\n\t\t\tmouseup: function () {\r\n\t\t\t\treset_mouse();\r\n\t\t\t\twindow.removeEventListener(\"mousemove\", this.handle_mousemove);\r\n\t\t\t\twindow.removeEventListener(\"mouseup\", this.handle_mouseup);\r\n\t\t\t\tthis.$emit(\"update:position\", this.get_relative_position());\r\n\t\t\t},\r\n\t\t\tget_relative_position: function () {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: this.$el.offsetLeft,\r\n\t\t\t\t\ty: this.$el.offsetTop\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tlet el = this.$el;\r\n\t\t\tlet x, y;\r\n\r\n\t\t\tx = this.position.x;\r\n\t\t\ty = this.position.y;\r\n\r\n\t\t\tif (this.position.x || this.position.y) {\r\n\t\t\t\tthis.$el.style.left = x + \"px\";\r\n\t\t\t\tthis.$el.style.top = y + \"px\";\r\n\t\t\t\tthis.origin_x = x;\r\n\t\t\t\tthis.origin_y = y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet ori_pos = _calc_origin_pos(el);\r\n\r\n\t\t\t\tthis.origin_x = ori_pos.x;\r\n\t\t\t\tthis.origin_y = ori_pos.y;\r\n\t\t\t}\r\n\t\t\t//this.elem_handle = el.querySelector(this.handle);\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tzIndex: function (val) {\r\n\t\t\t\tthis.$el.style.zIndex = val;\r\n\t\t\t},\r\n\t\t\t\"position.x\": function (val) {\r\n\t\t\t\tthis.$el.style.left = val + \"px\";\r\n\t\t\t},\r\n\t\t\t\"position.y\": function (val) {\r\n\t\t\t\tthis.$el.style.top = val + \"px\";\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style>\r\n\t.ui-draggable {\r\n\t\tposition: absolute;\r\n\t\tdisplay: inline-block;\r\n\t\tuser-select: none;\r\n\t}\r\n</style>\r\n\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-draggable.vue?vue&type=template&id=6de210d4&\"\nimport script from \"./ui-draggable.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-draggable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-draggable.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ui-draggable\",on:{\"mousedown\":function($event){_vm.mousedown($event)}}},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","﻿\r\nimport { Rectangle, Vec2 } from \"../math.js\";\r\n\r\nimport {\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2Body, b2Fixture,\r\n\tb2PolygonShape, b2CircleShape,\r\n\tb2Contact, b2Manifold,\r\n\tFixtureContactListener,\r\n} from \"./Physics.js\";\r\n\r\nimport { World } from \"./World.js\";\r\n\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { SceneSkill, SkillEffectAnimation } from \"../Skill.js\";\r\n\r\nimport { AttackInfo } from \"../../Common/AttackInfo.js\";\r\n\r\nimport { BaseSceneCharacter } from \"../SceneCharacter.js\";//?? SceneCharacter, SceneRemoteCharacter\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport class PBullet {\r\n\t/**\r\n\t * @param {PPlayer} owner\r\n\t * @param {SceneSkill} skill\r\n\t * @param {SkillEffectAnimation} bulletRenderer\r\n\t */\r\n\tconstructor(owner, skill, bulletRenderer) {\r\n\t\tif (process.env.NODE_ENV === 'production') {\r\n\t\t\tif (!owner || !skill || !bulletRenderer) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\talert(\"new PBullet(owner, skill)\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.owner = owner;\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {SceneSkill} */\r\n\t\tthis.skill = skill;\r\n\r\n\t\t/** @type {SkillEffectAnimation} */\r\n\t\tthis.bulletRenderer = bulletRenderer;\r\n\r\n\t\t/** @type {BaseBulletMoveFunc} */\r\n\t\tthis.bulletMoveFunc = null;\r\n\r\n\t\t/** @type {-1|1} */\r\n\t\tthis.front = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Partial<FixtureContactListener>=} listener\r\n\t */\r\n\t_create(listener) {\r\n\t\tconst world = this.owner.body.GetWorld();\r\n\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tconst cx = (this.bulletRenderer.textures[0]._raw.__w * 0.5) / $gv.CANVAS_SCALE;\r\n\t\tconst cy = (this.bulletRenderer.textures[0]._raw.__h * 0.5) / $gv.CANVAS_SCALE;\r\n\r\n\t\tlet { x, y } = this.owner.body.GetWorldCenter();\r\n\t\tconst front = this.owner.state.front;\r\n\r\n\t\t//TODO: set bullet position, front, angle\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;\r\n\t\tif (front > 0) {\r\n\t\t\tbdef.position.Set(x + cx, y);\r\n\t\t}\r\n\t\telse if (front < 0) {\r\n\t\t\tbdef.position.Set(x - cx, y);\r\n\t\t}\r\n\t\telse {//?? center position\r\n\t\t\tbdef.position.Set(x, y);\r\n\t\t}\r\n\t\tbdef.angle = 0;//???\r\n\t\tbdef.gravityScale = 0;\r\n\t\tbdef.allowSleep = false;\r\n\t\tbdef.bullet = true;\r\n\t\tbdef.fixedRotation = true;\r\n\t\tbdef.userData = this;\r\n\r\n\t\tthis.body = world.CreateBody(bdef);\r\n\r\n\t\tshape.SetAsBox(cx, cy);//renderer origin is center\r\n\t\t\r\n\t\t//TODO: implement filter: player_bullet\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"bullet\"));\r\n\t\t//fdef.filter.Copy(FilterHelper.get(\"pvp_bullet\"));\r\n\t\t\r\n\t\tfdef.userData = this;\r\n\r\n\t\tlet fixture = this.body.CreateFixture(fdef);\r\n\r\n\t\tif (listener) {\r\n\t\t\tObject.keys(FixtureContactListener.prototype).forEach(key => fixture[key] = listener[key]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfixture.preSolve = bullet_default_preSolve;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetPosition() {\r\n\t\treturn this.body.GetPosition();\r\n\t}\r\n\r\n\t/**\r\n\t * default is horizontal move front\r\n\t * @param {BaseBulletMoveFunc=} bulletMoveFunc\r\n\t * @param {number=} linearVelocityX - unit is meter\r\n\t * @param {number=} linearVelocityY - unit is meter\r\n\t */\r\n\tlaunch(bulletMoveFunc, linearVelocityX, linearVelocityY) {\r\n\t\tif (bulletMoveFunc) {\r\n\t\t\tdebugger;\r\n\r\n\t\t\tthis.bulletMoveFunc = bulletMoveFunc;\r\n\t\t\t//TODO: this.bulletMoveFunc.Step\r\n\t\t\t//TODO: this.bulletMoveFunc.AfterStep\r\n\r\n\t\t\tthis.body.addStep(bulletMoveFunc.Step.bind(bulletMoveFunc, this));\r\n\t\t\tthis.body.addAfterStep(bulletMoveFunc.AfterStep.bind(bulletMoveFunc, this));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.body.m_linearVelocity.Set(linearVelocityX, linearVelocityY);\r\n\r\n\t\t\t//TODO: time to live, range limit\r\n\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\tthis.body.AfterStep = () => {\r\n\t\t\t\t\tthis.$tick = (this.$tick | 0) + 1;\r\n\t\t\t\t\tif (this.$tick > (window.$FIRE_BULLET_TIME_TO_LIVE || 60)) {\r\n\t\t\t\t\t\tthis.bulletRenderer.destroy();\r\n\t\t\t\t\t\tthis.destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tif (this.body) {\r\n\t\t\tthis.body.m_world.DestroyBody(this.body);\r\n\t\t\tthis.body = null;\r\n\r\n\t\t\t//this.bulletRenderer.destroy();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {b2Contact} contact\r\n * @param {b2Manifold} oldManifold\r\n * @param {b2Fixture} fa\r\n * @param {b2Fixture} fb\r\n */\r\nfunction bullet_default_preSolve(contact, oldManifold, fa, fb) {\r\n\t/** @type {PPlayer} */\r\n\tconst targetPlayer = fb.m_userData;\r\n\tif (!targetPlayer) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/** @type {BaseSceneCharacter} */\r\n\tconst targetChara = targetPlayer.chara;//not implement yet\r\n\tif (!targetChara) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/** @type {PBullet} */\r\n\tconst that = fa.m_userData;\r\n\r\n\t/** @type {PPlayer} */\r\n\tconst ownerPlayer = that.owner;\r\n\t\r\n\t//not from self\r\n\tif (ownerPlayer == targetPlayer) {\r\n\t\treturn;\r\n\t}\r\n\tthat.skill.addAttack(targetChara);\r\n\r\n\tcontact.SetEnabled(false);\r\n\r\n\tthat.bulletRenderer.destroy();\r\n\tthat.destroy();\r\n}\r\n\r\n\r\n/**\r\n * 子彈的移動方式\r\n */\r\nexport class BaseBulletMoveFunc {\r\n\tconstructor() {\r\n\t}\r\n\r\n\t//TODO: base bullet move function\r\n\r\n\t/**\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tinit(bullet) {\r\n\t}\r\n\r\n\t/**\r\n\t * before update\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tStep(bullet) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PBullet} bullet\r\n\t */\r\n\tAfterStep(bullet) {\r\n\t}\r\n}\r\n\r\n\r\n\t///**\r\n\t// * b2Vec2(meter) to Vec2 (pixel)\r\n\t// * @returns {Vec2}\r\n\t// */\r\n\t//getPosition() { }","﻿\r\nimport { IRenderer } from \"./IRenderer.js\";\r\nimport { Sprite } from \"./Sprite.js\";\r\nimport { Animation } from \"./Animation\";\r\nimport { SceneObject } from \"./SceneObject\";\r\nimport { ActionAnimation } from './Renderer/CharacterActionAnimation.js';\r\nimport { CharacterAnimationBase } from \"./Renderer/CharacterRenderer.js\";\r\nimport { PPlayer } from \"./Physics/PPlayer.js\";\r\nimport { SceneCharacter } from \"./SceneCharacter.js\";\r\nimport { World } from \"./Physics/World.js\";\r\nimport { PBullet } from \"./Physics/PBullet.js\";\r\nimport { AttackInfo, AttackPair } from \"../Common/AttackInfo.js\";\r\n\r\nimport { Vec2 } from \"./math.js\";//dev\r\n\r\n\r\n// skill timeline\r\n//\r\n// 以 ActionAnimation 控制流程\r\n// skill 必須要有 ActionAnimation 才能正確運作(開始、結束)\r\n//\r\n// # normal skill\r\n// -delay1        | delay2\r\n// _init          | update\r\n// defaultAction  | wait current_action end\r\n//                | SkillEffect\r\n//\r\n// # rapid skill\r\n// delay1      | delay2         | delay3\r\n// _init       | control/update | update\r\n// prepare     | loop           | end\r\n// SkillEffect | SkillEffect    | SkillEffect\r\n\r\n\r\n/**\r\n * 23001002(藝術跳躍)\r\n * 24001002(幻影瞬步)\r\n */\r\nlet jump2_info = {\r\n\ttype: 40,\r\n\tcasterMove: 1,\r\n\tavaliableInJumpingState: 1\r\n};\r\n\r\n/**\r\n * 23121000(伊修塔爾之環): localhost/xml2/Skill/2312/skill/23121000\r\n */\r\nlet rapid_attack_info = {\r\n\ttype: 2,\r\n\tknockbackLimit: 80,\r\n\trapidAttack: 1\r\n};\r\n\r\n\r\nclass _SkillInfo {\r\n\tconstructor() {\r\n\t\tthis.type = 40;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.casterMove = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.avaliableInJumpingState = 1;\r\n\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.areaAttack = 1;\r\n\r\n\t\tthis.knockbackLimit = 80;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.rapidAttack = 1;\r\n\t}\r\n}\r\nclass _SkillCommonData {\r\n\tconstructor() {\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.lt = null;//new Vec2(-200, -113)\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.rb = null;//new Vec2(-10, 0)\r\n\r\n\t\t/** @type {string} - code */\r\n\t\tthis.mpCon = \"3 + d(x / 6)\";\r\n\r\n\t\t/** @type {string} - code */\r\n\t\tthis.damage = \"175 + 8 * x\";\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.mobCount = 6;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.attackCount = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.maxLevel = 20;\r\n\t}\r\n}\r\nclass _SkillData {\r\n\tconstructor() {\r\n\t\t/** @type {{ [actType: number]: string }} */\r\n\t\tthis.action = {\r\n\t\t\t\"0\": \"dualVulcanLoop\"\r\n\t\t};\r\n\r\n\t\t/** @type {_SkillCommonData} */\r\n\t\tthis.common = null;\r\n\r\n\t\t/** @type {_SkillInfo} */\r\n\t\tthis.info = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.effect = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.prepare = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydown = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydown0 = null;\r\n\r\n\t\t/** @type {SkillEffectAnimation} - ? type */\r\n\t\tthis.keydownend = null;\r\n\r\n\t\t/** @type {{[skill_id:string]:{[type:number]:number}}} */\r\n\t\tthis.finalAttack = {\r\n\t\t\t\"23100006\": {\r\n\t\t\t\t\"0\": 52\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.masterLevel = 10;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.combatOrders = 1;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.weapon = 52;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.subWeapon = 35;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.psd = 1;\r\n\r\n\t\t/** @type {number} - ?? */\r\n\t\tthis.psdSkill = {\r\n\t\t\t23111002: {}\r\n\t\t};\r\n\r\n\t\t/** @type {{[skill_id:string]:number}} */\r\n\t\tthis.req = {\r\n\t\t\t\"23111000\": 20\r\n\t\t};\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.canJobRidingUse = 1;\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport class SkillEffectAnimation extends Animation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {{x: number, y: number, front:-1|1}} */\r\n\t\tthis.targetRenderer = null;\r\n\r\n\t\t/** @type {PBullet} */\r\n\t\tthis.$physics = null;\r\n\r\n\t\tthis.is_loop = false;\r\n\r\n\t\tthis.opacity = 1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string|number} type - ??\r\n\t * @param {string} url - ??\r\n\t * @param {object} raw - ??\r\n\t */\r\n\tload(type) {\r\n\t\tif (!this._raw) {\r\n\t\t\tthrow new Error(\"Not implement. skill data is loaded\");\r\n\t\t\tthis._url = [this._url, type].join(\"/\");\r\n\t\t\treturn super.load();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (Array.isArray(this._raw[0])) {\r\n\t\t\t\t/** @type {Sprite[]} */\r\n\t\t\t\tthis.textures = this._raw[type];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/** @type {Sprite[]} */\r\n\t\t\t\tthis.textures = this._raw;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\r\n\t\tthis.$physics = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.update_p(stamp);\r\n\t\t}\r\n\t\telse if (this.targetRenderer) {\r\n\t\t\tthis.update_r(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender(renderer) {\r\n\t\tif (this.$physics) {\r\n\t\t\tthis.render_p(renderer);\r\n\t\t}\r\n\t\telse if (this.targetRenderer) {\r\n\t\t\tthis.render_r(renderer);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate_p(stamp) {\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender_p(renderer) {\r\n\t\tconst pos = this.$physics.getPosition();\r\n\t\tconst front = this.$physics.front;\r\n\t\tconst x = pos.x * $gv.CANVAS_SCALE;\r\n\t\tconst y = pos.y * $gv.CANVAS_SCALE;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\t//renderer.pushGlobalAlpha();\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tthis.draw(renderer, x, y, 0, front > 0);\r\n\r\n\t\t//renderer.popGlobalAlpha();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate_r(stamp) {\r\n\t\tstamp *= this.targetRenderer.getSpeed();\r\n\t\t\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\trender_r(renderer) {\r\n\t\tthis.x = this.targetRenderer.x + this.targetRenderer.tx;//TODO: crr.tx and crr.ty ??\r\n\t\tthis.y = this.targetRenderer.y + this.targetRenderer.ty;\r\n\r\n\t\t//renderer.pushGlobalAlpha();\r\n\r\n\t\trenderer.globalAlpha = this.opacity;\r\n\t\tthis.draw(renderer, this.x, this.y, 0, this.targetRenderer.front > 0);\r\n\r\n\t\t//renderer.popGlobalAlpha();\r\n\t}\r\n}\r\n\r\nclass SkillHitAnimation extends SkillEffectAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * TODO: SceneObject 取代 EffectManager\r\n */\r\nexport class EffectManager {\r\n\tconstructor() {\r\n\t}\r\n\t\r\n\tstatic AddEffect(effect) {\r\n\t\teffect.update(0);//init effect position\r\n\t\t\r\n\t\tEffectManager._effects.push(effect);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tstatic Update(stamp) {\r\n\t\tconst effects = EffectManager._effects;\r\n\t\t\r\n\t\tEffectManager._effects = effects.filter(function (eff) {\r\n\t\t\tif (!eff.isEnd()) {\r\n\t\t\t\teff.update(stamp);\r\n\t\t\t}\r\n\t\t\tif (eff.isEnd()) {\r\n\t\t\t\teff.destroy();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\tstatic Render(renderer) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\tconst effects = EffectManager._effects;\r\n\t\tfor (let i = 0; i < effects.length; ++i) {\r\n\t\t\teffects[i].render(renderer);\r\n\t\t}\r\n\r\n\t\trenderer.popGlobalAlpha();\r\n\t}\r\n}\r\n/** @type {Animation[]} */\r\nEffectManager._effects = [];\r\n\r\nwindow.$EffectManager = EffectManager;\r\n\r\n\r\n\r\n/**\r\n * \r\n */\r\nclass SkillAnimationBase {\r\n\t///**\r\n\t// * @param {object} raw\r\n\t// * @param {string} url\r\n\t// */\r\n\tconstructor(/*raw, url*/) {\r\n\t\t//this._raw = raw;\r\n\r\n\t\t/**\r\n\t\t * @type {_SkillData}\r\n\t\t */\r\n\t\tthis.data = null;\r\n\t\t\r\n\t\t/** @type {string} */\r\n\t\tthis.url = null;\r\n\t\t\r\n\t\t//this.textures = {\r\n\t\t//\teffect: [],\r\n\t\t//\thit: {\r\n\t\t//\t\t\"0\": []\r\n\t\t//\t},\r\n\t\t//}\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.skillId = null;\r\n\r\n\t\t/**\r\n\t\t * actType = GetJobInfo(chara).avaliableWeapon.indexOf(ItemInfo.get(chara.weapon).type)\r\n\t\t */\r\n\t\tthis.actType = 0;\r\n\t\t\r\n\t\t/** @type {SceneObject} */\r\n\t\tthis._owner = null;\r\n\r\n\t\t/** @type {CharacterAnimationBase} */\r\n\t\tthis._crr = null;\r\n\r\n\t\t/** @type {ActionAnimation} */\r\n\t\tthis._actani = null;\r\n\t\t\r\n\t\t/** @type {number} - skill type */\r\n\t\tthis.type = 0;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis._$is_end = false;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_launch = false;\r\n\t\t\r\n\t\t//if (raw && url) {\r\n\t\t//\tthis.__load(url, raw, null);\r\n\t\t//}\r\n\r\n\t\t/** @type {\"prepare\"|\"keydown\"|\"keydownend\"} */\r\n\t\tthis.state = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t}\r\n\r\n\tget is_end() {\r\n\t\treturn this._$is_end;\r\n\t}\r\n\tset is_end(value) {\r\n\t\tthis._$is_end = value;\r\n\t\tif (value) {\r\n\t\t\tthis.owner.$physics.state.invokeSkill = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {SceneObject} */\r\n\tget owner() {\r\n\t\treturn this._owner;\r\n\t}\r\n\tset owner(value) {\r\n\t\tif (!value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._owner = value;\r\n\r\n\t\tthis._crr = value.renderer;\r\n\t\tif (!this._crr) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//const chara = value; //??\r\n\t\t//this.actType = GetJobInfo(chara).avaliableWeapon.indexOf(ItemInfo.get(chara.weapon).type)\r\n\r\n\t\tthis._actani = this._crr.actani;\r\n\t\tif (!this._actani) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @alias owner\r\n\t * @returns {SceneCharacter}\r\n\t */\r\n\tget _owner_player() {\r\n\t\treturn this._owner;\r\n\t}\r\n\tset _owner_player(value) {\r\n\t\tthis.owner = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} action\r\n\t */\r\n\t_applyAction(action) {\r\n\t\tif (this._actani && this.data) {\r\n\t\t\tconst actions = this.data.action;\r\n\t\t\tthis._actani.reload(action);//action ? 0, 1\r\n\t\t\tthis._actani.loop = false;\r\n\r\n\t\t\tthis.owner.$physics.state.invokeSkill = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/** skill default action */\r\n\t_applyDefaultAction() {\r\n\t\tconst actions = this.data.action;\r\n\t\tthis._applyAction(actions[this.actType]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * download data, load texture\r\n\t * @param {string} skillId\r\n\t */\r\n\tasync _load(skillId) {\r\n\t\tconst jobID = /^(\\d+)\\d{4}$/.exec(skillId)[1];\r\n\r\n\t\tconst url = `${this.constructor._base_path}/${jobID}/skill/${skillId}`;\r\n\r\n\t\tconst raw = await $get.data(url);\r\n\t\tif (!raw) {\r\n\t\t\talert(\"SkillAnimationBase\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.data = raw;\r\n\t\t\r\n\t\tthis.url = url;\r\n\r\n\t\tthis.skillId = skillId;\r\n\r\n\t\tthis.type = this.data.info ? (this.data.info.type || 0) : 0;//const\r\n\r\n\t\tthis.__proto__ = this._decide_type().prototype;\r\n\t\t{\r\n\t\t\tthis._loadTexture(raw);\r\n\r\n\t\t\tthis._init();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * copy\r\n\t * @param {SkillAnimationBase} skill_anim\r\n\t * @param {SkillAnimationBase} proto - skill prototype\r\n\t */\r\n\t_assign(skill_anim, proto) {\r\n\t\tthis.data = skill_anim.data;\r\n\t\t\r\n\t\tthis.url = skill_anim.url;\r\n\r\n\t\tthis.skillId = skill_anim.skillId;\r\n\t\t\r\n\t\tthis.type = skill_anim.type;//const\r\n\r\n\t\tthis.__proto__ = this._decide_type().prototype;\r\n\t\t{\r\n\t\t\tthis._init();\r\n\t\t}\r\n\t}\r\n\t\r\n\t_loadTexture() {\r\n\t\tfor (let effName of this._effect_names) {\r\n\t\t\tlet eff = this.data[effName];\r\n\t\t\tif (eff) {\r\n\t\t\t\tthis.data[effName] = arrNd_texture(eff, [this.url, effName].join(\"/\"));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction arrNd_texture(arrNd/*, url*/) {\r\n\t\t\tif (\"0\" in arrNd[0]) {\r\n\t\t\t\treturn arr2d_texture(arrNd/*, url*/);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn arr1d_texture(arrNd/*, url*/);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction arr1d_texture(arr1d/*, url*/) {\r\n\t\t\tlet effect = [];\r\n\t\t\tfor (let  i = 0; i in arr1d; ++i) {\r\n\t\t\t\tlet data = arr1d[i];\r\n\t\t\t\tlet tex = new Sprite(data);\r\n\t\t\t\t//tex._url = `${url}/${i}`;\r\n\t\t\t\teffect[i] = tex;\r\n\t\t\t}\r\n\t\t\teffect.action = arr1d.action;\r\n\t\t\treturn effect;\r\n\t\t}\r\n\t\tfunction arr2d_texture(arr2d/*, url*/) {\r\n\t\t\tlet hit = [];\r\n\t\t\tfor (let i = 0; i in arr2d; ++i) {\r\n\t\t\t\t//const url_i = `${url}/${i}`;\r\n\t\t\t\tlet group = arr2d[i];\r\n\t\t\t\thit[i] = [];\r\n\t\t\t\tfor (let  j = 0; j in group; ++j) {\r\n\t\t\t\t\tlet data = group[j];\r\n\t\t\t\t\tlet tex = new Sprite(data);\r\n\t\t\t\t\t//tex._url = `${url_i}/${j}`;\r\n\t\t\t\t\thit[i][j] = tex;\r\n\t\t\t\t}\r\n\t\t\t\thit[i].action = group.action;\r\n\t\t\t}\r\n\t\t\treturn hit;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * reset and restart\r\n\t */\r\n\treset() {\r\n\t\tthis._actani.reset();\r\n\t\tthis.is_launch = false;\r\n\t}\r\n\r\n\t/**\r\n\t * onKeydown + onKeyup\r\n\t * TODO: 可控制方向的技能\r\n\t * @virtual\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t}\r\n\t\r\n\t/**\r\n\t * TODO: 自動攻擊、被動技能、debuf\r\n\t * @virtual\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tif (this.$promise) {\r\n\t\t\t//Now loading...\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t\tconsole.warn(\"Skill not implement: \" + this.skillId);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * no timer\r\n\t * @param {number} stamp\r\n\t */\r\n\t_default_update(stamp) {\r\n\t\t//stamp *= this.targetRenderer.getSpeed();\r\n\r\n\t\tif (this._actani) {\r\n\t\t\tif (this._actani.delay) {// not start yet\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (!this.is_launch) {\r\n\t\t\t\tthis._addEffect();\r\n\r\n\t\t\t\tthis.is_launch = true;\r\n\t\t\t}\r\n\t\t\tif (this._actani.isEnd()) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {SceneObject} targetObject\r\n\t */\r\n\taddAttack(targetObject) {\r\n\t\t/** @type {SceneCharacter} */\r\n\t\tconst owner = this._owner;\r\n\r\n\t\tlet attack = new AttackPair();\r\n\r\n\t\t//attack.objectid = targetObject.$objectid;\r\n\t\tattack.setTargetObject(targetObject);\r\n\r\n\t\tattack.allDamage.length = this.data.common.attackCount;\r\n\r\n\t\t////apply damage\r\n\t\t//for (let i = 0; i < attack.allDamage.length; ++i) {\r\n\t\t//\ttargetObject.damage(owner, 123);\r\n\t\t//}\r\n\t\t////\r\n\t\t//targetObject.knockback(chara, 16, 16);\r\n\r\n\t\tthis.attackInfo.allAttack.push(attack);\r\n\t}\r\n\r\n\tcreateBullet(effectName) {\r\n\t\tlet eff, bullet;\r\n\r\n\t\t//bullet renderer\r\n\t\t{\r\n\t\t\teff = this._addEffect(effectName);\r\n\r\n\t\t\teff.is_loop = true;\r\n\t\t}\r\n\r\n\t\t//bullet physics\r\n\t\t{\r\n\t\t\tbullet = new PBullet(this.owner.$physics, this, eff);\r\n\r\n\t\t\tbullet._create();\r\n\r\n\t\t\tbullet.launch(null, this.owner.$physics.state.front * (window.$BULLET_SPEED | 32), 0);\r\n\t\t}\r\n\r\n\t\t//link renderer and physics\r\n\t\teff.$physics = bullet;\r\n\r\n\t\treturn bullet;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {boolean} [isBullet=false]\r\n\t */\r\n\t_addDefaultEffect(isBullet) {\r\n\t\tthis._applyDefaultAction();\r\n\t\tthis._addEffect(\"effect\", isBullet);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} [effectName=\"effect\"]\r\n\t * @param {boolean} [isBullet=false]\r\n\t */\r\n\t_addEffect(effectName = \"effect\", isBullet) {\r\n\t\tlet action = this.data[effectName].action;\r\n\t\tif (action) {\r\n\t\t\tthis._applyAction(action);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst type = this.actType;\r\n\t\t\tlet effect = new SkillEffectAnimation(this.data[effectName], [this.url, effectName].join(\"/\"));\r\n\r\n\t\t\tif (isBullet) {\r\n\t\t\t\t//...??\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\teffect.targetRenderer = this._crr;\r\n\t\t\t}\r\n\t\t\teffect.load(type);\r\n\r\n\t\t\tEffectManager.AddEffect(effect);\r\n\r\n\t\t\treturn effect;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {{x: number, y: number}=} target\r\n\t * @param {number=} type\r\n\t */\r\n\t_addHitEffect(x, y, target, type) {\r\n\t\tlet hit = new SkillHitAnimation();\r\n\t\t\r\n\t\thit.target = target;\r\n\t\t\r\n\t\thit.load(this.url + \"/hit/\" + type, this.data.hit, type);\r\n\t\t\r\n\t\tEffectManager.AddEffect(hit);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @returns {function():(T extends SkillAnimationBase)}\r\n\t */\r\n\t_decide_type() {\r\n\t\tconst info = this.data.info;\r\n\r\n\t\t//TODO: register skill\r\n\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\tcase 2:\r\n\t\t\t\tif (info.rapidAttack) {\r\n\t\t\t\t\treturn _SkillAnimation_RapidAttack;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40:\r\n\t\t\t\tif (info.casterMove && info.avaliableInJumpingState) {\r\n\t\t\t\t\treturn _SkillAnimation_N_Jump;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn _SkillAnimation_Default;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _effect_names() {\r\n\t\treturn [\"effect\", \"hit\"];\r\n\t}\r\n\t\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Skill\";\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_Default extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis._default_update(stamp);\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_RapidAttack extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\r\n\t\tthis.state = \"prepare\";\r\n\t\tthis._state_func = this._prepare;\r\n\t\tthis.current_effect = this._addEffect(this.state);\r\n\r\n\t\t/** animation */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** fire bullet */\r\n\t\tthis.tick = 0;\r\n\r\n\t\tthis.fadeTotalTime = this._actani.getTotalTime();\r\n\r\n\t\tthis._crr.fixed_speed = true;\r\n\t}\r\n\r\n\t_prepare() {\r\n\t\tthis.current_effect.opacity = this.time / this.fadeTotalTime;\r\n\t\tif (this.current_effect.opacity > 1) {\r\n\t\t\tthis.current_effect.opacity = 1;\r\n\t\t}\r\n\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\tthis.current_effect.opacity = 0;//prepare\r\n\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\tthis.state = \"keydown\";\r\n\t\t\tthis._state_func = this._keydown;\r\n\t\t\tthis.current_effect = this._addEffect(this.state);\r\n\r\n\t\t\tthis._actani.loop = true;\r\n\t\t\tthis.current_effect.is_loop = true;\r\n\r\n\t\t\tthis.time = 0;//reset\r\n\t\t}\r\n\t}\r\n\t_keydown() {\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\t//this.current_effect.reset();\r\n\t\t\t//this.current_effect.opacity = 1;\r\n\t\t\t//this._actani.reset();\r\n\t\t\tthis.time = 0;//reset\r\n\t\t}\r\n\t}\r\n\t_keydownend() {\r\n\t\tthis.current_effect.opacity = 1 - (this.time / this.fadeTotalTime);\r\n\t\tif (this.current_effect.opacity < 0) {\r\n\t\t\tthis.current_effect.opacity = 0;\r\n\t\t}\r\n\r\n\t\tif (this._actani.isEnd()) {\r\n\t\t\tthis.current_effect.opacity = 0;//keydownend\r\n\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\tthis._crr.fixed_speed = false;\r\n\t\t\tthis.is_launch = true;\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t\tswitch (this.state) {\r\n\t\t\tcase \"prepare\":\r\n\t\t\tcase \"keydown\":\r\n\t\t\t\tif (!keyDown || keyUp) {\r\n\t\t\t\t\tthis.current_effect.opacity = 0;//keydown\r\n\t\t\t\t\tthis.current_effect.destroy();\r\n\r\n\t\t\t\t\tthis.state = \"keydownend\";\r\n\t\t\t\t\tthis._state_func = this._keydownend;\r\n\t\t\t\t\tthis.current_effect = this._addEffect(this.state);\r\n\t\t\t\t\tthis.fadeTotalTime = this._actani.getTotalTime();\r\n\r\n\t\t\t\t\tthis._actani.loop = false;\r\n\t\t\t\t\tthis.time = 0;//reset\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\t//keydown(first step): prepare\r\n\t\t//keydown(second step): keydown + keydown0\r\n\t\t//keyup: keydownend\r\n\r\n\t\tstamp *= this._crr.getSpeed();\r\n\t\tthis.time += stamp;\r\n\r\n\t\t++this.tick;\r\n\r\n\t\tthis._state_func();\r\n\r\n\t\tif (this.tick % (window.$FIRE_BULLET_T | 3) == (window.$FIRE_BULLET_T2 | 2) && this.state != \"keydownend\") {\r\n\t\t\tthis.createBullet(\"ball\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget _effect_names() {\r\n\t\treturn [\"prepare\", \"keydown\", \"keydownend\", \"hit\", \"ball\"];\r\n\t}\r\n}\r\n\r\nclass _SkillAnimation_N_Jump extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthrow new TypeError(\"constructor\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis.jump_max_count = (window.jump_max_count || 2);\r\n\t}\r\n\r\n\tjump2() {\r\n\t\tconst crr = this._crr;\r\n\t\t//const body = this._owner_player.$physics.body;\r\n\t\tconst foot_walk = this._owner_player.$physics.foot_walk;\r\n\r\n\t\tconst pos = this._owner_player.$physics.getPosition();\r\n\t\tconsole.log(\"pos: { x: %o, y: %o }\", pos.x, pos.y);\r\n\r\n\t\t//body.ConstantVelocityWorldCenter2((window.$NJmpX || 40) * crr.front, (window.$NJmpY || 0));\r\n\t\tfoot_walk.ConstantVelocityWorldCenter2((window.$NJmpX || 40) * crr.front, (window.$NJmpY || 0));\r\n\r\n\t\tthis._addDefaultEffect();\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {Partial<_ArrowKey>} inputKey - keyDown tick counter\r\n\t * @param {number} keyDown - keyDown tick counter\r\n\t * @param {number} keyUp - is keyUp\r\n\t * @returns {boolean} - cancel player default control\r\n\t */\r\n\tcontrol(inputKey, keyDown, keyUp) {\r\n\t\tif (!this._owner) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst $physics = this._owner.$physics;\r\n\r\n\t\tif ($physics.state.jump_count == 0) {\r\n\t\t\tif (keyDown == 1 && $physics.state.jump) {\r\n\t\t\t\tthis.jump2();\r\n\t\t\t\t$physics.state.jump_count += 2;\r\n\t\t\t}\r\n\t\t\telse {//normal jump\r\n\t\t\t\tinputKey.jump = inputKey.jump ? Math.max(keyDown, inputKey.jump) : keyDown;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($physics.state.jump) {\r\n\t\t\tif (keyDown == 1 && $physics.state.jump_count < this.jump_max_count) {\r\n\t\t\t\tthis.jump2();\r\n\t\t\t\t$physics.state.jump_count += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst $physics = this._owner.$physics;\r\n\r\n\t\tif ($physics.state.jump_count > 1) {\r\n\t\t\tif ($physics.$foothold || this._actani.isEnd()) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($physics.$foothold) {//!$physics._isCanJump()\r\n\t\t\tif (this._actani.isEnd()) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t\telse if ($gv.m_editor_mode) {\r\n\t\t\t\tthis.is_end = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this._actani.isEnd()) {\r\n\t\t\tthis.is_end = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * TODO: add skill\r\n */\r\nclass __SkillAnimation_Template extends SkillAnimationBase {\r\n\t/**\r\n\t * @override\r\n\t */\r\n\t_init() {\r\n\t\tthis._applyDefaultAction();\r\n\t\t// ...\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t}\r\n}\r\n\r\nexport class SceneSkill extends SkillAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {AttackInfo} */\r\n\t\tthis.attackInfo = new AttackInfo();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skillId\r\n\t * @param {SceneObject} owner\r\n\t */\r\n\tload(skillId, owner) {\r\n\t\tthis.owner = owner;\r\n\r\n\t\tif (!skillId) {\r\n\t\t\tthrow new Error(\"1 argument required\");\r\n\t\t}\r\n\t\t\r\n\t\tif (String(skillId).length <= 4) {\r\n\t\t\tthrow new Error(\"skill ID format\");\r\n\t\t}\r\n\t\t//skillId = 1120017;//1001005;// jobId + 4-digit\r\n\r\n\t\tthis.attackInfo.skill = skillId;\r\n\t\t\r\n\t\tlet loaded_skill = SceneSkill.__loaded_skill[skillId];\r\n\t\tif (loaded_skill && loaded_skill.data) {\r\n\t\t\tthis._assign(loaded_skill);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet promise = this._load(skillId, owner);\r\n\r\n\t\t\tthis.$promise = promise;\r\n\r\n\t\t\tSceneSkill.__loaded_skill[skillId] = this;\r\n\r\n\t\t\tpromise.then(() => {\r\n\t\t\t\tdelete this.$promise;\r\n\t\t\t});\r\n\r\n\t\t\treturn promise;\r\n\t\t}\r\n\t}\r\n}\r\nSceneSkill.__loaded_skill = {};\r\n\r\nwindow.$SceneSkill = SceneSkill;\r\n\r\nclass _ArrowKey {\r\n\tconstructor() {\r\n\t\tthis.left = 0;\r\n\t\tthis.up = 0;\r\n\t\tthis.right = 0;\r\n\t\tthis.down = 0;\r\n\t}\r\n}\r\n","﻿/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\nimport {\r\n\tb2_pi,\r\n\tb2Vec2, b2Rot, b2DegToRad, b2Transform, b2AABB,\r\n\tb2Color, b2Draw, b2DrawFlags,\r\n\tb2Body, b2Fixture,\r\n\tb2Joint,\r\n} from \"./Physics.js\";\r\nimport { Rectangle } from \"../math.js\";\r\n\r\n\r\nfunction setFlags(flags, bit, flag) {\r\n\treturn flag ? (flags | bit):(flags & ~bit);\r\n}\r\n\r\nclass DebugDraw extends b2Draw {\r\n\t/**\r\n\t * This class implements debug drawing callbacks that are\r\n\t * invoked inside b2World::Step.\r\n\t * @export\r\n\t * @constructor\r\n\t * @extends {b2Draw}\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\tconstructor(ctx) {\r\n\t\tsuper(...arguments);\r\n\r\n\t\t/**\r\n\t\t * @type {CanvasRenderingContext2D}\r\n\t\t */\r\n\t\tthis.m_ctx = ctx;\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.axis_length = 1;\r\n\r\n\t\t/**\r\n\t\t * @type {b2Rot}\r\n\t\t */\r\n\t\tthis.viewRotation = new b2Rot(b2DegToRad(0));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.viewZoom = 1;\r\n\t\t\r\n\t\tthis.flag_drawShape = true;\r\n\t\tthis.flag_drawJoint = true;\r\n\t\tthis.flag_drawAabb = false;\r\n\t\tthis.flag_drawCenterOfMass = true;\r\n\t\tthis.flag_drawController = true;\r\n\t\tthis.flag_drawParticle = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tget canvasScale() {\r\n\t\treturn $gv.CANVAS_SCALE;\r\n\t}\r\n\tset canvasScale(value) {\r\n\t\t$gv.CANVAS_SCALE = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {Rectangle}\r\n\t */\r\n\tget viewRect() {\r\n\t\treturn $gv.m_viewRect;\r\n\t}\r\n\r\n\tset flag_drawAll(flag) { this.m_drawFlags = flag ? b2DrawFlags.e_all : b2DrawFlags.e_none;  }\r\n\tset flag_drawShape(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_shapeBit, flag); }\r\n\tset flag_drawJoint(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_jointBit, flag); }\r\n\tset flag_drawAabb(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_aabbBit, flag); }\r\n\tset flag_drawPair(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_pairBit, flag); }\r\n\tset flag_drawCenterOfMass(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_centerOfMassBit, flag); }\r\n\tset flag_drawParticle(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_particleBit, flag); }\r\n\tset flag_drawController(flag) { this.m_drawFlags = setFlags(this.m_drawFlags, b2DrawFlags.e_controllerBit, flag); }\r\n\t\r\n\tget flag_drawAll() { this.m_drawFlags; }\r\n\tget flag_drawShape() { return this.m_drawFlags & b2DrawFlags.e_shapeBit; }\r\n\tget flag_drawJoint() { return this.m_drawFlags & b2DrawFlags.e_jointBit; }\r\n\tget flag_drawAabb() { return this.m_drawFlags & b2DrawFlags.e_aabbBit; }\r\n\tget flag_drawPair() { return this.m_drawFlags & b2DrawFlags.e_pairBit; }\r\n\tget flag_drawCenterOfMass() { return this.m_drawFlags & b2DrawFlags.e_centerOfMassBit; }\r\n\tget flag_drawParticle() { return this.m_drawFlags & b2DrawFlags.e_particleBit; }\r\n\tget flag_drawController() { return this.m_drawFlags & b2DrawFlags.e_controllerBit; }\r\n\r\n\tget flagNames() {\r\n\t\treturn [\r\n\t\t\t\"flag_drawAll\",\r\n\t\t\t\"flag_drawShape\",\r\n\t\t\t\"flag_drawJoint\",\r\n\t\t\t\"flag_drawAabb\",\r\n\t\t\t\"flag_drawPair\",\r\n\t\t\t\"flag_drawCenterOfMass\",\r\n\t\t\t\"flag_drawParticle\",\r\n\t\t\t\"flag_drawController\",\r\n\t\t];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.PushTransform = function (xf)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tctx.save();\r\n\t//ctx.translate(xf.p.x, xf.p.y);\r\n\t//ctx.rotate(xf.q.GetAngle());\r\n\tctx.transform(xf.q.c, xf.q.s, -xf.q.s, xf.q.c, xf.p.x, xf.p.y);\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.PopTransform = function (xf)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tctx.restore();\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2[]} vertices\r\n * @param {number} vertexCount\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawPolygon = function (vertices, vertexCount, color)\r\n{\r\n\tif (!vertexCount) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(vertices[0].x, vertices[0].y);\r\n\tfor (let i = 1; i < vertexCount; i++)\r\n\t{\r\n\t\tctx.lineTo(vertices[i].x, vertices[i].y);\r\n\t}\r\n\tctx.closePath();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} vertices\r\n * @param {number} vertexCount\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSolidPolygon = function (vertices, vertexCount, color)\r\n{\r\n\tif (!vertexCount) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(vertices[0].x, vertices[0].y);\r\n\tfor (let i = 1; i < vertexCount; i++)\r\n\t{\r\n\t\tctx.lineTo(vertices[i].x, vertices[i].y);\r\n\t}\r\n\tctx.closePath();\r\n\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\tctx.fill();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} center\r\n * @param {number} radius\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawCircle = function (center, radius, color)\r\n{\r\n\tif (!radius) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.arc(center.x, center.y, radius, 0, b2_pi * 2, true);\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} center\r\n * @param {number} radius\r\n * @param {b2Vec2} axis\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSolidCircle = function (center, radius, axis, color)\r\n{\r\n\tif (!radius) return;\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tlet cx = center.x;\r\n\tlet cy = center.y;\r\n\tctx.beginPath();\r\n\tctx.arc(cx, cy, radius, 0, b2_pi * 2, true);\r\n\tctx.moveTo(cx, cy);\r\n\tctx.lineTo((cx + axis.x * radius), (cy + axis.y * radius));\r\n\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\tctx.fill();\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} centers\r\n * @param {number} radius\r\n * @param {b2Color} colors\r\n * @param {number} count\r\n */\r\nDebugDraw.prototype.DrawParticles = function (centers, radius, colors, count) {\r\n\tconst ctx = this.m_ctx;\r\n\tif (ctx) {\r\n\t\tif (colors !== null) {\r\n\t\t\tfor (let i = 0; i < count; ++i) {\r\n\t\t\t\tlet center = centers[i];\r\n\t\t\t\t/** @type {b2Color} */let color = colors[i];\r\n\t\t\t\tctx.fillStyle = color.MakeStyleString(0.5);\r\n\t\t\t\tctx.fillRect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n\t\t\t\t///ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, box2d.b2_pi * 2, true); ctx.fill();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n\t\t\tctx.beginPath();\r\n\t\t\tfor (let i = 0; i < count; ++i) {\r\n\t\t\t\tlet center = centers[i];\r\n\t\t\t\tctx.rect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\r\n\t\t\t\t///ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, box2d.b2_pi * 2, true); ctx.fill();\r\n\t\t\t}\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} p1\r\n * @param {b2Vec2} p2\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawSegment = function (p1, p2, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(p1.x, p1.y);\r\n\tctx.lineTo(p2.x, p2.y);\r\n\tctx.strokeStyle = color.MakeStyleString(1);\r\n\tctx.stroke();\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Transform} xf\r\n */\r\nDebugDraw.prototype.DrawTransform = function (xf)\r\n{\r\n\tif (this.axis_length == 0) {\r\n\t\treturn;\r\n\t}\r\n\t// viewport -> canvas\r\n\tlet cs = this.canvasScale;\r\n\tif (!this.viewRect.collide4f2(xf.p.x * cs, xf.p.y * cs, this.axis_length * cs, this.axis_length * cs)) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tthis.PushTransform(xf);\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(0, 0);\r\n\tctx.lineTo(this.axis_length, 0);\r\n\tctx.strokeStyle = b2Color.RED.MakeStyleString(1);\r\n\tctx.stroke();\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(0, 0);\r\n\tctx.lineTo(0, this.axis_length);\r\n\tctx.strokeStyle = b2Color.GREEN.MakeStyleString(1);\r\n\tctx.stroke();\r\n\r\n\tthis.PopTransform(xf);\r\n};\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2Vec2} p\r\n * @param {number} size\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawPoint = function (p, size, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.fillStyle = color.MakeStyleString();\r\n\tsize /= this.viewZoom;\r\n\tsize /= this.canvasScale;\r\n\tlet hsize = size / 2;\r\n\tctx.fillRect(p.x - hsize, p.y - hsize, size, size);\r\n}\r\n\r\n/**\r\n * @export\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {string} format\r\n * @param {...string|number} var_args\r\n */\r\nDebugDraw.prototype.DrawString = function (x, y, format, var_args)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\tconst font = ctx.font;\r\n\r\n\tlet args = Array.prototype.slice.call(arguments);\r\n\tlet string = goog.string.format.apply(null, args.slice(2));\r\n\r\n\tctx.save();\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.font = '18pt helvetica';//'9pt lucida console';\r\n\t\tlet color = DebugDraw.prototype.DrawString.s_color;\r\n\t\tctx.fillStyle = color.MakeStyleString();\r\n\t\tctx.fillText(string, x, y);\r\n\tctx.restore();\r\n\r\n\tctx.font = font;\r\n}\r\nDebugDraw.prototype.DrawString.s_color = new b2Color(0.9, 0.6, 0.6);\r\n\r\n/**\r\n * @export\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {string} format\r\n * @param {...string|number} var_args\r\n */\r\nDebugDraw.prototype.DrawStringWorld = function (x, y, format, var_args)\r\n{\r\n\tlet p = DebugDraw.prototype.DrawStringWorld.s_p.Set(x, y);\r\n\r\n\t// world -> viewport\r\n\tlet vt = this.viewCenter;\r\n\tb2Vec2.SubVV(p, vt, p);\r\n\tlet vr = this.viewRotation;\r\n\tb2Rot.MulTRV(vr, p, p);\r\n\tlet vs = this.viewZoom;\r\n\tb2Vec2.MulSV(vs, p, p);\r\n\r\n\t// viewport -> canvas\r\n\tlet cs = this.canvasScale;\r\n\tb2Vec2.MulSV(cs, p, p);\r\n\tp.y *= -1;\r\n\tlet cc = DebugDraw.prototype.DrawStringWorld.s_cc.Set(0.5 * this.m_canvas.width, 0.5 * this.m_canvas.height);\r\n\tb2Vec2.AddVV(p, cc, p);\r\n\r\n\tlet ctx = this.m_ctx;\r\n\tconst font = ctx.font;\r\n\r\n\tlet args = Array.prototype.slice.call(arguments);\r\n\tlet string = goog.string.format.apply(null, args.slice(2));\r\n\r\n\tctx.save();\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.font = '18pt helvetica';//'9pt lucida console';\r\n\t\tlet color = DebugDraw.prototype.DrawStringWorld.s_color;\r\n\t\tctx.fillStyle = color.MakeStyleString();\r\n\t\tctx.fillText(string, p.x, p.y);\r\n\tctx.restore();\r\n\r\n\tctx.font = font;\r\n}\r\nDebugDraw.prototype.DrawStringWorld.s_p = new b2Vec2();\r\nDebugDraw.prototype.DrawStringWorld.s_cc = new b2Vec2();\r\nDebugDraw.prototype.DrawStringWorld.s_color = new b2Color(0.5, 0.9, 0.5);\r\n\r\n/**\r\n * @export\r\n * @return {void}\r\n * @param {b2AABB} aabb\r\n * @param {b2Color} color\r\n */\r\nDebugDraw.prototype.DrawAABB = function (aabb, color)\r\n{\r\n\tlet ctx = this.m_ctx;\r\n\r\n\tctx.strokeStyle = color.MakeStyleString();\r\n\tlet x = aabb.lowerBound.x;\r\n\tlet y = aabb.lowerBound.y;\r\n\tlet w = aabb.upperBound.x - aabb.lowerBound.x;\r\n\tlet h = aabb.upperBound.y - aabb.lowerBound.y;\r\n\tctx.strokeRect(x, y, w, h);\r\n}\r\n\r\nexport default DebugDraw;\r\n","﻿\r\nimport {\r\n\tb2_linearSlop,\r\n\tb2Vec2,\r\n\tb2BodyType, b2BodyDef, b2FixtureDef,\r\n\tb2PolygonShape, b2EdgeShape,\r\n\tb2Body,\r\n\tb2Contact, b2Manifold, b2ContactImpulse, b2WorldManifold\r\n} from \"./Physics.js\";\r\n\r\nimport { World } from \"./World\";\r\nimport { PPlayer } from \"./PPlayer.js\";\r\nimport { FilterHelper } from \"./Filter.js\";\r\n\r\n\r\nexport class MapLadderRope {\r\n\tconstructor(raw) {\r\n\t\t/** @type {number} - is ladder ? 1 : 0 */\r\n\t\tthis.l = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.uf = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.x = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y1 = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.y2 = null;\r\n\r\n\t\t/** @type {number} - ?? */\r\n\t\tthis.page = null;\r\n\r\n\t\t/** @type {number} - select obj from layeredObject[layer] where obj.piece == piece */\r\n\t\tthis.piece = null;\r\n\r\n\t\tObject.assign(this, raw);\r\n\t}\r\n\r\n\tisLadder() {\r\n\t\treturn !!this.l;\r\n\t}\r\n}\r\n\r\n\r\nexport class LadderRope extends MapLadderRope {\r\n\tconstructor(raw) {\r\n\t\tsuper(raw);\r\n\r\n\t\t/** @type {b2Body} */\r\n\t\tthis.body = null;\r\n\t}\r\n\r\n\tcalcHeight() {\r\n\t\treturn (this.y2 - this.y1);\r\n\t}\r\n\tcalcHalfHeight() {\r\n\t\treturn (this.y2 - this.y1) * 0.5;\r\n\t}\r\n\tcalcWidth() {\r\n\t\treturn (this.isLadder() ? 16 : 4);\r\n\t}\r\n\tcalcHalfWidth() {\r\n\t\treturn (this.isLadder() ? 16 : 4) * 0.5;\r\n\t}\r\n\tcalcLength() {\r\n\t\treturn (this.y2 - this.y1) / $gv.CANVAS_SCALE;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t */\r\n\t_create(world) {\r\n\t\tlet bdef = new b2BodyDef();\r\n\t\tlet fdef = new b2FixtureDef();\r\n\t\tlet shape = new b2PolygonShape();\r\n\r\n\t\tconst x = this.x / $gv.CANVAS_SCALE;\r\n\t\tconst y1 = this.y1 / $gv.CANVAS_SCALE;\r\n\t\tconst y2 = this.y2 / $gv.CANVAS_SCALE;\r\n\t\tconst hwidth = this.calcHalfWidth() / $gv.CANVAS_SCALE;\r\n\t\tconst hheight = (y2 - y1) * 0.5;\r\n\r\n\t\tbdef.type = b2BodyType.b2_kinematicBody;//可移動\r\n\t\tbdef.position.Set(x, y1);\r\n\r\n\t\tbdef.angle = 0;\r\n\t\tbdef.gravityScale = 0;\r\n\t\t//bdef.allowSleep = true;\r\n\t\t//bdef.bullet = true;\r\n\t\tbdef.fixedRotation = true;\r\n\t\tbdef.userData = this;\r\n\r\n\t\tthis.body = world.CreateBody(bdef);\r\n\r\n\t\tshape.SetAsBox(hwidth, hheight + 0.5, new b2Vec2(0, hheight - 0.5), 0);\r\n\r\n\t\tfdef.shape = shape;\r\n\t\tfdef.filter.Copy(FilterHelper.get(\"ladder\"));\r\n\r\n\t\tfdef.isSensor = true;\r\n\t\tfdef.userData = this;\r\n\r\n\t\tlet fixture = this.body.CreateFixture(fdef);\r\n\r\n\t\tfixture.beginContact = this.beginContact.bind(this);\r\n\t\tfixture.endContact = this.endContact.bind(this);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tbeginContact(contact, fa, fb) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst targetPlayer = fb.m_userData;\r\n\t\tif (!targetPlayer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!targetPlayer.state.ladder) {\r\n\t\t\ttargetPlayer.contactLadder(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {b2Contact} contact\r\n\t * @param {b2Fixture} fa\r\n\t * @param {b2Fixture} fb\r\n\t */\r\n\tendContact(contact, fa, fb) {\r\n\t\t/** @type {PPlayer} */\r\n\t\tconst targetPlayer = fb.m_userData;\r\n\t\tif (!targetPlayer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttargetPlayer.leaveLadder();\r\n\t}\r\n}\r\n\r\n\r\nexport class MapLadderRopeLoader {\r\n\t/**\r\n\t * @param {{[prop:string]:any}} map_raw_data\r\n\t * @param {World} world\r\n\t * @returns {LadderRope[]}\r\n\t */\r\n\tstatic load(map_raw_data, world) {\r\n\t\t/** @type {LadderRope[]} */\r\n\t\tlet ladderRopes = [];\r\n\r\n\t\tfor (let i in map_raw_data.ladderRope) {\r\n\t\t\tlet raw = map_raw_data.ladderRope[i];\r\n\t\t\tlet idx = parseInt(i, 10) - 1;\r\n\t\t\tif (idx >= 0 && Number.isSafeInteger(idx)) {\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: ?? ladderRope\r\n\t\t\t\tdebugger;\r\n\t\t\t}\r\n\t\t\tlet ladderRope = new LadderRope(raw);\r\n\t\t\tladderRope._$index = i;\r\n\t\t\tladderRope._create(world);\r\n\t\t\tladderRopes.push(ladderRope);\r\n\t\t};\r\n\r\n\t\treturn ladderRopes;\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { PRemoteCharacter } from \"./PPlayer.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\n\r\n\r\nwindow.$MobAction_Move_Priority = 2;\r\nwindow.$MobAction_Jump_Priority = 1;\r\n\r\n\r\nexport class MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\t/** @type {string} - ?? */\r\n\t\tthis._name = null;\r\n\r\n\t\t/** @type {Animation} */\r\n\t\tthis._ani = animation;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\tinit() {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tisEnd(pMob) {\r\n\t\tlet end = this._ani.isEnd();\r\n\t\tif (end) {\r\n\t\t\tthis.onEnd(pMob);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tonEnd(pMob) {\r\n\t}\r\n}\r\n\r\nexport class MobAction_Stand extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"stand\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\t//保持停止。\r\n\t\tpMob.ikey[\"left\"] = 0;\r\n\t\tpMob.ikey[\"right\"] = 0;\r\n\t}\r\n}\r\n\r\nexport class _MobAction_Move extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"move\";\r\n\t\tthis.front = 0;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn window.$MobAction_Move_Priority;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\tlet name = pMob.action._name;\r\n\r\n\t\t//switch (pMob.action._name) {\r\n\t\t//\tcase \"attack\":\r\n\t\t//\t\treturn false;\r\n\t\t//\tdefault:\r\n\t\t\t\tif (name.startsWith(\"attack\")) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t//\t\tbreak;\r\n\t\t//}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport class MobAction_MoveLeft extends _MobAction_Move {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis.front = -1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn super.isValid(pMob) && (!pMob.state.jump || this.front == pMob.state.front);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tpMob.ikey[\"left\"] = 1;\r\n\t\tpMob.ikey[\"right\"] = 0;\r\n\t}\r\n\t\r\n\t///**\r\n\t// * @param {PMob} pMob\r\n\t// */\r\n\t//onEnd(pMob) {\r\n\t//\tpMob.ikey[\"left\"] = 0;//不停止移動，下個動作在處理。\r\n\t//}\r\n}\r\n\r\nexport class MobAction_MoveRight extends _MobAction_Move {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis.front = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn super.isValid(pMob) && (!pMob.state.jump || this.front == pMob.state.front);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tpMob.ikey[\"left\"] = 0;\r\n\t\tpMob.ikey[\"right\"] = 1;\r\n\t}\r\n\t\r\n\t///**\r\n\t// * @param {PMob} pMob\r\n\t// */\r\n\t//onEnd(pMob) {\r\n\t//\tpMob.ikey[\"right\"] = 0;//不停止移動，下個動作在處理。\r\n\t//}\r\n}\r\n\r\nexport class MobAction_Jump extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"jump\";\r\n\t\t//this.move = false;\r\n\t}\r\n\r\n\t/** @type {number} - int */\r\n\tget priority() {\r\n\t\treturn window.$MobAction_Jump_Priority;\r\n\t}\r\n\r\n\tinit() {\r\n\t\t//this.move = 1 || Math.random() > 0.5;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\tlet name = pMob.action._name;\r\n\r\n\t\tswitch (pMob.action._name) {\r\n\t\t\tcase \"attack\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tif (name.startsWith(\"attack\")) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn !pMob.state.jump;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t\tif (pMob.state.walk) {\r\n\t\t\tif (pMob.state.front < 0) {\r\n\t\t\t\tpMob.ikey[\"left\"] = 1;\r\n\t\t\t}\r\n\t\t\telse if (pMob.state.front > 0) {\r\n\t\t\t\tpMob.ikey[\"right\"] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tpMob.ikey[\"jump\"] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tonEnd(pMob) {\r\n\t\t//if (this.move) {\r\n\t\t//\tif (pMob.state.front < 0) {\r\n\t\t//\t\tpMob.ikey[\"left\"] = 0;\r\n\t\t//\t}\r\n\t\t//\telse if (pMob.state.front > 0) {\r\n\t\t//\t\tpMob.ikey[\"right\"] = 0;\r\n\t\t//\t}\r\n\t\t//}\r\n\t\tpMob.ikey[\"jump\"] = 0;\r\n\t}\r\n}\r\n\r\nexport class MobAction_Attack extends MobActionController {\r\n\t/**\r\n\t * @param {Animation} animation\r\n\t */\r\n\tconstructor(animation) {\r\n\t\tsuper(animation);\r\n\t\tthis._name = \"attack\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t * @returns {boolean}\r\n\t */\r\n\tisValid(pMob) {\r\n\t\treturn pMob.action.isEnd();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {PMob} pMob\r\n\t */\r\n\tupdate(pMob) {\r\n\t}\r\n}\r\n\r\nexport class PMob extends PRemoteCharacter {\r\n\t/**\r\n\t * @param {MapMob} mapMob\r\n\t */\r\n\tconstructor(mapMob) {\r\n\t\tsuper();\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis.attackTarget = true;\r\n\t\t\r\n\t\t/** @type {PPlayer} */\r\n\t\tthis._enable_rx = false;\r\n\t\t\r\n\t\t/** @type {MapMob} */\r\n\t\tthis.chara = mapMob;\r\n\r\n\t\t//TODO: move this code to ??\r\n\t\tif (mapMob) {\r\n\t\t\tif (mapMob.renderer.isFlyMob()) {\r\n\t\t\t\tthis.setMovementSpeed(this._info.flySpeed);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setMovementSpeed(this._info.speed);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis.activityRegion = null;\r\n\t\t\r\n\t\tthis.$debugControl = false;\r\n\r\n\t\t/** @type {{[action:string]:number}} */\r\n\t\tthis.ikey = {};\r\n\r\n\t\t/** @type {MobActionController[]} */\r\n\t\tthis.actions = [];\r\n\r\n\t\t/** @type {MobActionController} */\r\n\t\tthis.action = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {} param - ??\r\n\t */\r\n\t_registerAction(param) {\r\n\t\tthis.actions.push(param);\r\n\t}\r\n\r\n\t/**\r\n\t * {[action:string]:{ controller:MobActionController, renderer:Animation }}\r\n\t * @param {{[action:string]:Animation}} actions\r\n\t * @param {{[action:string]:MobActionController[]} =act_map\r\n\t */\r\n\t_loadAction(actions, act_map) {\r\n\t\tact_map = act_map || {\r\n\t\t\tstand: [MobAction_Stand],\r\n\t\t\tmove: [MobAction_MoveLeft, MobAction_MoveRight],\r\n\t\t\tjump: [MobAction_Jump],\r\n\t\t};\r\n\t\t\r\n\t\tObject.keys(actions).forEach(key => {\r\n\t\t\tif (actions[key] && act_map[key]) {\r\n\t\t\t\tconst list = act_map[key];\r\n\t\t\t\tfor (let type of list) {\r\n\t\t\t\t\tlet controller = new type(actions[key]);\r\n\t\t\t\t\tlet priority = controller.priority;\r\n\r\n\t\t\t\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\t\t\t\tif (!(Number.isSafeInteger(priority) && priority > 0)) {\r\n\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0; i < priority; ++i) {\r\n\t\t\t\t\t\tthis._registerAction(controller);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.warn(\"未完成 MobActionController: \" + key);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.action = this.actions[0];\r\n\t\tif (!this.action) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _info() {\r\n\t\treturn this.chara.renderer._raw.info;\r\n\t}\r\n\tget hasBodyDamage() {\r\n\t\tif (this._info.bodyAttack != 0 && this._info.bodyAttack != 1) {\r\n\t\t\talert(\"bodyAttack:\" + this._info.bodyAttack);\r\n\t\t}\r\n\t\treturn this._info.bodyAttack != 0;\r\n\t}\r\n\tget _speed() {\r\n\t\treturn this._info.speed;\r\n\t}\r\n\tget _pushed() {\r\n\t\treturn this._info.pushed;\r\n\t}\r\n\tget _fs() {\r\n\t\treturn this._info.fs;\r\n\t}\r\n\tget _category() {\r\n\t\treturn this._info.category;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {string}\r\n\t */\r\n\tget _body_category() {\r\n\t\treturn \"mob\";\r\n\t}\r\n\r\n\t/**\r\n\t * @param {World} world\r\n\t * @returns {void}\r\n\t */\r\n\t_create(world) {\r\n\t\tsuper._create(world);\r\n\t\t\r\n\t\tthis.setPosition(this.chara.x / $gv.CANVAS_SCALE, this.chara.y / $gv.CANVAS_SCALE, true);\r\n\t\t\r\n\t\tthis._appleMobCategory(this._category);\r\n\t}\r\n\t_appleMobCategory(category) {\r\n\t\tswitch (category) {\r\n\t\t\tcase 1:\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.__setAsWalkOnlyMob();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.__setAsJumpDropMob();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.__setAsWalkOnlyMob();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.chara.front = this.chara.spawn.f ? 1:-1;\r\n\t}\r\n\t__setAsWalkOnlyMob() {\r\n\t\tconst ground = this.body.GetWorld().ground;\r\n\t\t\r\n\t\tconst fhId = this.chara.spawn.fh;\r\n\t\t\r\n\t\tif (fhId >= 0) {\r\n\t\t\tlet fh = ground.footholds[fhId];\r\n\r\n\t\t\tthis.activityRegion = ground.rectChains[fh.chain];\r\n\t\t}\r\n\t}\r\n\t__setAsJumpDropMob() {\r\n\t}\r\n\t\r\n\tisCanMove() {\r\n\t\treturn !(this._info.ignoreMoveImpact || this._walker_omega == 0 || this._info.noFlip);\r\n\t}\r\n\t\r\n\t/** @override */\r\n\tcontrol() {\r\n\t\tif (this.isCanMove()) {\r\n\t\t\tswitch (this._category) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tthis._control_basic(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tthis._control_basic(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis._control_basic(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//this.ikey[\"jump\"] = 0;\r\n\t\t\t//this.ikey[\"left\"] = 0;\r\n\t\t\t//this.ikey[\"right\"] = 0;\r\n\r\n\t\t\tsuper.control(this.ikey);\r\n\t\t}\r\n\t}\r\n\t_control_basic(isAllowJump) {\r\n\t\tif (this.action) {\r\n\t\t\tif (this.action.isEnd(this)) {\r\n\t\t\t\tlet actions = this.actions.filter(act => act.isValid(this));\r\n\t\t\t\tlet next = Math.trunc(Math.random() * 100) % actions.length;\r\n\r\n\t\t\t\tthis.action = actions[next];\r\n\r\n\t\t\t\tif (!this.action) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.action.init();\r\n\r\n\t\t\t\t//console.log(\"mob: \" + this.action.name);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t}\r\n\r\n\t\t\tthis.action.update(this);\r\n\t\t}\r\n\t}\r\n\r\n\tstop() {\r\n\t\tconst empty = {};\r\n\t\tthis.ikey = empty;\r\n\t\tsuper.control(empty);\r\n\t}\r\n\t\r\n\tStep() {\t\t\r\n\t\tsuper.Step();\r\n\t\t\r\n\t\tthis.control();\r\n\t\t\r\n\t\tlet rx0, rx1, limit_action;\r\n\t\t\r\n\t\tif (this.attackTarget && this.activityRegion) {\r\n\t\t\trx0 = this.activityRegion.left;\r\n\t\t\trx1 = this.activityRegion.right;\r\n\t\t\tlimit_action = true;\r\n\t\t}\r\n\t\telse if (!this._enable_rx) {\r\n\t\t\trx0 = this.chara.spawn.rx0;\r\n\t\t\trx1 = this.chara.spawn.rx1;\r\n\t\t\tlimit_action = false;\r\n\t\t}\r\n\t\t\r\n\t\tif (limit_action) {\r\n\t\t\tconst cbpos = this.body.GetPosition();\r\n\t\t\tconst x = cbpos.x * $gv.CANVAS_SCALE;\r\n\t\t\tconst y = cbpos.y * $gv.CANVAS_SCALE;\r\n\t\t\tconst dx0 = rx0 - x;\r\n\t\t\tconst dx1 = x - rx1;\r\n\t\t\t\r\n\t\t\tif (dx0 > 0) {\r\n\t\t\t\tconst fwpos = this.foot_walk.GetPosition();\r\n\t\t\t\tthis.body.SetPositionXY(rx0 / $gv.CANVAS_SCALE, cbpos.y);\r\n\t\t\t\tthis.foot_walk.SetPositionXY(rx0 / $gv.CANVAS_SCALE, fwpos.y);\r\n\t\t\t}\r\n\t\t\telse if (dx1 > 0) {\r\n\t\t\t\tconst fwpos = this.foot_walk.GetPosition();\r\n\t\t\t\tthis.body.SetPositionXY(rx1 / $gv.CANVAS_SCALE, cbpos.y);\r\n\t\t\t\tthis.foot_walk.SetPositionXY(rx1 / $gv.CANVAS_SCALE, fwpos.y);\r\n\r\n\t\t\t\tif (!this.attackTarget) {\r\n\t\t\t\t\tthis.state.front *= -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tAfterStep() {\r\n\t\tsuper.AfterStep();\r\n\t\t\r\n\t\tconst pos = this.getPosition();\r\n\t\tconst x = pos.x * $gv.CANVAS_SCALE;\r\n\t\tconst y = pos.y * $gv.CANVAS_SCALE;\r\n\t\t\r\n\t\tthis.chara.x = x;\r\n\t\tthis.chara.y = y;\r\n\t\t\r\n\t\tif (!this._info.noFlip) {\r\n\t\t\tthis.chara.front = -this.state.front;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nexport class MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tthis.createDelay = 0;\r\n\t\tthis.collisionDelay = 0;\r\n\t\tthis.duration = 0;\r\n\t\t\r\n\t\tthis.moveSpeed = 0;\r\n\t\tthis.angle = 0;\r\n\t\t\r\n\t\tthis.flip = false;\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis._speed_x = 0;//uint: px/second\r\n\t\tthis._speed_y = 0;//uint: px/second\r\n\t}\r\n}\r\n\r\nexport class MobSkillBallBase extends SceneObject {\r\n\t/**\r\n\t * @param {MobSkillBallDefinition} ballDef\r\n\t * @param {{[x:string]:Animation} animations\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tballDef = Object.assign(new this._BallDefinition(), ballDef);\r\n\t\t\r\n\t\tthis.createDelay = ballDef.createDelay;\r\n\t\tthis.collisionDelay = ballDef.collisionDelay;\r\n\t\tthis.duration = ballDef.duration;\r\n\t\t\r\n\t\tthis.moveSpeed = ballDef.moveSpeed;\r\n\t\tthis.angle = ballDef.angle * Math.PI / 180;//deg to rad\r\n\t\t\r\n\t\tthis.x = ballDef.x;\r\n\t\tthis.y = ballDef.y;\r\n\t\t\r\n\t\tif (this.moveSpeed) {\r\n\t\t\tthis._speed_x = Math.cos(this.angle + Math.PI) * this.moveSpeed;//uint: px/second\r\n\t\t\tthis._speed_y = Math.sin(this.angle + Math.PI) * this.moveSpeed;//uint: px/second\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._speed_x = 0;//uint: px/second\r\n\t\t\tthis._speed_y = 0;//uint: px/second\r\n\t\t}\r\n\t\t\r\n\t\tthis.state = this.E_BEFORE_CREATE;\r\n\t}\r\n\t\r\n\tget E_BEFORE_CREATE() { return 0; }\r\n\tget E_CREATED() { return 1; }\r\n\tget E_BEGIN_COLLISION() { return 2; }\r\n\tget E_ENG_COLLISION() { return 3; }\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.state = this.E_CREATED;\r\n\t\tif (this.collisionDelay > 0) {\r\n\t\t\tthis.enablePhysics = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tbegin_collision() {\r\n\t\tthis.enablePhysics = true;\r\n\t\tthis.state = this.E_BEGIN_COLLISION;\r\n\t}\r\n\t\r\n\tend_collision() {\r\n\t\tthis.enablePhysics = false;\r\n\t\tthis.state = this.E_ENG_COLLISION;\r\n\t}\r\n\t\r\n\t/**\r\n\t * debug\r\n\t * @param {PWorld} pWorld\r\n\t */\r\n\tupdate(stamp, pWorld) {\r\n\t\tif (this.state == this.E_BEFORE_CREATE) {\r\n\t\t\tthis.createDelay -= stamp;\r\n\t\t\tif (this.createDelay <= 0) {\r\n\t\t\t\tthis.create();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state == this.E_CREATED) {\r\n\t\t\t\tthis.collisionDelay -= stamp;\r\n\t\t\t\tif (this.collisionDelay <= 0) {\r\n\t\t\t\t\tthis.begin_collision();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.state == this.E_BEGIN_COLLISION) {\r\n\t\t\t\tif (this.duration > 0) {\r\n\t\t\t\t\tthis.duration -= stamp;\r\n\t\t\t\t\tif (this.duration) {\r\n\t\t\t\t\t\tthis.end_collision();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!window.$stop) {//debug\r\n\t\t\t\tthis.x += this._speed_x * stamp / 1000;//debug\r\n\t\t\t\tthis.y += this._speed_y * stamp / 1000;//debug\r\n\t\t\t}\r\n\t\t\tthis.renderer.update(stamp);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {IRenderer} engine\r\n\t */\r\n\trender(engine) {\r\n\t\tif (this.state != this.E_BEFORE_CREATE) {\r\n\t\t\tconst flip = this.flip;\r\n\t\t\tthis.renderer.draw(engine, this.x, this.y, this.angle, flip);\r\n\t\t}\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nexport class MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tthis._raw = _raw;\r\n\t\tthis._url = _url;\r\n\t\t\r\n\t\tthis.level = null;\r\n\t\t\r\n\t\tthis.animations = {};\r\n\t}\r\n\t\r\n\t/** @param {number} level */\r\n\tasync load(level) {\r\n\t\tthis.level = level;\r\n\t\t\r\n\t\tif (!this._raw && !this._url) {\r\n\t\t\tthis._url = [this._base_path, level].join(\"/\");\r\n\t\t\t\r\n\t\t\tthis._raw = await $get.data(this._url);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let name of this._anima_name_list) {\r\n\t\t\t//name = \"ball0\";\r\n\t\t\tlet anima = new Animation(this._raw[name], [this._url, name].join(\"/\"));\r\n\t\t\tanima.is_loop = true;\r\n\t\t\tanima.load();\r\n\t\t\tthis.animations[name] = anima;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {void} */\r\n\tinvoke() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/** @returns {string} */\r\n\tget _base_path() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\n","﻿\r\nexport class KeySlotData {\r\n}\r\n\r\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"009f3464\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"37287e38\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"c9ae3650\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"38713d8e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7b9bb866\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3c9f94b0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"62027292\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=style&index=0&id=370f889e&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d3a7d8a4\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"166ef477\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=style&index=0&id=10601658&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"da2cfcee\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=style&index=0&id=ea11de16&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"613b7622\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4c329b45\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&id=1e192451&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3c49887c\", content, true, {});","\r\n<template>\r\n\t<ui-draggable class=\"ui-dialog\" :zIndex=\"zIndex\" :position=\"position\" @update:position=\"updateDialogPosition\">\r\n\t\t<div ref=\"header\" class=\"header\" @mousedown.left=\"requireOrder($event)\" :style=\"header_style\">\r\n\t\t\t<slot name=\"header\"></slot>\r\n\t\t\t<div class=\"header-buttons\">\r\n\t\t\t\t<button v-if=\"minimum\"\r\n\t\t\t\t\t\t@click=\"minimum=false\"\r\n\t\t\t\t\t\tclass=\"header-button\">\r\n\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-plus\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t<button v-else\r\n\t\t\t\t\t\t@click=\"minimum=true; onCollapsed()\"\r\n\t\t\t\t\t\tclass=\"header-button\">\r\n\t\t\t\t\t\t\t<span class=\"ui-icon ui-icon-minus\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div ref=\"content\" @mousedown.left=\"requireOrder($event)\" :style=\"content_style\" class=\"content\">\r\n\t\t\t<slot name=\"content\"></slot>\r\n\t\t\t<slot></slot>\r\n\t\t</div>\r\n\t\t<div ref=\"footer\" v-if=\"!minimum\" @mousedown.left=\"requireOrder($event)\" class=\"footer\">\r\n\t\t\t<slot name=\"footer\"></slot>\r\n\t\t</div>\r\n\t</ui-draggable>\r\n</template>\r\n\r\n<script>\r\n\timport UIDraggable from \"./ui-draggable.vue\";\r\n\r\n\tlet px_regx = /(^-?(\\d+|(\\d*.\\d+))px$)|(^auto$)/;\r\n\t//.match(/(^[+-]?\\d+\\.\\d+?)|(^[+-]?\\d+)|(^[+-]?\\.\\d+)/)\r\n\r\n\tlet zIndices = [];\r\n\r\n\texport default {\r\n\t\t//render: function (createElement) {\r\n\t\t//\treturn createElement(\"div\", [render2.apply(this, arguments), render.apply(this, arguments)]);\r\n\t\t//},\r\n\t\t\r\n\t\tprops: {\r\n\t\t\t//\"min-width\": {\r\n\t\t\t//\tdefault: \"\",\r\n\t\t\t//},\r\n\t\t\t//\"min-height\": {\r\n\t\t\t//\tdefault: \"\",\r\n\t\t\t//},\r\n\t\t\twidth: {//max-width\r\n\t\t\t\tdefault: \"\",//auto\r\n\t\t\t\t//validator: function (value) {\r\n\t\t\t\t//\treturn value == \"\" || px_regx.test(value) || Number.isSafeInteger(value);\r\n\t\t\t\t//}\r\n\t\t\t},\r\n\t\t\theight: {//max-height\r\n\t\t\t\tdefault: \"\",//auto\r\n\t\t\t\t//validator: function (value) {\r\n\t\t\t\t//\treturn value == \"\" || px_regx.test(value) || Number.isSafeInteger(value);\r\n\t\t\t\t//}\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\trequired: false\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdata: function () {\r\n\t\t\treturn {\r\n\t\t\t\tcontent_style: {\r\n\t\t\t\t},\r\n\t\t\t\theader_style: {\r\n\t\t\t\t},\r\n\t\t\t\tminimum: false,\r\n\t\t\t\tzIndex: 1,\r\n\t\t//\t\t_option: {}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcomputed: {\r\n\t\t},\r\n\r\n\t\t// directives: {\r\n\t\t//     'dialog': {\r\n\t\t//         bind: function () {\r\n\t\t//         }\r\n\t\t//     }\r\n\t\t// }\r\n\r\n\t\tmethods: {\r\n\t\t\tupdateDialogPosition: function (event) {\r\n\t\t\t\tthis.$emit('update:position', event);\r\n\t\t\t},\r\n\t\t\tonCollapsed: function () {\r\n\t\t\t\tlet contents = this.$children[0].$children;\r\n\t\t\t\tfor (let i = 0; i < contents.length; ++i) {\r\n\t\t\t\t\tcontents[i].$emit(\"onCollapsed\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcompute_width: function () {\r\n\t\t\t\treturn this.width;\r\n\t\t\t},\r\n\t\t\tcompute_height: function () {\r\n\t\t\t\treturn this.height;\r\n\t\t\t},\r\n\t\t\t//myUpdate: function (val) {\r\n\t\t\t//\t//return;\r\n\t\t\t//\t$(this.$el).dialog({\r\n\t\t\t//\t\ttitle: val\r\n\t\t\t//\t});\r\n\t\t\t//},\r\n\t\t\tshow: function () {\r\n\t\t\t\tlet el = $(this.$el);\r\n\t\t\t\tel.show.apply(el, arguments);\r\n\t\t\t},\r\n\t\t\thide: function () {\r\n\t\t\t\tlet el = $(this.$el);\r\n\t\t\t\tel.hide.apply(el, arguments);\r\n\t\t\t},\r\n\t\t\t//_resize_content: function (this_elem) {\r\n\t\t\t//\tlet header = $(this.$refs.header);\r\n\t\t\t//\tlet content = $(this.$refs.content);\r\n\t\t\t//\tlet footer = $(this.$refs.footer);\r\n\t\t\t//\r\n\t\t\t//\tlet hh = header.outerHeight();\r\n\t\t\t//\t//let ch = content.outerHeight();\r\n\t\t\t//\tlet fh = footer.outerHeight();\r\n\t\t\t//\r\n\t\t\t//\tcontent.height($(this_elem).height() - hh - fh);\r\n\t\t\t//},\r\n\t\t\trequireOrder: function () {\r\n\t\t\t\tconst index = zIndices.indexOf(this);\r\n\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\tlet removed = zIndices.splice(index, 1);//remove\r\n\t\t\t\t\tif (removed[0] != this) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tzIndices.push(this);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < zIndices.length; ++i) {\r\n\t\t\t\t\t\tzIndices[i].__set_z_index(i + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t__set_z_index: function (z) {\r\n\t\t\t\tthis.zIndex = z;\r\n\t\t\t},\r\n\t\t\treset_content_style: function () {\r\n\t\t\t\tlet style = {};\r\n\t\t\t\tlet el_content = this.$refs.content;\r\n\t\t\t\tif (el_content) {\r\n\t\t\t\t\tlet width = this.compute_width();\r\n\t\t\t\t\tif (this.minimum) {\r\n\t\t\t\t\t\tstyle[\"height\"] = \"0px\";\r\n\t\t\t\t\t\tstyle[\"min-height\"] = \"0px\";\r\n\t\t\t\t\t\tstyle[\"max-height\"] = \"0px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet height = this.compute_height();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//if (el_content.style.width != \"auto\") {\r\n\t\t\t\t\t\t//\tstyle[\"max-width\"] = typeof width == \"number\" ? (parseFloat(width) + \"px\"):width;\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t//if (el_content.style.height != \"auto\") {\r\n\t\t\t\t\t\t\tstyle[\"max-height\"] = typeof height == \"number\" ? (parseFloat(height) + \"px\"):height;\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstyle[\"width\"] = typeof width == \"number\" ? (parseFloat(width) + \"px\") : width;\r\n\t\t\t\t\tstyle[\"max-width\"] = typeof width == \"number\" ? (parseFloat(width) + \"px\") : width;\r\n\t\t\t\t\t//style[\"min-width\"] = this[\"min-width\"];\r\n\t\t\t\t\t//style[\"min-height\"] = this[\"min-height\"];\r\n\t\t\t\t}\r\n\t\t\t\tthis.content_style = style;\r\n\t\t\t\tthis.header_style[\"width\"] = this.content_style[\"width\"];\r\n\t\t\t\tthis.header_style[\"max-width\"] = this.content_style[\"max-width\"];\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\twatch: {\r\n\t\t\twidth: function () {\r\n\t\t\t\t//alert(\"UIDialog.width is not implement\");\r\n\t\t\t\tthis.reset_content_style();\r\n\t\t\t},\r\n\t\t\theight: function () {\r\n\t\t\t\t//alert(\"UIDialog.height is not implement\");\r\n\t\t\t\tthis.reset_content_style();\r\n\t\t\t},\r\n\t\t\tminimum: function () {\r\n\t\t\t\tthis.reset_content_style();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmounted: function () {\r\n\t\t\tzIndices.push(this);\r\n\r\n\t\t\tthis.zIndex = zIndices.length;\r\n\t\t\t\r\n\t\t\tthis.reset_content_style();\r\n\t\t},\r\n\r\n\t\tupdated: function () {\r\n\t\t},\r\n\r\n\t\t//   watch: {\r\n\t\t//   }\r\n\r\n\t\tcomponents: {\r\n\t\t\t\"ui-draggable\": UIDraggable\r\n\t\t}\r\n\t}\r\n\t\r\n\t//export default {\r\n\t//\t//render: function (createElement) {\r\n\t//\t//\treturn createElement(\"div\", [render2.apply(this, arguments), render.apply(this, arguments)]);\r\n\t//\t//},\r\n\t//\r\n\t//\tprops: {\r\n\t//\t\ttitle: {\r\n\t//\t\t\ttype: String,\r\n\t//\t\t\tdefault: \"\",\r\n\t//\t\t\trequired: false\r\n\t//\t\t},\r\n\t//\t\tposition: {\r\n\t//\t\t\ttype: Object,\r\n\t//\t\t\trequired: false\r\n\t//\t\t},\r\n\t//\t\toption: {\r\n\t//\t\t\ttype: Object,\r\n\t//\t\t\trequired: false\r\n\t//\t\t},\r\n\t//\t},\r\n\t//\r\n\t//\t//data: function () {\r\n\t//\t//\treturn {\r\n\t//\t//\t\t_option: {}\r\n\t//\t//\t};\r\n\t//\t//},\r\n\t//\r\n\t//\t// directives: {\r\n\t//\t//     'dialog': {\r\n\t//\t//         bind: function () {\r\n\t//\t//         }\r\n\t//\t//     }\r\n\t//\t// }\r\n\t//\r\n\t//\tmethods: {\r\n\t//\t\t//myUpdate: function (val) {\r\n\t//\t\t//\t//return;\r\n\t//\t\t//\t$(this.$el).dialog({\r\n\t//\t\t//\t\ttitle: val\r\n\t//\t\t//\t});\r\n\t//\t\t//},\r\n\t//\t\tshow: function () {\r\n\t//\t\t\tlet el = $(this.$el);\r\n\t//\t\t\tel.show.apply(el, arguments);\r\n\t//\t\t},\r\n\t//\t\thide: function () {\r\n\t//\t\t\tlet el = $(this.$el);\r\n\t//\t\t\tel.hide.apply(el, arguments);\r\n\t//\t\t},\r\n\t//\t\textends_option: function (option) {\r\n\t//\t\t\toption = Object.assign({}, this.option, option);\r\n\t//\t\t\tlet pos = {};\r\n\t//\t\t\tfor (let i in this.position) {\r\n\t//\t\t\t\tpos[i] = this.position[i];\r\n\t//\t\t\t}\r\n\t//\t\t\toption.title = this.title;\r\n\t//\t\t\toption.position = pos;\r\n\t//\t\t\treturn option;\r\n\t//\t\t},\r\n\t//\t\t//_resize_content: function (this_elem) {\r\n\t//\t\t//\tvar header = $(this.$refs.header);\r\n\t//\t\t//\tvar content = $(this.$refs.content);\r\n\t//\t\t//\tvar footer = $(this.$refs.footer);\r\n\t//\t\t//\r\n\t//\t\t//\tvar hh = header.outerHeight();\r\n\t//\t\t//\t//var ch = content.outerHeight();\r\n\t//\t\t//\tvar fh = footer.outerHeight();\r\n\t//\t\t//\r\n\t//\t\t//\tcontent.height($(this_elem).height() - hh - fh);\r\n\t//\t\t//},\r\n\t//\t},\r\n\t//\r\n\t//\tmounted: function () {\r\n\t//\t\tlet vm = this;\r\n\t//\t\t//width, height\r\n\t//\t\t//maxWidth, maxHeight\r\n\t//\t\t//minWidth, minHeight\r\n\t//\t\t$(this.$el).dialog(this.extends_option({\r\n\t//\t\t\t//resizeStop: function (event, ui) {\r\n\t//\t\t\t//\t//originalPosition: Object\r\n\t//\t\t\t//\t//originalSize: Object\r\n\t//\t\t\t//\t//position: Object\r\n\t//\t\t\t//\t//size: Object\r\n\t//\t\t\t//\tvm._resize_content(this);//this_elem\r\n\t//\t\t\t//\t//this.$emit(\"resizeStop\", this.size);\r\n\t//\t\t\t//\t//this.$emit('update:active', selected);\r\n\t//\t\t\t//}\r\n\t//\t\t}));\r\n\t//\t},\r\n\t//\r\n\t//\tupdated: function () {\r\n\t//\t\t$(this.$el).dialog(this.extends_option());\r\n\t//\t},\r\n\t//\r\n\t//\t//   watch: {\r\n\t//\t//     title: function (val) {\r\n\t//\t//       $(this.$el).dialog({\r\n\t//\t//         title: val\r\n\t//\t//       });\r\n\t//\t//     }\r\n\t//\t//   }\r\n\t//}\r\n</script>\r\n\r\n<style>\r\n\t.ui-dialog {\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.ui-dialog > * {\r\n\t\t/*padding: 0.5em 1em;*/\r\n\t\t/*display: inline-block;*/\r\n\t\t/*width: 100%;*/\r\n\t}\r\n\r\n\t.ui-dialog > .header {\r\n\t\t/*cursor: default;*/\r\n\t\tpadding: 0.25em 0.5em;\r\n\t\tuser-select: none;\r\n\t\tbackground: #e9e9e9;\r\n\t\tborder: 1px solid #dddddd;\r\n\t\t/*border-top-left-radius: 4px;*/\r\n\t\t/*border-top-right-radius: 4px;*/\r\n\t\ttext-align: left;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t\r\n\t.ui-dialog > .header .header-buttons {\r\n\t\tdisplay: inline;\r\n\t\tright: 0.5em;\r\n\t\tmargin-right: 1px;\r\n\t\tposition: absolute;\r\n\t}\r\n\t.ui-dialog > .header .header-buttons > * {\r\n\t\tpadding: 0;\r\n\t\tborder: none;\r\n\t\tbackground: transparent;\r\n\t}\r\n\t.ui-dialog > .header .header-buttons > .header-button {\r\n\t}\r\n\t.ui-dialog > .header .header-buttons > .header-button:hover {\r\n\t\tbackground: lightgray;\r\n\t}\r\n\t.ui-dialog > .header .header-buttons > .header-button:active {\r\n\t\tbackground: lightblue;\r\n\t}\r\n\r\n\t.ui-dialog > .content {\r\n\t\tposition: relative;\r\n\t\tbackground: white;\r\n\t\tborder-left: 1px solid #dddddd;\r\n\t\tborder-right: 1px solid #dddddd;\r\n\t\tmin-width: 16em;\r\n\t\tmin-height: 10em;\r\n\t\t/*width: auto;*/\r\n\t\t/*height: auto;*/\r\n\t\toverflow: auto;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.ui-dialog > .footer {\r\n\t\tpadding: 0.1em 0.25em;\r\n\t\tuser-select: none;\r\n\t\tbackground: #e9e9e9;\r\n\t\tborder: 1px solid #dddddd;\r\n\t\t/*border-bottom-left-radius: 4px;*/\r\n\t\t/*border-bottom-right-radius: 4px;*/\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n</style>\r\n","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ui-dialog.vue?vue&type=template&id=6a43e1d2&\"\nimport script from \"./ui-dialog.vue?vue&type=script&lang=js&\"\nexport * from \"./ui-dialog.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ui-dialog.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ui-draggable',{staticClass:\"ui-dialog\",attrs:{\"zIndex\":_vm.zIndex,\"position\":_vm.position},on:{\"update:position\":_vm.updateDialogPosition}},[_c('div',{ref:\"header\",staticClass:\"header\",style:(_vm.header_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[_vm._t(\"header\"),_vm._v(\" \"),_c('div',{staticClass:\"header-buttons\"},[(_vm.minimum)?_c('button',{staticClass:\"header-button\",on:{\"click\":function($event){_vm.minimum=false}}},[_c('span',{staticClass:\"ui-icon ui-icon-plus\"})]):_c('button',{staticClass:\"header-button\",on:{\"click\":function($event){_vm.minimum=true; _vm.onCollapsed()}}},[_c('span',{staticClass:\"ui-icon ui-icon-minus\"})])])],2),_vm._v(\" \"),_c('div',{ref:\"content\",staticClass:\"content\",style:(_vm.content_style),on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[_vm._t(\"content\"),_vm._v(\" \"),_vm._t(\"default\")],2),_vm._v(\" \"),(!_vm.minimum)?_c('div',{ref:\"footer\",staticClass:\"footer\",on:{\"mousedown\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }_vm.requireOrder($event)}}},[_vm._t(\"footer\")],2):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n/**\r\n * usage:\r\n *\tvar fairyDust = new FairyDust();\r\n *\tfairyDust.load(4).then(()=>fairyDust.invoke());\r\n */\r\n\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { MobSkillBallDefinition, MobSkillBallBase, MobSkillBase } from \"./MobSkillBase.js\";\r\n\r\n\r\nclass FairyDustBallDefinition extends MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.scale = 0;// 1~3\r\n\t}\r\n}\r\n\r\nexport class FairyDustBall extends MobSkillBallBase {\r\n\t/**\r\n\t * @param {FairyDustBallDefinition} ballDef\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper(ballDef, animations);\r\n\t\t\r\n\t\tthis.x = 1000;\r\n\t\tthis.y = -80;\r\n\t\t\r\n\t\t//this.scale = ballDef.scale;\r\n\t\t\r\n\t\tthis.renderer = animations[\"ball\" + ballDef.scale].clone();\r\n\t}\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.$physics = {// make dummy for debug\r\n\t\t\tstate: {}\r\n\t\t};\r\n\t\t\r\n\t\tsuper.create(pWorld);//complete create\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\treturn FairyDustBallDefinition;\r\n\t}\r\n}\r\nexport class FairyDustBallHit extends SceneObject {\r\n\tconstructor(target, animations) {\r\n\t\tsuper();\r\n\t\t//MouseJoint\r\n\t\t//World.CreateJoint()\r\n\t}\r\n}\r\n\r\nexport class FairyDust extends MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t}\r\n\t\r\n\t/** @param {4|10} level */\r\n\t\r\n\tinvoke() {\r\n\t\tconst s = this._raw.s;\r\n\t\tconst s2 = this._raw.s2;\r\n\t\tconst v = this._raw.v;\r\n\t\tconst v2 = this._raw.v2;\r\n\t\tconst w = this._raw.w;\r\n\t\tconst w2 = this._raw.w2;\r\n\t\tconst u = this._raw.u;\r\n\t\tlet x = this._raw.x;\r\n\t\t\r\n\t\tfor (let i = 0, max = Randomizer.randInt(w, w + w2); i < max; i++) {\r\n\t\t\tx += Randomizer.nextInt(x);\r\n\t\t\tlet ball = new FairyDustBall({\r\n\t\t\t\tscale: Randomizer.nextInt(3),\r\n\t\t\t\tcreateDelay: u,\r\n\t\t\t\tmoveSpeed: v + Randomizer.nextInt(v2),\r\n\t\t\t\tangle: x + Randomizer.randInt(s, s2),\r\n\t\t\t}, this.animations);\r\n\t\t\t$gv.SceneObjectMgr.addToScene(10, ball);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\treturn [\"ball0\", \"ball1\", \"ball2\"];\r\n\t}\r\n\t\r\n\tget _base_path() {\r\n\t\treturn \"/Skill/MobSkill/238/level\";\r\n\t}\r\n}\r\n\r\nexport class _FairyDust extends FairyDust {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t}\r\n\t/** @override */\r\n\tload(level) {\r\n\t\tif (!this._raw && !this._url) {\r\n\t\t\tthis._raw = window.MOB_SKILL_RAW[238].level[level];\r\n\t\t\tthis._url = [this._base_path, level].join(\"/\");\r\n\t\t}\r\n\t\tsuper.load(level);\r\n\t}\r\n}\r\n\r\n","﻿\r\nlet LoginPacket = require(\"./LoginPacket.js\");\r\nlet ChatPacket = require(\"./ChatPacket.js\");\r\nlet CharacterPacket = require(\"./CharacterPacket.js\");\r\n\r\nlet ex = Object.assign({},\r\n\tLoginPacket,\r\n\tChatPacket,\r\n\tCharacterPacket\r\n);\r\n\r\nmodule.exports = ex;\r\n","﻿\r\nimport { IRenderer } from \"../IRenderer.js\";\r\nimport { Sprite } from \"../Sprite.js\";\r\nimport { LayerObject, Layer } from \"./Layer.js\";\r\nimport { RenderingOption } from \"./RenderingOption.js\";\r\nimport { DamagePair, AttackInfo } from \"../../Common/AttackInfo.js\";\r\n\r\n// 123\r\n// NoRed[1][1], NoRed[0][2], NoRed[0][3], ...\r\n\r\nclass _DamageSkin {\r\n\tconstructor() {\r\n\t\t/** @type {DamageNumberTextures} */\r\n\t\tthis.NoRed = null;\r\n\t\t/** @type {DamageNumberTextures} */\r\n\t\tthis.NoCri = null;\r\n\t}\r\n}\r\nclass _DamageSkinDefault extends _DamageSkin {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoBlue = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoViolet = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoProduction = null;\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.NoKite = null;\r\n\t}\r\n}\r\n\r\n\r\n/** @type {{default:_DamageSkinDefault,[skin:string]:_DamageSkin}} */\r\nconst loaded_skin = {};\r\n\r\nclass DamageNumberTextures {\r\n\tconstructor() {\r\n\t\t/** @type {Sprite} */\r\n\t\tfor (let i = 0; i <= 9; ++i) {\r\n\t\t\tthis[i] = null;\r\n\t\t}\r\n\t\tthis.addedCanvasH = 0;\r\n\t}\r\n\t/**\r\n\t * @param {string} path\r\n\t */\r\n\tasync _load(path) {\r\n\t\tconst _raw = await $get.data(path);\r\n\t\t\r\n\t\tObject.keys(_raw).forEach(key => {\r\n\t\t\tlet texture = new Sprite(_raw[key]);\r\n\r\n\t\t\ttexture._url = [path, key].join(\"/\");\r\n\r\n\t\t\tthis[key] = texture;\r\n\t\t});\r\n\r\n\t\tthis.addedCanvasH = _raw.addedCanvasH | 0;\r\n\t}\r\n}\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.Miss = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.guard = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.shot = null;\r\n/** @type {Sprite} */\r\nDamageNumberTextures.prototype.effect = null;\r\n\r\n\r\nfunction font_adv(texture) {\r\n\treturn texture.width * 3 / 4;\r\n}\r\n\r\nfunction draw_axis(ctx, x, y) {\r\n\tctx.strokeStyle = \"#F00\";\r\n\tctx.beginPath();\r\n\tctx.moveTo(x, y);\r\n\tctx.lineTo(x, y + 10);\r\n\tctx.stroke();\r\n\r\n\tctx.strokeStyle = \"#0F0\";\r\n\tctx.beginPath();\r\n\tctx.moveTo(x, y);\r\n\tctx.lineTo(x + 10, y);\r\n\tctx.stroke();\r\n}\r\n\r\nclass DamageNumberRenderer {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis._url = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.style = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.skin = null;\r\n\r\n\t\t/** @type {DamageNumberTextures[]} - this.textures[is_first_num ? 1:0][num] */\r\n\t\tthis.textures = [];\r\n\r\n\t\t/** @type {number[]} */\r\n\t\tthis.rand_y = [0];\r\n\t\tfor (let i = 1, sign = Math.random() > 0.5 ? -1:1; i < DamageNumberRenderer.max_display_digit; ++i) {\r\n\t\t\tthis.rand_y[i] = Math.random() * DamageNumberRenderer.max_rand_y * sign;\r\n\t\t\tsign *= -1;\r\n\t\t}\r\n\r\n\t\t///** @type {Promise<void>} */\r\n\t\t//this._$promise = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {DamageNumberRenderer} other\r\n\t */\r\n\t_copy(other) {\r\n\t\tthis._url = other._url;\r\n\t\tthis.skin = other.skin;\r\n\t\tthis.style = other.style;\r\n\t\tthis.textures = other.textures;\r\n\r\n\t\t//loading\r\n\t\tif (this._$promise) {\r\n\t\t\tthis._$promise = other._$promise;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @returns {Promise<DamageNumberRenderer>}\r\n\t */\r\n\tasync _load(skin, style) {\r\n\t\tlet tasks = [];\r\n\t\tlet url;\r\n\r\n\t\tif (skin == \"default\") {\r\n\t\t\turl = this._default_base_path + style;\r\n\t\t}\r\n\t\telse {\r\n\t\t\turl = this._skin_base_path + [skin, style].join(\"/\");\r\n\t\t}\r\n\r\n\t\tif (!loaded_skin[skin]) {\r\n\t\t\tloaded_skin[skin] = {};\r\n\t\t}\r\n\t\tloaded_skin[skin][style] = this;\r\n\r\n\t\tthis._url = url;\r\n\t\tthis.skin = skin;\r\n\t\tthis.style = style;\r\n\r\n\t\tfor (let i = 0; i <= 1; ++i) {\r\n\t\t\tconst sPath = url + i;\r\n\t\t\t\r\n\t\t\tthis.textures[i] = new DamageNumberTextures();\r\n\r\n\t\t\ttasks[i] = this.textures[i]._load(sPath);\r\n\t\t}\r\n\r\n\t\tawait Promise.all(tasks);\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @returns {Promise<DamageNumberRenderer>}\r\n\t */\r\n\tasync load(skin, style) {\r\n\t\tlet loaded;\r\n\r\n\t\tif (loaded_skin[skin]) {\r\n\t\t\tloaded = loaded_skin[skin][style];\r\n\t\t}\r\n\r\n\t\tif (loaded) {\r\n\t\t\tthis._copy(skin, loaded);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._$promise = this._load(skin, style);\r\n\r\n\t\t\tawait this._$promise;\r\n\r\n\t\t\tdelete this._$promise;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} damage\r\n\t * @param {boolean} critical\r\n\t * @param {number} cx\r\n\t * @param {number} cy\r\n\t */\r\n\tdraw(renderer, damage, critical, cx, cy) {\r\n\t\tlet str_damage = damage.toFixed(0);\r\n\r\n\t\t/** @type {Sprite} */\r\n\t\tlet texture;\r\n\t\tlet text_width = 0;\r\n\r\n\t\t{\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\ttext_width += -texture.x;\r\n\t\t\ttext_width += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length - 1; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\ttext_width += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tlet x = cx - text_width / 2;\r\n\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\ttexture.draw2(x, cy);\r\n\t\t\tx += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\ttexture.draw2(x, cy + this.rand_y[i]);\r\n\r\n\t\t\t\tx += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._display_axis) {\r\n\t\t\tconst ctx = renderer.ctx;\r\n\t\t\tlet x = cx - text_width / 2;\r\n\r\n\t\t\ttexture = this.textures[1][str_damage[0]];\r\n\t\t\tdraw_axis(ctx, x, cy);\r\n\t\t\tx += font_adv(texture);\r\n\r\n\t\t\tfor (let i = 1; i < str_damage.length; ++i) {\r\n\t\t\t\ttexture = this.textures[0][str_damage[i]];\r\n\r\n\t\t\t\tdraw_axis(ctx, x, cy + this.rand_y[i]);\r\n\r\n\t\t\t\tx += font_adv(texture);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget _default_base_path() {\r\n\t\treturn \"/Effect/BasicEff\";\r\n\t}\r\n\tget _skin_base_path() {\r\n\t\treturn \"/Effect/BasicEff/damageSkin/\";\r\n\t}\r\n}\r\nDamageNumberRenderer.loaded_skin = loaded_skin;\r\nDamageNumberRenderer.max_display_digit = Math.trunc(Math.log10(Number.MAX_SAFE_INTEGER) + 1);\r\nDamageNumberRenderer.max_rand_y = 5;\r\n\r\n\r\nexport class DamageNumber extends LayerObject {\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @param {DamagePair} damagePair\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t */\r\n\tconstructor(skin, style, damagePair, x, y, delay) {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\tthis.vy = DamageNumber.move_y / DamageNumber.time_tt;\r\n\r\n\t\tthis.delay = delay;\r\n\t\tthis.time = 0;\r\n\t\tthis.state = 0;\r\n\r\n\t\tthis.damagePair = damagePair;\r\n\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tthis.renderer;\r\n\r\n\t\tthis._load(skin, style);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t * @param {number} recursive\r\n\t */\r\n\t_load(skin, style, recursive) {\r\n\t\t/** @type {DamageNumberRenderer} */\r\n\t\tlet loaded;\r\n\t\t\r\n\t\tif (loaded_skin[skin]) {\r\n\t\t\tloaded = loaded_skin[skin][style];\r\n\t\t}\r\n\r\n\t\tif (loaded) {\r\n\t\t\tthis.renderer = loaded;\r\n\r\n\t\t\tthis._$promise = this.renderer._$promise;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderer = new DamageNumberRenderer();\r\n\t\t\tthis._$promise = this.renderer.load(skin, style);\r\n\t\t}\r\n\t\tif (this._$promise) {\r\n\t\t\tthis.render = this.$noRender;\r\n\r\n\t\t\tthis._$promise\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tdelete this.render;\r\n\t\t\t\t\tdelete this._$promise;\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\tdelete this._$promise;\r\n\t\t\t\t\tconsole.error(`Can't load damageSkin[${skin}][${style}]`);\r\n\r\n\t\t\t\t\tif (recursive) {\r\n\t\t\t\t\t\tthrow Error();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.log(`try load damageSkin[\"default\"][${style}]`);\r\n\t\t\t\t\t\tthis._load(\"default\", style, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t$noRender() {\r\n\t\t// nothing\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.state = 2;\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\treturn this.state >= 1 && this.time > 1000;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.time += stamp;\r\n\r\n\t\tif (this.delay && this.time >= this.delay) {\r\n\t\t\tthis.time = 0;\r\n\t\t\tthis.delay = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.y += this.vy * stamp;\r\n\r\n\t\t\tif (this.state == 0) {\r\n\t\t\t\tthis.vy = this.vy * DamageNumber.move_avy;\r\n\r\n\t\t\t\tif (this.time > DamageNumber.time_d1) {\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.state = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.state == 1) {\r\n\t\t\t\tthis.vy = this.vy * DamageNumber.move_avy2;\r\n\r\n\t\t\t\tif (this.time < DamageNumber.time_d2) {\r\n\t\t\t\t\tthis.opacity = 1 - (this.time / DamageNumber.time_d2);\r\n\t\t\t\t\t//this.opacity = Math.clamp(this.opacity, 0, 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.opacity = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {RenderingOption} option\r\n\t */\r\n\trender(renderer, option) {\r\n\t\trenderer.globalAlpha = this.opacity * opt.opacity;\r\n\t\tthis.renderer.draw(renderer, this.damagePair.realDamage, this.damagePair.critical, this.x, this.y);\r\n\t}\r\n}\r\nDamageNumber.time_d1 = 1000;\r\nDamageNumber.time_d2 = 1000;\r\nDamageNumber.time_tt = DamageNumber.time_d1 + DamageNumber.time_d2;\r\nDamageNumber.move_y = -300;\r\nDamageNumber.move_avy = 1.001;\r\nDamageNumber.move_avy2 = 0.99;\r\n\r\nexport class DamageNumberTest extends DamageNumber {\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t}\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n}\r\n\r\nexport class DamageNumberLayer extends Layer {\r\n\t//constructor() {\r\n\t//\tsuper();\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {number} critical\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t */\r\n\t_addTest(realDamage = 9876543210, critical = false, x = 0, y = 0, delay = 0, skin = null, style = \"NoRed\") {\r\n\t\tthis.objects.push(new DamageNumber(skin, style, new DamagePair(realDamage, critical), x, y, delay));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} realDamage\r\n\t * @param {number} critical\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t * @param {string} skin\r\n\t * @param {string} style\r\n\t */\r\n\t_addTest2(realDamage = 9876543210, critical = false, x = 0, y = 0, delay = 0, skin = null, style = \"NoRed\") {\r\n\t\tthis.objects.push(new DamageNumberTest(skin, style, new DamagePair(realDamage, critical), x, y, delay));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {AttackInfo} attackInfo\r\n\t */\r\n\t_addAttack(skin, style, attackInfo) {\r\n\t\tattackInfo.allAttack.forEach(attack => {\r\n\t\t\tlet target = attack.getTargetObject();\r\n\t\t\tif (target) {\r\n\t\t\t\tconst pos = target.$physics.getPosition();\r\n\t\t\t\tlet x, y;\r\n\r\n\t\t\t\tx = pos.x * $gv.CANVAS_SCALE;\r\n\t\t\t\ty = pos.y * $gv.CANVAS_SCALE - 70;\r\n\r\n\t\t\t\tattack.allDamage.forEach(damage => {\r\n\t\t\t\t\tthis.addDamagePair(skin, style, damage, x, y);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @template K\r\n\t * @param {string} skin\r\n\t * @param {K extends keyof loaded_skin[skin] ? K:never} style\r\n\t * @param {DamagePair} damagePair\r\n\t * @param {number} x - center_x\r\n\t * @param {number} y - bottom_y\r\n\t * @param {number} delay\r\n\t */\r\n\taddDamagePair(skin, style, damagePair, x, y, delay = 0) {\r\n\t\tthis.objects.push(new DamageNumber(skin, style, damagePair, x, y, delay));\r\n\t}\r\n}\r\n\r\n\r\nexport const damageNumberLayer = new DamageNumberLayer();\r\n\r\nwindow.$damageNumberLayer = damageNumberLayer;\r\nwindow.$DamageNumber = DamageNumber\r\nwindow.$DamageNumberTest = DamageNumberTest;\r\nwindow.$DamageNumberRenderer = DamageNumberRenderer;\r\n//DamageNumberRenderer.prototype._display_axis = true;\r\n\r\n","\r\nimport { Randomizer } from \"../math.js\";\r\n\r\nimport { Animation } from \"../Animation.js\";\r\nimport { SceneObject } from \"../SceneObject.js\";\r\n\r\nimport { MobSkillBallDefinition, MobSkillBallBase, MobSkillBase } from \"./MobSkillBase.js\";\r\n\r\nclass FlowerTrapBallDefinition extends MobSkillBallDefinition {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.size = 0;// 1~3\r\n\t}\r\n}\r\n\r\nexport class FlowerTrapBall extends MobSkillBallBase {\r\n\t/**\r\n\t * @param {FlowerTrapBallDefinition} ballDef\r\n\t */\r\n\tconstructor(ballDef, animations) {\r\n\t\tsuper(ballDef, animations);\r\n\t\t\r\n\t\tthis.renderer = animations[ballDef.size].clone();\r\n\t}\r\n\t\r\n\t/** @param {PWorld} pWorld */\r\n\tcreate(pWorld) {\r\n\t\tthis.$physics = {// make dummy for debug\r\n\t\t\tstate: {}\r\n\t\t};\r\n\t\t\r\n\t\tsuper.create(pWorld);//complete create\r\n\t}\r\n\t\r\n\tget _BallDefinition() {\r\n\t\treturn FlowerTrapBallDefinition;\r\n\t}\r\n}\r\n\r\nexport class FlowerTrap extends MobSkillBase {\r\n\tconstructor(_raw, _url) {\r\n\t\tsuper(_raw, _url);\r\n\t\tthis.patterns = {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} pattern - 0~2 int\r\n\t * @param {number} x - int\r\n\t * @param {number} y - int\r\n\t * @param {boolean} flip - not sure\r\n\t */\r\n\t_invoke(pattern, x, y, flip) {\r\n\t\tconst pats = this._raw[\"pattern\" + pattern];\r\n\t\tfor (let i = 0; i in pats; ++i) {\r\n\t\t\tconst pat = pats[i];\r\n\t\t\tlet mx, my, angle;\r\n\t\t\t\r\n\t\t\tmx = x + (flip ? (-pat.pos.x) : (pat.pos.x));\r\n\t\t\tmy = y + pat.pos.y;\r\n\t\t\tangle = pat.angle - 90;//texture is vertical, angle - 90deg\r\n\t\t\t\r\n\t\t\tlet ball = new FlowerTrapBall({\r\n\t\t\t\tx: mx, y: my, angle: angle,\r\n\t\t\t\tsize: pat.size,\r\n\t\t\t\tcreateDelay: pat.createDelay,\r\n\t\t\t\tcollisionDelay: pat.collisionDelay,\r\n\t\t\t\tduration: pat.duration\r\n\t\t\t}, this.animations);\r\n\t\t\t\r\n\t\t\t$gv.SceneObjectMgr.addToScene(10, ball);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @returns {void} */\r\n\tinvoke() {\r\n\t\tthis._invoke(Randomizer.nextInt(3), 1000, 48, Randomizer.nextBoolean());\r\n\t}\r\n\t\r\n\t/** @returns {string[]} */\r\n\tget _anima_name_list() {\r\n\t\treturn [\"XL\", \"L\", \"M\", \"S\"];\r\n\t}\r\n\t\r\n\t/** @returns {string} */\r\n\tget _base_path() {\r\n\t\treturn \"/Skill/MobSkill/238/level\";\r\n\t}\r\n}\r\n\r\n","﻿\r\nimport { CharacterStat, $RemotePlayerData, $PlayerData } from \"../../Common/PlayerData\";\r\n\r\nexport class $RequestPacket_SelectChara {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.charaId = undefined;\r\n\t}\r\n}\r\nexport class $ResponsePacket_SelectChara {\r\n\tconstructor() {\r\n\t\t/** @type {$PlayerData} */\r\n\t\tthis.charaData = null;\r\n\r\n\t\t/** @type {$RemotePlayerData[]} */\r\n\t\tthis.remoteCharacters = null;\r\n\t}\r\n}\r\n","﻿\r\n\r\nexport class $Packet_CharacterChat {\r\n\tconstructor() {\r\n\t\t/** @type {number} - chat type */\r\n\t\tthis.type = null;\r\n\r\n\t\t/** @type {number} - ChatBalloon style */\r\n\t\tthis.$style = null;\r\n\r\n\t\t/** @type {string} - chat text */\r\n\t\tthis.text = null;\r\n\t}\r\n}\r\n","﻿\r\nimport { CharacterMoveElem } from \"../../Client/PMovePath\";\r\n\r\n/**\r\n * @type {{[x:string]:string}[]}\r\n */\r\nconst keyboard_map = [{\r\n\tArrowUp: \"up\",\r\n\tArrowLeft: \"left\",\r\n\tArrowDown: \"down\",\r\n\tArrowRight: \"right\",\r\n\tz: \"jump\",\r\n\tx: \"skill_1\",\r\n\tc: \"skill_2\",\r\n\tv: \"skill_3\",\r\n},\r\n{\r\n\tw: \"up\",\r\n\ta: \"left\",\r\n\ts: \"down\",\r\n\td: \"right\",\r\n\tq: \"jump\",\r\n\tx: \"skill_1\",\r\n\tc: \"skill_2\",\r\n\tv: \"skill_3\",\r\n}];\r\n\r\nexport class $Packet_CharacterMove {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.id = undefined;\r\n\r\n\t\t/** @type {CharacterMoveElem[]} */\r\n\t\tthis.path = [];\r\n\r\n\t\t/** @type {number} - time stamp */\r\n\t\tthis.stamp = (new Date().getTime());\r\n\t}\r\n\tcapture(chara) {\r\n\t\tconst phy = chara.$physics;\r\n\t\tconst body = phy.body;\r\n\t\tlet elem = new CharacterMoveElem();\r\n\r\n\t\t{\r\n\t\t\tconst crr = chara.renderer;\r\n\r\n\t\t\telem.action = crr.action;\r\n\t\t\t//elem.action_frame = crr.action_frame;\r\n\t\t\telem.emotion = crr.emotion;\r\n\t\t\t//elem.emotion_frame = crr.emotion_frame;\r\n\t\t}\r\n\r\n\t\telem.isAwake = body.IsAwake();\r\n\t\tif (elem.isAwake) {\r\n\r\n\t\t\tlet pos = phy.getPosition();\r\n\t\t\tlet vel = body.GetLinearVelocity();\r\n\r\n\t\t\telem.x = pos.x;\r\n\t\t\telem.y = pos.y;\r\n\t\t\telem.vx = vel.x;\r\n\t\t\telem.vy = vel.y;\r\n\t\t\t//elem.fx = force.x;\r\n\t\t\t//elem.fy = force.y;\r\n\r\n\t\t\telem.pState = phy.state;\r\n\r\n\t\t\telem.elapsed = (new Date().getTime()) - this.stamp;\r\n\t\t}\r\n\r\n\t\tthis.path.push(elem);\r\n\t}\r\n}\r\n\r\nclass $CharacterMoveItemElem {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.from = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.to = null;\r\n\r\n\t\t/** @type {string} - equip id */\r\n\t\tthis.item = null;\r\n\t}\r\n}\r\nclass $Packet_CharacterMoveItem {\r\n\tconstructor() {\r\n\t\t/** @type {$CharacterMoveItemElem} */\r\n\t\tthis.elem = [];\r\n\t}\r\n}\r\n\r\nclass $Packet_CharacterSkill {\r\n\tconstructor() {\r\n\t\t/** @type {string} */\r\n\t\tthis.skillId = null;\r\n\t}\r\n}\r\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-draggable.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-draggable {\\n\\tposition: absolute;\\n\\tdisplay: inline-block;\\n\\tuser-select: none;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-dialog.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-dialog {\\n\\tborder-radius: 4px;\\n}\\n.ui-dialog > * {\\n\\t/*padding: 0.5em 1em;*/\\n\\t/*display: inline-block;*/\\n\\t/*width: 100%;*/\\n}\\n.ui-dialog > .header {\\n\\t/*cursor: default;*/\\n\\tpadding: 0.25em 0.5em;\\n\\tuser-select: none;\\n\\tbackground: #e9e9e9;\\n\\tborder: 1px solid #dddddd;\\n\\t/*border-top-left-radius: 4px;*/\\n\\t/*border-top-right-radius: 4px;*/\\n\\ttext-align: left;\\n\\tbox-sizing: border-box;\\n}\\n.ui-dialog > .header .header-buttons {\\n\\tdisplay: inline;\\n\\tright: 0.5em;\\n\\tmargin-right: 1px;\\n\\tposition: absolute;\\n}\\n.ui-dialog > .header .header-buttons > * {\\n\\tpadding: 0;\\n\\tborder: none;\\n\\tbackground: transparent;\\n}\\n.ui-dialog > .header .header-buttons > .header-button {\\n}\\n.ui-dialog > .header .header-buttons > .header-button:hover {\\n\\tbackground: lightgray;\\n}\\n.ui-dialog > .header .header-buttons > .header-button:active {\\n\\tbackground: lightblue;\\n}\\n.ui-dialog > .content {\\n\\tposition: relative;\\n\\tbackground: white;\\n\\tborder-left: 1px solid #dddddd;\\n\\tborder-right: 1px solid #dddddd;\\n\\tmin-width: 16em;\\n\\tmin-height: 10em;\\n\\t/*width: auto;*/\\n\\t/*height: auto;*/\\n\\toverflow: auto;\\n\\tbox-sizing: border-box;\\n}\\n.ui-dialog > .footer {\\n\\tpadding: 0.1em 0.25em;\\n\\tuser-select: none;\\n\\tbackground: #e9e9e9;\\n\\tborder: 1px solid #dddddd;\\n\\t/*border-bottom-left-radius: 4px;*/\\n\\t/*border-bottom-right-radius: 4px;*/\\n\\tbox-sizing: border-box;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-sortable.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-trigger.vue?vue&type=style&index=0&id=550d0e17&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\ndiv[data-v-550d0e17] {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n}\\n.active[data-v-550d0e17] {\\n\\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\\n\\tbackground-color: #ffec64;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-menu.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.menu-frame {\\n\\tuser-select: none;\\n\\tposition: absolute;\\n\\toverflow: hidden;\\n}\\n.menu {\\n\\tlist-style: none;\\n\\tmargin: 0;\\n\\tpadding: 0em 0em;\\n\\tbackground: #f0f9ff;\\n\\tborder: 1px solid darkgray;\\n\\tbox-shadow: 0.2em 0.2em 0.2em darkgray;\\n}\\n.menu > *:not(hr) {\\n\\tdisplay: block;\\n\\tpadding: 0.25em 1em 0.25em 1em;\\n\\tbackground: #f0f9ff;\\n\\tcursor: pointer;\\n}\\n.menu > *.disable {\\n\\tcursor: not-allowed;\\n\\tcolor: darkgray;\\n}\\n.menu > *:not(.disable):not(hr):hover {\\n\\tbackground: linear-gradient(to bottom, #4096ee 0%,#4096ee 100%);\\n\\tbox-shadow: inset 0 0 1px #1e69de;\\n}\\n.menu > *:not(.disable):not(hr):active {\\n\\tbackground: linear-gradient(to bottom, #6db3f2 0%,#54a3ee 50%,#3690f0 51%,#1e69de 100%);\\n\\tbox-shadow: inset 0 0 1px #1e69de;\\n}\\n.menu > hr {\\n\\tmargin: 0.2em 0;\\n}\\n.menu-enter-active {\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n\\twhite-space: nowrap;\\n\\twidth: 100%;\\n\\theight: 5em;\\n\\ttransition: .3s;\\n}\\n.menu-enter {\\n\\topacity: 0;\\n\\theight: 0;\\n\\twidth: 0;\\n}\\n.menu-leave-active {\\n\\ttransition: .4s;\\n}\\n.menu-leave-to {\\n\\topacity: 0;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-button-group.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-button-group input[type=\\\"radio\\\"] {\\n\\tdisplay: none;\\n}\\n.ui-button-group {\\n\\tdisplay: flex;\\n}\\n.ui-button-group button {\\n\\tflex: 1;\\n\\tpadding: 0;\\n\\toutline: none;\\n}\\n/*.ui-button-group button > * {\\n\\twidth: 100%;\\n\\theight: 100%;\\n}*/\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-equip-box.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-equip-box .header {\\n\\ttext-align: left;\\n}\\n.ui-equip-box .header.btn-group, .ui-equip-box .header .pagination {\\n\\ttext-align: center;\\n}\\n.ui-equip-box .pagination {\\n\\theight: 2em;\\n\\toverflow: auto;\\n\\tfont-size: initial;\\n}\\n.ui-equip-box .item-list {\\n\\tlist-style: none;\\n\\tmargin: auto;\\n\\tpadding: 1px;\\n}\\n.ui-equip-box .item-list-sm {\\n\\tmargin: auto;\\n\\tpadding: 1px;\\n\\tline-height: 0;\\n\\ttext-align: center;\\n}\\n.ui-equip-box .item-detail {\\n\\twidth: 100%;\\n\\tborder-spacing: 1px;\\n}\\n.ui-equip-box .list-item, .ui-equip-box .list-item-sm {\\n\\tborder: 1px solid black;\\n\\tborder-bottom: none;\\n\\tbackground: linear-gradient(to bottom, rgba(240,249,255,0.9) 0%,rgba(203,235,255,0.9) 30%,rgba(201,234,255,0.9) 50%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 70%,rgba(203,235,255,0.9) 75%,rgba(240,249,255,0.9) 100%);\\n}\\n.ui-equip-box .list-item-sm {\\n\\tdisplay: inline-block;\\n\\tborder: none;\\n\\toutline: 1px solid black;\\n\\tbox-shadow: inset 1px 1px 0 lightblue;\\n}\\n.ui-equip-box .list-item:target, .ui-equip-box .list-item-sm:target {\\n\\tbox-shadow: inset 0 0 0 1px red;\\n\\toutline: 1px solid red;\\n\\tposition: relative;\\n}\\n.ui-equip-box .list-item:last-child {\\n\\tborder-bottom: 1px solid black;\\n}\\n.ui-equip-box .list-item:hover, .ui-equip-box .list-item-sm:hover {\\n\\tbackground: aliceblue;\\n}\\n.ui-equip-box .list-item:active, .ui-equip-box .list-item-sm:active {\\n\\tbackground: lightgray;\\n}\\n.ui-equip-box .item-name {\\n\\tuser-select: text;\\n\\twidth: 12em;\\n\\twhite-space: nowrap;\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n}\\n.ui-equip-box .list-item:target .item-name {\\n\\tcolor: red;\\n\\tfont-weight: bold;\\n}\\n.ui-equip-box .item-id {\\n\\tuser-select: text;\\n}\\n.ui-equip-box .item-icon-outer-frame {\\n\\tposition: relative;\\n\\twidth: 48px;\\n\\theight: 48px;\\n\\tuser-select: none;\\n}\\n.ui-equip-box .item-icon-frame > img, .ui-equip-box .item-icon-frame-sm > img {\\n\\tmax-width: 48px;\\n\\tmax-height: 48px;\\n\\tdisplay: block;\\n\\tmargin: auto;\\n}\\n.ui-equip-box .filters button:hover {\\n\\tborder: 1px solid blue;\\n\\tborder-radius: 3px;\\n\\tbackground: rgba(240, 249, 255, 0.9);\\n}\\n.ui-equip-box .filters button:hover, .face_color button:hover, .hair_color button:hover {\\n\\tfilter: contrast(150%) brightness(110%);\\n}\\n.ui-equip-box .filters button.active {\\n\\tborder-radius: 3px;\\n\\tbackground-color: hsl(203, 0%, 70%);\\n}\\n.ui-equip-box .filters button.active img {\\n\\tfilter: grayscale(100%) brightness(90%) contrast(150%);\\n}\\n.ui-equip-box .filters button.active:hover {\\n\\tborder: 1px solid blue;\\n\\tbackground: rgba(240, 249, 255, 0.9);\\n}\\n.ui-equip-box .filters button.active:hover {\\n\\tfilter: contrast(150%) grayscale(100%) brightness(110%);\\n}\\n.ui-equip-box .face_color, hair_color {\\n\\tborder: 1px solid transparent;\\n\\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\\n}\\n.ui-equip-box .face_color button.active, .hair_color button.active {\\n\\tborder: 1px solid white;\\n\\tbox-shadow: 0 0 0.5em 0 blue, 0 0 1em 0 yellow;\\n\\tcolor: white;\\n\\ttext-shadow: 0 0 0.1em black, 0 0 0.5em black;\\n\\tz-index: 1;\\n}\\n.ui-equip-box .button-area > * {\\n\\tpadding-top: 1px;\\n}\\n.ui-equip-box .button-area {\\n\\tuser-select: none;\\n}\\n.ui-equip-box .button-area button {\\n\\ttext-align: center;\\n\\tcursor: pointer;\\n\\tborder: 1px solid transparent;\\n\\ttext-shadow: 0 0 5px white, 0 0 10px white, 0 0 1px black;\\n\\tfont-family: 微軟正黑體;\\n\\tfont-weight: bold;\\n\\tfont-size: 1em;\\n}\\n.ui-equip-box .button-area button > img {\\n\\tdisplay: block;\\n\\tmargin: auto;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=style&index=0&id=370f889e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character.vue?vue&type=style&index=0&id=370f889e&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\ndiv.frame[data-v-370f889e] {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\twidth: 64px;\\n\\theight: 96px;\\n\\n\\tuser-select: none;\\n\\tbackground-position: 0px 0px, 10px 10px;\\n\\tbackground-size: 20px 20px;\\n\\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\\n}\\ndiv.center[data-v-370f889e] {\\n\\tposition: absolute;\\n\\tleft: 32px;\\n\\ttop: 96px;\\n}\\nimg[data-v-370f889e] {\\n\\tposition: absolute;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-svg.vue?vue&type=style&index=0&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-character-frame {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\twidth: 64px;\\n\\theight: 96px;\\n\\n\\tuser-select: none;\\n\\tbackground-position: 0px 0px, 10px 10px;\\n\\tbackground-size: 20px 20px;\\n\\tbackground-image: linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee 100%),linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\\n}\\n.ui-character-center {\\n\\tposition: absolute;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tbackground: rgba(0,0,0,0.2);\\n\\toverflow: hidden;\\n\\ttext-align: center;\\n}\\n.ui-character-text {\\n\\ttext-align: center;\\n\\tposition: absolute;\\n\\ttop: calc(50% - 0.5em);\\n\\tfont-weight: bold;\\n\\tcolor: white;\\n\\ttext-shadow: 0 0 1px black, 0 0 2px black, 0 0 5px black;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=style&index=0&id=10601658&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-character-attribute.vue?vue&type=style&index=0&id=10601658&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.UIEditCharacterAttribute td > *[data-v-10601658] {\\n\\twidth: 100%;\\n}\\n.btn[data-v-10601658] {\\n\\tmargin: auto;\\n\\tpadding: 0;\\n\\tuser-select: none;\\n}\\n.chara_ear[data-v-10601658] {\\n\\twidth: 100%;\\n\\tdisplay: block;\\n}\\n.equip-icon[data-v-10601658] {\\n\\tmargin: auto;\\n\\tmax-width: 32px;\\n\\tmax-height: 32px;\\n\\twidth: auto !important;\\n\\theight: auto !important;\\n}\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=style&index=0&id=ea11de16&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-mob-list.vue?vue&type=style&index=0&id=ea11de16&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ui-life-list[data-v-ea11de16] {\\r\\n\\tpadding: 0 1px;\\n}\\ntable[data-v-ea11de16] {\\r\\n    border-collapse: collapse;\\r\\n    border-spacing: 0;\\n}\\ntr.new-item[data-v-ea11de16] {\\r\\n\\tbackground: lightgray;\\n}\\ntr.item[data-v-ea11de16]:hover {\\r\\n\\tbackground: lightblue;\\r\\n\\toutline: 1px auto rgb(77, 144, 254);\\n}\\n.button[data-v-ea11de16] {\\r\\n\\twidth: 100%;\\n}\\n.input[data-v-ea11de16] {\\r\\n  width: 2.7em;\\n}\\n.input[type=text][data-v-ea11de16] {\\r\\n  width: 4em;\\n}\\n.input[type=number][data-v-ea11de16] {\\r\\n  width: 4em;\\n}\\n.input[type=checkbox][data-v-ea11de16] {\\r\\n  width: 1em;\\n}\\n.input-mobid[type=number][data-v-ea11de16] {\\r\\n  width: 5em;\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ui-map-editor.vue?vue&type=style&index=0&id=6e4fb2d8&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.sticky[data-v-6e4fb2d8] {\\r\\n\\tposition: sticky;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\n}\\n.info[data-v-6e4fb2d8] {\\r\\n\\tbackground: #f5f5f5;\\n}\\n.view[data-v-6e4fb2d8] {\\r\\n\\tdisplay: flex;\\n}\\n.view > div[data-v-6e4fb2d8] {\\r\\n\\tflex: 100;\\n}\\n.imgbox[data-v-6e4fb2d8] {\\r\\n\\tflex: 80;\\n}\\n.table[data-v-6e4fb2d8] {\\r\\n\\tborder-collapse: collapse;\\r\\n\\tborder-spacing: 0;\\n}\\n.input[data-v-6e4fb2d8] {\\r\\n\\twidth: 5em;\\n}\\n.input-xy[data-v-6e4fb2d8] {\\r\\n\\twidth: 8em;\\n}\\n.input-xy > *[data-v-6e4fb2d8] {\\r\\n\\twidth: 4em;\\n}\\n.img[data-v-6e4fb2d8] {\\r\\n\\tmax-width: 25vh;\\r\\n\\tmax-height: 25vh;\\r\\n\\tborder-bottom: 1px solid red;\\r\\n\\tborder-left: 1px solid green;\\n}\\n.text[data-v-6e4fb2d8] {\\r\\n\\tuser-select: text;\\n}\\n.red-text[data-v-6e4fb2d8] {\\r\\n\\tcolor: red;\\n}\\n.tb[data-v-6e4fb2d8], .tb td[data-v-6e4fb2d8] {\\r\\n\\tborder: 1px solid black;\\r\\n\\tborder-collapse: collapse;\\r\\n\\tborder-spacing: 0;\\r\\n\\tuser-select: text;\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&id=1e192451&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&id=1e192451&scoped=true&lang=css&\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.dialog-group[data-v-1e192451] {\\n\\tposition: fixed;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n.ui-dialog .ui-equip-box-dialog.ui-dialog-content[data-v-1e192451] {\\n\\tpadding: 0;\\n\\twidth: 100% !important;\\n}\\n\\n/*li.active {\\n\\tbackground-color: lightcyan;\\n}\\n*/\\n.ui-character-list .active[data-v-1e192451] {\\n\\tbackground: linear-gradient(to bottom, #ffec64 5%, #ffab23 100%);\\n\\tbackground-color: #ffec64;\\n}\\n.ui-character-list[data-v-1e192451] {\\n\\tlist-style: none;\\n\\tpadding: 0;\\n}\\n.ui-character-list > li[data-v-1e192451] {\\n\\twidth: 16em;\\n}\\n.ui-character-list table[data-v-1e192451] {\\n\\twidth: 100%;\\n\\t/*border-collapse: collapse;*/\\n}\\n.ui-character-list td[data-v-1e192451]:nth-child(1) {\\n\\t/*border: 1px solid black;*/\\n\\twidth: 20%;\\n}\\n.ui-character-list td[data-v-1e192451]:nth-child(2) {\\n\\t/*border: 1px solid black;*/\\n\\twidth: 50%;\\n}\\n\\n/*\\n.ui-character-list td:first-child {\\n}\\n*/\\n\\n/*.ui-character-list td:last-child {\\n\\tfloat: right;\\n}*/\\n.chara-ls-btn-group[data-v-1e192451] {\\n\\tdisplay: inline;\\n\\tfloat: right;\\n}\\n.chara-ls-btn[data-v-1e192451] {\\n    display: inline-flex;\\n\\twidth: 20px;\\n\\theight: 20px;\\n\\tpadding: 0;\\n}\\n.chara-ls-btn > *[data-v-1e192451] {\\n\\tmargin: auto;\\n\\tpadding: 0;\\n}\\n.loading[data-v-1e192451] {\\n\\tposition: absolute;\\n\\ttop:0;\\n\\tleft:0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tbackground: rgba(100, 100, 100, 0.5);\\n\\ttext-shadow: 1px 1px 0 white, 0 0 1px white;\\n\\t\\n\\tdisplay:flex;\\n\\talign-items:center;\\n\\tjustify-content:center;\\n}\\n\\n/*\\n\\thttp://www.oxxostudio.tw/articles/201408/sticky-ball.html\\n*/\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}