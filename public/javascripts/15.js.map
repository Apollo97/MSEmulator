{"version":3,"sources":["webpack:///./src/game/Renderer/ChatBalloon.js","webpack:///./src/game/Sprite.js"],"names":["ChatBalloon","[object Object]","this","_raw","style","path","_base_path","join","promise","$get","data","cache","$promise","Object","defineProperty","value","color","clr","toString","nw","_Sprite_js__WEBPACK_IMPORTED_MODULE_1__","n","ne","w","c","e","sw","s","se","arrow","renderer","text","x","y","lines","match","length","ctx","LINE_HEIGHT","height","fillStyle","font","textAlign","textBaseline","min_width","width","_tw","Math","max","apply","map","line","measureText","hw","trunc","tw","th","draw2","_drawPattern","xw","r_adj","arrow_hw","hw_arrow_hw","draw2i","i","cy","fillText","window","$images_ChatBalloon","SpriteBase","_Engine_js__WEBPACK_IMPORTED_MODULE_2__","raw","url","super","__w","__h","_url","isTexture","hasOwnProperty","__isEmpty","console","group","warn","groupEnd","Error","startsWith","z","_order","defaultValue","propertyName","converter","_engine","drawGraph","drawGraph2","Sprite","origin","_get","_math_js__WEBPACK_IMPORTED_MODULE_0__","get","Number","delay","h","isLoaded","save","rect","clip","left","right","bottom","j","ex","error","restore","sh","top","sx","_drawImage","sy","drawPattern","drawHorizontalPattern","drawVerticalPattern","_drawHorizontalPattern","_drawVerticalPattern"],"mappings":"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","file":"15.js","sourcesContent":["ï»¿\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\n\r\n\r\nexport class ChatBalloon {\r\n\tconstructor() {\r\n\t\tthis._raw = null;\r\n\t\tthis.style = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {any} style\r\n\t */\r\n\tasync load(style) {\r\n\t\tconst path = [this._base_path, style].join(\"/\");\r\n\r\n\t\tthis.style = style;\r\n\t\t\r\n\t\tlet promise = $get.data(path);\r\n\t\tChatBalloon.cache[style] = this;\r\n\t\tthis.$promise = promise;\r\n\t\t\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: await promise,\r\n\t\t});\r\n\r\n\t\tthis.color = (this._raw.clr == -1 || !this._raw.clr) ? (\"white\") : (\"#\" + (this._raw.clr >>> 0).toString(16));\r\n\r\n\t\tthis.nw = new Sprite(this._raw.nw);\r\n\t\t//this.nw._url = path + \"/nw\";\r\n\r\n\t\tthis.n = new Sprite(this._raw.n);\r\n\t\t//this.n._url = path + \"/n\";\r\n\r\n\t\tthis.ne = new Sprite(this._raw.ne);\r\n\t\t//this.ne._url = path + \"/ne\";\r\n\r\n\t\tthis.w = new Sprite(this._raw.w);\r\n\t\t//this.w._url = path + \"/w\";\r\n\r\n\t\tthis.c = new Sprite(this._raw.c);\r\n\t\t//this.c._url = path + \"/c\";\r\n\r\n\t\tthis.e = new Sprite(this._raw.e);\r\n\t\t//this.e._url = path + \"/e\";\r\n\r\n\t\tthis.sw = new Sprite(this._raw.sw);\r\n\t\t//this.sw._url = path + \"/sw\";\r\n\r\n\t\tthis.s = new Sprite(this._raw.s);\r\n\t\t//this.s._url = path + \"/s\";\r\n\r\n\t\tthis.se = new Sprite(this._raw.se);\r\n\t\t//this.se._url = path + \"/se\";\r\n\r\n\t\tthis.arrow = new Sprite(this._raw.arrow);\r\n\t\t//this.arrow._url = path + \"/arrow\";\r\n\r\n\t\t//this._pat_c = ctx.createPattern(this.c, \"repeat\");\r\n\t\t\r\n\t\tdelete this.$promise;\r\n\t}\r\n\r\n\t/*\r\n\t1 12345 12345 1 : 5\r\n\t2 12345 12345 12345\r\n\t3 12345 12345 12345\r\n\t4 12345 12345 12345\r\n\t5 12345 12345 12345\r\n\t6 xxx12 34512 34\r\n\t */\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} text - length = chat.value.length + \" : \".length + name.length = 70 + 3 + name.length\r\n\t * @param {number} x - chat balloon arrow bottom pos.x\r\n\t * @param {number} y - chat balloon arrow bottom pos.y\r\n\t */\r\n\tdraw(renderer, text, x, y) {\r\n\t\tlet lines = text.match(/(.{1,12})/g);\r\n\t\tif (!lines.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst LINE_HEIGHT = this.c.height;// = fontSize(12) + PADDING_TOP(2)\r\n\t\tconst PADDING_LEFT = 0, PADDING_TOP = 0, PADDING_RIGHT = 0, PADDING_BOTTOM = 0;\r\n\r\n\t\tctx.fillStyle = this.color;\r\n\t\tctx.font = \"12px å¾®è»æ­£é»é«\";//æ°ç´°æé«\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"hanging\";//top\r\n\t\t\r\n\t\tconst min_width = this.n.width * 3;\r\n\t\tlet _tw = Math.max.apply(null, lines.map(line => ctx.measureText(line).width + PADDING_LEFT + PADDING_RIGHT));\r\n\t\tif (_tw < min_width) {\r\n\t\t\t_tw = min_width;\r\n\t\t}\r\n\t\tconst hw = Math.trunc((_tw / 2) / this.n.width) * this.n.width;\r\n\t\tconst tw = hw * 2;\r\n\t\tconst th = lines.length * LINE_HEIGHT + PADDING_TOP + PADDING_BOTTOM;\r\n\t\r\n\t\tx = (x - hw);\r\n\t\ty = (y - th) - this.arrow.height;\r\n\r\n\t\t{//top\r\n\t\t\tthis.nw.draw2(x, y);\r\n\t\t\tthis.n._drawPattern(x, y, tw, this.n.height);\r\n\t\t\tthis.ne.draw2(x + tw, y);\r\n\t\t}\r\n\t\t{//center\r\n\t\t\tconst xw = this.w.width - this.w.x;\r\n\r\n\t\t\tthis.w._drawPattern(x + xw, y, this.w.width, th);\r\n\t\t\tthis.c._drawPattern(x + xw, y, tw, th);\r\n\t\t\tthis.e._drawPattern(x + xw + tw, y, this.e.width, th);\r\n\t\t}\r\n\t\t{//bottom\r\n\t\t\tconst r_adj = this.arrow.width & 1;\r\n\t\t\tconst arrow_hw = Math.trunc(this.arrow.width / 2);\r\n\t\t\tconst hw_arrow_hw = hw - arrow_hw;\r\n\t\t\r\n\t\t\tthis.sw.draw2(x, y + th);\r\n\t\t\tthis.s._drawPattern(x, y + th, hw_arrow_hw, this.s.height);//clip\r\n\t\t\tthis.s._drawPattern(x + hw + arrow_hw + r_adj, y + th, hw_arrow_hw - r_adj, this.s.height);//clip\r\n\t\t\tthis.se.draw2(x + tw, y + th);\r\n\r\n\t\t\tthis.arrow.draw2i(x - arrow_hw + hw, y + th);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0, cy = y; i < lines.length; ++i, cy += LINE_HEIGHT) {\r\n\t\t\tlet line = lines[i];\r\n\r\n\t\t\t//if (this.constructor.DEBUG) {\r\n\t\t\t//\tctx.beginPath();\r\n\t\t\t//\tctx.strokeStyle = \"red\";\r\n\t\t\t//\tctx.strokeRect(x + PADDING_LEFT, cy + PADDING_TOP, tw, LINE_HEIGHT);\r\n\t\t\t//}\r\n\t\t\t//ctx.fillStyle = \"black\";\r\n\r\n\t\t\tctx.fillText(line, x + hw + PADDING_LEFT, cy + PADDING_TOP);\r\n\t\t}\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn \"/UI/ChatBalloon\";\r\n\t}\r\n\r\n\t//static get DEBUG() {\r\n\t//\treturn false;\r\n\t//}\r\n}\r\n\r\n/** @type {{[style:number]:ChatBalloon}} */\r\nChatBalloon.cache = window.$images_ChatBalloon || {};\r\n\r\nwindow.$images_ChatBalloon = ChatBalloon.cache;\r\n\r\nif (module.hot) {\r\n\tObject.values(ChatBalloon.cache).forEach(a => {\r\n\t\ta.__proto__ = ChatBalloon.prototype;\r\n\t\t//a.load(a.style);\r\n\t});\r\n\tmodule.hot.accept();\r\n}\r\n","ï»¿\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGrpah, IRenderer, IGraph } from \"./IRenderer.js\";\r\n\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\n\r\n/**\r\n * @extends {IGraph}\r\n */\r\nexport class SpriteBase extends Graph {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tif (raw) {\r\n\t\t\tsuper(url, {\r\n\t\t\t\twidth: raw.__w,\r\n\t\t\t\theight: raw.__h,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\t//this.src is broken;\r\n\r\n\t\tif (url) {\r\n\t\t\tdebugger\r\n\t\t\tthis._url = url;\r\n\t\t\t//this._loadTexture(url);//_loadTexture: undefined\r\n\t\t}\r\n\t\telse if (SpriteBase.isTexture(raw) !== false) {\r\n\t\t\tthis._url = raw[\"\"];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isTexture(raw) {\r\n\t\tif (raw) {\r\n\t\t\tif (raw.hasOwnProperty(\"\")) {\r\n\t\t\t\tif (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!raw.__isEmpty) {\r\n\t\t\t\t\tconsole.group(\"no texture\");\r\n\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\tthrow new Error(\"no texture\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic isTextureHasData(raw) {\r\n\t\treturn raw && typeof raw[\"\"] == 'string' && raw[\"\"].startsWith(\"data:image/\");\r\n\t}\r\n\r\n\tset z(value) {\r\n\t\tthis._order = value;\r\n\t}\r\n\tget z() {\r\n\t\treturn this._order;\r\n\t}\r\n\t\r\n\t/**\r\n\t * try construct value from raw data\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (!this._raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\telse if (propertyName in this._raw) {\r\n\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis._engine.drawGraph(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthis._engine.drawGraph2(this, x - this.x, y - this.y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t */\r\n\tdraw2i(x, y) {\r\n\t\tthis._engine.drawGraph2(this, Math.trunc(x - this.x + 0.5), Math.trunc(y - this.y + 0.5));\r\n\t}\r\n}\r\n\r\n\r\nexport class Sprite extends SpriteBase {\r\n\t/**\r\n\t * sprite = new Sprite(rawData);//ä¸æè¼å¥image\r\n\t * sprite._url = img_url;//ä¸æè¼å¥image\r\n\t *\r\n\t * æè§¸ç¼è¼å¥imageçmethod\r\n\t * draw(), isLoaded(), get width(), get height()\r\n\t * \r\n\t * æåè¼å¥image: __loadTexture()\r\n\t * \r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tvar origin = this._get(new Vec2(0, 0), \"origin\", Vec2.get);\r\n\t\tthis.x = origin.x;\r\n\t\tthis.y = origin.y;\r\n\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\tthis.delay = this._get(100, \"delay\", Number);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tctx.rect(x, y, w, h);\r\n\t\t\tctx.clip();\r\n\r\n\t\t\tlet left = x;\r\n\t\t\tlet top = y;\r\n\t\t\tlet right = x + w;\r\n\t\t\tlet bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\tdrawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst left = x;\r\n\t\t\tconst right = x + w;\r\n\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\tdrawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst top = y;\r\n\t\t\tconst bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tthis.draw2(x, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\t_drawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t\r\n\t\tconst sw = Math.trunc(w / this.width) * this.width;\r\n\t\tconst sh = Math.trunc(h / this.height) * this.height;\r\n\t\t\r\n\t\tconst left = x;\r\n\t\tconst top = y;\r\n\t\tconst right = x + sw;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tlet i, j;\r\n\r\n\t\tif (h >= this.height) {\r\n\t\t\tfor (i = top; i < bottom; i += this.height) {\r\n\t\t\t\tif (w >= this.width) {\r\n\t\t\t\t\tfor (j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet sx = w - sw;\r\n\t\t\t\t\tif (sx > 0) {\r\n\t\t\t\t\t\tthis._engine._drawImage(this, 0, 0, sx, this.height, j - this.x, i - this.y, sx, this.height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._engine._drawImage(this, 0, 0, w, this.height, left - this.x, i - this.y, w, this.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet sy = h - sh;\r\n\t\t\tif (sy > 0) {\r\n\t\t\t\tconsole.error(new Error(\"æªå®æ\"));\r\n\t\t\t\tthis._engine._drawImage(this, 0, 0, this.width, sy, left - this.x, i - this.y, this.width, sy);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new Error(\"æªå®æ\"));\r\n\t\t\tthis._engine._drawImage(this, 0, 0, this.width, h, left - this.x, top - this.y, this.width, h);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\t_drawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst right = x + w;\r\n\r\n\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\tthis.draw2(j, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\t_drawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst top = y;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tthis.draw2(x, i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawPattern4i(x, y, w, h) {\r\n\t\tthis.drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\tdrawHorizontalPattern3i(x, y, w) {\r\n\t\tthis.drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawVerticalPattern3i(x, y, h) {\r\n\t\tthis.drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawPattern4i(x, y, w, h) {\r\n\t\tthis._drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\t_drawHorizontalPattern3i(x, y, w) {\r\n\t\tthis._drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawVerticalPattern3i(x, y, h) {\r\n\t\tthis._drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n}\r\n\r\nexport class _$PatternSprite_Loaded extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._direction = null;\r\n\r\n\t\t/** @type {CanvasPattern} */\r\n\t\tthis._pattern = null;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget direction() {\r\n\t\treturn this._direction;\r\n\t}\r\n\tset direction(value) {\r\n\t\tif (value && this._direction != value) {\r\n\t\t\tthis._direction = value;\r\n\t\r\n\t\t\t//reload;\r\n\t\t\tthis._pattern = null;\r\n\t\t\tthis.__proto__ = $PatternSprite.prototype;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(-this.x, -this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(x - this.x, y - this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"repeat\"} */\r\n\tget e_repeat() {\r\n\t\treturn \"repeat\";\r\n\t}\r\n\t/** @returns {\"repeat-x\"} */\r\n\tget e_repeat_x() {\r\n\t\treturn \"repeat-x\";\r\n\t}\r\n\t/** @returns {\"repeat-y\"} */\r\n\tget e_repeat_y() {\r\n\t\treturn \"repeat-y\";\r\n\t}\r\n\t/** @returns {\"no-repeat\"} */\r\n\tget e_noRepeat() {\r\n\t\treturn \"no-repeat\";\r\n\t}\r\n}\r\n\r\nexport class $PatternSprite extends _$PatternSprite_Loaded {\r\n\tdrawPattern(w, h) {\r\n\t\tthis.drawPattern2(0, 0, w, h);\r\n\t}\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.isLoaded()) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t{\r\n\t\t\t\tctx.rect(x, y, w, h);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tlet left = x;\r\n\t\t\t\tlet top = y;\r\n\t\t\t\tlet right = x + w;\r\n\t\t\t\tlet bottom = y + h;\r\n\r\n\t\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern(w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern2(x, y, w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}