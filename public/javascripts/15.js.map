{"version":3,"sources":["webpack:///./src/game/Renderer/ChatBalloon.js","webpack:///./src/game/Sprite.js"],"names":["ChatBalloon","[object Object]","this","_raw","style","_d_path","constructor","_base_path","join","Object","defineProperty","value","$get","data","nw","_Sprite_js__WEBPACK_IMPORTED_MODULE_1__","n","ne","w","c","e","sw","s","se","arrow","cache","renderer","text","x","y","lines","i","length","line","slice","push","LINE_HEIGHT","height","ctx","font","textAlign","textBaseline","_tw","map","measureText","width","sort","a","b","tw","Math","ceil","hw","th","trunc","draw2","_drawPattern","xw","arrow_hw","hw_arrow_hw","draw2i","cy","fillStyle","fillText","window","$images_ChatBalloon","SpriteBase","_Engine_js__WEBPACK_IMPORTED_MODULE_2__","raw","url","super","__w","__h","_url","isTexture","hasOwnProperty","__isEmpty","console","group","warn","groupEnd","Error","startsWith","z","_order","defaultValue","propertyName","converter","_engine","drawGraph","drawGraph2","Sprite","origin","_get","_math_js__WEBPACK_IMPORTED_MODULE_0__","get","Number","delay","h","isLoaded","save","rect","clip","left","right","bottom","j","ex","error","restore","drawPattern","drawHorizontalPattern","drawVerticalPattern","_drawHorizontalPattern","_drawVerticalPattern"],"mappings":"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","file":"15.js","sourcesContent":["\r\nimport { IRenderer } from '../IRenderer.js';\r\nimport { Sprite } from '../Sprite.js';\r\n\r\n\r\nexport class ChatBalloon {\r\n\tconstructor() {\r\n\t\tthis._raw = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {any} style\r\n\t */\r\n\tasync load(style) {\r\n\t\tconst _d_path = [this.constructor._base_path, style].join(\"/\");\r\n\t\t//const _i_path = _d_path;\r\n\t\t\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: await $get.data(_d_path),\r\n\t\t});\r\n\r\n\t\tthis.nw = new Sprite(this._raw.nw);\r\n\t\t//this.nw._url = _i_path + \"/nw\";\r\n\r\n\t\tthis.n = new Sprite(this._raw.n);\r\n\t\t//this.n._url = _i_path + \"/n\";\r\n\r\n\t\tthis.ne = new Sprite(this._raw.ne);\r\n\t\t//this.ne._url = _i_path + \"/ne\";\r\n\r\n\t\tthis.w = new Sprite(this._raw.w);\r\n\t\t//this.w._url = _i_path + \"/w\";\r\n\r\n\t\tthis.c = new Sprite(this._raw.c);\r\n\t\t//this.c._url = _i_path + \"/c\";\r\n\r\n\t\tthis.e = new Sprite(this._raw.e);\r\n\t\t//this.e._url = _i_path + \"/e\";\r\n\r\n\t\tthis.sw = new Sprite(this._raw.sw);\r\n\t\t//this.sw._url = _i_path + \"/sw\";\r\n\r\n\t\tthis.s = new Sprite(this._raw.s);\r\n\t\t//this.s._url = _i_path + \"/s\";\r\n\r\n\t\tthis.se = new Sprite(this._raw.se);\r\n\t\t//this.se._url = _i_path + \"/se\";\r\n\r\n\t\tthis.arrow = new Sprite(this._raw.arrow);\r\n\t\t//this.arrow._url = _i_path + \"/arrow\";\r\n\r\n\t\t//this._pat_c = ctx.createPattern(this.c, \"repeat\");\r\n\r\n\t\tChatBalloon.cache[style] = this;\r\n\t}\r\n\r\n\t/*\r\n\t1 12345 12345 1 : 5\r\n\t2 12345 12345 12345\r\n\t3 12345 12345 12345\r\n\t4 12345 12345 12345\r\n\t5 12345 12345 12345\r\n\t6 xxx12 34512 34\r\n\t */\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} text - length = chat.value.length + \" : \".length + name.length = 70 + 3 + name.length\r\n\t * @param {number} x - chat balloon arrow bottom pos.x\r\n\t * @param {number} y - chat balloon arrow bottom pos.y\r\n\t */\r\n\tdraw(renderer, text, x, y) {\r\n\t\tlet lines = [];\r\n\t\tfor (let i = 0; i < text.length; i += 12) {\r\n\t\t\tlet line = text.slice(i, i + 12);\r\n\t\t\tlines.push(line);\r\n\t\t}\r\n\t\tif (!lines.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst LINE_HEIGHT = this.c.height;// = fontSize(12) + PADDING_TOP(2)\r\n\t\tconst ctx = renderer.ctx;\r\n\t\tconst PADDING_LEFT = 0, PADDING_TOP = 0, PADDING_RIGHT = 0, PADDING_BOTTOM = 0;\r\n\r\n\t\tctx.font = \"12px 微軟正黑體\";//新細明體\r\n\t\tctx.textAlign = \"center\";\r\n\t\tctx.textBaseline = \"top\";//alphabetic\r\n\r\n\t\tconst _tw = lines.map(line => ctx.measureText(line).width + PADDING_LEFT + PADDING_RIGHT).sort((a, b) => b - a)[0];\r\n\t\tconst tw = Math.ceil(_tw / this.n.width) * this.n.width;\r\n\t\tconst hw = tw / 2;\r\n\t\tconst th = lines.length * LINE_HEIGHT + PADDING_TOP + PADDING_BOTTOM;\r\n\r\n\t\tx = Math.trunc((x - hw));\r\n\t\ty = Math.trunc((y - th) - this.arrow.height);\r\n\r\n\t\tthis.nw.draw2(x, y);\r\n\t\tthis.n._drawPattern(x, y, tw, this.n.height);\r\n\t\tthis.ne.draw2(x + tw, y);\r\n\r\n\t\tconst xw = this.w.width - this.w.x;\r\n\r\n\t\tthis.w._drawPattern(x + xw, y, this.w.width, th);\r\n\t\tthis.c._drawPattern(x + xw, y, tw, th);\r\n\t\tthis.e._drawPattern(x + xw + tw, y, this.e.width, th);\r\n\r\n\t\tconst arrow_hw = this.arrow.width / 2;\r\n\t\tconst hw_arrow_hw = hw - arrow_hw;\r\n\r\n\t\tthis.sw.draw2(x, y + th);\r\n\t\tthis.s._drawPattern(x, y + th, hw_arrow_hw, this.s.height);\r\n\t\tthis.s._drawPattern(x + hw + arrow_hw, y + th, hw_arrow_hw, this.s.height);\r\n\t\tthis.se.draw2(x + tw, y + th);\r\n\r\n\t\tthis.arrow.draw2i(x - arrow_hw + hw, y + th);\r\n\t\t\r\n\t\tfor (let i = 0, cy = y; i < lines.length; ++i, cy += LINE_HEIGHT) {\r\n\t\t\tlet line = lines[i];\r\n\r\n\t\t\t//if (this.constructor.DEBUG) {\r\n\t\t\t//\tctx.beginPath();\r\n\t\t\t//\tctx.strokeStyle = \"red\";\r\n\t\t\t//\tctx.strokeRect(x + PADDING_LEFT, cy + PADDING_TOP, tw, LINE_HEIGHT);\r\n\t\t\t//}\r\n\t\t\r\n\t\t\tctx.fillStyle = \"black\";\r\n\t\t\tctx.fillText(line, x + hw + PADDING_LEFT, cy + PADDING_TOP);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/UI/ChatBalloon\";\r\n\t}\r\n\r\n\t//static get DEBUG() {\r\n\t//\treturn false;\r\n\t//}\r\n}\r\n\r\n/** @type {{[style:number]:ChatBalloon}} */\r\nChatBalloon.cache = {};\r\n\r\nwindow.$images_ChatBalloon = ChatBalloon.cache;\r\n","﻿\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGrpah, IRenderer, IGraph } from \"./IRenderer.js\";\r\n\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\n\r\n/**\r\n * @extends {IGraph}\r\n */\r\nexport class SpriteBase extends Graph {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tif (raw) {\r\n\t\t\tsuper(url, {\r\n\t\t\t\twidth: raw.__w,\r\n\t\t\t\theight: raw.__h,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\t//this.src is broken;\r\n\r\n\t\tif (url) {\r\n\t\t\tdebugger\r\n\t\t\tthis._url = url;\r\n\t\t\t//this._loadTexture(url);//_loadTexture: undefined\r\n\t\t}\r\n\t\telse if (SpriteBase.isTexture(raw) !== false) {\r\n\t\t\tthis._url = raw[\"\"];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isTexture(raw) {\r\n\t\tif (raw) {\r\n\t\t\tif (raw.hasOwnProperty(\"\")) {\r\n\t\t\t\tif (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!raw.__isEmpty) {\r\n\t\t\t\t\tconsole.group(\"no texture\");\r\n\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\tthrow new Error(\"no texture\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic isTextureHasData(raw) {\r\n\t\treturn raw && typeof raw[\"\"] == 'string' && raw[\"\"].startsWith(\"data:image/\");\r\n\t}\r\n\r\n\tset z(value) {\r\n\t\tthis._order = value;\r\n\t}\r\n\tget z() {\r\n\t\treturn this._order;\r\n\t}\r\n\t\r\n\t/**\r\n\t * try construct value from raw data\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (!this._raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\telse if (propertyName in this._raw) {\r\n\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis._engine.drawGraph(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthis._engine.drawGraph2(this, x - this.x, y - this.y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t */\r\n\tdraw2i(x, y) {\r\n\t\tthis._engine.drawGraph2(this, Math.trunc(x - this.x + 0.5), Math.trunc(y - this.y + 0.5));\r\n\t}\r\n}\r\n\r\n\r\nexport class Sprite extends SpriteBase {\r\n\t/**\r\n\t * sprite = new Sprite(rawData);//不會載入image\r\n\t * sprite._url = img_url;//不會載入image\r\n\t *\r\n\t * 會觸發載入image的method\r\n\t * draw(), isLoaded(), get width(), get height()\r\n\t * \r\n\t * 手動載入image: __loadTexture()\r\n\t * \r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tvar origin = this._get(new Vec2(0, 0), \"origin\", Vec2.get);\r\n\t\tthis.x = origin.x;\r\n\t\tthis.y = origin.y;\r\n\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\tthis.delay = this._get(100, \"delay\", Number);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tctx.rect(x, y, w, h);\r\n\t\t\tctx.clip();\r\n\r\n\t\t\tlet left = x;\r\n\t\t\tlet top = y;\r\n\t\t\tlet right = x + w;\r\n\t\t\tlet bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\tdrawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst left = x;\r\n\t\t\tconst right = x + w;\r\n\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\tdrawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst top = y;\r\n\t\t\tconst bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tthis.draw2(x, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\t_drawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst top = y;\r\n\t\tconst right = x + w;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\t_drawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst right = x + w;\r\n\r\n\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\tthis.draw2(j, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\t_drawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst top = y;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tthis.draw2(x, i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawPattern4i(x, y, w, h) {\r\n\t\tthis.drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\tdrawHorizontalPattern3i(x, y, w) {\r\n\t\tthis.drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawVerticalPattern3i(x, y, h) {\r\n\t\tthis.drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawPattern4i(x, y, w, h) {\r\n\t\tthis._drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\t_drawHorizontalPattern3i(x, y, w) {\r\n\t\tthis._drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawVerticalPattern3i(x, y, h) {\r\n\t\tthis._drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n}\r\n\r\nexport class _$PatternSprite_Loaded extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._direction = null;\r\n\r\n\t\t/** @type {CanvasPattern} */\r\n\t\tthis._pattern = null;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget direction() {\r\n\t\treturn this._direction;\r\n\t}\r\n\tset direction(value) {\r\n\t\tif (value && this._direction != value) {\r\n\t\t\tthis._direction = value;\r\n\t\r\n\t\t\t//reload;\r\n\t\t\tthis._pattern = null;\r\n\t\t\tthis.__proto__ = $PatternSprite.prototype;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(-this.x, -this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(x - this.x, y - this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"repeat\"} */\r\n\tget e_repeat() {\r\n\t\treturn \"repeat\";\r\n\t}\r\n\t/** @returns {\"repeat-x\"} */\r\n\tget e_repeat_x() {\r\n\t\treturn \"repeat-x\";\r\n\t}\r\n\t/** @returns {\"repeat-y\"} */\r\n\tget e_repeat_y() {\r\n\t\treturn \"repeat-y\";\r\n\t}\r\n\t/** @returns {\"no-repeat\"} */\r\n\tget e_noRepeat() {\r\n\t\treturn \"no-repeat\";\r\n\t}\r\n}\r\n\r\nexport class $PatternSprite extends _$PatternSprite_Loaded {\r\n\tdrawPattern(w, h) {\r\n\t\tthis.drawPattern2(0, 0, w, h);\r\n\t}\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.isLoaded()) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t{\r\n\t\t\t\tctx.rect(x, y, w, h);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tlet left = x;\r\n\t\t\t\tlet top = y;\r\n\t\t\t\tlet right = x + w;\r\n\t\t\t\tlet bottom = y + h;\r\n\r\n\t\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern(w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern2(x, y, w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}