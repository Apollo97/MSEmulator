{"version":3,"sources":["webpack:///./src/game/Animation.js","webpack:///./src/game/Renderer/CharacterRenderer.js","webpack:///./src/init.js","webpack:///./src/game/Sprite.js","webpack:///./public/javascripts/resource.js","webpack:///./src/game/Renderer/CharacterActionAnimation.js","webpack:///./src/util.js"],"names":["window","m_draw_animation_texture_info","IAnimation","[object Object]","raw","url","this","_raw","_url","Object","defineProperties","value","frame","time","delta","textures","is_loop","is_end","reduce","pv","cv","delay","newAnim","constructor","Error","stamp","texture","AnimationBase","super","i","_Sprite_js__WEBPACK_IMPORTED_MODULE_2__","isLoaded","__loadTexture","fc","length","reset","renderer","x","y","angle","flip","drawRotaGraph","Animation","draw","_draw_and_preload","zMap","sMap","FragmentTexture","_Sprite_js__WEBPACK_IMPORTED_MODULE_5__","full_path","origin","__proto__","_math_js__WEBPACK_IMPORTED_MODULE_6__","prototype","map","relative","calcRelative","_calcRelative","filter","_IRenderer_js__WEBPACK_IMPORTED_MODULE_4__","opacity","_slot","_place","classList","z","not_value","console","error","order","TypeError","empty","brow","neck","navel","hand","handMove","_earBelowHead","earBelowHead","_earOverHead","earOverHead","that","base","anchor","minus","plus","chara","body","head","_getRelativeFunction","isHasAnchor","isAnchorNeck","_calcRelative_neck","isAnchorBrow","_calcRelative_brow","isAnchorNavel","slots","_getOrigin","_calcRelative_navel","isAnchorHand","_calcRelative_hand","isAnchorHandMove","lastIndexOf","_calcRelative_handMove_lHand","_calcRelative_handMove","_calcRelativeEmpty","_anchor","fragments","arm","getTexture","globalAlpha","isEmpty","drawGraph2","ctx","toString","HairFragmentTexture","args","graph2","graph3","_render","ItemEffectAnimation","_Animation__WEBPACK_IMPORTED_MODULE_2__","defineProperty","__getAttr","load","attr","defVal","actionExceptRotation","oy","height","ItemEffect","animation","action","fixed","enable","itemEffectList","_list","$get","list","clear","forEach","id","add","parseInt","ex","equipID","Number","has","eff","data","_load","update","render","front","__construct","join","Set","CharacterFragmentBase","CharacterBodyFragment","getFrameTexture","action_frame","ft","CharacterFaceFragment","emotion_frame","emotion","CharacterTamingMobFragment","_ride_action","EquipImageFilter","equip","hue","j","k","sat","bri","contrast","ICharacterEquip","CharacterEquipBase","effect","_onload","categoryInfo","slot_order","islot","vslot","toJSON","__onload","func","call","cateInfo","use_category","_public_javascripts_resource_js__WEBPACK_IMPORTED_MODULE_0__","isEquipExist","getItem","load_extern_item_data","__load_slot","__load_fragments","then","a","fragmentConstructor","action_list","keys","_raw_textures","_base_path","__load_frame_textures","fragment_textures","place","frag","__load_place_textures","path","FragmentTextureType","slot","info","islots","match","vslots","getIconUrl","getIconRawUrl","_animation_type","CharacterEquip","d","isNaN","isFinite","CharacterEquipBody","CharacterEquipHair","CharacterEquipFaceBase","face","_info","fragmentType","elfEarFragment","lefEarFragment","highlefEarFragment","ear","lefEar","highlefEar","elfEar","slice","actionMap","characterAction","Math","trunc","isSafeInteger","CharacterSlots","_ordered_slot","_hair","_hair2","_hairMix2","_hair3","_hairMix3","hair","cap","accessoryFace","accessoryEyes","accessoryEars","coat","longcoat","pants","shoes","glove","cape","shield","weapon","tamingMob","configurable","writable","enumerable","hairColor2","hairMix2","hairColor3","hairMix3","color","getColorHairID","get","undefined","getHairColor","hc2Id","$promise_hair2","__loadColoredHair","hair2","Promise","resolve","item","ori","hc3Id","$promise_hair3","hair3","loadedEquip","alert","_unload","warn","slotName","push","ha","enumerate_equip","CharacterChangeLog","useEquip","unuseEquip","weaponType","CharacterAnimationBase","_$dirty","job","subJob","actani","_CharacterActionAnimation_js__WEBPACK_IMPORTED_MODULE_7__","speed","fixed_speed","_action","_action_frame","_action_time","_emotion","_emotion_frame","_emotion_time","_emotion_frame_sequence","__require_update","__frag_list","$$changeLog","name","nc","tasks","getFrameCount","count","_isLoaded_or_doload","$promise","all","act","_act","hideBody","reload","frame_count","action_frame_count","next","f","action_time","action_delay","getDelay","emo","circularSequence","emotion_frame_count","random","emotion_time","emotion_delay","_stamp","getSpeed","isEnd","loop","_update","__update_frag_list","pushGlobalAlpha","__draw_list","popGlobalAlpha","pushMatrix","translate","rotate","m_a","scale","popMatrix","__add_equip_to_frag_list","is_back","fts","startsWith","__add_frag_to_list","ae","_calcBoundBox","left","top","right","bottom","x0","y0","x1","width","y1","min","max","_boundBox","obj","CharacterRenderer","tx","ty","__load_task","result","Init","reverse","use","initAnimation","waitLoaded","_draw","__forceUpdate","_waitFrameTexturesLoaded","category","getJobWeaponCategory","isCashWeapon","task","_use","_unuse","code","es","split","_clear","v","indexOf","ss","cate","h2","h3","hc","c2","m2","c3","m3","hairMix4","apply","hairColor","col","faceColor","getFaceColor","getColorFaceID","changeLog","unuse","genCode","_stringify","link","enumerate","log","open","_outlink","__texture_to_base64","frag_list","file_name","svg","clz","DownloadData","filename","bound","size","$swapCanvas","c2w","_ctx2","canvas","c2h","base64","toDataURL","elem","document","createElement","download","href","appendChild","click","removeChild","$src","src","reject","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","onerror","ev","readAsDataURL","response","responseType","send","_init_js__WEBPACK_IMPORTED_MODULE_1__","jQuery","jquery__WEBPACK_IMPORTED_MODULE_0___default","$","vue__WEBPACK_IMPORTED_MODULE_14___default","config","productionTip","vuex__WEBPACK_IMPORTED_MODULE_15__","onwheel","init_tasks","AddInitTask","InitAll","SpriteBase","_Engine_js__WEBPACK_IMPORTED_MODULE_2__","__w","__h","isTexture","hasOwnProperty","__isEmpty","group","groupEnd","_order","defaultValue","propertyName","converter","_engine","drawGraph","Sprite","_get","_math_js__WEBPACK_IMPORTED_MODULE_0__","w","h","save","rect","clip","draw2","restore","sw","sh","sx","_drawImage","sy","drawPattern","drawHorizontalPattern","drawVerticalPattern","_drawPattern","_drawHorizontalPattern","_drawVerticalPattern","$failed_urls","$archive","character_emotion_list","character_action_list","ItemCategoryInfo","id_prefix","imgDir","listPath","categoryName","type","stringPath","dataDir","stringDir","iconPath","iconRawPath","s","itemId","results","padStart","assign","desc","__v","DATA_TAG","DATA_VERSION","icon","iconRaw","imageUrl","_id","$ItemCategoryInfo","Equip","Consume","Etc","Install","Cash","typeName","0","1","2","3","4","typeId","0000","0001","0002","0003","0004","0100","0101","0102","0103","0104","0105","0106","0107","0108","0109","0110","0121","0122","0123","0124","0125","0126","0127","0128","0130","0131","0132","0133","0134","013526","013530","0136","0137","0138","0140","0141","0142","0143","0144","0145","0146","0147","0148","0149","0150","0151","0152","0153","0154","0155","0156","0157","0158","0170","019","0301","_categoryList","info_map","set","cat","key","ResourceManager","dp","equip_map","$setValue","JSON","parse","timeout","status","responseText","ontimeout","e","onabort","root_path","$ROOT_PATH","archive","failed_urls","endsWith","ps","target","lastIndex","origin_value","$getValue","$ResourceManager","symbol_isPack","Symbol","url_startsWith_protocol","RegExp","test","bind","_setValueByPath","is_pack","_getValueFromArchiveByPath","_path","_getDataPathByUrl","$getValueAsync","async","pack","packUrl","jsonText","packSync","dataUrl","dataSync","listUrl","listSync","soundMp3Url","soundWavUrl","assetUrl","asset","ItemAttrNormalize","gender","g","_equip","regexp_getHairStyleID","regexp_getFaceStyleID","regexp_getHairColor","regexp_getFaceColor","CharacterRenderConfig","style","m","id_1","id_2","String","ItemTypeInfo","Hat","Cape","Top","Overall","Glove","Bottom","Shield","Shoes","Eye Decoration","Earrings","Face Accessory","Face","Hair","external","load_external_resource","_external_raw","typeInfo","overallCategory","toLowerCase","subCategory","it","cash","isCash","","external_resource_promise","_concat_external_resource_p","origin_data","_concat_external_resource","concat_external_resource","id_map","Map","ori_item","_name","_desc","$foreign","trigger_update_external_equip_list","default_","frameBooks","default","frames","effects","_frags","frags","_frag","image","originOrZero","center","mapOffset","position","metaInfo","ActionAnimationFrameData","move","ActionAnimation","_is_end","Adef","fdat","total","aadef","actName","aa","values","_fdef","fdef","CharacterActionAnimationDefinition","text","fileName","blob","Blob","URL","createObjectURL","revokeObjectURL","SelectText","range","selection","createTextRange","moveToElementText","select","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","copyToClipboard","$temp","append","val","execCommand","remove"],"mappings":"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","file":"14.js","sourcesContent":["﻿\r\nimport { Vec2 } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\n\r\n\r\nwindow.m_draw_animation_texture_info = false;\r\n\r\nclass IAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tthis._raw = null;\r\n\t\tthis._url = null;\r\n\t\t\r\n\t\tObject.defineProperties(this, {\r\n\t\t\t_raw: {\r\n\t\t\t\tvalue: raw\r\n\t\t\t},\r\n\t\t\t_url: {\r\n\t\t\t\tvalue: url\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** elapsed time */\r\n\t\tthis.delta = 0;\r\n\r\n\t\t/** @type {Sprite[]} */\r\n\t\tthis.textures = [];\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_loop = true;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_end = false;\r\n\r\n\t\tif (!raw && !this._url) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.textures.reduce((pv, cv) => pv + cv.delay, 0);\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet newAnim = new this.constructor(this._raw, this._url);\r\n\t\tnewAnim.textures = this.textures;\r\n\t\treturn newAnim;\r\n\t}\r\n\t\r\n\tload() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** reset frame */\r\n\t_resetFrame() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t}\r\n\r\n\t/** restart */\r\n\treset() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.is_end = false;\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * remove at nextStep\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.is_loop = false;//防止重複\r\n\t\tthis.is_end = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * process animation\r\n */\r\nexport class AnimationBase extends IAnimation {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n\r\n\tload() {\r\n\t\tif (!this._raw) {\r\n\t\t\t//this._raw = await $get.data(this._url);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i in this._raw; ++i) {\r\n\t\t\t//let url = this._url + \"/\" + i;\r\n\r\n\t\t\tlet texture = new Sprite(this._raw[i]);\r\n\r\n\t\t\t//texture._url = url;\r\n\r\n\t\t\tthis.textures[i] = texture;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.textures[0]) {\r\n\t\t\tif (!this.textures[0].isLoaded()) {\r\n\t\t\t\tthis.textures[0].__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * aways loop\r\n\t * @param {number} stamp\r\n\t */\r\n\t_update(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame % fc;\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = this.frame + 1;\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tif (this.is_loop) {\r\n\t\t\t\t\t\tthis.reset();//make loop\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//防止錯誤\r\n\t\t\t\t\t\tthis.frame = fc - 1;//this._resetFrame();\r\n\r\n\t\t\t\t\t\tthis.is_end = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, x, y, angle, flip) {\r\n\t\tlet texture = this.texture;\r\n\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\treturn this.textures[this.frame];\r\n\t}\r\n}\r\n\r\n/**\r\n * animation rendering\r\n */\r\nexport class Animation extends AnimationBase {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tthis.draw = this._draw_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * draw and load next frame\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\t_draw_and_preload(renderer, x, y, angle, flip) {\r\n\t\tlet frame;\r\n\r\n\t\t// if current frame is not loaded then render prev frame\r\n\t\tfor (frame = this.frame; frame >= 0; --frame) {\r\n\t\t\tlet texture = this.textures[frame];\r\n\r\n\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//preload next frame\r\n\t\tlet texture = this.textures[++frame];\r\n\t\tif (texture) {//if frame < this.textures.length\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {//if all testure are loaded\r\n\t\t\tdelete this.draw;\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\nimport { CharacterRenderConfig, ItemCategoryInfo, ResourceManager } from '../../../public/javascripts/resource.js';\r\nimport { AddInitTask } from \"../../init.js\";\r\nimport { Animation } from \"../Animation\";\r\nimport { engine } from '../Engine.js';\r\nimport { IRenderer, ImageFilter } from '../IRenderer.js';\r\nimport { Sprite, SpriteBase } from '../Sprite.js';\r\nimport { Rectangle, Vec2 } from '../math.js';\r\nimport { ActionAnimation } from './CharacterActionAnimation.js';\r\n\r\n\r\nlet zMap = {};\r\nlet sMap = {};\r\n\r\n\r\n/**\r\n * 00026623.blink[1].brow has bug\r\n * 'Weapon/01702694' is Longcoat(islot)\r\n * how to use cash-weapon (ex: 01702504|0152)\r\n */\r\n\r\n/**\r\n * multi-image-sprite\r\n */\r\nclass FragmentTexture extends SpriteBase {\r\n\t/**\r\n\t * @param {wzproperty} raw\r\n\t * @param {string} full_path\r\n\t */\r\n\tconstructor(raw, full_path) {\r\n\t\tsuper(raw, full_path);\r\n\r\n\t\tif (this._raw.origin) {\r\n\t\t\tthis._raw.origin.__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\tfor (let i in this._raw.map) {\r\n\t\t\tthis._raw.map[i].__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * if this.relative == null then hide\r\n\t\t */\r\n\t\tthis.relative = new Vec2(0, 0);\r\n\t\t\r\n\t\tthis.calcRelative = this._calcRelative;//this._getRelativeFunction();//this.__old_calcRelative;//\r\n\r\n\t\tthis.filter = new ImageFilter();\r\n\t\tthis.opacity = 1;\r\n\r\n\r\n\t\t/** @type {string} - extra property. */\r\n\t\tthis._slot = null;\r\n\r\n\t\t/** @type {string} - extra property. 在哪個部位 */\r\n\t\tthis._place = null;\r\n\r\n\t\t/** @type {string} - extra property: _slot itemId, _place, _raw.z z */\r\n\t\tthis.classList = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget z() {\r\n\t\treturn zMap[this._raw.z] || 1;\r\n\t}\r\n\tset z(not_value) {\r\n\t\tconsole.error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\tdebugger;\r\n\t\treturn this.z;\r\n\t}\r\n\tset order(not_value) {\r\n\t\tdebugger;\r\n\t\tconsole.error(new TypeError(\"Not implement\"));\r\n\t}\r\n\r\n\t/** @returns {Vec2} */\r\n\tget origin() { return this._raw.origin || Vec2.empty; }\r\n\r\n\tisHasAnchor() { return !!this._raw.map; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget brow() { return this._raw.map.brow; }\r\n\tisAnchorBrow() { return !!this._raw.map.brow; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget neck() { return this._raw.map.neck; }\r\n\tisAnchorNeck() { return !!this._raw.map.neck; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget navel() { return this._raw.map.navel; }\r\n\tisAnchorNavel() { return !!this._raw.map.navel; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget hand() { return this._raw.map.hand; }\r\n\tisAnchorHand() { return !!this._raw.map.hand; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget handMove() { return this._raw.map.handMove; }\r\n\tisAnchorHandMove() { return !!this._raw.map.handMove; }\r\n\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earBelowHead() { return this._raw.map.earBelowHead; }\r\n\tisAnchor_EarBelowHead() { return !!this._raw.map.earBelowHead; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earOverHead() { return this._raw.map.earOverHead; }\r\n\tisAnchor_EarOverHead() { return !!this._raw.map.earOverHead; }\r\n\r\n\t/**\r\n\t * @param {FragmentTexture} that - this\r\n\t * @param {FragmentTexture} base - parent\r\n\t * @param {string} anchor - anchor name\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_anchor(that, base, anchor) {\r\n\t\treturn base[anchor].minus(that[anchor]).plus(base.origin.minus(that.origin));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative(chara, body, head) {\r\n\t\tthis.calcRelative = this._getRelativeFunction(chara);\r\n\t\treturn this.calcRelative(chara, body, head);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getRelativeFunction(chara) {\r\n\t\tif (!this.isHasAnchor()) {\r\n\t\t\treturn this._calcRelativeEmpty;\r\n\t\t}\r\n\t\tif (this.isAnchorNeck()) {\r\n\t\t\treturn this._calcRelative_neck;\r\n\t\t}\r\n\t\tif (this.isAnchorBrow()) {\r\n\t\t\treturn this._calcRelative_brow;\r\n\t\t}\r\n\t\tif (this.isAnchorNavel()) {\r\n\t\t\tif (this == chara.slots.body) {\r\n\t\t\t\treturn this._getOrigin;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_navel;\r\n\t\t}\r\n\t\tif (this.isAnchorHand()) {\r\n\t\t\treturn this._calcRelative_hand;\r\n\t\t}\r\n\t\tif (this.isAnchorHandMove()) {\r\n\t\t\tif (this._url.lastIndexOf(\"lHand\") > 0) {\r\n\t\t\t\treturn this._calcRelative_handMove_lHand;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_handMove;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelativeEmpty(chara, body, head) {\r\n\t\treturn Vec2.empty;\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getOrigin(chara, body, head) {\r\n\t\treturn this.origin;\r\n\t}\r\n\t/**\r\n\t * neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_neck(chara, body, head) {\r\n\t\treturn this._anchor(this, body, \"neck\").minus(body.origin);\r\n\t}\r\n\t/**\r\n\t * brow on the head & head on the neck & neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_brow(chara, body, head) {\r\n\t\treturn this._anchor(this, head, \"brow\").plus(this._anchor(head, body, \"neck\")).minus(body.origin);//anchor_brow+(-7,-33)\r\n\t}\r\n\t/**\r\n\t * this is origin point, no anchor\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_navel(chara, body, head) {\r\n\t\treturn body.navel.minus(this.navel).minus(this.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_hand(chara, body, head) {\r\n\t\tconst hand = chara.slots.body.fragments.arm.getTexture(chara);\r\n\t\tif (hand == null) {\r\n\t\t\treturn Vec2.empty.minus(this.hand).minus(this.origin).minus(body.origin);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this._anchor(this, hand, \"hand\").minus(this._anchor(body, hand, \"navel\")).minus(body.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove(chara, body, head) {\r\n\t\treturn Vec2.empty.minus(this.origin).minus(this.handMove);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {FragmentTexture} body\r\n\t * @param {FragmentTexture} [head]\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove_lHand(chara, body, head) {\r\n\t\treturn Vec2.empty.minus(this.origin);\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tif (chara.slots.body && chara.slots.head) {\r\n\t\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\t\tconst head = chara.slots.head.fragments.head.getTexture(chara);\r\n\t\t\tif (body && head) {\r\n\t\t\t\tthis.relative = this.calcRelative(chara, body, head);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!this.relative) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.globalAlpha = this.opacity || 1;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass HairFragmentTexture extends FragmentTexture {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph2 = null;\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph3 = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tif (chara.slots.body && chara.slots.head) {\r\n\t\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\t\tconst head = chara.slots.head.fragments.head.getTexture(chara);\r\n\t\t\tif (body && head) {\r\n\t\t\t\tthis.relative = this.calcRelative(chara, body, head);\r\n\t\t\t\tif (this.graph2) {\r\n\t\t\t\t\tthis.graph2.relative = this.relative;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.graph3) {\r\n\t\t\t\t\tthis.graph3.relative = this.relative;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!this.relative) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\trenderer.globalAlpha = this.opacity || 1;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\tthis._render(renderer);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\tthis._render(renderer);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n\t_render(renderer) {\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.drawGraph2(this, x, y);\r\n\r\n\t\tif (this.graph2 && this.graph2.opacity) {//color2\r\n\t\t\trenderer.globalAlpha = this.graph2.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph2, x, y);\r\n\t\t}\r\n\t\tif (this.graph3 && this.graph3.opacity) {//color3\r\n\t\t\trenderer.globalAlpha = this.graph3.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph3, x, y);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nclass ItemEffectAnimation extends Animation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t\t\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\t//this._url = this._url;\r\n\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"pos\", 1);\r\n\r\n\t\tsuper.load();\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} actionExceptRotation\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\trender(renderer, actionExceptRotation, angle, flip) {\r\n\t\tif (actionExceptRotation) {\r\n\t\t\tthis.draw(renderer, 0, 0, -angle, flip);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst oy = -this.texture.height * 0.25;\r\n\t\t\tthis.draw(renderer, 0, oy, 0, flip);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\t/data/Effect/ItemEff/1102918\r\nclass ItemEffect {\r\n\tconstructor() {\r\n\t\tthis._url = null;\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {{[animationName:string]:ItemEffectAnimation}} */\r\n\t\tthis.animation = {};\r\n\r\n\t\tthis.action = null;\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\r\n\t\tthis.fixed = 0;\r\n\t\tthis.z = -2;\r\n\t\tthis.action = 1;\r\n\t\tthis.actionExceptRotation = 0;\r\n\t\t\r\n\t\tthis.enable = true;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\ttry {\r\n\t\t\t/** @type {Set<string>} */\r\n\t\t\tlet itemEffectList = ItemEffect._list;\r\n\r\n\t\t\t/** @type {string[]} */\r\n\t\t\tlet raw = $get.list(\"/Effect/ItemEff\");\r\n\r\n\t\t\titemEffectList.clear();\r\n\r\n\t\t\traw.forEach(id => {\r\n\t\t\t\titemEffectList.add(parseInt(id, 10));\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<ItemEffect>}\r\n\t */\r\n\tstatic async load(equipID) {\r\n\t\tconst id = Number(equipID);\r\n\r\n\t\tif (ItemEffect._list.has(id)) {\r\n\t\t\tlet eff = new ItemEffect();\r\n\t\t\tawait eff.load(equipID);\r\n\t\t\treturn eff;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tasync load(equipID) {\r\n\t\tconst id = Number(equipID);\r\n\t\tconst url = `/Effect/ItemEff/${id}/effect`;\r\n\r\n\t\tlet raw = await $get.data(url);\r\n\t\tif (raw) {\r\n\t\t\treturn await this._load(equipID, url, raw);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t * @param {string} action\r\n\t */\r\n\tupdate(stamp, action) {\r\n\t\tif (action in this.animation) {\r\n\t\t\tthis.action = action;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.action = \"default\";\r\n\t\t}\r\n\r\n\t\tif (this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterRenderer} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (this.animation && this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].render(renderer, this.actionExceptRotation, chara.angle, chara.front > 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} equipID\r\n\t * @param {object} raw_data\r\n\t */\r\n\tasync _load(equipID, url, raw) {\r\n\t\tthis.id = equipID;\r\n\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tthis.__construct();\r\n\t}\r\n\t__construct() {\r\n\t\tthis.__getAttr(\"fixed\", 0);\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"action\", 1);\r\n\t\tthis.__getAttr(\"actionExceptRotation\", 0);\r\n\r\n\t\tfor (let i in this._raw) {\r\n\t\t\tif (this._raw[i] && typeof this._raw[i] == \"object\" && '0' in this._raw[i]) {//animation has frames\r\n\t\t\t\tthis.animation[i] = new ItemEffectAnimation(this._raw[i], [this._url, i].join(\"/\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n}\r\n/** @type {Set<string>} */\r\nItemEffect._list = new Set();\r\n\r\nclass CharacterFragmentBase {\r\n\r\n\t/**\r\n\t * @param {{[action:string]: FragmentTexture[]}} textures\r\n\t */\r\n\tconstructor(textures) {\r\n\t\t/** @type {{[action:string]: FragmentTexture[]}|{[action:string]: {[frame:number]: FragmentTexture}}} - textures[action:string][frame:number] */\r\n\t\tthis.textures = textures;\r\n\t\t//this.opacity = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterBodyFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.action_frame);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.action in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t//if (this.textures.is_show) {\r\n\t\t\tlet ft = this.textures[chara.action][frame];\r\n\t\t\tif (ft) {\r\n\t\t\t\t//ft.opacity = this.opacity;\r\n\t\t\t\treturn ft;\r\n\t\t\t}\r\n\t\t//}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterFaceFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.emotion_frame);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.emotion in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t//if (this.textures.is_show) {\r\n\t\t\tlet ft = this.textures[chara.emotion][frame];\r\n\t\t\t//ft.opacity = this.opacity;\r\n\t\t\treturn ft;\r\n\t\t//}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @final \r\n */\r\nclass CharacterTamingMobFragment extends CharacterFragmentBase  {\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.action_frame);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara._ride_action in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t//if (this.textures.is_show) {\r\n\t\tlet ft = this.textures[chara._ride_action][frame];\r\n\t\tif (ft) {\r\n\t\t\t//ft.opacity = this.opacity;\r\n\t\t\treturn ft;\r\n\t\t}\r\n\t\t//}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass EquipImageFilter {\r\n\t/**\r\n\t * @param {ICharacterEquip} equip\r\n\t */\r\n\tconstructor(equip) {\r\n\t\tthis.equip = equip;\r\n\t}\r\n\r\n\tget hue() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.hue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset hue(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget sat() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.sat;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset sat(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.sat = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget bri() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset bri(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.bri = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget contrast() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.contrast;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset contrast(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.contrast = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\thue: this.hue,\r\n\t\t\tsat: this.sat,\r\n\t\t\tbri: this.bri,\r\n\t\t\tcontrast: this.contrast,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nclass ICharacterEquip {\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tisLoaded() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\t_unload() {\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\ttoJSON() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t\treturn {\r\n\t\t\tid: -1,//invalid ID\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * ??\r\n */\r\nclass _CharacterEquipSlotLink extends ICharacterEquip {\r\n\tconstructor(slot_link) {\r\n\t\tsuper();\r\n\t\tthis.slot_link = slot_link;//??\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: slot_link,//??\r\n\t\t};\r\n\t}\r\n}\r\n\r\nclass CharacterEquipBase extends ICharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\t\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\t//this._url = null;\r\n\t\t\t\r\n\t\t/** @type {ItemEffect} */\r\n\t\tthis.effect = null;\r\n\r\n\t\t/**\r\n\t\t * @type {{[place:string]:CharacterFragmentBase}}\r\n\t\t */\r\n\t\tthis.fragments = null;\r\n\r\n\t\tthis._onload = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tthis.categoryInfo = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.slot_order = 0;\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.islot = {};\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.vslot = {};\r\n\r\n\t\tthis.filter = new EquipImageFilter(this);\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: this.id,\r\n\t\t\tfilter: this.filter.toJSON(),\r\n\t\t};\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn this.fragments != null;\r\n\t}\r\n\r\n\t/** @type {function(CharacterEquipBase):void} */\r\n\tget _onload() {\r\n\t\treturn this.__onload;\r\n\t}\r\n\tset _onload(func) {\r\n\t\tthis.__onload = func;\r\n\t\tif (this.isLoaded()) {\r\n\t\t\tthis.__onload.call(this, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {void} use_category - no use\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tlet raw;\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.categoryInfo = cateInfo;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (ResourceManager.isEquipExist(id, cateInfo)) {\r\n\t\t\t\traw = await ItemCategoryInfo.getItem(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!raw && load_extern_item_data) {\r\n\t\t\t\traw = await load_extern_item_data(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tthis.__load_slot();\r\n\r\n\t\tthis.__load_fragments();\r\n\r\n\t\tif (this._onload) {\r\n\t\t\tthis._onload.call(this, this);\r\n\t\t}\r\n\r\n\t\t//// if not body, head, face, hair then try load effect\r\n\t\t//if (id >= \"00050000\") {\r\n\t\t\t// load if exist\r\n\t\t\tItemEffect.load(this.id).then(a => this.effect = a);//01102918\t//01102915\r\n\t\t//}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tconst fragmentConstructor = this.fragmentConstructor;\r\n\r\n\t\t//Object.keys(this._raw_textures).map(k => { return '0' in this._raw_textures[k]; })\r\n\r\n\t\tlet action_list = Object.keys(this._raw_textures);\r\n\r\n\t\tlet textures = {};\r\n\t\tfor (let action of action_list) {\r\n\t\t\tif (typeof this._raw_textures[action] == \"object\" && \"0\" in this._raw_textures[action]) {\r\n\t\t\t\tlet _url = this._base_path + action;\r\n\r\n\t\t\t\ttextures[action] = this.__load_frame_textures(this._raw_textures[action], _url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragment_textures = {};\r\n\t\tfor (let action in textures) {\r\n\t\t\tfor (let frame in textures[action]) {\r\n\t\t\t\tfor (let place in textures[action][frame]) {\r\n\t\t\t\t\tif (!(place in fragment_textures)) {\r\n\t\t\t\t\t\tfragment_textures[place] = {};\r\n\t\t\t\t\t\t//fragment_textures[place].is_show = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!(action in fragment_textures[place])) {\r\n\t\t\t\t\t\tfragment_textures[place][action] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfragment_textures[place][action][frame] = textures[action][frame][place];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragments = {};\r\n\t\tfor (let frag in fragment_textures) {\r\n\t\t\tfragments[frag] = new fragmentConstructor(fragment_textures[frag]);\r\n\t\t}\r\n\t\tthis.fragments = fragments;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {Object.<string, FragmentTexture>[]} - array - textures[frame][place]\r\n\t */\r\n\t__load_frame_textures(_raw, _url) {\r\n\t\tlet textures = [];\r\n\t\tfor (let frame = 0; frame in _raw; ++frame) {\r\n\t\t\tlet url = `${_url}/${frame}`;\r\n\t\t\ttextures[frame] = this.__load_place_textures(_raw[frame], url);\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {Object.<string, FragmentTexture>} - object - textures[place]\r\n\t */\r\n\t__load_place_textures(_raw, _url) {\r\n\t\tlet textures = {};\r\n\t\tfor (let place in _raw) {\r\n\t\t\tlet path = `${_url}/${place}`;\r\n\t\t\tlet raw = _raw[place];\r\n\r\n\t\t\tif (raw) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tconst FragmentTextureType = this.FragmentTextureType;\r\n\t\t\t\tlet ft;\r\n\t\t\t\tif (raw[\"\"] == \"\") {\r\n\t\t\t\t\tft._url = path;\r\n\t\t\t\t\t//ft._url = path;\r\n\t\t\t\t\ttextures[place] = ft\r\n\t\t\t\t}\r\n\t\t\t\telse if (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\tft = new FragmentTextureType(raw);\r\n\t\t\t\t\t//ft._url = raw[\"\"];\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\telse if (place == \"hairShade\") {\r\n\t\t\t\t\tft = new FragmentTextureType(raw[0]);\r\n\t\t\t\t\t//ft._url = path + \"/0\";\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tft._slot = this.categoryInfo.slot;\r\n\t\t\t\t\tft._place = place;\r\n\r\n\t\t\t\t\tft.classList = [\r\n\t\t\t\t\t\tft._slot,\r\n\t\t\t\t\t\t\"item\" + this.id,\r\n\t\t\t\t\t\tft._place,\r\n\t\t\t\t\t\tft._raw.z,\r\n\t\t\t\t\t\t'z' + ft.z\r\n\t\t\t\t\t].join(' ');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\t__load_slot() {\r\n\t\tif (!this._raw.info.islot) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet islots = this._raw.info.islot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in islots) {\r\n\t\t\tconst slot = islots[i];\r\n\t\t\tconst slot_order = zMap[slot];\r\n\t\t\tthis.islot[slot] = slot_order;\r\n\t\t\t\t\r\n\t\t\tif (slot_order > this.slot_order) {//this.slot_order = Math.max(this.slot_order, slot_order);\r\n\t\t\t\tthis.slot_order = slot_order;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet vslots = this._raw.info.vslot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in vslots) {\r\n\t\t\tconst slot = vslots[i];\r\n\t\t\tthis.vslot[slot] = slot;\r\n\t\t}\r\n\t}\r\n\r\n\t_unload() {\r\n\t\tthis.fragments = null;\r\n\t\tthis.effect == null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget opacity() {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} opacity\r\n\t */\r\n\tset opacity(opacity) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.opacity = opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t */\r\n\tsetFilter(hue, sat, bri) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = hue;\r\n\t\t\t\t\t\tft.filter.sat = sat;\r\n\t\t\t\t\t\tft.filter.bri = bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get icon url\r\n\t * @see {@link ItemCategoryInfo.getIconUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconUrl() {\r\n\t\treturn ItemCategoryInfo.getIconUrl(this.id);\r\n\t}\r\n\r\n\t/**\r\n\t * get iconRaw url\r\n\t * @see {@link ItemCategoryInfo.getIconRawUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconRawUrl() {\r\n\t\treturn ItemCategoryInfo.getIconRawUrl(this.id);\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t * @type {string}\r\n\t */\r\n\tget _animation_type() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @virtual\r\n\t */\r\n\tget fragmentConstructor() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * 通常不會被覆寫\r\n\t * @virtual\r\n\t */\r\n\tget FragmentTextureType() {\r\n\t\treturn FragmentTexture;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {{[actions:string]:{[\"0\"]:Sprite,[frames:string]:Sprite}}} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw;\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nclass CharacterEquip extends CharacterEquipBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"face\" || k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\ttry {\r\n\t\t\treturn chara.slots.body.fragments.body.textures[chara.action].length;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\ttry {\r\n\t\t\tconst d = this._raw[chara.action][chara.action_frame].delay;\r\n\t\t\tif (d != null) {!isNaN(d) && isFinite(d)\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger\r\n\t\t}\r\n\t\treturn 120;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipBody extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipCashWeapon extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.use_category = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {string} use_category - cash-weapon as [category]\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tif (!use_category && use_category != \"\") {\r\n\t\t\tthrow new TypeError(\"use_category\");\r\n\t\t}\r\n\r\n\t\tthis.use_category = use_category.slice(2, 4);\r\n\r\n\t\treturn super.load(url, id, cateInfo);\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {object} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw[this.use_category];\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url + this.use_category;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipHead extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.elfEarFragment = null;\r\n\t\tthis.lefEarFragment = null;\r\n\t\tthis.highlefEarFragment = null;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tsuper.__load_fragments()\r\n\t\t\r\n\t\tif (this.fragments) {\r\n\t\t\tif (this.fragments.ear) {\r\n\t\t\t\tthis.elfEarFragment = this.fragments.ear;\r\n\t\t\t\tdelete this.fragments.ear;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.lefEar) {\r\n\t\t\t\tthis.lefEarFragment = this.fragments.lefEar;\r\n\t\t\t\tdelete this.fragments.lefEar;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.highlefEar) {\r\n\t\t\t\tthis.highlefEarFragment = this.fragments.highlefEar;\r\n\t\t\t\tdelete this.fragments.highlefEar;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget elfEar() {\r\n\t\treturn this.fragments.ear != null;\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (!this.elfEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.ear = this.elfEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.ear;\r\n\t\t}\r\n\t}\r\n\r\n\tget lefEar() {\r\n\t\treturn this.fragments.lefEar != null;\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (!this.lefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.lefEar = this.lefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.lefEar;\r\n\t\t}\r\n\t}\r\n\r\n\tget highlefEar() {\r\n\t\treturn this.fragments.highlefEar != null;\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (!this.highlefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.highlefEar = this.highlefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.highlefEar;\r\n\t\t}\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipHair extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * hair color mix\r\n\t * @override\r\n\t */\r\n\tget FragmentTextureType() {\r\n\t\treturn HairFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipFaceBase extends CharacterEquipBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\ttry {\r\n\t\t\treturn chara.slots.face.fragments.face.textures[chara.emotion].length;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\ttry {\r\n\t\t\tconst d = this._raw[chara.emotion][chara.emotion_frame].delay;\r\n\t\t\tif (d != null) {//!isNaN(d) && isFinite(d)\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n}\r\nclass CharacterEquipFace extends CharacterEquipFaceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"emotion\";\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterFaceFragment;\r\n\t}\r\n}\r\nclass CharacterEquipFaceAcc extends CharacterEquipFaceBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"emotion\";\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterFaceFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterTamingMob extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget actionMap() {\r\n\t\treturn this._raw.characterAction;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\ttry {\r\n\t\t\treturn chara.slots.body.fragments.body.textures[chara._ride_action].length;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\ttry {\r\n\t\t\tconst d = Math.trunc(this._raw[chara._ride_action][chara.action_frame].delay);//?? _ride_action_frame => action_frame\r\n\t\t\tif (Number.isSafeInteger(d)) {\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger\r\n\t\t}\r\n\t\treturn 120;\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\treturn \"_ride_action\";\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterTamingMobFragment;\r\n\t}\r\n}\r\n\r\nItemCategoryInfo._info['0000'].fragmentType = CharacterEquipBody;\r\nItemCategoryInfo._info['0001'].fragmentType = CharacterEquipHead;\t//\telfEar\r\nItemCategoryInfo._info['0002'].fragmentType = CharacterEquipFace;\t//\tFace\r\nItemCategoryInfo._info['0003'].fragmentType = CharacterEquipHair;\t//\tCharacterEquipHair;\t//\tHair\r\nItemCategoryInfo._info['0004'].fragmentType = CharacterEquipHair;\t//\tCharacterEquipHair;\t//\tHair\r\n\r\nItemCategoryInfo._info['0100'].fragmentType = CharacterEquipBody;\t\t//\tCap\r\nItemCategoryInfo._info['0101'].fragmentType = CharacterEquipFaceAcc;//\taccessoryFace\r\nItemCategoryInfo._info['0102'].fragmentType = CharacterEquipBody;\t\t//\taccessoryEyes\r\nItemCategoryInfo._info['0103'].fragmentType = CharacterEquipBody;\t\t//\taccessoryEars\r\nItemCategoryInfo._info['0104'].fragmentType = CharacterEquipBody;\t\t//\tCoat\r\nItemCategoryInfo._info['0105'].fragmentType = CharacterEquipBody;\t\t//\tLongcoat\r\nItemCategoryInfo._info['0106'].fragmentType = CharacterEquipBody;\t\t//\tPants\r\nItemCategoryInfo._info['0107'].fragmentType = CharacterEquipBody;\t\t//\tShoes\r\nItemCategoryInfo._info['0108'].fragmentType = CharacterEquipBody;\t\t//\tGlove\r\nItemCategoryInfo._info['0109'].fragmentType = CharacterEquipBody;\t\t//\tShield\r\nItemCategoryInfo._info['0110'].fragmentType = CharacterEquipBody;\t\t//\tCape\r\n\r\nItemCategoryInfo._info['0170'].fragmentType = CharacterEquipCashWeapon;\t\t//\tcash-weapon\r\n\r\nItemCategoryInfo._info['019'].fragmentType = CharacterTamingMob;\r\n\r\nclass CharacterSlots {\r\n\tconstructor() {\r\n\t\t\t\r\n\t\t/** @type {CharacterEquipBase[]} */\r\n\t\tthis._ordered_slot = [];\r\n\r\n\r\n\t\t/** @type {CharacterEquipHair} */\r\n\t\tthis._hair = null;\r\n\t\t/** @type {CharacterEquipHair} */\r\n\t\tthis._hair2 = null;\r\n\t\t/** @type {CharacterEquipHair} 0~1.0 */\r\n\t\tthis._hairMix2 = null;\r\n\t\t/** @type {CharacterEquipHair} */\r\n\t\tthis._hair3 = null;\r\n\t\t/** @type {CharacterEquipHair} 0~1.0 */\r\n\t\tthis._hairMix3 = null;\r\n\r\n\r\n\t\t/** @type {CharacterEquipBody} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.head = null;\r\n\r\n\t\t/** @type {CharacterEquipFace} */\r\n\t\tthis.face = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.hair = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 1 */\r\n\t\tthis.cap = null;\r\n\r\n\t\t/** @type {CharacterEquipFace} - 2 */\r\n\t\tthis.accessoryFace = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 3*/\r\n\t\tthis.accessoryEyes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 4 */\r\n\t\tthis.accessoryEars = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.coat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.longcoat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 6 */\r\n\t\tthis.pants = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 7 */\r\n\t\tthis.shoes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 8 */\r\n\t\tthis.glove = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 9 */\r\n\t\tthis.cape = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 10 */\r\n\t\tthis.shield = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 11 */\r\n\t\tthis.weapon = null;\r\n\t\t\r\n\t\t/** @type {CharacterTamingMob} */\r\n\t\tthis.tamingMob = null;\r\n\t\t\r\n\t\t{\r\n\t\t\tObject.defineProperty(this, \"_ordered_slot\", {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: []\r\n\t\t\t});\r\n\r\n\t\t\tObject.defineProperty(this, \"_hair\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair2\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix2\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair3\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix3\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {CharacterEquipHair} */\r\n\tget hair() {\r\n\t\treturn this._hair;\r\n\t}\r\n\tset hair(value) {\r\n\t\tthis._hair = value;\r\n\t\tif (value) {\r\n\t\t\tif (this._hair2 && this._hairMix2) {\r\n\t\t\t\tthis.hairColor2 = this.hairColor2;\r\n\t\t\t\tthis.hairMix2 = this.hairMix2;\r\n\t\t\t}\r\n\t\t\tif (this._hair3 && this._hairMix3) {\r\n\t\t\t\tthis.hairColor3 = this.hairColor3;\r\n\t\t\t\tthis.hairMix3 = this.hairMix3;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync __loadColoredHair(color) {\r\n\t\tconst id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tconst url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\" : \"\") + id}`;\r\n\t\t\tconst use_category = undefined;\r\n\r\n\t\t\tlet hair = new CharacterEquipHair();\r\n\r\n\t\t\tawait hair.load(url, id, cateInfo, use_category);\r\n\r\n\t\t\treturn hair;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget hairColor2() {\r\n\t\tif (this._hair2) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair2.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor2(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc2Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair2 || hc2Id != this._hair2.id) {\r\n\t\t\tif (hc2Id == this._hair.id) {\r\n\t\t\t\tthis._hair2 = null;\r\n\t\t\t\tthis.hairMix2 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair2 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair2.then(hair2 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair2;\r\n\r\n\t\t\t\t\tthis._hair2 = hair2;\r\n\t\t\t\t\tif (this._hair2 && this.hairMix2 != null) {\r\n\t\t\t\t\t\tthis.hairMix2 = this.hairMix2;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix2 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairMix2() {\r\n\t\treturn this._hairMix2;\r\n\t}\r\n\tset hairMix2(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair2).then(() => {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this._hair2;\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph2 = ft;\r\n\t\t\t\t\t\t\tori.graph2.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix2 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairColor3() {\r\n\t\tif (this._hair3) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair3.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor3(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc3Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair3 || this._hair3.id != hc3Id) {\r\n\t\t\tif (this._hair.id == hc3Id || this._hair2.id == hc3Id) {\r\n\t\t\t\tthis._hair3 = null;\r\n\t\t\t\tthis.hairMix3 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair3 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair3.then(hair3 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair3;\r\n\r\n\t\t\t\t\tthis._hair3 = hair3;\r\n\t\t\t\t\tif (this._hair3 && this.hairMix3 != null) {\r\n\t\t\t\t\t\tthis.hairMix3 = this.hairMix3;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix3 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hairMix3() {\r\n\t\treturn this._hairMix3;\r\n\t}\r\n\tset hairMix3(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair3).then(() => {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this._hair3;\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph3 = ft;\r\n\t\t\t\t\t\t\tori.graph3.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix3 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t//__order_slot() {\r\n\t//\tlet slot_map = new Map();\r\n\t//\r\n\t//\tfor (let i in this) {\r\n\t//\t\tlet equip = this[i];\r\n\t//\r\n\t//\t\tequip.cs\r\n\t//\t}\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {CharacterEquipBase} loadedEquip\r\n\t * @param {string} use_category - category which used of cash-weapon\r\n\t */\r\n\tasync _use(id, loadedEquip, use_category) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tlet url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\":\"\") + id}`;\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item;\r\n\r\n\t\t\tif (loadedEquip instanceof CharacterEquipBase) {\r\n\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\tdebugger;\r\n\t\t\t\titem = loadedEquip;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (loadedEquip) {\r\n\t\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tconst fragmentType = cateInfo.fragmentType || CharacterEquip;\r\n\r\n\t\t\t\titem = new fragmentType();\r\n\t\t\t}\r\n\t\t\t/** _use_loaded_equip */\r\n\t\t\tif (0) {\r\n\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t}\r\n\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t}\r\n\r\n\t\t\tlet is_exist = loadedEquip || await item.load(url, id, cateInfo, use_category);\r\n\t\t\tif (is_exist) {\r\n\t\t\t\t/** _use_loaded_equip */\r\n\t\t\t\tif (1) {\r\n\t\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.warn(\"item(\" + id + \") is not exist\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {boolean}\r\n\t */\r\n\t_unuse(id) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet cateInfo, equip;\r\n\r\n\t\tif (id instanceof CharacterEquipBase) {\r\n\t\t\tequip = id;\r\n\t\t\tid = equip.id;\r\n\t\t\tcateInfo = equip.categoryInfo;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcateInfo = ItemCategoryInfo.get(id);\r\n\t\t}\r\n\t\t\r\n\t\tconst slotName = cateInfo.slot;\r\n\r\n\t\tif (slotName != \"head\" && slotName != \"body\") {\r\n\t\t\tif (this[slotName] && this[slotName].id == id) {\r\n\t\t\t\tequip = this[slotName];\r\n\t\t\t\tfor (let slot in equip.islot) {\r\n\t\t\t\t\tlet order = equip.islot[slot];\r\n\t\t\t\t\tif (this._ordered_slot[order]) {\r\n\t\t\t\t\t\tthis._ordered_slot[order]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._ordered_slot[order];\r\n\t\t\t\t}\r\n\t\t\t\tthis[slotName] = null;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t_clear() {\r\n\t\t//this.body = null;\r\n\t\t//this.head = null;\r\n\t\tthis.face = null;\r\n\t\tthis.hair = null;\r\n\t\tthis.cap = null;\r\n\t\tthis.accessoryFace = null;\r\n\t\tthis.accessoryEyes = null;\r\n\t\tthis.accessoryEars = null;\r\n\t\tthis.coat = null;\r\n\t\tthis.longcoat = null;\r\n\t\tthis.pants = null;\r\n\t\tthis.shoes = null;\r\n\t\tthis.glove = null;\r\n\t\tthis.cape = null;\r\n\t\tthis.shield = null;\r\n\r\n\t\t//temp\r\n\t\tlet head = this.head;\r\n\t\tlet body = this.body;\r\n\r\n\t\t//clear\r\n\t\tthis._ordered_slot = [];\r\n\r\n\t\t//restore\r\n\t\tif (head) {\r\n\t\t\tthis._ordered_slot[head.slot_order] = head;\r\n\t\t}\r\n\t\tif (body) {\r\n\t\t\tthis._ordered_slot[body.slot_order] = body;\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify() {\r\n\t\tlet slots = [\"c\"];\r\n\t\t\t\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id + \"|\" + this.face.id);\r\n\t\tif (this.hair) {\r\n\t\t\tlet ha = [];\r\n\t\t\tha.push(this.hair.id);\r\n\t\t\tif (this.hairColor2 && this.hairMix2 > 0) ha.push(this.hairColor2 + \"%\" + Math.trunc(this.hairMix2 * 100));\r\n\t\t\tif (this.hairColor3 && this.hairMix3 > 0) ha.push(this.hairColor3 + \"%\" + Math.trunc(this.hairMix3 * 100));\r\n\t\t\tslots.push(ha.join(\"|\"));\r\n\t\t}\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots.join(\",\");\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\tlet slots = [];\r\n\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id);\r\n\t\tif (this.hair) slots.push(this.hair.id);\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots;\r\n\t}\r\n\r\n\t/**\r\n\t * returns: [face, hair, cap, ..., weapon]\r\n\t */\r\n\t*enumerate() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.hair) yield this.hair;\r\n\r\n\t\tyield* this.enumerate_equip();\r\n\t}\r\n\t*enumerate_equip() {\r\n\t\tif (this.cap) yield this.cap;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t\tif (this.accessoryEyes) yield this.accessoryEyes;\r\n\t\tif (this.accessoryEars) yield this.accessoryEars;\r\n\t\tif (this.coat) yield this.coat;\r\n\t\tif (this.longcoat) yield this.longcoat;\r\n\t\tif (this.pants) yield this.pants;\r\n\t\tif (this.shoes) yield this.shoes;\r\n\t\tif (this.glove) yield this.glove;\r\n\t\tif (this.shield) yield this.shield;\r\n\t\tif (this.cape) yield this.cape;\r\n\t\tif (this.weapon) yield this.weapon;\r\n\t}\r\n\t*enumerate_face() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t}\r\n}\r\n\r\nclass CharacterChangeLog {\r\n\tconstructor() {\r\n\t\t/** @type {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\t\tthis.ear = undefined;\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.useEquip = [];\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.unuseEquip = [];\r\n\t\t\r\n\t\t/** @type {string} - hair2 id */\r\n\t\tthis.hair2 = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.hairMix2 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hair3 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hairMix3 = undefined;\r\n\r\n\t\t/** @type {string} weapon => equip id */\r\n\t\tthis.weapon = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.ear = undefined;\r\n\t\tthis.useEquip = [];\r\n\t\tthis.unuseEquip = [];\r\n\t\tthis.hair2 = undefined;\r\n\t\tthis.hairMix2 = undefined;\r\n\t\t//this.hair3 = undefined;\r\n\t\t//this.hairMix3 = undefined;\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n}\r\n\r\nexport class CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tthis._$dirty = 0;//force update vue\r\n\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.job = null;\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.subJob = null;\r\n\r\n\t\t/** @type {ActionAnimation} */\r\n\t\tthis.actani = new ActionAnimation();\r\n\r\n\t\t/** @type {number} - animation speed rate */\r\n\t\tthis.speed = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.fixed_speed = false;\r\n\r\n\t\tthis._ride_action = \"stand1\";\r\n\t\t\r\n\t\tthis._action = \"stand1\";\r\n\t\tthis._action_frame = 0;\r\n\t\tthis._action_time = 0;\r\n\r\n\t\tthis._emotion = \"blink\";\r\n\t\tthis._emotion_frame = 0;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis._emotion_frame_sequence = [0, 1, 2, 1];\r\n\r\n\t\t/** @type {CharacterSlots} */\r\n\t\tthis.slots = new CharacterSlots();\r\n\r\n\t\t/**\r\n\t\t * is require update render data\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.__require_update = true;\r\n\r\n\t\t/** @type {FragmentTexture[]} */\r\n\t\tthis.__frag_list = [];\r\n\r\n\t\t/** @type {CharacterChangeLog} **/\r\n\t\tthis.$$changeLog = new CharacterChangeLog();\r\n\t}\r\n\r\n\t_clone() {\r\n\t\talert(this.constructor.name + \"::_clone\");\r\n\r\n\t\t/** @type {CharacterAnimationBase} */\r\n\t\tlet nc = new this.constructor();//not must CharacterRender\r\n\t\tif (!nc) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnc.speed = 0;\r\n\r\n\t\tnc.x = this.x;\r\n\t\tnc.y = this.y;\r\n\t\tnc.angle = this.angle;\r\n\r\n\t\tnc.action = this.action;\r\n\t\tnc.action_frame = this.action_frame;\r\n\r\n\t\tnc.emotion = this._emotion;\r\n\t\tnc.emotion_frame = this.emotion_frame;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tnc.slots[i] = this.slots[i];//not need colne ?\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nc;\r\n\t}\r\n\t\t\r\n\t_waitFrameTexturesLoaded() {\r\n\t\tlet tasks = [];\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tif (typeof item.getFrameCount != \"function\") {\r\n\t\t\t\t\talert('typeof item.getFrameCount != \"function\"');\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tlet count = item.getFrameCount(this);\r\n\t\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\t\tlet frag = item.fragments[j];\r\n\t\t\t\t\tfor (let k = 0; k < count; ++k) {\r\n\t\t\t\t\t\tlet ft = frag.getFrameTexture(this, k);\r\n\t\t\t\t\t\tif (ft && !ft._isLoaded_or_doload()) {\r\n\t\t\t\t\t\t\ttasks.push(ft.$promise);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * init animation status\r\n\t */\r\n\tinitAnimation() {\r\n\t\t/** @type {string} */\r\n\t\tthis.action = \"stand1\";\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._action_time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._action_frame = 0;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.emotion = \"blink\";\r\n\t\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_frame = 0;\r\n\t}\r\n\r\n\t/** @type {number} - 0~1 */\r\n\tgetSpeed() {\r\n\t\treturn this.fixed_speed ? 1 : this.speed;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget elfEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.elfEar;\r\n\t\t}\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.elfEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget lefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar;\r\n\t\t}\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.lefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget highlefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.highlefEar;\r\n\t\t}\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.highlefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\tget ear() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar ? \"lef\" : (this.slots.head.elfEar ? \"elf\" : (this.slots.head.highlefEar ? \"highlef\" : \"human\"));\r\n\t\t}\r\n\t}\r\n\tset ear(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tif (value == \"elf\") {\r\n\t\t\t\tthis.slots.head.elfEar = true;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"lef\") {\r\n\t\t\t\tthis.slots.head.lefEar = true;\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"highlef\") {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = true;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = \"human\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.$$changeLog.ear = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget action() {\r\n\t\treturn this._action;\r\n\t}\r\n\tset action(act) {\r\n\t\tif (this.slots.tamingMob) {\r\n\t\t\tlet _act;\r\n\r\n\t\t\tthis._ride_action = act;\r\n\r\n\t\t\tif (this.slots.tamingMob.actionMap) {\r\n\t\t\t\t_act = this.slots.tamingMob.actionMap[act];\r\n\t\t\t}\r\n\t\t\t//else {\r\n\t\t\t//\t_act = \"sit\";\r\n\t\t\t//}\r\n\r\n\t\t\tlet hideBody = _act == \"hideBody\";\r\n\r\n\t\t\tif (_act && !hideBody) {\r\n\t\t\t\tthis._action = _act;\r\n\r\n\t\t\t\tif (this.actani._action != _act) {\r\n\t\t\t\t\tthis.actani.reload(_act);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._action = act;\r\n\r\n\t\t\t\tif (hideBody) {\r\n\t\t\t\t\tif (this.actani._action != act) {\r\n\t\t\t\t\t\t//TODO: hideBody\r\n\t\t\t\t\t\tthis.actani.reload(act);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.actani.reload(\"sit\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.actani._action != act && this.slots.body) {\r\n\t\t\tthis._action = act;\r\n\t\t\tthis.actani.reload(act);\r\n\r\n\t\t\tthis.__require_update |= true;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame() {\r\n\t\tconst frame_count = this.action_frame_count;\r\n\t\tif (frame_count) {\r\n\t\t\treturn this._action_frame % frame_count;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\tset action_frame(value) {\r\n\t\tthis._action_time = 0;\r\n\t\tthis._action_frame = value;\r\n\t\tthis.__require_update |= true;\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._action_frame = Number(value) | 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} next\r\n\t */\r\n\t_get_action_next_frame(next) {\r\n\t\tconst frame_count = this.action_frame_count;\r\n\t\tif (frame_count) {\r\n\t\t\tlet f = this._action_frame + next;\r\n\t\t\treturn f < 0 ? (frame_count - 1) : (f % frame_count);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_time() {\r\n\t\treturn this._action_time;\r\n\t}\r\n\tset action_time(time) {\r\n\t\tconst frame_count = this.action_frame_count;\r\n\r\n\t\tif (frame_count) {\r\n\t\t\tif (time < this.action_delay) {\r\n\t\t\t\tthis._action_time = time;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._action_time = 0;\r\n\t\t\t\t++this._action_frame;\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget action_delay() {\r\n\t\tif (this.slots.body) {\r\n\t\t\treturn this.slots.body.getDelay(this);\r\n\t\t}\r\n\t\treturn 180;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.body) {\r\n\t\t\t\treturn this.slots.body.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget emotion() {\r\n\t\treturn this._emotion;\r\n\t}\r\n\tset emotion(emo) {\r\n\t\tif (this._emotion != emo && this.slots.face && this.slots.face.fragments.face.textures[emo]) {\r\n\t\t\tthis._emotion = emo;\r\n\t\t\tthis._emotion_frame = 0;\r\n\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\tthis._emotion_frame_sequence = [...circularSequence(this.emotion_frame_count)];\r\n\r\n\t\t\tthis.__require_update |= true;\r\n\t\t}\r\n\t}\r\n\r\n\t*emotion_frame_sequence_generator(length) {\r\n\t\tfor (; ;) {\r\n\t\t\tyield* circularSequence(length);\r\n\r\n\t\t\tfor (; Math.random() < 0.5;) {\r\n\t\t\t\tyield 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t/** @type {number} */\r\n\tget emotion_frame() {\r\n\t\tlet f = this._emotion_frame_sequence[this._emotion_frame % this._emotion_frame_sequence.length];\r\n\t\treturn f;\r\n\t}\r\n\tset emotion_frame(value) {\r\n\t\tthis._emotion_frame = value;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis.__require_update |= true;\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._emotion_frame = Number(value) | 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} next\r\n\t */\r\n\t_get_emotion_next_frame(next) {\r\n\t\tlet f = this._emotion_frame + next;\r\n\t\tf = f < 0 ? (this._emotion_frame_sequence.length - 1) : (f % this._emotion_frame_sequence.length);\r\n\t\treturn this._emotion_frame_sequence[f];\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_time() {\r\n\t\treturn this._emotion_time;\r\n\t}\r\n\tset emotion_time(time) {\r\n\t\tif (this.emotion_frame_count) {\r\n\t\t\tif (time < this.emotion_delay) {\r\n\t\t\t\tthis._emotion_time = time;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\t\t++this._emotion_frame;\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget emotion_delay() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn this.slots.face.getDelay(this);\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.face) {\r\n\t\t\t\treturn this.slots.face.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp - 0 <= stamp < Infinity\r\n\t */\r\n\t_update(_stamp) {\r\n\t\tlet stamp = _stamp * this.getSpeed();\r\n\t\t\r\n\t\tif (this.actani) {\r\n\t\t\tif (this.actani.isEnd() && this.actani.loop) {\r\n\t\t\t\tthis.actani.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.actani.update(stamp, this);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.action_time += stamp;\r\n\t\t}\r\n\r\n\t\tthis.emotion_time += _stamp;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet equip = this.slots[i];\r\n\t\t\tif (equip && equip.effect && equip.effect.enable) {\r\n\t\t\t\tequip.effect.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis._update(stamp);\r\n\t}\r\n\r\n\t__forceUpdate(stamp) {\r\n\t\tthis._$dirty = Math.random();\r\n\t\tthis._update(stamp | 0);\r\n\t\tthis.__update_frag_list();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} x\r\n\t * @param {number} y, \r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\t_draw(renderer, x, y, angle, flip) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\tif (this.__require_update) {\r\n\t\t\tthis.__update_frag_list();\r\n\t\t\tthis.__require_update = false;\r\n\t\t}\r\n\r\n\t\t//list.filter(a=>a&&a._raw.map).forEach(a=>{ for (let i in a._raw.map) { if (q[i]) { q[i].push(a); } else { q[i] = [a]; } } })\r\n\t\tthis.__draw_list(renderer, this.__frag_list, x, y, angle, flip);\r\n\r\n\t\trenderer.popGlobalAlpha();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {FragmentTexture[]} list\r\n\t */\r\n\t__draw_list(renderer, list, x, y, angle, flip) {\r\n\t\trenderer.pushMatrix();\r\n\r\n\t\trenderer.translate(x, y);\r\n\t\t\r\n\t\tif (0) {\r\n\t\t\tlet ctx = renderer.ctx;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(100, 0);\r\n\t\t\tctx.strokeStyle = \"#F00\";\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(0, 100);\r\n\t\t\tctx.strokeStyle = \"#0F0\";\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t\trenderer.rotate(window.m_a || angle);\r\n\r\n\t\tif (flip) {\r\n\t\t\trenderer.scale(-1, 1);\r\n\t\t}\r\n\t\t//{\r\n\t\t//\tlet ctx = renderer.ctx;\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(100, 0);\r\n\t\t//\tctx.strokeStyle = \"#F00\";\r\n\t\t//\tctx.stroke();\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(0, 100);\r\n\t\t//\tctx.strokeStyle = \"#0F0\";\r\n\t\t//\tctx.stroke();\r\n\t\t//}\r\n\r\n\t\t{\r\n\t\t\tfor (let i in this.slots) {\r\n\t\t\t\tlet equip = this.slots[i];\r\n\t\t\t\tif (equip && equip.effect) {\r\n\t\t\t\t\tequip.effect.render(renderer, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i in list) {\r\n\t\t\t\tlet ft = list[i];\r\n\t\t\t\tft.render(renderer, this);\r\n\t\t\t}\r\n\t\t}\r\n\t\trenderer.popMatrix();\r\n\t}\r\n\t__update_frag_list() {\r\n\t\tthis.__frag_list = [];\r\n\t\t\r\n\t\t/** @type {Array<CharacterEquipBase>[]} */\r\n\t\tlet slots = {};\r\n\t\t\r\n\t\tfor (let i = 2; i <= 3; ++i) {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this.slots[\"_hair\" + i];\r\n\t\t\t\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\t\tfor (let i in this.slots._ordered_slot) {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this.slots._ordered_slot[i];\r\n\t\t\t\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\t\t\r\n\t\t{//back\r\n\t\t\tlet is_back = false;\r\n\t\t\t\r\n\t\t\tfor (let i in slots) {\r\n\t\t\t\t/** @type {FragmentTexture[]} */\r\n\t\t\t\tlet fts = slots[i];\r\n\t\t\t\tfor (let j in fts) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = fts[j];\r\n\t\t\t\t\tif (is_back) {\r\n\t\t\t\t\t\tif (ft._place.startsWith(\"face\")) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ft._place.startsWith(\"backHair\")) {\r\n\t\t\t\t\t\tis_back = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t{\r\n\t\t\tlet ae = this.__frag_list[114];//HACK: Ae\r\n\t\t\tif (ae) {\r\n\t\t\t\tthis.__frag_list.push(ae);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._calcBoundBox();\r\n\t}\r\n\t/**\r\n\t * @param {Array<CharacterEquipBase>[]} slots\r\n\t * @param {CharacterEquipBase} item\r\n\t */\r\n\t__add_equip_to_frag_list(slots, item) {\r\n\t\t// if equip not use then value is mumber(slot_order) where this.slots._ordered_slot\r\n\t\tif (item == null) {\r\n\t\t\treturn;//debugger;\r\n\t\t}\r\n\t\telse if (item > 0) {// typeof item == 'number'; item != null && (item instanceof CharacterEquipBase || item >= 0)\r\n\t\t\treturn;//continue;\r\n\t\t}\r\n\r\n\t\t// init slots\r\n\t\tfor (let j in item.vslot) {\r\n\t\t\tlet slot = item.vslot[j];\r\n\t\t\tslots[slot] = [];\r\n\t\t}\r\n\r\n\t\tfor (let j in item.fragments) {//foreach equip place\r\n\t\t\tlet slot = sMap[j];\r\n\t\t\tif (slot != null) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (j == \"default\") {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tslot = item._raw.info.islot;\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//item.fragments[j].is_show = true;\r\n\t\t}\r\n\t}\r\n\t/** @param {FragmentTexture} ft */\r\n\t__add_frag_to_list(ft) {\r\n\t\tft.update(this);\r\n\t\tthis.__frag_list[ft.z] = ft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * calc current frame bound box and restore result\r\n\t * @returns {Rectangle}\r\n\t */\r\n\t_calcBoundBox() {\r\n\t\tlet left = 0, top = 0, right = 0, bottom = 0;\r\n\r\n\t\tfor (let i in this.__frag_list) {\r\n\t\t\tlet ft = this.__frag_list[i];\r\n\t\t\tif (ft.texture) {\r\n\t\t\t\tlet x0 = ft.relative.x;\r\n\t\t\t\tlet y0 = ft.relative.y;\r\n\t\t\t\tlet x1 = x0 + ft.width;\r\n\t\t\t\tlet y1 = y0 + ft.height;\r\n\r\n\t\t\t\tleft = Math.min(left, x0);\r\n\t\t\t\ttop = Math.min(top, y0);\r\n\t\t\t\tright = Math.max(right, x1);\r\n\t\t\t\tbottom = Math.max(bottom, y1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._boundBox = new Rectangle(\r\n\t\t\tMath.trunc(left),\r\n\t\t\tMath.trunc(top),\r\n\t\t\tMath.trunc(right - left),\r\n\t\t\tMath.trunc(bottom - top)\r\n\t\t);\r\n\t\treturn this._boundBox;\r\n\t}\r\n\t\r\n\ttoJSON() {\r\n\t\tlet obj = {\r\n\t\t\thair2: this.slots._hair2.id,\r\n\t\t\thairMix2: this.slots.hairMix2,\r\n\t\t\tslots: this.slots.toJSON(),\r\n\t\t};\r\n\r\n\t\tif (this.slots.head.elfEar) {\r\n\t\t\tobj.ear = \"elf\";\r\n\t\t}\r\n\t\telse if (this.slots.head.lefEar) {\r\n\t\t\tobj.ear = \"lef\";\r\n\t\t}\r\n\t\telse if (this.slots.head.highlefEar) {\r\n\t\t\tobj.ear = \"highlef\";\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nexport class CharacterRenderer extends CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {number} - position x */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} - position y */\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {number} - where layer */\r\n\t\tthis.z = 5;\r\n\r\n\t\t/** @type {number} - translate x once frame */\r\n\t\tthis.tx = 0;\r\n\t\t/** @type {number} - translate y once frame */\r\n\t\tthis.ty = 0;\r\n\t\t\r\n\t\tthis.angle = 0;\r\n\t\tthis.front = -1;\r\n\r\n\t\t/** @type {Promise<void>[]} */\r\n\t\tthis.__load_task = [];\r\n\r\n\t\t/** @type {function(IRenderer)} */\r\n\t\tthis.render = function (renderer) {\r\n\t\t\t//not ready to render\r\n\t\t\t//if load then set load render = _render\r\n\t\t}\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis._boundBox = null;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\tlet result = await Promise.all([\r\n\t\t\t$get.data(\"/zmap\"),\r\n\t\t\t$get.data(\"/smap\"),\r\n\t\t\tItemEffect.Init(),\r\n\t\t\tActionAnimation.Init(),//action definition\r\n\t\t]);\r\n\t\t\r\n\t\tzMap = {};\r\n\t\tObject.keys(result[0]).reverse().forEach((k, i) => zMap[k] = i + 1);\r\n\r\n\t\tsMap = result[1];\r\n\t}\r\n\r\n\tload() {\r\n\t\t//load body and head for calc relative position\r\n\t\tthis.use(\"00002012\");\r\n\t\tthis.use(\"00012012\");\r\n\r\n\t\tlet $promise = Promise.all([...this.__load_task]);\r\n\t\t(function (that, $promise) {\r\n\t\t\t$promise.then(function (result) {\r\n\t\t\t\tthat.initAnimation();\r\n\t\t\t\tthat.render = that._render;\r\n\t\t\t});\r\n\t\t})(this, $promise);\r\n\r\n\t\treturn $promise;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.waitLoaded();\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_render(renderer) {\r\n\t\tconst x = Math.trunc(this.x + this.tx);\r\n\t\tconst y = Math.trunc(this.y + this.ty);\r\n\t\t\r\n\t\tthis._draw(renderer, x, y, this.angle, this.front > 0);\r\n\t\t\r\n\t\t//this.tx = 0;//auto clear\r\n\t\t//this.ty = 0;//auto clear\r\n\t}\r\n\t\r\n\t_setup_test() {\r\n\t\tthis.use(\"00026509\");\r\n\r\n\t\tthis.use(\"00044041\");\r\n\r\n\t\t//this.use(\"01022274\");\r\n\r\n\t\tthis.use(\"01053169\");\r\n\r\n\t\tthis.use(\"01071077\");\r\n\r\n\t\t//this.use(\"01102960\");\r\n\t}\r\n\r\n\t\r\n\tasync __synchronize(stamp) {\r\n\t\tthis.__forceUpdate(stamp);\r\n\t\r\n\t\tawait this.waitLoaded();\r\n\t\tawait this._waitFrameTexturesLoaded();\r\n\t}\r\n\tasync waitLoaded() {\r\n\t\tlet tasks = this.__load_task;\r\n\t\tif (tasks && tasks.length) {\r\n\t\t\tawait Promise.all(tasks).then(() => {\r\n\t\t\t\tthis.__load_task = [];\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t//isLoading() {\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {string} category - category of cash-weapon\r\n\t */\r\n\tasync use(id, category) {\r\n\t\tif (!category) {\r\n\t\t\tcategory = ItemCategoryInfo.getJobWeaponCategory(this.job);\r\n\t\t}\r\n\t\tconst item_type = id[0];\r\n\t\tswitch (item_type) {\r\n\t\t\tcase \"0\"://equip\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ItemCategoryInfo.isCashWeapon(id)) {\r\n\t\t\t\t\t\t//this.$$changeLog.weaponType = ss[1];/??\r\n\t\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\r\n\t\t\t\t\tlet task = this.slots._use(id, null, category);\r\n\t\t\t\t\tthis.__load_task.push(task);\r\n\t\t\t\t\tawait task;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (id.startsWith(\"019\")) {\r\n\t\t\t\t\t\tthis.action = this.action;//force update action\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.__update_frag_list();\r\n\t\t\t\t\tthis._calcBoundBox();\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tunuse(id) {\r\n\t\tdebugger;\r\n\t\tif (id[0] == \"0\") {//equip\r\n\t\t\tlet result = this.slots._unuse(id);\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.$$changeLog.unuseEquip.push(id);\r\n\t\t\t\tthis._calcBoundBox();\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t_parse(code) {\r\n\t\tif (!code) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet es = code.split(\",\");\r\n\t\tthis.slots._clear();\r\n\t\tes.forEach((v, i, a) => {\r\n\t\t\tif (v.indexOf(\"|\") >= 0) {\r\n\t\t\t\tconst ss = v.split(\"|\");\r\n\t\t\t\tconst cate = ItemCategoryInfo.get(ss[0]);\r\n\t\t\t\tlet id;\r\n\t\t\t\tif (cate.slot == \"face\") {\r\n\t\t\t\t\tid = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"hair\") {\r\n\t\t\t\t\tconst slots = this.slots;\r\n\t\t\t\t\tlet h2 = ss[1];\r\n\t\t\t\t\tlet h3 = ss[2];\r\n\t\t\t\t\t//\r\n\t\t\t\t\tid = ss[0];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id).then(() => {\r\n\t\t\t\t\t\tif (h2 && h2.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h2.split(\"%\");\r\n\t\t\t\t\t\t\tconst c2 = hc[0];\r\n\t\t\t\t\t\t\tconst m2 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair2 = c2;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix2 = m2;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor2 = c2;\r\n\t\t\t\t\t\t\tslots.hairMix2 = m2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (h3 && h3.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h3.split(\"%\");\r\n\t\t\t\t\t\t\tconst c3 = hc[0];\r\n\t\t\t\t\t\t\tconst m3 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair3 = c3;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix3 = m3;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor3 = hc[0];\r\n\t\t\t\t\t\t\tslots.hairMix4 = hc[1] / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"weapon\") {\r\n\t\t\t\t\tthis.$$changeLog.weaponType = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t\tthis.use.apply(this, ss, ss[1]);//this.use(ss[0], ss[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (Number.isFinite(parseInt(v, 10))) {\r\n\t\t\t\tthis.use(v);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @type {string} col\r\n\t */\r\n\tget hairColor() {\r\n\t\tif (this.slots.hair) {\r\n\t\t\treturn CharacterRenderConfig.getHairColor(this.slots.hair.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset hairColor(col) {\r\n\t\tif (this.slots.hair && col != this.hairColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorHairID(this.slots.hair.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} col\r\n\t */\r\n\tget faceColor() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn CharacterRenderConfig.getFaceColor(this.slots.face.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset faceColor(col) {\r\n\t\tif (this.slots.face && col != this.faceColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorFaceID(this.slots.face.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterChangeLog} changeLog\r\n\t */\r\n\tcommitChange(changeLog) {\r\n\t\tif (changeLog.ear) {\r\n\t\t\tthis.ear = changeLog.ear;\r\n\t\t}\r\n\r\n\t\tif (this.useEquip) {\r\n\t\t\tfor (let id of this.useEquip) {\r\n\t\t\t\tthis.use(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.unuseEquip) {\r\n\t\t\tfor (let id of this.unuseEquip) {\r\n\t\t\t\tthis.unuse(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair2 && changeLog.hairMix2) {\r\n\t\t\tthis.slots.hairColor2 = changeLog.hair2;\r\n\t\t\tthis.slots.hairMix2 = changeLog.hairMix2;\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair3 && changeLog.hairMix3) {\r\n\t\t\t//this.slots.hairColor3 = changeLog.hair3;\r\n\t\t\t//this.slots.hairMix3 = changeLog.hairMix3;\r\n\t\t}\r\n\t\t\r\n\t\tif (changeLog.weapon && changeLog.weaponType) {\r\n\t\t\tthis.use(changeLog.weapon, changeLog.weaponType);\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify(genCode) {\r\n\t\tlet result = this.slots._stringify();\r\n\t\tif (genCode) {\r\n\t\t\treturn `chara._parse('${result}')`;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_outlink() {\r\n\t\tif (this.slots.body && this.slots.body.id && this.slots.face && this.slots.face.id && this.action && this.emotion) {\r\n\t\t\tlet link = \"https://labs.maplestory.io/api/GMS/latest/character/center/\" + this.slots.body.id + \"/\";\r\n\t\t\tlet slots = [...this.slots.enumerate()].map(a => parseInt(a.id, 10));\r\n\r\n\t\t\tslots[0] = this.slots.face.id + \":\" + this.emotion;\r\n\r\n\t\t\tlink += slots.join(\",\");\r\n\r\n\t\t\tlink += \"/\" + this.action + \"?showears=\" + (this.elfEar ? \"true\" : \"false\");\r\n\r\n\t\t\tlink += \"&showLefEars=\" + (this.lefEar ? \"true\" : \"false\");\r\n\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\tconsole.log(\"character need body, face, action, emotion\");\r\n\t}\r\n\r\n\t_download() {\r\n\t\twindow.open(this._outlink());\r\n\t}\r\n\r\n\t_save_as_svg() {\r\n\t\tthis.__texture_to_base64().then(frag_list => {\r\n\t\t\tlet file_name = this.id + \".svg\";\r\n\t\t\t//let frag_list = this.__frag_list;\r\n\t\r\n\t\t\tlet svg = '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" >';\r\n\r\n\t\t\tsvg += '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink= \"http://www.w3.org/1999/xlink\">\\n';// width=\"64\" height=\"96\"\r\n\r\n\t\t\tsvg += '<g transform=\"translate(32, 96)\">';\r\n\t\t\tfrag_list.forEach(function (ft) {\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tlet clz = ft.classList;\r\n\t\t\t\t\tsvg += `\\t<image class=\"${clz}\" opacity=\"${ft.opacity}\" x=\"${ft.relative.x}\" y=\"${ft.relative.y}\" width=\"${ft.width}\" height=\"${ft.height}\" xlink:href=\"${ft._url}\"></image>\\n`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsvg += '</g>';\r\n\r\n\t\t\tsvg += '<text x=\"0\" y=\"122\" fill=\"transparent\">' + this._stringify(false) + '</text>';\r\n\r\n\t\t\tsvg += '</svg>';\r\n\r\n\t\t\t//let url = \"data:text/plain;utf8,\" + svg;\r\n\r\n\t\t\tdebugger;\r\n\r\n\t\t\t//window.open(url);\r\n\t\t\tDownloadData(svg, \"image/svg+xml;utf8\", file_name);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * \"data:image/png;base64,[...]\"\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} filename\r\n\t * @returns {string}\r\n\t */\r\n\t_save_as_png(renderer, filename) {\r\n\t\tlet bound = this._calcBoundBox();\r\n\t\tlet size = bound.size;\r\n\t\tlet x = -bound.left;\r\n\t\tlet y = bound.height;\r\n\t\tlet angle = 0;\r\n\t\tlet front = false;\r\n\r\n\t\t// use Canvas2, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//save Canvas2 size, current ctx is _ctx2\r\n\t\tconst c2w = renderer._ctx2.canvas.width;\r\n\t\tconst c2h = renderer._ctx2.canvas.height;\r\n\t\t//\r\n\t\trenderer.ctx.canvas.width = size.x;\r\n\t\trenderer.ctx.canvas.height = size.y;\r\n\r\n\t\ttry {\r\n\t\t\tthis._draw(renderer, x, y, angle, front);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\tlet base64 = renderer.ctx.canvas.toDataURL(\"image/png\");\r\n\t\t{\r\n\t\t\tlet elem = document.createElement(\"a\");\r\n\r\n\t\t\tlet name = `${filename ? (filename+\".\"):\"\"}${this.action}[${this.action_frame}].${this.emotion}[${this.emotion_frame}].png`;\r\n\r\n\t\t\telem.id = name;\r\n\t\t\telem.download = name;\r\n\t\t\telem.href = base64;\r\n\r\n\t\t\tdocument.body.appendChild(elem);\r\n\t\t\telem.click();\r\n\t\t\tdocument.body.removeChild(elem);\r\n\t\t}\r\n\r\n\t\t//restore Canvas2 size, current ctx is _ctx2\r\n\t\trenderer.ctx.canvas.width = c2w;\r\n\t\trenderer.ctx.canvas.height = c2h;\r\n\r\n\t\t// restore Canvas, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\treturn base64;\r\n\t}\r\n\t\r\n\tasync __texture_to_base64() {\r\n\t\tlet frag_list = this.__frag_list;\r\n\t\tlet tasks = [];\r\n\r\n\t\tfrag_list.forEach(function (ft) {\r\n\t\t\tif (!ft) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!ft._url.startsWith(\"data:\")) {\r\n\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\tft._url = await toDataURL(ft._url);\r\n\t\t\t\t\treturn ft;\r\n\t\t\t\t})());\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttasks.push(ft);\r\n\t\t\t}\r\n\t\t\tif (ft.graph2) {\r\n\t\t\t\tlet src = ft.graph2._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph2._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph2;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ft.graph3) {\r\n\t\t\t\tlet src = ft.graph3._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph3._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph3;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n}\r\nAddInitTask(CharacterRenderer.Init());\r\n\r\nfunction* circularSequence(length) {\r\n\tlet i = 0;\r\n\tfor (; i < length; ++i) {//a: 0, 1, 2, 3, ...b\r\n\t\tyield i;\r\n\t}\r\n\tfor (i -= 2; i > 0; --i) {//b: 2, 1, ...a\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction* linearSequence(length) {\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction extract_number(input) {\r\n\treturn String(input).match(/(-?\\d+\\.?\\d*)|(\\.\\d*)/g);\r\n}\r\n\r\n/**\r\n * image href to data url\r\n */\r\nfunction toDataURL(url) {\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tlet xhr = new XMLHttpRequest();\r\n\t\txhr.onload = function () {\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\treader.onloadend = function () {\r\n\t\t\t\tresolve(reader.result);\r\n\t\t\t}\r\n\t\t\treader.onerror = function (ev) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treject(ev);\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(xhr.response);\r\n\t\t};\r\n\t\txhr.open('GET', url);\r\n\t\txhr.responseType = 'blob';\r\n\t\txhr.send();\r\n\t});\r\n}\r\n","\r\nimport jQuery from \"jquery\";\r\n\r\nimport \"jquery-ui/themes/base/core.css\";\r\nimport \"jquery-ui/themes/base/theme.css\";\r\nimport \"jquery-ui/themes/base/selectable.css\";\r\nimport \"jquery-ui/themes/base/sortable.css\";\r\nimport \"jquery-ui/themes/base/draggable.css\";\r\n\r\nimport \"jquery-ui/ui/core\";\r\nimport \"jquery-ui/ui/widgets/selectable\";\r\nimport \"jquery-ui/ui/widgets/sortable\";\r\nimport \"jquery-ui/ui/widgets/draggable\";\r\nimport \"jquery-ui/ui/disable-selection\";\r\nimport \"jquery-ui/ui/position\";\r\nimport \"jquery-ui/ui/effect\";\r\n\r\nimport { } from \"./util.js\";\r\n\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nwindow.jQuery = jQuery;\r\nwindow.$ = jQuery;\r\n\r\nVue.config.productionTip = false;\r\n\r\nVue.use(Vuex);\r\n\r\nif (!window.onwheel) {\r\n\twindow.onwheel = function () {\r\n\t}\r\n}\r\n\r\nlet init_tasks = [];\r\n\r\nexport function AddInitTask(task) {\r\n\tinit_tasks.push(task);\r\n}\r\n\r\nexport function InitAll() {\r\n\tlet a = Promise.all(init_tasks);\r\n\tinit_tasks = [];\r\n\treturn a;\r\n}\r\n","﻿\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGrpah, IRenderer, IGraph } from \"./IRenderer.js\";\r\n\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\n\r\n/**\r\n * @extends {IGraph}\r\n */\r\nexport class SpriteBase extends Graph {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tif (raw) {\r\n\t\t\tsuper(url, {\r\n\t\t\t\twidth: raw.__w,\r\n\t\t\t\theight: raw.__h,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\t//this.src is broken;\r\n\r\n\t\tif (url) {\r\n\t\t\tdebugger\r\n\t\t\tthis._url = url;\r\n\t\t\t//this._loadTexture(url);//_loadTexture: undefined\r\n\t\t}\r\n\t\telse if (SpriteBase.isTexture(raw) !== false) {\r\n\t\t\tthis._url = raw[\"\"];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isTexture(raw) {\r\n\t\tif (raw) {\r\n\t\t\tif (raw.hasOwnProperty(\"\")) {\r\n\t\t\t\tif (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!raw.__isEmpty) {\r\n\t\t\t\t\tconsole.group(\"no texture\");\r\n\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\tthrow new Error(\"no texture\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic isTextureHasData(raw) {\r\n\t\treturn raw && typeof raw[\"\"] == 'string' && raw[\"\"].startsWith(\"data:image/\");\r\n\t}\r\n\r\n\tset z(value) {\r\n\t\tthis._order = value;\r\n\t}\r\n\tget z() {\r\n\t\treturn this._order;\r\n\t}\r\n\t\r\n\t/**\r\n\t * try construct value from raw data\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (!this._raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\telse if (propertyName in this._raw) {\r\n\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis._engine.drawGraph(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthis._engine.drawGraph2(this, x - this.x, y - this.y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t */\r\n\tdraw2i(x, y) {\r\n\t\tthis._engine.drawGraph2(this, Math.trunc(x - this.x + 0.5), Math.trunc(y - this.y + 0.5));\r\n\t}\r\n}\r\n\r\n\r\nexport class Sprite extends SpriteBase {\r\n\t/**\r\n\t * sprite = new Sprite(rawData);//不會載入image\r\n\t * sprite._url = img_url;//不會載入image\r\n\t *\r\n\t * 會觸發載入image的method\r\n\t * draw(), isLoaded(), get width(), get height()\r\n\t * \r\n\t * 手動載入image: __loadTexture()\r\n\t * \r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tvar origin = this._get(new Vec2(0, 0), \"origin\", Vec2.get);\r\n\t\tthis.x = origin.x;\r\n\t\tthis.y = origin.y;\r\n\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\tthis.delay = this._get(100, \"delay\", Number);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tctx.rect(x, y, w, h);\r\n\t\t\tctx.clip();\r\n\r\n\t\t\tlet left = x;\r\n\t\t\tlet top = y;\r\n\t\t\tlet right = x + w;\r\n\t\t\tlet bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\tdrawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst left = x;\r\n\t\t\tconst right = x + w;\r\n\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\tdrawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst top = y;\r\n\t\t\tconst bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tthis.draw2(x, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\t_drawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t\r\n\t\tconst sw = Math.trunc(w / this.width) * this.width;\r\n\t\tconst sh = Math.trunc(h / this.height) * this.height;\r\n\t\t\r\n\t\tconst left = x;\r\n\t\tconst top = y;\r\n\t\tconst right = x + sw;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tlet i, j;\r\n\r\n\t\tif (h >= this.height) {\r\n\t\t\tfor (i = top; i < bottom; i += this.height) {\r\n\t\t\t\tif (w >= this.width) {\r\n\t\t\t\t\tfor (j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet sx = w - sw;\r\n\t\t\t\t\tif (sx > 0) {\r\n\t\t\t\t\t\tthis._engine._drawImage(this, 0, 0, sx, this.height, j - this.x, i - this.y, sx, this.height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._engine._drawImage(this, 0, 0, w, this.height, left - this.x, i - this.y, w, this.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet sy = h - sh;\r\n\t\t\tif (sy > 0) {\r\n\t\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\t\tthis._engine._drawImage(this, 0, 0, this.width, sy, left - this.x, i - this.y, this.width, sy);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\tthis._engine._drawImage(this, 0, 0, this.width, h, left - this.x, top - this.y, this.width, h);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\t_drawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst right = x + w;\r\n\r\n\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\tthis.draw2(j, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\t_drawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst top = y;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tthis.draw2(x, i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawPattern4i(x, y, w, h) {\r\n\t\tthis.drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\tdrawHorizontalPattern3i(x, y, w) {\r\n\t\tthis.drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawVerticalPattern3i(x, y, h) {\r\n\t\tthis.drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawPattern4i(x, y, w, h) {\r\n\t\tthis._drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\t_drawHorizontalPattern3i(x, y, w) {\r\n\t\tthis._drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawVerticalPattern3i(x, y, h) {\r\n\t\tthis._drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n}\r\n\r\nexport class _$PatternSprite_Loaded extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._direction = null;\r\n\r\n\t\t/** @type {CanvasPattern} */\r\n\t\tthis._pattern = null;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget direction() {\r\n\t\treturn this._direction;\r\n\t}\r\n\tset direction(value) {\r\n\t\tif (value && this._direction != value) {\r\n\t\t\tthis._direction = value;\r\n\t\r\n\t\t\t//reload;\r\n\t\t\tthis._pattern = null;\r\n\t\t\tthis.__proto__ = $PatternSprite.prototype;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(-this.x, -this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(x - this.x, y - this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"repeat\"} */\r\n\tget e_repeat() {\r\n\t\treturn \"repeat\";\r\n\t}\r\n\t/** @returns {\"repeat-x\"} */\r\n\tget e_repeat_x() {\r\n\t\treturn \"repeat-x\";\r\n\t}\r\n\t/** @returns {\"repeat-y\"} */\r\n\tget e_repeat_y() {\r\n\t\treturn \"repeat-y\";\r\n\t}\r\n\t/** @returns {\"no-repeat\"} */\r\n\tget e_noRepeat() {\r\n\t\treturn \"no-repeat\";\r\n\t}\r\n}\r\n\r\nexport class $PatternSprite extends _$PatternSprite_Loaded {\r\n\tdrawPattern(w, h) {\r\n\t\tthis.drawPattern2(0, 0, w, h);\r\n\t}\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.isLoaded()) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t{\r\n\t\t\t\tctx.rect(x, y, w, h);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tlet left = x;\r\n\t\t\t\tlet top = y;\r\n\t\t\t\tlet right = x + w;\r\n\t\t\t\tlet bottom = y + h;\r\n\r\n\t\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern(w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern2(x, y, w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\nconst $failed_urls = [];\r\n\r\nconst $archive = {};\r\n\r\n\r\nwindow.character_emotion_list = [\"blink\", \"hit\", \"smile\", \"troubled\", \"cry\", \"angry\", \"bewildered\", \"stunned\",\r\n\t\"vomit\", \"oops\", \"cheers\", \"chu\", \"wink\", \"pain\", \"glitter\", \"despair\", \"love\", \"shine\", \"blaze\", \"hum\",\r\n\t\"bowing\", \"hot\", \"dam\", \"qBlue\"];\r\n\r\nwindow.character_action_list = [\"walk1\", \"walk2\", \"stand1\", \"stand2\", \"alert\", \"swingO1\", \"swingO2\", \"swingO3\", \"swingOF\", \"swingT1\",\r\n\t\"swingT2\", \"swingT3\", \"swingTF\", \"swingP1\", \"swingP2\", \"swingPF\", \"stabO1\", \"stabO2\", \"stabOF\", \"stabT1\",\r\n\t\"stabT2\", \"stabTF\", \"shoot1\", \"shoot2\", \"shootF\", \"proneStab\", \"prone\", \"heal\", \"fly\", \"jump\", \"sit\", \"ladder\",\r\n\t\"rope\"/*, \"dead\", \"ghostwalk\", \"ghoststand\", \"ghostjump\", \"ghostproneStab\", \"ghostladder\", \"ghostrope\", \"ghostfly\",\r\n\t\t\"ghostsit\"*/];\r\n\r\nexport class ItemCategoryInfo {\r\n\t/**\r\n\t * @param {string} id_prefix\r\n\t * @param {string} path\r\n\t * @param {boolean} isOnFace\r\n\t * @param {string} slot - property name\r\n\t * @param {string} categoryName\r\n\t * @param {string} type\r\n\t * @param {string} [stringPath]\r\n\t */\r\n\tconstructor(id_prefix, imgDir, listPath, slot, categoryName, type, stringPath) {\r\n\t\tthis.id_prefix = id_prefix;\r\n\r\n\t\t/** data path */\r\n\t\tthis.path = imgDir;\r\n\r\n\t\t/** equip window */\r\n\t\tthis.slot = slot;\r\n\r\n\t\t/** item list file name */\r\n\t\tthis.listPath = listPath;\r\n\r\n\t\t/** display category name */\r\n\t\tthis.categoryName = categoryName;\r\n\r\n\t\t/** renderer */\r\n\t\tthis.fragmentType = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.dataDir = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.stringDir = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconPath = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconRawPath = null;\r\n\t\t{\r\n\t\t\tlet dataDir, stringDir, iconPath, iconRawPath;\r\n\r\n\t\t\tswitch (slot) {\r\n\t\t\t\tcase \"head\":\r\n\t\t\t\t\ticonPath = \"stand1/0/head\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/head\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"body\":\r\n\t\t\t\t\ticonPath = \"stand1/0/body\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/body\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"hair\":\r\n\t\t\t\t\ticonPath = \"stand1/0/hair\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/hair\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"face\":\r\n\t\t\t\t\ticonPath = \"blink/0/face\";\r\n\t\t\t\t\ticonRawPath = \"blink/0/face\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: // typeId: 0|1|2|3|4\r\n\t\t\t\t\ticonPath = \"info/icon\";\r\n\t\t\t\t\ticonRawPath = \"info/iconRaw\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (id_prefix == \"5\") {\r\n\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\tstringDir = \"/String/Pet/\";\r\n\t\t\t\talert(\"Pet\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch (id_prefix[1]) {\r\n\t\t\t\t\tcase \"0\":\r\n\t\t\t\t\t\tif (Math.trunc(id_prefix) <= 1) {\r\n\t\t\t\t\t\t\tdataDir = \"/Character/\";\r\n\t\t\t\t\t\t\tstringDir = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase \"1\":\r\n\t\t\t\t\t\tlet s = imgDir + (imgDir ? \"/\" : \"\");\r\n\t\t\t\t\t\tdataDir = \"/Character/\" + s;\r\n\t\t\t\t\t\tstringDir = \"/String/Eqp/Eqp/\" + (stringPath || s);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"2\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Consume/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"3\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Ins/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"4\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Etc/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"5\":\r\n\t\t\t\t\t\tdataDir = `/Item/${imgDir}/${id_prefix}/`;\r\n\t\t\t\t\t\tstringDir = \"/String/Cash/\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new Error(\"unknow item type, param: %o\", [id_prefix, imgDir, listPath, slot, categoryName, type]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.defineProperties(this, {\r\n\t\t\t\t\"type\": {\r\n\t\t\t\t\tvalue: type,\r\n\t\t\t\t},\r\n\t\t\t\t\"dataDir\": {\r\n\t\t\t\t\tvalue: dataDir,\r\n\t\t\t\t},\r\n\t\t\t\t\"stringDir\": {\r\n\t\t\t\t\tvalue: stringDir,\r\n\t\t\t\t},\r\n\t\t\t\t\"iconPath\": {\r\n\t\t\t\t\tvalue: iconPath,\r\n\t\t\t\t},\r\n\t\t\t\t\"iconRawPath\": {\r\n\t\t\t\t\tvalue: iconRawPath,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * load equip or item, name and desc\r\n\t * @param {string} itemId\r\n\t * @returns {{info:{icon:{[\"\"]:string},iconRaw:{[\"\"]:string}},name:string,desc:string,[prop:string]:any}}\r\n\t */\r\n\tstatic async getItem(itemId) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(itemId);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet id = itemId.padStart(8, \"0\");\r\n\t\tif (id[0] != \"0\") {\r\n\t\t\tthrow new Error(\"itemId: \" + itemId);\r\n\t\t}\r\n\r\n\t\tlet results;\r\n\t\ttry {\r\n\t\t\tresults = await Promise.all([\r\n\t\t\t\t$get.data(info.dataDir + itemId),\r\n\t\t\t\tinfo.stringDir ? $get.data(info.stringDir + Number(itemId)).then(\r\n\t\t\t\t\ta => a, // have name or desc\r\n\t\t\t\t\t() => { return { name: \"<\" + itemId + \">\" }; } // no name and desc\r\n\t\t\t\t) : { name: \"<\" + itemId + \">\" } // no name and desc\r\n\t\t\t]);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow new ex;\r\n\t\t}\r\n\r\n\t\tlet data = Object.assign(results[0], results[1]);\r\n\t\t\r\n\t\tdata.id = itemId;\r\n\r\n\t\tif (data.info) {\r\n\t\t\t{//editor mode data\r\n\t\t\t\tdata.info.id = itemId;\r\n\t\t\t\tdata.info.name = data.name;\r\n\t\t\t\tif (data.desc) {\r\n\t\t\t\t\tdata.info.desc = data.desc;\r\n\t\t\t\t}\r\n\t\t\t\tdata.info.__v = window.DATA_TAG + window.DATA_VERSION;\r\n\t\t\t}\r\n\r\n\t\t\tif (!data.info.icon) {\r\n\t\t\t\tdata.info.icon = {};\r\n\t\t\t}\r\n\t\t\tif (!data.info.iconRaw) {\r\n\t\t\t\tdata.info.iconRaw = {};\r\n\t\t\t}\r\n\t\t\tif (!data.info.icon[\"\"]) {\r\n\t\t\t\tdata.info.icon[\"\"] = ItemCategoryInfo.getIconUrl(itemId);\r\n\t\t\t}\r\n\t\t\tif (data.info.iconRaw[\"\"]) {\r\n\t\t\t\tdata.info.iconRaw[\"\"] = ItemCategoryInfo.getIconRawUrl(itemId);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconRawUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\treturn $get.imageUrl(info.dataDir + id + \"/\" + info.iconRawPath);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\treturn $get.imageUrl(info.dataDir + id + \"/\" + info.iconPath);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - 4+ digit string\r\n\t * @returns {ItemCategoryInfo}\r\n\t */\r\n\tstatic get(id) {\r\n\t\tlet info;\r\n\r\n\t\tif (id == null || id == \"\") {\r\n\t\t\tdebugger;\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\r\n\t\tif (id[0] == \"0\") {\r\n\t\t\tif (id.length == 4) {\r\n\t\t\t\tinfo = ItemCategoryInfo._info[id];\r\n\t\t\t\tif (info) {\r\n\t\t\t\t\treturn info;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (id.length == 6) {\r\n\t\t\t\treturn ItemCategoryInfo._info[id];\r\n\t\t\t}\r\n\t\t\telse if (id.length == 3) {\r\n\t\t\t\treturn ItemCategoryInfo._info[id];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 4)];\r\n\t\t\t\tif (info) {\r\n\t\t\t\t\treturn info;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 6)];\r\n\t\t\t\t\tif (info) {\r\n\t\t\t\t\t\treturn info;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 3)];//019\r\n\t\t\t\t\t\tif (info) {\r\n\t\t\t\t\t\t\treturn info;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.warn(\"unknow item type, itemId: \" + id);\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getTypeId() {\r\n\t\treturn Math.trunc(_id / 1000000);\r\n\t}\r\n\r\n\tstatic getCategory() {\r\n\t\treturn Math.trunc(_id / 10000);// % 100;// 0105 // 01 + 05 // type + category\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isItem(id) {\r\n\t\tlet type = Math.trunc(id / 1000000);//id.startsWith(\"00\");\r\n\t\treturn type != 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isEquip(id) {\r\n\t\tif (!id) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\t\tlet _id = Number(id);\r\n\r\n\t\tif (!Number.isSafeInteger(_id)) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\r\n\t\t//let cate = Number(id.length == 4 ? id : id.slice(0, 4));\r\n\t\t//return (cate >= \"0100\" && cate < \"0180\");\r\n\r\n\t\t//let cate = Math.trunc(_id / 10000);\r\n\t\t//if (cate >= 180 && cate < 2000) {\r\n\t\t//\tconsole.warn(\"?? equip: \" + id);\r\n\t\t//\tdebugger;\r\n\t\t//}\r\n\r\n\t\tlet type = Math.trunc(_id / 1000000);\r\n\r\n\t\treturn type == 1;\r\n\t}\r\n\r\n\tstatic isChair(id) {\r\n\t\tif (!id) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\t\tlet _id = Number(id);\r\n\r\n\t\tif (!Number.isSafeInteger(_id)) {\r\n\t\t\tthrow TypeError();\r\n\t\t}\r\n\r\n\t\tlet cate = Math.trunc(_id / 10000);\r\n\r\n\t\treturn cate == 301;//0301xxxx\r\n\t}\r\n\r\n\t/**\r\n\t * 1~4 digit number\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic getSubCategory(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic isCashWeapon(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000) == 170;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} job\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getJobWeaponCategory(job) {\r\n\t\t//TODO: getJobWeaponCategory\r\n\t\tconsole.warn(\"getJobWeaponCategory: 未完成\");\r\n\t}\r\n}\r\nwindow.$ItemCategoryInfo = ItemCategoryInfo;\r\nItemCategoryInfo.type = {\r\n\tEquip: \"Equip\",\r\n\tConsume: \"Consume\",\r\n\tEtc: \"Etc\",\r\n\tInstall: \"Install\",\r\n\tCash: \"Cash\"\r\n};\r\nItemCategoryInfo.typeName = {\r\n\t0: \"Equip\",\r\n\t1: \"Consume\",\r\n\t2: \"Etc\",\r\n\t3: \"Install\",\r\n\t4: \"Cash\"\r\n};\r\nItemCategoryInfo.typeId = {\r\n\tEquip: 0,\r\n\tConsume: 1,\r\n\tEtc: 2,\r\n\tInstall: 3,\r\n\tCash: 4,\r\n};\r\nItemCategoryInfo._info = {\r\n\t\"0000\": new ItemCategoryInfo(\"0000\", \"\",\t\t\t\"body\",\t\t\t\t\"body\",\t\t\t\"<body>\", \"Equip\"),\r\n\t\"0001\": new ItemCategoryInfo(\"0001\", \"\",\t\t\t\"head\",\t\t\t\t\"head\",\t\t\t\"<head>\", \"Equip\"),\r\n\r\n\t\"0002\": new ItemCategoryInfo(\"0002\", \"Face\",\t\t\"Face\",\t\t\t\t\"face\",\t\t\t\"臉型\", \"Equip\"),\r\n\t\"0003\": new ItemCategoryInfo(\"0003\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\", \"Equip\"),\r\n\t\"0004\": new ItemCategoryInfo(\"0004\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\", \"Equip\"),\r\n\r\n\t\"0100\": new ItemCategoryInfo(\"0100\", \"Cap\",\t\t\t\"Cap\",\t\t\t\t\"cap\",\t\t\t\"帽子\", \"Equip\"),\r\n\t\"0101\": new ItemCategoryInfo(\"0101\", \"Accessory\",\t\"accessoryFace\",\t\"accessoryFace\", \"臉飾\", \"Equip\"),\r\n\t\"0102\": new ItemCategoryInfo(\"0102\", \"Accessory\",\t\"accessoryEyes\",\t\"accessoryEyes\", \"眼飾\", \"Equip\"),\r\n\t\"0103\": new ItemCategoryInfo(\"0103\", \"Accessory\",\t\"accessoryEars\",\t\"accessoryEars\", \"耳環\", \"Equip\"),\r\n\t\"0104\": new ItemCategoryInfo(\"0104\", \"Coat\",\t\t\"Coat\",\t\t\t\t\"coat\",\t\t\t\"上衣\", \"Equip\"),\r\n\t\"0105\": new ItemCategoryInfo(\"0105\", \"Longcoat\",\t\"Longcoat\",\t\t\t\"longcoat\",\t\t\"套服\", \"Equip\"),\r\n\t\"0106\": new ItemCategoryInfo(\"0106\", \"Pants\",\t\t\"Pants\",\t\t\t\"pants\",\t\t\"褲子\", \"Equip\"),\r\n\t\"0107\": new ItemCategoryInfo(\"0107\", \"Shoes\",\t\t\"Shoes\",\t\t\t\"shoes\",\t\t\"鞋子\", \"Equip\"),\r\n\t\"0108\": new ItemCategoryInfo(\"0108\", \"Glove\",\t\t\"Glove\",\t\t\t\"glove\",\t\t\"手套\", \"Equip\"),\r\n\t\"0109\": new ItemCategoryInfo(\"0109\", \"Shield\",\t\t\"Shield\",\t\t\t\"shield\",\t\t\"盾牌\", \"Equip\"),\r\n\t\"0110\": new ItemCategoryInfo(\"0110\", \"Cape\",\t\t\"Cape\",\t\t\t\t\"cape\",\t\t\t\"披風\", \"Equip\"),\r\n\r\n\t\"0121\": new ItemCategoryInfo(\"0121\", \"Weapon\", \"閃亮克魯\", \"weapon\", \"閃亮克魯\", \"Equip\"),\r\n\t\"0122\": new ItemCategoryInfo(\"0122\", \"Weapon\", \"靈魂射手\", \"weapon\", \"靈魂射手\", \"Equip\"),\r\n\t\"0123\": new ItemCategoryInfo(\"0123\", \"Weapon\", \"魔劍\", \"weapon\", \"魔劍\", \"Equip\"),\r\n\t\"0124\": new ItemCategoryInfo(\"0124\", \"Weapon\", \"能量劍\", \"weapon\", \"能量劍\", \"Equip\"),\r\n\t\"0125\": new ItemCategoryInfo(\"0125\", \"Weapon\", \"幻獸棒\", \"weapon\", \"幻獸棒\", \"Equip\"),\r\n\t\"0126\": new ItemCategoryInfo(\"0126\", \"Weapon\", \"ESP限制器\", \"weapon\", \"ESP限制器\", \"Equip\"),\r\n\t\"0127\": new ItemCategoryInfo(\"0127\", \"Weapon\", \"鎖鏈\", \"weapon\", \"鎖鏈\", \"Equip\"),\r\n\t\"0128\": new ItemCategoryInfo(\"0128\", \"Weapon\", \"魔力護腕\", \"weapon\", \"魔力護腕\", \"Equip\"),\r\n\r\n\t\"0130\": new ItemCategoryInfo(\"0130\", \"Weapon\", \"單手劍\", \"weapon\", \"單手劍\", \"Equip\"),\r\n\t\"0131\": new ItemCategoryInfo(\"0131\", \"Weapon\", \"單手斧\", \"weapon\", \"單手斧\", \"Equip\"),\r\n\t\"0132\": new ItemCategoryInfo(\"0132\", \"Weapon\", \"單手錘\", \"weapon\", \"單手錘\", \"Equip\"),\r\n\t\"0133\": new ItemCategoryInfo(\"0133\", \"Weapon\", \"短劍\", \"weapon\", \"短劍\", \"Equip\"),\r\n\t\"0134\": new ItemCategoryInfo(\"0134\", \"Weapon\", \"雙刀\", \"weapon\", \"雙刀\", \"Equip\"),\r\n\t\"013526\": new ItemCategoryInfo(\"013526\", \"Weapon\", \"靈魂之環\", \"weapon\", \"靈魂之環\", \"Equip\"),\r\n\t\"013530\": new ItemCategoryInfo(\"013530\", \"Weapon\", \"控制器\", \"weapon\", \"控制器\", \"Equip\"),\r\n\t\"0136\": new ItemCategoryInfo(\"0136\", \"Weapon\", \"手杖\", \"weapon\", \"手杖\", \"Equip\"),\r\n\t\"0137\": new ItemCategoryInfo(\"0137\", \"Weapon\", \"短杖\", \"weapon\", \"短杖\", \"Equip\"),\r\n\t\"0138\": new ItemCategoryInfo(\"0138\", \"Weapon\", \"長杖\", \"weapon\", \"長杖\", \"Equip\"),\r\n\t\r\n\t\"0140\": new ItemCategoryInfo(\"0140\", \"Weapon\", \"雙手劍\", \"weapon\", \"雙手劍\", \"Equip\"),\r\n\t\"0141\": new ItemCategoryInfo(\"0141\", \"Weapon\", \"雙手斧\", \"weapon\", \"雙手斧\", \"Equip\"),\r\n\t\"0142\": new ItemCategoryInfo(\"0142\", \"Weapon\", \"雙手棍\", \"weapon\", \"雙手棍\", \"Equip\"),\r\n\t\"0143\": new ItemCategoryInfo(\"0143\", \"Weapon\", \"槍\", \"weapon\", \"槍\", \"Equip\"),\r\n\t\"0144\": new ItemCategoryInfo(\"0144\", \"Weapon\", \"矛\", \"weapon\", \"矛\", \"Equip\"),\r\n\t\"0145\": new ItemCategoryInfo(\"0145\", \"Weapon\", \"弓\", \"weapon\", \"弓\", \"Equip\"),\r\n\t\"0146\": new ItemCategoryInfo(\"0146\", \"Weapon\", \"弩\", \"weapon\", \"弩\", \"Equip\"),\r\n\t\"0147\": new ItemCategoryInfo(\"0147\", \"Weapon\", \"拳套\", \"weapon\", \"拳套\", \"Equip\"),\r\n\t\"0148\": new ItemCategoryInfo(\"0148\", \"Weapon\", \"指虎\", \"weapon\", \"指虎\", \"Equip\"),\r\n\t\"0149\": new ItemCategoryInfo(\"0149\", \"Weapon\", \"火槍\", \"weapon\", \"火槍\", \"Equip\"),\r\n\t\"0150\": new ItemCategoryInfo(\"0150\", \"Weapon\", \"鏟\", \"weapon\", \"鏟\", \"Equip\"),\r\n\t\"0151\": new ItemCategoryInfo(\"0151\", \"Weapon\", \"鎬\", \"weapon\", \"鎬\", \"Equip\"),\r\n\t\"0152\": new ItemCategoryInfo(\"0152\", \"Weapon\", \"雙弩槍\", \"weapon\", \"雙弩槍\", \"Equip\"),\r\n\t\"0153\": new ItemCategoryInfo(\"0153\", \"Weapon\", \"加農砲\", \"weapon\", \"加農砲\", \"Equip\"),\r\n\t\"0154\": new ItemCategoryInfo(\"0154\", \"Weapon\", \"太刀\", \"weapon\", \"太刀\", \"Equip\"),\r\n\t\"0155\": new ItemCategoryInfo(\"0155\", \"Weapon\", \"扇子\", \"weapon\", \"扇子\", \"Equip\"),\r\n\t\"0156\": new ItemCategoryInfo(\"0156\", \"Weapon\", \"琉\", \"weapon\", \"琉\", \"Equip\"),\r\n\t\"0157\": new ItemCategoryInfo(\"0157\", \"Weapon\", \"璃\", \"weapon\", \"璃\", \"Equip\"),\r\n\t\"0158\": new ItemCategoryInfo(\"0158\", \"Weapon\", \"重拳槍\", \"weapon\", \"重拳槍\", \"Equip\"),\r\n\t\"0170\": new ItemCategoryInfo(\"0170\", \"Weapon\", \"0170\", \"weapon\", \"點裝武器\", \"Equip\"),\r\n\t\"019\": new ItemCategoryInfo(\"019\", \"TamingMob\", \"TamingMob\", \"tamingMob\", \"騎寵\", \"Equip\", \"Taming/\"),\r\n\r\n\t\"0301\": new ItemCategoryInfo(\"0301\", \"Install\", \"Chair\", \"install\", \"椅子\", \"Item\"),\r\n};\r\n\r\nItemCategoryInfo._categoryList = (function (info_map) {\r\n\tlet list = [];\r\n\tlet set = new Set();\r\n\tfor (let i in info_map) {\r\n\t\tlet cat = info_map[i];\r\n\t\tlet key = cat.categoryName || cat.listPath;\r\n\r\n\t\tif (!set.has(key)) {\r\n\t\t\tset.add(key);\r\n\r\n\t\t\tlist.push({\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalue: i,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn list;\r\n})(ItemCategoryInfo._info);\r\n\r\nexport class ResourceManager {\r\n\tstatic isEquipExist(id, cateInfo) {\r\n\t\tconst dp = cateInfo.listPath;\r\n\t\tconst es = ResourceManager.equip_map[dp];\r\n\t\treturn !es || es.has(id);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic async loadArchive(url) {\r\n\t\t$setValue($archive, \"/\", JSON.parse(await ResourceManager.get(url)));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic get(url) {\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\txhr.open(\"GET\", url, true);\r\n\r\n\t\t\txhr.timeout = 10 * 60 * 1000;//20000;\r\n\r\n\t\t\txhr.onload = function () {\r\n\t\t\t\tif (this.status == 404 || this.status == 500) {\r\n\t\t\t\t\t$failed_urls.push(url);\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\t//resolve(null);\r\n\t\t\t\t\treject(this.status + \": \" + url);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 200) {\r\n\t\t\t\t\tresolve(this.responseText);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 304) {\r\n\t\t\t\t\tdebugger\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\txhr.ontimeout = function (e) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\t// XMLHttpRequest 超时。在此做某事。\r\n\t\t\t\t//resolve(null);\r\n\t\t\t\treject(\"timeout: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.onabort = function (e) {\r\n\t\t\t\treject(\"abort: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.send();\r\n\t\t});\r\n\t}\r\n\r\n\tstatic get root_path() {\r\n\t\treturn window.$ROOT_PATH;\r\n\t}\r\n\r\n\tstatic get archive() {\r\n\t\treturn $archive;\r\n\t}\r\n\r\n\tstatic get failed_urls() {\r\n\t\treturn $failed_urls;\r\n\t}\r\n}\r\nwindow.$ResourceManager = ResourceManager;\r\n\r\n/**\r\n * @param {{}} obj\r\n * @param {string} path\r\n * @param {any} value\r\n */\r\nfunction $setValue(obj, path, value) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key] == null) {\r\n\t\t\ttarget[key] = {};\r\n\t\t}\r\n\t\ttarget = target[key];\r\n\t}\r\n\tlet origin_value = target[ps[lastIndex]];\r\n\tif (origin_value instanceof Promise) {\r\n\t\tdelete target[ps[lastIndex]];\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n\telse if (origin_value && typeof origin_value == \"object\") {\r\n\t\t//if (value instanceof Promise) {\r\n\t\t//\tdebugger;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t\tfor (let key in value) {\r\n\t\t\t\torigin_value[key] = value[key] || origin_value[key];\r\n\t\t\t}\r\n\t\t//}\r\n\t}\r\n\telse if (typeof value != \"undefined\") {\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n}\r\nfunction $getValue(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key]) {\r\n\t\t\t\ttarget = target[key];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\treturn target[ps[lastIndex]];\r\n}\r\n\r\nconst symbol_isPack = Symbol(\"$pack\");\r\n\r\nconst url_startsWith_protocol = RegExp.prototype.test.bind(/^(([a-zA-Z^\\:]+)(\\:.*)$|\\/\\/)/);\r\nfunction _setValueByPath(path, value, is_pack) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn;\r\n\t}\r\n\telse if (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\tif (is_pack) {\r\n\t\t\tvalue[symbol_isPack] = true;\r\n\t\t}\r\n\t\tpath = path.slice(window.$ROOT_PATH.length);\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n\telse {\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n}\r\nfunction _getValueFromArchiveByPath(path, value) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tif (_path) {\r\n\t\treturn $getValue($archive, _path);\r\n\t}\r\n\treturn undefined;\r\n}\r\nfunction _getDataPathByUrl(path) {\r\n\tif (!url_startsWith_protocol(path)) {\r\n\t\tif (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\t\treturn path.slice(window.$ROOT_PATH.length);\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @returns {Promise<any>|any}\r\n */\r\nfunction $getValueAsync(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\t\r\n\t// try get value sync\r\n\tlet value = $getValue(obj, path);\r\n\t\r\n\t// if value exist\r\n\tif (value) {\r\n\t\tif (value instanceof Promise) {\r\n\t\t\t// ??\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait value;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\telse {// if value not exist, try await parent node\r\n\t\tlet ps = path.split(\"/\");\r\n\t\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\t\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\t\tlet key = ps[i];\r\n\t\t\tif (target[key] instanceof Promise) {\r\n\t\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\t\tawait target[key];\r\n\t\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (target[key]) {\r\n\t\t\t\t\ttarget = target[key];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet result = target[ps[lastIndex]];\r\n\t\tif (result instanceof Promise) {\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait result;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} url\r\n * @returns {Promise<any>}\r\n */\r\nexport let $get = function $get(url) {\r\n\treturn ResourceManager.get(url);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.pack = async function $get_pack(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj && obj[symbol_isPack]) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tif (process.env.NODE_ENV !== \"production\") {\r\n\t\t\tif (obj && !obj[symbol_isPack]) {\r\n\t\t\t\tthrow new TypeError(\"data: \" + path);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst url = $get.packUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, true);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, true);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.packSync = function get_packSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.data = async function $get_data(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.dataUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {any}\r\n */\r\n$get.dataSync = function get_dataSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.list = async function $get_list(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.listUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.listSync = function $get_listSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn Object.keys(obj);\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.dataUrl = function $get_dataUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"data\")) {\r\n\t\treturn `${window.$ROOT_PATH}data${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game data: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.packUrl = function $get_packUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"pack\")) {\r\n\t\treturn `${window.$ROOT_PATH}pack${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game pack: \" + path);\r\n}\r\n$get.listUrl = function $get_listUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"ls\")) {\r\n\t\treturn `${window.$ROOT_PATH}ls${path}.json`;\r\n\t}\r\n\tthrow new Error(path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.imageUrl = function $get_imagesUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"images\")) {\r\n\t\treturn `${window.$ROOT_PATH}images${path}.png`;\r\n\t}\r\n\tthrow new Error(\"Not game images: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundMp3Url = function $get_soundMp3Url(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.mp3`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundWavUrl = function $get_soundWavUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.wav`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.assetUrl = function $get_assetUrl(path) {\r\n\treturn `${window.$ROOT_PATH}${path}`;\r\n}\r\n$get.asset = function $get_asset(path) {\r\n\treturn $get($get.assetUrl(path));\r\n}\r\n\r\nwindow.$get = $get;\r\n\r\n\r\nexport class ItemAttrNormalize {\r\n\tstatic head(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic body(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic Face(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 4 ? 1 : 0;\r\n\t}\r\n\tstatic Hair(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 2 || g == 4 || g == 7 ? 1 : 0;\r\n\t}\r\n\tstatic Cap(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryFace(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEyes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEars(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Coat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Longcoat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Pants(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shoes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Glove(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shield(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Cape(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic _equip(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 0 ? 0 : (g == 1 ? 1 : 2);\r\n\t}\r\n}\r\n\r\nconst regexp_getHairStyleID = /(\\d{4,7})\\d$/;\r\nconst regexp_getFaceStyleID = /(\\d{2,5})\\d(\\d{2})$/;\r\n\r\nconst regexp_getHairColor = /\\d{4,7}(\\d)$/;\r\nconst regexp_getFaceColor = /\\d{2,5}(\\d)\\d{2}$/;\r\n\r\nexport class CharacterRenderConfig {\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumHairColor(style) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i;\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumFaceColor(style) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i + m[2];\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorHairID(style, color) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tlet id = m[1] + (color % 10);\r\n\t\treturn id;\r\n\t}\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorFaceID(style, color) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tlet id = m[1] + (color % 10) + m[2];\r\n\t\treturn id;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHairStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorHairID(id_1, 0) == CharacterRenderConfig.getColorHairID(id_2, 0);\r\n\t}\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFaceStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorFaceID(id_1, 0) == CharacterRenderConfig.getColorFaceID(id_2, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getHairColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getHairColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getFaceColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getFaceColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar _external_data = {\r\n\t\"requiredJobs\": [\r\n\t\t\"Beginner\"\r\n\t],\r\n\t\"requiredLevel\": 0,\r\n\t\"isCash\": true,\r\n\t\"name\": \"Blue Beanie\",\r\n\t\"desc\": null,\r\n\t\"id\": 1000000,\r\n\t\"requiredGender\": 0,\r\n\t\"typeInfo\": {\r\n\t\t\"overallCategory\": \"Equip\",\r\n\t\t\"category\": \"Armor\",\r\n\t\t\"subCategory\": \"Hat\"\r\n\t}\r\n};\r\n\r\nvar ItemTypeInfo = {\r\n\t\"Equip\": {\r\n\t\t\"Hat\": \"Cap\",\r\n\t\t\"Cape\": \"Cape\",\r\n\t\t\"Top\": \"Coat\",\r\n\t\t\"Overall\": \"Longcoat\",\r\n\t\t\"Glove\": \"Glove\",\r\n\t\t\"Bottom\": \"Pants\",\r\n\r\n\t\t\"Shield\": \"Shield\",\r\n\t\t\"Shoes\": \"Shoes\",\r\n\t\t\"Eye Decoration\": \"accessoryEyes\",\r\n\t\t\"Earrings\": \"accessoryEars\",\r\n\t\t//\"Ring\": \"\",\r\n\r\n\t\t//\"Pendant\": \"\",\r\n\t\t\"Face Accessory\": \"accessoryFace\",\r\n\t\t//\"Belt\": \"\",\r\n\t\t//\"Medal\": \"\",\r\n\t\t//\"Shoulder Accessory\": \"\",\r\n\t\t//\"Badge\": \"\",\r\n\r\n\t\t//\"Dragon Equipment\": \"\",\r\n\t\t//\"Mechanic Equipment\": \"\",\r\n\t\t//\"Pet Equipment\": \"\",\r\n\t\t//\"Android\": \"\",\r\n\t\t//\"Mechanical Heart\": \"\",\r\n\t\t//\"Bits\": \"\",\r\n\r\n\t\t\"Face\": \"Face\",\r\n\t\t\"Hair\": \"Hair\",\r\n\t},\r\n};\r\n\r\nResourceManager.external = {\r\n\tequip: {\r\n\t},\r\n};\r\n\r\nResourceManager.equip_map = {\r\n};\r\n\r\nfor (let i in ItemTypeInfo.Equip) {\r\n\tlet cate = ItemTypeInfo.Equip[i];\r\n\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 9; ++i) {\r\n\tlet cate = \"Face\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 8; ++i) {\r\n\tlet cate = \"Hair\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\n\r\nasync function load_external_resource(url) {\r\n\turl = url || \"/items.json\";\r\n\tlet raw;\r\n\r\n\ttry {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get.asset(\"equip.json\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\tthrow Error(\"'/equip' is empty\");\r\n\t\t}\r\n\t}\r\n\tcatch (ex) {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get(\"//labs.maplestory.io/api/gms/latest/item/category/equip\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < raw.length; ++i) {\r\n\t\tconst item = raw[i];\r\n\t\tconst id = String(item.id).padStart(8, \"0\");\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!(item.typeInfo && ItemTypeInfo[item.typeInfo.overallCategory])) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet clz = item.typeInfo.overallCategory.toLowerCase();\r\n\t\t\tlet cate = ItemTypeInfo[item.typeInfo.overallCategory][item.typeInfo.subCategory];\r\n\t\t\tif (!cate) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Face\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getFaceColor(id);\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Hair\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getHairColor(id);\r\n\t\t\t}\r\n\r\n\t\t\tlet it = {\r\n\t\t\t\tid: id,\r\n\t\t\t\tname: item.name,\r\n\t\t\t\tdesc: item.desc,\r\n\t\t\t\tcash: item.isCash ? 1 : 0,\r\n\t\t\t\ticon: {\r\n\t\t\t\t\t\"\": `//labs.maplestory.io/api/gms/latest/item/${item.id}/icon`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tResourceManager.external[clz][cate].push(it);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(\"external resource: id(\" + id + \")\");\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction update_external_equip_list() {\r\n\tconst url = \"https://labs.maplestory.io/api/gms/latest/item/category/equip\";\r\n\tload_external_resource(url).then(() => {\r\n\t\t_concat_external_resource(category, origin_data);\r\n\t\tconcat_external_resource = _concat_external_resource;\r\n\t\tconsole.log(\"done: update_external_equip_list\");\r\n\t});\r\n}\r\n\r\nlet external_resource_promise = load_external_resource();\r\n\r\nwindow.concat_external_resource = _concat_external_resource_p;\r\n\r\nwindow.trigger_update_external_equip_list = function () {\r\n\texternal_resource_promise = load_external_resource();\r\n\twindow.concat_external_resource = _concat_external_resource_p;\r\n}\r\n\r\nasync function _concat_external_resource_p(category, origin_data) {\r\n\tawait external_resource_promise;\r\n\t_concat_external_resource(category, origin_data);\r\n\tconcat_external_resource = _concat_external_resource;\r\n}\r\n\r\nfunction _concat_external_resource(category, origin_data) {\r\n\ttry {\r\n\t\tconst list = ResourceManager.external.equip[category];\r\n\t\tif (!list) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet id_map = ResourceManager.equip_map[category];\r\n\r\n\t\tif (!id_map) {\r\n\t\t\tid_map = new Map();\r\n\t\t\t\r\n\t\t\torigin_data.forEach(item => {\r\n\t\t\t\tid_map.set(item.id, item);\r\n\t\t\t});\r\n\r\n\t\t\tResourceManager.equip_map[category] = id_map;\r\n\t\t}\r\n\r\n\t\tlist.forEach((item) => {\r\n\t\t\tlet id = item.id;\r\n\t\t\tif (!id_map.has(id)) {\r\n\t\t\t\titem.$foreign = true;\r\n\t\t\t\torigin_data.push(item);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet ori_item = id_map.get(id);\r\n\t\t\t\tori_item._name = item.name || \"\";\r\n\t\t\t\tori_item._desc = item.desc || \"\";\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcatch (ex) {\r\n\t\tconsole.error(ex);\r\n\t\tdebugger;\r\n\t}\r\n}\r\n\r\nwindow.load_extern_item_data = async function (id) {\r\n\tlet _raw = JSON.parse(await $get(`//labs.maplestory.io/api/gms/latest/item/${id}`));\r\n\tlet raw = {};\r\n\r\n\tlet default_ = _raw.frameBooks.default ? _raw.frameBooks.default.frames[0]:null;\r\n\r\n\tfor (let i in _raw.frameBooks) {\r\n\t\tlet _act = _raw.frameBooks[i];\r\n\t\tlet act = [];\r\n\r\n\t\tfor (let j = 0; j < _act.frames.length; ++j) {\r\n\t\t\tlet frame = _act.frames[j] || default_;\r\n\t\t\tif (!frame || !frame.effects) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet _frags = frame.effects;\r\n\t\t\tlet frags = {};\r\n\t\t\tfor (let k in _frags) {\r\n\t\t\t\tlet _frag = _frags[k];\r\n\t\t\t\tif (_frag.image) {\r\n\t\t\t\t\tfrags[k] = {\r\n\t\t\t\t\t\t\"\": \"data:image/png;base64,\" + _frag.image,\r\n\t\t\t\t\t\t\"origin\": _frag.originOrZero || _frag.origin || _frag.center,\r\n\t\t\t\t\t\t\"map\": _frag.mapOffset,\r\n\t\t\t\t\t\t\"z\": _frag.position\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tact[j] = frags;\r\n\t\t}\r\n\r\n\t\traw[i] = act;\r\n\t}\r\n\r\n\traw.info = {\r\n\t\tislot: _raw.metaInfo.equip.islot,\r\n\t\tvslot: _raw.metaInfo.equip.vslot,\r\n\t\ticon: _raw.metaInfo.icon ? (\"data:image/png;base64,\" + _raw.metaInfo.icon.iconRaw) : \"\",\r\n\t\tcash: (_raw.metaInfo.cash && _raw.metaInfo.cash.cash) ? 1 : 0,\r\n\t};\r\n\r\n\treturn raw;\r\n}\r\n","﻿\r\nimport { Vec2 } from \"../math.js\";\r\n\r\n\r\nexport class ActionAnimationFrameData {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.move = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded raw data\r\n\t * @param {ActionAnimationFrameData} raw\r\n\t * @param {string} action\r\n\t * @param {number} frame\r\n\t */\r\n\t_load(raw, action, frame) {\r\n\t\tthis._raw = raw;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = raw.delay;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tif (raw.move) {\r\n\t\t\tthis.move = new Vec2(raw.move.x, raw.move.y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.move = new Vec2(0, 0);\r\n\t\t}\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = raw.action || action;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = raw.frame || frame;\r\n\t}\r\n}\r\n\r\nexport class ActionAnimation {\r\n\tconstructor(raw) {\r\n\t\t/** @returns {ActionAnimationFrameData[]} */\r\n\t\tthis.frames = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._action = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\r\n\t\t/** @type {number} this.delay = delay < 0 ? -delay:0; if (this.delay == 0) launch attack */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.loop = false;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\t_load(action) {\r\n\t\tthis._action = action;\r\n\t\tthis.frames = ActionAnimation.Adef[action];\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\treload(action) {\r\n\t\tthis.reset();\r\n\t\tthis._load(action);\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * update action delay, target.action, target.action_frame, target.tx, target.ty\r\n\t * @param {number} stamp\r\n\t * @param {CharacterRenderer} target\r\n\t */\r\n\tupdate(stamp, target) {\r\n\t\tif (!this.frames) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fdat = this.fdat;\r\n\t\tlet delay = 0;\r\n\r\n\t\tif (!fdat) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.time = this.time + stamp;\r\n\r\n\t\tif (fdat.delay < 0) {\r\n\t\t\tfdat.delay = -fdat.delay;\r\n\t\t}\r\n\r\n\t\tif (fdat.delay > 0) {\r\n\t\t\tdelay = fdat.delay;\r\n\t\t\tthis.delay = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelay = -fdat.delay;\r\n\t\t\tthis.delay = delay;\r\n\t\t}\r\n\r\n\t\tif (this.time > delay) {\r\n\t\t\tthis.frame = ++this.frame;\r\n\t\t\tthis.time = 0;\r\n\t\t}\r\n\r\n\t\t//translate target position\r\n\t\tif (fdat.move) {\r\n\t\t\ttarget.tx = -fdat.move.x * target.front;\r\n\t\t\ttarget.ty = fdat.move.y;//Y 軸相反\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\tif (this.isEnd()) {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// 改變 action & action_frame 會造成迴圈: this.reload(this._action)\r\n\t\ttarget._action = fdat.action;\r\n\t\ttarget._action_frame = fdat.frame;\r\n\r\n\t\tif (!this.frames || this.fdat == null) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t\telse if (!this.loop) {\r\n\t\t\tthis._is_end = false;\r\n\t\t}\r\n\t\tif (this.frames.length <= 1) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\treturn this._is_end;\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.frames.reduce((total, frame) => total + frame.delay, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * frame data\r\n\t * @returns {ActionAnimationFrameData}\r\n\t */\r\n\tget fdat() {\r\n\t\treturn this.frames[this.frame];\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\t/** @type {{[action:string]:ActionAnimationFrameData[]}} */\r\n\t\tlet raw = await $get.data(ActionAnimation._base_path);\r\n\r\n\t\tlet aadef = Object.assign({}, raw);\r\n\t\t\r\n\t\tdelete aadef['info'];\r\n\r\n\t\tfor (let actName in aadef) {\r\n\t\t\tlet aa = aadef[actName];\r\n\t\t\taadef[actName] = Object.values(aa).map((_fdef, frame) => {\r\n\t\t\t\tlet fdef = new ActionAnimationFrameData();\r\n\t\t\t\tfdef._load(_fdef, actName, frame);\r\n\t\t\t\treturn fdef;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//action definition\r\n\t\tActionAnimation.Adef = aadef;\r\n\r\n\t\twindow.CharacterActionAnimationDefinition = aadef;\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Character/00002000\";\r\n\t}\r\n}\r\n/**\r\n * action definition\r\n * @type {{[action:string]:ActionAnimationFrameData[]}}\r\n */\r\nActionAnimation.Adef = null;\r\n\r\n","\r\nwindow.DownloadData = (function () {\r\n\tlet a = document.createElement(\"a\");\r\n\tdocument.body.appendChild(a);\r\n\ta.style = \"display: none\";\r\n\ta.target = \"_blank\";\r\n\treturn function (text, type, fileName) {\r\n\t\tlet blob = new Blob([text], { type: type || \"octet/stream\" });\r\n\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\tif (fileName && fileName != \"\") {\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = fileName;\r\n\t\t\ta.click();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//a.href = url;\r\n\t\t\t//a.click();\r\n\t\t\twindow.open(url, '_blank');\r\n\t\t}\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n}());\r\n\r\nwindow.SelectText = function (elem) {\r\n\tvar range, selection;\r\n\r\n\tif (document.body.createTextRange) {\r\n\t\trange = document.body.createTextRange();\r\n\t\trange.moveToElementText(elem);\r\n\t\trange.select();\r\n\t}\r\n\telse if (window.getSelection) {\r\n\t\tselection = window.getSelection();\r\n\t\trange = document.createRange();\r\n\t\trange.selectNodeContents(elem);\r\n\t\tselection.removeAllRanges();\r\n\t\tselection.addRange(range);\r\n\t}\r\n}\r\nwindow.copyToClipboard = function (text) {\r\n\tvar $temp = $(\"<input>\");\r\n\t$(\"body\").append($temp);\r\n\t$temp.val(text).select();\r\n\tdocument.execCommand(\"copy\");\r\n\t$temp.remove();\r\n}\r\n\r\n/**\r\n * disable textNode \"#text\"\r\n * @param {string} xml - xml\r\n * @param {string[]=} arrayTags - optional\r\n * @returns {object}\r\n */\r\nfunction parseXml(xml, arrayTags) {\r\n\tvar dom = null;\r\n\tif (window.DOMParser) {\r\n\t\tdom = (new DOMParser()).parseFromString(xml, \"text/xml\");\r\n\t}\r\n\telse if (window.ActiveXObject) {\r\n\t\tdom = new ActiveXObject('Microsoft.XMLDOM');\r\n\t\tdom.async = false;\r\n\t\tif (!dom.loadXML(xml)) {\r\n\t\t\tthrow dom.parseError.reason + \" \" + dom.parseError.srcText;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tthrow \"cannot parse xml string!\";\r\n\t}\r\n\r\n\tfunction isArray(o) {\r\n\t\treturn Object.prototype.toString.apply(o) === '[object Array]';\r\n\t}\r\n\r\n\tfunction parseNode(xmlNode, result) {\r\n\t\tif (xmlNode.nodeName == \"#text\" && xmlNode.nodeValue.trim() == \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar jsonNode = {};\r\n\t\tvar existing = result[xmlNode.nodeName];\r\n\t\tif (existing) {\r\n\t\t\tif (!isArray(existing)) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [existing, jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName].push(jsonNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName] = jsonNode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (xmlNode.attributes) {\r\n\t\t\tvar length = xmlNode.attributes.length;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tvar attribute = xmlNode.attributes[i];\r\n\t\t\t\tjsonNode[attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar length = xmlNode.childNodes.length;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tparseNode(xmlNode.childNodes[i], jsonNode);\r\n\t\t}\r\n\t}\r\n\r\n\tvar result = {};\r\n\tif (dom.childNodes.length) {\r\n\t\tparseNode(dom.childNodes[0], result);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n"],"sourceRoot":""}