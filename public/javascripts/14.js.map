{"version":3,"sources":["webpack:///./src/game/Animation.js","webpack:///./src/game/Renderer/CharacterRenderer.js","webpack:///./src/init.js","webpack:///./src/game/Sprite.js","webpack:///./public/javascripts/resource.js","webpack:///./src/game/Renderer/CharacterActionAnimation.js","webpack:///./src/util.js"],"names":["window","m_draw_animation_texture_info","IAnimation","[object Object]","raw","url","this","_raw","_url","frame","time","delta","textures","is_loop","is_end","reduce","pv","cv","delay","newAnim","constructor","Error","stamp","texture","AnimationBase","super","i","_Sprite_js__WEBPACK_IMPORTED_MODULE_2__","isLoaded","__loadTexture","fc","length","reset","renderer","x","y","angle","flip","drawRotaGraph","Animation","draw","_draw_and_preload","zMap","sMap","FragmentTexture","_Sprite_js__WEBPACK_IMPORTED_MODULE_5__","full_path","origin","__proto__","_math_js__WEBPACK_IMPORTED_MODULE_6__","prototype","map","relative","calcRelative","_calcRelative","filter","_IRenderer_js__WEBPACK_IMPORTED_MODULE_4__","opacity","_slot","_place","classList","z","not_value","console","warn","order","stack","empty","brow","neck","navel","hand","handMove","_earBelowHead","earBelowHead","_earOverHead","earOverHead","that","base","anchor","sub","add","chara","_getRelativeFunction","isHasAnchor","isAnchorNeck","_calcRelative_neck","isAnchorBrow","_calcRelative_brow","isAnchorNavel","slots","body","_getOrigin","_calcRelative_navel","isAnchorHand","_calcRelative_hand","isAnchorHandMove","lastIndexOf","_calcRelative_handMove_lHand","_calcRelative_handMove","_calcRelativeEmpty","fragments","getTexture","_anchor","head","arm","globalAlpha","isEmpty","drawGraph2","ctx","toString","HairFragmentTexture","args","graph2","graph3","_render","ItemEffectAnimation","_Animation__WEBPACK_IMPORTED_MODULE_2__","Object","defineProperty","value","__getAttr","load","attr","defVal","actionExceptRotation","oy","height","ItemEffect","animation","action","fixed","itemEffectList","_list","$get","list","clear","forEach","id","parseInt","ex","equipID","eff","Number","has","data","_load","update","render","front","__construct","join","Set","CharacterFragmentBase","place","CharacterBodyFragment","getFrameTexture","action_frame","ft","CharacterFaceFragment","emotion_frame","emotion","EquipImageFilter","equip","hue","j","k","sat","bri","contrast","ICharacterEquip","_animation_type","CharacterEquipBase","effect","_onload","categoryInfo","slot_order","islot","vslot","toJSON","__onload","func","call","cateInfo","use_category","promise_raw","promise_name","__load","path","then","name","desc","reason","Promise","resolve","all","result","_public_javascripts_resource_js__WEBPACK_IMPORTED_MODULE_0__","isEquipExist","load_extern_item_data","__load_slot","__load_fragments","a","fragmentConstructor","action_list","keys","_raw_textures","_base_path","__load_frame_textures","fragment_textures","frag","__load_place_textures","FragmentTextureType","slot","info","islots","match","vslots","getIconUrl","getIconRawUrl","CharacterEquip","d","isNaN","isFinite","CharacterEquipHair","CharacterEquipFaceAcc","face","_info","fragmentType","elfEarFragment","lefEarFragment","highlefEarFragment","ear","lefEar","highlefEar","elfEar","slice","CharacterSlots","_ordered_slot","_hair","_hair2","_hairMix2","_hair3","_hairMix3","hair","cap","accessoryFace","accessoryEyes","accessoryEars","coat","longcoat","pants","shoes","glove","cape","shield","weapon","configurable","writable","enumerable","hairColor2","hairMix2","hairColor3","hairMix3","color","getColorHairID","get","undefined","getHairColor","error","TypeError","hc2Id","$promise_hair2","__loadColoredHair","hair2","item","ori","hc3Id","$promise_hair3","hair3","loadedEquip","alert","_unload","push","ha","Math","trunc","enumerate_equip","CharacterChangeLog","useEquip","unuseEquip","weaponType","CharacterAnimationBase","_$dirty","job","subJob","actani","_CharacterActionAnimation_js__WEBPACK_IMPORTED_MODULE_7__","speed","fixed_speed","_action","_action_frame","_action_time","_emotion","_emotion_frame","_emotion_time","_emotion_frame_sequence","__require_update","__frag_list","$$changeLog","nc","tasks","getFrameCount","count","_isLoaded_or_doload","$promise","act","reload","frame_count","action_frame_count","next","f","action_time","action_delay","getDelay","emo","_action_list","indexOf","circularSequence","emotion_frame_count","random","emotion_time","emotion_delay","isEnd","loop","getSpeed","_update","__update_frag_list","pushGlobalAlpha","__draw_list","popGlobalAlpha","pushMatrix","translate","rotate","m_a","scale","popMatrix","__add_frag_to_list","__add_equip_to_frag_list","is_back","fts","startsWith","ae","_calcBoundBox","left","top","right","bottom","x0","y0","x1","width","y1","min","max","_boundBox","obj","CharacterRenderer","tx","ty","__load_task","Init","reverse","use","initAnimation","waitLoaded","_draw","__forceUpdate","_waitFrameTexturesLoaded","category","getJobWeaponCategory","isCashWeapon","task","_use","_unuse","code","es","split","_clear","v","ss","cate","h2","h3","hc","c2","m2","c3","m3","hairMix4","apply","hairColor","col","faceColor","getFaceColor","getColorFaceID","changeLog","unuse","genCode","_stringify","link","enumerate","log","open","_outlink","__texture_to_base64","frag_list","file_name","svg","clz","DownloadData","filename","bound","size","$swapCanvas","c2w","_ctx2","canvas","c2h","base64","toDataURL","elem","document","createElement","download","href","appendChild","click","removeChild","$src","src","reject","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","onerror","ev","readAsDataURL","response","responseType","send","_init_js__WEBPACK_IMPORTED_MODULE_1__","jQuery","jquery__WEBPACK_IMPORTED_MODULE_0___default","$","vue__WEBPACK_IMPORTED_MODULE_14___default","config","productionTip","vuex__WEBPACK_IMPORTED_MODULE_15__","onwheel","init_tasks","AddInitTask","InitAll","SpriteBase","_Engine_js__WEBPACK_IMPORTED_MODULE_2__","__w","__h","isTexture","hasOwnProperty","__isEmpty","group","groupEnd","_order","defaultValue","propertyName","converter","_engine","drawGraph","Sprite","_get","_math_js__WEBPACK_IMPORTED_MODULE_0__","w","h","save","rect","clip","draw2","restore","sw","sh","sx","_drawImage","sy","drawPattern","drawHorizontalPattern","drawVerticalPattern","_drawPattern","_drawHorizontalPattern","_drawVerticalPattern","$failed_urls","$archive","character_emotion_list","character_action_list","ItemCategoryInfo","id_prefix","imgDir","listPath","categoryName","type","arguments","dataDir","iconPath","iconRawPath","defineProperties","imageUrl","_id","itemId","Equip","Consume","Etc","Install","Cash","typeName","0","1","2","3","4","typeId","0000","0001","0002","0003","0004","0100","0101","0102","0103","0104","0105","0106","0107","0108","0109","0110","0121","0122","0123","0124","0125","0126","0127","0128","0130","0131","0132","0133","0134","013526","013530","0136","0137","0138","0140","0141","0142","0143","0144","0145","0146","0147","0148","0149","0150","0151","0152","0153","0154","0155","0156","0157","0158","0170","_categoryList","info_map","set","cat","key","ResourceManager","dp","equip_map","$setValue","JSON","parse","timeout","status","responseText","ontimeout","e","onabort","root_path","$ROOT_PATH","archive","failed_urls","endsWith","ps","target","lastIndex","origin_value","$getValue","$ResourceManager","symbol_isPack","Symbol","url_startsWith_protocol","RegExp","test","bind","_setValueByPath","is_pack","_getValueFromArchiveByPath","_path","_getDataPathByUrl","$getValueAsync","async","pack","packUrl","jsonText","packSync","dataUrl","dataSync","listUrl","listSync","soundMp3Url","soundWavUrl","assetUrl","asset","ItemAttrNormalize","gender","g","_equip","regexp_getHairStyleID","regexp_getFaceStyleID","regexp_getHairColor","regexp_getFaceColor","CharacterRenderConfig","style","m","id_1","id_2","String","ItemTypeInfo","Hat","Cape","Top","Overall","Glove","Bottom","Shield","Shoes","Eye Decoration","Earrings","Face Accessory","Face","Hair","external","load_external_resource","_external_raw","padStart","typeInfo","overallCategory","toLowerCase","subCategory","it","cash","isCash","icon","","external_resource_promise","_concat_external_resource_p","origin_data","_concat_external_resource","concat_external_resource","id_map","Map","ori_item","_name","_desc","$foreign","trigger_update_external_equip_list","default_","frameBooks","default","frames","_act","effects","_frags","frags","_frag","image","originOrZero","center","mapOffset","position","metaInfo","iconRaw","ActionAnimationFrameData","move","ActionAnimation","_is_end","Adef","fdat","total","aadef","assign","actName","aa","values","_fdef","fdef","CharacterActionAnimationDefinition","text","fileName","blob","Blob","URL","createObjectURL","revokeObjectURL","SelectText","range","selection","createTextRange","moveToElementText","select","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","copyToClipboard","$temp","append","val","execCommand","remove"],"mappings":"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","file":"14.js","sourcesContent":["﻿\r\nimport { Vec2 } from \"./math.js\";\r\nimport { IGraph, IRenderer } from \"./IRenderer.js\";\r\n\r\nimport { Sprite } from \"./Sprite.js\";\r\n\r\n\r\nwindow.m_draw_animation_texture_info = false;\r\n\r\nclass IAnimation {\r\n\tconstructor(raw, url) {\r\n\t\tthis._raw = raw;\r\n\t\tthis._url = url;\r\n\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** elapsed time */\r\n\t\tthis.delta = 0;\r\n\r\n\t\t/** @type {Sprite[]} */\r\n\t\tthis.textures = [];\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_loop = true;\r\n\t\t\r\n\t\t/** @type {boolean} */\r\n\t\tthis.is_end = false;\r\n\r\n\t\tif (!this._url) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.textures.reduce((pv, cv) => pv + cv.delay, 0);\r\n\t}\r\n\t\r\n\tclone() {\r\n\t\tlet newAnim = new this.constructor(this._raw, this._url);\r\n\t\tnewAnim.textures = this.textures;\r\n\t\treturn newAnim;\r\n\t}\r\n\t\r\n\tload() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/** reset frame */\r\n\t_resetFrame() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t}\r\n\r\n\t/** restart */\r\n\treset() {\r\n\t\tthis.frame = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.is_end = false;\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * remove at nextStep\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.is_loop = false;//防止重複\r\n\t\tthis.is_end = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * process animation\r\n */\r\nexport class AnimationBase extends IAnimation {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {!string} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {Promise<Sprite>}\r\n\t */\r\n\tasync load() {\r\n\t\t//if (!this._raw) {\r\n\t\t//\tthis._raw = await $get.data(this._url);\r\n\t\t//}\r\n\r\n\t\tfor (let i = 0; i in this._raw; ++i) {\r\n\t\t\tlet url = this._url + \"/\" + i;\r\n\r\n\t\t\tlet texture = new Sprite(this._raw[i]);\r\n\r\n\t\t\ttexture._url = url;\r\n\r\n\t\t\tthis.textures[i] = texture;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.textures[0]) {\r\n\t\t\tif (!this.textures[0].isLoaded()) {\r\n\t\t\t\tthis.textures[0].__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tisEnd() {\r\n\t\treturn this.is_end;\r\n\t}\r\n\r\n\t/**\r\n\t * aways loop\r\n\t * @param {number} stamp\r\n\t */\r\n\t_update(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = ++this.frame % fc;\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t\t//this.frame = Math.trunc(this.time / 1000) % fc;\r\n\t\t}\r\n\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} stamp\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tconst fc = this.textures.length;\r\n\r\n\t\tif (fc > 0) {//??\r\n\t\t\tthis.time = this.time + stamp;\r\n\r\n\t\t\tif (this.time > this.texture.delay) {\r\n\t\t\t\tthis.frame = this.frame + 1;\r\n\t\t\t\tif (this.frame >= fc) {\r\n\t\t\t\t\tif (this.is_loop) {\r\n\t\t\t\t\t\tthis.reset();//make loop\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//防止錯誤\r\n\t\t\t\t\t\tthis.frame = fc - 1;//this._resetFrame();\r\n\r\n\t\t\t\t\t\tthis.is_end = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.delta += stamp;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw(renderer, x, y, angle, flip) {\r\n\t\tlet texture = this.texture;\r\n\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t}\r\n\t\r\n\tget texture() {\r\n\t\treturn this.textures[this.frame];\r\n\t}\r\n}\r\n\r\n/**\r\n * animation rendering\r\n */\r\nexport class Animation extends AnimationBase {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tthis.draw = this._draw_and_preload;\r\n\t}\r\n\r\n\t/**\r\n\t * draw and load next frame\r\n\t * @param {IRenderer} renderer - GraphLayerRenderer\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\t_draw_and_preload(renderer, x, y, angle, flip) {\r\n\t\tlet frame;\r\n\r\n\t\t// if current frame is not loaded then render prev frame\r\n\t\tfor (frame = this.frame; frame >= 0; --frame) {\r\n\t\t\tlet texture = this.textures[frame];\r\n\r\n\t\t\tif (texture.isLoaded()) {\r\n\t\t\t\trenderer.drawRotaGraph(texture, x, y, angle, flip);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//preload next frame\r\n\t\tlet texture = this.textures[++frame];\r\n\t\tif (texture) {//if frame < this.textures.length\r\n\t\t\tif (!texture.isLoaded()) {\r\n\t\t\t\ttexture.__loadTexture();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {//if all testure are loaded\r\n\t\t\tdelete this.draw;\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\nimport { CharacterRenderConfig, ItemCategoryInfo, ResourceManager } from '../../../public/javascripts/resource.js';\r\nimport { AddInitTask } from \"../../init.js\";\r\nimport { Animation } from \"../Animation\";\r\nimport { engine } from '../Engine.js';\r\nimport { IRenderer, ImageFilter } from '../IRenderer.js';\r\nimport { Sprite, SpriteBase } from '../Sprite.js';\r\nimport { Rectangle, Vec2 } from '../math.js';\r\nimport { ActionAnimation } from './CharacterActionAnimation.js';\r\n\r\n\r\nlet zMap = {};\r\nlet sMap = {};\r\n\r\n\r\n/**\r\n * 00026623.blink[1].brow has bug\r\n * 'Weapon/01702694' is Longcoat(islot)\r\n * how to use cash-weapon (ex: 01702504|0152)\r\n */\r\n\r\n/**\r\n * multi-image-sprite\r\n */\r\nclass FragmentTexture extends SpriteBase {\r\n\t/**\r\n\t * @param {wzproperty} raw\r\n\t * @param {string} full_path\r\n\t */\r\n\tconstructor(raw, full_path) {\r\n\t\tsuper(raw, full_path);\r\n\r\n\t\tif (this._raw.origin) {\r\n\t\t\tthis._raw.origin.__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\tfor (let i in this._raw.map) {\r\n\t\t\tthis._raw.map[i].__proto__ = Vec2.prototype;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * if this.relative == null then hide\r\n\t\t */\r\n\t\tthis.relative = new Vec2(0, 0);\r\n\r\n\t\t/** @type {function(CharacterAnimationBase):Vec2} */\r\n\t\tthis.calcRelative = this._calcRelative;//this._getRelativeFunction();//this.__old_calcRelative;//\r\n\r\n\t\tthis.filter = new ImageFilter();\r\n\t\tthis.opacity = 1;\r\n\r\n\r\n\t\t/** @type {string} - extra property. */\r\n\t\tthis._slot = null;\r\n\r\n\t\t/** @type {string} - extra property. 在哪個部位 */\r\n\t\tthis._place = null;\r\n\r\n\t\t/** @type {string} - extra property: _slot itemId, _place, _raw.z z */\r\n\t\tthis.classList = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget z() {\r\n\t\treturn zMap[this._raw.z] || 1;\r\n\t}\r\n\tset z(not_value) {\r\n\t\tconsole.warn(\"Not implement\");\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\tdebugger;\r\n\t\treturn this.z;\r\n\t}\r\n\tset order(not_value) {\r\n\t\tdebugger;\r\n\t\tconsole.warn(new Error(\"Not implement\").stack);\r\n\t}\r\n\r\n\t/** @returns {Vec2} */\r\n\tget origin() { return this._raw.origin || Vec2.empty; }\r\n\r\n\tisHasAnchor() { return !!this._raw.map; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget brow() { return this._raw.map.brow; }\r\n\tisAnchorBrow() { return !!this._raw.map.brow; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget neck() { return this._raw.map.neck; }\r\n\tisAnchorNeck() { return !!this._raw.map.neck; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget navel() { return this._raw.map.navel; }\r\n\tisAnchorNavel() { return !!this._raw.map.navel; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget hand() { return this._raw.map.hand; }\r\n\tisAnchorHand() { return !!this._raw.map.hand; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget handMove() { return this._raw.map.handMove; }\r\n\tisAnchorHandMove() { return !!this._raw.map.handMove; }\r\n\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earBelowHead() { return this._raw.map.earBelowHead; }\r\n\tisAnchor_EarBelowHead() { return !!this._raw.map.earBelowHead; }\r\n\r\n\t/** @returns {Vec2} */\r\n\tget _earOverHead() { return this._raw.map.earOverHead; }\r\n\tisAnchor_EarOverHead() { return !!this._raw.map.earOverHead; }\r\n\r\n\t/**\r\n\t * @param {FragmentTexture} that\r\n\t * @param {FragmentTexture} base\r\n\t * @param {string} anchor - anchor name\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_anchor(that, base, anchor) {\r\n\t\treturn base[anchor].sub(that[anchor]).add(base.origin.sub(that.origin));\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative(chara) {\r\n\t\tthis.calcRelative = this._getRelativeFunction(chara);\r\n\t\treturn this.calcRelative(chara);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getRelativeFunction(chara) {\r\n\t\tif (!this.isHasAnchor()) {\r\n\t\t\treturn this._calcRelativeEmpty;\r\n\t\t}\r\n\t\tif (this.isAnchorNeck()) {\r\n\t\t\treturn this._calcRelative_neck;\r\n\t\t}\r\n\t\tif (this.isAnchorBrow()) {\r\n\t\t\treturn this._calcRelative_brow;\r\n\t\t}\r\n\t\tif (this.isAnchorNavel()) {\r\n\t\t\tif (this == chara.slots.body) {\r\n\t\t\t\treturn this._getOrigin;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_navel;\r\n\t\t}\r\n\t\tif (this.isAnchorHand()) {\r\n\t\t\treturn this._calcRelative_hand;\r\n\t\t}\r\n\t\tif (this.isAnchorHandMove()) {\r\n\t\t\tif (this._url.lastIndexOf(\"lHand\") > 0) {\r\n\t\t\t\treturn this._calcRelative_handMove_lHand;\r\n\t\t\t}\r\n\t\t\treturn this._calcRelative_handMove;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelativeEmpty(chara) {\r\n\t\treturn Vec2.empty;\r\n\t}\r\n\t/**\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_getOrigin() {\r\n\t\treturn this.origin;\r\n\t}\r\n\t/**\r\n\t * neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_neck(chara) {\r\n\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\treturn this._anchor(this, body, \"neck\").sub(body.origin);\r\n\t}\r\n\t/**\r\n\t * brow on the head & head on the neck & neck on the navel\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_brow(chara) {\r\n\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\tconst head = chara.slots.head.fragments.head.getTexture(chara);\r\n\t\treturn this._anchor(this, head, \"brow\").add(this._anchor(head, body, \"neck\")).sub(body.origin);//anchor_brow+(-7,-33)\r\n\t}\r\n\t/**\r\n\t * this is origin point, no anchor\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_navel(chara) {\r\n\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\treturn body.navel.sub(this.navel, this.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_hand(chara) {\r\n\t\tconst body = chara.slots.body.fragments.body.getTexture(chara);\r\n\t\tconst hand = chara.slots.body.fragments.arm.getTexture(chara);\r\n\t\tif (hand == null) {\r\n\t\t\treturn Vec2.empty.sub(this.hand).sub(this.origin).sub(body.origin);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this._anchor(this, hand, \"hand\").sub(this._anchor(body, hand, \"navel\")).sub(body.origin);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove(chara) {\r\n\t\treturn Vec2.empty.sub(this.origin).sub(this.handMove);\r\n\t}\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {Vec2}\r\n\t */\r\n\t_calcRelative_handMove_lHand(chara) {\r\n\t\treturn Vec2.empty.sub(this.origin);\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tthis.relative = this.calcRelative(chara);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Character} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!this.relative) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.globalAlpha = this.opacity || 1;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\trenderer.drawGraph2(this, x, y);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass HairFragmentTexture extends FragmentTexture {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph2 = null;\r\n\r\n\t\t/** @type {HairFragmentTexture} */\r\n\t\tthis.graph3 = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t */\r\n\tupdate(chara) {\r\n\t\tthis.relative = this.calcRelative(chara);\r\n\t\tif (this.graph2) {\r\n\t\t\tthis.graph2.relative = this.relative;\r\n\t\t}\r\n\t\tif (this.graph3) {\r\n\t\t\tthis.graph3.relative = this.relative;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {Character} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (!this.relative) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\trenderer.globalAlpha = this.opacity || 1;\r\n\t\tif (this.filter.isEmpty) {\r\n\t\t\tthis._render(renderer);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderer.ctx.filter = this.filter.toString();\r\n\t\t\tthis._render(renderer);\r\n\t\t\trenderer.ctx.filter = \"none\";\r\n\t\t}\r\n\t}\r\n\t_render(renderer) {\r\n\t\tconst x = this.relative.x;\r\n\t\tconst y = this.relative.y;\r\n\r\n\t\trenderer.drawGraph2(this, x, y);\r\n\r\n\t\tif (this.graph2 && this.graph2.opacity) {//color2\r\n\t\t\trenderer.globalAlpha = this.graph2.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph2, x, y);\r\n\t\t}\r\n\t\tif (this.graph3 && this.graph3.opacity) {//color3\r\n\t\t\trenderer.globalAlpha = this.graph3.opacity;\r\n\r\n\t\t\trenderer.drawGraph2(this.graph3, x, y);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nclass ItemEffectAnimation extends Animation {\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\t\t\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\t//this._url = this._url;\r\n\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"pos\", 1);\r\n\r\n\t\tsuper.load();\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {boolean} actionExceptRotation\r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\trender(renderer, actionExceptRotation, angle, flip) {\r\n\t\tif (actionExceptRotation) {\r\n\t\t\tthis.draw(renderer, 0, 0, -angle, flip);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst oy = -this.texture.height * 0.25;\r\n\t\t\tthis.draw(renderer, 0, oy, 0, flip);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\t/data/Effect/ItemEff/1102918\r\nclass ItemEffect {\r\n\tconstructor() {\r\n\t\tthis._url = null;\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {{[animationName:string]:ItemEffectAnimation}} */\r\n\t\tthis.animation = {};\r\n\r\n\t\tthis.action = null;\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\r\n\t\tthis.fixed = 0;\r\n\t\tthis.z = -2;\r\n\t\tthis.action = 1;\r\n\t\tthis.actionExceptRotation = 0;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\ttry {\r\n\t\t\t/** @type {Set<string>} */\r\n\t\t\tlet itemEffectList = ItemEffect._list;\r\n\r\n\t\t\t/** @type {string[]} */\r\n\t\t\tlet raw = $get.list(\"/Effect/ItemEff\");\r\n\r\n\t\t\titemEffectList.clear();\r\n\r\n\t\t\traw.forEach(id => {\r\n\t\t\t\titemEffectList.add(parseInt(id, 10));\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<ItemEffect>}\r\n\t */\r\n\tstatic async load(equipID) {\r\n\t\tlet eff = new ItemEffect();\r\n\t\tawait eff.load(equipID);\r\n\t\treturn eff;\r\n\t}\r\n\r\n\t/**\r\n\t * if (!exist) return null\r\n\t * @param {string} equipID\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tasync load(equipID) {\r\n\t\tconst id = Number(equipID);\r\n\t\tconst url = `/Effect/ItemEff/${id}/effect`;\r\n\r\n\t\tif (!ItemEffect._list.has(id)) {\r\n\t\t\t//if (!confirm(\"Try load: \" + url)) {\r\n\t\t\t//\treturn;\r\n\t\t\t//}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet raw = await $get.data(url);\r\n\t\tif (raw) {\r\n\t\t\treturn await this._load(equipID, url, raw);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp\r\n\t * @param {string} action\r\n\t */\r\n\tupdate(stamp, action) {\r\n\t\tif (action in this.animation) {\r\n\t\t\tthis.action = action;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.action = \"default\";\r\n\t\t}\r\n\r\n\t\tif (this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].update(stamp);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {CharacterRenderer} chara\r\n\t */\r\n\trender(renderer, chara) {\r\n\t\tif (this.animation && this.animation[this.action]) {\r\n\t\t\tthis.animation[this.action].render(renderer, this.actionExceptRotation, chara.angle, chara.front > 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} equipID\r\n\t * @param {object} raw_data\r\n\t */\r\n\tasync _load(equipID, url, raw) {\r\n\t\tthis.id = equipID;\r\n\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tthis.__construct();\r\n\t}\r\n\t__construct() {\r\n\t\tthis.__getAttr(\"fixed\", 0);\r\n\t\tthis.__getAttr(\"z\", -1);\r\n\t\tthis.__getAttr(\"action\", 1);\r\n\t\tthis.__getAttr(\"actionExceptRotation\", 0);\r\n\r\n\t\tfor (let i in this._raw) {\r\n\t\t\tif (this._raw[i] && typeof this._raw[i] == \"object\" && '0' in this._raw[i]) {//animation has frames\r\n\t\t\t\tthis.animation[i] = new ItemEffectAnimation(this._raw[i], [this._url, i].join(\"/\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t__getAttr(attr, defVal) {\r\n\t\tif (attr in this._raw) {\r\n\t\t\tthis[attr] = this._raw[attr];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis[attr] = defVal;\r\n\t\t}\r\n\t}\r\n}\r\n/** @type {Set<string>} */\r\nItemEffect._list = new Set();\r\n\r\nclass CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tthis.textures = textures;\r\n\t\t//this.opacity = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @param {string} place\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara, place) {\r\n\t\tthrow new Error(\"Not implement\");\r\n\t}\r\n}\r\n\r\nclass CharacterBodyFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.action_frame);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.action in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t//if (this.textures.is_show) {\r\n\t\t\tlet ft = this.textures[chara.action][frame];\r\n\t\t\tif (ft) {\r\n\t\t\t\t//ft.opacity = this.opacity;\r\n\t\t\t\treturn ft;\r\n\t\t\t}\r\n\t\t//}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass CharacterFaceFragment extends CharacterFragmentBase {\r\n\tconstructor(textures) {\r\n\t\tsuper(textures);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetTexture(chara) {\r\n\t\treturn this.getFrameTexture(chara, chara.emotion_frame);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @param {number} frame\r\n\t * @returns {FragmentTexture}\r\n\t */\r\n\tgetFrameTexture(chara, frame) {\r\n\t\tif (!(chara.emotion in this.textures)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t//if (this.textures.is_show) {\r\n\t\t\tlet ft = this.textures[chara.emotion][frame];\r\n\t\t\t//ft.opacity = this.opacity;\r\n\t\t\treturn ft;\r\n\t\t//}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass EquipImageFilter {\r\n\t/**\r\n\t * @param {ICharacterEquip} equip\r\n\t */\r\n\tconstructor(equip) {\r\n\t\tthis.equip = equip;\r\n\t}\r\n\r\n\tget hue() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.hue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset hue(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget sat() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.sat;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset sat(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.sat = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget bri() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset bri(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.bri = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget contrast() {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.filter.contrast;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset contrast(value) {\r\n\t\tconst equip = this.equip;\r\n\t\tfor (let i in equip.fragments) {\r\n\t\t\tfor (let j in equip.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < equip.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = equip.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.contrast = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\thue: this.hue,\r\n\t\t\tsat: this.sat,\r\n\t\t\tbri: this.bri,\r\n\t\t\tcontrast: this.contrast,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nclass ICharacterEquip {\r\n\tconstructor() {\r\n\t}\r\n\r\n\tget _animation_type() {\r\n\t\tthrow new Error(\"Not Implement\");\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t_unload() {\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: -1,//invalid ID\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * ??\r\n */\r\nclass _CharacterEquipSlotLink extends ICharacterEquip {\r\n\tconstructor(slot_link) {\r\n\t\tsuper();\r\n\t\tthis.slot_link = slot_link;//??\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: slot_link,//??\r\n\t\t};\r\n\t}\r\n}\r\n\r\nclass CharacterEquipBase extends ICharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\t\r\n\t\tthis._raw = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\t//this._url = null;\r\n\t\t\t\r\n\t\t/** @type {ItemEffect} */\r\n\t\tthis.effect = null;\r\n\r\n\t\t/**\r\n\t\t * this.fragments[place][action][frame]\r\n\t\t * @type {{[place:string]:{[action:string]:FragmentTexture[]}}}\r\n\t\t */\r\n\t\tthis.fragments = null;\r\n\r\n\t\tthis._onload = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.id = null;\r\n\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tthis.categoryInfo = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.slot_order = 0;\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.islot = {};\r\n\r\n\t\t/** @type {object<string, number>} */\r\n\t\tthis.vslot = {};\r\n\r\n\t\tthis.filter = new EquipImageFilter(this);\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tid: this.id,\r\n\t\t\tfilter: this.filter.toJSON(),\r\n\t\t};\r\n\t}\r\n\r\n\tisLoaded() {\r\n\t\treturn this.fragments != null;\r\n\t}\r\n\r\n\t/** @type {function(CharacterEquipBase):void} */\r\n\tget _onload() {\r\n\t\treturn this.__onload;\r\n\t}\r\n\tset _onload(func) {\r\n\t\tthis.__onload = func;\r\n\t\tif (this.isLoaded()) {\r\n\t\t\tthis.__onload.call(this, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {void} use_category - no use\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tlet promise_raw, promise_name;\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.categoryInfo = cateInfo;\r\n\t\t\r\n\t\tpromise_raw = this.__load(url, id, cateInfo);\r\n\r\n\t\tif (cateInfo.path) {\r\n\t\t\tpromise_name = $get.data(`/String/Eqp/Eqp/${cateInfo.path}/${Number(id)}`).then(data => {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tthis.name = data.name;\r\n\t\t\t\t\tthis.desc = data.desc;\r\n\t\t\t\t}\r\n\t\t\t}, reason => {\r\n\t\t\t\tthis.name = \"[\" + id + \"]\";\r\n\t\t\t\tthis.desc = \"\";\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn new Promise(function (resolve) {\r\n\t\t\tPromise.all([promise_raw, promise_name]).then(function (result) {\r\n\t\t\t\tresolve(result[0]);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tasync __load(url, id, cateInfo) {\r\n\t\tlet raw;\r\n\r\n\t\ttry {\r\n\t\t\tif (ResourceManager.isEquipExist(id, cateInfo)) {\r\n\t\t\t\traw = await $get.data(url);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!raw && load_extern_item_data) {\r\n\t\t\t\traw = await load_extern_item_data(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tif (!raw) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//this._url = url;\r\n\t\tObject.defineProperty(this, \"_raw\", {\r\n\t\t\tvalue: raw,\r\n\t\t});\r\n\r\n\t\tlet textures = {};\r\n\r\n\t\tthis.__load_slot();\r\n\r\n\t\tthis.__load_fragments();\r\n\r\n\t\tif (this._onload) {\r\n\t\t\tthis._onload.call(this, this);\r\n\t\t}\r\n\r\n\t\t//// if not body, head, face, hair then try load effect\r\n\t\t//if (id >= \"00050000\") {\r\n\t\t\t// load if exist\r\n\t\t\tItemEffect.load(this.id).then(a => this.effect = a);//01102918\t//01102915\r\n\t\t//}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tconst fragmentConstructor = this.fragmentConstructor;\r\n\r\n\t\t//Object.keys(this._raw_textures).map(k => { return '0' in this._raw_textures[k]; })\r\n\r\n\t\tlet action_list = Object.keys(this._raw_textures);\r\n\r\n\t\tlet textures = {};\r\n\t\tfor (let action of action_list) {\r\n\t\t\tif (\"0\" in this._raw_textures[action]) {\r\n\t\t\t\tlet _url = this._base_path + action;\r\n\r\n\t\t\t\ttextures[action] = this.__load_frame_textures(this._raw_textures[action], _url);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragment_textures = {};\r\n\t\tfor (let action in textures) {\r\n\t\t\tfor (let frame in textures[action]) {\r\n\t\t\t\tfor (let place in textures[action][frame]) {\r\n\t\t\t\t\tif (!(place in fragment_textures)) {\r\n\t\t\t\t\t\tfragment_textures[place] = {};\r\n\t\t\t\t\t\t//fragment_textures[place].is_show = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!(action in fragment_textures[place])) {\r\n\t\t\t\t\t\tfragment_textures[place][action] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfragment_textures[place][action][frame] = textures[action][frame][place];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fragments = {};\r\n\t\tfor (let frag in fragment_textures) {\r\n\t\t\tfragments[frag] = new fragmentConstructor(fragment_textures[frag]);\r\n\t\t}\r\n\t\tthis.fragments = fragments;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {Object.<string, FragmentTexture>[]} - array - textures[frame][place]\r\n\t */\r\n\t__load_frame_textures(_raw, _url) {\r\n\t\tlet textures = [];\r\n\t\tfor (let frame = 0; frame in _raw; ++frame) {\r\n\t\t\tlet url = `${_url}/${frame}`;\r\n\t\t\ttextures[frame] = this.__load_place_textures(_raw[frame], url);\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\t/**\r\n\t * @param {string} _url\r\n\t * @returns {Object.<string, FragmentTexture>} - object - textures[place]\r\n\t */\r\n\t__load_place_textures(_raw, _url) {\r\n\t\tlet textures = {};\r\n\t\tfor (let place in _raw) {\r\n\t\t\tlet path = `${_url}/${place}`;\r\n\t\t\tlet raw = _raw[place];\r\n\r\n\t\t\tif (raw) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tconst FragmentTextureType = this.FragmentTextureType;\r\n\t\t\t\tlet ft;\r\n\t\t\t\tif (raw[\"\"] == \"\") {\r\n\t\t\t\t\tft._url = path;\r\n\t\t\t\t\t//ft._url = path;\r\n\t\t\t\t\ttextures[place] = ft\r\n\t\t\t\t}\r\n\t\t\t\telse if (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\tft = new FragmentTextureType(raw);\r\n\t\t\t\t\t//ft._url = raw[\"\"];\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\telse if (place == \"hairShade\") {\r\n\t\t\t\t\tft = new FragmentTextureType(raw[0]);\r\n\t\t\t\t\t//ft._url = path + \"/0\";\r\n\t\t\t\t\ttextures[place] = ft;\r\n\t\t\t\t}\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tft._slot = this.categoryInfo.slot;\r\n\t\t\t\t\tft._place = place;\r\n\r\n\t\t\t\t\tft.classList = [\r\n\t\t\t\t\t\tft._slot,\r\n\t\t\t\t\t\t\"item\" + this.id,\r\n\t\t\t\t\t\tft._place,\r\n\t\t\t\t\t\tft._raw.z,\r\n\t\t\t\t\t\t'z' + ft.z\r\n\t\t\t\t\t].join(' ');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn textures;\r\n\t}\r\n\tget FragmentTextureType() {\r\n\t\treturn FragmentTexture;\r\n\t}\r\n\t__load_slot() {\r\n\t\tif (!this._raw.info.islot) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet islots = this._raw.info.islot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in islots) {\r\n\t\t\tconst slot = islots[i];\r\n\t\t\tconst slot_order = zMap[slot];\r\n\t\t\tthis.islot[slot] = slot_order;\r\n\t\t\t\t\r\n\t\t\tif (slot_order > this.slot_order) {//this.slot_order = Math.max(this.slot_order, slot_order);\r\n\t\t\t\tthis.slot_order = slot_order;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet vslots = this._raw.info.vslot.match(/([A-Z][a-z0-9])/g);\r\n\t\tfor (let i in vslots) {\r\n\t\t\tconst slot = vslots[i];\r\n\t\t\tthis.vslot[slot] = slot;\r\n\t\t}\r\n\t}\r\n\r\n\t_unload() {\r\n\t\tthis.fragments = null;\r\n\t\tthis.effect == null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget opacity() {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\treturn ft.opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} opacity\r\n\t */\r\n\tset opacity(opacity) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.opacity = opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} hue 0 ~ 360\r\n\t * @param {number} sat 0 ~ 100\r\n\t * @param {number} bri 0 ~ 100\r\n\t */\r\n\tsetFilter(hue, sat, bri) {\r\n\t\tfor (let i in this.fragments) {\r\n\t\t\tfor (let j in this.fragments[i].textures) {\r\n\t\t\t\tfor (let k = 0; k < this.fragments[i].textures[j].length; ++k) {\r\n\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\tlet ft = this.fragments[i].textures[j][k];\r\n\t\t\t\t\tif (ft) {\r\n\t\t\t\t\t\tft.filter.hue = hue;\r\n\t\t\t\t\t\tft.filter.sat = sat;\r\n\t\t\t\t\t\tft.filter.bri = bri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get icon url\r\n\t * @see {@link ItemCategoryInfo.getIconUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconUrl() {\r\n\t\treturn ItemCategoryInfo.getIconUrl(this.id);\r\n\t}\r\n\r\n\t/**\r\n\t * get iconRaw url\r\n\t * @see {@link ItemCategoryInfo.getIconRawUrl}\r\n\t * @returns {string}\r\n\t */\r\n\tgetIconRawUrl() {\r\n\t\treturn ItemCategoryInfo.getIconRawUrl(this.id);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {{[actions:string]:{[\"0\"]:Sprite,[frames:string]:Sprite}}} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw;\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nclass CharacterEquip extends CharacterEquipBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tget _animation_type() {\r\n\t\treturn \"action\";\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"face\" || k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {CharacterAnimationBase} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\ttry {\r\n\t\t\treturn chara.slots.body.fragments.body.textures[chara.action].length;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\ttry {\r\n\t\t\tconst d = this._raw[chara.action][chara.action_frame].delay;\r\n\t\t\tif (d != null) {!isNaN(d) && isFinite(d)\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger\r\n\t\t}\r\n\t\treturn 120;\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterBodyFragment;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipBody extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t///**\r\n\t// * @param {CharacterAnimationBase} chara\r\n\t// * @returns {number}\r\n\t// */\r\n\t//getFrameCount(chara) {\r\n\t//\treturn this.fragments.body.textures[chara.action].length;\r\n\t//}\r\n}\r\n\r\nclass CharacterEquipCashWeapon extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.use_category = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string} id\r\n\t * @param {ItemCategoryInfo} cateInfo\r\n\t * @param {string} use_category - cash-weapon as [category]\r\n\t * @returns {Promise<boolean>} - true if item exist\r\n\t */\r\n\tasync load(url, id, cateInfo, use_category) {\r\n\t\tif (!use_category && use_category != \"\") {\r\n\t\t\tconsole.warn(\"no use_category\");\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.use_category = use_category.slice(2, 4);\r\n\r\n\t\treturn super.load(url, id, cateInfo);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {object} raw_textures[...actions][...frames][...fragments]\r\n\t */\r\n\tget _raw_textures() {\r\n\t\treturn this._raw[this.use_category];\r\n\t}\r\n\r\n\tget _base_path() {\r\n\t\treturn this._url + this.use_category;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipHead extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.elfEarFragment = null;\r\n\t\tthis.lefEarFragment = null;\r\n\t\tthis.highlefEarFragment = null;\r\n\t}\r\n\t__load_fragments() {\r\n\t\tsuper.__load_fragments()\r\n\t\t\r\n\t\tif (this.fragments) {\r\n\t\t\tif (this.fragments.ear) {\r\n\t\t\t\tthis.elfEarFragment = this.fragments.ear;\r\n\t\t\t\tdelete this.fragments.ear;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.lefEar) {\r\n\t\t\t\tthis.lefEarFragment = this.fragments.lefEar;\r\n\t\t\t\tdelete this.fragments.lefEar;\r\n\t\t\t}\r\n\t\t\tif (this.fragments.highlefEar) {\r\n\t\t\t\tthis.highlefEarFragment = this.fragments.highlefEar;\r\n\t\t\t\tdelete this.fragments.highlefEar;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget elfEar() {\r\n\t\treturn this.fragments.ear != null;\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (!this.elfEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.ear = this.elfEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.ear;\r\n\t\t}\r\n\t}\r\n\r\n\tget lefEar() {\r\n\t\treturn this.fragments.lefEar != null;\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (!this.lefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.lefEar = this.lefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.lefEar;\r\n\t\t}\r\n\t}\r\n\r\n\tget highlefEar() {\r\n\t\treturn this.fragments.highlefEar != null;\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (!this.highlefEarFragment) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis.fragments.highlefEar = this.highlefEarFragment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete this.fragments.highlefEar;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass CharacterEquipHair extends CharacterEquip {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget FragmentTextureType() {\r\n\t\treturn HairFragmentTexture;\r\n\t}\r\n}\r\n\r\nclass CharacterEquipFaceAcc extends CharacterEquipBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tget _animation_type() {\r\n\t\treturn \"emotion\";\r\n\t}\r\n\t//__is_texture(k) {\r\n\t//\treturn (!(k == \"delay\" || k == \"default\"));\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetFrameCount(chara) {\r\n\t\ttry {\r\n\t\t\treturn chara.slots.face.fragments.face.textures[chara.emotion].length;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Character} chara\r\n\t * @returns {number}\r\n\t */\r\n\tgetDelay(chara) {\r\n\t\ttry {\r\n\t\t\tconst d = this._raw[chara.emotion][chara.emotion_frame].delay;\r\n\t\t\tif (d != null) {//!isNaN(d) && isFinite(d)\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n\r\n\tget fragmentConstructor() {\r\n\t\treturn CharacterFaceFragment;\r\n\t}\r\n}\r\nclass CharacterEquipFace extends CharacterEquipFaceAcc {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nItemCategoryInfo._info['0000'].fragmentType = CharacterEquipBody;\r\nItemCategoryInfo._info['0001'].fragmentType = CharacterEquipHead;\t//\telfEar\r\nItemCategoryInfo._info['0002'].fragmentType = CharacterEquipFace;\t//\tFace\r\nItemCategoryInfo._info['0003'].fragmentType = CharacterEquipHair;\t//\tCharacterEquipHair;\t//\tHair\r\nItemCategoryInfo._info['0004'].fragmentType = CharacterEquipHair;\t//\tCharacterEquipHair;\t//\tHair\r\n\r\nItemCategoryInfo._info['0100'].fragmentType = CharacterEquip;\t\t//\tCap\r\nItemCategoryInfo._info['0101'].fragmentType = CharacterEquipFaceAcc;//\taccessoryFace\r\nItemCategoryInfo._info['0102'].fragmentType = CharacterEquip;\t\t//\taccessoryEyes\r\nItemCategoryInfo._info['0103'].fragmentType = CharacterEquip;\t\t//\taccessoryEars\r\nItemCategoryInfo._info['0104'].fragmentType = CharacterEquip;\t\t//\tCoat\r\nItemCategoryInfo._info['0105'].fragmentType = CharacterEquip;\t\t//\tLongcoat\r\nItemCategoryInfo._info['0106'].fragmentType = CharacterEquip;\t\t//\tPants\r\nItemCategoryInfo._info['0107'].fragmentType = CharacterEquip;\t\t//\tShoes\r\nItemCategoryInfo._info['0108'].fragmentType = CharacterEquip;\t\t//\tGlove\r\nItemCategoryInfo._info['0109'].fragmentType = CharacterEquip;\t\t//\tShield\r\nItemCategoryInfo._info['0110'].fragmentType = CharacterEquip;\t\t//\tCape\r\n\r\nItemCategoryInfo._info['0170'].fragmentType = CharacterEquipCashWeapon;\t\t//\tcash-weapon\r\n\r\nclass CharacterSlots {\r\n\tconstructor() {\r\n\t\t\t\r\n\t\t/** @type {CharacterEquipBase[]} */\r\n\t\tthis._ordered_slot = [];\r\n\r\n\r\n\t\t/** @type {CharacterEquipHair} */\r\n\t\tthis._hair = null;\r\n\t\t/** @type {CharacterEquipHair} */\r\n\t\tthis._hair2 = null;\r\n\t\t/** @type {CharacterEquipHair} 0~1.0 */\r\n\t\tthis._hairMix2 = null;\r\n\t\t/** @type {CharacterEquipHair} */\r\n\t\tthis._hair3 = null;\r\n\t\t/** @type {CharacterEquipHair} 0~1.0 */\r\n\t\tthis._hairMix3 = null;\r\n\r\n\r\n\t\t/** @type {CharacterEquipBody} */\r\n\t\tthis.body = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.head = null;\r\n\r\n\t\t/** @type {CharacterEquipFace} */\r\n\t\tthis.face = null;\r\n\r\n\t\t/** @type {CharacterEquip} */\r\n\t\tthis.hair = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 1 */\r\n\t\tthis.cap = null;\r\n\r\n\t\t/** @type {CharacterEquipFace} - 2 */\r\n\t\tthis.accessoryFace = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 3*/\r\n\t\tthis.accessoryEyes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 4 */\r\n\t\tthis.accessoryEars = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.coat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 5 */\r\n\t\tthis.longcoat = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 6 */\r\n\t\tthis.pants = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 7 */\r\n\t\tthis.shoes = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 8 */\r\n\t\tthis.glove = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 9 */\r\n\t\tthis.cape = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 10 */\r\n\t\tthis.shield = null;\r\n\r\n\t\t/** @type {CharacterEquip} - 11 */\r\n\t\tthis.weapon = null;\r\n\t\r\n\t\t{\r\n\t\t\tObject.defineProperty(this, \"_ordered_slot\", {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: []\r\n\t\t\t});\r\n\r\n\t\t\tObject.defineProperty(this, \"_hair\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair2\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix2\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hair3\", {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(this, \"_hairMix3\", {\t// 0~1.0\r\n\t\t\t\twritable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: null,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {CharacterEquipHair} */\r\n\tget hair() {\r\n\t\treturn this._hair;\r\n\t}\r\n\tset hair(value) {\r\n\t\tthis._hair = value;\r\n\t\tif (value) {\r\n\t\t\tif (this._hair2 && this._hairMix2) {\r\n\t\t\t\tthis.hairColor2 = this.hairColor2;\r\n\t\t\t\tthis.hairMix2 = this.hairMix2;\r\n\t\t\t}\r\n\t\t\tif (this._hair3 && this._hairMix3) {\r\n\t\t\t\tthis.hairColor3 = this.hairColor3;\r\n\t\t\t\tthis.hairMix3 = this.hairMix3;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync __loadColoredHair(color) {\r\n\t\tconst id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tconst url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\" : \"\") + id}`;\r\n\t\t\tconst use_category = undefined;\r\n\r\n\t\t\tlet hair = new CharacterEquipHair();\r\n\r\n\t\t\tawait hair.load(url, id, cateInfo, use_category);\r\n\r\n\t\t\treturn hair;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {number} */\r\n\tget hairColor2() {\r\n\t\tif (this._hair2) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair2.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor2(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc2Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair2 || hc2Id != this._hair2.id) {\r\n\t\t\tif (hc2Id == this._hair.id) {\r\n\t\t\t\tthis._hair2 = null;\r\n\t\t\t\tthis.hairMix2 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair2 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair2.then(hair2 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair2;\r\n\r\n\t\t\t\t\tthis._hair2 = hair2;\r\n\t\t\t\t\tif (this._hair2 && this.hairMix2 != null) {\r\n\t\t\t\t\t\tthis.hairMix2 = this.hairMix2;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix2 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairMix2() {\r\n\t\treturn this._hairMix2;\r\n\t}\r\n\tset hairMix2(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair2).then(() => {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this._hair2;\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph2 = ft;\r\n\t\t\t\t\t\t\tori.graph2.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix2 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** @returns {number} 0~1.0 */\r\n\tget hairColor3() {\r\n\t\tif (this._hair3) {\r\n\t\t\treturn Number(CharacterRenderConfig.getHairColor(this._hair3.id));\r\n\t\t}\r\n\t}\r\n\tset hairColor3(color) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.error(new TypeError());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet hc3Id = CharacterRenderConfig.getColorHairID(this.hair.id, color);\r\n\r\n\t\tif (!this._hair3 || this._hair3.id != hc3Id) {\r\n\t\t\tif (this._hair.id == hc3Id || this._hair2.id == hc3Id) {\r\n\t\t\t\tthis._hair3 = null;\r\n\t\t\t\tthis.hairMix3 = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hair.$promise_hair3 = this.__loadColoredHair(color);\r\n\r\n\t\t\t\tthis.hair.$promise_hair3.then(hair3 => {\r\n\t\t\t\t\tdelete this.hair.$promise_hair3;\r\n\r\n\t\t\t\t\tthis._hair3 = hair3;\r\n\t\t\t\t\tif (this._hair3 && this.hairMix3 != null) {\r\n\t\t\t\t\t\tthis.hairMix3 = this.hairMix3;//force update\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else {\r\n\t\t\t\t\t//\tthis.hairMix3 = 0;//disable\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/** @returns {number} */\r\n\tget hairMix3() {\r\n\t\treturn this._hairMix3;\r\n\t}\r\n\tset hairMix3(value) {\r\n\t\tvalue = Number(value);\r\n\r\n\t\tPromise.resolve(this.hair.$promise_hair3).then(() => {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this._hair3;\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet base = this.hair;\r\n\r\n\t\t\tif (!item || !base) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\tfor (let k in item.fragments[j].textures) {\r\n\t\t\t\t\tfor (let i = 0; i < item.fragments[j].textures[k].length; ++i) {\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ft = item.fragments[j].textures[k][i];\r\n\t\t\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\t\t\tlet ori = base.fragments[j].textures[k][i];\r\n\t\t\t\t\t\tif (ori) {\r\n\t\t\t\t\t\t\tori.graph3 = ft;\r\n\t\t\t\t\t\t\tori.graph3.opacity = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hairMix3 = value;\r\n\t\t});\r\n\t}\r\n\r\n\t//__order_slot() {\r\n\t//\tlet slot_map = new Map();\r\n\t//\r\n\t//\tfor (let i in this) {\r\n\t//\t\tlet equip = this[i];\r\n\t//\r\n\t//\t\tequip.cs\r\n\t//\t}\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {CharacterEquipBase} loadedEquip\r\n\t * @param {string} use_category - category which used of cash-weapon\r\n\t */\r\n\tasync _use(id, loadedEquip, use_category) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst cateInfo = ItemCategoryInfo.get(id);\r\n\r\n\t\tif (cateInfo) {\r\n\t\t\tlet url = `/Character/${cateInfo.path + (cateInfo.path ? \"/\":\"\") + id}`;\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item;\r\n\r\n\t\t\tif (loadedEquip instanceof CharacterEquipBase) {\r\n\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\tdebugger;\r\n\t\t\t\titem = loadedEquip;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (loadedEquip) {\r\n\t\t\t\t\talert(\"CharacterSlots # _use: param loadedEquip ??\");\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tconst fragmentType = cateInfo.fragmentType || CharacterEquip;\r\n\r\n\t\t\t\titem = new fragmentType();\r\n\t\t\t}\r\n\t\t\t/** _use_loaded_equip */\r\n\t\t\tif (0) {\r\n\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t}\r\n\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t}\r\n\r\n\t\t\tlet is_exist = loadedEquip || await item.load(url, id, cateInfo, use_category);\r\n\t\t\tif (is_exist) {\r\n\t\t\t\t/** _use_loaded_equip */\r\n\t\t\t\tif (1) {\r\n\t\t\t\t\tif (this[cateInfo.slot]) {\r\n\t\t\t\t\t\tthis[cateInfo.slot]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis[cateInfo.slot] = item;\r\n\r\n\t\t\t\t\tthis._ordered_slot[item.slot_order] = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.warn(\"item(\" + id + \") is not exist\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {boolean}\r\n\t */\r\n\t_unuse(id) {\r\n\t\tif (!id) {\r\n\t\t\tdebugger\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet cateInfo, equip;\r\n\r\n\t\tif (id instanceof CharacterEquipBase) {\r\n\t\t\tequip = id;\r\n\t\t\tid = equip.id;\r\n\t\t\tcateInfo = equip.categoryInfo;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcateInfo = ItemCategoryInfo.get(id);\r\n\t\t}\r\n\r\n\t\tif (cateInfo.slot != \"head\" && cateInfo.slot != \"body\") {\r\n\t\t\tif (this[cateInfo.slot] && this[cateInfo.slot].id == id) {\r\n\t\t\t\tequip = this[cateInfo.slot];\r\n\t\t\t\tfor (let slot in equip.islot) {\r\n\t\t\t\t\tlet order = equip.islot[slot];\r\n\t\t\t\t\tif (this._ordered_slot[order]) {\r\n\t\t\t\t\t\tthis._ordered_slot[order]._unload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._ordered_slot[order];\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t_clear() {\r\n\t\t//this.body = null;\r\n\t\t//this.head = null;\r\n\t\tthis.face = null;\r\n\t\tthis.hair = null;\r\n\t\tthis.cap = null;\r\n\t\tthis.accessoryFace = null;\r\n\t\tthis.accessoryEyes = null;\r\n\t\tthis.accessoryEars = null;\r\n\t\tthis.coat = null;\r\n\t\tthis.longcoat = null;\r\n\t\tthis.pants = null;\r\n\t\tthis.shoes = null;\r\n\t\tthis.glove = null;\r\n\t\tthis.cape = null;\r\n\t\tthis.shield = null;\r\n\r\n\t\t//temp\r\n\t\tlet head = this.head;\r\n\t\tlet body = this.body;\r\n\r\n\t\t//clear\r\n\t\tthis._ordered_slot = [];\r\n\r\n\t\t//restore\r\n\t\tif (head) {\r\n\t\t\tthis._ordered_slot[head.slot_order] = head;\r\n\t\t}\r\n\t\tif (body) {\r\n\t\t\tthis._ordered_slot[body.slot_order] = body;\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify() {\r\n\t\tlet slots = [\"c\"];\r\n\t\t\t\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id + \"|\" + this.face.id);\r\n\t\tif (this.hair) {\r\n\t\t\tlet ha = [];\r\n\t\t\tha.push(this.hair.id);\r\n\t\t\tif (this.hairColor2 && this.hairMix2 > 0) ha.push(this.hairColor2 + \"%\" + Math.trunc(this.hairMix2 * 100));\r\n\t\t\tif (this.hairColor3 && this.hairMix3 > 0) ha.push(this.hairColor3 + \"%\" + Math.trunc(this.hairMix3 * 100));\r\n\t\t\tslots.push(ha.join(\"|\"));\r\n\t\t}\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots.join(\",\");\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\tlet slots = [];\r\n\r\n\t\tif (this.body) slots.push(this.body.id);\r\n\t\tif (this.head) slots.push(this.head.id);\r\n\t\tif (this.face) slots.push(this.face.id);\r\n\t\tif (this.hair) slots.push(this.hair.id);\r\n\t\tif (this.cap) slots.push(this.cap.id);\r\n\t\tif (this.accessoryFace) slots.push(this.accessoryFace.id);\r\n\t\tif (this.accessoryEyes) slots.push(this.accessoryEyes.id);\r\n\t\tif (this.accessoryEars) slots.push(this.accessoryEars.id);\r\n\t\tif (this.coat) slots.push(this.coat.id);\r\n\t\tif (this.longcoat) slots.push(this.longcoat.id);\r\n\t\tif (this.pants) slots.push(this.pants.id);\r\n\t\tif (this.shoes) slots.push(this.shoes.id);\r\n\t\tif (this.glove) slots.push(this.glove.id);\r\n\t\tif (this.shield) slots.push(this.shield.id);\r\n\t\tif (this.cape) slots.push(this.cape.id);\r\n\t\tif (this.weapon) slots.push(this.weapon.id);\r\n\r\n\t\treturn slots;\r\n\t}\r\n\r\n\t/**\r\n\t * returns: [face, hair, cap, ..., weapon]\r\n\t */\r\n\t*enumerate() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.hair) yield this.hair;\r\n\r\n\t\tyield* this.enumerate_equip();\r\n\t}\r\n\t*enumerate_equip() {\r\n\t\tif (this.cap) yield this.cap;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t\tif (this.accessoryEyes) yield this.accessoryEyes;\r\n\t\tif (this.accessoryEars) yield this.accessoryEars;\r\n\t\tif (this.coat) yield this.coat;\r\n\t\tif (this.longcoat) yield this.longcoat;\r\n\t\tif (this.pants) yield this.pants;\r\n\t\tif (this.shoes) yield this.shoes;\r\n\t\tif (this.glove) yield this.glove;\r\n\t\tif (this.shield) yield this.shield;\r\n\t\tif (this.cape) yield this.cape;\r\n\t\tif (this.weapon) yield this.weapon;\r\n\t}\r\n\t*enumerate_face() {\r\n\t\tif (this.face) yield this.face;\r\n\t\tif (this.accessoryFace) yield this.accessoryFace;\r\n\t}\r\n}\r\n\r\nclass CharacterChangeLog {\r\n\tconstructor() {\r\n\t\t/** @type {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\t\tthis.ear = undefined;\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.useEquip = [];\r\n\r\n\t\t/** @type {string[]} */\r\n\t\tthis.unuseEquip = [];\r\n\t\t\r\n\t\t/** @type {string} - hair2 id */\r\n\t\tthis.hair2 = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.hairMix2 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hair3 = undefined;\r\n\r\n\t\t///** @type {string} */\r\n\t\t//this.hairMix3 = undefined;\r\n\r\n\t\t/** @type {string} weapon => equip id */\r\n\t\tthis.weapon = undefined;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.ear = undefined;\r\n\t\tthis.useEquip = [];\r\n\t\tthis.unuseEquip = [];\r\n\t\tthis.hair2 = undefined;\r\n\t\tthis.hairMix2 = undefined;\r\n\t\t//this.hair3 = undefined;\r\n\t\t//this.hairMix3 = undefined;\r\n\t\tthis.weaponType = undefined;\r\n\t}\r\n}\r\n\r\nexport class CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tthis._$dirty = 0;//force update vue\r\n\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.job = null;\r\n\t\t/** @type {string} - 未完成 */\r\n\t\tthis.subJob = null;\r\n\r\n\t\t/** @type {ActionAnimation} */\r\n\t\tthis.actani = new ActionAnimation();\r\n\r\n\t\t/** @type {number} - animation speed rate */\r\n\t\tthis.speed = 1;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.fixed_speed = false;\r\n\t\t\r\n\t\tthis._action = \"stand1\";\r\n\t\tthis._action_frame = 0;\r\n\t\tthis._action_time = 0;\r\n\r\n\t\tthis._emotion = \"blink\";\r\n\t\tthis._emotion_frame = 0;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis._emotion_frame_sequence = [0, 1, 2, 1];\r\n\r\n\t\t/** @type {CharacterSlots} */\r\n\t\tthis.slots = new CharacterSlots();\r\n\r\n\t\t/**\r\n\t\t * is require update render data\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.__require_update = true;\r\n\r\n\t\t/** @type {FragmentTexture[]} */\r\n\t\tthis.__frag_list = [];\r\n\r\n\t\t/** @type {CharacterChangeLog} **/\r\n\t\tthis.$$changeLog = new CharacterChangeLog();\r\n\t}\r\n\r\n\t_clone() {\r\n\t\talert(this.constructor.name + \"::_clone\");\r\n\r\n\t\t/** @type {CharacterAnimationBase} */\r\n\t\tlet nc = new this.constructor();//not must CharacterRender\r\n\t\tif (!nc) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnc.speed = 0;\r\n\r\n\t\tnc.x = this.x;\r\n\t\tnc.y = this.y;\r\n\t\tnc.angle = this.angle;\r\n\r\n\t\tnc.action = this.action;\r\n\t\tnc.action_frame = this.action_frame;\r\n\r\n\t\tnc.emotion = this._emotion;\r\n\t\tnc.emotion_frame = this.emotion_frame;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tnc.slots[i] = this.slots[i];//not need colne ?\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nc;\r\n\t}\r\n\t\t\r\n\t_waitFrameTexturesLoaded() {\r\n\t\tlet tasks = [];\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet item = this.slots[i];\r\n\t\t\tif (item) {\r\n\t\t\t\tif (typeof item.getFrameCount != \"function\") {\r\n\t\t\t\t\talert('typeof item.getFrameCount != \"function\"');\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\tlet count = item.getFrameCount(this);\r\n\t\t\t\tfor (let j in item.fragments) {\r\n\t\t\t\t\tlet frag = item.fragments[j];\r\n\t\t\t\t\tfor (let k = 0; k < count; ++k) {\r\n\t\t\t\t\t\tlet ft = frag.getFrameTexture(this, k);\r\n\t\t\t\t\t\tif (ft && !ft._isLoaded_or_doload()) {\r\n\t\t\t\t\t\t\ttasks.push(ft.$promise);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n\r\n\t/**\r\n\t * init animation status\r\n\t */\r\n\tinitAnimation() {\r\n\t\t/** @type {string} */\r\n\t\tthis.action = \"stand1\";\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._action_time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._action_frame = 0;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.emotion = \"blink\";\r\n\t\t\t\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis._emotion_frame = 0;\r\n\t}\r\n\r\n\t/** @type {number} - 0~1 */\r\n\tgetSpeed() {\r\n\t\treturn this.fixed_speed ? 1 : this.speed;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget elfEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.elfEar;\r\n\t\t}\r\n\t}\r\n\tset elfEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.elfEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget lefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar;\r\n\t\t}\r\n\t}\r\n\tset lefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.lefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {boolean}\r\n\t */\r\n\tget highlefEar() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.highlefEar;\r\n\t\t}\r\n\t}\r\n\tset highlefEar(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tthis.slots.head.highlefEar = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"human\"|\"elf\"|\"lef\"|\"highlef\"} */\r\n\tget ear() {\r\n\t\tif (this.slots.head) {\r\n\t\t\treturn this.slots.head.lefEar ? \"lef\" : (this.slots.head.elfEar ? \"elf\" : (this.slots.head.highlefEar ? \"highlef\" : \"human\"));\r\n\t\t}\r\n\t}\r\n\tset ear(value) {\r\n\t\tif (this.slots.head) {\r\n\t\t\tif (value == \"elf\") {\r\n\t\t\t\tthis.slots.head.elfEar = true;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"lef\") {\r\n\t\t\t\tthis.slots.head.lefEar = true;\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse if (value == \"highlef\") {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = true;\r\n\t\t\t\tthis.$$changeLog.ear = value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.slots.head.elfEar = false;\r\n\t\t\t\tthis.slots.head.lefEar = false;\r\n\t\t\t\tthis.slots.head.highlefEar = false;\r\n\t\t\t\tthis.$$changeLog.ear = \"human\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.$$changeLog.ear = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget action() {\r\n\t\treturn this._action;\r\n\t}\r\n\tset action(act) {\r\n\t\tif (this.actani._action != act && this.slots.body) {\r\n\t\t//if (this._action != act && this.slots.body) {\r\n\t\t\t//if (this.slots.body._action_list.indexOf(act) >= 0) {\r\n\t\t\t//\tthis._action = act;\r\n\t\t\t//}\r\n\t\t\t//this._action_frame = 0;\r\n\t\t\t//this._action_time = 0;\r\n\t\t\t////\r\n\t\t\t////this.action_frame_sequence = [...circularSequence(this.action_frame_count)];\r\n\r\n\t\t\tthis._action = act;\r\n\t\t\tthis.actani.reload(act);\r\n\r\n\t\t\tthis.__require_update |= true;\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame() {\r\n\t\tconst frame_count = this.action_frame_count;\r\n\t\tif (frame_count) {\r\n\t\t\treturn this._action_frame % frame_count;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\tset action_frame(value) {\r\n\t\tthis._action_time = 0;\r\n\t\tthis._action_frame = value;\r\n\t\tthis.__require_update |= true;\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._action_frame = Number(value) | 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} next\r\n\t */\r\n\t_get_action_next_frame(next) {\r\n\t\tconst frame_count = this.action_frame_count;\r\n\t\tif (frame_count) {\r\n\t\t\tlet f = this._action_frame + next;\r\n\t\t\treturn f < 0 ? (frame_count - 1) : (f % frame_count);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_time() {\r\n\t\treturn this._action_time;\r\n\t}\r\n\tset action_time(time) {\r\n\t\tconst frame_count = this.action_frame_count;\r\n\r\n\t\tif (frame_count) {\r\n\t\t\tif (time < this.action_delay) {\r\n\t\t\t\tthis._action_time = time;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._action_time = 0;\r\n\t\t\t\t++this._action_frame;\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget action_delay() {\r\n\t\tif (this.slots.body) {\r\n\t\t\treturn this.slots.body.getDelay(this);\r\n\t\t}\r\n\t\treturn 180;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget action_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.body) {\r\n\t\t\t\treturn this.slots.body.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget emotion() {\r\n\t\treturn this._emotion;\r\n\t}\r\n\tset emotion(emo) {\r\n\t\tif (this._emotion != emo && this.slots.face && this.slots.face._action_list.indexOf(emo) >= 0) {\r\n\t\t\tthis._emotion = emo;\r\n\t\t\tthis._emotion_frame = 0;\r\n\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\tthis._emotion_frame_sequence = [...circularSequence(this.emotion_frame_count)];\r\n\r\n\t\t\tthis.__require_update |= true;\r\n\t\t}\r\n\t}\r\n\r\n\t*emotion_frame_sequence_generator(length) {\r\n\t\tfor (; ;) {\r\n\t\t\tyield* circularSequence(length);\r\n\r\n\t\t\tfor (; Math.random() < 0.5;) {\r\n\t\t\t\tyield 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t/** @type {number} */\r\n\tget emotion_frame() {\r\n\t\tlet f = this._emotion_frame_sequence[this._emotion_frame % this._emotion_frame_sequence.length];\r\n\t\treturn f;\r\n\t}\r\n\tset emotion_frame(value) {\r\n\t\tthis._emotion_frame = value;\r\n\t\tthis._emotion_time = 0;\r\n\t\tthis.__require_update |= true;\r\n\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (!(typeof value == 'number')) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis._emotion_frame = Number(value) | 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} next\r\n\t */\r\n\t_get_emotion_next_frame(next) {\r\n\t\tlet f = this._emotion_frame + next;\r\n\t\tf = f < 0 ? (this._emotion_frame_sequence.length - 1) : (f % this._emotion_frame_sequence.length);\r\n\t\treturn this._emotion_frame_sequence[f];\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_time() {\r\n\t\treturn this._emotion_time;\r\n\t}\r\n\tset emotion_time(time) {\r\n\t\tif (this.emotion_frame_count) {\r\n\t\t\tif (time < this.emotion_delay) {\r\n\t\t\t\tthis._emotion_time = time;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._emotion_time = 0;\r\n\r\n\t\t\t\t++this._emotion_frame;\r\n\r\n\t\t\t\tthis.__require_update |= true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number}\r\n\t */\r\n\tget emotion_delay() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn this.slots.face.getDelay(this);\r\n\t\t}\r\n\t\treturn 60;\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget emotion_frame_count() {\r\n\t\ttry {\r\n\t\t\tif (this.slots.face) {\r\n\t\t\t\treturn this.slots.face.getFrameCount(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} stamp - 0 <= stamp < Infinity\r\n\t */\r\n\t_update(stamp) {\r\n\t\tif (this.actani) {\r\n\t\t\tif (this.actani.isEnd() && this.actani.loop) {\r\n\t\t\t\tthis.actani.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.actani.update(stamp, this);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.action_time += stamp;\r\n\t\t}\r\n\r\n\t\tthis.emotion_time += stamp;\r\n\r\n\t\tfor (let i in this.slots) {\r\n\t\t\tlet equip = this.slots[i];\r\n\t\t\tif (equip && equip.effect) {\r\n\t\t\t\tequip.effect.update(stamp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tstamp *= this.getSpeed();\r\n\r\n\t\tthis._update(stamp);\r\n\t}\r\n\r\n\t__forceUpdate(stamp) {\r\n\t\tthis._$dirty = -Math.random() + Math.random() * 3.1415926535897;\r\n\t\tthis._update(stamp | 0);\r\n\t\tthis.__update_frag_list();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {number} x\r\n\t * @param {number} y, \r\n\t * @param {number} angle\r\n\t * @param {boolean} flip\r\n\t */\r\n\t_draw(renderer, x, y, angle, flip) {\r\n\t\trenderer.pushGlobalAlpha();\r\n\r\n\t\tif (this.__require_update) {\r\n\t\t\tthis.__update_frag_list();\r\n\t\t\tthis.__require_update = false;\r\n\t\t}\r\n\r\n\t\t//list.filter(a=>a&&a._raw.map).forEach(a=>{ for (let i in a._raw.map) { if (q[i]) { q[i].push(a); } else { q[i] = [a]; } } })\r\n\t\tthis.__draw_list(renderer, this.__frag_list, x, y, angle, flip);\r\n\r\n\t\trenderer.popGlobalAlpha();\r\n\t}\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t * @param {FragmentTexture[]} list\r\n\t */\r\n\t__draw_list(renderer, list, x, y, angle, flip) {\r\n\t\trenderer.pushMatrix();\r\n\r\n\t\trenderer.translate(x, y);\r\n\t\t\r\n\t\tif (0) {\r\n\t\t\tlet ctx = renderer.ctx;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(100, 0);\r\n\t\t\tctx.strokeStyle = \"#F00\";\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(0, 100);\r\n\t\t\tctx.strokeStyle = \"#0F0\";\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t\trenderer.rotate(window.m_a || angle);\r\n\r\n\t\tif (flip) {\r\n\t\t\trenderer.scale(-1, 1);\r\n\t\t}\r\n\t\t//{\r\n\t\t//\tlet ctx = renderer.ctx;\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(100, 0);\r\n\t\t//\tctx.strokeStyle = \"#F00\";\r\n\t\t//\tctx.stroke();\r\n\t\t//\tctx.beginPath();\r\n\t\t//\tctx.moveTo(0, 0);\r\n\t\t//\tctx.lineTo(0, 100);\r\n\t\t//\tctx.strokeStyle = \"#0F0\";\r\n\t\t//\tctx.stroke();\r\n\t\t//}\r\n\r\n\t\t{\r\n\t\t\tfor (let i in this.slots) {\r\n\t\t\t\tlet equip = this.slots[i];\r\n\t\t\t\tif (equip && equip.effect) {\r\n\t\t\t\t\tequip.effect.render(renderer, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i in list) {\r\n\t\t\t\tlet ft = list[i];\r\n\t\t\t\tft.render(renderer, this);\r\n\t\t\t}\r\n\t\t}\r\n\t\trenderer.popMatrix();\r\n\t}\r\n\t/**\r\n\t * @param {Array<CharacterEquipBase>[]} slots\r\n\t * @param {CharacterEquipBase} item\r\n\t */\r\n\t__add_equip_to_frag_list(slots, item) {\r\n\t\t// if equip not use then value is mumber(slot_order) where this.slots._ordered_slot\r\n\t\tif (item == null) {\r\n\t\t\treturn;//debugger;\r\n\t\t}\r\n\t\telse if (item > 0) {// typeof item == 'number'; item != null && (item instanceof CharacterEquipBase || item >= 0)\r\n\t\t\treturn;//continue;\r\n\t\t}\r\n\r\n\t\t// init slots\r\n\t\tfor (let j in item.vslot) {\r\n\t\t\tlet slot = item.vslot[j];\r\n\t\t\tslots[slot] = [];\r\n\t\t}\r\n\r\n\t\tfor (let j in item.fragments) {//foreach equip place\r\n\t\t\tlet slot = sMap[j];\r\n\t\t\tif (slot != null) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (j == \"default\") {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tslot = item._raw.info.islot;\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tif (!slots[slot]) {\r\n\t\t\t\t\t\tslots[slot] = [ft];//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslots[slot].push(ft);//cover ??\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = item.fragments[j].getTexture(this);\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//item.fragments[j].is_show = true;\r\n\t\t}\r\n\t}\r\n\t__update_frag_list() {\r\n\t\tthis.__frag_list = [];\r\n\r\n\t\t/** @type {Array<CharacterEquipBase>[]} */\r\n\t\tlet slots = {};\r\n\r\n\t\tfor (let i = 2; i <= 3; ++i) {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this.slots[\"_hair\" + i];\r\n\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\t\tfor (let i in this.slots._ordered_slot) {\r\n\t\t\t/** @type {CharacterEquipBase} */\r\n\t\t\tlet item = this.slots._ordered_slot[i];\r\n\r\n\t\t\tthis.__add_equip_to_frag_list(slots, item);\r\n\t\t}\r\n\r\n\t\tlet is_back = false;\r\n\r\n\t\tfor (let i in slots) {\r\n\t\t\t/** @type {FragmentTexture[]} */\r\n\t\t\tlet fts = slots[i];\r\n\t\t\tfor (let j in fts) {\r\n\t\t\t\t/** @type {FragmentTexture} */\r\n\t\t\t\tlet ft = fts[j];\r\n\t\t\t\tif (is_back) {\r\n\t\t\t\t\tif (ft._place.startsWith(\"face\")) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (ft._place.startsWith(\"backHair\")) {\r\n\t\t\t\t\tis_back = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis.__add_frag_to_list(ft);\r\n\t\t\t}\r\n\t\t}\r\n\t\t{\r\n\t\t\tlet ae = this.__frag_list[114];//TODO: Ae\r\n\t\t\tif (ae) {\r\n\t\t\t\tthis.__frag_list.push(ae);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._calcBoundBox();\r\n\t}\r\n\t/** @param {FragmentTexture} ft */\r\n\t__add_frag_to_list(ft) {\r\n\t\tft.update(this);\r\n\t\tthis.__frag_list[ft.z] = ft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * calc current frame bound box and restore result\r\n\t * @returns {Rectangle}\r\n\t */\r\n\t_calcBoundBox() {\r\n\t\tlet left = 0, top = 0, right = 0, bottom = 0;\r\n\r\n\t\tfor (let i in this.__frag_list) {\r\n\t\t\tlet ft = this.__frag_list[i];\r\n\t\t\tif (ft.texture) {\r\n\t\t\t\tlet x0 = ft.relative.x;\r\n\t\t\t\tlet y0 = ft.relative.y;\r\n\t\t\t\tlet x1 = x0 + ft.width;\r\n\t\t\t\tlet y1 = y0 + ft.height;\r\n\r\n\t\t\t\tleft = Math.min(left, x0);\r\n\t\t\t\ttop = Math.min(top, y0);\r\n\t\t\t\tright = Math.max(right, x1);\r\n\t\t\t\tbottom = Math.max(bottom, y1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._boundBox = new Rectangle(\r\n\t\t\tMath.trunc(left),\r\n\t\t\tMath.trunc(top),\r\n\t\t\tMath.trunc(right - left),\r\n\t\t\tMath.trunc(bottom - top)\r\n\t\t);\r\n\t\treturn this._boundBox;\r\n\t}\r\n\t\r\n\ttoJSON() {\r\n\t\tlet obj = {\r\n\t\t\thair2: this.slots._hair2.id,\r\n\t\t\thairMix2: this.slots.hairMix2,\r\n\t\t\tslots: this.slots.toJSON(),\r\n\t\t};\r\n\r\n\t\tif (this.slots.head.elfEar) {\r\n\t\t\tobj.ear = \"elf\";\r\n\t\t}\r\n\t\telse if (this.slots.head.lefEar) {\r\n\t\t\tobj.ear = \"lef\";\r\n\t\t}\r\n\t\telse if (this.slots.head.highlefEar) {\r\n\t\t\tobj.ear = \"highlef\";\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nexport class CharacterRenderer extends CharacterAnimationBase {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {number} - position x */\r\n\t\tthis.x = 0;\r\n\t\t/** @type {number} - position y */\r\n\t\tthis.y = 0;\r\n\r\n\t\t/** @type {number} - where layer */\r\n\t\tthis.z = 5;\r\n\r\n\t\t/** @type {number} - translate x once frame */\r\n\t\tthis.tx = 0;\r\n\t\t/** @type {number} - translate y once frame */\r\n\t\tthis.ty = 0;\r\n\t\t\r\n\t\tthis.angle = 0;\r\n\t\tthis.front = -1;\r\n\r\n\t\t/** @type {Promise<void>[]} */\r\n\t\tthis.__load_task = [];\r\n\r\n\t\t/** @type {function(IRenderer)} */\r\n\t\tthis.render = function (renderer) {\r\n\t\t\t//not ready to render\r\n\t\t\t//if load then set load render = _render\r\n\t\t}\r\n\r\n\t\t/** @type {Rectangle} */\r\n\t\tthis._boundBox = null;\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\tlet result = await Promise.all([\r\n\t\t\t$get.data(\"/zmap\"),\r\n\t\t\t$get.data(\"/smap\"),\r\n\t\t\tItemEffect.Init(),\r\n\t\t\tActionAnimation.Init(),//action definition\r\n\t\t]);\r\n\t\t\r\n\t\tzMap = {};\r\n\t\tObject.keys(result[0]).reverse().forEach((k, i) => zMap[k] = i + 1);\r\n\r\n\t\tsMap = result[1];\r\n\t}\r\n\r\n\tload() {\r\n\t\t//load body and head for calc relative position\r\n\t\tthis.use(\"00002012\");\r\n\t\tthis.use(\"00012012\");\r\n\r\n\t\tlet $promise = Promise.all([...this.__load_task]);\r\n\t\t(function (that, $promise) {\r\n\t\t\t$promise.then(function (result) {\r\n\t\t\t\tthat.initAnimation();\r\n\t\t\t\tthat.render = that._render;\r\n\t\t\t});\r\n\t\t})(this, $promise);\r\n\r\n\t\treturn $promise;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {any} number  0 < stamp * speed < Infinity\r\n\t */\r\n\tupdate(stamp) {\r\n\t\tthis.waitLoaded();\r\n\t\tsuper.update(stamp);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {IRenderer} renderer\r\n\t */\r\n\t_render(renderer) {\r\n\t\tconst x = Math.trunc(this.x + this.tx);\r\n\t\tconst y = Math.trunc(this.y + this.ty);\r\n\t\t\r\n\t\tthis._draw(renderer, x, y, this.angle, this.front >= 1);\r\n\t\t\r\n\t\t//this.tx = 0;//auto clear\r\n\t\t//this.ty = 0;//auto clear\r\n\t}\r\n\t\r\n\t_setup_test() {\r\n\t\tthis.use(\"00026509\");\r\n\r\n\t\tthis.use(\"00044041\");\r\n\r\n\t\t//this.use(\"01022274\");\r\n\r\n\t\tthis.use(\"01053169\");\r\n\r\n\t\tthis.use(\"01071077\");\r\n\r\n\t\t//this.use(\"01102960\");\r\n\t}\r\n\r\n\t\r\n\tasync __synchronize(stamp) {\r\n\t\tthis.__forceUpdate(stamp);\r\n\t\r\n\t\tawait this.waitLoaded();\r\n\t\tawait this._waitFrameTexturesLoaded();\r\n\t}\r\n\tasync waitLoaded() {\r\n\t\tlet tasks = this.__load_task;\r\n\t\tif (tasks && tasks.length) {\r\n\t\t\tawait Promise.all(tasks).then(() => {\r\n\t\t\t\tthis.__load_task = [];\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t//isLoading() {\r\n\t//}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @param {string} category - category of cash-weapon\r\n\t */\r\n\tasync use(id, category) {\r\n\t\tif (!category) {\r\n\t\t\tcategory = ItemCategoryInfo.getJobWeaponCategory(this.job);\r\n\t\t}\r\n\t\tconst item_type = id[0];\r\n\t\tswitch (item_type) {\r\n\t\t\tcase \"0\"://equip\r\n\t\t\t\tif (ItemCategoryInfo.isCashWeapon(id)) {\r\n\t\t\t\t\t//this.$$changeLog.weaponType = ss[1];/??\r\n\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t}\r\n\t\t\t\t//\r\n\t\t\t\tlet task = this.slots._use(id, null, category);\r\n\t\t\t\tthis.__load_task.push(task);\r\n\t\t\t\tawait task;\r\n\t\t\t\tthis._calcBoundBox();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t */\r\n\tunuse(id) {\r\n\t\tdebugger;\r\n\t\tif (id[0] == \"0\") {//equip\r\n\t\t\tlet result = this.slots._unuse(id);\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.$$changeLog.unuseEquip.push(id);\r\n\t\t\t\tthis._calcBoundBox();\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t_parse(code) {\r\n\t\tif (!code) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet es = code.split(\",\");\r\n\t\tthis.slots._clear();\r\n\t\tes.forEach((v, i, a) => {\r\n\t\t\tif (v.indexOf(\"|\") >= 0) {\r\n\t\t\t\tconst ss = v.split(\"|\");\r\n\t\t\t\tconst cate = ItemCategoryInfo.get(ss[0]);\r\n\t\t\t\tlet id;\r\n\t\t\t\tif (cate.slot == \"face\") {\r\n\t\t\t\t\tid = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"hair\") {\r\n\t\t\t\t\tconst slots = this.slots;\r\n\t\t\t\t\tlet h2 = ss[1];\r\n\t\t\t\t\tlet h3 = ss[2];\r\n\t\t\t\t\t//\r\n\t\t\t\t\tid = ss[0];\r\n\t\t\t\t\tthis.$$changeLog.useEquip.push(id);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tthis.use(id).then(() => {\r\n\t\t\t\t\t\tif (h2 && h2.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h2.split(\"%\");\r\n\t\t\t\t\t\t\tconst c2 = hc[0];\r\n\t\t\t\t\t\t\tconst m2 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair2 = c2;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix2 = m2;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor2 = c2;\r\n\t\t\t\t\t\t\tslots.hairMix2 = m2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (h3 && h3.indexOf(\"%\") >= 0) {\r\n\t\t\t\t\t\t\tlet hc = h3.split(\"%\");\r\n\t\t\t\t\t\t\tconst c3 = hc[0];\r\n\t\t\t\t\t\t\tconst m3 = hc[1] / 100;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tthis.$$changeLog.hair3 = c3;\r\n\t\t\t\t\t\t\tthis.$$changeLog.hairMix3 = m3;\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tslots.hairColor3 = hc[0];\r\n\t\t\t\t\t\t\tslots.hairMix4 = hc[1] / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if (cate.slot == \"weapon\") {\r\n\t\t\t\t\tthis.$$changeLog.weaponType = ss[1];\r\n\t\t\t\t\tthis.$$changeLog.weapon = id;\r\n\t\t\t\t\tthis.use.apply(this, ss, ss[1]);//this.use(ss[0], ss[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (Number.isFinite(parseInt(v, 10))) {\r\n\t\t\t\tthis.use(v);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @type {string} col\r\n\t */\r\n\tget hairColor() {\r\n\t\tif (this.slots.hair) {\r\n\t\t\treturn CharacterRenderConfig.getHairColor(this.slots.hair.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset hairColor(col) {\r\n\t\tif (this.slots.hair && col != this.hairColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorHairID(this.slots.hair.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} col\r\n\t */\r\n\tget faceColor() {\r\n\t\tif (this.slots.face) {\r\n\t\t\treturn CharacterRenderConfig.getFaceColor(this.slots.face.id);\r\n\t\t}\r\n\t\treturn \"0\";\r\n\t}\r\n\tset faceColor(col) {\r\n\t\tif (this.slots.face && col != this.faceColor) {\r\n\t\t\tlet id = CharacterRenderConfig.getColorFaceID(this.slots.face.id, col);\r\n\t\t\tthis.use(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {CharacterChangeLog} changeLog\r\n\t */\r\n\tcommitChange(changeLog) {\r\n\t\tif (changeLog.ear) {\r\n\t\t\tthis.ear = changeLog.ear;\r\n\t\t}\r\n\r\n\t\tif (this.useEquip) {\r\n\t\t\tfor (let id of this.useEquip) {\r\n\t\t\t\tthis.use(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.unuseEquip) {\r\n\t\t\tfor (let id of this.unuseEquip) {\r\n\t\t\t\tthis.unuse(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair2 && changeLog.hairMix2) {\r\n\t\t\tthis.slots.hairColor2 = changeLog.hair2;\r\n\t\t\tthis.slots.hairMix2 = changeLog.hairMix2;\r\n\t\t}\r\n\r\n\t\tif (changeLog.hair3 && changeLog.hairMix3) {\r\n\t\t\t//this.slots.hairColor3 = changeLog.hair3;\r\n\t\t\t//this.slots.hairMix3 = changeLog.hairMix3;\r\n\t\t}\r\n\t\t\r\n\t\tif (changeLog.weapon && changeLog.weaponType) {\r\n\t\t\tthis.use(changeLog.weapon, changeLog.weaponType);\r\n\t\t}\r\n\t}\r\n\r\n\t_stringify(genCode) {\r\n\t\tlet result = this.slots._stringify();\r\n\t\tif (genCode) {\r\n\t\t\treturn `chara._parse('${result}')`;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_outlink() {\r\n\t\tif (this.slots.body && this.slots.body.id && this.slots.face && this.slots.face.id && this.action && this.emotion) {\r\n\t\t\tlet link = \"https://labs.maplestory.io/api/GMS/latest/character/center/\" + this.slots.body.id + \"/\";\r\n\t\t\tlet slots = [...this.slots.enumerate()].map(a => parseInt(a.id, 10));\r\n\r\n\t\t\tslots[0] = this.slots.face.id + \":\" + this.emotion;\r\n\r\n\t\t\tlink += slots.join(\",\");\r\n\r\n\t\t\tlink += \"/\" + this.action + \"?showears=\" + (this.elfEar ? \"true\" : \"false\");\r\n\r\n\t\t\tlink += \"&showLefEars=\" + (this.lefEar ? \"true\" : \"false\");\r\n\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\tconsole.log(\"character need body, face, action, emotion\");\r\n\t}\r\n\r\n\t_download() {\r\n\t\twindow.open(this._outlink());\r\n\t}\r\n\r\n\t_save_as_svg() {\r\n\t\tthis.__texture_to_base64().then(frag_list => {\r\n\t\t\tlet file_name = this.id + \".svg\";\r\n\t\t\t//let frag_list = this.__frag_list;\r\n\t\r\n\t\t\tlet svg = '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" >';\r\n\r\n\t\t\tsvg += '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink= \"http://www.w3.org/1999/xlink\">\\n';// width=\"64\" height=\"96\"\r\n\r\n\t\t\tsvg += '<g transform=\"translate(32, 96)\">';\r\n\t\t\tfrag_list.forEach(function (ft) {\r\n\t\t\t\tif (ft) {\r\n\t\t\t\t\tlet clz = ft.classList;\r\n\t\t\t\t\tsvg += `\\t<image class=\"${clz}\" opacity=\"${ft.opacity}\" x=\"${ft.relative.x}\" y=\"${ft.relative.y}\" width=\"${ft.width}\" height=\"${ft.height}\" xlink:href=\"${ft._url}\"></image>\\n`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsvg += '</g>';\r\n\r\n\t\t\tsvg += '<text x=\"0\" y=\"122\" fill=\"transparent\">' + this._stringify(false) + '</text>';\r\n\r\n\t\t\tsvg += '</svg>';\r\n\r\n\t\t\t//let url = \"data:text/plain;utf8,\" + svg;\r\n\r\n\t\t\tdebugger;\r\n\r\n\t\t\t//window.open(url);\r\n\t\t\tDownloadData(svg, \"image/svg+xml;utf8\", file_name);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * \"data:image/png;base64,[...]\"\r\n\t * @param {IRenderer} renderer\r\n\t * @param {string} filename\r\n\t * @returns {string}\r\n\t */\r\n\t_save_as_png(renderer, filename) {\r\n\t\tlet bound = this._calcBoundBox();\r\n\t\tlet size = bound.size;\r\n\t\tlet x = -bound.left;\r\n\t\tlet y = bound.height;\r\n\t\tlet angle = 0;\r\n\t\tlet front = false;\r\n\r\n\t\t// use Canvas2, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//save Canvas2 size, current ctx is _ctx2\r\n\t\tconst c2w = renderer._ctx2.canvas.width;\r\n\t\tconst c2h = renderer._ctx2.canvas.height;\r\n\t\t//\r\n\t\trenderer.ctx.canvas.width = size.x;\r\n\t\trenderer.ctx.canvas.height = size.y;\r\n\r\n\t\ttry {\r\n\t\t\tthis._draw(renderer, x, y, angle, front);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\tlet base64 = renderer.ctx.canvas.toDataURL(\"image/png\");\r\n\t\t{\r\n\t\t\tlet elem = document.createElement(\"a\");\r\n\r\n\t\t\tlet name = `${filename ? (filename+\".\"):\"\"}${this.action}[${this.action_frame}].${this.emotion}[${this.emotion_frame}].png`;\r\n\r\n\t\t\telem.id = name;\r\n\t\t\telem.download = name;\r\n\t\t\telem.href = base64;\r\n\r\n\t\t\tdocument.body.appendChild(elem);\r\n\t\t\telem.click();\r\n\t\t\tdocument.body.removeChild(elem);\r\n\t\t}\r\n\r\n\t\t//restore Canvas2 size, current ctx is _ctx2\r\n\t\trenderer.ctx.canvas.width = c2w;\r\n\t\trenderer.ctx.canvas.height = c2h;\r\n\r\n\t\t// restore Canvas, must not fail\r\n\t\ttry {\r\n\t\t\trenderer.$swapCanvas();\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\t// nothing\r\n\t\t}\r\n\r\n\t\treturn base64;\r\n\t}\r\n\t\r\n\tasync __texture_to_base64() {\r\n\t\tlet frag_list = this.__frag_list;\r\n\t\tlet tasks = [];\r\n\r\n\t\tfrag_list.forEach(function (ft) {\r\n\t\t\tif (!ft) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!ft._url.startsWith(\"data:\")) {\r\n\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\tft._url = await toDataURL(ft._url);\r\n\t\t\t\t\treturn ft;\r\n\t\t\t\t})());\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttasks.push(ft);\r\n\t\t\t}\r\n\t\t\tif (ft.graph2) {\r\n\t\t\t\tlet src = ft.graph2._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph2._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph2;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ft.graph3) {\r\n\t\t\t\tlet src = ft.graph3._url;\r\n\t\t\t\tif (!src.startsWith(\"data:\")) {\r\n\t\t\t\t\ttasks.push((async function () {\r\n\t\t\t\t\t\tft.texture.$src = ft._url;\r\n\t\t\t\t\t\tft.graph3._url = await toDataURL(src);\r\n\t\t\t\t\t\treturn ft.graph3;\r\n\t\t\t\t\t})());\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttasks.push(ft.graph3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn Promise.all(tasks);\r\n\t}\r\n}\r\nAddInitTask(CharacterRenderer.Init());\r\n\r\nfunction* circularSequence(length) {\r\n\tlet i = 0;\r\n\tfor (; i < length; ++i) {//a: 0, 1, 2, 3, ...b\r\n\t\tyield i;\r\n\t}\r\n\tfor (i -= 2; i > 0; --i) {//b: 2, 1, ...a\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction* linearSequence(length) {\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tyield i;\r\n\t}\r\n}\r\n\r\nfunction extract_number(input) {\r\n\treturn String(input).match(/(-?\\d+\\.?\\d*)|(\\.\\d*)/g);\r\n}\r\n\r\n/**\r\n * image href to data url\r\n */\r\nfunction toDataURL(url) {\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tlet xhr = new XMLHttpRequest();\r\n\t\txhr.onload = function () {\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\treader.onloadend = function () {\r\n\t\t\t\tresolve(reader.result);\r\n\t\t\t}\r\n\t\t\treader.onerror = function (ev) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treject(ev);\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(xhr.response);\r\n\t\t};\r\n\t\txhr.open('GET', url);\r\n\t\txhr.responseType = 'blob';\r\n\t\txhr.send();\r\n\t});\r\n}\r\n","\r\nimport jQuery from \"jquery\";\r\n\r\nimport \"jquery-ui/themes/base/core.css\";\r\nimport \"jquery-ui/themes/base/theme.css\";\r\nimport \"jquery-ui/themes/base/selectable.css\";\r\nimport \"jquery-ui/themes/base/sortable.css\";\r\nimport \"jquery-ui/themes/base/draggable.css\";\r\n\r\nimport \"jquery-ui/ui/core\";\r\nimport \"jquery-ui/ui/widgets/selectable\";\r\nimport \"jquery-ui/ui/widgets/sortable\";\r\nimport \"jquery-ui/ui/widgets/draggable\";\r\nimport \"jquery-ui/ui/disable-selection\";\r\nimport \"jquery-ui/ui/position\";\r\nimport \"jquery-ui/ui/effect\";\r\n\r\nimport { } from \"./util.js\";\r\n\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nwindow.jQuery = jQuery;\r\nwindow.$ = jQuery;\r\n\r\nVue.config.productionTip = false;\r\n\r\nVue.use(Vuex);\r\n\r\nif (!window.onwheel) {\r\n\twindow.onwheel = function () {\r\n\t}\r\n}\r\n\r\nlet init_tasks = [];\r\n\r\nexport function AddInitTask(task) {\r\n\tinit_tasks.push(task);\r\n}\r\n\r\nexport function InitAll() {\r\n\tlet a = Promise.all(init_tasks);\r\n\tinit_tasks = [];\r\n\treturn a;\r\n}\r\n","﻿\r\nimport { Vec2, Rectangle } from \"./math.js\";\r\nimport { IGrpah, IRenderer, IGraph } from \"./IRenderer.js\";\r\n\r\nimport { engine, Graph } from \"./Engine.js\";\r\n\r\n\r\n/**\r\n * @extends {IGraph}\r\n */\r\nexport class SpriteBase extends Graph {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tif (raw) {\r\n\t\t\tsuper(url, {\r\n\t\t\t\twidth: raw.__w,\r\n\t\t\t\theight: raw.__h,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._raw = raw;\r\n\t\t\r\n\t\t//this.src is broken;\r\n\r\n\t\tif (url) {\r\n\t\t\tdebugger\r\n\t\t\tthis._url = url;\r\n\t\t\t//this._loadTexture(url);//_loadTexture: undefined\r\n\t\t}\r\n\t\telse if (SpriteBase.isTexture(raw) !== false) {\r\n\t\t\tthis._url = raw[\"\"];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isTexture(raw) {\r\n\t\tif (raw) {\r\n\t\t\tif (raw.hasOwnProperty(\"\")) {\r\n\t\t\t\tif (typeof raw[\"\"] == 'string') {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!raw.__isEmpty) {\r\n\t\t\t\t\tconsole.group(\"no texture\");\r\n\t\t\t\t\tconsole.warn(raw);\r\n\t\t\t\t\tconsole.groupEnd();\r\n\t\t\t\t\tthrow new Error(\"no texture\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic isTextureHasData(raw) {\r\n\t\treturn raw && typeof raw[\"\"] == 'string' && raw[\"\"].startsWith(\"data:image/\");\r\n\t}\r\n\r\n\tset z(value) {\r\n\t\tthis._order = value;\r\n\t}\r\n\tget z() {\r\n\t\treturn this._order;\r\n\t}\r\n\t\r\n\t/**\r\n\t * try construct value from raw data\r\n\t * @param {T} defaultValue\r\n\t * @param {string} propertyName\r\n\t * @param {function(any):T} constructor\r\n\t * @returns {T}\r\n\t * @template T\r\n\t */\r\n\t_get(defaultValue, propertyName, converter) {\r\n\t\tif (!this._raw) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\telse if (propertyName in this._raw) {\r\n\t\t\treturn converter(this._raw[propertyName]);\r\n\t\t}\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis._engine.drawGraph(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\tdraw2(x, y) {\r\n\t\tthis._engine.drawGraph2(this, x - this.x, y - this.y);\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t */\r\n\tdraw2i(x, y) {\r\n\t\tthis._engine.drawGraph2(this, Math.trunc(x - this.x + 0.5), Math.trunc(y - this.y + 0.5));\r\n\t}\r\n}\r\n\r\n\r\nexport class Sprite extends SpriteBase {\r\n\t/**\r\n\t * sprite = new Sprite(rawData);//不會載入image\r\n\t * sprite._url = img_url;//不會載入image\r\n\t *\r\n\t * 會觸發載入image的method\r\n\t * draw(), isLoaded(), get width(), get height()\r\n\t * \r\n\t * 手動載入image: __loadTexture()\r\n\t * \r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\tvar origin = this._get(new Vec2(0, 0), \"origin\", Vec2.get);\r\n\t\tthis.x = origin.x;\r\n\t\tthis.y = origin.y;\r\n\r\n\t\tthis.z = this._get(0, \"z\", Number);\r\n\r\n\t\tthis.delay = this._get(100, \"delay\", Number);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tctx.rect(x, y, w, h);\r\n\t\t\tctx.clip();\r\n\r\n\t\t\tlet left = x;\r\n\t\t\tlet top = y;\r\n\t\t\tlet right = x + w;\r\n\t\t\tlet bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\tdrawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst left = x;\r\n\t\t\tconst right = x + w;\r\n\r\n\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\tthis.draw2(j, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\tdrawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tctx.save();\r\n\t\ttry {\r\n\t\t\tconst top = y;\r\n\t\t\tconst bottom = y + h;\r\n\r\n\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\tthis.draw2(x, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\t_drawPattern(x, y, w, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t\r\n\t\tconst sw = Math.trunc(w / this.width) * this.width;\r\n\t\tconst sh = Math.trunc(h / this.height) * this.height;\r\n\t\t\r\n\t\tconst left = x;\r\n\t\tconst top = y;\r\n\t\tconst right = x + sw;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tlet i, j;\r\n\r\n\t\tif (h >= this.height) {\r\n\t\t\tfor (i = top; i < bottom; i += this.height) {\r\n\t\t\t\tif (w >= this.width) {\r\n\t\t\t\t\tfor (j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet sx = w - sw;\r\n\t\t\t\t\tif (sx > 0) {\r\n\t\t\t\t\t\tthis._engine._drawImage(this, 0, 0, sx, this.height, j - this.x, i - this.y, sx, this.height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._engine._drawImage(this, 0, 0, w, this.height, left - this.x, i - this.y, w, this.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet sy = h - sh;\r\n\t\t\tif (sy > 0) {\r\n\t\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\t\tthis._engine._drawImage(this, 0, 0, this.width, sy, left - this.x, i - this.y, this.width, sy);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(new Error(\"未完成\"));\r\n\t\t\tthis._engine._drawImage(this, 0, 0, this.width, h, left - this.x, top - this.y, this.width, h);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t */\r\n\t_drawHorizontalPattern(x, y, w) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst left = x;\r\n\t\tconst right = x + w;\r\n\r\n\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\tthis.draw2(j, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} h\r\n\t */\r\n\t_drawVerticalPattern(x, y, h) {\r\n\t\tif (!this.isLoaded()) {\r\n\t\t\treturn;//sprite require property: width, height\r\n\t\t}\r\n\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\tconst top = y;\r\n\t\tconst bottom = y + h;\r\n\r\n\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\tthis.draw2(x, i);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawPattern4i(x, y, w, h) {\r\n\t\tthis.drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\tdrawHorizontalPattern3i(x, y, w) {\r\n\t\tthis.drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\tdrawVerticalPattern3i(x, y, h) {\r\n\t\tthis.drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawPattern4i(x, y, w, h) {\r\n\t\tthis._drawPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} w - type: int\r\n\t */\r\n\t_drawHorizontalPattern3i(x, y, w) {\r\n\t\tthis._drawHorizontalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(w + 0.5));\r\n\t}\r\n\t/**\r\n\t * without clip\r\n\t * @param {number} x - type: int\r\n\t * @param {number} y - type: int\r\n\t * @param {number} h - type: int\r\n\t */\r\n\t_drawVerticalPattern3i(x, y, h) {\r\n\t\tthis._drawVerticalPattern(Math.trunc(x + 0.5), Math.trunc(y + 0.5), Math.trunc(h + 0.5));\r\n\t}\r\n}\r\n\r\nexport class _$PatternSprite_Loaded extends Sprite {\r\n\t/**\r\n\t * @param {!any} raw\r\n\t * @param {string=} url\r\n\t */\r\n\tconstructor(raw, url) {\r\n\t\tsuper(raw, url);\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._direction = null;\r\n\r\n\t\t/** @type {CanvasPattern} */\r\n\t\tthis._pattern = null;\r\n\t}\r\n\r\n\t/** @type {string} */\r\n\tget direction() {\r\n\t\treturn this._direction;\r\n\t}\r\n\tset direction(value) {\r\n\t\tif (value && this._direction != value) {\r\n\t\t\tthis._direction = value;\r\n\t\r\n\t\t\t//reload;\r\n\t\t\tthis._pattern = null;\r\n\t\t\tthis.__proto__ = $PatternSprite.prototype;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(-this.x, -this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction && this._pattern) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tctx.rect(x - this.x, y - this.y, w, h);\r\n\t\t\tctx.fillStyle = this._pattern;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.fillStyle = \"no-repeat\";\r\n\t\t}\r\n\t}\r\n\r\n\t/** @returns {\"repeat\"} */\r\n\tget e_repeat() {\r\n\t\treturn \"repeat\";\r\n\t}\r\n\t/** @returns {\"repeat-x\"} */\r\n\tget e_repeat_x() {\r\n\t\treturn \"repeat-x\";\r\n\t}\r\n\t/** @returns {\"repeat-y\"} */\r\n\tget e_repeat_y() {\r\n\t\treturn \"repeat-y\";\r\n\t}\r\n\t/** @returns {\"no-repeat\"} */\r\n\tget e_noRepeat() {\r\n\t\treturn \"no-repeat\";\r\n\t}\r\n}\r\n\r\nexport class $PatternSprite extends _$PatternSprite_Loaded {\r\n\tdrawPattern(w, h) {\r\n\t\tthis.drawPattern2(0, 0, w, h);\r\n\t}\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.isLoaded()) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t{\r\n\t\t\t\tctx.rect(x, y, w, h);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tlet left = x;\r\n\t\t\t\tlet top = y;\r\n\t\t\t\tlet right = x + w;\r\n\t\t\t\tlet bottom = y + h;\r\n\r\n\t\t\t\tfor (let i = top; i < bottom; i += this.height) {\r\n\t\t\t\t\tfor (let j = left; j < right; j += this.width) {\r\n\t\t\t\t\t\tthis.draw2(j, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern(w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern(w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} w\r\n\t * @param {number} h\r\n\t */\r\n\tdrawPattern2(x, y, w, h) {\r\n\t\tif (this.direction) {\r\n\t\t\t/** @type {CanvasRenderingContext2D} */\r\n\t\t\tconst ctx = this._engine.ctx;\r\n\t\r\n\t\t\tif (!this._pattern) {\r\n\t\t\t\tif (this.isLoaded()) {\r\n\t\t\t\t\tthis._pattern = ctx.createPattern(this.texture, this.direction);\r\n\t\t\t\t\tthis.__proto__ = _$PatternSprite_Loaded.prototype;\r\n\t\t\t\t\tthis.drawPattern2(x, y, w, h);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","﻿\r\n\r\nconst $failed_urls = [];\r\n\r\nconst $archive = {};\r\n\r\n\r\nwindow.character_emotion_list = [\"blink\", \"hit\", \"smile\", \"troubled\", \"cry\", \"angry\", \"bewildered\", \"stunned\",\r\n\t\"vomit\", \"oops\", \"cheers\", \"chu\", \"wink\", \"pain\", \"glitter\", \"despair\", \"love\", \"shine\", \"blaze\", \"hum\",\r\n\t\"bowing\", \"hot\", \"dam\", \"qBlue\"];\r\n\r\nwindow.character_action_list = [\"walk1\", \"walk2\", \"stand1\", \"stand2\", \"alert\", \"swingO1\", \"swingO2\", \"swingO3\", \"swingOF\", \"swingT1\",\r\n\t\"swingT2\", \"swingT3\", \"swingTF\", \"swingP1\", \"swingP2\", \"swingPF\", \"stabO1\", \"stabO2\", \"stabOF\", \"stabT1\",\r\n\t\"stabT2\", \"stabTF\", \"shoot1\", \"shoot2\", \"shootF\", \"proneStab\", \"prone\", \"heal\", \"fly\", \"jump\", \"sit\", \"ladder\",\r\n\t\"rope\"/*, \"dead\", \"ghostwalk\", \"ghoststand\", \"ghostjump\", \"ghostproneStab\", \"ghostladder\", \"ghostrope\", \"ghostfly\",\r\n\t\t\"ghostsit\"*/];\r\n\r\nexport class ItemCategoryInfo {\r\n\t/**\r\n\t * @param {string} id_prefix\r\n\t * @param {string} path\r\n\t * @param {boolean} isOnFace\r\n\t * @param {string} slot - property name\r\n\t * @param {string} categoryName\r\n\t */\r\n\tconstructor(id_prefix, imgDir, listPath, slot, categoryName, type = \"Equip\") {\r\n\t\tif (arguments.length !=5) {\r\n\t\t\talert(\"ItemCategoryInfo: \" + [...arguments].join(\",\"));\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tthis.id_prefix = id_prefix;\r\n\r\n\t\t/** data path */\r\n\t\tthis.path = imgDir;\r\n\r\n\t\t/** equip window */\r\n\t\tthis.slot = slot;\r\n\r\n\t\t/** item list file name */\r\n\t\tthis.listPath = listPath;\r\n\r\n\t\t/** display category name */\r\n\t\tthis.categoryName = categoryName;\r\n\r\n\t\t/** renderer */\r\n\t\tthis.fragmentType = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.dataDir = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconPath = null;\r\n\t\t/** @type {string} */\r\n\t\tthis.iconRawPath = null;\r\n\t\t{\r\n\t\t\tlet dataDir, iconPath, iconRawPath;\r\n\r\n\t\t\tswitch (slot) {\r\n\t\t\t\tcase \"head\":\r\n\t\t\t\t\ticonPath = \"stand1/0/head\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/head\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"body\":\r\n\t\t\t\t\ticonPath = \"stand1/0/body\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/body\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"hair\":\r\n\t\t\t\t\ticonPath = \"stand1/0/hair\";\r\n\t\t\t\t\ticonRawPath = \"stand1/0/hair\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"face\":\r\n\t\t\t\t\ticonPath = \"blink/0/face\";\r\n\t\t\t\t\ticonRawPath = \"blink/0/face\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault://typeId: 0|1|2|3|4\r\n\t\t\t\t\ticonPath = \"info/icon\";\r\n\t\t\t\t\ticonRawPath = \"info/iconRaw\";\r\n\t\t\t}\r\n\r\n\t\t\tif (type == \"Equip\") {\r\n\t\t\t\tdataDir = `/Character/${imgDir + (imgDir ? \"/\" : \"\")}`;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//TODO: get item data dir\r\n\t\t\t\tconsole.error(\"未完成\");\r\n\t\t\t}\r\n\r\n\t\t\tObject.defineProperties(this, {\r\n\t\t\t\t'dataDir': {\r\n\t\t\t\t\tvalue: dataDir,\r\n\t\t\t\t},\r\n\t\t\t\t'iconPath': {\r\n\t\t\t\t\tvalue: iconPath,\r\n\t\t\t\t},\r\n\t\t\t\t'iconRawPath': {\r\n\t\t\t\t\tvalue: iconRawPath,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getDataPath(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tconst info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (id[0] == '0') {\r\n\t\t\treturn info.dataDir + id;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//TODO: get item data path\r\n\t\t\tthrow new Error(\"未完成\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconRawUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == '0') {\r\n\t\t\treturn $get.imageUrl(info.dataDir + id + \"/\" + info.iconRawPath);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string|null}\r\n\t */\r\n\tstatic getIconUrl(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (id[0] == '0') {\r\n\t\t\treturn $get.imageUrl(info.dataDir + id + \"/\" + info.iconPath);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * load name and desc\r\n\t * @param {string} id\r\n\t * @returns {{name:string,desc:string}}\r\n\t */\r\n\tstatic async loadString(id) {\r\n\t\t/** @type {ItemCategoryInfo} */\r\n\t\tlet info = ItemCategoryInfo.get(id);\r\n\t\tif (!info) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet url = `/String/Eqp/Eqp/${info.path + (info.path ? \"/\" : \"\")}${Number(id)}`;\r\n\t\tlet data = await $get.data(url);\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - 4+ digit string\r\n\t * @returns {ItemCategoryInfo}\r\n\t */\r\n\tstatic get(id) {\r\n\t\tlet info;\r\n\r\n\t\tif (id == null || id == \"\") {\r\n\t\t\tdebugger;\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\r\n\t\tif (id.length == 4) {\r\n\t\t\tinfo = ItemCategoryInfo._info[id];\r\n\t\t\tif (info) {\r\n\t\t\t\treturn info;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 4)];\r\n\t\t\tif (info) {\r\n\t\t\t\treturn info;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (id.length == 6) {\r\n\t\t\t\t\tinfo = ItemCategoryInfo._info[id];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tinfo = ItemCategoryInfo._info[id.slice(0, 6)];\r\n\t\t\t\t}\r\n\t\t\t\tif (info) {\r\n\t\t\t\t\treturn info;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.warn(\"unknow item type, itemId: \" + id);\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getTypeId() {\r\n\t\treturn Math.trunc(_id / 1000000);\r\n\t}\r\n\r\n\tstatic getCategory() {\r\n\t\treturn Math.trunc(_id / 10000);// % 100;// 0105 // 01 + 05 // type + category\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isItem(id) {\r\n\t\tlet type = Math.trunc(id / 1000000);//id.startsWith(\"00\");\r\n\t\treturn type != 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id - char[4]: type; char[4+]: itemId\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isEquip(id) {\r\n\t\tif (id == null || id == \"\") {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet _id = Number(id);\r\n\r\n\t\t//let cate = Number(id.length == 4 ? id : id.slice(0, 4));\r\n\t\t//return (cate >= \"0100\" && cate < \"0180\");\r\n\r\n\t\tlet cate = Math.trunc(_id / 10000);\r\n\t\tif (cate > 180 && cate < 2000) {\r\n\t\t\tconsole.warn(\"?? equip: \" + id);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\r\n\t\tlet type = Math.trunc(_id / 1000000);\r\n\r\n\t\treturn type == 1;\r\n\t}\r\n\r\n\t/**\r\n\t * 1~4 digit number\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic getSubCategory(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} itemId\r\n\t */\r\n\tstatic isCashWeapon(itemId) {\r\n\t\treturn Math.trunc(itemId / 10000) == 170;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} job\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getJobWeaponCategory(job) {\r\n\t\t//TODO: getJobWeaponCategory\r\n\t\tconsole.warn(\"getJobWeaponCategory: 未完成\");\r\n\t}\r\n}\r\nItemCategoryInfo.type = {\r\n\tEquip: \"Equip\",\r\n\tConsume: \"Consume\",\r\n\tEtc: \"Etc\",\r\n\tInstall: \"Install\",\r\n\tCash: \"Cash\"\r\n};\r\nItemCategoryInfo.typeName = {\r\n\t0: \"Equip\",\r\n\t1: \"Consume\",\r\n\t2: \"Etc\",\r\n\t3: \"Install\",\r\n\t4: \"Cash\"\r\n};\r\nItemCategoryInfo.typeId = {\r\n\tEquip: 0,\r\n\tConsume: 1,\r\n\tEtc: 2,\r\n\tInstall: 3,\r\n\tCash: 4,\r\n};\r\nItemCategoryInfo._info = {\r\n\t'0000': new ItemCategoryInfo(\"0000\", \"\",\t\t\t\"body\",\t\t\t\t\"body\",\t\t\t\"<body>\"),\r\n\t'0001': new ItemCategoryInfo(\"0001\", \"\",\t\t\t\"head\",\t\t\t\t\"head\",\t\t\t\"<head>\"),\r\n\r\n\t'0002': new ItemCategoryInfo(\"0002\", \"Face\",\t\t\"Face\",\t\t\t\t\"face\",\t\t\t\"臉型\"),\r\n\t'0003': new ItemCategoryInfo(\"0003\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\"),\r\n\t'0004': new ItemCategoryInfo(\"0004\", \"Hair\",\t\t\"Hair\",\t\t\t\t\"hair\",\t\t\t\"髮型\"),\r\n\r\n\t'0100': new ItemCategoryInfo(\"0100\", \"Cap\",\t\t\t\"Cap\",\t\t\t\t\"cap\",\t\t\t\"帽子\"),\r\n\t'0101': new ItemCategoryInfo(\"0101\", \"Accessory\",\t\"accessoryFace\",\t\"accessoryFace\", \"臉飾\"),\r\n\t'0102': new ItemCategoryInfo(\"0102\", \"Accessory\",\t\"accessoryEyes\",\t\"accessoryEyes\", \"眼飾\"),\r\n\t'0103': new ItemCategoryInfo(\"0103\", \"Accessory\",\t\"accessoryEars\",\t\"accessoryEars\", \"耳環\"),\r\n\t'0104': new ItemCategoryInfo(\"0104\", \"Coat\",\t\t\"Coat\",\t\t\t\t\"coat\",\t\t\t\"上衣\"),\r\n\t'0105': new ItemCategoryInfo(\"0105\", \"Longcoat\",\t\"Longcoat\",\t\t\t\"longcoat\",\t\t\"套服\"),\r\n\t'0106': new ItemCategoryInfo(\"0106\", \"Pants\",\t\t\"Pants\",\t\t\t\"pants\",\t\t\"褲子\"),\r\n\t'0107': new ItemCategoryInfo(\"0107\", \"Shoes\",\t\t\"Shoes\",\t\t\t\"shoes\",\t\t\"鞋子\"),\r\n\t'0108': new ItemCategoryInfo(\"0108\", \"Glove\",\t\t\"Glove\",\t\t\t\"glove\",\t\t\"手套\"),\r\n\t'0109': new ItemCategoryInfo(\"0109\", \"Shield\",\t\t\"Shield\",\t\t\t\"shield\",\t\t\"盾牌\"),\r\n\t'0110': new ItemCategoryInfo(\"0110\", \"Cape\",\t\t\"Cape\",\t\t\t\t\"cape\",\t\t\t\"披風\"),\r\n\r\n\t\"0121\": new ItemCategoryInfo(\"0121\", \"Weapon\", \"閃亮克魯\", \"weapon\", \"閃亮克魯\"),\r\n\t\"0122\": new ItemCategoryInfo(\"0122\", \"Weapon\", \"靈魂射手\", \"weapon\", \"靈魂射手\"),\r\n\t\"0123\": new ItemCategoryInfo(\"0123\", \"Weapon\", \"魔劍\", \"weapon\", \"魔劍\"),\r\n\t\"0124\": new ItemCategoryInfo(\"0124\", \"Weapon\", \"能量劍\", \"weapon\", \"能量劍\"),\r\n\t\"0125\": new ItemCategoryInfo(\"0125\", \"Weapon\", \"幻獸棒\", \"weapon\", \"幻獸棒\"),\r\n\t\"0126\": new ItemCategoryInfo(\"0126\", \"Weapon\", \"ESP限制器\", \"weapon\", \"ESP限制器\"),\r\n\t\"0127\": new ItemCategoryInfo(\"0127\", \"Weapon\", \"鎖鏈\", \"weapon\", \"鎖鏈\"),\r\n\t\"0128\": new ItemCategoryInfo(\"0128\", \"Weapon\", \"魔力護腕\", \"weapon\", \"魔力護腕\"),\r\n\r\n\t\"0130\": new ItemCategoryInfo(\"0130\", \"Weapon\", \"單手劍\", \"weapon\", \"單手劍\"),\r\n\t\"0131\": new ItemCategoryInfo(\"0131\", \"Weapon\", \"單手斧\", \"weapon\", \"單手斧\"),\r\n\t\"0132\": new ItemCategoryInfo(\"0132\", \"Weapon\", \"單手錘\", \"weapon\", \"單手錘\"),\r\n\t\"0133\": new ItemCategoryInfo(\"0133\", \"Weapon\", \"短劍\", \"weapon\", \"短劍\"),\r\n\t\"0134\": new ItemCategoryInfo(\"0134\", \"Weapon\", \"雙刀\", \"weapon\", \"雙刀\"),\r\n\t\"013526\": new ItemCategoryInfo(\"013526\", \"Weapon\", \"靈魂之環\", \"weapon\", \"靈魂之環\"),\r\n\t\"013530\": new ItemCategoryInfo(\"013530\", \"Weapon\", \"控制器\", \"weapon\", \"控制器\"),\r\n\t\"0136\": new ItemCategoryInfo(\"0136\", \"Weapon\", \"手杖\", \"weapon\", \"手杖\"),\r\n\t\"0137\": new ItemCategoryInfo(\"0137\", \"Weapon\", \"短杖\", \"weapon\", \"短杖\"),\r\n\t\"0138\": new ItemCategoryInfo(\"0138\", \"Weapon\", \"長杖\", \"weapon\", \"長杖\"),\r\n\t\r\n\t\"0140\": new ItemCategoryInfo(\"0140\", \"Weapon\", \"雙手劍\", \"weapon\", \"雙手劍\"),\r\n\t\"0141\": new ItemCategoryInfo(\"0141\", \"Weapon\", \"雙手斧\", \"weapon\", \"雙手斧\"),\r\n\t\"0142\": new ItemCategoryInfo(\"0142\", \"Weapon\", \"雙手棍\", \"weapon\", \"雙手棍\"),\r\n\t\"0143\": new ItemCategoryInfo(\"0143\", \"Weapon\", \"槍\", \"weapon\", \"槍\"),\r\n\t\"0144\": new ItemCategoryInfo(\"0144\", \"Weapon\", \"矛\", \"weapon\", \"矛\"),\r\n\t\"0145\": new ItemCategoryInfo(\"0145\", \"Weapon\", \"弓\", \"weapon\", \"弓\"),\r\n\t\"0146\": new ItemCategoryInfo(\"0146\", \"Weapon\", \"弩\", \"weapon\", \"弩\"),\r\n\t\"0147\": new ItemCategoryInfo(\"0147\", \"Weapon\", \"拳套\", \"weapon\", \"拳套\"),\r\n\t\"0148\": new ItemCategoryInfo(\"0148\", \"Weapon\", \"指虎\", \"weapon\", \"指虎\"),\r\n\t\"0149\": new ItemCategoryInfo(\"0149\", \"Weapon\", \"火槍\", \"weapon\", \"火槍\"),\r\n\t\"0150\": new ItemCategoryInfo(\"0150\", \"Weapon\", \"鏟\", \"weapon\", \"鏟\"),\r\n\t\"0151\": new ItemCategoryInfo(\"0151\", \"Weapon\", \"鎬\", \"weapon\", \"鎬\"),\r\n\t\"0152\": new ItemCategoryInfo(\"0152\", \"Weapon\", \"雙弩槍\", \"weapon\", \"雙弩槍\"),\r\n\t\"0153\": new ItemCategoryInfo(\"0153\", \"Weapon\", \"加農砲\", \"weapon\", \"加農砲\"),\r\n\t\"0154\": new ItemCategoryInfo(\"0154\", \"Weapon\", \"太刀\", \"weapon\", \"太刀\"),\r\n\t\"0155\": new ItemCategoryInfo(\"0155\", \"Weapon\", \"扇子\", \"weapon\", \"扇子\"),\r\n\t\"0156\": new ItemCategoryInfo(\"0156\", \"Weapon\", \"琉\", \"weapon\", \"琉\"),\r\n\t\"0157\": new ItemCategoryInfo(\"0157\", \"Weapon\", \"璃\", \"weapon\", \"璃\"),\r\n\t\"0158\": new ItemCategoryInfo(\"0158\", \"Weapon\", \"重拳槍\", \"weapon\", \"重拳槍\"),\r\n\t\"0170\": new ItemCategoryInfo(\"0170\", \"Weapon\", \"0170\", \"weapon\", \"點裝武器\"),\r\n};\r\nItemCategoryInfo._categoryList = (function (info_map) {\r\n\tlet list = [];\r\n\tlet set = new Set();\r\n\tfor (let i in info_map) {\r\n\t\tlet cat = info_map[i];\r\n\t\tlet key = cat.categoryName || cat.listPath;\r\n\r\n\t\tif (!set.has(key)) {\r\n\t\t\tset.add(key);\r\n\r\n\t\t\tlist.push({\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalue: i,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn list;\r\n})(ItemCategoryInfo._info);\r\n\r\nexport class ResourceManager {\r\n\tstatic isEquipExist(id, cateInfo) {\r\n\t\tconst dp = cateInfo.listPath;\r\n\t\tconst es = ResourceManager.equip_map[dp];\r\n\t\treturn !es || es.has(id);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic async loadArchive(url) {\r\n\t\t$setValue($archive, \"/\", JSON.parse(await ResourceManager.get(url)));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tstatic get(url) {\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\txhr.open(\"GET\", url, true);\r\n\r\n\t\t\txhr.timeout = 10 * 60 * 1000;//20000;\r\n\r\n\t\t\txhr.onload = function () {\r\n\t\t\t\tif (this.status == 404 || this.status == 500) {\r\n\t\t\t\t\t$failed_urls.push(url);\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\t//resolve(null);\r\n\t\t\t\t\treject(this.status + \": \" + url);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 200) {\r\n\t\t\t\t\tresolve(this.responseText);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.status == 304) {\r\n\t\t\t\t\tdebugger\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\txhr.ontimeout = function (e) {\r\n\t\t\t\tdebugger;\r\n\t\t\t\t// XMLHttpRequest 超时。在此做某事。\r\n\t\t\t\t//resolve(null);\r\n\t\t\t\treject(\"timeout: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.onabort = function (e) {\r\n\t\t\t\treject(\"abort: \" + url);\r\n\t\t\t};\r\n\r\n\t\t\txhr.send();\r\n\t\t});\r\n\t}\r\n\r\n\tstatic get root_path() {\r\n\t\treturn window.$ROOT_PATH;\r\n\t}\r\n\r\n\tstatic get archive() {\r\n\t\treturn $archive;\r\n\t}\r\n\r\n\tstatic get failed_urls() {\r\n\t\treturn $failed_urls;\r\n\t}\r\n}\r\nwindow.$ResourceManager = ResourceManager;\r\n\r\n/**\r\n * @param {{}} obj\r\n * @param {string} path\r\n * @param {any} value\r\n */\r\nfunction $setValue(obj, path, value) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key] == null) {\r\n\t\t\ttarget[key] = {};\r\n\t\t}\r\n\t\ttarget = target[key];\r\n\t}\r\n\tlet origin_value = target[ps[lastIndex]];\r\n\tif (origin_value instanceof Promise) {\r\n\t\tdelete target[ps[lastIndex]];\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n\telse if (origin_value && typeof origin_value == \"object\") {\r\n\t\t//if (value instanceof Promise) {\r\n\t\t//\tdebugger;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t\tfor (let key in value) {\r\n\t\t\t\torigin_value[key] = value[key] || origin_value[key];\r\n\t\t\t}\r\n\t\t//}\r\n\t}\r\n\telse if (typeof value != \"undefined\") {\r\n\t\ttarget[ps[lastIndex]] = value;\r\n\t}\r\n}\r\nfunction $getValue(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\tlet ps = path.split(\"/\");\r\n\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\tlet key = ps[i];\r\n\t\tif (target[key]) {\r\n\t\t\t\ttarget = target[key];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\treturn target[ps[lastIndex]];\r\n}\r\n\r\nconst symbol_isPack = Symbol(\"$pack\");\r\n\r\nconst url_startsWith_protocol = RegExp.prototype.test.bind(/^(([a-zA-Z^\\:]+)(\\:.*)$|\\/\\/)/);\r\nfunction _setValueByPath(path, value, is_pack) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn;\r\n\t}\r\n\telse if (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\tif (is_pack) {\r\n\t\t\tvalue[symbol_isPack] = true;\r\n\t\t}\r\n\t\tpath = path.slice(window.$ROOT_PATH.length);\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n\telse {\r\n\t\treturn $setValue($archive, path, value);\r\n\t}\r\n}\r\nfunction _getValueFromArchiveByPath(path, value) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tif (_path) {\r\n\t\treturn $getValue($archive, _path);\r\n\t}\r\n\treturn undefined;\r\n}\r\nfunction _getDataPathByUrl(path) {\r\n\tif (!url_startsWith_protocol(path)) {\r\n\t\tif (window.$ROOT_PATH != \"\" && path.startsWith(window.$ROOT_PATH)) {\r\n\t\t\treturn path.slice(window.$ROOT_PATH.length);\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @returns {Promise<any>|any}\r\n */\r\nfunction $getValueAsync(obj, path) {\r\n\tif (path.endsWith(\"/\")) {\r\n\t\tpath = path.slice(0, path.length - 1);\r\n\t}\r\n\t\r\n\t// try get value sync\r\n\tlet value = $getValue(obj, path);\r\n\t\r\n\t// if value exist\r\n\tif (value) {\r\n\t\tif (value instanceof Promise) {\r\n\t\t\t// ??\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait value;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\telse {// if value not exist, try await parent node\r\n\t\tlet ps = path.split(\"/\");\r\n\t\tlet i, target = obj, lastIndex = ps.length - 1;\r\n\t\tfor (i = 0; i < lastIndex; ++i) {\r\n\t\t\tlet key = ps[i];\r\n\t\t\tif (target[key] instanceof Promise) {\r\n\t\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\t\tawait target[key];\r\n\t\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (target[key]) {\r\n\t\t\t\t\ttarget = target[key];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet result = target[ps[lastIndex]];\r\n\t\tif (result instanceof Promise) {\r\n\t\t\treturn new Promise(async function (resolve, reject) {\r\n\t\t\t\tawait result;\r\n\t\t\t\tresolve(await $getValueAsync(obj, path));\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {string} url\r\n * @returns {Promise<any>}\r\n */\r\nexport let $get = function $get(url) {\r\n\treturn ResourceManager.get(url);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.pack = async function $get_pack(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj && obj[symbol_isPack]) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tif (process.env.NODE_ENV !== 'production') {\r\n\t\t\tif (obj && !obj[symbol_isPack]) {\r\n\t\t\t\tthrow new TypeError(\"data: \" + path);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst url = $get.packUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, true);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, true);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.packSync = function get_packSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.data = async function $get_data(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.dataUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {any}\r\n */\r\n$get.dataSync = function get_dataSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\treturn undefined;\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.list = async function $get_list(path) {\r\n\tlet _path = _getDataPathByUrl(path);\r\n\tlet obj;\r\n\r\n\tif (_path) {\r\n\t\tobj = $getValueAsync($archive, _path);\r\n\t}\r\n\r\n\tif (obj instanceof Promise) {\r\n\t\treturn await obj;\r\n\t}\r\n\telse if (obj) {\r\n\t\treturn obj;\r\n\t}\r\n\telse {\r\n\t\tconst url = $get.listUrl(path);\r\n\r\n\t\tlet task = (async function () {\r\n\t\t\tlet jsonText = await ResourceManager.get(url);\r\n\r\n\t\t\tobj = JSON.parse(jsonText);\r\n\r\n\t\t\t_setValueByPath(path, obj, false);\r\n\r\n\t\t\treturn obj;\r\n\t\t})();\r\n\t\t_setValueByPath(path, task, false);\r\n\r\n\t\treturn await task;\r\n\t}\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {Promise<any>}\r\n */\r\n$get.listSync = function $get_listSync(path) {\r\n\tlet obj = _getValueFromArchiveByPath(path);\r\n\tif (obj) {\r\n\t\treturn Object.keys(obj);\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.dataUrl = function $get_dataUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"data\")) {\r\n\t\treturn `${window.$ROOT_PATH}data${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game data: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.packUrl = function $get_packUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"pack\")) {\r\n\t\treturn `${window.$ROOT_PATH}pack${path}.json`;\r\n\t}\r\n\tthrow new Error(\"Not game pack: \" + path);\r\n}\r\n$get.listUrl = function $get_listUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"ls\")) {\r\n\t\treturn `${window.$ROOT_PATH}ls${path}.json`;\r\n\t}\r\n\tthrow new Error(path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.imageUrl = function $get_imagesUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"images\")) {\r\n\t\treturn `${window.$ROOT_PATH}images${path}.png`;\r\n\t}\r\n\tthrow new Error(\"Not game images: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundMp3Url = function $get_soundMp3Url(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.mp3`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.soundWavUrl = function $get_soundWavUrl(path) {\r\n\tif (url_startsWith_protocol(path)) {\r\n\t\treturn path;\r\n\t}\r\n\telse if (!path.startsWith(\"sound\")) {\r\n\t\treturn `${window.$ROOT_PATH}sound${path}.wav`;\r\n\t}\r\n\tthrow new Error(\"Not game sound: \" + path);\r\n}\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {string}\r\n */\r\n$get.assetUrl = function $get_assetUrl(path) {\r\n\treturn `${window.$ROOT_PATH}${path}`;\r\n}\r\n$get.asset = function $get_asset(path) {\r\n\treturn $get($get.assetUrl(path));\r\n}\r\n\r\nwindow.$get = $get;\r\n\r\n\r\nexport class ItemAttrNormalize {\r\n\tstatic head(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic body(item) {\r\n\t\titem.gender = 2;\r\n\t}\r\n\tstatic Face(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 4 ? 1 : 0;\r\n\t}\r\n\tstatic Hair(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 1 || g == 2 || g == 4 || g == 7 ? 1 : 0;\r\n\t}\r\n\tstatic Cap(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryFace(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEyes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic accessoryEars(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Coat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Longcoat(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Pants(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shoes(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Glove(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Shield(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic Cape(item) {\r\n\t\tItemAttrNormalize._equip(item);\r\n\t}\r\n\tstatic _equip(item) {\r\n\t\tconst g = Math.trunc((item.id % 10000) / 1000);\r\n\t\titem.gender = g == 0 ? 0 : (g == 1 ? 1 : 2);\r\n\t}\r\n}\r\n\r\nconst regexp_getHairStyleID = /(\\d{4,7})\\d$/;\r\nconst regexp_getFaceStyleID = /(\\d{2,5})\\d(\\d{2})$/;\r\n\r\nconst regexp_getHairColor = /\\d{4,7}(\\d)$/;\r\nconst regexp_getFaceColor = /\\d{2,5}(\\d)\\d{2}$/;\r\n\r\nexport class CharacterRenderConfig {\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumHairColor(style) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i;\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style id\r\n\t * @returns {string[]}\r\n\t */\r\n\tstatic * enumFaceColor(style) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\tlet id = m[1] + i + m[2];\r\n\t\t\tyield id;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorHairID(style, color) {\r\n\t\tlet m = style.match(regexp_getHairStyleID);\r\n\t\tlet id = m[1] + (color % 10);\r\n\t\treturn id;\r\n\t}\r\n\t/**\r\n\t * @param {string} style\r\n\t * @param {number} color\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getColorFaceID(style, color) {\r\n\t\tlet m = style.match(regexp_getFaceStyleID);\r\n\t\tlet id = m[1] + (color % 10) + m[2];\r\n\t\treturn id;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHairStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorHairID(id_1, 0) == CharacterRenderConfig.getColorHairID(id_2, 0);\r\n\t}\r\n\t/**\r\n\t * @param {string} id_1\r\n\t * @param {string} id_2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFaceStyleEqual(id_1, id_2) {\r\n\t\treturn CharacterRenderConfig.getColorFaceID(id_1, 0) == CharacterRenderConfig.getColorFaceID(id_2, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getHairColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getHairColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getFaceColor(id) {\r\n\t\tif (id) {\r\n\t\t\tid = String(id);\r\n\t\t\tlet m = id.match(regexp_getFaceColor);\r\n\t\t\tif (m) {\r\n\t\t\t\treturn m[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar _external_data = {\r\n\t\"requiredJobs\": [\r\n\t\t\"Beginner\"\r\n\t],\r\n\t\"requiredLevel\": 0,\r\n\t\"isCash\": true,\r\n\t\"name\": \"Blue Beanie\",\r\n\t\"desc\": null,\r\n\t\"id\": 1000000,\r\n\t\"requiredGender\": 0,\r\n\t\"typeInfo\": {\r\n\t\t\"overallCategory\": \"Equip\",\r\n\t\t\"category\": \"Armor\",\r\n\t\t\"subCategory\": \"Hat\"\r\n\t}\r\n};\r\n\r\nvar ItemTypeInfo = {\r\n\t\"Equip\": {\r\n\t\t\"Hat\": \"Cap\",\r\n\t\t\"Cape\": \"Cape\",\r\n\t\t\"Top\": \"Coat\",\r\n\t\t\"Overall\": \"Longcoat\",\r\n\t\t\"Glove\": \"Glove\",\r\n\t\t\"Bottom\": \"Pants\",\r\n\r\n\t\t\"Shield\": \"Shield\",\r\n\t\t\"Shoes\": \"Shoes\",\r\n\t\t\"Eye Decoration\": \"accessoryEyes\",\r\n\t\t\"Earrings\": \"accessoryEars\",\r\n\t\t//\"Ring\": \"\",\r\n\r\n\t\t//\"Pendant\": \"\",\r\n\t\t\"Face Accessory\": \"accessoryFace\",\r\n\t\t//\"Belt\": \"\",\r\n\t\t//\"Medal\": \"\",\r\n\t\t//\"Shoulder Accessory\": \"\",\r\n\t\t//\"Badge\": \"\",\r\n\r\n\t\t//\"Dragon Equipment\": \"\",\r\n\t\t//\"Mechanic Equipment\": \"\",\r\n\t\t//\"Pet Equipment\": \"\",\r\n\t\t//\"Android\": \"\",\r\n\t\t//\"Mechanical Heart\": \"\",\r\n\t\t//\"Bits\": \"\",\r\n\r\n\t\t\"Face\": \"Face\",\r\n\t\t\"Hair\": \"Hair\",\r\n\t},\r\n};\r\n\r\nResourceManager.external = {\r\n\tequip: {\r\n\t},\r\n};\r\n\r\nResourceManager.equip_map = {\r\n};\r\n\r\nfor (let i in ItemTypeInfo.Equip) {\r\n\tlet cate = ItemTypeInfo.Equip[i];\r\n\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 9; ++i) {\r\n\tlet cate = \"Face\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\nfor (let i = 0; i < 8; ++i) {\r\n\tlet cate = \"Hair\" + i;\r\n\tResourceManager.external.equip[cate] = [];\r\n\tResourceManager.equip_map[cate] = null;\r\n}\r\n\r\nasync function load_external_resource(url) {\r\n\turl = url || \"/items.json\";\r\n\tlet raw;\r\n\r\n\ttry {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get.asset(\"equip.json\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\tthrow Error(\"'/equip' is empty\");\r\n\t\t}\r\n\t}\r\n\tcatch (ex) {\r\n\t\traw = ResourceManager._external_raw = JSON.parse(await $get(\"//labs.maplestory.io/api/gms/latest/item/category/equip\"));\r\n\t\tif (!raw) {\r\n\t\t\tdebugger;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < raw.length; ++i) {\r\n\t\tconst item = raw[i];\r\n\t\tconst id = String(item.id).padStart(8, \"0\");\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (!(item.typeInfo && ItemTypeInfo[item.typeInfo.overallCategory])) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet clz = item.typeInfo.overallCategory.toLowerCase();\r\n\t\t\tlet cate = ItemTypeInfo[item.typeInfo.overallCategory][item.typeInfo.subCategory];\r\n\t\t\tif (!cate) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Face\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getFaceColor(id);\r\n\t\t\t}\r\n\t\t\telse if (cate == \"Hair\") {\r\n\t\t\t\tcate += CharacterRenderConfig.getHairColor(id);\r\n\t\t\t}\r\n\r\n\t\t\tlet it = {\r\n\t\t\t\tid: id,\r\n\t\t\t\tname: item.name,\r\n\t\t\t\tdesc: item.desc,\r\n\t\t\t\tcash: item.isCash ? 1 : 0,\r\n\t\t\t\ticon: {\r\n\t\t\t\t\t\"\": `//labs.maplestory.io/api/gms/latest/item/${item.id}/icon`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tResourceManager.external[clz][cate].push(it);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tconsole.error(\"external resource: id(\" + id + \")\");\r\n\t\t\tconsole.error(ex);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction update_external_equip_list() {\r\n\tconst url = \"https://labs.maplestory.io/api/gms/latest/item/category/equip\";\r\n\tload_external_resource(url).then(() => {\r\n\t\t_concat_external_resource(category, origin_data);\r\n\t\tconcat_external_resource = _concat_external_resource;\r\n\t\tconsole.log(\"done: update_external_equip_list\");\r\n\t});\r\n}\r\n\r\nlet external_resource_promise = load_external_resource();\r\n\r\nwindow.concat_external_resource = _concat_external_resource_p;\r\n\r\nwindow.trigger_update_external_equip_list = function () {\r\n\texternal_resource_promise = load_external_resource();\r\n\twindow.concat_external_resource = _concat_external_resource_p;\r\n}\r\n\r\nasync function _concat_external_resource_p(category, origin_data) {\r\n\tawait external_resource_promise;\r\n\t_concat_external_resource(category, origin_data);\r\n\tconcat_external_resource = _concat_external_resource;\r\n}\r\n\r\nfunction _concat_external_resource(category, origin_data) {\r\n\ttry {\r\n\t\tconst list = ResourceManager.external.equip[category];\r\n\t\tif (!list) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet id_map = ResourceManager.equip_map[category];\r\n\r\n\t\tif (!id_map) {\r\n\t\t\tid_map = new Map();\r\n\t\t\t\r\n\t\t\torigin_data.forEach(item => {\r\n\t\t\t\tid_map.set(item.id, item);\r\n\t\t\t});\r\n\r\n\t\t\tResourceManager.equip_map[category] = id_map;\r\n\t\t}\r\n\r\n\t\tlist.forEach((item) => {\r\n\t\t\tlet id = item.id;\r\n\t\t\tif (!id_map.has(id)) {\r\n\t\t\t\titem.$foreign = true;\r\n\t\t\t\torigin_data.push(item);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet ori_item = id_map.get(id);\r\n\t\t\t\tori_item._name = item.name || \"\";\r\n\t\t\t\tori_item._desc = item.desc || \"\";\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcatch (ex) {\r\n\t\tconsole.error(ex);\r\n\t\tdebugger;\r\n\t}\r\n}\r\n\r\nwindow.load_extern_item_data = async function (id) {\r\n\tlet _raw = JSON.parse(await $get(`//labs.maplestory.io/api/gms/latest/item/${id}`));\r\n\tlet raw = {};\r\n\r\n\tlet default_ = _raw.frameBooks.default ? _raw.frameBooks.default.frames[0]:null;\r\n\r\n\tfor (let i in _raw.frameBooks) {\r\n\t\tlet _act = _raw.frameBooks[i];\r\n\t\tlet act = [];\r\n\r\n\t\tfor (let j = 0; j < _act.frames.length; ++j) {\r\n\t\t\tlet frame = _act.frames[j] || default_;\r\n\t\t\tif (!frame || !frame.effects) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet _frags = frame.effects;\r\n\t\t\tlet frags = {};\r\n\t\t\tfor (let k in _frags) {\r\n\t\t\t\tlet _frag = _frags[k];\r\n\t\t\t\tif (_frag.image) {\r\n\t\t\t\t\tfrags[k] = {\r\n\t\t\t\t\t\t\"\": \"data:image/png;base64,\" + _frag.image,\r\n\t\t\t\t\t\t\"origin\": _frag.originOrZero || _frag.origin || _frag.center,\r\n\t\t\t\t\t\t\"map\": _frag.mapOffset,\r\n\t\t\t\t\t\t\"z\": _frag.position\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tact[j] = frags;\r\n\t\t}\r\n\r\n\t\traw[i] = act;\r\n\t}\r\n\r\n\traw.info = {\r\n\t\tislot: _raw.metaInfo.equip.islot,\r\n\t\tvslot: _raw.metaInfo.equip.vslot,\r\n\t\ticon: _raw.metaInfo.icon ? (\"data:image/png;base64,\" + _raw.metaInfo.icon.iconRaw) : \"\",\r\n\t\tcash: (_raw.metaInfo.cash && _raw.metaInfo.cash.cash) ? 1 : 0,\r\n\t};\r\n\r\n\treturn raw;\r\n}\r\n","﻿\r\nimport { Vec2 } from \"../math.js\";\r\n\r\n\r\nexport class ActionAnimationFrameData {\r\n\tconstructor() {\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tthis.move = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded raw data\r\n\t * @param {ActionAnimationFrameData} raw\r\n\t * @param {string} action\r\n\t * @param {number} frame\r\n\t */\r\n\t_load(raw, action, frame) {\r\n\t\tthis._raw = raw;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.delay = raw.delay;\r\n\r\n\t\t/** @type {Vec2} */\r\n\t\tif (raw.move) {\r\n\t\t\tthis.move = new Vec2(raw.move.x, raw.move.y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.move = new Vec2(0, 0);\r\n\t\t}\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis.action = raw.action || action;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = raw.frame || frame;\r\n\t}\r\n}\r\n\r\nexport class ActionAnimation {\r\n\tconstructor(raw) {\r\n\t\t/** @returns {ActionAnimationFrameData[]} */\r\n\t\tthis.frames = null;\r\n\r\n\t\t/** @type {string} */\r\n\t\tthis._action = null;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.time = 0;\r\n\r\n\t\t/** @type {number} */\r\n\t\tthis.frame = 0;\r\n\r\n\t\t/** @type {number} this.delay = delay < 0 ? -delay:0; if (this.delay == 0) launch attack */\r\n\t\tthis.delay = 0;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.loop = false;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\t_load(action) {\r\n\t\tthis._action = action;\r\n\t\tthis.frames = ActionAnimation.Adef[action];\r\n\t}\r\n\r\n\t/**\r\n\t * from loaded data\r\n\t * @param {string} action\r\n\t */\r\n\treload(action) {\r\n\t\tthis.reset();\r\n\t\tthis._load(action);\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.time = 0;\r\n\t\tthis.frame = 0;\r\n\t\tthis._is_end = false;\r\n\t}\r\n\r\n\t/**\r\n\t * update action delay, target.action, target.action_frame, target.tx, target.ty\r\n\t * @param {number} stamp\r\n\t * @param {CharacterRenderer} target\r\n\t */\r\n\tupdate(stamp, target) {\r\n\t\tif (!this.frames) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fdat = this.fdat;\r\n\t\tlet delay = 0;\r\n\r\n\t\tif (!fdat) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.time = this.time + stamp;\r\n\r\n\t\tif (fdat.delay < 0) {\r\n\t\t\tfdat.delay = -fdat.delay;\r\n\t\t}\r\n\r\n\t\tif (fdat.delay > 0) {\r\n\t\t\tdelay = fdat.delay;\r\n\t\t\tthis.delay = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelay = -fdat.delay;\r\n\t\t\tthis.delay = delay;\r\n\t\t}\r\n\r\n\t\tif (this.time > delay) {\r\n\t\t\tthis.frame = ++this.frame;\r\n\t\t\tthis.time = 0;\r\n\t\t}\r\n\r\n\t\t//translate target position\r\n\t\tif (fdat.move) {\r\n\t\t\ttarget.tx = -fdat.move.x * target.front;\r\n\t\t\ttarget.ty = fdat.move.y;//Y 軸相反\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\tif (this.isEnd()) {\r\n\t\t\ttarget.tx = 0;\r\n\t\t\ttarget.ty = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// 改變 action & action_frame 會造成迴圈: this.reload(this._action)\r\n\t\ttarget._action = fdat.action;\r\n\t\ttarget._action_frame = fdat.frame;\r\n\r\n\t\tif (!this.frames || this.fdat == null) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t\telse if (!this.loop) {\r\n\t\t\tthis._is_end = false;\r\n\t\t}\r\n\t\tif (this.frames.length <= 1) {\r\n\t\t\tthis._is_end = true;\r\n\t\t}\r\n\t}\r\n\r\n\tisEnd() {\r\n\t\treturn this._is_end;\r\n\t}\r\n\r\n\tgetTotalTime() {\r\n\t\treturn this.frames.reduce((total, frame) => total + frame.delay, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * frame data\r\n\t * @returns {ActionAnimationFrameData}\r\n\t */\r\n\tget fdat() {\r\n\t\treturn this.frames[this.frame];\r\n\t}\r\n\r\n\tstatic async Init() {\r\n\t\t/** @type {{[action:string]:ActionAnimationFrameData[]}} */\r\n\t\tlet raw = await $get.data(ActionAnimation._base_path);\r\n\r\n\t\tlet aadef = Object.assign({}, raw);\r\n\t\t\r\n\t\tdelete aadef['info'];\r\n\r\n\t\tfor (let actName in aadef) {\r\n\t\t\tlet aa = aadef[actName];\r\n\t\t\taadef[actName] = Object.values(aa).map((_fdef, frame) => {\r\n\t\t\t\tlet fdef = new ActionAnimationFrameData();\r\n\t\t\t\tfdef._load(_fdef, actName, frame);\r\n\t\t\t\treturn fdef;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//action definition\r\n\t\tActionAnimation.Adef = aadef;\r\n\r\n\t\twindow.CharacterActionAnimationDefinition = aadef;\r\n\t}\r\n\r\n\tstatic get _base_path() {\r\n\t\treturn \"/Character/00002000\";\r\n\t}\r\n}\r\n/**\r\n * action definition\r\n * @type {{[action:string]:ActionAnimationFrameData[]}}\r\n */\r\nActionAnimation.Adef = null;\r\n\r\n","\r\nwindow.DownloadData = (function () {\r\n\tlet a = document.createElement(\"a\");\r\n\tdocument.body.appendChild(a);\r\n\ta.style = \"display: none\";\r\n\ta.target = \"_blank\";\r\n\treturn function (text, type, fileName) {\r\n\t\tlet blob = new Blob([text], { type: type || \"octet/stream\" });\r\n\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\tif (fileName && fileName != \"\") {\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = fileName;\r\n\t\t\ta.click();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//a.href = url;\r\n\t\t\t//a.click();\r\n\t\t\twindow.open(url, '_blank');\r\n\t\t}\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n}());\r\n\r\nwindow.SelectText = function (elem) {\r\n\tvar range, selection;\r\n\r\n\tif (document.body.createTextRange) {\r\n\t\trange = document.body.createTextRange();\r\n\t\trange.moveToElementText(elem);\r\n\t\trange.select();\r\n\t}\r\n\telse if (window.getSelection) {\r\n\t\tselection = window.getSelection();\r\n\t\trange = document.createRange();\r\n\t\trange.selectNodeContents(elem);\r\n\t\tselection.removeAllRanges();\r\n\t\tselection.addRange(range);\r\n\t}\r\n}\r\nwindow.copyToClipboard = function (text) {\r\n\tvar $temp = $(\"<input>\");\r\n\t$(\"body\").append($temp);\r\n\t$temp.val(text).select();\r\n\tdocument.execCommand(\"copy\");\r\n\t$temp.remove();\r\n}\r\n\r\n/**\r\n * disable textNode \"#text\"\r\n * @param {string} xml - xml\r\n * @param {string[]=} arrayTags - optional\r\n * @returns {object}\r\n */\r\nfunction parseXml(xml, arrayTags) {\r\n\tvar dom = null;\r\n\tif (window.DOMParser) {\r\n\t\tdom = (new DOMParser()).parseFromString(xml, \"text/xml\");\r\n\t}\r\n\telse if (window.ActiveXObject) {\r\n\t\tdom = new ActiveXObject('Microsoft.XMLDOM');\r\n\t\tdom.async = false;\r\n\t\tif (!dom.loadXML(xml)) {\r\n\t\t\tthrow dom.parseError.reason + \" \" + dom.parseError.srcText;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tthrow \"cannot parse xml string!\";\r\n\t}\r\n\r\n\tfunction isArray(o) {\r\n\t\treturn Object.prototype.toString.apply(o) === '[object Array]';\r\n\t}\r\n\r\n\tfunction parseNode(xmlNode, result) {\r\n\t\tif (xmlNode.nodeName == \"#text\" && xmlNode.nodeValue.trim() == \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar jsonNode = {};\r\n\t\tvar existing = result[xmlNode.nodeName];\r\n\t\tif (existing) {\r\n\t\t\tif (!isArray(existing)) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [existing, jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName].push(jsonNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1) {\r\n\t\t\t\tresult[xmlNode.nodeName] = [jsonNode];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult[xmlNode.nodeName] = jsonNode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (xmlNode.attributes) {\r\n\t\t\tvar length = xmlNode.attributes.length;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tvar attribute = xmlNode.attributes[i];\r\n\t\t\t\tjsonNode[attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar length = xmlNode.childNodes.length;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tparseNode(xmlNode.childNodes[i], jsonNode);\r\n\t\t}\r\n\t}\r\n\r\n\tvar result = {};\r\n\tif (dom.childNodes.length) {\r\n\t\tparseNode(dom.childNodes[0], result);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n"],"sourceRoot":""}